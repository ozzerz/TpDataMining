{
  "comments": [
    "Note that it does not matter if the inner class has been defined before or after\nthe (main) public class. I\u0027ve put it under UI (because of the link and the\npopup) but this might also be a Core or Debug bug.\n\n/*\n* Output of running as application:\n*\n* Exception in thread \"main\" java.lang.Error\n* at B.\u003cinit\u003e(A.java:17)\n* at A.main(A.java:23)\n*\n* Clicking on line 2 at B.\u003cinit\u003e(A.java:17) will show popup with error\n*\n* Information\n* Source not found for B\n*/\nclass B {\n   public B() {\n       throw new Error();\n   }\n}\n\npublic class A {\n   public static void main(String[] args) {\n       new B();\n   }\n}\n\nTested versions (Windows)\n2.1.3 stable\n3.0.1 stable\n\nVersion: 3.1.0 (M3)\nBuild id: 200411050810",
    "*** Bug 83604 has been marked as a duplicate of this bug. ***",
    "*** Bug 81858 has been marked as a duplicate of this bug. ***",
    "Here is another slightly different example of the bug (tested on 3.0.2 on\nWindows \u0026 Linux)...\n\n\npublic class InnerClassStackTraceBug\n{\n    public static void main (String[] args)\n    {\n        class InnerClass\n        {\n            InnerClass ()\n            {\n                throw new Error (\"Cannot navigate the stack trace caused by this\nline.\");\n                \n                // If you run this program, you get the following stack trace in the\n                // Eclipse console window:\n                \n                // Exception in thread \"main\" java.lang.Error: Cannot navigate\nthe stack trace caused by this line.\n                //     at\nInnerClassStackTraceBug$1$InnerClass.\u003cinit\u003e(InnerClassStackTraceBug.java:10)\n                //     at\nInnerClassStackTraceBug.main(InnerClassStackTraceBug.java:14)\n                \n                // If you try and navigate to the throw line above by clicking\non the stack trace,\n                // Eclipse fails to decode the name mangling used for the named\ninner class and\n                // puts up an error dialog saying \"Source not found for\nInnerClassStackTraceBug$1\".\n            }\n        }\n        \n        new InnerClass ();\n    }\n    \n}\n",
    "JavaStackTraceHyperlink gets its SourceLocator from the Process\u0027 Launch. This SourceLocator is not \nproperly finding B (from case described in comment #0)\n\nThe case described in Comment #3 works for me.",
    "Fixed in JavaStackTraceHyperlink. ",
    "Darin, please verify",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-12-03T23:39:17+01:00",
    "2005-01-25T15:47:35+01:00",
    "2005-04-04T18:55:35+02:00",
    "2005-04-28T14:39:38+02:00",
    "2005-05-03T00:39:23+02:00",
    "2005-05-05T18:33:07+02:00",
    "2005-05-05T18:33:30+02:00",
    "2005-05-06T19:55:38+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Error",
      "message": "Cannot navigate the stack trace caused by this line.                 //",
      "elements": [
        {
          "method": "InnerClassStackTraceBug$1$InnerClass.\u003cinit\u003e",
          "source": "InnerClassStackTraceBug.java:10"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "80191",
      "date": "2005-04-28T14:39:38+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "80191",
  "bugId": "80191",
  "date": "2004-12-03T23:39:17+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}