{
  "comments": [
    "i20040413\n\nInstalling a plugin that does not declare a version causes a NPE to happen\nduring the conversion (see below). We should handle invalid manifests properly\nto avoid any kinds of runtime exceptions in our code.\n\njava.lang.NullPointerException\n\tat java.util.Hashtable.put(Hashtable.java:393)\n\tat\norg.eclipse.core.runtime.adaptor.PluginConverterImpl.generateHeaders(PluginConverterImpl.java:280)\n\tat\norg.eclipse.core.runtime.adaptor.PluginConverterImpl.fillManifest(PluginConverterImpl.java:206)\n\tat\norg.eclipse.core.runtime.adaptor.PluginConverterImpl.convertManifest(PluginConverterImpl.java:644)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseBundleData.generateManifest(EclipseBundleData.java:193)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseBundleData.loadManifest(EclipseBundleData.java:172)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseBundleData.getManifest(EclipseBundleData.java:156)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseBundleData.loadFromManifest(EclipseBundleData.java:231)\n\tat\norg.eclipse.osgi.framework.internal.defaultadaptor.DefaultBundleData.initializeNewBundle(DefaultBundleData.java:84)\n\tat\norg.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor$1.begin(DefaultAdaptor.java:438)\n\tat\norg.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged(Framework.java:718)\n\tat org.eclipse.osgi.framework.internal.core.Framework$1.run(Framework.java:610)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat\norg.eclipse.osgi.framework.internal.core.Framework.installWorker(Framework.java:688)\n\tat\norg.eclipse.osgi.framework.internal.core.Framework.installBundle(Framework.java:605)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleContext.installBundle(BundleContext.java:207)\n\tat\norg.eclipse.osgi.tests.BundleTestingHelper.installBundle(BundleTestingHelper.java:26)\n\tat\norg.eclipse.osgi.tests.internal.plugins.InstallTests.testInstallLocationWithSpaces(InstallTests.java:31)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:410)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:294)\n\tat\norg.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)\n\tat\norg.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:26)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:280)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:241)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:267)\n\tat org.eclipse.core.launcher.Main.run(Main.java:692)\n\tat org.eclipse.core.launcher.Main.main(Main.java:676)",
    "I believe there is (or should be) some spec\u0027d behaviour when no version is \ngiven.  for exmaple, the version should be assumed to be 0.0.0 or some such.\nThis may be in RFC70?\n",
    "Here is what the RFC states: If a Bundle-Version manifest header is not \nspecified then the bundle is considered to have a version of ?0.0.0?.\n\nJust confirming Jeffs comment 1.",
    "In plug-in manifests, the version identifier (plugin name and plugin identifier\nas well) is mandatory. Not sure it makes sense to take the OSGi rules into\naccount in this matter. In other words, I believe the plugin converter should\nfollow the plugin manifest spec when reading plugin manifests:\n\nhttp://help.eclipse.org/help21/topic/org.eclipse.platform.doc.isv/reference/misc/plugin_manifest.html",
    "Fixed and released to HEAD. If a plugin manifest does not have the required\nattributes in the plugin elelement we will not convert it."
  ],
  "commentCreationDates": [
    "2004-04-14T00:16:10+02:00",
    "2004-04-14T16:55:08+02:00",
    "2004-04-14T18:08:46+02:00",
    "2004-04-14T23:17:59+02:00",
    "2004-04-24T00:58:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.Hashtable.put",
          "source": "Hashtable.java:393"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.PluginConverterImpl.generateHeaders",
          "source": "PluginConverterImpl.java:280"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.PluginConverterImpl.fillManifest",
          "source": "PluginConverterImpl.java:206"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.PluginConverterImpl.convertManifest",
          "source": "PluginConverterImpl.java:644"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseBundleData.generateManifest",
          "source": "EclipseBundleData.java:193"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseBundleData.loadManifest",
          "source": "EclipseBundleData.java:172"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseBundleData.getManifest",
          "source": "EclipseBundleData.java:156"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseBundleData.loadFromManifest",
          "source": "EclipseBundleData.java:231"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.defaultadaptor.DefaultBundleData.initializeNewBundle",
          "source": "DefaultBundleData.java:84"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.defaultadaptor.DefaultAdaptor$1.begin",
          "source": "DefaultAdaptor.java:438"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged",
          "source": "Framework.java:718"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework$1.run",
          "source": "Framework.java:610"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installWorker",
          "source": "Framework.java:688"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installBundle",
          "source": "Framework.java:605"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContext.installBundle",
          "source": "BundleContext.java:207"
        },
        {
          "method": "org.eclipse.osgi.tests.BundleTestingHelper.installBundle",
          "source": "BundleTestingHelper.java:26"
        },
        {
          "method": "org.eclipse.osgi.tests.internal.plugins.InstallTests.testInstallLocationWithSpaces",
          "source": "InstallTests.java:31"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:154"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:127"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:118"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:208"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:203"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:208"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:203"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:410"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:294"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:30"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run",
          "source": "CoreTestApplication.java:26"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:280"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:241"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:267"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:692"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:676"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "58389",
      "date": "2004-04-14T00:16:10+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "58389",
  "bugId": "58389",
  "date": "2004-04-14T00:16:10+02:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}