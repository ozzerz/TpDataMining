{
  "comments": [
    "I want to use F1 for a specific behaviour in a view. I want my action for F1 to override the Eclipse default behaviour of displaying help. The behaviour I am experiencing is that both my action is called and the Eclipse help window is displayed.\n\nIn my view class, I activate the context I created for my F1 action:\n\nIContextService contextService \u003d (IContextService) PlatformUI\n\t\t.getWorkbench().getService(IContextService.class);\nIContextActivation activation \u003d contextService\n\t\t.activateContext(\"KeyAccPrj.context1\");\n\t\t\nSampleAction sampleAction \u003d new SampleAction();\nIHandlerService handlerService \u003d \n\t(IHandlerService)getViewSite().getService(IHandlerService.class);\nhandlerService.activateHandler(sampleAction.getActionDefinitionId(), \n\tnew ActionHandler(sampleAction));\n\nI have associated the action with the command id: \nsetActionDefinitionId(\"KeyAccPrj.command1\");\n\nBelow is the definition for my command, key, context in the plugin.xml file.  \n   \u003cextension\n        point\u003d\"org.eclipse.ui.commands\"\u003e\n        \u003ccategory\n        \tid\u003d\"myCategory.commands\"\n        \tdescription\u003d\"My Commands\"\n        \tname \u003d \"My commands category\"\u003e\n        \u003c/category\u003e\t\n        \u003ccommand\n        \tcategoryId\u003d\"myCategory.commands\"\n        \tdescription\u003d\"Some command\"\n        \tid\u003d\"KeyAccPrj.command1\"\n        \tname\u003d\"My sample command\"\u003e\n        \u003c/command\u003e\n   \u003c/extension\u003e\n   \u003cextension\n  \t\tpoint\u003d\"org.eclipse.ui.bindings\"\u003e\t\n  \t\t\u003ckey\n          commandId\u003d\"KeyAccPrj.command1\"\n          contextId\u003d\"KeyAccPrj.context1\"\n          schemeId\u003d\"org.eclipse.ui.defaultAcceleratorConfiguration\"\n          sequence\u003d\"F1\"/\u003e\n   \u003c/extension\u003e\n   \u003cextension\n         point\u003d\"org.eclipse.ui.contexts\"\u003e\n      \u003ccontext\n            id\u003d\"KeyAccPrj.context1\"\n            name\u003d\"KeyAccPrj Context\"/\u003e\n   \u003c/extension\u003e\n\nHowever, associating a context with my key doesn\u0027t make any difference.",
    "This is not critical (i.e. crash, loss of data).",
    "(In reply to comment #0)\n\u003e In my view class, I activate the context I created for my F1 action:\n\u003e \n\u003e IContextService contextService \u003d (IContextService) PlatformUI\n\u003e                 .getWorkbench().getService(IContextService.class);\n\u003e IContextActivation activation \u003d contextService\n\u003e                 .activateContext(\"KeyAccPrj.context1\");\n\nJust as an aside, this context will always be active, and is not tied to a particular parent context.\n\nWhy not use getViewSite().getService(*) as in your IHandlerService?\n\nPW\n\n\n",
    "(In reply to comment #2)\nIt\u0027s true, I have tried getViewSite().getService(*) as well, it doesn\u0027t make a difference though.   \n\nThere are 2 other contexts active in my view: \"org.eclipse.ui.contexts.dialogAndWindow\" and \"org.eclipse.ui.contexts.window\" as I could see calling the contextService.getActiveContextIds() method. \n\nI also set the parent for my context with each of the above contexts, hoping that my context will override the parent context. Same result, both the Eclipse F1 help is displayed and my action run. \n\nI also tried to deactivate the other active contexts in my view before activating my context:   \ncontextService.deactivateContexts(contextService.getActiveContextIds());\n\nIn this case I got an exception when I open my view: \njava.lang.ClassCastException: java.lang.String\n\tat org.eclipse.ui.internal.contexts.SlaveContextService.deactivateContexts(SlaveContextService.java:225)\n\tat keyaccprj.views.SampleView.createPartControl(SampleView.java:145)\n\nAm I allowed to do this? Do I have to activate/deactivate directly the contexts? \n\nConform to the documentation: \n\"When a context is associated with a key binding, the key binding will only be active when the user is in that context.\"  \n\nSo, I assume I should have only one context active in my view to get the intended behaviour.\n\nI also found this bug related to the key bindings problem:\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d154130\n      ",
    "(In reply to comment #3)\n\u003e Am I allowed to do this? Do I have to activate/deactivate directly the\n\u003e contexts? \n\nNo, you can only deactivate contexts that you activate yourself.\n\n\n\u003e Conform to the documentation: \n\u003e \"When a context is associated with a key binding, the key binding will only be\n\u003e active when the user is in that context.\"  \n\u003e \n\u003e So, I assume I should have only one context active in my view to get the\n\u003e intended behaviour.\n\nIt\u0027s OK to have multiple contexts active ... for normal operation of your context in your view, you would have at least \"org.eclipse.ui.contexts.dialogAndWindow\", \"org.eclipse.ui.contexts.window\", and \n\"KeyAccPrj.context1\" active.\n\nIt could be a key binding conflict ... if Help is defined as F1 in \"org.eclipse.ui.contexts.dialogAndWindow\" and your command is defined as F1 in \"KeyAccPrj.context1\" then you would potentially have a keybinding conflict.  \n\n1) can you check the keybindings?  Go to Window\u003ePreferences\u003eGeneral\u003eKeys.  See if Help and your command both show up against F1.\n\n2) you can run with some tracing to let me know what it\u0027s doing, a la http://wiki.eclipse.org/index.php/Platform_UI_Command_Design#Tracing_Option\n\nYour debug options would be:\norg.eclipse.ui/debug\u003dtrue\norg.eclipse.ui/trace/keyBindings\u003dtrue\norg.eclipse.ui/trace/keyBindings.verbose\u003dtrue\norg.eclipse.ui/trace/contexts\u003dtrue\norg.eclipse.ui/trace/contexts.verbose\u003dtrue\n\nWhen you press F1, what does KEYS report?\n\nThanx,\nPW\n",
    "Created an attachment (id\u003d48440)\nKeys\n\n",
    "For the key bindings, please see the attachement. There is no key conflict. However, somehow the Eclipse help is displayed. Is it possible to be displayed outside of the commands/key bindings framework? \n\nI have problems setting the debug configuration that you asked me for. I will try again tomorrow and get back to you. \n\nI would like to emphasize that I need to have specific behaviour for the functional keys(including F1) in a view. I want to use the functional keys for my own actions. Is there any way to override the behaviour for these keys defined by Eclipse/other plugins only for my view? My understanding was that contexts would be a way to do this. You pointed out in the last comment that at least 3 contexts would be available at the same time.\n\nIsnt\u0027t the whole commands/key binding API the way to avoid conflicts between key accelerators defined by different plugins allowing certain key accelerators to be available in a specific context?\n\nThank you.  \n",
    "(In reply to comment #6)\n\u003e For the key bindings, please see the attachement. There is no key conflict.\n\u003e However, somehow the Eclipse help is displayed. Is it possible to be displayed\n\u003e outside of the commands/key bindings framework? \n\nI\u0027ll have a look (and run some tests) this morning.\n\n\n\u003e Isnt\u0027t the whole commands/key binding API the way to avoid conflicts between\n\u003e key accelerators defined by different plugins allowing certain key accelerators\n\u003e to be available in a specific context?\n\u003e \n\nActually, it\u0027s hierarchical Schemes that can allow keybindings to be overridden.  For example, the emacs scheme is a child of the default scheme (org.eclipse.ui.defaultAcceleratorConfiguration).  It inherits all of the default keybindings, but emacs keybindings take precedence over default keybindings.\n\nContexts are a way to manage keybindings within a scheme, it\u0027s true, but for example, a keybinding defined in dialogsAndWindows will always be defined and that makes it extremely hard to override.\n\nPW\n\n",
    "When I run your test with my example:\n   \u003cextension\n         point\u003d\"org.eclipse.ui.bindings\"\u003e\n      \u003ckey\n            commandId\u003d\"z.ex.view.keybindings.remove.cmd\"\n            contextId\u003d\"z.ex.view.keybindings.remove.context\"\n            schemeId\u003d\"org.eclipse.ui.defaultAcceleratorConfiguration\"\n            sequence\u003d\"F1\"\u003e\n      \u003c/key\u003e\n   \u003c/extension\u003e\n   \u003cextension\n         point\u003d\"org.eclipse.ui.contexts\"\u003e\n      \u003ccontext\n            description\u003d\"Remove the Taco Context\"\n            id\u003d\"z.ex.view.keybindings.remove.context\"\n            name\u003d\"RemoveContext\"\n            parentId\u003d\"org.eclipse.ui.contexts.window\"\u003e\n      \u003c/context\u003e\n   \u003c/extension\u003e\n\nAnd my view createPartControl(*) has:\nIContextService contextService \u003d (IContextService) getSite()\n    .getService(IContextService.class);\ncontextService.activateContext(\"z.ex.view.keybindings.remove.context\");\n\nMy F1 does nothing in the Outline View or Package Explorer:\nCONTEXTS \u003e\u003e\u003e [org.eclipse.ui.contexts.dialogAndWindow, org.eclipse.ui.contexts.window]\nBINDINGS \u003e\u003e\u003e Cache hit\nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x100000a, time \u003d 79174170, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F1, ])\n\nbut works when my view is active:\nCONTEXTS \u003e\u003e\u003e [org.eclipse.ui.contexts.dialogAndWindow, z.ex.view.keybindings.remove.context, org.eclipse.ui.contexts.window]\nBINDINGS \u003e\u003e\u003e Cache hit\nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x100000a, time \u003d 79176990, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F1, ])\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.executeCommand(commandId \u003d \u0027z.ex.view.keybindings.remove.cmd\u0027, parameters \u003d {})\n\nPressing F1 in my vanilla eclipse does nothing ... what does it do in your eclipse?\n\nPW\n",
    "This is the trace log when I press F1 in my view. It executes my command(the message printed to the output).  \n\nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x100000a, time \u003d 173584765, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F1, ])\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.executeCommand(commandId \u003d \u0027KeyAccPrj.command1\u0027, parameters \u003d {})\nSample... action!\n\nThe log when I press F1 in Outline View:  \nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x100000a, time \u003d 174104765, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F1, ])\nThe behaviour in this case is displaying the Eclipse help window. \n\nThe same behaviour(help is displayed) I get when I press F1 in Package Explorer. \nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x100000a, time \u003d 174206671, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F1, ])\n\nSo, for me, when I press F1 in eclipse, I get the Help window displayed, still, I cannot see any command associated with the F1 help in the trace log. \n\n\n\n \n",
    "I tested hierarchical schemes as you suggested to override the F1 key binding fromt he default scheme. \n\nI have defined my own scheme having as a parent the default scheme and I have specified for my F1 key binding to be used in my scheme.   \n\n\u003cextension\n\tpoint\u003d\"org.eclipse.ui.bindings\"\u003e\t\n \t\t\u003ckey\n          commandId\u003d\"KeyAccPrj.command1\"\n          contextId\u003d\"KeyAccPrj.context1\"\n          schemeId\u003d\"KeyAccPrj.scheme1\"\n          sequence\u003d\"F1\"/\u003e\n    \u003cscheme\n          id\u003d\"KeyAccPrj.scheme1\"\n          name\u003d\"KeyAccPrj.scheme1\"\n          parentId\u003d\"org.eclipse.ui.defaultAcceleratorConfiguration\"/\u003e\n   \u003c/extension\u003e\n\nI have also activated my scheme from Preferences | Keys | Modify tab. \n\nI still get both my action running and the Eclipse F1 help displayed - here is no difference from not using a scheme. \n\nAnything else I can try to override the F1 default behavior?\n\nThank you.   ",
    "This is seeming more and more like a windows \"feature\", since F1 doesn\u0027t produce help on linux.\n\nI\u0027ll ask around today.\n\nPW\n",
    "See the comments for SWT.HELP ... if your F1 key says Help as well (we tested on a Windows XP machine) then pressing it will generate an SWT HelpEvent and any listeners (like WorkbenchHelpSystem) will request help.\n\nI\u0027m not sure how to treat the key as F1 and not Help.\n\nPW\n",
    "The problem is the same thing could happen with other keys as well. For example, if I want to use F11 and F12 for my own commands inside of the view, I get the F11 working properly, F12 is executing the Eclipse \"activate editor\" command.\n\nHere is the trace log when I tried:  \n\nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x1000015, time \u003d 708395187, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F12, ])\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.executeCommand(commandId \u003d \u0027org.eclipse.ui.window.activateEditor\u0027, parameters \u003d {})\nCOMMANDS \u003e\u003e\u003e execute \u003e\u003e\u003e starting: id\u003dorg.eclipse.ui.window.activateEditor; event\u003dExecutionEvent(Command(org.eclipse.ui.window.activateEditor,Activate Editor,Activate the editor,Category(org.eclipse.ui.category.window,Window,null,true),ActionHandler(org.eclipse.ui.internal.ActivateEditorAction@11bee48),null,null,true),{},Event {type\u003d1 Table {} time\u003d708395187 data\u003dnull x\u003d0 y\u003d0 width\u003d0 height\u003d0 detail\u003d0},org.eclipse.core.expressions.EvaluationContext@596a7a)\nCOMMANDS \u003e\u003e\u003e execute \u003e\u003e\u003e success: id\u003dorg.eclipse.ui.window.activateEditor; returnValue\u003dnull\nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x1000014, time \u003d 708424687, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F11, ])\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.executeCommand(commandId \u003d \u0027KeyAccPrj.command1\u0027, parameters \u003d {})\nCOMMANDS \u003e\u003e\u003e execute \u003e\u003e\u003e starting: id\u003dKeyAccPrj.command1; event\u003dExecutionEvent(Command(KeyAccPrj.command1,My sample command,Some command,Category(myCategory.commands,My commands category,My Commands,true),keyaccprj.actions.SampleHandler@fc4957,null,null,true),{},Event {type\u003d1 Table {} time\u003d708424687 data\u003dnull x\u003d0 y\u003d0 width\u003d0 height\u003d0 detail\u003d0},org.eclipse.core.expressions.EvaluationContext@1330af4)\nSample... action!\nCOMMANDS \u003e\u003e\u003e execute \u003e\u003e\u003e success: id\u003dKeyAccPrj.command1; returnValue\u003dnull\nKEYS \u003e\u003e\u003e Listener.handleEvent(type \u003d KeyDown, stateMask \u003d 0x0, keyCode \u003d 0x100000a, time \u003d 708438140, character \u003d 0x0)\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.press(potentialKeyStrokes \u003d [F1, ])\nKEYS \u003e\u003e\u003e WorkbenchKeyboard.executeCommand(commandId \u003d \u0027KeyAccPrj.command1\u0027, parameters \u003d {})\nCOMMANDS \u003e\u003e\u003e execute \u003e\u003e\u003e starting: id\u003dKeyAccPrj.command1; event\u003dExecutionEvent(Command(KeyAccPrj.command1,My sample command,Some command,Category(myCategory.commands,My commands category,My Commands,true),keyaccprj.actions.SampleHandler@fc4957,null,null,true),{},Event {type\u003d1 Table {} time\u003d708438140 data\u003dnull x\u003d0 y\u003d0 width\u003d0 height\u003d0 detail\u003d0},org.eclipse.core.expressions.EvaluationContext@17cd18d)\nSample... action!\nCOMMANDS \u003e\u003e\u003e execute \u003e\u003e\u003e success: id\u003dKeyAccPrj.command1; returnValue\u003dnull\n\nAgain, I do not have any association with F1 for help in Windows | Preferences | General | Keys. \n\nSo, I wonder, how the association between F1 and help is done, and, more generally, what is the relationship between the Eclipse commands and this key bindings framework is working? It has to be a way to define my own key accelerators set for my commands in a specific context, regardless the Eclipse defined commands /accelerators. \n\n\n\n\n",
    "Since F1 is the help key, you cannot use it for anything other than help.\n\nPW\n",
    "*** Bug 141217 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2006-08-22T20:18:56+02:00",
    "2006-08-22T23:18:03+02:00",
    "2006-08-23T00:32:15+02:00",
    "2006-08-23T02:46:50+02:00",
    "2006-08-23T03:01:37+02:00",
    "2006-08-23T07:17:36+02:00",
    "2006-08-23T07:32:27+02:00",
    "2006-08-23T13:50:02+02:00",
    "2006-08-23T15:38:52+02:00",
    "2006-08-23T19:18:19+02:00",
    "2006-08-23T20:51:16+02:00",
    "2006-08-28T14:18:41+02:00",
    "2006-08-29T21:39:29+02:00",
    "2006-08-30T00:06:38+02:00",
    "2006-09-28T21:10:32+02:00",
    "2006-10-02T16:14:19+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "java.lang.String",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.contexts.SlaveContextService.deactivateContexts",
          "source": "SlaveContextService.java:225"
        },
        {
          "method": "keyaccprj.views.SampleView.createPartControl",
          "source": "SampleView.java:145"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "154727",
      "date": "2006-08-23T02:46:50+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "154727",
  "bugId": "154727",
  "date": "2006-08-22T20:18:56+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}