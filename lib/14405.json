{
  "comments": [
    "I got a widget is disposed error when I saved a .java File. I had just \norganzied my imports and then I saved. Contents of the file are at the end of \nthe PR\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003clog\u003e\n\u003clog-entry date\u003d\"Tue Apr 23 09:25:00 EDT 2002\"\u003e\n  \u003cstatus\n     plugin-id\u003d\"org.eclipse.core.resources\"\n     severity\u003d\"WARNING\"\n     message\u003d\"Problems occurred when invoking code from plug-in: \norg.eclipse.core.resources.\"\n     code\u003d\"2\"\u003e\n    \u003cexception\n       message\u003d\"Widget is disposed\"\n       trace\u003d\"\norg.eclipse.swt.SWTException: Widget is disposed\n\tat org.eclipse.swt.SWT.error(SWT.java:1887)\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat \norg.eclipse.pde.internal.ui.editor.manifest.AlertSection.resourceChanged\n(AlertSection.java:261)\n\tat org.eclipse.core.internal.events.NotificationManager$1.run\n(NotificationManager.java:123)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:782)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:411)\n\tat org.eclipse.core.internal.events.NotificationManager.notify\n(NotificationManager.java:138)\n\tat org.eclipse.core.internal.events.NotificationManager.broadcastChanges\n(NotificationManager.java:62)\n\tat org.eclipse.core.internal.resources.Workspace.broadcastChanges\n(Workspace.java:133)\n\tat org.eclipse.core.internal.resources.Workspace.endOperation\n(Workspace.java:755)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1352)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run\n(WorkspaceModifyOperation.java:78)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)\n\"\u003e\n    \u003c/exception\u003e\n  \u003c/status\u003e\n\u003c/log-entry\u003e\n\u003clog-entry date\u003d\"Tue Apr 23 09:59:55 EDT 2002\"\u003e\n  \u003cstatus\n     plugin-id\u003d\"org.eclipse.core.resources\"\n     severity\u003d\"INFO\"\n     message\u003d\"Save Failed\"\n     code\u003d\"4\"\u003e\n  \u003c/status\u003e\n\u003c/log-entry\u003e\n\u003clog-entry date\u003d\"Tue Apr 23 09:59:55 EDT 2002\"\u003e\n  \u003cstatus\n     plugin-id\u003d\"org.eclipse.ui\"\n     severity\u003d\"WARNING\"\n     message\u003d\"Save Failed\"\n     code\u003d\"0\"\u003e\n    \u003cexception\n       message\u003d\"Failed to execute runnable (java.lang.ClassCastException: \njava.lang.Object)\"\n       trace\u003d\"\norg.eclipse.swt.SWTException: Failed to execute runnable \n(java.lang.ClassCastException: java.lang.Object)\n\tat org.eclipse.swt.SWT.error(SWT.java:1887)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages\n(Synchronizer.java(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop\n(EventLoopProgressMonitor.java:89)\n\tat org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.subTask\n(EventLoopProgressMonitor.java:119)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.subTask\n(ProgressMonitorWrapper.java:115)\n\tat org.eclipse.core.runtime.SubProgressMonitor.subTask\n(SubProgressMonitor.java:156)\n\tat org.eclipse.core.internal.resources.Workspace.endOperation\n(Workspace.java:761)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1352)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run\n(WorkspaceModifyOperation.java:78)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation\n(AbstractTextEditor.java:1927)\n\tat \norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio\nn(CompilationUnitEditor.java:579)\n\tat org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave\n(CompilationUnitEditor.java:627)\n\tat org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:811)\n\tat org.eclipse.jface.operation.ModalContext.runInCurrentThread\n(ModalContext.java:296)\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)\n\tat org.eclipse.jface.dialogs.ProgressMonitorDialog.run\n(ProgressMonitorDialog.java:335)\n\tat org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation\n(EditorManager.java:689)\n\tat org.eclipse.ui.internal.EditorManager.saveEditor\n(EditorManager.java:816)\n\tat org.eclipse.ui.internal.WorkbenchPage.saveEditor\n(WorkbenchPage.java:1802)\n\tat org.eclipse.ui.texteditor.SaveAction.run(SaveAction.java:41)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:590)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:407)\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:816)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:643)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:195)\n\tat org.eclipse.core.launcher.Main.run(Main.java:541)\n\tat org.eclipse.core.launcher.Main.main(Main.java:396)\n\"\u003e\n    \u003c/exception\u003e\n  \u003c/status\u003e\n\u003c/log-entry\u003e\n\npackage org.eclipse.ui.wizards.datatransfer;\n\n/*\n * (c) Copyright IBM Corp. 2000, 2002.\n * All Rights Reserved.\n */\nimport java.io.File;\nimport java.io.FileFilter;\nimport java.lang.reflect.InvocationTargetException;\n\nimport org.eclipse.core.resources.*;\nimport org.eclipse.core.runtime.*;\nimport org.eclipse.jface.dialogs.*;\nimport org.eclipse.jface.wizard.WizardPage;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.*;\nimport org.eclipse.ui.actions.WorkspaceModifyOperation;\nimport org.eclipse.ui.help.WorkbenchHelp;\nimport org.eclipse.ui.internal.IHelpContextIds;\nimport org.eclipse.ui.internal.WorkbenchPlugin;\n\n/**\n * Standard main page for a wizard that creates a project resource from\n * whose location already contains a project.\n * \u003cp\u003e\n * This page may be used by clients as-is; it may be also be subclassed to suit.\n * \u003c/p\u003e\n * \u003cp\u003e\n * Example useage:\n * \u003cpre\u003e\n * mainPage \u003d new WizardExternalProjectImportPage(\"basicNewProjectPage\");\n * mainPage.setTitle(\"Project\");\n * mainPage.setDescription(\"Create a new project resource.\");\n * \u003c/pre\u003e\n * \u003c/p\u003e\n */\npublic class WizardExternalProjectImportPage extends WizardPage {\n\n\tprivate FileFilter projectFilter \u003d new FileFilter() {\n\t\t\t//Only accept those files that are .project\n\tpublic boolean accept(File pathName) {\n\t\t\treturn pathName.getName().equals\n(IProjectDescription.DESCRIPTION_FILE_NAME);\n\t\t}\n\t};\n\n\t// initial value stores\n\tprivate String initialProjectFieldValue;\n\n\t// the value the user has entered\n\tprivate String customLocationFieldValue;\n\n\t// widgets\n\tprivate Text projectNameField;\n\tprivate Text locationPathField;\n\tprivate Label locationLabel;\n\tprivate Button browseButton;\n\n\tprivate Listener nameModifyListener \u003d new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tsetPageComplete(validatePage());\n\t\t}\n\t};\n\n\tprivate Listener locationModifyListener \u003d new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tsetPageComplete(validatePage());\n\t\t}\n\t};\n\n\t// constants\n\tprivate static final int SIZING_TEXT_FIELD_WIDTH \u003d 250;\n\tprivate static final int SIZING_INDENTATION_WIDTH \u003d 10;\n\t/**\n\t * Creates a new project creation wizard page.\n\t *\n\t * @param pageName the name of this page\n\t */\n\tpublic WizardExternalProjectImportPage() {\n\t\tsuper(\"wizardExternalProjectPage\"); //$NON-NLS-1$\n\t\tsetPageComplete(false);\n\t\tcustomLocationFieldValue \u003d \"\"; //$NON-NLS-1$\n\t\tsetTitle(\n\t\t\tDataTransferMessages.getString\n(\"WizardExternalProjectImportPage.title\")); //$NON-NLS-1$\n\t\tsetDescription(\n\t\t\tDataTransferMessages.getString\n(\"WizardExternalProjectImportPage.description\")); //$NON-NLS-1$\n\n\t}\n\t/** (non-Javadoc)\n\t * Method declared on IDialogPage.\n\t */\n\tpublic void createControl(Composite parent) {\n\t\tComposite composite \u003d new Composite(parent, SWT.NULL);\n\n\t\tWorkbenchHelp.setHelp(composite, \nIHelpContextIds.NEW_PROJECT_WIZARD_PAGE);\n\n\t\tcomposite.setLayout(new GridLayout());\n\t\tcomposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n\n\t\tcreateProjectNameGroup(composite);\n\t\tcreateProjectLocationGroup(composite);\n\t\tprojectNameField.setFocus();\n\t\tvalidatePage();\n\t\trestoreWidgetValues();\n\t\t// Show description on opening\n\t\tsetErrorMessage(null);\n\t\tsetMessage(null);\n\t\tsetControl(composite);\n\t}\n\n\t/**\n *\tUse the dialog store to restore widget values to the values that they \nheld\n *\tlast time this wizard was used to completion\n */\nprotected void restoreWidgetValues() {\n\tIDialogSettings settings \u003d getDialogSettings();\n\tif(settings !\u003d null) {\n\t\tString[] sourceNames \u003d settings.getArray(STORE_SOURCE_NAMES_ID);\n\t\tif (sourceNames \u003d\u003d null)\n\t\t\treturn;\t\t// ie.- no values stored, so stop\n\t\t\n\t\t// set all/specific types radios and related enablements\n\t\tboolean importAll \u003d settings.getBoolean\n(STORE_IMPORT_ALL_RESOURCES_ID);\n\t\timportAllResourcesRadio.setSelection(importAll);\n\t\timportTypedResourcesRadio.setSelection(!importAll);\n\n\t\t// set filenames history\n\t\tsourceNameField.setText(sourceNames[0]);\n\t\tfor (int i \u003d 0; i \u003c sourceNames.length; i++)\n\t\t\tsourceNameField.add(sourceNames[i]);\n\n\t\t// set selected types\n\t\tString[] selectedTypes \u003d settings.getArray\n(STORE_SELECTED_TYPES_ID);\n\t\tif (selectedTypes.length \u003e 0)\n\t\t\ttypesToImportField.setText(selectedTypes[0]);\n\t\tfor (int i \u003d 0; i \u003c selectedTypes.length; i++)\n\t\t\ttypesToImportField.add(selectedTypes[i]);\n\t\t\t\n\t\t// radio buttons and checkboxes\t\n\t\toverwriteExistingResourcesCheckbox.setSelection(\n\t\t\tsettings.getBoolean\n(STORE_OVERWRITE_EXISTING_RESOURCES_ID));\n\n\t\tcreateContainerStructureCheckbox.setSelection(\n\t\t\tsettings.getBoolean\n(STORE_CREATE_CONTAINER_STRUCTURE_ID));\n\t\t\n\t}\n}\n\n\n\t/**\n * \tSince Finish was pressed, write widget values to the dialog store so \nthat they\n *\twill persist into the next invocation of this wizard page\n */\nprotected void saveWidgetValues() {\n\tIDialogSettings settings \u003d getDialogSettings();\n\tif(settings !\u003d null) {\n\t\t// update source names history\n\t\tString[] sourceNames \u003d settings.getArray(STORE_SOURCE_NAMES_ID);\n\t\tif (sourceNames \u003d\u003d null)\n\t\t\tsourceNames \u003d new String[0];\n\n\t\tsourceNames \u003d addToHistory(sourceNames,getSourceDirectoryName\n());\n\t\tsettings.put(\n\t\t\tSTORE_SOURCE_NAMES_ID,\n\t\t\tsourceNames);\n\n\t\t// update specific types to import history\n\t\tString[] selectedTypesNames \u003d settings.getArray\n(STORE_SELECTED_TYPES_ID);\n\t\tif (selectedTypesNames \u003d\u003d null)\n\t\t\tselectedTypesNames \u003d new String[0];\n\n\t\tif (importTypedResourcesRadio.getSelection())\n\t\t\tselectedTypesNames \u003d addToHistory\n(selectedTypesNames,typesToImportField.getText());\n\t\t\t\n\t\tsettings.put(\n\t\t\tSTORE_SELECTED_TYPES_ID,\n\t\t\tselectedTypesNames);\n\n\t\t// radio buttons and checkboxes\t\n\t\tsettings.put(\n\t\t\tSTORE_IMPORT_ALL_RESOURCES_ID,\n\t\t\timportAllResourcesRadio.getSelection());\n\t\n\t\tsettings.put(\n\t\t\tSTORE_OVERWRITE_EXISTING_RESOURCES_ID,\n\t\t\toverwriteExistingResourcesCheckbox.getSelection());\n\n\t\tsettings.put(\n\t\t\tSTORE_CREATE_CONTAINER_STRUCTURE_ID,\n\t\t\tcreateContainerStructureCheckbox.getSelection());\n\t\n\t}\n}\n\n\t/**\n\t * Creates the project location specification controls.\n\t *\n\t * @param parent the parent composite\n\t */\n\tprivate final void createProjectLocationGroup(Composite parent) {\n\n\t\t// project specification group\n\t\tComposite projectGroup \u003d new Composite(parent, SWT.NONE);\n\t\tGridLayout layout \u003d new GridLayout();\n\t\tlayout.numColumns \u003d 3;\n\t\tprojectGroup.setLayout(layout);\n\t\tprojectGroup.setLayoutData(new GridData\n(GridData.FILL_HORIZONTAL));\n\n\t\t// new project label\n\t\tLabel projectContentsLabel \u003d new Label(projectGroup, SWT.NONE);\n\t\tprojectContentsLabel.setText(\n\t\t\tDataTransferMessages.getString(\n\t\t\t\n\t\"WizardExternalProjectImportPage.projectContentsLabel\")); //$NON-NLS-1$\n\n\t\tcreateUserSpecifiedProjectLocationGroup(projectGroup);\n\t}\n\t/**\n\t * Creates the project name specification controls.\n\t *\n\t * @param parent the parent composite\n\t */\n\tprivate final void createProjectNameGroup(Composite parent) {\n\t\t// project specification group\n\t\tComposite projectGroup \u003d new Composite(parent, SWT.NONE);\n\t\tGridLayout layout \u003d new GridLayout();\n\t\tlayout.numColumns \u003d 2;\n\t\tprojectGroup.setLayout(layout);\n\t\tprojectGroup.setLayoutData(new GridData\n(GridData.FILL_HORIZONTAL));\n\n\t\t// new project label\n\t\tLabel projectLabel \u003d new Label(projectGroup, SWT.NONE);\n\t\tprojectLabel.setText(\n\t\t\tDataTransferMessages.getString\n(\"WizardExternalProjectImportPage.nameLabel\")); //$NON-NLS-1$\n\n\t\t// new project name entry field\n\t\tprojectNameField \u003d new Text(projectGroup, SWT.BORDER);\n\t\tGridData data \u003d new GridData(GridData.FILL_HORIZONTAL);\n\t\tdata.widthHint \u003d SIZING_TEXT_FIELD_WIDTH;\n\t\tprojectNameField.setLayoutData(data);\n\n\t\t// Set the initial value first before listener\n\t\t// to avoid handling an event during the creation.\n\t\tif (initialProjectFieldValue !\u003d null)\n\t\t\tprojectNameField.setText(initialProjectFieldValue);\n\t\tprojectNameField.addListener(SWT.Modify, nameModifyListener);\n\t}\n\t/**\n\t * Creates the project location specification controls.\n\t *\n\t * @param projectGroup the parent composite\n\t * @param boolean - the initial enabled state of the widgets created\n\t */\n\tprivate void createUserSpecifiedProjectLocationGroup(Composite \nprojectGroup) {\n\n\t\t// project location entry field\n\t\tthis.locationPathField \u003d new Text(projectGroup, SWT.BORDER);\n\t\tGridData data \u003d new GridData(GridData.FILL_HORIZONTAL);\n\t\tdata.widthHint \u003d SIZING_TEXT_FIELD_WIDTH;\n\t\tthis.locationPathField.setLayoutData(data);\n\n\t\t// browse button\n\t\tthis.browseButton \u003d new Button(projectGroup, SWT.PUSH);\n\t\tthis.browseButton.setText(\n\t\t\tDataTransferMessages.getString\n(\"WizardExternalProjectImportPage.browseLabel\")); //$NON-NLS-1$\n\t\tthis.browseButton.addSelectionListener(new SelectionAdapter() {\n\t\t\tpublic void widgetSelected(SelectionEvent event) {\n\t\t\t\thandleLocationBrowseButtonPressed();\n\t\t\t}\n\t\t});\n\n\t\tlocationPathField.addListener(SWT.Modify, \nlocationModifyListener);\n\t}\n\t/**\n\t * Returns the current project location path as entered by \n\t * the user, or its anticipated initial value.\n\t *\n\t * @return the project location path, its anticipated initial value, or \n\u003ccode\u003enull\u003c/code\u003e\n\t *   if no project location path is known\n\t */\n\tpublic IPath getLocationPath() {\n\n\t\treturn new Path(getProjectLocationFieldValue());\n\t}\n\t/**\n\t * Creates a project resource handle for the current project name field \nvalue.\n\t * \u003cp\u003e\n\t * This method does not create the project resource; this is the \nresponsibility\n\t * of \u003ccode\u003eIProject::create\u003c/code\u003e invoked by the new project resource \nwizard.\n\t * \u003c/p\u003e\n\t *\n\t * @return the new project resource handle\n\t */\n\tpublic IProject getProjectHandle() {\n\t\treturn ResourcesPlugin.getWorkspace().getRoot().getProject\n(getProjectName());\n\t}\n\t/**\n\t * Returns the current project name as entered by the user, or its \nanticipated\n\t * initial value.\n\t *\n\t * @return the project name, its anticipated initial value, or \n\u003ccode\u003enull\u003c/code\u003e\n\t *   if no project name is known\n\t */\n\tpublic String getProjectName() {\n\t\tif (projectNameField \u003d\u003d null)\n\t\t\treturn initialProjectFieldValue;\n\n\t\treturn getProjectNameFieldValue();\n\t}\n\t/**\n\t * Returns the value of the project name field\n\t * with leading and trailing spaces removed.\n\t * \n\t * @return the project name in the field\n\t */\n\tprivate String getProjectNameFieldValue() {\n\t\tif (projectNameField \u003d\u003d null)\n\t\t\treturn \"\"; //$NON-NLS-1$\n\t\telse\n\t\t\treturn projectNameField.getText().trim();\n\t}\n\t/**\n\t * Returns the value of the project location field\n\t * with leading and trailing spaces removed.\n\t * \n\t * @return the project location directory in the field\n\t */\n\tprivate String getProjectLocationFieldValue() {\n\t\treturn locationPathField.getText().trim();\n\t}\n\t/**\n\t *\tOpen an appropriate directory browser\n\t */\n\tprivate void handleLocationBrowseButtonPressed() {\n\t\tDirectoryDialog dialog \u003d new DirectoryDialog\n(locationPathField.getShell());\n\t\tdialog.setMessage(\n\t\t\tDataTransferMessages.getString(\n\t\t\t\n\t\"WizardExternalProjectImportPage.directoryLabel\")); //$NON-NLS-1$\n\n\t\tString dirName \u003d getProjectLocationFieldValue();\n\t\tif (!dirName.equals(\"\")) { //$NON-NLS-1$\n\t\t\tFile path \u003d new File(dirName);\n\t\t\tif (path.exists())\n\t\t\t\tdialog.setFilterPath(new Path\n(dirName).toOSString());\n\t\t}\n\n\t\tString selectedDirectory \u003d dialog.open();\n\t\tif (selectedDirectory !\u003d null) {\n\t\t\tcustomLocationFieldValue \u003d selectedDirectory;\n\t\t\tlocationPathField.setText(customLocationFieldValue);\n\t\t\tsetProjectName(projectFile(customLocationFieldValue));\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this page\u0027s controls currently all contain valid \n\t * values.\n\t *\n\t * @return \u003ccode\u003etrue\u003c/code\u003e if all controls are valid, and\n\t *   \u003ccode\u003efalse\u003c/code\u003e if at least one is invalid\n\t */\n\tprivate boolean validatePage() {\n\t\tIWorkspace workspace \u003d WorkbenchPlugin.getPluginWorkspace();\n\n\t\t//If it is empty try to give something meaningful\n\t\tif (getProjectNameFieldValue().equals(\"\")) //$NON-NLS-1$\n\t\t\tsetProjectName(projectFile(locationPathField.getText\n()));\n\n\t\tString projectFieldContents \u003d getProjectNameFieldValue();\n\t\t\t\t\n\t\t//If it is still empty show the error\n\t\tif (projectFieldContents.equals(\"\")) { //$NON-NLS-1$\n\t\t\tsetErrorMessage(null);\n\t\t\tsetMessage(\n\t\t\t\tDataTransferMessages.getString(\n\t\t\t\t\n\t\"WizardExternalProjectImportPage.projectNameEmpty\")); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\n\t\tIStatus nameStatus \u003d\n\t\t\tworkspace.validateName(projectFieldContents, \nIResource.PROJECT);\n\t\tif (!nameStatus.isOK()) {\n\t\t\tsetErrorMessage(nameStatus.getMessage());\n\t\t\treturn false;\n\t\t}\n\n\t\tString locationFieldContents \u003d getProjectLocationFieldValue();\n\n\t\tif (locationFieldContents.equals(\"\")) { //$NON-NLS-1$\n\t\t\tsetErrorMessage(null);\n\t\t\tsetMessage(\n\t\t\t\tDataTransferMessages.getString(\n\t\t\t\t\n\t\"WizardExternalProjectImportPage.projectLocationEmpty\")); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\n\t\tIPath path \u003d new Path(\"\"); //$NON-NLS-1$\n\t\tif (!path.isValidPath(locationFieldContents)) {\n\t\t\tsetErrorMessage(\n\t\t\t\tDataTransferMessages.getString(\n\t\t\t\t\n\t\"WizardExternalProjectImportPage.locationError\")); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\t\tif (isPrefixOfRoot(getLocationPath())) {\t\t\t\n\t\t\t\n\t\t\t//If the name does not match the last segment stop it\n\t\t\tif(!checkDefaultProjectValue(locationFieldContents)){\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\tDataTransferMessages.getString(\n\t\t\t\t\t\n\t\"WizardExternalProjectImportPage.defaultLocationError\")); //$NON-NLS-1$\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse // Outside of the prefix so this is enabled\n\t\t\tlocationPathField.setEditable(true);\n\n\t\tif (getProjectHandle().exists()) {\n\t\t\tsetErrorMessage(\n\t\t\t\tDataTransferMessages.getString(\n\t\t\t\t\n\t\"WizardExternalProjectImportPage.projectExistsMessage\")); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\n\t\tif (projectFile(locationFieldContents) \u003d\u003d null) {\n\t\t\tsetErrorMessage(\n\t\t\t\tDataTransferMessages.format(\n\t\t\t\t\n\t\"WizardExternalProjectImportPage.notAProject\", //$NON-NLS-1$\n\t\t\t\t\tnew String[] { \nlocationFieldContents }));\n\t\t\treturn false;\n\t\t}\n\n\t\tsetErrorMessage(null);\n\t\tsetMessage(null);\n\t\treturn true;\n\t}\n\t\n\t/**\n\t * Check that the name of the project equals the last segment\n\t * of the location path - i.e. it is the default value.\n\t * If it is disable the name field and return true.\n\t * If not return false\n\t */\n\tprivate boolean checkDefaultProjectValue(String locationFieldContents){\n\t\tIPath locationPath \u003d new Path(locationFieldContents);\n\t\tif(locationPath.lastSegment().equals(getProjectNameFieldValue\n())){\n\t\t\tprojectNameField.setEditable(false);\n\t\t\treturn true;\n\t\t}\n\t\tprojectNameField.setEditable(true);\n\t\treturn false;\n\t}\n\t\t\t\n\t/**\n\t * Return whether or not the specifed location is a prefix\n\t * of the root.\n\t */\n\tprivate boolean isPrefixOfRoot(IPath locationPath) {\n\t\treturn Platform.getLocation().isPrefixOf(locationPath);\n\t}\n\n\t/**\n\t * Set the project name using either the name of the\n\t * parent of the file or the name entry in the xml for \n\t * the file\n\t */\n\tprivate void setProjectName(File projectFile) {\n\n\t\t//If there is no file or the user has already specified forget \nit\n\t\tif (projectFile \u003d\u003d null || projectNameField.getText().length() \n\u003e 0)\n\t\t\treturn;\n\n\t\tFile parent \u003d projectFile.getParentFile();\n\t\tif (parent \u003d\u003d null)\n\t\t\treturn;\n\t\tString defaultName \u003d parent.getName();\n\t\tprojectNameField.setText(defaultName);\n\t}\n\n\t/**\n\t * Return a.project file from the specified location.\n\t * If there isn\u0027t one return null.\n\t */\n\tprivate File projectFile(String locationFieldContents) {\n\t\tFile directory \u003d new File(locationFieldContents);\n\t\tif (directory.isFile())\n\t\t\treturn null;\n\n\t\tFile[] files \u003d directory.listFiles(this.projectFilter);\n\t\tif (files !\u003d null \u0026\u0026 files.length \u003d\u003d 1)\n\t\t\treturn files[0];\n\t\telse\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a new project resource with the selected name.\n\t * \u003cp\u003e\n\t * In normal usage, this method is invoked after the user has pressed \nFinish on\n\t * the wizard; the enablement of the Finish button implies that all \ncontrols\n\t * on the pages currently contain valid values.\n\t * \u003c/p\u003e\n\t *\n\t * @return the created project resource, or \u003ccode\u003enull\u003c/code\u003e if the \nproject\n\t *    was not created\n\t */\n\tIProject createExistingProject() {\n\n\t\tString projectName \u003d projectNameField.getText();\n\t\tfinal IWorkspace workspace \u003d ResourcesPlugin.getWorkspace();\n\t\tfinal IProject project \u003d workspace.getRoot().getProject\n(projectName);\n\t\t// get a project descriptor\n\t\tfinal IProjectDescription description \u003d\n\t\t\tworkspace.newProjectDescription(projectName);\n\t\tIPath locationPath \u003d getLocationPath();\n\t\t//If it is under the root use the default location\n\t\tif(isPrefixOfRoot(locationPath))\n\t\t\tdescription.setLocation(null);\n\t\telse\n\t\t\tdescription.setLocation(locationPath);\n\n\t\t// create the new project operation\n\t\tWorkspaceModifyOperation op \u003d new WorkspaceModifyOperation() {\n\t\t\tprotected void execute(IProgressMonitor monitor) throws \nCoreException {\n\t\t\t\tmonitor.beginTask(\"\", 2000); //$NON-NLS-1$\n\t\t\t\tproject.create(description, new \nSubProgressMonitor(monitor, 1000));\n\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\tthrow new OperationCanceledException();\n\t\t\t\tproject.open(new SubProgressMonitor(monitor, \n1000));\n\n\t\t\t}\n\t\t};\n\n\t\t// run the new project creation operation\n\t\ttry {\n\t\t\tgetContainer().run(true, true, op);\n\t\t} catch (InterruptedException e) {\n\t\t\treturn null;\n\t\t} catch (InvocationTargetException e) {\n\t\t\t// ie.- one of the steps resulted in a core exception\t\n\t\t\tThrowable t \u003d e.getTargetException();\n\t\t\tif (t instanceof CoreException) {\n\t\t\t\tif (((CoreException) t).getStatus().getCode()\n\t\t\t\t\t\u003d\u003d IResourceStatus.CASE_VARIANT_EXISTS) \n{\n\t\t\t\t\tMessageDialog\n\t\t\t\t\t\t.openError(\n\t\t\t\t\t\t\tgetShell(),\n\t\t\t\t\t\t\n\tDataTransferMessages.getString\n(\"WizardExternalProjectImportPage.errorMessage\"), //$NON-NLS-1$\n\t\t\t\t\t\t\n\tDataTransferMessages.getString(\n\t\t\t\t\t\t\t\n\t\"WizardExternalProjectImportPage.caseVariantExistsError\") //$NON-NLS-1$,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tErrorDialog.openError(\n\t\t\t\t\t\tgetShell(),\n\t\t\t\t\t\tDataTransferMessages.getString\n(\"WizardExternalProjectImportPage.errorMessage\"), //$NON-NLS-1$\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t((CoreException) t).getStatus\n());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tsaveWidgetValues();\n\t\treturn project;\n\t}\n}",
    "Moved to PDE.",
    "I added an extra check for widget disposed but it is highly unusual that this \nhappened (when the editor is disposed, the section is deregistered as a \nresource listener, so this implies some irregular sutuation in which the editor \nwas left to dangle without proper disposal).\n\n"
  ],
  "commentCreationDates": [
    "2002-04-23T16:01:29+02:00",
    "2002-04-30T15:58:46+02:00",
    "2002-04-30T16:49:59+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Widget is disposed",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:1887"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.pde.internal.ui.editor.manifest.AlertSection.resourceChanged",
          "source": "AlertSection.java:261"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager$1.run",
          "source": "NotificationManager.java:123"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:782"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:411"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.notify",
          "source": "NotificationManager.java:138"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.broadcastChanges",
          "source": "NotificationManager.java:62"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastChanges",
          "source": "Workspace.java:133"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:755"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1352"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:78"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "14405",
      "date": "2002-04-23T16:01:29+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "java.lang.Object)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:1887"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop",
          "source": "EventLoopProgressMonitor.java:89"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.subTask",
          "source": "EventLoopProgressMonitor.java:119"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.subTask",
          "source": "ProgressMonitorWrapper.java:115"
        },
        {
          "method": "org.eclipse.core.runtime.SubProgressMonitor.subTask",
          "source": "SubProgressMonitor.java:156"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:761"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1352"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:78"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation",
          "source": "AbstractTextEditor.java:1927"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation",
          "source": "CompilationUnitEditor.java:579"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave",
          "source": "CompilationUnitEditor.java:627"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager$9.run",
          "source": "EditorManager.java:811"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:296"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:249"
        },
        {
          "method": "org.eclipse.jface.dialogs.ProgressMonitorDialog.run",
          "source": "ProgressMonitorDialog.java:335"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation",
          "source": "EditorManager.java:689"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.saveEditor",
          "source": "EditorManager.java:816"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.saveEditor",
          "source": "WorkbenchPage.java:1802"
        },
        {
          "method": "org.eclipse.ui.texteditor.SaveAction.run",
          "source": "SaveAction.java:41"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:590"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:407"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:816"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:643"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:349"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:195"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:541"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:396"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "14405",
      "date": "2002-04-23T16:01:29+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "14405",
  "bugId": "14405",
  "date": "2002-04-23T16:01:29+02:00",
  "product": "PDE",
  "component": "UI",
  "severity": "normal"
}