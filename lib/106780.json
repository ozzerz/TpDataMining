{
  "comments": [
    "On occasion, while clicking around in the editor, we can get the following NPE \nto happen. What we see is the following stack trace (just a portion of it, the \nrest of it was drop since it was of no interest)...\n\njava.lang.NullPointerException\n       at java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n       at java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n       at java.lang.NullPointerException.\u003cinit\u003e(NullPointerException.java:60)\n       at org.eclipse.gef.tools.ToolUtilities.getSelectionWithoutDependants\n(ToolUtilities.java:35)\n1)     at org.eclipse.gef.tools.DragEditPartsTracker.createOperationSet\n(DragEditPartsTracker.java:166)\n       at org.eclipse.gef.tools.AbstractTool.getOperationSet\n(AbstractTool.java:586)\n       at org.eclipse.gef.tools.DragEditPartsTracker.captureSourceDimensions\n(DragEditPartsTracker.java:124)\n       at org.eclipse.gef.tools.DragEditPartsTracker.setState\n(DragEditPartsTracker.java:542)\n       at org.eclipse.gef.tools.AbstractTool.stateTransition(AbstractTool.java)\n3)     at org.eclipse.gef.tools.SelectEditPartTracker.handleButtonDown\n(SelectEditPartTracker.java:97)\n       at org.eclipse.gef.tools.AbstractTool.mouseDown(AbstractTool.java)\n2)     at org.eclipse.gef.tools.SelectionTool.mouseDown(SelectionTool.java:490)\n\nAt point 2, a call is made by the SelectionTool to its SelectEditPartTracker \nto set the viewer (in its mouseDown method inherited from AbstractTool).\nAt point 1, the viewer is null.  We put some print statements in to see what\nwas happening between these two methods.  \n\nWe discovered that at point 3, the selection is changed.  This causes a \nnotification to be sent out to the selection listeners.  The CEI property page \nis one of them.  In response, it tries to load a file.  During this load, \nrefreshLocal is called on the resource (by EMF), and Eclipse runs an event \nloop while showing progress. Within the event loop, mouseUp is processed, and \nthis clears the viewer before we get to point 1.\n\nHere is the stack trace when the viewer is set to null. (Just a portion of it \nsince the rest of it it was of no interest)\n\njava.lang.Throwable\n       at java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n       at java.lang.Thread.dumpStack(Thread.java:426)\n       at org.eclipse.gef.tools.AbstractTool.setViewer(AbstractTool.java)\n       at org.eclipse.gef.tools.AbstractTool.deactivate(AbstractTool.java:395)\n       at org.eclipse.gef.tools.TargetingTool.deactivate(TargetingTool.java:82)\n       at org.eclipse.gef.tools.DragEditPartsTracker.deactivate\n(DragEditPartsTracker.java:194)\n       at org.eclipse.gef.tools.SelectionTool.setDragTracker\n(SelectionTool.java:570)\n       at org.eclipse.gef.tools.SelectionTool.handleButtonUp\n(SelectionTool.java:215)\n       at org.eclipse.gef.tools.AbstractTool.mouseUp(AbstractTool.java:1054)\n       at org.eclipse.gef.tools.SelectionTool.mouseUp(SelectionTool.java:545)\n       at org.eclipse.gef.EditDomain.mouseUp(EditDomain.java:245)\n       at org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMouseReleased\n(DomainEventDispatcher.java:359)\n       at org.eclipse.draw2d.LightweightSystem$EventHandler.mouseUp\n(LightweightSystem.java:528)\n       at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)\n       at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)\n       at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n       at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)\n       at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)\n       at org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop\n(EventLoopProgressMonitor.java:115)\n       at org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled\n(EventLoopProgressMonitor.java:90)\n       at org.eclipse.core.internal.jobs.ThreadJob.isCanceled\n(ThreadJob.java:116)\n       at org.eclipse.core.internal.jobs.ThreadJob.joinRun(ThreadJob.java:146)\n       at org.eclipse.core.internal.jobs.ImplicitJobs.begin\n(ImplicitJobs.java:87)\n       at org.eclipse.core.internal.jobs.JobManager.beginRule\n(JobManager.java:170)\n       at org.eclipse.core.internal.resources.WorkManager.checkIn\n(WorkManager.java)\n       at org.eclipse.core.internal.resources.Workspace.prepareOperation\n(Workspace.java:1628)\n       at org.eclipse.core.internal.resources.Resource.refreshLocal\n(Resource.java:1224)\n       at org.eclipse.core.internal.resources.File.refreshLocal(File.java:311)\n       at \norg.eclipse.emf.ecore.resource.impl.URIConverterImpl$WorkbenchHelper.createPlat\nformResourceInputStream(URIConverterImpl.java:193)\n       at \norg.eclipse.emf.ecore.resource.impl.URIConverterImpl.createPlatformResourceInpu\ntStream(URIConverterImpl.java:446)\n       at \norg.eclipse.emf.ecore.resource.impl.URIConverterImpl.createInputStream\n(URIConverterImpl.java)\n       at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load\n(ResourceImpl.java)\n       at com.ibm.wbit.cei.ui.mon.MonUtils.loadResource(MonUtils.java:442)\n       at com.ibm.wbit.cei.ui.mon.MonUtils.getMonitorResource\n(MonUtils.java:289)\n       at com.ibm.wbit.cei.ui.mon.MonUtils.getMonitorResource\n(MonUtils.java:156)\n       at com.ibm.wbit.cei.ui.properties.CEISection.initializeMonAdapters\n(CEISection.java:3857)\n       at com.ibm.wbit.cei.ui.properties.CEISection.\u003cinit\u003e(CEISection.java:934)\n       at com.ibm.wbit.cei.ui.selt.SeltCEISection.\u003cinit\u003e\n(SeltCEISection.java:59)\n       at java.lang.Class.newInstanceImpl(Native Method)\n       at java.lang.Class.newInstance(Class.java)\n       at \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:141)\n       at \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:124)\n       at \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java)\n       at \ncom.ibm.xtools.common.ui.properties.internal.view.SectionDescriptor.getSectionC\nlass(SectionDescriptor.java:174)\n       at \ncom.ibm.xtools.common.ui.properties.internal.view.TabDescriptor.createTab\n(TabDescriptor.java:203)\n       at \ncom.ibm.xtools.common.ui.properties.TabbedPropertySheetPage.updateTabs\n(TabbedPropertySheetPage.java:498)\n       at com.ibm.xtools.common.ui.properties.TabbedPropertySheetPage.setInput\n(TabbedPropertySheetPage.java:548)\n       at \ncom.ibm.xtools.common.ui.properties.TabbedPropertySheetPage.selectionChanged\n(TabbedPropertySheetPage.java:415)\n       at org.eclipse.ui.views.properties.PropertySheet.selectionChanged\n(PropertySheet.java:185)\n       at org.eclipse.ui.internal.AbstractSelectionService$3.run\n(AbstractSelectionService.java)\n       at org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java)\n       at org.eclipse.core.runtime.Platform.run(Platform.java)\n       at org.eclipse.ui.internal.AbstractSelectionService.fireSelection\n(AbstractSelectionService.java:151)\n       at org.eclipse.ui.internal.AbstractSelectionService$1.selectionChanged\n(AbstractSelectionService.java:66)\n       at \ncom.ibm.wbit.visual.editor.directedit.DirectEditViewer.fireSelectionChanged\n(DirectEditViewer.java:166)\n       at org.eclipse.gef.ui.parts.AbstractEditPartViewer.appendSelection\n(AbstractEditPartViewer.java:171)\n       at \ncom.ibm.wbit.visual.editor.directedit.DirectEditViewer.appendSelection\n(DirectEditViewer.java:184)\n       at org.eclipse.gef.ui.parts.AbstractEditPartViewer.select\n(AbstractEditPartViewer.java:562)\n       at com.ibm.wbit.visual.editor.directedit.DirectEditViewer.select\n(DirectEditViewer.java:177)\n       at org.eclipse.gef.tools.SelectEditPartTracker.performSelection\n(SelectEditPartTracker.java:209)\n       at \norg.eclipse.gef.tools.SelectEditPartTracker.performConditionalSelection\n(SelectEditPartTracker.java:155)\n       at org.eclipse.gef.tools.SelectEditPartTracker.handleButtonDown\n(SelectEditPartTracker.java:89)\n       at org.eclipse.gef.tools.AbstractTool.mouseDown(AbstractTool.java)\n       at org.eclipse.gef.tools.SelectionTool.mouseDown(SelectionTool.java:490)\n\nThe problem is the AbstractTool is setting up context (eg the viewer) on \nmouseDown and clears that context on mouseUp. Method calls while handling \nmouseDown assume that the context is set (eg viewer is not null).\n\nThere is no protection in place to handle the case where the event loop may \nrun and the mouseUp is process, and therefore clears the context (eg the \nviewer is set to null).\n\nThis is quite possible given a selection event is fired and code out of your \ncontrol (eg the listeners) will run. This is kinda like in SWT where they \ncheck if the widget is disposed after sending an event, because of the remote \npossibility one of the event listeners disposed the control. (most, if not \nall, calls to sendEvent in SWT Control subclasses check for isDisposed before \ncontinuing)",
    "Loading a file on selection change sounds like a possible performance problem. \nThe listener should at least be guarded against multiple consecutive selection \nevents such as those that occur when deleting multiple editparts.\n\nThis type of problem has been reported before. The workaround is to simply \ninsert an asyncexec anywhere. For example, the selection listener could put its \nhandling of the change in an async runnable which would prevent the event loop \nfrom being run *DURING* SWT\u0027s dispatching of an event.\n\nReentry in SWT\u0027s EventTable is not really supported when it comes to modifying \nits listeners. I\u0027m not sure to what extent we could support this type of \nreentrant behavior. We\u0027ll investigate for 3.2",
    "If the current viewer is null, then it would make sense for the operation set to be empty instead of throwing an NPE.\n\nprotected List createOperationSet() {\n        if (getCurrentView() !\u003d null) {\n\t   List list \u003d ToolUtilities.getSelectionWithoutDependants(\n\t\t   getCurrentViewer());\n\t   ToolUtilities.filterEditPartsUnderstanding(list, getTargetRequest());\n\t   return list;\n        }\n        \n        return new ArrayList();\n}\n\nThis doesn\u0027t really solve the reentry issue but adds protection against this scenario.  Since there is a setViewer api on the AbstractTool, this implies the tool could be in a state where the viewer is null.  In which case methods should handle this case.",
    "- Added protection code in DragEditPartsTracker#getOperationSet\n- Added new JUnit test for verification in DragEditPartsTrackerTest",
    "Please set target milestone"
  ],
  "commentCreationDates": [
    "2005-08-11T21:05:53+02:00",
    "2005-08-15T17:35:14+02:00",
    "2006-04-03T17:22:28+02:00",
    "2006-04-18T20:12:45+02:00",
    "2006-04-20T19:25:16+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.NullPointerException.\u003cinit\u003e",
          "source": "NullPointerException.java:60"
        },
        {
          "method": "org.eclipse.gef.tools.ToolUtilities.getSelectionWithoutDependants",
          "source": "ToolUtilities.java:35"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "106780",
      "date": "2005-08-11T21:05:53+02:00",
      "product": "GEF",
      "component": "GEF",
      "severity": "major"
    }
  ],
  "groupId": "106780",
  "bugId": "106780",
  "date": "2005-08-11T21:05:53+02:00",
  "product": "GEF",
  "component": "GEF",
  "severity": "major"
}