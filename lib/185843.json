{
  "comments": [
    "[3.3M7]\n\nThe drop-down list for selecting one of the previous test runs does nothing. Clicking on the Icon and selecting an older test run from the dialog does work.  (Might this be Mac-specific?)",
    "works for me on WinXP.\nWhat about other dropdowns (new type wizards, type hierarchy history)",
    "Boris? Do you have the same problem with other drop downs lists?",
    "Other drop downs (in view toolbars, in the main toolbar) work on the Mac, only the JUnit one doesn\u0027t.",
    "Created an attachment (id\u003d66628)\nFix\n\nThis is an event ordering problem on the Mac. We dispose the menu in the menuHidden event, which seems to be too early if the menu item is selected with the mouse (it also works on the Mac if you open the menu, and then type \"1\" and \"Enter\").\n\nThe problematic disposing of the menu is a workaround for bug 129973, which is due to a \"leak\" in the ActionContributionItem story, see bug 170647.\n\nThis patch fixes the problem on carbon; not yet tested on other platforms.",
    "Created an attachment (id\u003d66708)\nBetter fix\n\nTested on Windows that it works and tested with Sleak that no menus nor images are leaked.",
    "Martin, can you please review? I\u0027ve verified the fix on Linux, Mac, and Windows. The change in TestRunnerViewPart fixes another leak I detected while testing.",
    "Discussed with Markus. It\u0027s better to change the actions to delegates than inventing a new story with disposing the menu later.",
    "Created an attachment (id\u003d69237)\nFix3 (handles in history)\n\nThis fix works around bug 170647 by using Integers as handles in the history (instead of direct references to TestRunSession objects).\n\nTested on Mac and WinXP, and verified leaklessness with Sleak and YourKit.",
    "Created an attachment (id\u003d69244)\nFix4\n\nPatch is the same as Fix3 with these changes:\n- adds comments such as List/*\u003cTestRunSession\u003e*/ for clarity\n- removes no-op\n    testRunSessions.removeAll(remainingEntries);\nfrom RunnerViewHistory.setHistoryEntries(List, Object). The call does nothing, since it tries to remove Integers from a list of TestRunSessions. It is not necessary any more, since the two loops below have been combined into one.",
    "Steve, can you quickly comment whether this is expected behavior: on the Mac when a user selects a menu entry and the code destroys the menu in menuHidden(), nothing happens as the selection event isn\u0027t fired anymore. I would expect different ordering of events but not that they get completely lost. Or in other words: how can I implement a menu that I want to dispose after it\u0027s closed but I want to let the user select an item and run it.",
    "patch (Fix4) is good.",
    "This is quite a big code change and it is distributed over there classes. Before approving this I\u0027d like to hear that this is indeed an SWT limitation.\n\nIf this is the case I would ideally like to see wrapper class that would be introduced at a single place (in TestRunnerViewPart).",
    "Steve: please note that the dispose is even doen in an asyncExec.",
    "The patch causes NPEs (see below) when the history is empty.\n\nTest Case: hit the button or select \u0027History...\u0027 from the drop down.\n\n\n!ENTRY org.eclipse.ui 4 0 2007-05-30 16:47:56.297\n!MESSAGE Unhandled event loop exception\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$RunnerViewHistory.getCurrentEntry(TestRunnerViewPart.java:337)\n\tat org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog.createHistoryList(HistoryListAction.java:87)\n\tat org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog.\u003cinit\u003e(HistoryListAction.java:61)\n\tat org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog.\u003cinit\u003e(HistoryListAction.java:57)\n\tat org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction.run(HistoryListAction.java:237)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:498)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:545)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)\n\tat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3673)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3284)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1144)\n",
    "It sounds like we have a bug on the Mac or a platform difference which we need to address (but not for 3.3).\n\n\u003e How can I implement a menu that I want to dispose after it\u0027s closed but I\n\u003e want to let the user select an item and run it.\n\nOne way to do this is dispose the previous menu just before the new one is requested.  If the menu is assigned into the control (using setMenu()), then the last menu will be disposed when the control is disposed.  Before proceeding with anything, we need to discuss the code pattern, know exactly how you are implementing the menu, etc.",
    "Looks like this has been fixed in latest SWT (maybe by the fix for bug 181843).\n\nVerified on the Mac that this was a problem in 3.3M7, but works fine at least from I20070508-0800 on. No further action required.",
    "FWIW, here\u0027s a standalone snippet:\n\npackage pack;\n\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.MenuAdapter;\nimport org.eclipse.swt.events.MenuEvent;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.graphics.Point;\nimport org.eclipse.swt.graphics.Rectangle;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.*;\n\npublic class Bug185843 {\n\n\tpublic static void main(String[] args) {\n\t\tDisplay display \u003d new Display();\n\t\tfinal Shell shell \u003d new Shell(display, SWT.SHELL_TRIM);\n\n\t\tshell.setLayout(new GridLayout());\n\t\tfinal ToolBar tb \u003d new ToolBar(shell, SWT.NONE);\n\t\tfinal ToolItem ti \u003d new ToolItem(tb, SWT.DROP_DOWN);\n\t\tti.setImage(display.getSystemImage(SWT.ICON_QUESTION));\n\t\tti.addSelectionListener(new SelectionAdapter() {\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\tif (e.detail \u003d\u003d SWT.ARROW) {\n\t\t\t\t\tMenu m \u003d createMenu(tb);\n\t\t\t\t\tRectangle b \u003d ti.getBounds();\n\t\t\t\t\tPoint p \u003d ti.getParent().toDisplay(\n\t\t\t\t\t\t\tnew Point(b.x, b.y + b.height));\n\t\t\t\t\tm.setLocation(p.x, p.y);\n\t\t\t\t\tm.setVisible(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tshell.pack();\n\t\tshell.open();\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t\tdisplay.dispose();\n\t}\n\n\tprivate static Menu createMenu(final ToolBar tb) {\n\t\tfinal Menu m \u003d new Menu(tb);\n\t\tMenuItem mi \u003d new MenuItem(m, SWT.NONE);\n\t\tmi.setText(\"Action!\");\n\t\tmi.addSelectionListener(new SelectionAdapter() {\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\tMessageBox mb \u003d new MessageBox(tb.getShell(), SWT.NONE);\n\t\t\t\tmb.setMessage(\"Success!\");\n\t\t\t\tmb.open();\n\t\t\t}\n\t\t});\n\t\tm.addMenuListener(new MenuAdapter() {\n\t\t\tpublic void menuHidden(MenuEvent e) {\n//\t\t\t\tm.dispose();\n\t\t\t\ttb.getDisplay().asyncExec(new Runnable() {\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tm.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn m;\n\t}\n\n}\n",
    "Ok, I came back to help out, hacked up some sample code but I\u0027ll just keep it to myself, and go home.  It seemed to work on all platforms so I spent a while guessing at the bug before I checked this bug report.",
    "The snippet seems to work on the Mac.",
    "Changing OS from Mac OS to Mac OS X as per bug 185991"
  ],
  "commentCreationDates": [
    "2007-05-07T21:53:59+02:00",
    "2007-05-08T10:43:36+02:00",
    "2007-05-09T09:56:48+02:00",
    "2007-05-09T16:30:45+02:00",
    "2007-05-10T10:44:21+02:00",
    "2007-05-10T18:13:46+02:00",
    "2007-05-11T10:15:36+02:00",
    "2007-05-15T17:06:54+02:00",
    "2007-05-30T11:46:31+02:00",
    "2007-05-30T12:40:08+02:00",
    "2007-05-30T15:37:59+02:00",
    "2007-05-30T16:13:15+02:00",
    "2007-05-30T16:18:23+02:00",
    "2007-05-30T16:27:35+02:00",
    "2007-05-30T16:52:04+02:00",
    "2007-05-30T18:19:21+02:00",
    "2007-05-31T00:50:51+02:00",
    "2007-05-31T00:52:00+02:00",
    "2007-05-31T01:34:38+02:00",
    "2007-05-31T01:41:04+02:00",
    "2007-07-29T15:22:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$RunnerViewHistory.getCurrentEntry",
          "source": "TestRunnerViewPart.java:337"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog.createHistoryList",
          "source": "HistoryListAction.java:87"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog.\u003cinit\u003e",
          "source": "HistoryListAction.java:61"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog.\u003cinit\u003e",
          "source": "HistoryListAction.java:57"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction.run",
          "source": "HistoryListAction.java:237"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:498"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:545"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:490"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:402"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3673"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3284"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "185843",
      "date": "2007-05-30T16:52:04+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "185843",
  "bugId": "185843",
  "date": "2007-05-07T21:53:59+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}