{
  "comments": [
    "I\u0027m deploying an ear which references an external jar to a generic Weblogic server. A dependent-module (in this case dom4j) is configured in .settings/.component as follows:\n\n\u003cdependent-module deploy-path\u003d\"/APP-INF/lib\" handle\u003d\"module:/classpath/var/MAVEN_REPO/dom4j/jars/dom4j-1.6.1.jar\"\u003e\n   \u003cdependency-type\u003euses\u003c/dependency-type\u003e\n\u003c/dependent-module\u003e\n\nThe dom4j external jar appears at the root of the ear instead of within the APP-INF/lib directory. The deploy-path seems to be ignored.\n\nI know of no workaround for this problem.",
    "Which build are you using?",
    "This was executed on the most recent 1.0.1 build (M200602010238) while\npublishing to a Generic WebLogic 8.1 server.\n\n",
    "Hi Gorkem,\nEither my recent patch to support this in generic servers is bad (i.e. doesn\u0027t use the directory path when publishing), or the J2EE team is returning this jar at the root of the module\u0027s resources and not at the correct place in the members.",
    "The members method returns the correct IModuleResource. The problem is in the PublishUtil it calculates the destination for resource using the following line IPath toPath \u003d path.append(current.getName()); but this ignores the path info in the IModuleResource. \nAs a second thought, we did not notice this earlier because usually the files are contained in a IModuleFolder and we recursively copied those. In the case of the dependent modules members() function does not return the IModuleFolder object seperately. It just adds the path info to the IModuleResource.\n",
    "This should be a big problem for folks like myself using both Maven and WebLogic. With WebLogic, \"You can extend an Enterprise Application to use third-party .jar files by placing the files in the APP-INF\\lib\\ directory\". We are taking advantage of this facility.",
    "This is failing because the module file for the dependant module is not contained within the correct ModuleFolder - it\u0027s sitting at the root of the module with a path that points much lower. The dependant module should be integrated into the results of the members() method and returned from the correct place as specified by the deploy-path.",
    "Ok, the problem with the members code is that it does do a search for the module folder who should contain the jar module resource and if it finds it, he adds himself, but the problem is if he doesn\u0027t find it, he doesn\u0027t create the folder structure, he just adds himself to the root.  I don\u0027t think this is a stop ship for WTP 1.0.1 and as far as a workaround, I think we can get one.  For now, I\u0027m going to take a guess.  Do you have an app-inf/lib folder on disk in the ear project?  If not, go ahead and create one.  You should not need this after the fix, but for now this should allow the folder structure to be found.  Also, make sure this app-inf/lib path falls under a valid .component mapping.  Let me know how this goes or if this is not the case.",
    "I am now running WebTools 1.0.1 with the WebLogic 8.1 Generic Server. When attempting to publish the ear that has dependent ejb, web, and util modules as well as external jar dependencies, I receive the following error:\n\n!ENTRY org.eclipse.wst.server.core \n!MESSAGE Publishing failed\n!SUBENTRY 1 org.eclipse.wst.server.core\n!STACK 0\njava.lang.NullPointerException\n   at org.eclipse.core.runtime.Path.append(Path.java:259)\n   at org.eclipse.jst.server.generic.core.internal.publishers.AbstractModuleAssembler.packModule(AbstractModuleAssembler.java:68)\n   at org.eclipse.jst.server.generic.core.internal.publishers.EarModuleAssembler.assemble(EarModuleAssembler.java:34)\n   at \norg.eclipse.jst.server.generic.core.internal.publishers.AntPublisher.assembleModule(AntPublisher.java:105)\n   at \norg.eclipse.jst.server.generic.core.internal.publishers.AntPublisher.publish(AntPublisher.java:92)\n   at \norg.eclipse.jst.server.generic.core.internal.GenericServerBehavior.publishModule(GenericServerBehavior.java:90)\n\nI\u0027m not sure if this is a new problem or the existing one. Let me know.",
    "Greetings,\n\nThe workaround John suggested did not work in my case (see the stacktrace in my previous comment). Any other suggestions for a workaround or do have an idea when you might get around to working on this problem?",
    "This is fixed for WTP 1.0.2 and WTP 1.5 M5.  The deplopyables will now return the jar in the proper location, not just at the root, so that server tools API will handle it correctly.",
    "verified 20060925",
    "Verified, closing."
  ],
  "commentCreationDates": [
    "2006-02-06T20:53:33+01:00",
    "2006-02-06T21:40:23+01:00",
    "2006-02-06T23:16:50+01:00",
    "2006-02-07T00:09:37+01:00",
    "2006-02-14T17:29:12+01:00",
    "2006-02-16T16:59:54+01:00",
    "2006-02-20T22:26:01+01:00",
    "2006-02-21T14:35:06+01:00",
    "2006-02-28T12:18:48+01:00",
    "2006-03-06T17:58:35+01:00",
    "2006-03-07T18:09:18+01:00",
    "2006-09-26T17:55:30+02:00",
    "2006-09-26T18:44:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Path.append",
          "source": "Path.java:259"
        },
        {
          "method": "org.eclipse.jst.server.generic.core.internal.publishers.AbstractModuleAssembler.packModule",
          "source": "AbstractModuleAssembler.java:68"
        },
        {
          "method": "org.eclipse.jst.server.generic.core.internal.publishers.EarModuleAssembler.assemble",
          "source": "EarModuleAssembler.java:34"
        },
        {
          "method": "org.eclipse.jst.server.generic.core.internal.publishers.AntPublisher.assembleModule",
          "source": "AntPublisher.java:105"
        },
        {
          "method": "org.eclipse.jst.server.generic.core.internal.publishers.AntPublisher.publish",
          "source": "AntPublisher.java:92"
        },
        {
          "method": "org.eclipse.jst.server.generic.core.internal.GenericServerBehavior.publishModule",
          "source": "GenericServerBehavior.java:90"
        }
      ],
      "number": 0,
      "commentIndex": 8,
      "bugId": "126640",
      "date": "2006-02-28T12:18:48+01:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "critical"
    }
  ],
  "groupId": "126640",
  "bugId": "126640",
  "date": "2006-02-06T20:53:33+01:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "critical"
}