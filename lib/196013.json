{
  "comments": [
    "Build ID: I20070625-1500\n\nSteps To Reproduce:\n1. Launch InOut in controlled mode. e.g. java -agentlib:JPIBootLoader\u003dJPIAgent:server\u003dcontrolled;CGProf InOut\n\n2. In Eclipse, open the profile dialog, create a new Attach entry for InOut, and specify \"Show execution flow graphical details\" under Execution Time Analysis (Agents tab).\n\n3. Open the Execution Statistics view after the entry prompt is displayed in the Profiling Console. Refresh the view until no additional data is shown.\n\n4. Pause the agent\n5. Press enter in the profiling console. \n6. Resume the agent\n7. Press enter in the profiling console. \n\n8. Open Execution Flow. Under \u0027Thread name\u0027-\u003emain[xxxx]-\u003emain(java.lang.String[]), you should see an entry \"unknownXXXXX()\", where XXXXX is a set of numbers (in my case 69256). Double click the entry.\n\nDialog pops up indicating \"IWAT0288E Error opening Execution Flow Table view\" in the title bar, and \u0027Reason: java.lang.NullPointerException\" in the body of the dialog.\n\nMore information:\nUsing TPTP-4.4.0.1-200707090100. IBM JDK 1.5 SR5.",
    "I have also reproduced this in Linux on a separate machine. Same build.",
    "Created an attachment (id\u003d73514)\nProposed fix\n\nThis fix contains small null pointer check in org.eclipse.hyades.trace.views plugin.\n\nPlease review and check into CVS. I do not have write access to this plugin.\n",
    "The fix is based on the following call stack:\n\njava.lang.NullPointerException\n\tat org.eclipse.hyades.trace.views.internal.MultiLevelStatisticView.select(MultiLevelStatisticView.java:425)\n\tat org.eclipse.hyades.trace.views.internal.MultiLevelStatisticView.handleSelectionEvent(MultiLevelStatisticView.java:380)\n\tat org.eclipse.hyades.trace.views.internal.MultiLevelStatisticView.handleViewSelectionChangedEvent(MultiLevelStatisticView.java:671)\n\tat org.eclipse.tptp.platform.common.ui.trace.internal.helpers.TraceUIManager.notifyViewSelectionChangedListener(TraceUIManager.java:390)\n\tat org.eclipse.hyades.trace.ui.UIPlugin.notifyViewSelectionChangedListener(UIPlugin.java:550)\n\tat org.eclipse.hyades.trace.views.internal.StatisticView.notifyViewSelectionChanged(StatisticView.java:1042)\n\tat org.eclipse.hyades.trace.views.internal.ExecutionStatistic.updateModelSelection(ExecutionStatistic.java:520)\n\tat org.eclipse.hyades.trace.views.internal.StatisticView.widgetSelected(StatisticView.java:525)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n",
    "The patch only captures the null point exception but the main concern here is the existence of an \u0027unknown\u0027 entry in the table.\n\nThe unknown entry comes from MethodEntry and MethodExit of a method that does not have a MethodDef. The method is called during the pause period and so it\u0027s not sent to WB.\n\nComparing between the TI and PI trace, PI never send any methodEntry/Exit calls of method that is created during a pause/detach period, while TI will send all events in a monitored period no matter when the method was defined. I think both has their pro and cons, but showing \u0027unknown\u0027 is useless to user, unless methodDef is cached during a pause period and flushed to WB client as soon as monitor is resumed.",
    "Created an attachment (id\u003d73558)\nTI trace file\n\n",
    "Created an attachment (id\u003d73559)\nPI trace file\n\n",
    "(In reply to comment #4)\n\u003e The patch only captures the null point exception but the main concern here is\n\u003e the existence of an \u0027unknown\u0027 entry in the table.\n\u003e The unknown entry comes from MethodEntry and MethodExit of a method that does\n\u003e not have a MethodDef. The method is called during the pause period and so it\u0027s\n\u003e not sent to WB.\n\u003e Comparing between the TI and PI trace, PI never send any methodEntry/Exit calls\n\u003e of method that is created during a pause/detach period, while TI will send all\n\u003e events in a monitored period no matter when the method was defined. I think\n\u003e both has their pro and cons, but showing \u0027unknown\u0027 is useless to user, unless\n\u003e methodDef is cached during a pause period and flushed to WB client as soon as\n\u003e monitor is resumed.\n\nA key pattern is that entry exit and other events that were not preceded with a def event are handled as an error condition by the workbench, and this creates unknown objects in the model. Historically the unknown is cleaned up, if and when the def does arrive, but I have not looked the code is a few years and this behaviour may no longer be consistent. Aside from how agents can avoid sending events that trigger error recovery in the loaders, the key is that they behave the same and don\u0027t drive error handling as a normal use path. It is easy to see how different agents could provide different implementations of tracking, caching or noop. We now have 3 that we ship (ARM, PI, TI) and there are others that build on top of us so our client side behaviour needs to be safe and predictable.\nIt seems for this defect in 4.4.0.1 we need to accept this patch for the immediate symptom, and open a new high severity defect to track proper resolution asap after 4.4.0.1",
    "Ruslan, there are still areas that the patch does not cover. Please see my attach .log file for detail.",
    "Created an attachment (id\u003d73574)\n.log file\n\nNPEs is capture is the following areas:\n1.org.eclipse.hyades.trace.views.internal.view.columnlabels.PackageNameColumnLabel.getTRCPackage(PackageNameColumnLabel.java:69)\n2.org.eclipse.hyades.trace.views.adapter.internal.MethodDetailsTab.setViewTitle(MethodDetailsTab.java:163)\n3.org.eclipse.hyades.trace.views.internal.view.columnlabels.PackageNameColumnLabel.getTRCPackage(PackageNameColumnLabel.java:69)",
    "\"unknown\" entries in the various JVMTI Profilers were previously encountered in bug 190687 and were caused by bug 193304 (both marked as FIXED). All JVMTI Profilers cache methodDef and classDef events during pause and transmit them when data collection is resumed. Due to bug 193304, some of these events did not reach the workbench, and thus caused the \"unknown\" entries to appear. Either bug 193304 was not fully fixed and should be reopened, or this is a new bug in the JVMTI Profiler runtime.\n",
    "Created an attachment (id\u003d73648)\nProposed fix2\n\nI reproduced and added more two null ptr fixes:\n  PackageNameColumnLabel.java:69\n  MethodDetailsTab.java:163\n\nPlease review this .\n\nThis bug was already approved for check in. I do not know whether this bug should be rerequested for approve one more time or second patch can be checked into CVS.\n",
    "\n\u003e This bug was already approved for check in. I do not know whether this bug\n\u003e should be rerequested for approve one more time or second patch can be checked\n\u003e into CVS.\n\nIn light of the other fixes needed and the need to investigate the root cause of hte incomplete models this fix has not made it into the final 4.4.0.1 which we have to deliver later today. It is certainly an important candidate for the very limited 4.4.0.2 tha thas been proposed.",
    "*** Bug 196198 has been marked as a duplicate of this bug. ***",
    "I suggest we use this bugzilla to track the status of the NPE error, and use bug 196198 to track the status of the \"unknown\" entries in the UI.\n",
    "Created an attachment (id\u003d73705)\npatch\n\nRuslan, The patch looks good. I have update a few thing in your patch and here is the latest version.",
    "The latest patch now covers all errors shown in the user case.\n\nThanks again to Ruslan.",
    "Eugene,\n\nI have sent request for approval.\nCheck in the final patch into CVS please if the request will be approved.\n",
    "Eugene,\nAs I do not have write access to in org.eclipse.hyades.trace.views, please check in the patch in 4402 according to Harm\u0027s approval:\n\n\u003e\u003e\nagreed on 4402  once it is created\nnote this will mean the change needs to go into the 4402 stream and the head stream \n\u003c\u003c\n",
    "Triaging 4.4.0.2 candidate defects for Joanna.  \n\nThis is a 4.4.0.2 candidate defect since deferred from 4.4.0.1 and a patch is attached.\n\nEugene, please target to 4.4.0.2 when the field is available and provide a\nsizing.\n",
    "I recommend that the attached Patch be not applied until  196198 is resolved.\nThe patch is essentially suppressing the exception.\n\nOnce patch  196198 is resolved then we ought to test to see if we still get the exceptions and apply this to ensure we have not masked any unknown exceptions.",
    "update target, blocked by defect bug 196198.",
    "Eugene, The dependent defects have been resolved. Can you check in the attached patch",
    "Patch is tested and submitted."
  ],
  "commentCreationDates": [
    "2007-07-10T18:27:32+02:00",
    "2007-07-10T19:43:22+02:00",
    "2007-07-11T10:24:23+02:00",
    "2007-07-11T10:26:50+02:00",
    "2007-07-11T17:48:54+02:00",
    "2007-07-11T17:55:37+02:00",
    "2007-07-11T17:56:01+02:00",
    "2007-07-11T18:39:41+02:00",
    "2007-07-11T19:50:32+02:00",
    "2007-07-11T19:52:22+02:00",
    "2007-07-11T21:52:57+02:00",
    "2007-07-12T12:46:51+02:00",
    "2007-07-12T13:39:48+02:00",
    "2007-07-12T14:25:38+02:00",
    "2007-07-12T15:00:17+02:00",
    "2007-07-12T23:52:57+02:00",
    "2007-07-12T23:54:13+02:00",
    "2007-07-13T14:39:36+02:00",
    "2007-07-16T09:27:16+02:00",
    "2007-07-16T15:10:08+02:00",
    "2007-07-19T16:56:38+02:00",
    "2007-08-13T23:32:49+02:00",
    "2007-08-24T19:31:27+02:00",
    "2007-08-24T21:45:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.hyades.trace.views.internal.MultiLevelStatisticView.select",
          "source": "MultiLevelStatisticView.java:425"
        },
        {
          "method": "org.eclipse.hyades.trace.views.internal.MultiLevelStatisticView.handleSelectionEvent",
          "source": "MultiLevelStatisticView.java:380"
        },
        {
          "method": "org.eclipse.hyades.trace.views.internal.MultiLevelStatisticView.handleViewSelectionChangedEvent",
          "source": "MultiLevelStatisticView.java:671"
        },
        {
          "method": "org.eclipse.tptp.platform.common.ui.trace.internal.helpers.TraceUIManager.notifyViewSelectionChangedListener",
          "source": "TraceUIManager.java:390"
        },
        {
          "method": "org.eclipse.hyades.trace.ui.UIPlugin.notifyViewSelectionChangedListener",
          "source": "UIPlugin.java:550"
        },
        {
          "method": "org.eclipse.hyades.trace.views.internal.StatisticView.notifyViewSelectionChanged",
          "source": "StatisticView.java:1042"
        },
        {
          "method": "org.eclipse.hyades.trace.views.internal.ExecutionStatistic.updateModelSelection",
          "source": "ExecutionStatistic.java:520"
        },
        {
          "method": "org.eclipse.hyades.trace.views.internal.StatisticView.widgetSelected",
          "source": "StatisticView.java:525"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:227"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3682"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3293"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "196013",
      "date": "2007-07-11T10:26:50+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.UI.ProfilingPerspective",
      "severity": "critical"
    }
  ],
  "groupId": "196013",
  "bugId": "196013",
  "date": "2007-07-10T18:27:32+02:00",
  "product": "TPTP Profiling",
  "component": "Platform.UI.ProfilingPerspective",
  "severity": "critical"
}