{
  "comments": [
    "see bug 204404 for some more information",
    "This is a bit of work, since there is no filtered checkbox tree. The naive solution doesn\u0027t work, since you must maintain the checkbox state whenever a refresh happens (and in our case we don\u0027t actually have a model that maintains check state).  As well, tree/table viewers don\u0027t have refresh listeners.  Currently I am addressing this issue by overriding all the refresh operations and  saving the check state, and then putting them back.  There must be a better way.\n\nAnyone have any pointers. ",
    "ok, if this is too tricky, I would worry less about it as the other bug does quite a bit for us.",
    "Created an attachment (id\u003d81280)\nFilteredCheckboxTreeViewer\n\nHere is the first crack at a filtered checkboxtreeviewer.  This viewer saves all the items which have a check before a refresh, and then after the refresh it puts the check back.   \n\nThis viewer will be needed for this bug, so I am putting it here so I don\u0027t loose the code :-)",
    "Created an attachment (id\u003d81502)\nInitial version of a filtered tree for the launch configuration\n\nThis is an initial version of the launch configuration.  The patch still needs some TLC, but it outlines the basic approach.  \n\nI think we will need some people to checkout the behaviour since a filtered checkbox tree is not common in Eclipse, so the interactions may not be right.  Maybe we can get this in early in the M4 release cycle so we have lots to time to test it out.",
    "Created an attachment (id\u003d81503)\nmylyn/context/zip\n\n",
    "targetting to 3.4M4",
    "Created an attachment (id\u003d81545)\nUpdated patch for filtered checkbox tree\n\nHere is an updated patch with some comments and TLC.  Chris / Brian, you can probably start to review this (when you get a chance). \n\nWe may also want to get some of the equinox guys to try it out and see if it makes sense or not.",
    "Created an attachment (id\u003d81546)\nmylyn/context/zip\n\n",
    "We will start making the Equinox guys too productive with all your good work Ian :)",
    "When you actually review this, let me know.  We can hit IRC if you have questions.  There were a lot of changes in the OSGiBundleBlock because the existing version assumed that all checked bundles have a TreeItem.  However, if you filter some nodes, they are still considered \"checked\".\n\nThe basic approach I took was to create a FilteredCheckboxTree which contains a cache of all elements in the tree.  This way, even when an item is filtered, you can still get / set its checked state.",
    "*** Bug 154592 has been marked as a duplicate of this bug. ***",
    "Almost there Ian, it even works well on a large set of bundles (RSA\u0027s ~1000 bundles) however a few issues need to be addressed to get us to the finish line:\n\n1) The buttons like \u0027Select All\u0027, etc... should be aligned with the jface viewer so users can associate that the buttons act on the actual plug-ins within the viewer\n\n2) The semantics of \u0027Select All\u0027 and \u0027Deselect All\u0027 should apply to whatever is filtered / displayed. It shouldn\u0027t apply to everything. This is a similar approach we take in the Import Plug-ins and Fragments wizard.\n\n3) I notice some flicker and lag. The refresh should happen in a WorkbenchJob with a delay of about 200 ms. Take inspiration from PluginImportWizardDetailedPage and its clever way of filtering things in a responsive way.\n\n4) I also got an NPE while toying with the code:\njava.lang.NullPointerException\nat org.eclipse.pde.internal.ui.launcher.OSGiBundleBlock.handleGroupStateChanged(OSGiBundleBlock.java:297)\nat org.eclipse.pde.internal.ui.launcher.AbstractPluginBlock.toggleGroups(AbstractPluginBlock.java:444)\nat org.eclipse.pde.internal.ui.launcher.AbstractPluginBlock$Listener.filterAffectingControl(AbstractPluginBlock.java:128)\nat org.eclipse.pde.internal.ui.launcher.AbstractPluginBlock$Listener.widgetSelected(AbstractPluginBlock.java:156)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227) \n\nThis is great work Ian. I\u0027m excited about this stuff as much as I am about the Plug-in Spy at the moment :)",
    "(In reply to comment #12)\n\u003e 1) The buttons like \u0027Select All\u0027, etc... should be aligned with the jface\n\u003e viewer so users can associate that the buttons act on the actual plug-ins\n\u003e within the viewer\nOk, I will fix this. \n\n\n\u003e \n\u003e 2) The semantics of \u0027Select All\u0027 and \u0027Deselect All\u0027 should apply to whatever is\n\u003e filtered / displayed. It shouldn\u0027t apply to everything. This is a similar\n\u003e approach we take in the Import Plug-ins and Fragments wizard.\nHum... the reason I went with this was because of the \"add required bundles\". How should this button act? Does it only add the required bundles that are currently visible?  Should this act differently from select all?\n\nChris suggested that we disable the \"Add Required\", \"Working Set\" and \"Restore Defaults\" when filtering, since their behaviour is not clear.\n\n\u003e \n\u003e 3) I notice some flicker and lag. The refresh should happen in a WorkbenchJob\n\u003e with a delay of about 200 ms. Take inspiration from\n\u003e PluginImportWizardDetailedPage and its clever way of filtering things in a\n\u003e responsive way.\n\u003e \nI\u0027m pretty sure this is what happens in the FilteredTree (which I extend).  If you look at the FilteredTree::textChange() method this seems to do this.  I will keep an eye out for this.\n\n\u003e 4) I also got an NPE while toying with the code:\nYikes... ok, I will look into this.",
    "For #3, use the Import Plug-ins wizard as a  litmus test... there\u0027s no flicker there.\n\nThanks again!",
    "Ian, any time to get this in for M4?",
    "Let\u0027s move this to M5",
    "Thanks Chris,\n\nI haven\u0027t forgotten about this :-).  I spent part of the weekend getting this to work again (a lot has changed in eclipse core since M3), but I was able to get it working with last weeks I build.  I will work on this early in the M5 cycle to *make sure* it gets in. (and doesn\u0027t become the reason for an M5a) :-)\n\n"
  ],
  "commentCreationDates": [
    "2007-10-22T17:55:11+02:00",
    "2007-10-22T19:24:48+02:00",
    "2007-10-22T20:06:35+02:00",
    "2007-10-26T19:17:57+02:00",
    "2007-10-29T21:48:24+01:00",
    "2007-10-29T21:48:34+01:00",
    "2007-10-29T21:50:12+01:00",
    "2007-10-30T05:13:20+01:00",
    "2007-10-30T05:13:27+01:00",
    "2007-10-30T15:45:41+01:00",
    "2007-10-30T21:37:13+01:00",
    "2007-10-31T18:11:24+01:00",
    "2007-11-02T21:06:47+01:00",
    "2007-11-02T21:59:47+01:00",
    "2007-11-02T22:05:27+01:00",
    "2007-12-03T17:08:49+01:00",
    "2007-12-11T19:01:39+01:00",
    "2007-12-11T19:08:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.pde.internal.ui.launcher.OSGiBundleBlock.handleGroupStateChanged",
          "source": "OSGiBundleBlock.java:297"
        },
        {
          "method": "org.eclipse.pde.internal.ui.launcher.AbstractPluginBlock.toggleGroups",
          "source": "AbstractPluginBlock.java:444"
        },
        {
          "method": "org.eclipse.pde.internal.ui.launcher.AbstractPluginBlock$Listener.filterAffectingControl",
          "source": "AbstractPluginBlock.java:128"
        },
        {
          "method": "org.eclipse.pde.internal.ui.launcher.AbstractPluginBlock$Listener.widgetSelected",
          "source": "AbstractPluginBlock.java:156"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:227"
        }
      ],
      "number": 0,
      "commentIndex": 12,
      "bugId": "207064",
      "date": "2007-11-02T21:06:47+01:00",
      "product": "PDE",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "207064",
  "bugId": "207064",
  "date": "2007-10-22T17:55:11+02:00",
  "product": "PDE",
  "component": "UI",
  "severity": "enhancement"
}