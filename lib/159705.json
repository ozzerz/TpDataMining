{
  "comments": [
    "org.eclipse.swt.SWTException: Failed to execute runnable \n(java.lang.ClassCastException: \norg.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart)\n\tat org.eclipse.swt.SWT.error(SWT.java:3374)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3181)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2944)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat \norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat \norg.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat \norg.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\nCaused by: java.lang.ClassCastException: \norg.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart\n\tat \norg.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager.show(TextDirectEditManager.java:505)\n\tat \norg.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart.performDirectEdit(PortLocationEditPart.java:352)\n\tat \norg.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart$3.run(PortLocationEditPart.java:392)\n\tat \norg.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive(TransactionalEditingDomainImpl.java:258)\n\tat \norg.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart.performDirectEditRequest(PortLocationEditPart.java:381)\n\tat \norg.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.performRequest(GraphicalEditPart.java:1030)\n\tat \norg.eclipse.gmf.runtime.diagram.ui.editparts.TopGraphicEditPart.performDirectEditRequest(TopGraphicEditPart.java:133)\n\tat \norg.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.performRequest(GraphicalEditPart.java:1030)\n\tat \norg.eclipse.gmf.runtime.diagram.ui.tools.CreationTool$1.run(CreationTool.java:169)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\t... 20 more",
    "Can you confirm that you got this issue after getting the runtime 1.0.1 bits into your 2.0 environment?",
    "Yes; the problem is that runtime assumes that the only client of this class is TextCompartmentEditPart while there is a special ITextAwareEditPart interface that captures text aspect of an edit part.",
    "I have verified that this issue occurs in 1.0.1. We should investigate this as a regression that affects the generated code from the tooling side.\n\n!ENTRY org.eclipse.ui 4 0 2006-10-03 12:38:04.634\n!MESSAGE flowchart.diagram.edit.parts.LinkLabelEditPart incompatible with org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart\n!STACK 0\njava.lang.ClassCastException: flowchart.diagram.edit.parts.LinkLabelEditPart incompatible with org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart\n        at org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager.show(TextDirectEditManager.java:505)\n        at flowchart.diagram.edit.parts.LinkLabelEditPart.performDirectEdit(LinkLabelEditPart.java:371)\n        at flowchart.diagram.edit.parts.LinkLabelEditPart$4.run(LinkLabelEditPart.java:419)\n        at org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive(TransactionalEditingDomainImpl.java:258)\n        at flowchart.diagram.edit.parts.LinkLabelEditPart.performDirectEditRequest(LinkLabelEditPart.java:401)\n        at org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.performRequest(GraphicalEditPart.java:1030)\n        at org.eclipse.gef.tools.DelayedDirectEditHelper.run(DelayedDirectEditHelper.java:108)\n        at org.eclipse.swt.widgets.Display.timerProc(Display.java:3603)\n        at org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)\n        at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1428)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2840)\n        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n        at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:615)\n        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n        at org.eclipse.core.launcher.Main.run(Main.java:977)\n        at org.eclipse.core.launcher.Main.main(Main.java:952)\n",
    "The cast was introduced as part of https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d148244\nGenerally, it seems to be bad idea to deliver all fixes from maintenance at once few days prior to milestone.",
    "Created an attachment (id\u003d51484)\nPatch to avoid ClassCastException\n\n",
    "Created an attachment (id\u003d51497)\nupdated patch\n\nAdded a new patch.  A generated GMF editor would have the same issue that bugzilla#148244 was fixing.  Now instead of checking if the editpart is a TextCompartmentEditPart, the TextDirectEditManager will get the figure and check if it is an instance of WrapLabel.",
    "Committed to R1_0_maintenance",
    "getFont is available for any IFigure, why the patch restricts font change to WrapLabels only? At least, standard Labels seem worth being handled as well.",
    "I agree that the TextDirectEditManager could be made more generic.  However, I didn\u0027t see the point in making it more generic for 1.0.1.  Are you using the TextDirectEditManager for editparts whose figure is not a WrapLabel?  If you want this made more generic, why don\u0027t you create a new bugzilla for 2.0?",
    "(In reply to comment #9)\n\u003e I agree that the TextDirectEditManager could be made more generic.  However, I\n\u003e didn\u0027t see the point in making it more generic for 1.0.1.\n\nWell, TextDirectEditManager *is* generic enough (e.g. #getScaledFont), it\u0027s the fix for #148244 that introduced \u0027not-generic\u0027 code for the problem.\n\n\u003e Are you using the TextDirectEditManager for editparts whose figure \n\u003e is not a WrapLabel?  \nYes.\n\n\u003e If you want this made more generic, why don\u0027t you create a new bugzilla for 2.0?\nGiven the class was \u0027generic\u0027 prior to the #148244, should I just reopen that request with \"the patch should be revised with other usecases in mind\"?",
    "The code in the method show(Point location) added for bugzilla#148244 uses methods on WrapLabel.  (These methods are also available on GEF\u0027s Label class and if WrapLabel extended GEF\u0027s Label, as it probably should, this new code would have been specific to GEF\u0027s Label class.)\n\nAre you using this TextDirectEditManager class for editparts whose figures are GEF\u0027s Labels or other figures?\n\nWe could create a subclass of TextDirectEditManager for use with WrapLabels. Would this solve your issues?\n\nI tested the fix for bugzilla#148244 on the generated FlowChart GMF example and it works there so that must be using WrapLabels.",
    "With https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d135694, TextDirectEditManager should respect figures other than WrapLabel (be \u0027generic\u0027). Patches applied to the class should be \u0027generic\u0027. If it\u0027s possible to have some functionality both for WrapLabels and Labels (especially when it gets to functionality available from IFugure, like #getFont()), this should be handled within TextDirectEditManager.\n\nTo me, there\u0027s no sense in subclass of TextDirectEditManager dedicated to WrapLabels. Instead, functionality present in common superclass should be used (i.e. font, bounds are available from IFigure, iconBounds - from Label).\n\nWhat\u0027s wrong with replacing next line in the patch\nWrapLabel fig \u003d (WrapLabel) getEditPart().getFigure();\nwith \nIFigure fig \u003d this.getEditPart().getFigure();\n\n(and removing instanceof WrapLabel checks altogether)?",
    "Dmitri, you are right, we can just use IFigure when the font is retrieved.  However, in the method show(Point location) it uses methods only on WrapLabel and Label.  I can handle both cases here too (instead of just the WrapLabel case), but the TextDirectEditManager is still going to have specific code for Label/WrapLabel.  We can\u0027t get rid of the check for an instanceof WrapLabel in the method show(Point location) because WrapLabel does not subclass Label (although it probably should).",
    "Made the show() method work with IFigure and show(Point) method work with Labels or WrapLabels to be more generic.\n",
    "Great!\nGuess, the fix will be merged into HEAD till M2, right?",
    "Can you add this patch please to M2 as this is a serious issue for me?\n\nThanks",
    "Committed change to head as well.",
    "*** Bug 160445 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2006-10-04T13:38:56+02:00",
    "2006-10-04T15:38:43+02:00",
    "2006-10-04T16:22:39+02:00",
    "2006-10-04T16:28:35+02:00",
    "2006-10-04T16:46:59+02:00",
    "2006-10-05T17:46:08+02:00",
    "2006-10-05T21:06:14+02:00",
    "2006-10-05T23:15:06+02:00",
    "2006-10-06T11:42:59+02:00",
    "2006-10-06T13:27:28+02:00",
    "2006-10-06T13:44:19+02:00",
    "2006-10-06T14:05:24+02:00",
    "2006-10-06T14:40:25+02:00",
    "2006-10-06T14:46:46+02:00",
    "2006-10-06T18:07:38+02:00",
    "2006-10-06T18:13:21+02:00",
    "2006-10-11T17:10:16+02:00",
    "2006-10-11T20:16:31+02:00",
    "2006-10-11T20:43:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3181"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2944"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.ClassCastException",
        "message": "org.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart",
        "elements": [
          {
            "method": "org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager.show",
            "source": "TextDirectEditManager.java:505"
          },
          {
            "method": "org.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart.performDirectEdit",
            "source": "PortLocationEditPart.java:352"
          },
          {
            "method": "org.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart$3.run",
            "source": "PortLocationEditPart.java:392"
          },
          {
            "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive",
            "source": "TransactionalEditingDomainImpl.java:258"
          },
          {
            "method": "org.eclipse.gmf.examples.taipan.gmf.editor.edit.parts.PortLocationEditPart.performDirectEditRequest",
            "source": "PortLocationEditPart.java:381"
          },
          {
            "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.performRequest",
            "source": "GraphicalEditPart.java:1030"
          },
          {
            "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.TopGraphicEditPart.performDirectEditRequest",
            "source": "TopGraphicEditPart.java:133"
          },
          {
            "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.performRequest",
            "source": "GraphicalEditPart.java:1030"
          },
          {
            "method": "org.eclipse.gmf.runtime.diagram.ui.tools.CreationTool$1.run",
            "source": "CreationTool.java:169"
          },
          {
            "method": "org.eclipse.swt.widgets.RunnableLock.run",
            "source": "RunnableLock.java:35"
          },
          {
            "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
            "source": "Synchronizer.java:123"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "159705",
      "date": "2006-10-04T13:38:56+02:00",
      "product": "GMF",
      "component": "Runtime Diagram",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "flowchart.diagram.edit.parts.LinkLabelEditPart incompatible with org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart",
      "elements": [
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager.show",
          "source": "TextDirectEditManager.java:505"
        },
        {
          "method": "flowchart.diagram.edit.parts.LinkLabelEditPart.performDirectEdit",
          "source": "LinkLabelEditPart.java:371"
        },
        {
          "method": "flowchart.diagram.edit.parts.LinkLabelEditPart$4.run",
          "source": "LinkLabelEditPart.java:419"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive",
          "source": "TransactionalEditingDomainImpl.java:258"
        },
        {
          "method": "flowchart.diagram.edit.parts.LinkLabelEditPart.performDirectEditRequest",
          "source": "LinkLabelEditPart.java:401"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.performRequest",
          "source": "GraphicalEditPart.java:1030"
        },
        {
          "method": "org.eclipse.gef.tools.DelayedDirectEditHelper.run",
          "source": "DelayedDirectEditHelper.java:108"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.timerProc",
          "source": "Display.java:3603"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS._g_main_context_iteration",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.g_main_context_iteration",
          "source": "OS.java:1428"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2840"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 1,
      "commentIndex": 3,
      "bugId": "159705",
      "date": "2006-10-04T16:28:35+02:00",
      "product": "GMF",
      "component": "Runtime Diagram",
      "severity": "normal"
    }
  ],
  "groupId": "159705",
  "bugId": "159705",
  "date": "2006-10-04T13:38:56+02:00",
  "product": "GMF",
  "component": "Runtime Diagram",
  "severity": "normal"
}