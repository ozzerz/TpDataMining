{
  "comments": [
    "I created some JavaBean components folowing all sun specification. When I open the Customize Java Bean and click on OK button I got:\n\n\njava.lang.NullPointerException\n\tat org.eclipse.ve.internal.java.core.CustomizeJavaBeanAction.recordProperyChange(CustomizeJavaBeanAction.java:277)\n\tat org.eclipse.ve.internal.java.core.CustomizeJavaBeanAction.customizerOK(CustomizeJavaBeanAction.java:250)\n\tat org.eclipse.ve.internal.java.core.CustomizeJavaBeanAction.run(CustomizeJavaBeanAction.java:164)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:499)\n\tat org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:229)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:539)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)\n\tat org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:441)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3348)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2968)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\nWith Session:\neclipse.buildId\u003dM20060628-1325\njava.version\u003d1.5.0_07\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dpt_BR\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\n\nEven using setProperty and firing event in received bean with setObject nothing happens. I tested it on NetBeans 5.0 and Bean Builder 0.6 and worked on both.",
    "Ricardo, what version of VE do you have installed? It would help if you could copy/paste the Configuration details to this bug report in order to further investigate this problem (i.e. Help--\u003eAbout Eclipse SDK--\u003eConfiguration Details.\nThanks...",
    "VE-runtime-1.2.zip was installed. Here we go:\n\norg.eclipse.ve (1.2.0.v20060518_RC1) \"Visual Editor\" [Resolved]\norg.eclipse.ve.cde (1.2.0.v20060518_RC1) \"Visual Editor Common Data Editor\" [Active]\norg.eclipse.ve.doc (1.2.0.v20060518_RC1) \"Visual Editor for Java User Guide\" [Resolved]\norg.eclipse.ve.java.core (1.2.0.v20060620_RC3) \"Visual Editor Java Core\" [Active]\norg.eclipse.ve.jfc (1.2.0.v20060620_RC3) \"Visual Editor for Java Foundation Classes\" [Active]\norg.eclipse.ve.propertysheet (1.2.0.v20060518_RC1) \"Visual Editor PropertySheet\" [Active]\norg.eclipse.ve.swt (1.2.0.v20060628) \"Visual Editor for Standard Widget Toolkit\" [Resolved]\n\n\n\n",
    "I could see that this error happens when I use super class in getAdditionalBeanInfo.",
    "Please append the getAdditionalBeaninfo implementation that you used.",
    "    public BeanInfo[] getAdditionalBeanInfo() {\n        Class superclass \u003d NewBean.class.getSuperclass();\n        BeanInfo sbi \u003d null;\n        try {\n            sbi \u003d Introspector.getBeanInfo(superclass);\n    \n    \n            } catch(IntrospectionException ex) { }  return new BeanInfo[] { sbi }; \n    }",
    "And NewBean extends JTextField",
    "I don\u0027t know. Can you do some debugging for us? That would occur because the property descriptor returned null. We can\u0027t see how that could happen.\n\nThe code at around line 277 is:\n\nIPropertyDescriptor propertySheetDescriptor \u003d\n\t(IPropertyDescriptor) EcoreUtil.getRegisteredAdapter(\n\t\tpropDecor.getEModelElement(),\n\t\tAbstractPropertyDescriptorAdapter.IPROPERTYDESCRIPTOR_TYPE);\nCellEditor cellEditor \u003d propertySheetDescriptor.createPropertyEditor(shell);\n\ngetRegisteredAdapter for propDecor.getEModelElement() failed. Could you try and step into getRegisteredAdapter and see why it is returning null?\n\n",
    "I verified that property descriptor is not returning null. Is your eclipse/vep version equals mine ? Because any javabean I create extending Swing Components with Customizer catch null pointer exception. So, my suggestions are:\n  - Send me some bean/customizer that works on your version\n  - I send you my java bean (very simple)\n  - Show me the most easy way to debug getRegisteredAdapter ",
    "You said the propertySheetDescriptor was NOT NULL. Is that correct? If that is correct then I don\u0027t see where the NPE is because line 277 is \n\nellEditor cellEditor \u003d propertySheetDescriptor.createPropertyEditor(shell)\n\nAnd that line can only throw an NPE if propertySheetDescriptor is null.\n\nI\u0027m looking at VE 1.2.0 the released version from Callisto.",
    "I think so because it works on other IDE, and It has to returns valid property descriptor to work. I cound not debug on Eclipse because I didn\u0027t find a way. What way do you suggest me to verify if property descriptor is not null ?",
    "Let\u0027s see if we can debug it. Please attach your bean, beaninfo, and customizer and a little description of what to do to get the error.\n\nThanks.",
    "Created an attachment (id\u003d48503)\nMy reduced bean\n\nMy bean is too big. So I created a reduced bean I\u0027m using for you debug. The problem is in the customizer. Use my bean on a JFrame using VE and open Customize Java Bean, make changes and click on OK. You must get:\n\nCustomizeJavaBeanAction.recordProperyChange(CustomizeJavaBeanAction.java:277)\n\nAnd VE doesn\u0027t change the code in editor.",
    "It worked fine for me. Did this testcase fail for you? I actually had to make two small changes because it would lock up and not work, but I never got a null pointer exception.\n\nThe changes I made to custom where:\n\n    public void setObject(Object bean) {\n        if(bean \u003d\u003d null){\n//            JOptionPane.showMessageDialog(null,\"Critical error. setObject is null\");\n        }else{\n            this.bean \u003d bean;\n            jTextField1.setText( ((JBTextField)this.bean).getBean() );\n        }\n    }\n\nYou had if(this.bean \u003d\u003d null). It needed to be if (bean \u003d\u003d null). And second, you can\u0027t do the JOptionPane.showMessageDialog in the constructor. It causes problems and locks things up (and never shows) until it times out.\n\nAnd the second was:\n\n        jButton1 \u003d new javax.swing.JButton();\n        jButton1.setText(\"Press this to update.\");\n        jTextField1 \u003d new javax.swing.JTextField();\n\nI added jButton1.setText() because there was no way to know that the button needed to be pressed to cause an update. I just hit OK and the update wouldn\u0027t take.",
    "Yes, you are right. But I still get error with the example Attached. I\u0027m gonna get VE from Callisto and I tell you.",
    "I think I found the problem. I change my version to Callisto, and I STILL got the same error. But I could see that the problem just happens if in BeanInfo a use:\n\npublic BeanInfo[] getAdditionalBeanInfo() {\n\tClass superclass \u003d JBTextField.class.getSuperclass() ;\n\tBeanInfo sbi2 \u003d null;\n\ttry {\n\t    sbi2 \u003d Introspector.getBeanInfo(superclass);\n\t} catch (IntrospectionException ex) {\n\t}\n\treturn new BeanInfo[] { sbi2 };\n}\n\nBut I have to use it because I want to see all properties including SuperClass (JTextField). I think we can resolve this putting all JTextField properties in my beanInfo but maybe its not right way. So try this, extends JTextField and use  the getAdditionalBeanInfo to check the problem.",
    "I found the error. I\u0027m trying to get a build produced but there are CVS problems at the moment so I can\u0027t get a build together yet.",
    "The fix has been released into the VE 1.2.1 M20060825 build.",
    "It worked. Thank you. "
  ],
  "commentCreationDates": [
    "2006-08-14T17:26:01+02:00",
    "2006-08-15T17:51:54+02:00",
    "2006-08-15T20:06:44+02:00",
    "2006-08-17T21:04:46+02:00",
    "2006-08-17T21:19:06+02:00",
    "2006-08-17T21:22:02+02:00",
    "2006-08-17T23:03:40+02:00",
    "2006-08-17T23:44:59+02:00",
    "2006-08-18T17:03:05+02:00",
    "2006-08-18T18:52:30+02:00",
    "2006-08-23T17:17:51+02:00",
    "2006-08-23T18:38:10+02:00",
    "2006-08-23T20:37:10+02:00",
    "2006-08-25T00:16:31+02:00",
    "2006-08-25T15:50:35+02:00",
    "2006-08-25T17:14:57+02:00",
    "2006-08-25T20:46:09+02:00",
    "2006-08-26T00:36:06+02:00",
    "2006-08-29T19:21:56+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ve.internal.java.core.CustomizeJavaBeanAction.recordProperyChange",
          "source": "CustomizeJavaBeanAction.java:277"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.CustomizeJavaBeanAction.customizerOK",
          "source": "CustomizeJavaBeanAction.java:250"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.CustomizeJavaBeanAction.run",
          "source": "CustomizeJavaBeanAction.java:164"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:499"
        },
        {
          "method": "org.eclipse.ui.actions.RetargetAction.runWithEvent",
          "source": "RetargetAction.java:229"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:539"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:488"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$6.handleEvent",
          "source": "ActionContributionItem.java:441"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:928"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3348"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2968"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "153773",
      "date": "2006-08-14T17:26:01+02:00",
      "product": "VE",
      "component": "JFC/Swing",
      "severity": "normal"
    }
  ],
  "groupId": "153773",
  "bugId": "153773",
  "date": "2006-08-14T17:26:01+02:00",
  "product": "VE",
  "component": "JFC/Swing",
  "severity": "normal"
}