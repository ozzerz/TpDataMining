{
  "comments": [
    "Test case:  JVEPROP02 involves Swing colors. \nDrop a JButton and set its background color to something like java.awt.Color.red.\nAt the end of the test you have to change it (in the source code) to various\npatterns of init string:\n1 - new java.awt.Color(0.25F,0.5F,0.75F)\n2 - new java.awt.Color(0.25F,0.5F,0.75F,0.5F)\n3 - new java.awt.Color(9999999)\n4 - new java.awt.Color(987654321,true)\n5 - new java.awt.Color(100,200,30,128)\nCases 1,2 and 5 work fine.\nCases 3 and 4 throw exceptions.  After reload the exceptions are not thrown and\nsave and re-open is OK - to get the exceptions you must physically paste the\ninitstrings 3 and 4 into the target vm argument.  The stack traces are below:\n\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Unknown Source)\n\tat java.util.Stack.pop(Unknown Source)\n\tat\norg.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.pop(PTExpressionComparator.java:55)\n\tat\norg.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.visit(PTExpressionComparator.java:260)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTNumberLiteralImpl.accept0(PTNumberLiteralImpl.java:173)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept(PTExpressionImpl.java:65)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChild(PTExpressionImpl.java:112)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChildren(PTExpressionImpl.java:125)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTClassInstanceCreationImpl.accept0(PTClassInstanceCreationImpl.java:227)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept(PTExpressionImpl.java:65)\n\tat\norg.eclipse.ve.internal.java.codegen.util.CodeGenUtil.areParseTreesEqual(CodeGenUtil.java:542)\n\tat\norg.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.addFeature(SimpleAttributeDecoderHelper.java:166)\n\tat\norg.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.decode(SimpleAttributeDecoderHelper.java:294)\n\tat\norg.eclipse.ve.internal.java.codegen.java.AbstractExpressionDecoder.decode(AbstractExpressionDecoder.java:166)\n\tat\norg.eclipse.ve.internal.java.codegen.model.CodeExpressionRef.refreshFromJOM(CodeExpressionRef.java:487)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.processEquivalentExpressions(BDMMerger.java:594)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.processExpressions(BDMMerger.java:759)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.updateRegularBeanPartExpressions(BDMMerger.java:1055)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.mergeAllBeans(BDMMerger.java:956)\n\tat org.eclipse.ve.internal.java.codegen.java.BDMMerger.merge(BDMMerger.java:105)\n\tat\norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.merge(JavaSourceTranslator.java:373)\n\tat\norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.handleParseable(JavaSourceTranslator.java:419)\n\tat\norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.run(JavaSourceTranslator.java:488)\n\tat\norg.eclipse.ve.internal.java.codegen.java.SnippetParseJob.doRun(SnippetParseJob.java:92)\n\tat\norg.eclipse.ve.internal.java.codegen.util.ReverseParserJob.run(ReverseParserJob.java:56)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n\n\nand\n\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Unknown Source)\n\tat java.util.Stack.pop(Unknown Source)\n\tat\norg.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.pop(PTExpressionComparator.java:55)\n\tat\norg.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.visit(PTExpressionComparator.java:260)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTNumberLiteralImpl.accept0(PTNumberLiteralImpl.java:173)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept(PTExpressionImpl.java:65)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChild(PTExpressionImpl.java:112)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChildren(PTExpressionImpl.java:125)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTClassInstanceCreationImpl.accept0(PTClassInstanceCreationImpl.java:227)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept(PTExpressionImpl.java:65)\n\tat\norg.eclipse.ve.internal.java.codegen.util.CodeGenUtil.areParseTreesEqual(CodeGenUtil.java:542)\n\tat\norg.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.addFeature(SimpleAttributeDecoderHelper.java:166)\n\tat\norg.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.decode(SimpleAttributeDecoderHelper.java:294)\n\tat\norg.eclipse.ve.internal.java.codegen.java.AbstractExpressionDecoder.decode(AbstractExpressionDecoder.java:166)\n\tat\norg.eclipse.ve.internal.java.codegen.model.CodeExpressionRef.refreshFromJOM(CodeExpressionRef.java:487)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.processEquivalentExpressions(BDMMerger.java:594)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.processExpressions(BDMMerger.java:759)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.updateRegularBeanPartExpressions(BDMMerger.java:1055)\n\tat\norg.eclipse.ve.internal.java.codegen.java.BDMMerger.mergeAllBeans(BDMMerger.java:956)\n\tat org.eclipse.ve.internal.java.codegen.java.BDMMerger.merge(BDMMerger.java:105)\n\tat\norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.merge(JavaSourceTranslator.java:373)\n\tat\norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.handleParseable(JavaSourceTranslator.java:419)\n\tat\norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.run(JavaSourceTranslator.java:488)\n\tat\norg.eclipse.ve.internal.java.codegen.java.SnippetParseJob.doRun(SnippetParseJob.java:92)\n\tat\norg.eclipse.ve.internal.java.codegen.util.ReverseParserJob.run(ReverseParserJob.java:56)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "This is for Sri since he wrote the PTExpressionComparator.\n\nI\u0027m having a senile moment because I could of sworn I had already redirected to\nSri this same problem with PTExpressionComparator, but I can\u0027t find it in the list.",
    "Basically more pop()s were called than push()s when comparing two AST trees.\nChecks have been added to compare number of arguments/expressions being\ncompared. Released class PTExpressionComparator.",
    "VE 1.1 is released. Moving to closed."
  ],
  "commentCreationDates": [
    "2005-07-14T16:20:34+02:00",
    "2005-07-14T22:54:22+02:00",
    "2005-07-19T17:36:51+02:00",
    "2005-07-26T18:14:21+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.EmptyStackException",
      "elements": [
        {
          "method": "java.util.Stack.peek",
          "source": "Unknown Source"
        },
        {
          "method": "java.util.Stack.pop",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.pop",
          "source": "PTExpressionComparator.java:55"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.visit",
          "source": "PTExpressionComparator.java:260"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTNumberLiteralImpl.accept0",
          "source": "PTNumberLiteralImpl.java:173"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept",
          "source": "PTExpressionImpl.java:65"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChild",
          "source": "PTExpressionImpl.java:112"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChildren",
          "source": "PTExpressionImpl.java:125"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTClassInstanceCreationImpl.accept0",
          "source": "PTClassInstanceCreationImpl.java:227"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept",
          "source": "PTExpressionImpl.java:65"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.CodeGenUtil.areParseTreesEqual",
          "source": "CodeGenUtil.java:542"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.addFeature",
          "source": "SimpleAttributeDecoderHelper.java:166"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.decode",
          "source": "SimpleAttributeDecoderHelper.java:294"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.AbstractExpressionDecoder.decode",
          "source": "AbstractExpressionDecoder.java:166"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.model.CodeExpressionRef.refreshFromJOM",
          "source": "CodeExpressionRef.java:487"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.processEquivalentExpressions",
          "source": "BDMMerger.java:594"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.processExpressions",
          "source": "BDMMerger.java:759"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.updateRegularBeanPartExpressions",
          "source": "BDMMerger.java:1055"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.mergeAllBeans",
          "source": "BDMMerger.java:956"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.merge",
          "source": "BDMMerger.java:105"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.merge",
          "source": "JavaSourceTranslator.java:373"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.handleParseable",
          "source": "JavaSourceTranslator.java:419"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.run",
          "source": "JavaSourceTranslator.java:488"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.SnippetParseJob.doRun",
          "source": "SnippetParseJob.java:92"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.ReverseParserJob.run",
          "source": "ReverseParserJob.java:56"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "103813",
      "date": "2005-07-14T16:20:34+02:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.util.EmptyStackException",
      "elements": [
        {
          "method": "java.util.Stack.peek",
          "source": "Unknown Source"
        },
        {
          "method": "java.util.Stack.pop",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.pop",
          "source": "PTExpressionComparator.java:55"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.PTExpressionComparator.visit",
          "source": "PTExpressionComparator.java:260"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTNumberLiteralImpl.accept0",
          "source": "PTNumberLiteralImpl.java:173"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept",
          "source": "PTExpressionImpl.java:65"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChild",
          "source": "PTExpressionImpl.java:112"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.acceptChildren",
          "source": "PTExpressionImpl.java:125"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTClassInstanceCreationImpl.accept0",
          "source": "PTClassInstanceCreationImpl.java:227"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTExpressionImpl.accept",
          "source": "PTExpressionImpl.java:65"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.CodeGenUtil.areParseTreesEqual",
          "source": "CodeGenUtil.java:542"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.addFeature",
          "source": "SimpleAttributeDecoderHelper.java:166"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.SimpleAttributeDecoderHelper.decode",
          "source": "SimpleAttributeDecoderHelper.java:294"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.AbstractExpressionDecoder.decode",
          "source": "AbstractExpressionDecoder.java:166"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.model.CodeExpressionRef.refreshFromJOM",
          "source": "CodeExpressionRef.java:487"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.processEquivalentExpressions",
          "source": "BDMMerger.java:594"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.processExpressions",
          "source": "BDMMerger.java:759"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.updateRegularBeanPartExpressions",
          "source": "BDMMerger.java:1055"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.mergeAllBeans",
          "source": "BDMMerger.java:956"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.BDMMerger.merge",
          "source": "BDMMerger.java:105"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.merge",
          "source": "JavaSourceTranslator.java:373"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.handleParseable",
          "source": "JavaSourceTranslator.java:419"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator$SharedToLocalUpdater.run",
          "source": "JavaSourceTranslator.java:488"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.SnippetParseJob.doRun",
          "source": "SnippetParseJob.java:92"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.util.ReverseParserJob.run",
          "source": "ReverseParserJob.java:56"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "103813",
      "date": "2005-07-14T16:20:34+02:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "normal"
    }
  ],
  "groupId": "103813",
  "bugId": "103813",
  "date": "2005-07-14T16:20:34+02:00",
  "product": "VE",
  "component": "Java Core",
  "severity": "normal"
}