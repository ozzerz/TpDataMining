{
  "comments": [
    "From the newsgroup:\neclipse-SDK-I20021204-linux-motif.zip on my\nAthlon 1400 MHz - 768 MB RAM with SuSE Linux 7.2 (kernel 2.4.19) and\n(SUNS SDK 1.4.101)/(IBM\u0027s SDK 1.4.0), and what recognized is:\n\n      Eclipse v2.0.2 (I200210251102) has a better overall performance,\n      and its debugger is much faster: launch time is 50%-100% faster;\n      and instruction steps are 5 - 10 times faster.\n\nMore details:\n[1] After my experiments with eclipse-SDK-I20021204-linux-motif.zip\n     I switched back to v2.0.2 and everything has it\u0027s perfromance as\n     expected, there was no reboot or X-server restart between my\n     experiments with eclipse-SDK-I20021204-linux-motif.zip and my\n     switch back to v2.0.2. I think that implies, that there is no \n     problem with my local maschine (for example a daemons consuming\n     CPU power, ...).\n  [2] A test case on my system is to compare the performance of v2.0.2\n     and v2.1, I have a not too big  workspace (5MB source code), I use \n     handmade classloaders and securitymanager (I think nothing else\n     should slow down the debugger). And my observation happen under\n     all conditions.\n  [3] I tried for the SDKs (SUN/IBM see below) different JVM options as\n     -client/-server -Xms320MB or other thing note somewhere in this \n     newsgroup there was no differents for 10 combinations or so.\n  [4] If I say \"50% increase in launch time\" I don\u0027t talk about plugin\n     launch time, i.e.: first start off debug session is a little bit\n     slower then the following ones. My programm measures it\u0027s startup\n     time from the very beginning of the main()-method until all services\n     are started, that needs approcimately 4 seconds, without debug (run\n     mode), on v2.0.2 it needs with debugger 5 seconds (or so), but with\n     v2.1 it needs 10 seconds with debugger and 5 seconds without it.\n     That is what I mean with 50% slow down.\n  [5] I have on my linux box a windows 98 living in a vmware-pc, I use it\n     to test my programm under windows. If I remote-debug the JVM with\n     eclipse I have approximately the same bad performance with 2.0.2 as\n     I have it in a locale-debug session with v2.1. The reason I tell\n     this here is: \n     I think my remote-performace slow down is much bigger then I \n     expected, so eclipse v2.0.2 has a perhaps a performance problem \n     with remote debugging, and again perhaps this problem \"moved\" in \n     the locale-debug mode of v2.1. That means that my first guess is \n     not nessesary true, my first guess was that the noticable overall \n     performance decrease is not the reason for the big performance \n     decrease in the debugger.",
    "We should profile to see what has changed.",
    "Stepping does seem slower in M3 (Win2K, JDK1.4.1) compared to M2. It doesn\u0027t\nhelp that the little arrow icon moves *after* the step highlight has changed;\nmakes it look even slower than it is.",
    "Luc has done some profiling here and it looks like updating the marker that\nis used for the instruction pointer is very expensive. If we can\u0027t make it\nfaster (do we *really* need to use a marker?), I would suggest removing the\nfeature. I don\u0027t think it\u0027s an acceptable tradeoff to make stepping prettier\nif it also makes it noticably slower.",
    "Jared - are you referring to the \"instruction pointer arrows\" or the \ninstruction pointer marker (used to select text in the editor). I was under the \nimpression that we are not using markers for the \"arrows\" - just annotations.",
    "It\u0027s definitely a marker. Take a look at the code in LaunchView.",
    "I did some profiling for the bug 25516. Beside the GTK problem, it appears that\nthe instruction pointer arrow takes up to 500 ms to be updated (see the\nscreenshot attached below).\n\nMy test case is :\n- launch a runtime workbench in debug mode.\n- launch a simple application in the runtime workbench.\n- set a breakpoint line 150 in ASTEvaluationEngine.getCompiledExpression(String,\nIJavaStackFrame) (\u0027EvaluationSourceGenerator mapper \u003d null;\u0027).\n- evaluate an expression in the runtime workbench.\nwhen the breakpoint is hit :\n- launch the profiler, hit [F6] (step over)\nwhen the step is performed :\n- stop the compiler\n\nWe should do the same profiling on win32 (and motif) to confirm the problem.",
    "Created an attachment (id\u003d2692)\noptimizeit3.png - profiling result of a step over on linux/GTK\n",
    "This is good. It would also be good to ask *why* it takes 1/2 a second to redraw\nan icon. If this were true in general I guess we\u0027d never live long enough to\nopen/close a large project in the Package Explorer. Yet, we do.",
    "Darin_Swanson@oti.com told me not to pollute the newsgroup, no I \nshould pollute this bug report, read \"From News group [3]\" below:\n\nFrom News group [1]: ------------------------------------------------\n\nI read a while in bugzilla (as suggest by you ) and have\nthe feeling that nobody sees the performance difference \nreported by me (all people have to measure and are not sure).\nAnd i noticed that I always talked about v2.0.2, here is a\nmore precises difference:\n\n   [1] eclipse-SDK-I20021204-linux-motif.zip [slow]\n   [2] eclipse-SDK-M20021025-linux-motif.zip [fast]\n\nIf somebody tries this two versions there is a very obvious\nperformance difference. This info is obsolete (of course) if \nthe performance difference was observed by the investigators.\n\nIf in the 30-40 days between the versions a feature was \nintroduced that consume all the CPU power, then my whole \nbug report is perhaps useless, but in this case I think \nthe new feaure should become configurabe (on/off).\n\nFrom News group [2]: ------------------------------------------------\n\nSorry I desturb again :-(\nI have done some experiments because the time between the eclipse version\nof 30-40 day seam to big, so I downloaded two closer version:\n\n   [a] eclipse-SDK-I20021114-linux-motif.zip\n   [b] eclipse-SDK-M3-linux-motif.zip (Not tried because of a surprise)\n\nand what I want post to the newsgroup, is:\n\n   I found two closer version where \n   [1] newer is as slow as eclipse-SDK-I20021204-linux-motif.zip \n   [2] older is as fast eclipse-SDK-M20021025-linux-motif.zip \n   but that is NOT TRUE!! \n\nWhat I found is\n\n   [1] eclipse-SDK-M20021025-linux-motif.zip: fast\n   [2] eclipse-SDK-I20021114-linux-motif.zip: 30% slower then [1]\n   [3] eclipse-SDK-I20021204-linux-motif.zip: 50-100% slower then [2]\n\nThat says to me:\n\n   [*] There is not one major problem but there are multiple minor.\n   [*] The very slow step speed in the debugger [3] is not introduced\n       through the blue arrow (showing the instruction pointer in the\n       editor), because it exists in version [2] with a slow but\n       (nearly) acceptable step speed. (This theme is discussed in\n       bugzilla)\n   [*] Speeding up the debugger is not very funny ;-(\n\nA other performance-theme in bugzilla is the Debug view with its threads\nand stacks for suspended Threads. If the debugged JVM is shootdown you\ncan see how the Threads die one by one (each needs a second or so),\nthat happens not always but very often. \nThis may give a hint (perhaps), because in version [1] all threads ALWAYS\ndisappear immediatly.\n\nKind regards\n\nmle\n\nPS: Please let me know what you think about my reports (and be honest not\n    polite), the reason of this question is: \n    This experimients make a lot of work and if I can\u0027t help I will stop \n    it; and more important: It is awkward to \"steal your ear\", if you \n    aren\u0027t intressted :-(\n\nFrom News group [3]: ------------------------------------------------\n\nHelping us narrow down what is causing the performance degradation is\nappreciated.\nIt would be great if you added your comments to the bug report I opened\n(http://dev.eclipse.org/bugs/show_bug.cgi?id\u003d27839) so these observations\nare not lost.\nYou can still report them here as well if you wish.\n\nThanks\nDarins",
    "Need to profile launching in M5. Stepping has been dealt with in bug 25516. \n\nWe have not experience the problem of threads disappearing one by one.",
    "I think this bug is fixed:\n\nI installed eclipse-SDK-M4-linux-motif.zip and use it for 2 days,\nmy observations are:\n\n[1] Debug (stepping and launch) is much faster (very close to I200210251102)\n[2] The shutdown of the debugged VM is much faster\n\nthere are other bugs but I think they need no new bug report\n(they repair itself during ironing ;-), but anyway:\n\n[1] Sometime a complete perspective freese (I have to restart eclispe\n    with the (still working) Menuitem :File-\u003eExit\n[2] The Debug View has to beclosed and reopened after each Eclipse launch,\n    otherwise, the thread list don\u0027t become updated.",
    "I made a mistake, the debugger is not as stable as I expected:\nAs noted above I used eclpse M4 2 days and now I can debug nearly \nnothing: Always my debug perspective freeze, and if that happens it \nneeds only a few seconds until eclipse crashes, if you want details \nlet me know.\n\n\n!ENTRY org.eclipse.jdt.debug 4 100 Dez 21, 2002 11:41:20.633\n!MESSAGE Thread not suspended, stack frame unavailable.\n!ENTRY org.eclipse.jdt.debug.ui 4 150 Dez 21, 2002 11:41:20.644\n!MESSAGE Internal Error\n!STACK 1\norg.eclipse.debug.core.DebugException: Thread not suspended, stack frame\nunavailable.\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:277)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:235)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:924)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber(JDIStackFrame.java:298)\n\tat\norg.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.selectionChanged(StepIntoSelectionActionDelegate.java:101)\n\tat org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:204)\n\tat org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:271)\n\tat org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:282)\n\tat org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)\n\tat org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:1699)\n\tat org.eclipse.jface.text.TextViewer.setSelectedRange(TextViewer.java:1577)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal(AbstractTextEditor.java:3743)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchView.selectAndReveal(LaunchView.java:586)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchView.openEditorForStackFrame(LaunchView.java:548)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchView.showEditorForCurrentSelection(LaunchView.java:451)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged(LaunchView.java:327)\n\tat org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)\n\tat\norg.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1151)\n\tat\norg.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:900)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:834)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendThreadEvent(LaunchViewEventHandler.java:216)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendEvent(LaunchViewEventHandler.java:175)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java:96)\n\tat\norg.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:65)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1803)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1619)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)\n\tat\norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)",
    "Please enter new bug report(s) for the problems you have cited - with \nreproduceable stepts/test cases. We have not experienced the freeze/crash \nproblem. Please include details of the VM on which you are debugging programs.",
    "Marking as works for me. Please open individual bug reports for any further \nissues."
  ],
  "commentCreationDates": [
    "2002-12-06T16:00:24+01:00",
    "2002-12-06T16:01:14+01:00",
    "2002-12-06T18:04:53+01:00",
    "2002-12-06T19:54:23+01:00",
    "2002-12-06T20:12:54+01:00",
    "2002-12-06T20:21:36+01:00",
    "2002-12-06T21:28:30+01:00",
    "2002-12-06T21:29:20+01:00",
    "2002-12-09T07:19:06+01:00",
    "2002-12-09T09:48:22+01:00",
    "2002-12-17T18:32:18+01:00",
    "2002-12-21T06:10:41+01:00",
    "2002-12-21T10:16:37+01:00",
    "2002-12-23T14:46:29+01:00",
    "2003-02-07T17:14:51+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.debug.core.DebugException",
      "message": "Thread not suspended, stack frame unavailable.",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException",
          "source": "JDIDebugElement.java:277"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed",
          "source": "JDIDebugElement.java:235"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame",
          "source": "JDIStackFrame.java:924"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber",
          "source": "JDIStackFrame.java:298"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.selectionChanged",
          "source": "StepIntoSelectionActionDelegate.java:101"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.refreshEnablement",
          "source": "PluginAction.java:204"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.selectionChanged",
          "source": "PluginAction.java:271"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.selectionChanged",
          "source": "PluginAction.java:282"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:148"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.selectionChanged",
          "source": "TextViewer.java:1699"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.setSelectedRange",
          "source": "TextViewer.java:1577"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal",
          "source": "AbstractTextEditor.java:3743"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView.selectAndReveal",
          "source": "LaunchView.java:586"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditorForStackFrame",
          "source": "LaunchView.java:548"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView.showEditorForCurrentSelection",
          "source": "LaunchView.java:451"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged",
          "source": "LaunchView.java:327"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:148"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateSelection",
          "source": "StructuredViewer.java:1151"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.setSelection",
          "source": "StructuredViewer.java:900"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand",
          "source": "LaunchView.java:834"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendThreadEvent",
          "source": "LaunchViewEventHandler.java:216"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendEvent",
          "source": "LaunchViewEventHandler.java:175"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents",
          "source": "LaunchViewEventHandler.java:96"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run",
          "source": "AbstractDebugEventHandler.java:65"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:31"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1803"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1619"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1446"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1429"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 12,
      "bugId": "27839",
      "date": "2002-12-21T10:16:37+01:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "27839",
  "bugId": "27839",
  "date": "2002-12-06T16:00:24+01:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}