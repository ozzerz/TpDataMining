{
  "comments": [
    "Hi,\n\nI have created an extensibility element ecore model using WSDL.ecore from org.eclipse.wst.wsdl plugin. Now I am trying to create a genmodel for my extensibility element ecore model. Since the ExtensiblityElement is defined inside wsdl.ecore, I need to reference wsdl.genmodel at the time of my genmodel creation. The problem is when I click on the wsdl.genmodel from the \"New EMF model\" dialog, Eclipse throws the following errors. I am running Eclipse RC7 and EMF 2.2.\n\nThe test case and error details are as follows:\n\n1. create an EMF model project\n2. create an ecore model 3. create an EPackage and set Name, NsPrefix and Ns URI\n4. create an EClass, give it some name\n5. for this class add super class: wsdl.ecore --\u003e ExtensibilityElement\n6. save and now create a genmodel for the ecore you just created\n7. in the \"New Model\" dialog you will reference wsdl.genmodel (your org.eclipse.wst.wsdl must be in the workspace as a binary project prior to this)\n8. browse and pick wsdl.genmodel. The genmodel will be added to the \"referenced genmodels\" tree view.\n9. Now when click on the wsdl.genmodel, a dialog will show up saying there were errors. The following errors are reported in the log file.\n\njava.lang.NullPointerException\nat org.eclipse.emf.converter.util.ConverterUtil.computeRequiredPackages(ConverterUtil.java:392)\nat org.eclipse.emf.converter.ui.contribution.base.ModelConverterPackagePage.validate(ModelConverterPackagePage.java:803)\nat org.eclipse.emf.importer.ui.contribution.base.ModelImporterPackagePage.validate(ModelImporterPackagePage.java:92)\nat org.eclipse.emf.converter.ui.contribution.base.ModelConverterPackagePage.referencedGenModelsCheckboxTreeViewerCheckStateChanged(ModelConverterPackagePage.java:756)\nat org.eclipse.emf.converter.ui.contribution.base.ModelConverterPackagePage$11.checkStateChanged(ModelConverterPackagePage.java:564)\nat org.eclipse.jface.viewers.CheckboxTreeViewer$1.run(CheckboxTreeViewer.java:133)\n\nThanks\n\nVikram Bansal",
    "I believe this bug is related to the EMF project... unless you think the wsdl ecore model has problems that need fixing. ",
    "Opening the wsdl.genmodel produces errors (which weren\u0027t being properly displayed until https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d143797 was fixed).  Looking at the WSDL model it references the XSD model like this:\n\n   usedGenPackages\u003d\"../../../org.eclipse.xsd/src-xsd/model/XSD.genmodel#//xsd\"\u003e\n\nBut that\u0027s not where the XSD model stores its model. It is stored in platform:/plugin/org.eclipse.xsd/model/XSD.ecore.\n\nIn EMF 2.2, models can register where their GenModel is located and can include the models in the runtime plugin so it can be extended without requiring any of the base plugins to be in the workspace.  XSD registers its model like this:\n\n  \u003cextension point\u003d\"org.eclipse.emf.ecore.generated_package\"\u003e\n    \u003cpackage uri\u003d\"http://www.eclipse.org/xsd/2002/XSD\" class\u003d\"org.eclipse.xsd.XSDPackage\" genModel\u003d\"model/XSD.genmodel\" /\u003e\n  \u003c/extension\u003e\n\nModels that clients will extend really ought to be registered in this way. (The generator produces this by default for any model.)",
    "Updating to correct Web Tools version (1.5)",
    "Basically as suggested by Ed, following three changes need to be made\n\n1. Original wsdl.ecore has references to xsd.ecore in the following way\n\n../../../org.eclipse.xsd/src-xsd/model/XSD.ecore#\n\nAll these references should be changed to\n\nplatform:/plugin/org.eclipse.xsd/model/XSD.ecore#\n\n2. Original wsdl.genmodel references xsd.genmodel in the following way\n\nusedGenPackages\u003d\"../../../org.eclipse.xsd/src-xsd/model/XSD.genmodel#//xsd\n\nThis should be changed to\n\nusedGenPackages\u003d\"platform:/plugin/org.eclipse.xsd/model/XSD.genmodel#//xsd\n\n3. org.eclipse.wst.wsdl should add the \"genModel\" attribute in the \"org.eclipse.emf.ecore.generated_package\" extension point usage so it can be extended without requiring any of the base plugins to be in the workspace\n\nThe following illustrates that\n\n\u003cextension point\u003d\"org.eclipse.emf.ecore.generated_package\"\u003e\n\t\t\u003cpackage\n\t\t\turi\u003d\"http://www.ibm.com/wsdl/2003/WSDL\"\n\t\t\tclass\u003d\"org.eclipse.wst.wsdl.WSDLPackage\"\n\t\t\tgenModel\u003d\"model/wsdl.genmodel\"\u003e\n\t\t\u003c/package\u003e\n\u003c/extension\u003e\n\n\nBy making the #1 and #2 change I was able to run the genModel for my Extensibility model.\n\nregards\n\n--vikram",
    "Can you please provide some patches for this? We will review and consider them.",
    "Created an attachment (id\u003d43950)\nwsdl.ecore EMF model\n\nFixes incorrect references to the XSD ecore EMF model",
    "Created an attachment (id\u003d43951)\nwsdl.genmodel EMF Generator Model\n\nFixes incorrect references to XSD EMF generator model. Also fixes the \"impl\" path of Code generation",
    "Thanks! It appears though that you\u0027ve attached the entire models. I was actually expecting a patch with only the differences. Are you familiar with creating patches? If you have the project in the workspace, right click on the project and select Team-\u003eCreate patch. Use the unified format and Project for the patch root and save in a txt file. Then attach that patch and obsolete the ones you attached previously.",
    "On an unrelated note, don\u0027t you think that Blocker is a bit too high a severity for this bug?",
    "Since there is a workaround, reducing the severity to critical. I would still say it is critical because one cannot create any extensibility element models unless he/she fixes the problems in the wsdl.ecore and wsdl.genmodel. Additionally the current wsdl.genmodel is not in browsable state. \n\nThanks for updating me on the patch process. I will create one and will upload soon.",
    "Ed and I reviewed the WSDL models and confirmed that some EMF related artifacts contain errors and some others are obsolete or not properly componentized.\n\nThe Rose model is not built using controlled units making it hard to re-use. The model is also embeding instead of referencing the XSD model as a controlled unit.\n\nAs reported, some cross model references in the ecore and genmodel are broken. These artifacts are also not up to date with the latest EMF changes.\n\nThe generated source code Javadoc is out of synch with the actual package names, and the code cannot be re-generated over easily.\n\nI propose we extend the scope of the bug to fix all reported issues and bring the models and the generated code in a state where they can be easily used to model new things and re-generate code. \n\nEd suggested we follow the XSD model pattern of storing all model related artifacts in a model folder outside of the source folders.\n\nGiven the scope of these changes I propose we target this for either 1.5.1 (time permitting and if the risks are accepted) or 2.0.\n",
    "Created an attachment (id\u003d44372)\nProduced during the model review meeting\n\nThese changes were suggested during the model review meeting. There is more to do to synch the generated code.",
    "Assigning to Craig so this critical bug has a concrete component owner. \n\nI\u0027m also taking Valentin\u0027s advice and re-targetting to 1.5.1 ... and only then, if further review reveals it is both critical and safe. \n\nIt is too late in 1.5 cycle to make the magnitude of changes discussed here. \n\nVikram, please don\u0027t hesitate to let us know how this impacts you. \n\n\n\n",
    "I don\u0027t believe this is a \u0027critical\u0027 bug.  This problem concerns our EMF related development artifacts (there\u0027s no bug in the runtime behaviour of our tools).  \n\nI\u0027ve discussed with Ed and he\u0027s graciously volunteered to lead an EMF model scrub for WTP 2.0 (see bug 147983) so I\u0027d like to include this issue as part of that effort.\n\nIn the meantime Vikram I hope you can make progress by utilizing Valentin\u0027s patch. If this is not the case please reply back.",
    "Tentatively targetting for M6.",
    "Current state\n\nThe WSDL model\u0027s EMF artifacts and source code have been ported from a proprietary naming scheme to the open Eclipse source naming scheme (org.eclipse.wst.wsdl*). It appears that port was done using the path of least resistance by simply renaming the generated code packages and not by correcting the UML and EMF artifacts and regenerating. Some artifacts are broken or obsolete and the generated code patterns are at the EMF 2.1 level. \n\nAll these issues prevent us from using a top down approach to changing the WSDL model in the future. It also prevents the community from easily extending the WSDL model. The model will have to be updated soon to conform logically with the latest WSDL schema from WS-I (https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d173600). This new WSDL schema allows most WSDL elements to have extensibility elements. The model artifacts need to be in a good condition should we decide to update to WSDL4J 1.5 or later (https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d167416).\n\nObjective\n\nThe main objective is to correct all WSDL UML and EMF artifacts and make sure the code can be regenerated from these artifacts. By regenerating, the generated code will follow the patterns used by the EMF 2.3 code generator as requested by some consumers (BPEL model).\n\nConstraints\n\nThe overriding constraint is API backward compatibility. The model should continue to pass all existing unit tests and continue to work for existing clients. The generated code should compile with JDK 1.4. \n\nMain issues\n\nThis section discusses the main issues observed when the model code and artifacts were reviewed this past summer. See also the comments in the bug report. A solution is proposed for addressing each issue, and pros and cons are discussed where needed.\n\nIssue #1\n\nThe WSDL UML model  is not built using controlled units making it hard to re-use. This leads to the extension models for SOAP, HTTP and MIME using copies of the WSDL UML model. The model is also embedding instead of referencing the XSD UML model as a controlled unit.\n\nProposed solution\n\nComponentize the WSDL UML model by creating a WSDL .cat file. Modify the WSDL UML model and the extension UML models to reuse the WSDL .cat file. Modify the WSDL UML model  to reuse the XSD .cat file from the XSD plug-in. Try to follow the structure we uses in the EMF/XSD models so that the importer can automatically determine the Path Map. For example:  file_name   \"$VABASE_PLUGINS_PATH\\\\org.eclipse.emf.ecore\\\\model\\\\org.eclipse.emf.Ecore.cat\"\n\nIssue #2\n\nSome cross model references in the WSDL ECore and genmodel are broken. These artifacts are also not up to date with the latest EMF changes.\n\nProposed solution\n\nCorrect the WSDL ecore and genmodel artifacts making sure they can be regenerated from the UML model.\n\nIssue #3\n\nThe UML, ecore and genmodel artifacts for SOAP, MIME, HTTP are broken. They specify old plug-in names and source folders, etc. The UML models are not using the extended ECore properties to specify the package level properties (prefix, namespace URI, etc).\n\nProposed solution\n\nCorrect all artifacts, making sure the UML models are complete and that the EMF artifacts can be regenerated from the UML models.\n\nIssue #4\n\nThe SOAP UML model appears to be in total disagreement with the generated code. The SOAP extensibility elements do not seem to extend the corresponding javax.wsdl.* interfaces. Even after fixing this, some modeled features conflict with the javax.wsdl equivalent, resulting in compile errors.\n\nProposed solution\n\nCorrect the SOAP UML model to properly define and extend the javax.wsdl* interfaces. Correct the modeled features and operations to agree with the existing code.\n\nIssue #5\n\nThe generated source code Javadoc is out of synch with the actual package names. This results in a lot of differences when comparing newly regenerated code with the previous version from CVS.\n\nProposed solution\n\nFormat the code using project level settings. Correct all javadoc mistakes using a script.\n\nIssue #6\n\nIn order to better align the WSDL model with the XSD model, it\u0027s been suggested that we should follow the XSD EMF plug-in pattern of storing all model related artifacts in a folder named model located outside of the source folders.\n\nProposed solution\n\nPlace all corrected artifacts in a model folder and delete the old model folders located under each src-* source folders. We could create model sub-folders to keep the separation between the core model and the extension models. This could also de-clutter the folder slightly.\n\nIssue #7 - slightly controversial\n\nOur modeled entities\u0027 interfaces extend their counterpart from javax.wsdl.*. The way we currently model the features results in the methods from the javax.wsdl.* interface being duplicated in the org.eclipse.wst.wsdl.* equivalent. From the Java point of view this is redundant. Moreover, the SOAP interfaces do not have these methods. It appears they have been manually deleted?\n\nProposed Solution\n\nWe can do two things: \n1) keep the duplicate methods in the WSDL, HTTP and MIME interfaces and correct the SOAP interfaces (this will be taken care of through regeneration)\n2) use ECore visibility\u003d\"none\" property in the UML models to suppress the generation of these \"duplicate\" feature methods in the generated interface.\n\nPros/Cons\n\nWe would have to carefully explain approach #1 which would appear as a breaking API change to the untrained eye.\nSolution #2 results in some extra metadata added to the interface Javadoc to allow for round tripping from Java to ECore. These annotations can be suppressed but this would result in all @model annotations going away. Here\u0027s how this would look for the SOAPBinding interface.\n\n  * @model features\u003d\"transportURI style\" \n  *        transportURIType\u003d\"java.lang.String\" transportURISuppressedGetVisibility\u003d\"true\" transportURISuppressedSetVisibility\u003d\"true\"\n  *        styleType\u003d\"java.lang.String\" styleSuppressedGetVisibility\u003d\"true\" styleSuppressedSetVisibility\u003d\"true\"\n\nIssue #8\n\nAllow the WSDL genmodel to be extended without requiring any of  the base plugins to be in the workspace.\n\nProposed solution\n\nAdd the \"genModel\" attribute in the \"org.eclipse.emf.ecore.generated_package\" extension point usage so it can be extended without requiring any of the base plugins to be in the workspace. \n\nImplementation Plan\n\nI will try to follow a cautious approach, minimizing the number of changes made in each step in order to be able to maintain some sense of stability and control and to prevent inadvertent changes. I will also run the unit tests suite before committing each change.\n\nI am planning on following these steps:\n1) Enable project level formatting settings and format the code ( I plan on using the same style settings as the one used in EMF)\n2) Commit the code\n3) Correct all Javadoc mistakes using a script\n4) Commit the code\n5) Correct the WSDL model artifacts (UML, EMF)\n6) Regenerate the WSDL mode code and carefully review the differences\n7) Commit the WSDL model changes and the regenerated code\n8) Fix the extension models and artifacts one by one\n9) Commit the changes to the extension models\n10) Modify plugin.xml to implement the solution for issue #8\n11) Commit the code\n\nI will likely do all this work in a temporary branch until I perfect the approach, then commit the fixes to HEAD.",
    "The fixes so far can be seen in a branch named bug145413.",
    "Fixes commited to CVS.",
    "Fixes available in I-builds \u003e\u003d I200703150336.",
    "Created an attachment (id\u003d61164)\nVersion update patch\n\nThis patch increases the WSDL model plug-in version to 1.1.0 and updates the dependent plugins to use [1.1.0, 1.2.0) as the version range.",
    "I\u0027ve released the cross-project patches as directed by Valentin, to bump the versions to 1.1.0, and adjust downstream dependancies ... about 12 projects in all. \n\nThere was still one compile error in my workspace (in org.eclipse.jst.j2ee.webservice) ... but, hoping I have an out of \ndate target, or something. But, be prepared ... there may be some Execution Environment issues or something? \n\nThe build is just starting around 3/20 0445 UTC ... so, we\u0027ll see in the morning :) \n",
    "Closing."
  ],
  "commentCreationDates": [
    "2006-06-05T21:15:16+02:00",
    "2006-06-06T07:02:07+02:00",
    "2006-06-06T12:57:13+02:00",
    "2006-06-06T19:31:23+02:00",
    "2006-06-06T21:08:22+02:00",
    "2006-06-08T19:24:25+02:00",
    "2006-06-09T07:38:55+02:00",
    "2006-06-09T07:40:22+02:00",
    "2006-06-09T17:47:05+02:00",
    "2006-06-09T17:49:57+02:00",
    "2006-06-09T23:24:23+02:00",
    "2006-06-14T06:12:30+02:00",
    "2006-06-14T06:15:36+02:00",
    "2006-06-15T08:31:09+02:00",
    "2006-06-27T20:05:02+02:00",
    "2007-03-01T22:50:46+01:00",
    "2007-03-02T00:37:20+01:00",
    "2007-03-06T20:50:46+01:00",
    "2007-03-15T01:40:16+01:00",
    "2007-03-15T18:11:47+01:00",
    "2007-03-16T21:56:37+01:00",
    "2007-03-20T05:49:22+01:00",
    "2007-04-25T19:43:16+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.emf.converter.util.ConverterUtil.computeRequiredPackages",
          "source": "ConverterUtil.java:392"
        },
        {
          "method": "org.eclipse.emf.converter.ui.contribution.base.ModelConverterPackagePage.validate",
          "source": "ModelConverterPackagePage.java:803"
        },
        {
          "method": "org.eclipse.emf.importer.ui.contribution.base.ModelImporterPackagePage.validate",
          "source": "ModelImporterPackagePage.java:92"
        },
        {
          "method": "org.eclipse.emf.converter.ui.contribution.base.ModelConverterPackagePage.referencedGenModelsCheckboxTreeViewerCheckStateChanged",
          "source": "ModelConverterPackagePage.java:756"
        },
        {
          "method": "org.eclipse.emf.converter.ui.contribution.base.ModelConverterPackagePage$11.checkStateChanged",
          "source": "ModelConverterPackagePage.java:564"
        },
        {
          "method": "org.eclipse.jface.viewers.CheckboxTreeViewer$1.run",
          "source": "CheckboxTreeViewer.java:133"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "145413",
      "date": "2006-06-05T21:15:16+02:00",
      "product": "Web Tools",
      "component": "wst.wsdl",
      "severity": "normal"
    }
  ],
  "groupId": "145413",
  "bugId": "145413",
  "date": "2006-06-05T21:15:16+02:00",
  "product": "Web Tools",
  "component": "wst.wsdl",
  "severity": "normal"
}