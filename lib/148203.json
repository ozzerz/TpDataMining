{
  "comments": [
    "1.5 RC5\n\nThe following exception occured while publishing to the server. I think it\u0027s due to the changes in bug 145090\n\nENTRY org.eclipse.wst.server.core 4 0 2006-06-22 08:43:33.187\n!MESSAGE Could not publish to the server.\n!STACK 0\njava.lang.ArrayIndexOutOfBoundsException: 3\n        at\norg.eclipse.wst.web.internal.deployables.ComponentDeployable.getExistingModuleResource(ComponentDeployable.java:250)\n        at\norg.eclipse.wst.web.internal.deployables.ComponentDeployable.getExistingModuleResource(ComponentDeployable.java:252)\n        at\norg.eclipse.wst.web.internal.deployables.ComponentDeployable.getExistingModuleResource(ComponentDeployable.java:252)\n        at\norg.eclipse.wst.web.internal.deployables.ComponentDeployable.getMembers(ComponentDeployable.java:126)\n        at\norg.eclipse.wst.web.internal.deployables.ComponentDeployable.getMembers(ComponentDeployable.java:135)\n        at\norg.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable.members(J2EEFlexProjDeployable.java:133)\n        at\norg.eclipse.wst.server.core.internal.ModulePublishInfo.fillCache(ModulePublishInfo.java:212)\n        at\norg.eclipse.wst.server.core.internal.ModulePublishInfo.getDelta(ModulePublishInfo.java:261)\n        at\norg.eclipse.wst.server.core.internal.ServerPublishInfo.getDelta(ServerPublishInfo.java:250)\n        at\norg.eclipse.wst.server.core.internal.Server.getPublishedResourceDelta(Server.java:967)\n        at\norg.eclipse.wst.server.core.model.ServerBehaviourDelegate.getPublishedResourceDelta(ServerBehaviourDelegate.java:491)\n        at\norg.eclipse.wst.server.core.model.ServerBehaviourDelegate.publish(ServerBehaviourDelegate.java:555)\n        at\norg.eclipse.wst.server.core.internal.Server.doPublish(Server.java:803)\n        at org.eclipse.wst.server.core.internal.Server.publish(Server.java:791)\n        at\norg.eclipse.wst.server.core.internal.PublishServerJob.run(PublishServerJob.java:145)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "I looked into the code and the problematic line contains:\n\n   pathSegments[moduleSegments.length \u003e 0 ? moduleSegments.length : 0]\n\nHowever, the code does not check if pathSegments.length \u003e moduleSegments.length. I\u0027m also curious if the last check-in broke it.\n\nhttp://dev.eclipse.org/viewcvs/index.cgi/wst/components/web/plugins/org.eclipse.wst.web/static_web_project/org/eclipse/wst/web/internal/deployables/ComponentDeployable.java.diff?r1\u003d1.10\u0026r2\u003d1.11\u0026cvsroot\u003dWebTools_Project\n\n",
    "According to the check-in comment the suspicious change was made to fix bug 119286.",
    "Created an attachment (id\u003d45084)\nProposed patch\n\nHere is a proposed patch to add the greater than check.  Can you test with this patch?",
    "Patch attached.  Added a safe check to ensure we don\u0027t get an array index out of bounds exception.  This code was recently reworked to improve performance and passed our scenarios, so not sure what is different about Gunnar\u0027s.  At any rate, this change makes sense and is very safe and contained.",
    "I know about the performance improvements and that\u0027s why I think the code needs some additional changes instead of just avoiding the AIOOBE.\n\nI debugged through my case when the AIOOBE is thrown and the interesting thing is that pathSegments.length \u003d\u003d moduleSegments.length. If this happens and startsWith(...) returns true then the paths are equal. That also means that the method must return this resource because it was explicitly asked for it.\n\nJust for the record, the path#toString() is \"WEB-INF/classes/aSubfolder\" and moduleResource#toString() is \"ModuleFolder [aSubfolder, WEB-INF/classes/aSubfolder]\".\n\nSo, the additional check to avoid the AIOOBE is ok. But there must be a problem in the preceding code (line 238-244).\n\n// If the last segment in passed in path equals the module resource name\n// and segment count is the same and the path segments start with the module path segments\n// then we have a match and we return the existing moduleResource\nif (pathSegments[pathSegments.length - 1].equals(moduleResource.getName()) \u0026\u0026\n        (moduleSegments.length + 1) \u003d\u003d pathSegments.length \u0026\u0026\n        startsWith(moduleSegments, pathSegments))\n    return moduleResource;\n\n\nThe comment clearly stated \"and segment count is the same\". This clashes with the check \"(moduleSegments.length + 1) \u003d\u003d pathSegments.length\". Either I have a suspicious moduleResource or the check should be simply moduleSegments.length \u003d\u003d pathSegments.length.\n",
    "Some more debugging info about the module resource:\n\nModuleResource#container \u003d F/myProject/build/war/classes/aSubFolder\nModuleResource#members \u003d null\nModuleResource#name \u003d aSubFolder\nModuleResource#path \u003d WEB-INF/classes/aSubFolder\n\n\"build/war/classes\" is the output directory from the JDT compiler. Thus, \"aSubFolder\" is actually a start folder of package hierarchy.",
    "I\u0027m not sure if I have a bogus module resource. For most resources the expression (moduleSegments.length + 1) \u003d\u003d pathSegments.length is true.",
    " \"ModuleFolder [aSubfolder, WEB-INF/classes/aSubfolder]\" means that there is a folder called \"aSubFolder\" nested in the \"aSubFolder\" folder in \"WEB-INF/classes\". So, this case should fail.  It is trying to find \"WEB-INF/classes/aSubfolder/aSubFolder\".  Does this resource exist? That\u0027s what it is trying to do.",
    "(In reply to comment #8)\n\u003e  \"ModuleFolder [aSubfolder, WEB-INF/classes/aSubfolder]\" means that there is a\n\u003e folder called \"aSubFolder\" nested in the \"aSubFolder\" folder in\n\u003e \"WEB-INF/classes\". So, this case should fail.  It is trying to find\n\u003e \"WEB-INF/classes/aSubfolder/aSubFolder\".  Does this resource exist? That\u0027s what\n\u003e it is trying to do.\n\nA folder (or file) with the path \"WEB-INF/classes/aSubfolder/aSubFolder\" does not exist. According to the path passed to getExistingModuleResource it is trying to find \"WEB-INF/classes/aSubfolder\".\n\nDuring debugging I realized that this happens for different sub folders, too.\n\n\n\n\n\n",
    "Created an attachment (id\u003d45095)\nscreeenshot of variables view with bogus module folders\n\nSee the attached screenshot. I created a simple detail formatter to print out the hierarchy. It looks like someone generates bogus module folders.",
    "(In reply to comment #10)\n\u003e Created an attachment (id\u003d45095) [edit]\n\u003e screeenshot of variables view with bogus module folders\n\nBTW, this screenshot is from a stack frame before the one that processes the list of resources and throws the exception.\n",
    "Gunnar, Can you attach a zip of your project or a similar project exposing this issue?",
    "I am not able to reproduce this behaviour on various web projects.",
    "(In reply to comment #12)\n\u003e Gunnar, Can you attach a zip of your project or a similar project exposing this\n\u003e issue?\n\nI sent you a workspace to your mail address. I was able to reproduce the problem there.\n\n",
    "Gunnar, can you just export the project and send it to me or attach here?",
    "It\u0027s not just a project. You need the workspace (contains two projects) I sent you. It\u0027s a stripped down version (without confidential code, just a few test classes) that is exposing the problem.\n\nI can\u0027t attach the workspace here, sorry.",
    "Created an attachment (id\u003d45116)\nProposed patch\n\nHey Gunnar, I was able to reproduce with your test and you\u0027re right, it looks like a pretty basic problem with creating the module resources.  I added an updated patch which works in my testing, can you give it a shot?\n\nThanks for the effort here!",
    "(In reply to comment #17)\n\u003e Created an attachment (id\u003d45116) [edit]\n\u003e Proposed patch\n\nThe patch works fine. I could also verify that the bogus folders are gone.\n\nThanks!",
    "Great, thanks Gunnar.  The problem here was that the java folder module resources were getting create with a path with an extra segment.  That is, its parent container was set to be itself.  That created some confusion.  The fix is trivial, set the parent path to be the parent.  It is just a one word change and myself and Gunnar have verified it works.  I have tested other scenarios and junits.\n\nThis bug is ready for PMC approval.",
    "We will also add this particular test to our junit test bucket for deployables.",
    "+1 \n\nAs I understand it, the main problem was a \"typo\" where \u0027newpath\u0027 was used instead of \u0027path\u0027 Plus, the patch includes some bullet proofing to gaurd the range can not get out of bound. \n\nThanks all. \n\n",
    "This is released for the WTP 1.5 RC6 062206 driver.",
    "Dropped.",
    "verified 20060925",
    "Verified, closing."
  ],
  "commentCreationDates": [
    "2006-06-22T14:52:36+02:00",
    "2006-06-22T14:55:07+02:00",
    "2006-06-22T14:58:52+02:00",
    "2006-06-22T15:35:12+02:00",
    "2006-06-22T15:37:20+02:00",
    "2006-06-22T16:30:00+02:00",
    "2006-06-22T16:39:53+02:00",
    "2006-06-22T17:00:01+02:00",
    "2006-06-22T18:16:11+02:00",
    "2006-06-22T18:22:00+02:00",
    "2006-06-22T18:36:51+02:00",
    "2006-06-22T18:38:37+02:00",
    "2006-06-22T18:56:05+02:00",
    "2006-06-22T19:09:38+02:00",
    "2006-06-22T20:18:47+02:00",
    "2006-06-22T20:57:10+02:00",
    "2006-06-22T21:03:37+02:00",
    "2006-06-22T21:32:41+02:00",
    "2006-06-22T21:40:37+02:00",
    "2006-06-22T21:53:44+02:00",
    "2006-06-22T21:59:56+02:00",
    "2006-06-22T22:01:53+02:00",
    "2006-06-22T22:11:42+02:00",
    "2006-06-22T22:13:47+02:00",
    "2006-09-26T18:48:20+02:00",
    "2006-09-26T21:03:34+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "3",
      "elements": [
        {
          "method": "org.eclipse.wst.web.internal.deployables.ComponentDeployable.getExistingModuleResource",
          "source": "ComponentDeployable.java:250"
        },
        {
          "method": "org.eclipse.wst.web.internal.deployables.ComponentDeployable.getExistingModuleResource",
          "source": "ComponentDeployable.java:252"
        },
        {
          "method": "org.eclipse.wst.web.internal.deployables.ComponentDeployable.getExistingModuleResource",
          "source": "ComponentDeployable.java:252"
        },
        {
          "method": "org.eclipse.wst.web.internal.deployables.ComponentDeployable.getMembers",
          "source": "ComponentDeployable.java:126"
        },
        {
          "method": "org.eclipse.wst.web.internal.deployables.ComponentDeployable.getMembers",
          "source": "ComponentDeployable.java:135"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable.members",
          "source": "J2EEFlexProjDeployable.java:133"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ModulePublishInfo.fillCache",
          "source": "ModulePublishInfo.java:212"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ModulePublishInfo.getDelta",
          "source": "ModulePublishInfo.java:261"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ServerPublishInfo.getDelta",
          "source": "ServerPublishInfo.java:250"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.Server.getPublishedResourceDelta",
          "source": "Server.java:967"
        },
        {
          "method": "org.eclipse.wst.server.core.model.ServerBehaviourDelegate.getPublishedResourceDelta",
          "source": "ServerBehaviourDelegate.java:491"
        },
        {
          "method": "org.eclipse.wst.server.core.model.ServerBehaviourDelegate.publish",
          "source": "ServerBehaviourDelegate.java:555"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.Server.doPublish",
          "source": "Server.java:803"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.Server.publish",
          "source": "Server.java:791"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.PublishServerJob.run",
          "source": "PublishServerJob.java:145"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "148203",
      "date": "2006-06-22T14:52:36+02:00",
      "product": "Web Tools",
      "component": "wst.web",
      "severity": "critical"
    }
  ],
  "groupId": "148203",
  "bugId": "148203",
  "date": "2006-06-22T14:52:36+02:00",
  "product": "Web Tools",
  "component": "wst.web",
  "severity": "critical"
}