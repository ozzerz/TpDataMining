{
  "comments": [
    "Occasionally the SWT_AWT.new_Frame hangs.  CPU consumption is 0, and when I \npress pause in the debugger, the stack frame appears as follows:\n\n\tWEmbeddedFrame(Component).reshape(int, int, int, int) line: not \navailable\n\tWEmbeddedFrame(Component).setBounds(int, int, int, int) line: not \navailable\n\tWEmbeddedFrame(Component).move(int, int) line: not available\n\tWEmbeddedFrame(Component).setLocation(int, int) line: not available\n\tWEmbeddedFrame(Window).init(GraphicsConfiguration) line: not available\n\tWEmbeddedFrame(Window).\u003cinit\u003e() line: not available\n\tWEmbeddedFrame(Frame).\u003cinit\u003e(String) line: not available\n\tWEmbeddedFrame(Frame).\u003cinit\u003e() line: not available\n\tWEmbeddedFrame(EmbeddedFrame).\u003cinit\u003e(long) line: not available\n\tWEmbeddedFrame(EmbeddedFrame).\u003cinit\u003e() line: not available\n\tWEmbeddedFrame.\u003cinit\u003e(long) line: not available\n\tWEmbeddedFrame.\u003cinit\u003e(int) line: not available\n\tGeneratedConstructorAccessor71.newInstance(Object[]) line: not \navailable\n\tDelegatingConstructorAccessorImpl.newInstance(Object[]) line: not \navailable\n\tConstructor.newInstance(Object[]) line: not available\n\tSWT_AWT.new_Frame(Composite) line: 120",
    "I have not been able to reproduce this. I cannot do much without a \nreproducible case.",
    "Agreed... and I can\u0027t seem to reproduce it either.",
    "I have seen hangs from time to time and today every time I run my application.\n\nI run new_Frame in the main thread to avoid \"Invalid thread access\"\nSWTException\u0027s.  Do I have a choice?  It seems as if the ancestry of the\nargument to new_Frame must come from the main thread.\n\nIn today\u0027s hangs, I see these tracebacks, using j2sdk1.4.2_03, Eclipse 3.0.1 and\nthe latest Windows XP Pro:\n\nThread [main] (Suspended)\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Component).reshape(int, int, int, int)\nline: 1672\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Component).setBounds(int, int, int,\nint) line: 1664\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Component).move(int, int) line: 1541\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Component).setLocation(int, int) line: 1533\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Window).init(java.awt.GraphicsConfiguration)\nline: 249\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Window).\u003cinit\u003e() line: 275\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Frame).\u003cinit\u003e(java.lang.String) line: 401\n\tsun.awt.windows.WEmbeddedFrame(java.awt.Frame).\u003cinit\u003e() line: 366\n\tsun.awt.windows.WEmbeddedFrame(sun.awt.EmbeddedFrame).\u003cinit\u003e(long) line: 51\n\tsun.awt.windows.WEmbeddedFrame(sun.awt.EmbeddedFrame).\u003cinit\u003e() line: 41\n\tsun.awt.windows.WEmbeddedFrame.\u003cinit\u003e(long) line: 44\n\tsun.awt.windows.WEmbeddedFrame.\u003cinit\u003e(int) line: 41\n\tsun.reflect.NativeConstructorAccessorImpl.newInstance0(java.lang.reflect.Constructor,\njava.lang.Object[]) line: not available [native method]\n\tsun.reflect.NativeConstructorAccessorImpl.newInstance(java.lang.Object[]) line: 39\n\tsun.reflect.DelegatingConstructorAccessorImpl.newInstance(java.lang.Object[])\nline: 27\n\tjava.lang.reflect.Constructor.newInstance(java.lang.Object[]) line: 274\n\torg.eclipse.swt.awt.SWT_AWT.new_Frame(org.eclipse.swt.widgets.Composite) line: 146\n        ...\n\nFrom java.awt.Component:\n    public void reshape(int x, int y, int width, int height) {\n\tsynchronized (getTreeLock()) {                                          \u003c\u003d\u003d\nLine 1672\n\t    boolean resized \u003d (this.width !\u003d width) || (this.height !\u003d height);\n            boolean moved \u003d (this.x !\u003d x) || (this.y !\u003d y);\n\n\nThread [AWT-EventQueue-0] (Suspended)\n\tsun.awt.windows.WDialogPeer.endModal() line: not available [native method]\n\tsun.awt.windows.WDialogPeer.hide() line: 70\n\tcom.pantero.ui.common.dialog.OptionDialog(java.awt.Component).hide() line: 1167\n\tcom.pantero.ui.common.dialog.OptionDialog(java.awt.Window).hide() line: 514\n\tcom.pantero.ui.common.dialog.OptionDialog(java.awt.Dialog).hide() line: 625\n\tcom.pantero.ui.common.dialog.OptionDialog(java.awt.Component).show(boolean)\nline: 1136\n\tcom.pantero.ui.common.dialog.OptionDialog(java.awt.Component).setVisible(boolean)\nline: 1088\n\tcom.pantero.ui.common.dialog.OptionDialog(com.pantero.util.swing.dialogs.BasicDialog).close()\nline: 299\n\tcom.pantero.util.swing.buttons.DialogButtonPanel.closeDialog() line: 42\n\tcom.pantero.util.swing.buttons.DialogButtonPanel$1.run(java.lang.Object) line: 379\n\nFrom java.awt.Component\n            synchronized (getTreeLock()) {\n                visible \u003d false;\n                if (containsFocus()) {\n                    autoTransferFocus(true);\n                }\n                ComponentPeer peer \u003d this.peer;\n                if (peer !\u003d null) {\n                    peer.hide();                 \u003c\u003d\u003d Line 1167\n\n\nTo fix the problem, I can only think of changing new_Frame to execute the\nembedded frame constructor in an AWT thread, not the main thread.  Can you\nsuggest a better fix/workaround?",
    "It makes sense to me that the constructor for the frame should run on the Swing\nthread.  \n\nThere is potential deadlock if the Swing thread is already blocking on a\nDisplay.syncExec().  Nevertheless, I still think that Swing code should run on\nthe Swing thread.  \n\nThis problem that we\u0027ve noticed is likely timing dependent, so a reliable test\ncase is probably impossible to create.\n",
    "\u003eTo fix the problem, I can only think of changing new_Frame to execute the\n\u003eembedded frame constructor in an AWT thread, not the main thread.  Can you\n\u003esuggest a better fix/workaround?\n\nHow would you do that? Use invokeAndWait()? Wouldn\u0027t that block to same way?",
    "Created an attachment (id\u003d18602)\nAn example workaround that fixes new_Frame\n\nI successfully modified new_Frame to fix my problem.  An invokeLater now runs\nthe frame creation code, and that calls asyncExec to run the code that follows\nframe creation.  Because new_Frame can no longer return the frame, I added a\nUnaryProcedure parameter (from org.apache.commons.functor) that gets executed\nat the end with the Frame as the argument.\n\nI don\u0027t know if Eclipse has the equivalent of a UnaryProcedure.  If not,\nSWT_AWT could define a small helper class.\n\nPretty awful, but I don\u0027t know if a good solution exists.",
    "I am now able to reliably reproduce this problem.  The problem occurs when a\nmodal Swing dialog is opened over an Eclipse editor with a Swing pane for content.\n\nHere are the two blocking threads:\nThread [main] (Suspended)\n\tWEmbeddedFrame(EmbeddedFrame).addNotify() line: 296\n\tSWT_AWT.new_Frame(Composite) line: 150\n\tSwtAwtStrategy(AbstractSwtAwtStrategy).addAwtComponent(Composite, Composite,\nEclipseSwingUtil$AwtComponentFactory) line: 146\n\tEclipseSwingUtil.addAwtComponent(Composite, Composite,\nEclipseSwingUtil$AwtComponentFactory) line: 147\n\tWizardDesignerPage.createFormContent(IManagedForm) line: 111\n\tFormPage$1.run() line: 151\n\tBusyIndicator.showWhile(Display, Runnable) line: 69\n\tWizardDesignerPage(FormPage).createPartControl(Composite) line: 149\n\tWizardDesignerEditor(FormEditor).pageChange(int) line: 444\n\tWizardDesignerEditor.pageChange(int) line: 793\n\tMultiPageEditorPart$2.widgetSelected(SelectionEvent) line: 200\n\tTypedListener.handleEvent(Event) line: 89\n\tEventTable.sendEvent(Event) line: 82\n\tCTabFolder(Widget).sendEvent(Event) line: 842\n\tCTabFolder(Widget).sendEvent(int, Event, boolean) line: 866\n\tCTabFolder(Widget).sendEvent(int, Event) line: 851\n\tCTabFolder(Widget).notifyListeners(int, Event) line: 659\n\tCTabFolder.setSelection(int, boolean) line: 3137\n\tCTabFolder.destroyItem(CTabItem) line: 602\n\tCTabItem.dispose() line: 145\n\tWizardDesignerEditor(MultiPageEditorPart).removePage(int) line: 565\n\tWizardDesignerEditor(FormEditor).removePage(int) line: 341\n\tWizardDesignerEditor.disposePages() line: 188\n\tWizardDesignerEditor.init(IEditorSite, IEditorInput) line: 219\n\tWizardDesignerEditor.reinitialize(ProjectNode) line: 634\n\tWizardDesignerEditor.warnAndReinitialize(ProjectNode) line: 946\n\tWizardDesignerEditor.access$2(WizardDesignerEditor, ProjectNode) line: 930\n\tWizardDesignerEditor$2.run() line: 848\n\tRunnableLock.run() line: 35\n\tUISynchronizer(Synchronizer).runAsyncMessages(boolean) line: 118\n\tDisplay.runAsyncMessages(boolean) line: 2898\n\tDisplay.readAndDispatch() line: 2557\n\tWorkbench.runEventLoop(Window$IExceptionHandler, Display) line: 1601\n\tWorkbench.runUI() line: 1565\n\tWorkbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 315\n\tPlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 143\n\tIDEApplication.run(Object) line: 103\n\tPlatformActivator$1.run(Object) line: 230\n\tEclipseStarter.run(Object) line: 371\n\tEclipseStarter.run(String[], Runnable) line: 160\n\tNativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available\n[native method]\n\tNativeMethodAccessorImpl.invoke(Object, Object[]) line: 39\n\tDelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25\n\tMethod.invoke(Object, Object...) line: 585\n\tMain.invokeFramework(String[], URL[]) line: 330\n\tMain.basicRun(String[]) line: 274\n\tMain.run(String[]) line: 977\n\tMain.main(String[]) line: 952\n\n\nThread [AWT-EventQueue-0] (Suspended)\n\tWWindowPeer._setResizable(boolean) line: not available [native method]\n\tWDialogPeer(WWindowPeer).setResizable(boolean) line: 73\n\tWDialogPeer.initialize() line: 53\n\tWDialogPeer(WComponentPeer).\u003cinit\u003e(Component) line: 534\n\tWDialogPeer(WCanvasPeer).\u003cinit\u003e(Component) line: 35\n\tWDialogPeer(WPanelPeer).\u003cinit\u003e(Component) line: 54\n\tWDialogPeer(WWindowPeer).\u003cinit\u003e(Window) line: 82\n\tWDialogPeer.\u003cinit\u003e(Dialog) line: 26\n\tWToolkit.createDialog(Dialog) line: 384\n\tSwingConfirmDialog(Dialog).addNotify() line: 374\n\tSwingConfirmDialog(Window).pack() line: 484\n\tSwingConfirmDialog(SwingConfirmDialog).\u003cinit\u003e(Frame, String, String, Component,\nSwingConfirmDialog$ButtonDefinition[]) line: 140\n\tSwingConfirmDialog(SwingConfirmDialog).\u003cinit\u003e(Frame, String, String, Component,\nint) line: 108\n\tSwingConfirmDialog.\u003cinit\u003e(Frame, String, String, Component, int) line: 43\n\tEclipseUiUtil.activateConfirmDialog(Component, String, String, Component, int)\nline: 159\n\tEclipseMultiNotesPanel(MultiNotesPanel).doViewItem(Note) line: 188\n\tEclipseMultiNotesPanel(MultiNotesPanel).doViewItem(int) line: 173\n\tMultiNotesPanel.access$4(MultiNotesPanel, int) line: 164\n\tMultiNotesPanel$2.mouseClicked(MouseEvent) line: 140\n\tAWTEventMulticaster.mouseClicked(MouseEvent) line: 212\n\tJTable(Component).processMouseEvent(MouseEvent) line: 5491\n\tJTable(JComponent).processMouseEvent(MouseEvent) line: 3093\n\tJTable(Component).processEvent(AWTEvent) line: 5253\n\tJTable(Container).processEvent(AWTEvent) line: 1966\n\tJTable(Component).dispatchEventImpl(AWTEvent) line: 3955\n\tJTable(Container).dispatchEventImpl(AWTEvent) line: 2024\n\tJTable(Component).dispatchEvent(AWTEvent) line: 3803\n\tLightweightDispatcher.retargetMouseEvent(Component, int, MouseEvent) line: 4212\n\tLightweightDispatcher.processMouseEvent(MouseEvent) line: 3901\n\tLightweightDispatcher.dispatchEvent(AWTEvent) line: 3822\n\tPanel(Container).dispatchEventImpl(AWTEvent) line: 2010\n\tPanel(Component).dispatchEvent(AWTEvent) line: 3803\n\tEventQueue.dispatchEvent(AWTEvent) line: 463\n\tEventDispatchThread.pumpOneEventForHierarchy(int, Component) line: 242\n\tEventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component) line: 163\n\tEventDispatchThread.pumpEvents(int, Conditional) line: 157\n\tEventDispatchThread.pumpEvents(Conditional) line: 149\n\tEventDispatchThread.run() line: 110\n",
    "Created an attachment (id\u003d22447)\nPatch to SWT_AWT\n\nThe following patch to SWT_AWT fixes the problem without any changes to the\nSWT_AWT interface",
    "David, please could you provide some test code that shows the deadlock? I need \nthis to debug and verify our pacth.",
    "Created an attachment (id\u003d22532)\ntest case that reproduces the defect\n\nI\u0027ve now developed a test case that can reproduce the problem.\tIt relies on a\nrandom delay, so I\u0027m not sure if it causes a deadlock on every run -- however\nit seemed to work reliably on my computer.  The trick is to have the AWT (or\nSwing) event dispatch thread and SWT dispatch thread block while attempting to\naquire tree locks int the AWT/Swing hierarchy.\n\nHow to run the test case:\n1. run eclipse with the test case plugin installed\n2. show the sample view provided by the test case.  This is by default\ndisplayed in the \"Resource\" perspective.  (Open the \"Resource\" perspective and\nselect \"Window-\u003eReset Perspective\" to see the view).\n3. Press the \"press to initiate test\" button on the view.\n\nIf the test runs successfully (without deadlock) you should see two popup\ndialogs: one a Swing popup, and the other an SWT popup.  If the test fails (ie:\nproduces a deadlock), the UI will \"hang\" and neither the Swing nor the SWT\ndisplays will update properly.\n\nThe \"enable fix\" checkbox causes the candidate patch code to be run instead of\nthe SWT_AWT class.\n\nHere are the stack traces of a deadlocked UI:\nThread [main] (Suspended)\n\tWEmbeddedFramePeer(WComponentPeer).replaceSurfaceData(int) line: 324\n\tWEmbeddedFramePeer(WComponentPeer).replaceSurfaceData() line: 313\n\tWEmbeddedFramePeer(WComponentPeer).setBounds(int, int, int, int, int)\nline: 124\n\tWEmbeddedFramePeer(WComponentPeer).initialize() line: 573\n\t\u003cunknown receiving type\u003e(WCanvasPeer).initialize() line: 69\n\t\u003cunknown receiving type\u003e(WPanelPeer).initialize() line: 58\n\tWEmbeddedFramePeer(WWindowPeer).initialize() line: 86\n\tWEmbeddedFramePeer(WFramePeer).initialize() line: 168\n\tWEmbeddedFramePeer(WComponentPeer).\u003cinit\u003e(Component) line: 534\n\tWEmbeddedFramePeer(WCanvasPeer).\u003cinit\u003e(Component) line: 35\n\tWEmbeddedFramePeer(WPanelPeer).\u003cinit\u003e(Component) line: 54\n\tWEmbeddedFramePeer(WWindowPeer).\u003cinit\u003e(Window) line: 82\n\tWEmbeddedFramePeer(WFramePeer).\u003cinit\u003e(Frame) line: 152\n\tWEmbeddedFramePeer.\u003cinit\u003e(EmbeddedFrame) line: 17\n\tWToolkit.createEmbeddedFrame(WEmbeddedFrame) line: 433\n\tWEmbeddedFrame.\u003cinit\u003e(long) line: 50\n\tWEmbeddedFrame.\u003cinit\u003e(int) line: 44\n\tNativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line:\nnot available [native method]\n\tNativeConstructorAccessorImpl.newInstance(Object[]) line: 39\n\tDelegatingConstructorAccessorImpl.newInstance(Object[]) line: 27\n\t\u003cunknown receiving type\u003e(Constructor\u003cT\u003e).newInstance(Object...) line:\n494\n\tSWT_AWT.new_Frame(Composite) line: 139\n\tSampleView.createContainer(Composite) line: 88\n\tSampleView.doCreateContainer2Contents() line: 108\n\tSampleView.access$2(SampleView) line: 101\n\tSampleView$3.run() line: 126\n\tRunnableLock.run() line: 35\n\tUISynchronizer(Synchronizer).runAsyncMessages(boolean) line: 118\n\tDisplay.runAsyncMessages(boolean) line: 2898\n\tDisplay.readAndDispatch() line: 2557\n\tWorkbench.runEventLoop(Window$IExceptionHandler, Display) line: 1601\n\tWorkbench.runUI() line: 1565\n\tWorkbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 315\n\tPlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 143\n\tIDEApplication.run(Object) line: 103\n\tPlatformActivator$1.run(Object) line: 230\n\tEclipseStarter.run(Object) line: 371\n\tEclipseStarter.run(String[], Runnable) line: 160\n\tNativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not\navailable [native method]\n\tNativeMethodAccessorImpl.invoke(Object, Object[]) line: 39\n\tDelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25\n\tMethod.invoke(Object, ...) line: 585\n\tMain.invokeFramework(String[], URL[]) line: 330\n\tMain.basicRun(String[]) line: 274\n\tMain.run(String[]) line: 977\n\tMain.main(String[]) line: 952\nThread [AWT-EventQueue-0] (Suspended)\n\tWDialogPeer.showModal() line: not available [native method]\n\tWDialogPeer.show() line: 60\n\tJDialog(Dialog).conditionalShow() line: 449\n\tJDialog(Dialog).show() line: 506\n\tJOptionPane.showOptionDialog(Component, Object, String, int, int, Icon,\nObject[], Object) line: 843\n\tJOptionPane.showMessageDialog(Component, Object, String, int, Icon)\nline: 645\n\tJOptionPane.showMessageDialog(Component, Object, String, int) line: 616\n\n\tSampleView$2.actionPerformed(ActionEvent) line: 129\n\tJButton(AbstractButton).fireActionPerformed(ActionEvent) line: 1849\n\tAbstractButton$Handler.actionPerformed(ActionEvent) line: 2169\n\tDefaultButtonModel.fireActionPerformed(ActionEvent) line: 420\n\tDefaultButtonModel.setPressed(boolean) line: 258\n\tBasicButtonListener.mouseReleased(MouseEvent) line: 234\n\tJButton(Component).processMouseEvent(MouseEvent) line: 5488\n\tJButton(JComponent).processMouseEvent(MouseEvent) line: 3093\n\tJButton(Component).processEvent(AWTEvent) line: 5253\n\tJButton(Container).processEvent(AWTEvent) line: 1966\n\tJButton(Component).dispatchEventImpl(AWTEvent) line: 3955\n\tJButton(Container).dispatchEventImpl(AWTEvent) line: 2024\n\tJButton(Component).dispatchEvent(AWTEvent) line: 3803\n\tLightweightDispatcher.retargetMouseEvent(Component, int, MouseEvent)\nline: 4212\n\tLightweightDispatcher.processMouseEvent(MouseEvent) line: 3892\n\tLightweightDispatcher.dispatchEvent(AWTEvent) line: 3822\n\tPanel(Container).dispatchEventImpl(AWTEvent) line: 2010\n\tPanel(Component).dispatchEvent(AWTEvent) line: 3803\n\tEventQueue.dispatchEvent(AWTEvent) line: 463\n\tEventDispatchThread.pumpOneEventForHierarchy(int, Component) line: 242\n\tEventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component)\nline: 163\n\tEventDispatchThread.pumpEvents(int, Conditional) line: 157\n\tEventDispatchThread.pumpEvents(Conditional) line: 149\n\tEventDispatchThread.run() line: 110\n",
    "Created an attachment (id\u003d25143)\nA few important notes about comment # 8 patch\n\nThe patch in commment #8 still hangs in an app I am running.  The attached fix\nsolves the following problems:\n\n1. Neither event queue should block.\n2. Neither event queue should hold onto a lock while processing events.",
    "Hi\n\nhow can I create one patch to awt_swt.new_frame to use on linux, eclipse 3.1 and java 1.4?\n\nException in thread \"main\" org.eclipse.swt.SWTError: Not implemented [need JDK 1.5 or greater] (java.lang.ClassNotFoundException: sun.awt.X11.XEmbeddedFrame)\n\tat org.eclipse.swt.SWT.error(SWT.java:2968)\n\tat org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:122)\n\tat Test.main(Test.java:35)\nCaused by: java.lang.ClassNotFoundException: sun.awt.X11.XEmbeddedFrame\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:199)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:187)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:289)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:141)\n\tat org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:120)\n\t... 1 more\n\n(In reply to comment #8)\n\u003e Created an attachment (id\u003d22447) [edit]\n\u003e Patch to SWT_AWT\n\u003e \n\u003e The following patch to SWT_AWT fixes the problem without any changes to the\n\u003e SWT_AWT interface\n\n",
    "You can\u0027t.  Embedding AWT/Swing is only supported on Linux for JDK 1.5 and higher.",
    "Created an attachment (id\u003d34185)\nTest case in debug mode of dead lock\n\nCompile with swt.jar, execute it, and instructions.",
    "We have this problem too (we use swt 3.0.2.3 and jdk 1.4.2), and our customer claims for a solution. Could you, please, tell us an aproximatelly date with a fix or a new release?\nThanks",
    "Hi,\nOur application is used by our bank client employees. And talking with probability terms, it\u0027s easy to cause some dead locks when there are near 12000 instances of our application that uses SWT_AWT bridge running over 5 or 8 hours at day.\nWe think that if we want to use the bridge into real production environments the bridge would be ready for high service load, but it isn\u0027t the fact with dead lock affair.\nThus i only would like that you think on the impact that this bug could to cause to swt and bridge image.",
    "Nice to have a real-world example of demand.  I\u0027m also interested in seeing some activity/progress on this issue.  Silenio?",
    "Sorry, we are busy with the M5 API freeze right now. I look into this after M5.",
    "Created an attachment (id\u003d34657)\nTest case in debug mode of dead lock\n\n",
    "Created an attachment (id\u003d34658)\nfix bug\n\n",
    "I have tested the fix of the Comment #8 From David Green  2005-06-06 15:26 and it doesn\u0027t work, but i tried a little modification on it (the new attachement of the bug, lines 167 to 214) and it works. Also i attach new version of my test case. \n\nA few time ago i saw a problem with special characters that was fixed at release 01.03.02. I don\u0027t know the cost to create a new release with these changes, but in my opinion this fix is worthy of consideration.\n\nOn the other hand, when do you think that M5 issue could finish?\nThanks",
    "The M5 milestone is this week.",
    "Fixed \u003e 20060216\n\nPlease try the next integration build.",
    "Can you point me to what has changed?  I downloaded eclipse-SDK-I20060217-1115-win32.zip and didn\u0027t see any major changes to SWT_AWT.",
    "My TestCase doesn\u0027t work with eclipse-SDK-I20060217-1115-win32.zip, too.",
    "Sorry, the changes did not go into the M5 build. They will be available in tomorrow\u0027s integration build.",
    "Ok, I20060221 contains the fix and works fine.\nIs possible create a new SWT release? We distribute eclipse 3.0.2 to our customer and our application don\u0027t supports eclipse 3.2 (we have opened bug 128792 and we expects some release with 2 fixes).",
    "Sonia, is there an Eclipse 3.0.x release happening any time?",
    "No,  we will need to talk to the PMC if you want one.",
    "We will close next version (that uses bridge) in 1 or 2 weeks. Enough time?",
    "Nice work, Silenio -- works beautifully for me and there are no side effects that I\u0027m aware of.",
    "Silenio da man!",
    "Hi,\n\nwe *do* need the fix to this bug in 3.0.2 bacause this is the version our customer is using in the branches. Please, can you clarify whether or not the backport to 3.0.2 will eventually be done? When?\n\nRamon.",
    "\u003eNo,  we will need to talk to the PMC if you want one.\n\nKH, will there be another 3.0.x release?",
    "*** Bug 130564 has been marked as a duplicate of this bug. ***",
    "\u003e \u003eNo,  we will need to talk to the PMC if you want one.\n\u003e KH, will there be another 3.0.x release?\n\nIs it possible to make patch for Eclipse 3.1 too?\n\n",
    "I have got deadlock again (with new build), however I can\u0027t reproduce it every time. Here is stack trace of main and event dispatcher threads, hope it will help: \n\nAWT-EventQueue-0\" prio\u003d6 tid\u003d0x2d4f27c0 nid\u003d0x14c runnable [0x2e5ff000..0x2e5ff\nb64]\n        at sun.awt.windows.WDialogPeer.endModal(Native Method)\n        at sun.awt.windows.WDialogPeer.hide(Unknown Source)\n        at java.awt.Component.hide(Unknown Source)\n        - locked \u003c0x05967958\u003e (a java.awt.Component$AWTTreeLock)\n        at java.awt.Window.hide(Unknown Source)\n        at java.awt.Dialog.hide(Unknown Source)\n        at com.nomagic.magicdraw.ui.dialogs.oi.hide(oi.java:181)\n        at java.awt.Component.show(Unknown Source)\n        at java.awt.Component.setVisible(Unknown Source)\n        at com.nomagic.magicdraw.ui.ke.f(ke.java:373)\n        at com.nomagic.magicdraw.ui.ne.actionPerformed(ne.java:602)\n        - locked \u003c0x031b0de8\u003e (a com.nomagic.magicdraw.ui.ne)\n        at javax.swing.Timer.fireActionPerformed(Unknown Source)\n        at javax.swing.Timer$DoPostEvent.run(Unknown Source)\n        at java.awt.event.InvocationEvent.dispatch(Unknown Source)\n        at java.awt.EventQueue.dispatchEvent(Unknown Source)\n        at java.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown Source)\n \n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n        at java.awt.Dialog$1.run(Unknown Source)\n        at java.awt.Dialog.show(Unknown Source)\n        at com.nomagic.magicdraw.ui.dialogs.oi.show(oi.java:138)\n        at com.nomagic.magicdraw.ui.ke.d(ke.java:323)\n        at com.nomagic.magicdraw.ui.ke.e(ke.java:568)\n        at com.nomagic.magicdraw.ui.ke.a(ke.java:762)\n        at com.nomagic.magicdraw.ui.ke.a(ke.java:736)\n        at com.nomagic.magicdraw.ui.ke.a(ke.java:731)\n        at com.nomagic.magicdraw.core.c.db(c.java:2638)\n        at com.nomagic.magicdraw.core.c.a(c.java:558)\n        at com.nomagic.magicdraw.actions.MDAction.actionPerformed(MDAction.java:\n59)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.actions.MDAbstractEcli\npseActionWrapper$2.run(MDAbstractEclipseActionWrapper.java:95)\n        at java.awt.event.InvocationEvent.dispatch(Unknown Source)\n        at java.awt.EventQueue.dispatchEvent(Unknown Source)\n        at java.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown Source)\n \n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n        at java.awt.EventDispatchThread.run(Unknown Source)\n\n\"main\" prio\u003d6 tid\u003d0x002872c0 nid\u003d0xf20 in Object.wait() [0x0006d000..0x0006fc44]\n \n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x02f9cbf0\u003e (a [Ljava.awt.Frame;)\n        at org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:203)\n        - locked \u003c0x02f9cbf0\u003e (a [Ljava.awt.Frame;)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.core.DefaultSWT_Handle\nr.new_Frame(DefaultSWT_Handler.java:15)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.core.EclipseUIHelper.c\nreateCompositeWrapper(EclipseUIHelper.java:92)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.toolbars.AWTComponentC\nontributionItem.createComponent(AWTComponentContributionItem.java:78)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.toolbars.AWTComponentC\nontributionItem.fill(AWTComponentContributionItem.java:68)\n        at org.eclipse.jface.action.ToolBarManager.update(ToolBarManager.java:31\n7)\n        at org.eclipse.jface.action.ToolBarContributionItem.fill(ToolBarContribu\ntionItem.java:193)\n        at org.eclipse.jface.action.CoolBarManager.update(CoolBarManager.java:91\n9)\n        at org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWin\ndow.java:2696)\n        at org.eclipse.ui.internal.WorkbenchWindow.updateActionSets(WorkbenchWin\ndow.java:2770)\n        at org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActionSets\n(WorkbenchPage.java:514)\n        at org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActivePart\n(WorkbenchPage.java:356)\n        at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.jav\na:3082)\n        at org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage\n.java:2637)\n        at org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:256)\n \n        at org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:220)\n        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:949)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:930)\n        at org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java:1199)\n        at org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:1981)\n        at org.eclipse.swt.widgets.Widget.wmSetFocus(Widget.java:2141)\n        at org.eclipse.swt.widgets.Control.WM_SETFOCUS(Control.java:3857)\n        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3309)\n        at org.eclipse.swt.widgets.Display.windowProc(Display.java:4017)\n        at org.eclipse.swt.internal.win32.OS.SetFocus(Native Method)\n        at org.eclipse.swt.widgets.Control.forceFocus(Control.java:732)\n        at org.eclipse.swt.widgets.Control.setSavedFocus(Control.java:2543)\n        at org.eclipse.swt.widgets.Decorations.restoreFocus(Decorations.java:758\n)\n        at org.eclipse.swt.widgets.Decorations.WM_ACTIVATE(Decorations.java:1579\n)\n        at org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:1710)\n        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3241)\n        at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1538)\n \n        at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:1630)\n        at org.eclipse.swt.widgets.Display.windowProc(Display.java:4017)\n        at org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)\n        at org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java:2317)\n        at org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:200)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.core.DefaultSWT_Handle\nr.new_Frame(DefaultSWT_Handler.java:15)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.core.EclipseUIHelper.c\nreateCompositeWrapper(EclipseUIHelper.java:92)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.toolbars.AWTComponentC\nontributionItem.createComponent(AWTComponentContributionItem.java:78)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.toolbars.AWTComponentC\nontributionItem.fill(AWTComponentContributionItem.java:68)\n        at org.eclipse.jface.action.ToolBarManager.update(ToolBarManager.java:31\n7)\n        at org.eclipse.jface.action.ToolBarContributionItem.fill(ToolBarContribu\ntionItem.java:193)\n        at org.eclipse.jface.action.CoolBarManager.update(CoolBarManager.java:91\n9)\n        at org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWin\ndow.java:2696)\n        at org.eclipse.ui.internal.WorkbenchWindow.largeUpdateEnd(WorkbenchWindo\nw.java:2745)\n        at org.eclipse.ui.internal.Workbench.largeUpdateEnd(Workbench.java:2729)\n \n        at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.ja\nva:2418)\n        at org.eclipse.ui.internal.WorkbenchPage.access$10(WorkbenchPage.java:24\n07)\n        at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2392)\n        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\n \n        at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2\n387)\n        at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2\n372)\n        at com.nomagic.magicdraw.integrations.eclipse.rcp.core.EclipseFramesMana\nger$1.run(EclipseFramesManager.java:70)\n        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja\nva:123)\n        - locked \u003c0x03181110\u003e (a org.eclipse.swt.widgets.RunnableLock)\n        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3317)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2963)\n        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1924)\n        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1888)\n        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.jav\na:422)\n        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:10\n7)\n        at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformAct\nivator.java:78)\n        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runAppli\ncation(EclipseAppLauncher.java:92)\n        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(Ec\nlipseAppLauncher.java:68)\n        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja\nva:374)\n        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja\nva:169)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:282)\n        at org.eclipse.core.launcher.Main.run(Main.java:977)\n        at org.eclipse.core.launcher.Main.main(Main.java:952)\n",
    "Egidijus, can you reproduce it in debug mode? So you could create new test case.",
    "What do you mean debug mode (Eclipse -debug mode or in debugging application)? Does it change something? I will comment this stack trace a little, perhaps it will help.\nOur application uses ecipse toolbars which has embedded AWT frames and during toolbar update these embedded frames are recreated. Hence while  AWT thread is in hiding my progress window state, main thread is opening editor. During creating editor, toolbars are updated. One button goes freely through the \"synchronized (result)\" and waits for invokeLater to finish creating WEmbeddeFrame. But here comes another toolbar button update event which blocks SWT thread on the same \"synchronized (result)\" and giving no changes to end up AWT thread with a hiding dialog.\n",
    "Ok Egidijus, we have reproduced it. But now i\u0027m trying to make a test case to attach to this bug..",
    "Could you explain reason, why it hangs? I found that my previos thought was not correct and just looking to the code, I can\u0027t find reasonable explanation. \"synchronized (result)\" locks \"result\" object (result1). On second cycle \"synchronized (result)\" locks another result object - result2 and it shouldn\u0027t wait on monitor and block SWT thread as objects \"result\" are different.",
    "Created an attachment (id\u003d36655)\nNew test case to create new dead lock\n\n",
    "With this new test case (i don\u0027t know if it\u0027s the same case as Egidijus) AWT-EventQueue bloqs main thread with synExec that never returns, because this event bloqs AWT-EventQueue, so new_Frame never returns.",
    "The testcase from comment#42 does not reproduce the problem from comment#37.\n\nIt is causing a deadlock because it is trying to sync both event queues. You have to use invokeLater() and asyncExec() instead invokeAndWait() and syncExec() or you are bond to deadlock.",
    "The problem from comment#37 happens because WDialog.endModal() (AWT EventQueue thread) is sending a message (SendMessage()) to the SWT UI Thread and waiting for the result. The SWT UI Thread, when handling that message, sends a SWT.FocusIn event to the app code and the app code does not return ever because of SWT_AWT.newFrame() which waits on the AWT EventQueue to run the runnable that creates the embedded frame.",
    "Silenio, thanks for explanation. What is the status of this problem? Is it bug which I could expect to be fixed or it is 2 platform incompatibility which I should to workaround somehow?\n",
    "Here is a testcase that reproduces problem from comment#37.\n\nimport java.awt.Frame;\nimport javax.swing.*;\n\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.awt.SWT_AWT;\nimport org.eclipse.swt.layout.FillLayout;\nimport org.eclipse.swt.widgets.*;\n\n\npublic class PR66615_2 {\n\n    public final static int SHELL_HEIGHT \u003d 120;\n    public final static int SHELL_WIDTH \u003d 400;\n\n    public PR66615_2 (final Composite parent) {\n        Composite c1 \u003d new Composite (parent, SWT.EMBEDDED);\n        Frame frame \u003d SWT_AWT.new_Frame(c1);\n        final Composite c2 \u003d new Composite (parent, SWT.EMBEDDED);\n        c2.addListener(SWT.KeyDown, new Listener() {\n                public void handleEvent(Event event) {\n                }\n        });\n        c2.setFocus();\n        parent.layout();\n\n        c2.addListener(SWT.FocusIn, new Listener() {\n                public void handleEvent(Event event) {\n                Frame frame \u003d SWT_AWT.new_Frame(c2);\n                System.out.println(\"created\u003d\" + frame);\n                }\n        });\n\n        JDialog dialog \u003d new JDialog(frame, \"Close To Deadlock\");\n        dialog.setSize(300, 50);\n        dialog.setVisible(true);\n    }\n\n    public static void main(String[] args) {\n        try {\n            Display d \u003d Display.getDefault();\n            Shell shell \u003d new Shell (d);\n            shell.setText(\"Shell SWT\");\n            shell.setLayout(new FillLayout());\n\n\n            shell.setBounds(300, 300, SHELL_WIDTH, SHELL_HEIGHT);\n            shell.open();\n\n            new PR66615_2 (shell);\n\n            while (!shell.isDisposed())\n                if (!d.readAndDispatch())\n                    d.sleep();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
    "Egidijus, I am still investigating if there is something SWT could do to solve this problem. Right now, the best I can think is that the creation of the embedded frame could be async execed by the app code (not run inside of SWT.FocusIn). This would work around the problem.",
    "You mean I must to run SWT_AWT.new_Frame inside EventQueue.invokeLater(Display.asyncExec)), right?",
    "Yes, Display.asyncExec() should be enough in this case.",
    "Ok Silenio. I have executed new test case with swt_3.0.1, swt_3.0.2, and swt_3.0.2.3 and it works. Only with new fix causes dead lock. ?Do you think that is possible fix this problem?",
    "Aleix, I am not sure what is different for you, but the new test case fails for me in 3.0.x. ",
    "Aleix, after reading your private message I notice that you were talking about the testcase from comment#42 (and not the one from commnet#47). Your testcase only fails on the latest for me too.",
    "Since we moved to 3.2 M6, our RCP hangs when opening an SWT dialog with an embedded JPanel.\n\nFrom the SWT event thread, we call open() on SWTAWTBridgeDialog. This is a class extending an swt dialog. The open() method calls SWT_AWT.new_Frame (still in the SWT thread). This call seems to hang.\n\nLine 195 of the SWT_AWT class calls EventQueue.invokeLater, but the runnable is never executed (so the while loop at line 199 never ends).\n\nWe didn\u0027t have this problem in M5.\n\nAny suggestions?",
    "The fix for this problem is causing other problems and we have not found a way to fix every problem yet. For now, we are removing the fix and reopening the bug.",
    "Is any plans to solve this?",
    "Is this bug valid for Eclipse 3.2.1 or 3.3 M3?",
    "Yes",
    "Hi, we have a deadlock in SWT_AWT (Eclipse 3.2.0 Build id: M20060629-1905) when we create an embedded frame and, at the same time, in another thread we dispose a different embedded frame.  \nHere we attach a partial java core dump, where you can see the two threads in deadlock:\n\n\"main\" (state: BLOCKED, native ID:1)\n   at sun.awt.windows.WComponentPeer.replaceSurfaceData(null:-1)\n   at sun.awt.windows.WComponentPeer.replaceSurfaceData(null:-1)\n   at sun.awt.windows.WComponentPeer.setBounds(null:-1)\n   at sun.awt.windows.WComponentPeer.initialize(null:-1)\n   at sun.awt.windows.WCanvasPeer.initialize(null:-1)\n   at sun.awt.windows.WPanelPeer.initialize(null:-1)\n   at sun.awt.windows.WWindowPeer.initialize(null:-1)\n   at sun.awt.windows.WFramePeer.initialize(null:-1)\n   at sun.awt.windows.WComponentPeer.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WCanvasPeer.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WPanelPeer.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WWindowPeer.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WFramePeer.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WEmbeddedFramePeer.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WToolkit.createEmbeddedFrame(null:-1)\n   at sun.awt.windows.WEmbeddedFrame.\u003cinit\u003e(null:-1)\n   at sun.awt.windows.WEmbeddedFrame.\u003cinit\u003e(null:-1)\n   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method:-2)\n   at sun.reflect.NativeConstructorAccessorImpl.newInstance(null:-1)\n   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(null:-1)\n   at java.lang.reflect.Constructor.newInstance(null:-1)\n   at org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:164)\n   at es.lacaixa.tfnl.motores.GestorPresentacionViewNotebookSwing.initializeNotebook(GestorPresentacionViewNotebookSwing.java:68)\n   at es.lacaixa.tfnl.motores.GestorPresentacionViewNotebookSwing.\u003cinit\u003e(GestorPresentacionViewNotebookSwing.java:63)\n   at es.lacaixa.tfnl.motores.GestorPresentacion.cargarVista(GestorPresentacion.java:414)\n   at es.lacaixa.tfnl.motores.GestorPresentacion.initModeVista(GestorPresentacion.java:253)\n   at es.lacaixa.tfnl.motores.GestorPresentacion$9.run(GestorPresentacion.java:1286)\n   at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)\n   at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)\n   at org.eclipse.swt.widgets.Display.syncExec(Display.java:3763)\n   at es.lacaixa.tfnl.motores.GestorPresentacion.reset(GestorPresentacion.java:1220)\n   at es.lacaixa.tfnl.motores.GestorPresentacion.reset(GestorPresentacion.java:1211)\n   at es.lacaixa.tfnl.motores.GestorPresentacion.reset(GestorPresentacion.java:1207)\n   at es.lacaixa.tfnl.motores.GestorPresentacion.reset(GestorPresentacion.java:2090)\n   at es.lacaixa.tf7.dialogs.managers.FormatoLibreManager.limpiarGP(FormatoLibreManager.java:840)\n   at es.lacaixa.tf7.dialogs.managers.formatolibre.listeners.FormatoLibreBotBorrarListener.handleClick(FormatoLibreBotBorrarListener.java:31)\n   at es.lacaixa.tf7.controls.swt.ShineGrayButton.notifyListener(ShineGrayButton.java:284)\n   at es.lacaixa.tf7.controls.swt.ShineGrayButton.access$2(ShineGrayButton.java:281)\n   at es.lacaixa.tf7.controls.swt.ShineGrayButton$4.handleEvent(ShineGrayButton.java:91)\n   at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928)\n   at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3348)\n   at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2968)\n   at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n   at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n   at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n   at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n   at es.lacaixa.tf7.plugin.TF7Application.run(TF7Application.java:59)\n   at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method:-2)\n   at sun.reflect.NativeMethodAccessorImpl.invoke(null:-1)\n   at sun.reflect.DelegatingMethodAccessorImpl.invoke(null:-1)\n   at java.lang.reflect.Method.invoke(null:-1)\n   at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n   at org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n   at org.eclipse.core.launcher.Main.run(Main.java:977)\n   at org.eclipse.core.launcher.Main.main(Main.java:952)\n\nand \n\n\"AWT-EventQueue-0\" (state: RUNNABLE, native ID:19369)\n   at sun.awt.windows.WComponentPeer._dispose(Native Method:-2)\n   at sun.awt.windows.WComponentPeer.disposeImpl(null:-1)\n   at sun.awt.windows.WWindowPeer.disposeImpl(null:-1)\n   at sun.awt.windows.WObjectPeer.dispose(null:-1)\n   at java.awt.Component.removeNotify(null:-1)\n   at java.awt.Container.removeNotify(null:-1)\n   at java.awt.Frame.removeNotify(null:-1)\n   at java.awt.Window$1DisposeAction.run(null:-1)\n   at java.awt.Window.doDispose(null:-1)\n   at java.awt.Window.dispose(null:-1)\n   at org.eclipse.swt.awt.SWT_AWT$5.run(SWT_AWT.java:218)\n   at java.awt.event.InvocationEvent.dispatch(null:-1)\n   at java.awt.EventQueue.dispatchEvent(null:-1)\n   at java.awt.EventDispatchThread.pumpOneEventForHierarchy(null:-1)\n   at java.awt.EventDispatchThread.pumpEventsForHierarchy(null:-1)\n   at java.awt.EventDispatchThread.pumpEvents(null:-1)\n   at java.awt.EventDispatchThread.pumpEvents(null:-1)\n   at java.awt.EventDispatchThread.run(null:-1)\n\n\nIs there any fix for this problem?\n\nIs this reported bug, and all the problems related to SWT-AWT bridge, solved,or planned to be resolved? Do you have any prevision?\n\nWe are very worried about this issue because our real production environment has over 20000 workstations using our application.\n\nAs a solution, we think it\u0027s possible to synchronize the create and dispose action in SWT_AWT class. What do you think about this solution?\n\n \n",
    "\u003e Is there any fix for this problem?\n\u003e Is this reported bug, and all the problems related to SWT-AWT bridge, solved,or\n\u003e planned to be resolved? Do you have any prevision?\n\u003e We are very worried about this issue because our real production environment\n\u003e has over 20000 workstations using our application.\n\u003e As a solution, we think it\u0027s possible to synchronize the create and dispose\n\u003e action in SWT_AWT class. What do you think about this solution?\n\nWe do not have a solution that addresses all the deadlock problems reported here. It is possible that the synchronization of create and dispose would fix your problem, but we need a reproducible testcase to work with.\n\nIn the mean time, you could take a look at this article (bug#154973) that could help you with SWT and AWT/Swing interop.\n\n\n\n",
    "Hi,\nthe example below cases always a deadlock. To reproduce the deadlock start the example and try to save, cancel or close the save dialog. This deadlock seems to be very similar with the discussed deadlocks here. After the example are stack traces of the main and the AWT-EventQueue thread. Should I open a new bug report for this deadlock or it belongs to this bug?\n\n\n\npackage test;\n\nimport java.awt.Canvas;\nimport java.awt.Frame;\n\nimport javax.swing.JApplet;\nimport javax.swing.JFileChooser;\n\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.awt.SWT_AWT;\nimport org.eclipse.swt.layout.FillLayout;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Display;\nimport org.eclipse.swt.widgets.Shell;\n\npublic class DeadlockTestCase {\n\n\tprivate Canvas canvas;\n\n\tpublic DeadlockTestCase(final Composite parent) {\n\t\tComposite c1 \u003d new Composite(parent, SWT.EMBEDDED);\n\t\tFrame frame \u003d SWT_AWT.new_Frame(c1);\n\t\tJApplet applet \u003d new JApplet();\n\t\tcanvas \u003d new Canvas();\n\t\tframe.add(applet);\n\t\tapplet.add(canvas);\n\t\tsaveAs();\n\t}\n\n\tpublic void saveAs() {\n\t\tJFileChooser ch \u003d new JFileChooser();\n\t\tif (ch.showSaveDialog(canvas) \u003d\u003d JFileChooser.APPROVE_OPTION\n\t\t\t\t\u0026\u0026 ch.getSelectedFile() !\u003d null)\n\t\t\t;\n\t\t// ...... do something\n\t}\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tDisplay d \u003d Display.getDefault();\n\t\t\tShell shell \u003d new Shell(d);\n\t\t\tshell.setText(\"Parent\");\n\t\t\tshell.setLayout(new FillLayout());\n\n\t\t\tshell.setBounds(300, 300, 400, 120);\n\t\t\tshell.open();\n\n\t\t\tnew DeadlockTestCase(shell);\n\n\t\t\twhile (!shell.isDisposed())\n\t\t\t\tif (!d.readAndDispatch())\n\t\t\t\t\td.sleep();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\nThread [main] (Suspended)\t\n\tObject.wait(long) line: not available [native method]\t\n\tComponent$AWTTreeLock(Object).wait() line: 485\t\n\tJDialog(Dialog).show() line: not available\t\n\tJFileChooser.showDialog(Component, String) line: not available\t\n\tJFileChooser.showSaveDialog(Component) line: not available\t\n\tDeadlockTestCase.saveAs() line: 32\t\n\tDeadlockTestCase.\u003cinit\u003e(Composite) line: 27\t\n\tDeadlockTestCase.main(String[]) line: 48\t\n\nThread [AWT-EventQueue-0] (Suspended)\t\n\tWDialogPeer.endModal() line: not available [native method]\t\n\tWDialogPeer.hide() line: not available\t\n\tJDialog(Component).hide() line: not available\t\n\tJDialog(Window).hide() line: not available\t\n\tJDialog(Dialog).hide() line: not available\t\n\tJDialog(Component).show(boolean) line: not available\t\n\tJDialog(Component).setVisible(boolean) line: not available\t\n\tJDialog(Window).setVisible(boolean) line: not available\t\n\tJDialog(Dialog).setVisible(boolean) line: not available\t\n\tJFileChooser.approveSelection() line: not available\t\n\tBasicFileChooserUI$ApproveSelectionAction.actionPerformed(ActionEvent) line: not available\t\n\tJButton(AbstractButton).fireActionPerformed(ActionEvent) line: not available\t\n\tAbstractButton$Handler.actionPerformed(ActionEvent) line: not available\t\n\tDefaultButtonModel.fireActionPerformed(ActionEvent) line: not available\t\n\tDefaultButtonModel.setPressed(boolean) line: not available\t\n\tBasicButtonListener.mouseReleased(MouseEvent) line: not available\t\n\tAWTEventMulticaster.mouseReleased(MouseEvent) line: not available\t\n\tJButton(Component).processMouseEvent(MouseEvent) line: not available\t\n\tJButton(JComponent).processMouseEvent(MouseEvent) line: not available\t\n\tJButton(Component).processEvent(AWTEvent) line: not available\t\n\tJButton(Container).processEvent(AWTEvent) line: not available\t\n\tJButton(Component).dispatchEventImpl(AWTEvent) line: not available\t\n\tJButton(Container).dispatchEventImpl(AWTEvent) line: not available\t\n\tJButton(Component).dispatchEvent(AWTEvent) line: not available\t\n\tLightweightDispatcher.retargetMouseEvent(Component, int, MouseEvent) line: not available\t\n\tLightweightDispatcher.processMouseEvent(MouseEvent) line: not available\t\n\tLightweightDispatcher.dispatchEvent(AWTEvent) line: not available\t\n\tJDialog(Container).dispatchEventImpl(AWTEvent) line: not available\t\n\tJDialog(Window).dispatchEventImpl(AWTEvent) line: not available\t\n\tJDialog(Component).dispatchEvent(AWTEvent) line: not available\t\n\tEventQueue.dispatchEvent(AWTEvent) line: not available\t\n\tEventDispatchThread.pumpOneEventForFilters(int) line: not available\t\n\tEventDispatchThread.pumpEventsForFilter(int, Conditional, EventFilter) line: not available\t\n\tEventDispatchThread.pumpEventsForFilter(Conditional, EventFilter) line: not available\t\n\tDialog$1.run() line: not available\t\n\tPeerEvent(InvocationEvent).dispatch() line: not available\t\n\tEventQueue.dispatchEvent(AWTEvent) line: not available\t\n\tEventDispatchThread.pumpOneEventForFilters(int) line: not available\t\n\tEventDispatchThread.pumpEventsForFilter(int, Conditional, EventFilter) line: not available\t\n\tEventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component) line: not available\t\n\tEventDispatchThread.pumpEvents(int, Conditional) line: not available\t\n\tEventDispatchThread.pumpEvents(Conditional) line: not available\t\n\tEventDispatchThread.run() line: not available\t\n\n",
    "You must not open AWT dialogs in the SWT UI thread. Put the code that opens the the file chooser dialog in a EventQueue.invokeLater() runnable. "
  ],
  "commentCreationDates": [
    "2004-06-11T01:52:27+02:00",
    "2004-06-18T21:49:43+02:00",
    "2004-06-19T00:05:46+02:00",
    "2005-03-07T23:04:14+01:00",
    "2005-03-08T16:10:14+01:00",
    "2005-03-08T16:40:07+01:00",
    "2005-03-09T19:43:46+01:00",
    "2005-06-04T01:04:14+02:00",
    "2005-06-06T21:26:45+02:00",
    "2005-06-06T22:07:21+02:00",
    "2005-06-07T19:39:01+02:00",
    "2005-07-21T20:11:45+02:00",
    "2006-01-09T20:47:55+01:00",
    "2006-01-09T22:57:23+01:00",
    "2006-02-06T12:00:31+01:00",
    "2006-02-06T12:15:57+01:00",
    "2006-02-13T12:56:22+01:00",
    "2006-02-13T16:44:07+01:00",
    "2006-02-13T22:37:12+01:00",
    "2006-02-14T11:24:34+01:00",
    "2006-02-14T11:34:13+01:00",
    "2006-02-14T11:34:47+01:00",
    "2006-02-14T16:44:23+01:00",
    "2006-02-16T20:11:22+01:00",
    "2006-02-17T20:29:13+01:00",
    "2006-02-20T13:15:15+01:00",
    "2006-02-20T15:21:10+01:00",
    "2006-02-23T11:20:58+01:00",
    "2006-02-23T14:46:15+01:00",
    "2006-02-23T14:51:42+01:00",
    "2006-02-24T09:49:50+01:00",
    "2006-03-01T21:35:24+01:00",
    "2006-03-01T21:37:04+01:00",
    "2006-03-02T12:37:50+01:00",
    "2006-03-02T16:28:45+01:00",
    "2006-03-07T16:45:49+01:00",
    "2006-03-09T11:16:58+01:00",
    "2006-03-19T10:55:07+01:00",
    "2006-03-20T09:45:31+01:00",
    "2006-03-20T11:01:28+01:00",
    "2006-03-21T11:17:15+01:00",
    "2006-03-21T11:39:44+01:00",
    "2006-03-21T12:46:17+01:00",
    "2006-03-21T12:50:13+01:00",
    "2006-03-21T15:48:46+01:00",
    "2006-03-21T16:07:41+01:00",
    "2006-03-21T16:29:59+01:00",
    "2006-03-21T16:31:14+01:00",
    "2006-03-21T16:36:16+01:00",
    "2006-03-21T16:45:51+01:00",
    "2006-03-21T16:52:03+01:00",
    "2006-03-21T16:53:18+01:00",
    "2006-03-21T17:13:33+01:00",
    "2006-03-21T22:02:14+01:00",
    "2006-04-10T15:54:03+02:00",
    "2006-04-10T23:33:59+02:00",
    "2006-09-08T14:45:56+02:00",
    "2006-11-24T11:09:16+01:00",
    "2006-11-24T15:48:07+01:00",
    "2007-04-17T12:55:05+02:00",
    "2007-04-17T20:32:48+02:00",
    "2007-08-11T13:05:32+02:00",
    "2007-08-14T17:55:51+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "sun.awt.X11.XEmbeddedFrame)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2968"
        },
        {
          "method": "org.eclipse.swt.awt.SWT_AWT.new_Frame",
          "source": "SWT_AWT.java:122"
        },
        {
          "method": "Test.main",
          "source": "Test.java:35"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.ClassNotFoundException",
        "message": "sun.awt.X11.XEmbeddedFrame",
        "elements": [
          {
            "method": "java.net.URLClassLoader$1.run",
            "source": "URLClassLoader.java:199"
          },
          {
            "method": "java.security.AccessController.doPrivileged",
            "source": "Native Method"
          },
          {
            "method": "java.net.URLClassLoader.findClass",
            "source": "URLClassLoader.java:187"
          },
          {
            "method": "java.lang.ClassLoader.loadClass",
            "source": "ClassLoader.java:289"
          },
          {
            "method": "sun.misc.Launcher$AppClassLoader.loadClass",
            "source": "Launcher.java:274"
          },
          {
            "method": "java.lang.ClassLoader.loadClass",
            "source": "ClassLoader.java:235"
          },
          {
            "method": "java.lang.ClassLoader.loadClassInternal",
            "source": "ClassLoader.java:302"
          },
          {
            "method": "java.lang.Class.forName0",
            "source": "Native Method"
          },
          {
            "method": "java.lang.Class.forName",
            "source": "Class.java:141"
          },
          {
            "method": "org.eclipse.swt.awt.SWT_AWT.new_Frame",
            "source": "SWT_AWT.java:120"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 12,
      "bugId": "66615",
      "date": "2006-01-09T20:47:55+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "66615",
  "bugId": "66615",
  "date": "2004-06-11T01:52:27+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}