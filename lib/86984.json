{
  "comments": [
    "During trying to compile my code base with Eclipse Daniela 2, I have received\nthe following Internal Compiler Error. The code compiles fine with the sun\ncompiler. No particular steps made, just tried to (re)compile the whole code base.\n\nInternal compiler error\njava.lang.NullPointerException\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.Scope.greaterLowerBound(Scope.java:2518)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.resolveSubstituteConstraints(ParameterizedGenericMethodBinding.java:237)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.inferFromExpectedType(ParameterizedGenericMethodBinding.java:376)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:88)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:284)\n\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1016)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(Scope.java:1897)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:313)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:201)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:411)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:167)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:389)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1046)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1075)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:335)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:214)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.FieldReference.getConstantFor(FieldReference.java:409)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.FieldReference.resolveType(FieldReference.java:548)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:258)\n\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:779)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:411)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:167)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:389)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1046)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1075)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:335)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:214)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1012)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1088)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:979)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1095)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:283)\n\n\tat org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:510)\n\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:335)\n\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:225)\n\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:198)\n\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:49)\n\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:212)\n\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:135)\n\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:581)\n\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)\n\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:757)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:160)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:198)\n\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:227)\n\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)\n\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:757)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:230)\n\n\tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:249)\n\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:278)\n\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:139)\n\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:200)\n\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)",
    "Which build are you using ?\nAny steps to reproduce ?\n\n",
    "The latest integration build (Daniela 2?)\nSorry I can\u0027t provide more steps than in bug 86133 (nearly nothing). I am still\ntrying to replace IDEA with Eclipse, but without luck so far.",
    "Cannot you attach the source file you were compiling when this occurred ?\nAlso, what is the \"daniela 2\" build you are talking about ?",
    "Unfortunately I cannot attach it, it is part of a commercial software. Sorry. I\nwould really like to help, but I cannot. Maybe if you have general questions\n(like does it use generics or does it contain inner classes or methods returning\ngenerics with question mark, ...  etc.), I can answer them. The error points to\nthe very beginning of the file, so I am not absolutely sure, if the problem is\nreally in this file.\n\nBy Daniela 2 I mean\nhttp://download.eclipse.org/eclipse/downloads/drops/I-Daniela_2-200503011230/index.php\nIt seems that Eclipse started to name the integration builds. In the main\nEclipse project download page\n(http://download.eclipse.org/eclipse/downloads/index.php) they refer to this\nintegration build as Daniela 2.",
    "If I change the following variable declaration\nfinal A\u003c? extends B\u003e c \u003d d( e.f(), g( H.i, j.k() ) );\n\nto \n\nfinal A\u003c? extends B\u003e c \u003d null;\n\nthen the class compiles without IntCompErr.\n\nHere are the declarations of A, B and d:\npublic interface A\u003cT\u003e extends Enumeration\u003cT\u003e, Cloneable {}\npublic interface B\u003cT extends L\u003e {}\npublic static A d( final M m, final N n) {}\n\nHope this helps!\n",
    "The best would be for you to reduce the testcase along the lines of what you\njust did. The offending file is the one carrying the error on first line. When\nan exception occurs inside compiler, we trap it as an error on first line.\n\n",
    "The following doesn\u0027t reproduce the issue:\n\nimport java.util.Enumeration;\n\ninterface A\u003cT\u003e extends Enumeration\u003cT\u003e, Cloneable {\n}\ninterface B\u003cT extends L\u003e {\n}\nclass E {\n\tM f() {\n\t\treturn null;\n\t}\n}\nclass H {\n\tstatic I i;\n}\nclass I {\n}\nclass J {\n\tN k() {\n\t\treturn null;\n\t}\n}\nclass L {\n}\nclass M {\n}\nclass N {\n}\npublic class X {\n\tE e;\n\tJ j;\n\tstatic N g(I i, N n) {\n\t\treturn n;\n\t}\n\n\tstatic A d(final M m, final N n) {\n\t\treturn null;\n\t}\n\tfinal A\u003c? extends B\u003e c \u003d d(e.f(), g(H.i, j.k()));\n}",
    "I think the problem is with g, since when I use null as an argument for d then\nthe ICE disappears.\n\nthe declaration of g looks like this\npublic static \u003cT, U\u003e Class1\u003cT, U\u003e g( final Class2\u003cT, U\u003e param1, final U param2 )",
    "Still no luck trying to guess from your obffuscated information.\nHere is what I came up from your description; please modify it until it matches\nyour code; then reopen this defect if you have code reproducing it.\n\n\nimport java.util.Enumeration;\n\ninterface A\u003cT\u003e extends Enumeration\u003cT\u003e, Cloneable {\n}\ninterface B\u003cT extends L\u003e {\n}\nclass E {\n\tM f() {\n\t\treturn null;\n\t}\n}\nclass H {\n\tstatic I i;\n}\nclass I {\n}\nclass J {\n\tN k() {\n\t\treturn null;\n\t}\n}\nclass L {\n}\nclass M {\n}\nclass N {\n}\nclass Class1\u003cU,V\u003e {\n}\nclass Class2\u003cU,V\u003e {\n}\n\npublic class X {\n\tE e;\n\tJ j;\n\tpublic static \u003cT, U\u003e Class1\u003cT, U\u003e g(final Class2\u003cT, U\u003e param1, final U param2) {\n\t\treturn null;\n\t}\n\n\tstatic A d(final M m, final N n) {\n\t\treturn null;\n\t}\n\tfinal A\u003c? extends B\u003e c \u003d d(e.f(), g(H.i, j.k()));\n}",
    "Timeout. Closing"
  ],
  "commentCreationDates": [
    "2005-03-02T13:10:37+01:00",
    "2005-03-02T14:28:01+01:00",
    "2005-03-02T14:48:03+01:00",
    "2005-03-03T07:32:55+01:00",
    "2005-03-03T09:50:14+01:00",
    "2005-03-07T13:46:25+01:00",
    "2005-03-08T12:26:00+01:00",
    "2005-03-08T12:33:08+01:00",
    "2005-03-08T16:55:00+01:00",
    "2005-03-08T23:01:53+01:00",
    "2006-02-03T10:26:39+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.greaterLowerBound",
          "source": "Scope.java:2518"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.resolveSubstituteConstraints",
          "source": "ParameterizedGenericMethodBinding.java:237"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.inferFromExpectedType",
          "source": "ParameterizedGenericMethodBinding.java:376"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod",
          "source": "ParameterizedGenericMethodBinding.java:88"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod",
          "source": "Scope.java:284"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod",
          "source": "Scope.java:1016"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod",
          "source": "Scope.java:1897"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType",
          "source": "MessageSend.java:313"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve",
          "source": "LocalDeclaration.java:201"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:411"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:167"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:389"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1046"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1075"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:335"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve",
          "source": "FieldDeclaration.java:214"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.FieldReference.getConstantFor",
          "source": "FieldReference.java:409"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.FieldReference.resolveType",
          "source": "FieldReference.java:548"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType",
          "source": "MessageSend.java:258"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:779"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:411"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:167"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:389"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1046"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1075"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:335"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve",
          "source": "FieldDeclaration.java:214"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1012"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1088"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:979"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1095"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:283"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:510"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:335"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:225"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:198"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:49"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:212"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:135"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:581"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1015"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:757"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:160"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:198"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:227"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1015"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:757"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:230"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:249"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:278"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:139"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:200"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "86984",
      "date": "2005-03-02T13:10:37+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "86984",
  "bugId": "86984",
  "date": "2005-03-02T13:10:37+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}