{
  "comments": [
    "Bugzilla query refresh in a task list should use scheduler and background job\nsimilar to the one used to refresh synchronize view. Maybe even exactly the\nsame configuration dialog.",
    "This feature should be common for different provider types.\n\nI\u0027m not sure\nif it is necessary to allow to configure refresh for idividual queries or per\nbug repository.\n\nAlso see bug 102848\n",
    "Shawn: Eugene\u0027s comment indicates that this scheduling functionality should\nactually be in ..mylar.tasklist, since that will expose it to any bug repository\nsystem that integrates with the task list.  I think that over time we can expect\nsome of the Bugzilla functionality like this generalize into the the task list.",
    "Rob, for the first pass, refresh every query category every n minutes (set on Task List prefs page).\n",
    "Hmm... why don\u0027t make it query preference from the beginning? Also it may make sense to have it for the repository and use as default value for queries and individually created issues.",
    "This is pretty similar to having multiple email accounts and setting a \"check for new messages every..\" setting.  Isn\u0027t it simpler to have this set in a single place, as with Outlook\u0027s email Send \u0026 Receive settings?  I find the way that Firefox allows this setting per-account annoying, since I either want it to happen frequently (stable fast connection), or manually (otherwise).  Is there a compelling reason to do it per-repository (and hence for changing every repository setting when you want to lower the interval from the default for example)?",
    "Created an attachment (id\u003d34360)\nAdded scheduled refresh and preferences to Task list preference page\n\n",
    "Looking good overall and I\u0027ve committed it.  One key change is required: get rid of storing REPOSITORY_SYNCH_SCHEDULE_UNITS_.  This is UI thing, and the only thing that needs to be stored is the miliseconds for the schedule.  You can then convert it in the UI.  Change the prefrence page to only support setting minutes (that\u0027s all Thunderbird and Outlook do.  I don\u0027t think that there\u0027s a good use case for hours, and someone can set it to a high number of minutes if needed.",
    "(In reply to comment #5)\n\u003e This is pretty similar to having multiple email accounts and setting a \"check\n\u003e for new messages every..\" setting.  Isn\u0027t it simpler to have this set in a\n\u003e single place, as with Outlook\u0027s email Send \u0026 Receive settings? I find the way\n\u003e that Firefox allows this setting per-account annoying, since I either want it\n\u003e to happen frequently (stable fast connection), or manually (otherwise). \n\nWell, it might be easier, but in some cases I\u0027d like to be able to overwrite the defaults for some of the queries. Like bugs assigned to me could be refreshed more frequently then other bugs that are in my interest or general high priority bugs.\n\n\u003e Is there a compelling reason to do it per-repository (and hence for changing every\n\u003e repository setting when you want to lower the interval from the default for\n\u003e example)?\n\nThere should be an \"Offline\" setting or/and option to disable query updates.\n\n",
    "It won\u0027t be hard to add a setting to override the refresh for some queries.  However, we\u0027ll need to get this working first, because we\u0027re using it to drive a consistent reminder mechanism (which can in turn use the idea of degree-of-interest to only notify you of changes to important reports).  Regarding performance, we have an idea for optimization: first run a query on the server to see if any reports contained within your queries have changed since the last refresh, then only refresh those reports.\n\nRegarding Offline mode, we\u0027re hoping to do away with it and always fail gracefully.  So the \"Work Offline\" button is gone from the Task List pull down, if you double-click a report when you\u0027re offline it will open the local copy, we can diff conflicts with the server, etc.  But this is still experimental.",
    "Hmm. I would expect that you could work on issues in offline mode and then send results to the server... Is it still going to be there?",
    "If your concern is changes to the local copy of the report, they will persist until you submit them. However, if upon submitting the report the issue has been modified by someone else, you will be notified of a conflict. At this point you are given the option to either override your local changes completely or append your new comment to the incoming issue/report. My understanding is that if you choose not override local changes, only your local comment is tacked on to the newly downloaded issue/report all other fields are overwritten. ",
    "Just got this.  Making a copy of that list, via new ArrayList\u003c..\u003e(list), should solve the problem.\n\nCaused by: java.util.ConcurrentModificationException\n\tat java.util.AbstractList$Itr.checkForComodification(Unknown Source)\n\tat java.util.AbstractList$Itr.next(Unknown Source)\n\tat org.eclipse.mylar.internal.tasklist.TaskListNotificationManager.cleanNotified(TaskListNotificationManager.java:138)\n\tat org.eclipse.mylar.internal.tasklist.TaskListNotificationManager.access$2(TaskListNotificationManager.java:136)\n\tat org.eclipse.mylar.internal.tasklist.TaskListNotificationManager$1$1.run(TaskListNotificationManager.java:56)\n",
    "Created an attachment (id\u003d34527)\nRemoved hours/minuts selection. Reduced job priority to decorate\n\n",
    "Patch applied.  ",
    "Done.  Causes too much refresh, but that\u0027s a seperate issue we have to address\nas we start using this more.  I\u0027ve set mine to 30 min for now."
  ],
  "commentCreationDates": [
    "2005-08-13T16:09:38+02:00",
    "2005-08-13T16:16:00+02:00",
    "2005-08-15T20:28:34+02:00",
    "2006-02-07T01:20:47+01:00",
    "2006-02-07T01:35:11+01:00",
    "2006-02-07T02:59:39+01:00",
    "2006-02-08T18:30:39+01:00",
    "2006-02-09T21:13:17+01:00",
    "2006-02-09T21:28:26+01:00",
    "2006-02-10T15:14:27+01:00",
    "2006-02-10T18:52:55+01:00",
    "2006-02-10T19:52:57+01:00",
    "2006-02-11T00:13:03+01:00",
    "2006-02-11T00:33:59+01:00",
    "2006-02-11T00:51:37+01:00",
    "2006-02-21T00:52:31+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.ConcurrentModificationException",
      "elements": [
        {
          "method": "java.util.AbstractList$Itr.checkForComodification",
          "source": "Unknown Source"
        },
        {
          "method": "java.util.AbstractList$Itr.next",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.mylar.internal.tasklist.TaskListNotificationManager.cleanNotified",
          "source": "TaskListNotificationManager.java:138"
        },
        {
          "method": "org.eclipse.mylar.internal.tasklist.TaskListNotificationManager.access$2",
          "source": "TaskListNotificationManager.java:136"
        },
        {
          "method": "org.eclipse.mylar.internal.tasklist.TaskListNotificationManager$1$1.run",
          "source": "TaskListNotificationManager.java:56"
        }
      ],
      "number": 0,
      "commentIndex": 12,
      "bugId": "106939",
      "date": "2006-02-11T00:13:03+01:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "normal"
    }
  ],
  "groupId": "106939",
  "bugId": "106939",
  "date": "2005-08-13T16:09:38+02:00",
  "product": "Mylyn",
  "component": "Bugzilla",
  "severity": "normal"
}