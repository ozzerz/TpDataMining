{
  "comments": [
    "I am entering this defect on behalf of Angela Constantinescu of zetvisions.com (zetVisions AG, Heidelberg, Germany) for a problem she found during executing a URLTest.\n\nHere are her remarks (copied from several emails I have exchanged with her and her colleague Lars Augstein):\n\nthe trace looks like this (i added the relevant lines of code from the java source file):\n \njava.lang.Exception: \n \njava.lang.NumberFormatException: For input string: \"eHeight\"\n at test.LocalPortalTmp.executeRequest(LocalPortalTmp.java:967)\n        --\u003e  protected void executeRequest(HttpRequest request) throws Exception {\n    \n                      //If (response.getCode() \u003c 0) then there was an error when executing the request\n                      if (response.getCode() \u003c 0)\n                 967:              throw new Exception(text);\n                        ..... }\n\n at test.LocalPortalTmp.c1GETLocalhost(LocalPortalTmp.java:175)\n        --\u003e public void c1GETLocalhost() throws Exception {\n                    .....\n                 175:   executeRequest(request);\n            }\n   \n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n at java.lang.reflect.Method.invoke(Method.java:324)\n at junit.framework.TestCase.runTest(TestCase.java:154)\n at junit.framework.TestCase.runBare(TestCase.java:127)\n at junit.framework.TestResult$1.protect(TestResult.java:106)\n at junit.framework.TestResult.runProtected(TestResult.java:124)\n at junit.framework.TestResult.run(TestResult.java:109)\n at junit.framework.TestCase.run(TestCase.java:118)\n at org.eclipse.hyades.test.common.junit.HyadesTestCase.run(HyadesTestCase.java:173)\n at junit.framework.TestSuite.runTest(TestSuite.java:208)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)\n at junit.framework.TestSuite.run(TestSuite.java:203)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)\n at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\n at junit.extensions.TestDecorator.run(TestDecorator.java:28)\n at junit.extensions.RepeatedTest.run(RepeatedTest.java:25)\n at junit.framework.TestSuite.runTest(TestSuite.java:208)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)\n at junit.framework.TestSuite.run(TestSuite.java:203)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)\n at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\n at junit.extensions.TestDecorator.run(TestDecorator.java:28)\n at junit.extensions.RepeatedTest.run(RepeatedTest.java:25)\n at junit.framework.TestSuite.runTest(TestSuite.java:208)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)\n at junit.framework.TestSuite.run(TestSuite.java:203)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)\n at org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)\n at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)\n at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)\n at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\nMy colleague was looking into the HttpRequestHandler class and here is what he has to say: \n \n \nThe problem as far as i can assess it lies in the parsing of chunked responses. All un-chunked responses are parsed without errors and the tests dont result in exception. \n\nIn the case of chunked responses, each chunk is supposed to start with a number representing the length of the chunk. However, after debugging, I realized that while trying to read from the second chunk, the index value for the buffer reader is incorrect, since it starts reading a few lines below the actual line containing the chunkLength number. The HttpRequestHandler.getServerResponse method hence tries to parse a string, in our case \"eHeigth\" to an integer and this is where the error is thrown. \nPlease find attached the firstChunk, secondChunk and full Response. After analyzing this, it became clear that the problem lies in the correct reading from the buffer.\n\nAs mentioned for unchunked responses, everything runs perfectly. I am currently personally trying to fix this problem, but due to my being a newbie am currently facing some problems doing so. \n\nI thought I should mention that we are connected to the internet through a proxy. In order to run the local portal, i simply removed all proxy settings. For the online portal, I set up the proxy, however, I unchecked the option to remove the localhost from the list (in other words, the localhost would also connect through the proxy, although since the portal is online, this should not affect anythig). This was the only way to make the recorder work, otherwise it would not start.",
    "Created an attachment (id\u003d34797)\nFirst chunk that works OK\n\nComments also from Angela:\n\nHere are the attachments, and also some results form the debugging. The thing is, the first chunk is ok, the second chunk is the one where the exception is thrown. The HttpRequestHandler.getServerResponse method is looking for a number in the beginning.",
    "Created an attachment (id\u003d34798)\nSecond chunk where the exception occurs.\n\n",
    "Created an attachment (id\u003d34801)\nRecording file \n\n",
    "Add DuWayne and I to the CC list.",
    "I took the liberty of reassigning this to DuWayne Morris.  If this is not correct, please reassign to appropriate person.",
    "\n\n*** This bug has been marked as a duplicate of 130144 ***",
    "ACTION: Please update the target to the release AND iteration that this defect was returned/fixed.",
    "Correcting target.",
    "ACTION: Please verify/close this defect.",
    "Closing."
  ],
  "commentCreationDates": [
    "2006-02-15T19:26:21+01:00",
    "2006-02-15T19:32:31+01:00",
    "2006-02-15T19:33:02+01:00",
    "2006-02-15T19:34:57+01:00",
    "2006-02-15T19:37:45+01:00",
    "2006-02-16T14:20:10+01:00",
    "2006-03-17T19:30:38+01:00",
    "2006-11-13T14:36:17+01:00",
    "2006-11-15T03:04:36+01:00",
    "2006-11-16T14:02:31+01:00",
    "2006-11-16T17:16:23+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NumberFormatException",
      "message": "For input string: \"eHeight\"",
      "elements": [
        {
          "method": "test.LocalPortalTmp.executeRequest",
          "source": "LocalPortalTmp.java:967"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "128085",
      "duplicateId": "130144",
      "date": "2006-02-15T19:26:21+01:00",
      "product": "TPTP Testing",
      "component": "Test.Execution.URLRunner",
      "severity": "normal"
    }
  ],
  "groupId": "130144",
  "bugId": "128085",
  "duplicateId": "130144",
  "date": "2006-02-15T19:26:21+01:00",
  "product": "TPTP Testing",
  "component": "Test.Execution.URLRunner",
  "severity": "normal"
}