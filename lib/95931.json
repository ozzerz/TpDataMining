{
  "comments": [
    "N20050519-0010\n\nI was testing fast exit/restart of my workspace. I was starting it, and as soon\nas it came up I was exiting it. After several iterations, the following was\nwritten to the .log:\n\n!ENTRY org.eclipse.ui 4 4 2005-05-19 14:52:51.554\n!MESSAGE Unable to create element factory.\n\n!ENTRY org.eclipse.core.runtime 4 1 2005-05-19 14:52:51.554\n!MESSAGE Plug-in org.eclipse.jdt.ui was unable to load class\norg.eclipse.jdt.internal.ui.PersistableJavaElementFactory.\n!STACK 0\njava.lang.ClassNotFoundException:\norg.eclipse.jdt.internal.ui.PersistableJavaElementFactory\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:403)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)\n\tat\norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:74)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:275)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\n\tat\norg.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1259)\n\tat\norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:152)\n\tat\norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:142)\n\tat\norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:129)\n\tat\norg.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:48)\n\tat org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:240)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:51)\n\tat\norg.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:236)\n\tat\norg.eclipse.ui.internal.WorkbenchPlugin.getElementFactory(WorkbenchPlugin.java:347)\n\tat org.eclipse.ui.internal.Workbench.getElementFactory(Workbench.java:2151)\n\tat org.eclipse.ui.internal.WorkingSet.restoreWorkingSet(WorkingSet.java:228)\n\tat org.eclipse.ui.internal.WorkingSet.getElementsArray(WorkingSet.java:142)\n\tat org.eclipse.ui.internal.WorkingSet.getElements(WorkingSet.java:130)\n\tat\norg.eclipse.jdt.internal.ui.workingsets.JavaWorkingSetUpdater.checkElementExistence(JavaWorkingSetUpdater.java:197)\n\tat\norg.eclipse.jdt.internal.ui.workingsets.JavaWorkingSetUpdater.add(JavaWorkingSetUpdater.java:78)\n\tat\norg.eclipse.ui.internal.AbstractWorkingSetManager.bundleChanged(AbstractWorkingSetManager.java:491)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1205)\n\tat\norg.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:188)\n\tat\norg.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:290)\n\n!ENTRY org.eclipse.ui 4 4 2005-05-19 14:52:51.564\n!MESSAGE Unable to restore working set item - cannot instantiate factory:\norg.eclipse.jdt.ui.PersistableJavaElementFactory\n!SESSION 2005-05-19 14:53:00.247 -----------------------------------------------\neclipse.buildId\u003dN20050519-0010\njava.version\u003d1.4.2_04\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nFramework arguments:  -showlocation -keyring d:\\eclipse\\.keyring\nCommand-line arguments:  -os win32 -ws win32 -arch x86 -showlocation -data\nd:\\eclipse\\workspace\\plugins -debug d:\\eclipse\\.options -keyring\nd:\\eclipse\\.keyring -consoleLog -console\n\n!ENTRY org.eclipse.core.resources 2 10035 2005-05-19 14:53:03.31\n!MESSAGE A workspace crash was detected. The previous session did not exit normally.",
    "Note that the ClassNotFoundException might be unrelated to the crash being\ndetected.  The \"crash detection\" will happen if the workspace is modified after\nbeing saved.  If any job is still running that modifies the workspace during\nshutdown, you will see this in the log. I wonder if the new\nJavaCore#initializeAfterLoad job might be the culprit, since it is not canceled\non shutdown.",
    "Changing title to reflect John comments.\n\nJohn, is there any way how I can prevent this from happening. Should I check\nWorkbench#isClosing in these situations ?",
    "I have a theory that this might be a problem in platform UI, but I haven\u0027t been\nable to reproduce when debugging.  The main problem is that\nAbstractWorkingSetManager has a bundle listener installed.  Either the listener\nis not being removed, or it is removed too late, or it is being added again\nduring shutdown.  Anyone calling IWorkbench#getWorkingSetManager will cause it\nto be lazily recreated if it has been shutdown already, and then the bundle\nlistener might receive events too late.  I\u0027m not familiar enough with the code\nor how it is used to figure out what might be happening, but at least adding\nIWorkbench.isClosing() checks would make sense to minimize the danger of this\nhappening.",
    "*** Bug 97036 has been marked as a duplicate of this bug. ***",
    "The consequence of the workbench crash is a full build on the next startup. This\nis a bit annoying.",
    "Should protect the Java working updater on shutdown.\n\nNick, the right method to us is IWorkbench#isClosing(). Right ?",
    "I think the best place to add the check is in\nAbstractWorkingSetManager.bundleChanged.  Any working set updater could face the\nsame problem, and the bundleChanged event seem like the best place to cut this\noff (rather than just in the JDT updater).  \n\nIt is likely too risky for 3.1 but the general question of the behaviour of\nIWorkbench API after the workbench has been closed might be worth revisiting in\nthe future.  As noted in comment #3, calling getWorkingSetManager after the\nworkbench has been shutdown currently causes the bundle listener to be recreated.",
    "For code internal to the workbench, use Workbench.isRunning().\nFor external code, use PlatformUI.isWorkbenchRunning().\nThe difference is that the latter might report a false positive if another\nworkbench has started.  Within the workbench, the code should know the workbench\nit\u0027s dealing with, and not use PlatformUI.getWorkbench().\n\nShould also ensure that the bundle listener is removed on shutdown.\n\n",
    "Nick, enclosed a patch against AbstractWorkingSetManager that fixes the problem\nin the way recommended by John.\n\nThe bundle listener was always removed on AbstractWorkingSetManager#dispose().\n\nCan you apply the patch for RC2 ?",
    "Created an attachment (id\u003d22320)\nThe patch\n",
    "I don\u0027t think we want to remove the listener on notification.  It\u0027s supposed to\nhandle notification from multiple other bundles starting up.\n\nAlso note that since bundle listeners are notified asynchronously by default, it\nmay be better to check the current state of the bundle, rather than the event state:\n\n  if (event.getBundle().getState() !\u003d Bundle.ACTIVE)\n\treturn;\n\nrather than the current:\n\t\tif (event.getType() !\u003d BundleEvent.STARTED)\n\t\t\treturn;\n\n",
    "The case above might come into play if the bundle was removed, shortly after\nstarting, but without the workbench shutting down.\nThis is unlikely, but possible.\n",
    "Nick, makes absolutely sense.\n\nI will attach an updated patch.\n\n\n",
    "Created an attachment (id\u003d22336)\nUpdated patch\n",
    "This looks good to me.\n\nKim, could you also review the patch please.\nI\u0027ve actually applied it, but shout if you think there are any issues with it.\n",
    "Looks OK to me.",
    "I wasn\u0027t able to reproduce the original problem on I20050610-0010, starting my\nself-hosting workspace and using Ctrl+F4 to close and exit as soon as it came up.\nSee bug 99384 though.\n"
  ],
  "commentCreationDates": [
    "2005-05-19T14:59:20+02:00",
    "2005-05-25T23:41:26+02:00",
    "2005-05-26T10:54:56+02:00",
    "2005-05-26T17:30:46+02:00",
    "2005-05-27T19:50:27+02:00",
    "2005-05-27T19:54:27+02:00",
    "2005-06-01T12:16:54+02:00",
    "2005-06-01T16:02:00+02:00",
    "2005-06-01T16:06:37+02:00",
    "2005-06-03T16:09:39+02:00",
    "2005-06-03T16:10:02+02:00",
    "2005-06-03T16:35:06+02:00",
    "2005-06-03T16:38:36+02:00",
    "2005-06-03T18:43:48+02:00",
    "2005-06-03T18:44:13+02:00",
    "2005-06-03T21:03:38+02:00",
    "2005-06-03T21:11:15+02:00",
    "2005-06-10T17:35:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "org.eclipse.jdt.internal.ui.PersistableJavaElementFactory",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:403"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:74"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:235"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:275"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1259"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:152"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:142"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:129"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:48"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin$1.run",
          "source": "WorkbenchPlugin.java:240"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:51"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:236"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.getElementFactory",
          "source": "WorkbenchPlugin.java:347"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.getElementFactory",
          "source": "Workbench.java:2151"
        },
        {
          "method": "org.eclipse.ui.internal.WorkingSet.restoreWorkingSet",
          "source": "WorkingSet.java:228"
        },
        {
          "method": "org.eclipse.ui.internal.WorkingSet.getElementsArray",
          "source": "WorkingSet.java:142"
        },
        {
          "method": "org.eclipse.ui.internal.WorkingSet.getElements",
          "source": "WorkingSet.java:130"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.workingsets.JavaWorkingSetUpdater.checkElementExistence",
          "source": "JavaWorkingSetUpdater.java:197"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.workingsets.JavaWorkingSetUpdater.add",
          "source": "JavaWorkingSetUpdater.java:78"
        },
        {
          "method": "org.eclipse.ui.internal.AbstractWorkingSetManager.bundleChanged",
          "source": "AbstractWorkingSetManager.java:491"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent",
          "source": "BundleContextImpl.java:1205"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:188"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run",
          "source": "EventManager.java:290"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "95931",
      "date": "2005-05-19T14:59:20+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "95931",
  "bugId": "95931",
  "date": "2005-05-19T14:59:20+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}