{
  "comments": [
    "RC1:\nTo reproduce this issue run the attached code. The table gets displayed with \nfew blank lines at the top.",
    "Created an attachment (id\u003d22748)\nCode snippet that reproduces the problem\n",
    "Created an attachment (id\u003d22749)\nScreen shot showing the problem\n",
    "Not again!",
    "talked with SN and I agree with fixing this for RC3",
    "Fixed \u003e 20050614",
    "Created an attachment (id\u003d24919)\nNew test case that reproduces the problem\n\nThis new test case reproduces the same problem with 3.1 GA.",
    "Reopened since the problem still happens with a sligtly modified test code. \nIt\u0027s pretty bizzarre that the bad behavior is sensitive to a number of \nseemingly unrelated factors. For example, commenting out\n     Text text \u003d new Text(shell, SWT.BORDER);\nline makes the empty space go away.\n\nPlease give this problem high priority since it is serious and does not have a \nworkaround. Is it possible to create a binary replacement plugin with a fix \nwhen it\u0027s ready? \n",
    "Fixed \u003e 20050720\n\nThis is a really tough Windows bug (caused when the table is very small and \nsomeone resizes the columns from within a resize listener, causing another \nresize event to happen when the scroll bars are hidden and shown).  I have had \nmany different attempts at working around this problem in each version of the \ntoolkit.  The latest approach still seems good but I missed a case which you \ncode uncovered.  Thanks!\n\nI agree that the problem is serious.  It can be worked around in 3.1 by \nensuring that a table with resize listeners has exactly one parent.",
    "Steve, I\u0027m not sure I understand the statement \"table with resize listeners has \nexactly one parent\". Does it mean that the parent has to be Shell, not \nComposite? Or does it mean that it has to be the only child of its parent?\n\nOur company is very close to release of an RCP application based on Eclipse \n3.1. This application uses a lot of tables controlled by TableViewers and is \ngreatly affected by this bug. Is it possible to get a binary build of SWT (for \nWin32) with your latest fix?",
    "I can attach the patch to 3.1 to this bug report.",
    "Thanks a lot. That would be very helpful.",
    "Created an attachment (id\u003d25091)\nPatch for 99266\n",
    "I don\u0027t have an environment set up to build SWT. Is it possible to attach a \nfixed version of org.eclipse.swt_3.1.0.jar?",
    "Actually it would be fine if you can attach just Table.class.",
    "Correction to comment 13. I meant org.eclipse.swt.win32.win32.x86_3.1.0.jar.",
    "With build N20050722-0010 I was still able to reproduce the issue although not \nwith a simple standalone program yet. The scenario in which the table gets \nempty rows includes deletion of rows from the bottom of the table so that the \ntable has a scroll bar before the deletion, but no scroll bar after the \ndeletion.\n\nI will try to create a simple program that reproduces the problem in this \nscenario.",
    "It looks like the scenario with deletion of rows only leads to empty rows at \nthe top of the table when the table has a dynamic column layout, which resizes \ncolumns so that they always occupy the whole table width. I was able to work \naround the problem by subclassing TableViewer and disabling layout during \nremove operation:\n\n  public void remove(Object[] elements) {\n    Table table \u003d getTable();\n    table.setLayoutDeferred(true);\n    try {\n      super.remove(elements);\n    } finally {\n      table.setLayoutDeferred(false);\n    }\n  }\n\n\n",
    "Can you provide code some example code for me to debug?",
    "Created an attachment (id\u003d25276)\nTest case with removal of rows\n\nHere is code that reproduces empty space when a bunch of rows is deleted.",
    "Sigh.  The original example code you gave me has the #$!%!@# blank lines, even \nbefore I press the remove button.",
    "Strange. I\u0027m running with SWT from build N20050722-0010 and I don\u0027t see empty \nspace before rows removal.",
    "Ok, I have another work around.  Give me a day or two to test it.",
    "Fixed (again) \u003e 20050726",
    "Is the fix in 3.1.1 branch yet?\n\nI\u0027ve tried to run Test case with removal of rows with SWT from M20050727-1200 \nand got the empty space before even doing anything. The empty space goes away \nafter I click around in the table and appears again after removing of rows.",
    "Reopened since it still does not work.",
    "This WORKSFORME:\n\n1) Run Bug99266RemoveScenario\n2) Select \u0027Name 13\u0027\n3) Shift Select \u0027Name 9\u0027 (a bunch of items get selected)\n4) Press \u0027Remove Rows\u0027\n\nCan you give me a series of steps that fails for you?\n",
    "With I20050802-0800 I\u0027m getting no empty rows when Bug99266RemoveScenario comes \nup and one empty row at the top after following the steps in comment 26. This \ntest ran over a remote desktop connection. Tomorrow I will run the same test \nlocally.",
    "When running locally the test has exactly the same behavior as described in \ncomment 27. Screen resolution is set to 120 DPI, font size normal.\n\nI\u0027m puzzled by the fact that I20050802-0800 exhibits different behavior than \nM20050727-1200. Behavior with M20050727-1200 is described in comment 24 -- four \nempty rows upfront, one empty row after deletion.",
    "Any progress so far? Was it put on a back burner?",
    "It\u0027s on the back burner because it WORKSFORME.  Got any ideas?",
    "How do you explain differences in behavior I got from I20050802-0800 and from \nM20050727-1200? Is it possible that we are simply running different versions of \nSWT?",
    "\u003eSigh.  The original example code you gave me has the #$!%!@# blank lines, \n\u003eeven before I press the remove button.\n\nWe were already seeing different behavior.  How would you like to proceed?",
    "It must be a different JFace.  I\u0027m running SWT from HEAD, and JFace 3.1.0 from \nthe JAR\u0027s.",
    "Can you try plain M20050727-1200 to make sure that we are on the same page?",
    "Steeve, here is something that I don\u0027t understand. This bug is targeted for \n3.1.1 and therefore has to be tested with 3.1.1. How can you make an assertion \nthat it works for you if you didn\u0027t test it in the environment in which it is \nsupposed to be fixed? ",
    "Steve, from the comments below, the fix for this appears to be in the 3.2 \nstream.  But the bug is targetted for 3.1.1.  Will this be fixed for 3.1.1?  If \nnot, the Target field should be changed.",
    "Sergey is right.  I want the fix to go into 3.1.1 but it doesn\u0027t work for him \n(although it WORKSFORME).  I need to resolve the issue as he suggests.\n\nBilly, can you confirm the failure that Sergey is seeing on your Windows \nmachine using the code from 3.1.1 stream?",
    "BB or MVM, does this happen on your machine or in 3.1.x and not HEAD?",
    "*** Bug 65792 has been marked as a duplicate of this bug. ***",
    "Ok, the problem happens when remove() causes a scroll bar it be hidden and \nsends a resize event.  I have fixed the problem (again) in HEAD.  BB and VI to \ndetermine whether the patch is safe enough for 3.1.1.",
    "Steve,Veronika, Billy - if you are going to fix this for 3.1.1, the code should \nbe released before the RC2 build on Sept 23rd, for testing purposes.",
    "I ran the test case with removal of rows with build N20050918-0010 and got:\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException\n\tat java.lang.System.arraycopy(Native Method)\n\tat org.eclipse.swt.widgets.Table.remove(Table.java:1976)\n\tat org.eclipse.jface.viewers.TableViewer.internalRemove\n(TableViewer.java:933)\n\tat org.eclipse.jface.viewers.TableViewer.access$3(TableViewer.java:910)\n\tat org.eclipse.jface.viewers.TableViewer$4.run(TableViewer.java:968)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection\n(StructuredViewer.java:1201)\n\tat org.eclipse.jface.viewers.TableViewer.remove(TableViewer.java:966)\n\tat Bug99266RemoveScenario$3.widgetSelected\n(Bug99266RemoveScenario.java:134)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent\n(TypedListener.java:90)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3194)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2823)\n\tat Bug99266RemoveScenario.main(Bug99266RemoveScenario.java:140)\n",
    "Regarding Comment 42, I have released a fix for this which will be included in\nEclipse 3.2 M2.\n\nRegarding 3.1.1.  The changes have not been tested enough and are too wide\nspread to be patched back to 3.1.1.  I think the risk level is too high versus\nthe benefit to patch this change back at this time.  Perhaps we will be more\ncomfortable with the changes for a future 3.1.* release.\n\nI am marking this bug report as fixed.  Sergey, can you please confirm that your\nproblem is fixed in 3.2 M2?",
    "Sorry, I won\u0027t be able to test it soon since I\u0027m leaving on vacation for three \nweeks.",
    "Fixed \u003e 20050927 (actually, the changes were in M2)\n\nWow.  This is the 4rth attempt at fixing this problem (really, working around \nthe bug in Windows).  I hope that this time the fix will hold.  Sergey, please \nreopen this bug as necessary if not fixed for you in M2.  Thanks for your \npatience.",
    "Created an attachment (id\u003d27569)\nUpdated testcase\n\nI get a lot of blank lines in tables.  Here is an updated testcase.  Just click\nthe button, hopefully you see the same.  (I use 3.2M2 win32)\n",
    "Given that there were reproducable cases in this bug that were fixed in 3.2M2, I\nthink it\u0027s best to file a new bug with your new case.",
    "Ok, I\u0027ve opened bug #110864.",
    "*** Bug 110864 has been marked as a duplicate of this bug. ***",
    "Reopening as the fix will need to change to fix the new case.",
    "Fixed \u003e 20050927 \n\nRutger, thanks for finding this right away.  This is a particularly insidious \nWindows bug.  It turns out that Windows sends an unexpected WM_SIZE from \nwithin WM_SETREDRAW.  We used to check for this case in one of the work around \nattempts but various different strategies have been tried along the way, the \ncode got deleted, and the code is needed in the latest attempt.",
    "I just replaced my Table.java, and it works for the test case, but in my real \napp I use SWT.VIRTUAL, and the blank lines are still there.  When I disable the \nSWT.VIRTUAL the blank rows do not show up.",
    "!@#$!@$!@#",
    "Created an attachment (id\u003d27597)\nSecond update (virtual)\n\nThis is an SWT.VIRTUAL testcase.\n\nClick the button twice to see a blank row.  \n\nOr, set variable \"cnt\" to 20 (instead of 22) and click the button once and\neverything disappears.\n",
    "Tested I20051012-1200.\nWas not able to reproduce empty rows with any of the test cases: \"Test case \nwith removal of rows\", \"Updated testcase\" and \"Second update (virtual)\" with \nboth cnt\u003d22 and cnt\u003d20.\n",
    "SWT 3209 \nswt-I20051012-1200-win32-win32-x86\neclipse-SDK-I20051012-1200-win32.zip \njface cvs \n\nThe virtual one still leaves blank rows for me.",
    "Fixed \u003e 20051014\n\nAvoiding WM_SIZE from LVM_SETITEMCOUNT seems to fix both cases (cnt\u003d20 and\ncnt\u003d22) from the test case posted in comment #54."
  ],
  "commentCreationDates": [
    "2005-06-09T22:51:42+02:00",
    "2005-06-09T22:52:52+02:00",
    "2005-06-09T22:54:38+02:00",
    "2005-06-10T22:41:06+02:00",
    "2005-06-14T18:12:22+02:00",
    "2005-06-14T18:59:31+02:00",
    "2005-07-18T17:54:20+02:00",
    "2005-07-18T18:02:39+02:00",
    "2005-07-20T15:34:27+02:00",
    "2005-07-20T17:22:42+02:00",
    "2005-07-20T17:32:49+02:00",
    "2005-07-20T18:18:50+02:00",
    "2005-07-20T22:56:19+02:00",
    "2005-07-20T23:02:17+02:00",
    "2005-07-20T23:05:07+02:00",
    "2005-07-20T23:10:04+02:00",
    "2005-07-22T19:50:49+02:00",
    "2005-07-24T03:09:28+02:00",
    "2005-07-25T15:10:25+02:00",
    "2005-07-26T00:25:46+02:00",
    "2005-07-26T01:45:01+02:00",
    "2005-07-26T01:51:15+02:00",
    "2005-07-26T01:54:35+02:00",
    "2005-07-26T15:25:51+02:00",
    "2005-07-28T03:20:37+02:00",
    "2005-07-29T01:52:40+02:00",
    "2005-08-02T16:57:14+02:00",
    "2005-08-03T06:19:23+02:00",
    "2005-08-03T18:11:26+02:00",
    "2005-08-10T18:16:52+02:00",
    "2005-08-10T18:27:13+02:00",
    "2005-08-10T18:31:42+02:00",
    "2005-08-10T18:48:55+02:00",
    "2005-08-10T18:53:21+02:00",
    "2005-08-10T19:09:22+02:00",
    "2005-08-18T02:50:52+02:00",
    "2005-08-29T23:18:35+02:00",
    "2005-08-30T01:09:14+02:00",
    "2005-09-07T01:26:50+02:00",
    "2005-09-09T17:54:03+02:00",
    "2005-09-10T00:35:13+02:00",
    "2005-09-16T19:12:55+02:00",
    "2005-09-19T20:48:55+02:00",
    "2005-09-21T21:57:43+02:00",
    "2005-09-21T22:00:00+02:00",
    "2005-09-27T19:07:51+02:00",
    "2005-09-27T20:07:16+02:00",
    "2005-09-27T20:48:50+02:00",
    "2005-09-27T21:35:11+02:00",
    "2005-09-27T22:04:51+02:00",
    "2005-09-27T22:05:22+02:00",
    "2005-09-27T22:34:53+02:00",
    "2005-09-27T22:59:16+02:00",
    "2005-09-27T23:31:49+02:00",
    "2005-09-27T23:33:57+02:00",
    "2005-10-13T00:01:47+02:00",
    "2005-10-13T06:30:38+02:00",
    "2005-10-14T21:17:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "elements": [
        {
          "method": "java.lang.System.arraycopy",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.remove",
          "source": "Table.java:1976"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRemove",
          "source": "TableViewer.java:933"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.access$3",
          "source": "TableViewer.java:910"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer$4.run",
          "source": "TableViewer.java:968"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1201"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.remove",
          "source": "TableViewer.java:966"
        },
        {
          "method": "Bug99266RemoveScenario$3.widgetSelected",
          "source": "Bug99266RemoveScenario.java:134"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:90"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:884"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3194"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2823"
        },
        {
          "method": "Bug99266RemoveScenario.main",
          "source": "Bug99266RemoveScenario.java:140"
        }
      ],
      "number": 0,
      "commentIndex": 42,
      "bugId": "99266",
      "date": "2005-09-19T20:48:55+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "99266",
  "bugId": "99266",
  "date": "2005-06-09T22:51:42+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}