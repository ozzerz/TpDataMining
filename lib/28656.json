{
  "comments": [
    "I\u0027m trying to set up a public version of Eclipse that everyone on our network \ncan run without installing anything. So I installed it on my XP machine (works \nfine) then copied the entire Eclipse directory to a network location. The path \nname for the executable is something like \n\\\\machinename\\tools\\Eclipse\\bin\\Eclipse.exe . When I try to invoke this (from \na Command window with the UNC path, or by adding it to my PATH and \nrunning \u0027Eclipse.exe\u0027, or by looking at the directory in the Windows explorer \nand double clicking Eclipse.exe), I get an error dialog that says:\n\u0027Problems during startup. Check the \".log\" file in the \".metadata\" directory \nof your workspace.\u0027 That file contains these lines:\n\n!SESSION ----------------------------------------------------------------------\n!ENTRY org.eclipse.core.launcher 4 0 Dec 18, 2002 22:13:33.991\n!MESSAGE Exception launching the Eclipse Platform:\n!STACK\njava.lang.RuntimeException: Could not find bootstrap code. Check location of \nboot plug-in or specify -boot.\n\tat org.eclipse.core.launcher.Main.searchForBoot(Main.java:424)\n\tat org.eclipse.core.launcher.Main.getBootPath(Main.java:394)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:237)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)\n\nI tried some variants of the -boot and -configuration options but couldn\u0027t get \nit to work.\n\nFor various reasons I can\u0027t ask my users to map a network drive to this \nlocation but if I do that as a test, for example I map drive letter Z: to \n\\\\machinename\\tools and run \u0027z:\\Eclipse\\bin\\eclipse.exe\u0027 then it works just \nfine. So it looks like a problem with the system using a UNC pathname.",
    "*** Bug 33265 has been marked as a duplicate of this bug. ***",
    "Do we know why this is happening yet? If it\u0027s a limitation of the Java VM, then there\u0027s not much we \ncan do. If it\u0027s a just a bug in our code, then we should find it and fix it. UNC is part of the platform, \nand we should support it.",
    "Should try the new runtime on UNC paths to confirm that our URL handling is \ncorrect.",
    "Assigning to Jeff since he is the last one who commented it :-)",
    "I spent about a day going over the code in Main and the lower levels of OSGi to \nfind everywhere that we are manipulating paths/URLs.  The basic rule is:\n\nif it is (or you want) a file: URL then to do any manipulation you have to make \na java.io.File and use .toURL().  This does the right thing withrespect to /.  \nThis is true for both UNC paths as well as normal paths.  There is some dispute \nabout the normal case since File.toURL() will insert a / before the c:.  This \nis totally legal and actually the most correct answer.  People are bummed \nhowever because that means that URL.getFile() returns sometihng like /c:/foo.  \nThe File constructors handle this just fine so it is really only an issue if \nyou are comparing URLs or showing them to users.\n\nIn either case you should be normalizing the URLs before comparison.  In the \ncase of a file: URL, the normalization process is to convert to File first and \nthen compare.  File comparison handles the / diffs as well as the appropriate \ncase handling.\n\nAnyway, I have done rudimentary testing for all combinations of Eclipse \ninstalled on a UNC path/normal path and the workspace on a UNC path/normal path.\n\nThere may well be bugs in other parts of Eclipse which may do URL \nmanipulation.  If so, bugs should be opened in those components."
  ],
  "commentCreationDates": [
    "2002-12-19T03:00:41+01:00",
    "2003-02-26T16:02:13+01:00",
    "2003-04-25T13:28:09+02:00",
    "2004-03-25T20:53:47+01:00",
    "2004-05-01T00:15:23+02:00",
    "2004-05-07T09:23:22+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Could not find bootstrap code. Check location of  boot plug-in or specify -boot.",
      "elements": [
        {
          "method": "org.eclipse.core.launcher.Main.searchForBoot",
          "source": "Main.java:424"
        },
        {
          "method": "org.eclipse.core.launcher.Main.getBootPath",
          "source": "Main.java:394"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:237"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "28656",
      "date": "2002-12-19T03:00:41+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "28656",
  "bugId": "28656",
  "date": "2002-12-19T03:00:41+01:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}