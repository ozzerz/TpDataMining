{
  "comments": [
    "is it possible to show the Threads of the Debug-view in\na more detailed tree, i.e.: first level the debugged or \nrunning VMs, all other inner nodes are Threadgroups and\nthe the leafes are the Threads.\n\nPerhaps so much details need more communication with the debugged \nVM, and therefor this tree should become only displayed if the\neclipse user wants it.",
    "A more elaborated implementation of this feature may \nmake the debugger faster (I say that because in my \ninitial posting I suggest that it makes the debug-view slower):\nI have programms with many threads (a few hundret) and that makes\nthe debugger sometimes slow. But programms with so many Thread may\ngroup them. And If the debug view only updates the open \nThreadgroup nodes it is possible that the debug view becomes faster.\nBecause less updates are needed.",
    "Thread groups are not part of the debug model currently. There are different \npossibilities for showing this info (such as showing the thread group in the \nlabel).\n\nDeferred (not in 2.0 plan)",
    "*** Bug 1560 has been marked as a duplicate of this bug. ***",
    "I can understand that you don\u0027t want to implement that feature \nfor now. But I can\u0027t understand your explanation:\n    \"Thread groups are not part of the debug model currently.\"\nWhich debugging model: Eclipse or Java-VM ? \nI don\u0027t think that this enhancement of the debug view has much to do with a\ndebug modell, it is more like the sort option of an table-view, i.e. it is \npossible to sort the rows in the table view without any knowledge \nof the viewed table. \nIn the same way it is possible to group the Threads in the debug view by\narbitrary criterion: For example group all Threads with names that match a \nconfigurable String-pattern: *TG:[$Threadgroup$]*.\nWith this functionality the debugview can group the Threads, if I add the \nthreadgroups name to the Thread label: ...TG[Ftp-server]...,\n...TG[Http-server]..., ...TG[User_1].... (that is what you suggested). \nAnd this method is extendable, if it becomes possible to query the \ndebugged VM for the Threadgroup of a Thread the grouping criterion is\nvery simple to implement. The method with the configurable String-pattern \nis perhaps usefull for other programming languages too.\n\n",
    "Thread groups are not part of the \"language independent debug model\" that \neclipse provides. It just means we cannot do a generic solution for all \nlanguagues. It does not preclude grouping threads.",
    "*** Bug 117878 has been marked as a duplicate of this bug. ***",
    "With the new \"flexible debug platform\" support this feature should be possible now. I.e. we\u0027re no longer tied to the strict element hierarchy in the platform debug model.",
    "In which case, can I please request that this bug is re-opened?",
    "re-opening for 3.2. It\u0027s a good use case/test for the \"flexible\" support in the debug platform.",
    "Created an attachment (id\u003d32092)\nExample patch for thread groups\n\nAttaching patch as example on how to use new flex hierarchy support. This is a work in progress, not the final intended presentation.",
    "CC Mikhail for example use of flexible hierarchy/model proxy.",
    "Fixed. Thread groups are displayed in debug tree now.\n\nAdded IJavaThreadGroup to java debug model, along with methods on IJavaDebugTarget to get all thread groups/root groups and IJavaThread to get its thread group.\n\nAdded content/label adapters for new model element, and toggle action to determine whether groups are displayed. By default, toggle is off.",
    "Please verify, Kevin.",
    "Found a bug in current implementation... Appears to be Mac specific.\n1. launch VectorTest to breakpoint\n2. turn on thread groups (main thread group does not get expanded automatically)\n3. turn off thread groups -\u003e boom!\n\nLot of these NPE\u0027s:\njava.lang.NullPointerException\n\tat org.eclipse.swt.widgets.TreeItem._getExpanded(TreeItem.java:195)\n\tat org.eclipse.swt.widgets.Tree.setScrollWidth(Tree.java:2809)\n\tat org.eclipse.swt.widgets.TreeItem.setText(TreeItem.java:1312)\n\tat org.eclipse.swt.widgets.TreeItem.setText(TreeItem.java:1278)\n\tat org.eclipse.debug.internal.ui.viewers.AsynchronousTreeViewer.setLabels(AsynchronousTreeViewer.java:1039)\n\tat org.eclipse.debug.internal.ui.viewers.LabelRequestMonitor.performUpdate(LabelRequestMonitor.java:70)\n\tat org.eclipse.debug.internal.ui.viewers.AsynchronousRequestMonitor$1.runInUIThread(AsynchronousRequestMonitor.java:59)\n\tat org.eclipse.ui.progress.UIJob$1.run(UIJob.java:93)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\t... 20 more",
    "NPE\u0027s are gone on I20060131-1200. Probably an swt fix.\nFiled Bug 126379.\n",
    "verified"
  ],
  "commentCreationDates": [
    "2002-03-21T14:05:42+01:00",
    "2002-03-21T14:12:40+01:00",
    "2002-03-21T14:28:04+01:00",
    "2002-03-21T15:20:13+01:00",
    "2002-03-22T07:30:14+01:00",
    "2002-03-22T13:51:12+01:00",
    "2005-11-24T14:09:59+01:00",
    "2005-11-24T14:10:55+01:00",
    "2005-12-06T10:18:07+01:00",
    "2005-12-06T14:09:56+01:00",
    "2005-12-21T18:14:35+01:00",
    "2005-12-21T18:15:18+01:00",
    "2006-01-26T21:07:28+01:00",
    "2006-01-26T21:07:43+01:00",
    "2006-01-27T21:05:43+01:00",
    "2006-02-03T18:02:02+01:00",
    "2006-02-03T18:02:19+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.TreeItem._getExpanded",
          "source": "TreeItem.java:195"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.setScrollWidth",
          "source": "Tree.java:2809"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.setText",
          "source": "TreeItem.java:1312"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.setText",
          "source": "TreeItem.java:1278"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.AsynchronousTreeViewer.setLabels",
          "source": "AsynchronousTreeViewer.java:1039"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.LabelRequestMonitor.performUpdate",
          "source": "LabelRequestMonitor.java:70"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.AsynchronousRequestMonitor$1.runInUIThread",
          "source": "AsynchronousRequestMonitor.java:59"
        },
        {
          "method": "org.eclipse.ui.progress.UIJob$1.run",
          "source": "UIJob.java:93"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "12018",
      "date": "2006-01-27T21:05:43+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "enhancement"
    }
  ],
  "groupId": "12018",
  "bugId": "12018",
  "date": "2002-03-21T14:05:42+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "enhancement"
}