{
  "comments": [
    "I am sorry, I do not think I followed up on this mail; but this issue is\nreproducible in the instance when an interface method signature is protected and\nthe implementing class signature is public. In Java there is no problem. But\nwhen these two methods, i.e. interface signature and implementation class method\nare refactored in AspectJ I keep getting an java.lang.AbstractMethodError. \n \nThanks. \n\nWes Isberg \u003cwes@california.com\u003e wrote:\nMethod signatures in interfaces are implicitly public abstract, \nso \"public\" should be required for Session.setAutoCommit(boolean).\n\nI\u0027m inclined to think a reproducible AbstractMethodError is a bug,\nso please submit it if you can reproduce.\n\nThanks!\nWes\n\n------------Original Message------------\nFrom: Irum Godil \nTo: aspectj-users@eclipse.org\nDate: Thu, Mar-24-2005 8:41 PM\nSubject: Re: [aspectj-users] java.lang.AbstractMethodError in aspects\nActually, in following up with the query below, I noticed that the method in\nSessionInterface does not have a \"public\" identifier in front of it, where as\nthe one in Session does. So, I removed the public identifier from the Session\nmethod\u0027s signature; and the problem is gone. \n\nWhat is surprising is that the same signatures in Java do not give any problem.\nIn f act if I comment out the method from the Session class, I get an error that\nthe class must implement the inherited method. \n\nPerhaps, it is a deficiency in AspectJ; and since I just copied and pasted the\ninter-type declarations, I did not notice the differences in the 2 signatures. \n\nThanks. \n\nIrum Godil wrote:\nHi, \n\nI have the following scenario: \n\nAn interface: \n\npublic interface SessionInterface {\nvoid setAutoCommit(boolean autoCommit) throws HsqlException;\n\n//other methods}\n\na class implementing the interface: \n\npublic class Session implements SessionInterface {\n\npublic void setAutoCommit(boolean autocommit) { ...}\n}\n\nNow, i would like to move this method declaration from the interface and the\nimplementing class into an aspect. I do the following: \n\nprivileged aspect SessionAspect {\n\nabstract void SessionInterface.setAutoCommit(boolean autoCommit) throws\nHsqlException;\n\npublic void Session.setAutoCommit(boolean autocommit) {\n//method body\n}\n\n}\nWhen I run the application, I keep getting error: \n\njava.lang.AbstractMethodError:\norg.hsqldb.Session.ajc$interMethodDispatch2$aspects_atomicity_weave$setAutoCommit(Z)Vat\naspects.atomicity.weave.SessionAspect.ajc$interMethodDispatch1$aspects_atomicity_weave_SessionAspect$org_hsqldb_SessionInterface$setAutoCommit(SessionAspect.aj)at\naspects.atomicity.weave.JDBCConnectionAspect.ajc$after$aspects_atomicity_weave_JDBCConnectionAspect$1$f311d861(JDBCConnectionAspect.aj:112)\nat org.hsqldb.jdbc.jdbcConnection.setAutoCommit(jdbcConnection.java:916)\nat org.hsqldb.sample.IrumTest.(IrumTest.java:40)\nat org.hsqldb.sample.IrumTest.main(IrumTest.java:130)\nException in thread \"main\" \nI had seen a similar problem in another application and as a workaround done the\nfollowing instead of declaring an abstract method into the aspect. This had\nworked before, but in this scenario even this does not work. \nvoid SessionInterface.setAutoCommit(boolean autoCommit) throws HsqlException \n{\nSystem.out.println(\"IRUM@\");\nif (this instanceof Session) {\nSystem.out.println(\"IRUM2@\");\nSession s \u003d (Session)this;\ns.setAutoCommit(autoCommit);\n}\nelse { \nSystem.out.println(\"x\");\n}\n}\nI still keep getting the same error as above and also, none of the print\nstatements are hit. I am not sure what am I doing wrong. \n\nI will appreciate any help. \nThanks. \nSincerely, \nIrum Godil."
  ],
  "commentCreationDates": [
    "2005-05-31T16:06:23+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.AbstractMethodError",
      "message": "org.hsqldb.Session.ajc$interMethodDispatch2$aspects_atomicity_weave$setAutoCommit(Z)V",
      "elements": [
        {
          "method": "aspects.atomicity.weave.SessionAspect.ajc$interMethodDispatch1$aspects_atomicity_weave_SessionAspect$org_hsqldb_SessionInterface$setAutoCommit",
          "source": "SessionAspect.aj"
        },
        {
          "method": "aspects.atomicity.weave.JDBCConnectionAspect.ajc$after$aspects_atomicity_weave_JDBCConnectionAspect$1$f311d861",
          "source": "JDBCConnectionAspect.aj:112"
        },
        {
          "method": "org.hsqldb.jdbc.jdbcConnection.setAutoCommit",
          "source": "jdbcConnection.java:916"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "97481",
      "date": "2005-05-31T16:06:23+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "97481",
  "bugId": "97481",
  "date": "2005-05-31T16:06:23+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}