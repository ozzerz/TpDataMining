{
  "comments": [
    "Hello,\n\nthe following enhancement could be included into the JDT (JAR-Export-Wizard):\n\nCreate an executable JAR file (with \"java -jar xxx.jar\") from a java project\nincluding all referenced libraries and sub-projects.\nThis can be achieved by unzipping all referenced JARs and zipping all classes\ntogether with the project output into a new jar.\nAnother solution could be to write a specialised Class-Loader which handles\nJAR-Files inside a JAR.\n\nI have written a Plug-In called Fat-Jar which implements this feature\nhttp://fjep.sourceforge.net\n\nNow I would like to help integrate it into the Eclipse platform and asked how to\nget involved. The answer was to start an enhancement request in bugzilla. So\nthis first step is done....   ;)\n\nBest regards,\n\n  Ferenc Hechler",
    "*** Bug 83259 has been marked as a duplicate of this bug. ***",
    "Move to JDT/UI",
    "The new release 0.0.17 of Fat-Jar supports the generation of an ANT script which\ncan be used to build the executable jar inside and outside of Eclipse.\n\nThis feature was asked often for autmation of the build-process.",
    "Ferenc, \n\nour current focus is to get J2SE 5.0 into 3.1. As long as this isn\u0027t complete we\ndecided to not add any additional features. So this is time permitted only.",
    "reopen for 3.3 planing",
    "Ferenc, are you still interested in adding your plugin to jdt?\nImportant for us is that we can rely on your help regarding maintenance.",
    "Hello Martin,\n\nyes I am still interested in adding Fat-Jar to JDT.\nAbout Maintanance: the project started in 2004 and we had 23 alpha releases, mostly bugfixes and enhancements reported by users. \nSorry for responding so late, but I am currently on holliday till 25. July.\n\nBest regards,\n\n    feri",
    "*** Bug 151057 has been marked as a duplicate of this bug. ***",
    "I have been looking at the one-jar class loader which is utilized by fjep, as we were looking into making the executable jar compatible with Web Start, and it makes a lot of assumptions which needs to be looked into.  I have done some of the work (not contributed back yet), but it would be very beneficial to have a classloader guru (there must be some on the eclipse staff) look it over.\n\nI would like to contribute work on integrating this functionality in stock eclipse.",
    "Any news here, Thorbj?rn? Such a contribution would be highly welcome!",
    "Feri and Thorbj?rn, of course.",
    "Attempts have been made at collaborating off list, but has not yet succeeded.\n\nWhat is the 3.3 timeframe?",
    "If you change has impact on the jdt.ui public API: End of January 2007. If not: March 2007. But remember that we need some time to review and get PMC/legal approval.\n\nThe earlier I can give comment to the chosen solution, the better. My understanding is that this would be an extension of the existing JAR wizard, that also preserves all existing functionality.",
    "I have established contact with Thorbj?rn again, \nso we hopefully get on further.\n\nI am still unsure about Simon Tuffs oppinion about the One-Jar license. \nOne-Jar is integrated into Fat-Jar and uses a BSD-style license.\nI will ask him.",
    "Simons answer about using one-jar:\n----------------------------------\n\nShort answer: I see no problems incorporating OneJar into the Eclipse JDT.",
    "An integration project is set up on sourceforge.\n\nCVS:    \":pserver:anonymous@fjep.cvs.sourceforge.net:/cvsroot/fjep\"\nModule: \"FatJarJdtIntegration\"\n\nIt is a Plug-In Project which contains a copy of the \"Java/JAR File\" exporter renamed to \"Java/FATJAR File\" exporter.\n\nThe progress can be found here:\n\nhttp://fjep.cvs.sourceforge.net/*checkout*/fjep/FatJarJdtIntegration/info/status.txt\n\nAny comments and suggestions are welcome.  ;)\n",
    "A first release can be downloaded here\n\nhttp://downloads.sourceforge.net/fjep/FatJarJdtIntegration_0.0.1.zip?download\n\nQuickstart:\n * \"Export...\" \u003e \"FAT-JAR file\"\n * select a launch config\n * click \"set ClassPath\"\n * click \"Check all\"\n * click \"Finish\"\n\nThe idea is to use the classpath of a launchconfig to identify the resources to export.\nThe \"resources to export\"-tree was changed to show jars and classes-folders.\nAlso the MainClass is read from the launch-config.\n\nThe manual steps should be automated in a later version.\n\nDetails can be found here:\n\nhttp://fjep.cvs.sourceforge.net/*checkout*/fjep/FatJarJdtIntegration/info/status.txt\n\nBest regards,\n\n     feri",
    "The second release can be downloaded here\n\nhttp://downloads.sourceforge.net/fjep/FatJarJdtIntegration_0.0.2.zip?download\n\nQuickstart:\n * \"Export...\" \u003e \"FAT-JAR file\"\n * click \"enable fat-jar\"\n * select a launch config\n * click \"set ClassPath\"\n * click \"Finish\"\n\nnew:\nenable/disable fat-jar, merge manifests, remove signers, manifest Class-Path\n\nDetails can be found here:\n\nhttp://fjep.cvs.sourceforge.net/*checkout*/fjep/FatJarJdtIntegration/info/status.txt\n\nBest regards,\n\n     feri",
    "The third release is worth a closer look. \nThe Fat-Jar functionality is nearly complete.\n\ndownload:\nhttp://downloads.sourceforge.net/fjep/FatJarJdtIntegration_0.0.3.zip?download\n\ndescription:\nhttp://fjep.cvs.sourceforge.net/*checkout*/fjep/FatJarJdtIntegration/info/status.txt\n\nAny feedback welcome.\n",
    "The One-Jar ClassLoader is added.\n\ndownload:\nhttp://downloads.sourceforge.net/fjep/FatJarJdtIntegration_0.0.5.zip?download\n\ndescription:\nhttp://fjep.cvs.sourceforge.net/*checkout*/fjep/FatJarJdtIntegration/info/status.txt",
    "Created an attachment (id\u003d79147)\nproposed fix\n\nHi Feri\n\nFirst, thanks for this cool feature. I did a review of your code and made some changes. I\u0027ve also wrote unit tests. The biggest change is that I\u0027ve removed the generic UI. I leave the existing wizard as is and add a new Runnable JAR export wizard. The R-JAR wizard is as simple as possible: The user only has to select a destination and a launch configuration. Both wizards share a common superclass: the AbstractJarDestinationWizardPage. \n\nThe JarFileExportOperation still uses the JarBuilder you\u0027ve introduced, I like that very much. I\u0027ve just simplified the code there and removed dependencies on internal classes. I\u0027ve also turned the JarBuilder form an interface into an abstract class.\n\nSo, now, the extension point is gone. I\u0027m not convinced that it is necessary. To implement a new jar building strategy one can now:\n1. Add a new wizard and subclass AbstractJarDestinationWizardPage\n2. Implement a new JarBuilder\nIMHO that\u0027s good enough. But it\u0027s not that I feel very strong about this.\n\nJardesc are not supported by the fat jar wizard. I think it makes not that much sense to have jardecs for this wizard because the wizard is very simple. But the code is still there, we can enable it if someone asks for it.\n\nThe UI does not have the 3 options: merge manifests, remove signers, and manifest classpath separator. Does it ever make sense to change this options? Can\u0027t we find defaults which are always good?\n\nIf a project does not have a launch config attached you do generate a default launch config. But this config does not have a main type and the resulting jar is therefore not runnable. I see 3 solutions:\n1. Don\u0027t support this for project without launch configs\n2. Only support it for projects containing exactly one main type (and search for it)\n3. Allow to browse for the main type in the wizard\nI opt for 1.\n\nMmm, I think that\u0027s about it. Personally I think this is a great feature and It should really make it into 3.4. It would therefore be great if you could review my changes and give feedback. Of course we will also need your (and from other authors if any) approval to add this code to the eclipse code base. ",
    "Created an attachment (id\u003d79149)\nicons\n\n",
    "Created an attachment (id\u003d79409)\nproposed fix\n\nWorking on the FatJarPackagWizardPage, removed the default launch config stuff.",
    "Created an attachment (id\u003d79480)\nproposed fix\n\n",
    "Created an attachment (id\u003d79721)\nfix\n\nWork on API\nAdded IP issue warning dialog\nOnly allow to select java application launch configurations",
    "Created an attachment (id\u003d79792)\nfix\n\nonly added contribution comments",
    "Created an attachment (id\u003d79929)\npatch for org.eclipse.jdt.ui.tests only\n\nthis patch replaces only the test-part (org.eclipse.jdt.ui.tests) of the previous fix.\n\nNEW: \n * the created \"runnable\"-jars are executed and the console-output is checked.\n * An test for signed jars has been added\n\nTwo libs (binary) have to be added to the folder testresources/ to run all tests (see next attachment).\n * mylib_stdout.jar, similair to mylib.jar. On creation of Foo \"created mylib.Foo\" is output to stdout\n * mylib_sig.jar, signed version of mylib_stdout.jar\n\n",
    "Created an attachment (id\u003d79930)\ntestresources for previous patch\n\naddition to patch 79929, see description there.",
    "(In reply to comment #27)\n\u003e Created an attachment (id\u003d79929) [details]\n\u003e patch for org.eclipse.jdt.ui.tests only\n\u003e \n\u003e this patch replaces only the test-part (org.eclipse.jdt.ui.tests) of the\n\u003e previous fix.\n\u003e \n\u003e NEW: \n\u003e  * the created \"runnable\"-jars are executed and the console-output is checked.\n\u003e  * An test for signed jars has been added\n\u003e \n\u003e Two libs (binary) have to be added to the folder testresources/ to run all\n\u003e tests (see next attachment).\n\u003e  * mylib_stdout.jar, similair to mylib.jar. On creation of Foo \"created\n\u003e mylib.Foo\" is output to stdout\n\u003e  * mylib_sig.jar, signed version of mylib_stdout.jar\n\u003e \n\nWow, thanks for the tests. But we did not execute the runnable jar because of the risk such a test has. We have to run this tests on several platforms, they have to work on each. Also due to the timeout stuff it is possible that we\u0027ll get random test failures, it is important for us that we have reliable tests. That been said, I\u0027m willing to release such tests and give it a try, with the option to remove it if we can not get reliable results. But the tests fail if I run with a 1.5 vm:\n\nERROR: exitcode\u003d1, stdout\u003d[], stderr\u003d[Exception in thread \"main\" java.lang.UnsupportedClassVersionError: Bad version number in .class file\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat org.eclipse.jdt.ui.test.Main.main(Main.java:5)\n]\n\nif I run with a 1.4 vm I get the same plus a error dialog. This on WinXP.",
    "Created an attachment (id\u003d80060)\ntestresources for previous patch\n\ncompiled with java 1.3, so the 1.5 problems are solved.\n",
    "The problems using JRE 1.4 are a result from useing the helper Class org.eclipse.jdt.ui.tests.core.ProjectTestSetup.\nThe Description: \nProjectTestSetup sets up an 1.5 project with rtstubs15.jar and compiler, code formatting, code generation, and template options.",
    "Created an attachment (id\u003d80120)\ntestresources for previous patch\n\nno compatible with java 1.4 - replaced Class.getCanonicalName() with Class.getName()",
    "could not create a new patch for the tests, because cvs was not reachable.\n\nAfter changing the setup method of FatJarExportTest as follows:\n\n[---]\nprotected void setUp() throws Exception {\n  fProject\u003d ProjectTestSetup.getProject();\n\t\t\n  Map options\u003d fProject.getOptions(false);\n  String compliance \u003d JavaCore.VERSION_1_4;\n  JavaModelUtil.setCompilanceOptions(options, compliance);\n  JavaModelUtil.setDefaultClassfileOptions(options, compliance); \n  fProject.setOptions(options);\n[---]\n\nthe tests are running under 1.4, 1.5 and 1.6\n\nAlso the Foo method had to be changed, because it used Class.getCanonicalName() which is since 1.5:\n\n[---]\nprivate static String getFooContent() {\n  ...\n  buf.append(\"        System.out.println(\\\"created \\\" + Foo.class.getName());\\n\");\n[---]\n\nI uploaded new libs which are compatible with 1.4.\n\nI will add the patch soon\n",
    "Created an attachment (id\u003d80161)\npatch for org.eclipse.jdt.ui.tests only\n\nreplacement for attachment 79929. Fixes problems with jdk 1.5 and jdk 1.4.\ntestresources (attachment 80120) have to be installed.",
    "Created an attachment (id\u003d80203)\nfix\n\nThanks Feri, this works. \n\nCan you also provide the source of the test resource libs you\u0027ve created? I guess mylib_stdout.jar can just replace mylib.jar.",
    "Created an attachment (id\u003d80263)\nsource for the new libs mylib_stdout.zip and mylib_sig.zip\n\n",
    "I have to move this, I\u0027m still awaiting legal approval.",
    "Created an attachment (id\u003d83768)\nfix\n\n",
    "fixed \u003e I20071120-1300\n\nFinally, thanks Ferenc!",
    "."
  ],
  "commentCreationDates": [
    "2005-01-19T21:59:03+01:00",
    "2005-01-19T22:02:51+01:00",
    "2005-01-19T22:54:46+01:00",
    "2005-02-01T10:41:51+01:00",
    "2005-02-11T15:46:56+01:00",
    "2006-06-26T13:48:03+02:00",
    "2006-06-26T13:51:46+02:00",
    "2006-07-14T19:15:14+02:00",
    "2006-07-20T17:49:31+02:00",
    "2006-07-20T18:58:35+02:00",
    "2006-10-17T12:24:35+02:00",
    "2006-10-17T12:26:26+02:00",
    "2006-10-17T12:33:47+02:00",
    "2006-10-17T12:43:54+02:00",
    "2006-10-19T23:34:00+02:00",
    "2006-11-02T23:57:49+01:00",
    "2006-11-03T00:03:48+01:00",
    "2006-11-15T00:54:45+01:00",
    "2006-11-16T01:17:59+01:00",
    "2006-11-17T15:13:24+01:00",
    "2006-11-20T09:19:47+01:00",
    "2007-09-25T18:58:33+02:00",
    "2007-09-25T19:04:46+02:00",
    "2007-09-28T18:02:26+02:00",
    "2007-10-01T16:13:41+02:00",
    "2007-10-04T15:51:42+02:00",
    "2007-10-05T12:00:49+02:00",
    "2007-10-09T09:06:46+02:00",
    "2007-10-09T09:08:21+02:00",
    "2007-10-09T10:28:50+02:00",
    "2007-10-10T17:42:20+02:00",
    "2007-10-10T17:48:30+02:00",
    "2007-10-11T09:47:50+02:00",
    "2007-10-11T09:56:01+02:00",
    "2007-10-11T19:12:22+02:00",
    "2007-10-12T09:59:46+02:00",
    "2007-10-12T20:25:35+02:00",
    "2007-10-29T14:08:20+01:00",
    "2007-11-26T13:54:23+01:00",
    "2007-11-26T14:00:50+01:00",
    "2007-11-26T14:01:12+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsupportedClassVersionError",
      "message": "Bad version number in .class file",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:620"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:124"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:260"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "URLClassLoader.java:56"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:195"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:188"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:306"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:268"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        },
        {
          "method": "org.eclipse.jdt.ui.test.Main.main",
          "source": "Main.java:5"
        }
      ],
      "number": 0,
      "commentIndex": 29,
      "bugId": "83258",
      "date": "2007-10-09T10:28:50+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "83258",
  "bugId": "83258",
  "date": "2005-01-19T21:59:03+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "enhancement"
}