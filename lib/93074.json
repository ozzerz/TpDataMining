{
  "comments": [
    "I20050426-1700\n\nThe thread was suspended in an exception breakpoint. I selected a stackframe 2\nlevels below top, selected an expression in the editor and then called \u0027context\nmenu \u003e Inspect\u0027.\n\nThe \u0027Display\u0027 command says that the selected local variable is not defined,\nalthough I see it in the Variables view.\n\nAn internal error occurred during: \"Fetching children from debug target\".\njava.lang.ClassCastException: java.lang.String\n\tat\norg.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.fetchDeferredChildren(DeferredVariable.java:65)\n\tat\norg.eclipse.debug.internal.ui.views.RemoteTreeContentManager$3.run(RemoteTreeContentManager.java:264)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)",
    "Markus, are you able to reproduce this problem? (I cannot).",
    "Yes I could reproduce the problem, but only in the modified refactoring test\nwhere it first happened, and only with a j9 VM.\n\nI quickly tried to reproduce it in a small project, but I couldn\u0027t.\n\nShall I try to reproduce it in an easier setup, or do you have jdt.ui and\nrefactoring tests from CVS and want the steps there?",
    "Steps using HEAD are fine, if you have them.",
    "This happens when an expression causes an exception during its evaluation.",
    "Created an attachment (id\u003d20485)\npatch\n\nDeferredVariable calls a new method hasChildren() to determine if it has\nchildren. DeferredExpression overrides hasChildren.\nRemoteExpressionContentManager overrides mayHaveChildren to check if the\nExpression that it is passed has children. Without this change the \"plus\" that\nallows you expand the expression never changes. Not 100% sure this part of the\nfix is correct. There may be a race condition here - Can we be assured that the\ntarget the expression evaluation when mayHaveChildren() is called??? \n\nThe caches in RemoteVariablesContentManager (fHasChildren and fNoChildren) are\nproblematic for expressions because the value is not reset/cleared when the\nevaluation of the expression is completed and the value is often wrong when\noriginally set because the target is still evaluating the expression.\n\nNeeds more investigation before code can be released.",
    "Sorry I can\u0027t provide steps to reproduce this. I now constantly run into bug 93232.",
    "*** Bug 93247 has been marked as a duplicate of this bug. ***",
    "The fix works. There is no race condition because a change event is fired when the evaluation is \ncompleted and the tree viewer refreshes the relevant element. This leads to another call to \nmayHaveChildren() which will return the correct info.\nDid change RemoteExpressionContentManager.mayHaveChildren() to return false if the expression\u0027s \nvalue is not null and value.getChildren returns no children. This indicates that the evaluation is done \nand there really are no children.",
    "Created an attachment (id\u003d20524)\nupdated patch\n\nupdated patch.",
    "committed changes to HEAD.",
    "Darin, please verify",
    "Verified."
  ],
  "commentCreationDates": [
    "2005-04-28T10:16:42+02:00",
    "2005-04-28T15:22:36+02:00",
    "2005-04-28T18:46:36+02:00",
    "2005-04-28T19:23:32+02:00",
    "2005-04-28T21:06:28+02:00",
    "2005-04-29T01:01:04+02:00",
    "2005-04-29T11:09:28+02:00",
    "2005-04-29T16:38:35+02:00",
    "2005-04-29T20:26:19+02:00",
    "2005-04-29T20:28:14+02:00",
    "2005-04-29T20:28:54+02:00",
    "2005-04-29T20:29:19+02:00",
    "2005-05-02T21:08:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "java.lang.String",
      "elements": [
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.fetchDeferredChildren",
          "source": "DeferredVariable.java:65"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.RemoteTreeContentManager$3.run",
          "source": "RemoteTreeContentManager.java:264"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "93074",
      "date": "2005-04-28T10:16:42+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "93074",
  "bugId": "93074",
  "date": "2005-04-28T10:16:42+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}