{
  "comments": [
    "i\u0027m using eclipse to compile java applet. i have a problem with using \nreflection to create an instance of class. this problem was introduced in 3.0 \nM1. \n\ncode snippet is something like:\n\npublic Object create(Class type) throws Exception\n{\n  return type.newInstance();\n}\n\ni\u0027m using the method from another place like this: create(SomeClass.class) and \nin some situations this fails with following exception\n\njava.lang.IllegalArgumentException: Unresolved java.lang.Class instance \n(ClassLoader.resolveClass() was not used).\n\tat java/lang/Class.newInstance (Class.java)\n\tat ...create (...)  \u003c--- my create(Class) method\n\n\"in some situations\" means that if SomeClass was loaded before either as a \nresult of resolving some other class, or invoking Class.forName\n(SomeClass.class.getName()), then exception will not be thrown. i suspect that \nwhen compiler see SomeClass.class it produce bytecode that loads class but \ndidn\u0027t resolve it that can be good for performance but bad for ms jvm. Sun\u0027s \nplugin does not show this problem.",
    "What JDK level is the MS VM at ?",
    "The class literal isn\u0027t supposed to trigger the load of a class. The bytecode \nsequence we generate uses an array type instead,\n\nX.class \u003d\u003e Class.forName(\"[X\").getComponentType();\n\nHowever this feels like a MS VM bug, since newInstance() is spec\u0027ed saying:\nThe class is initialized if it has not already been initialized.\n\nYou may need to workaround by adding an extra action causing the class to be \nloaded explicitly, or by creating the class forcing it to be loaded:\n\nInstead of using:\nX.class \u003d\u003e Class.forName(\"[X\").getComponentType();\nuse: Class.forName(\"X\")\n\nOther compilers are doing the same as we do (jikes, and javac has committed to \nchange as well).\n",
    "Ok to close?",
    "my ms jvm is: Microsoft (R) VM for Java, 5.0 Release 5.0.0.3810\nthis is 1.1.4 (probably higher) in terms of sun\u0027s versions.",
    "i compiled the same code with javac and the problem goes away. \n\njava -version gives following:\n\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.0-b92)\nJava HotSpot(TM) Client VM (build 1.4.0-b92, mixed mode)\n\ni agree that it can be just ms jvm bug, but i don\u0027t like to change all my code \nfrom create(A.class) to create(Class.forName(A.class.getName())) because (1) \nthere are a lot of places i should do it, (2) Class.forName(A.class.getName()) \nlooks ugly.\n\nif you give me some hooks to JDT core code where i can investigate this by \nmyself that will okay for me to find it. ",
    "Javac hasn\u0027t moved yet, though they agreed they should.\nJikes has moved, could you give it a try as well ? (version 1.18 or better).",
    "Can\u0027t you simply switch to using another VM ?",
    "if all are moving to this, and (i suppose) that change fixes something then we \nshould close it.",
    "Agreed, also see bug 37565 which explains our move, and has a reference to \njavac bug database.",
    "Reopening to close as duplicate",
    "\n\n*** This bug has been marked as a duplicate of 37565 ***"
  ],
  "commentCreationDates": [
    "2003-07-23T17:03:26+02:00",
    "2003-07-23T23:28:05+02:00",
    "2003-07-23T23:35:35+02:00",
    "2003-07-23T23:35:53+02:00",
    "2003-07-24T08:42:21+02:00",
    "2003-07-24T08:56:45+02:00",
    "2003-07-24T11:32:21+02:00",
    "2003-07-24T11:38:02+02:00",
    "2003-07-24T11:38:36+02:00",
    "2003-07-24T12:19:36+02:00",
    "2003-08-28T18:14:14+02:00",
    "2003-08-28T18:14:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Unresolved java.lang.Class instance  (ClassLoader.resolveClass() was not used).",
      "elements": [
        {
          "method": "java.lang.Class.newInstance",
          "source": "Class.java"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "40654",
      "duplicateId": "37565",
      "date": "2003-07-23T17:03:26+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "37565",
  "bugId": "40654",
  "duplicateId": "37565",
  "date": "2003-07-23T17:03:26+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}