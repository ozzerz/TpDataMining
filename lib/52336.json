{
  "comments": [
    "Was trying to debug my plugin when I got this.  Note that the error occurred\nin the 2nd instance of eclipse.  Am using eclipse build m7.  Steps:\n\n1. Debug as \u0027Runtime Workbench\u0027\n2. In 2nd instance of eclipse create java project and create class\n    package p1;\n    public class c1 { \n        public static void main(String[] args) throws Throwable {\n            synchronized ( c1.class ) { c1.class.wait(); } } }\n3.  Debug new project as \u0027Java Application\u0027\n\nDlg popped in 2nd instance of eclipse stating \u0027Internal Error\u0027.  .log file\ncontained text below.\n\n!SESSION lut 17, 2004 21:45:38.796 ---------------------------------------------\njava.version\u003d1.4.2_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dpl_PL\nCommand-line arguments: -data c:\\home2\\dsmall\\temp\\m6_workspace -dev bin\n!ENTRY org.eclipse.core.runtime 4 2 lut 17, 2004 21:45:38.796\n!MESSAGE An internal error occurred during: \"Debug\".\n!STACK 0\njava.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.eclipse.jface.util.ListenerList.add(ListenerList.java:103)\n\tat org.eclipse.jface.viewers.LabelProvider.addListener\n(LabelProvider.java:43)\n\tat org.eclipse.debug.internal.ui.LazyModelPresentation.getPresentation\n(LazyModelPresentation.java:196)\n\tat org.eclipse.debug.internal.ui.LazyModelPresentation.getText\n(LazyModelPresentation.java:121)\n\tat org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText\n(DelegatingModelPresentation.java:183)\n\tat \norg.eclipse.debug.internal.ui.views.DebugViewLabelDecorator$LabelJob.run\n(DebugViewLabelDecorator.java:326)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",
    "Looks like a problem with the ListenerList, not debug.",
    "Which virtual machine are you running? It looks like the following code\n\nif (size \u003d\u003d 0) {\n\t\t\tlisteners \u003d new Object[capacity];\n\t\t} \n\nlisteners[size++] \u003d listener;\n\nIs incrementing size before the index lookup. \n\nI will replace it with\n\nif (size \u003d\u003d 0) {\n\t\t\tlisteners \u003d new Object[capacity];\n\t\t} \nsize++;\nlisteners[size] \u003d listener;\n\nbut I want to be sure I know why it works for some people and not others.",
    "Of course the size++ should be after the lookup...",
    "Could also be a race condition.  ListenerLists are not synchronized.",
    "I think Nick is correct looking at the code. LabelJob is not a UIJob and hence \ncan run in another thread.\n\nThis is dangerous anyways when dealer with viewers as it is pretty easy to hit \nSWT code when using them. LabelJob should be a UIJob.",
    "But we intentionally use the label job to compute lables in a non UI thread so \nwe do not block the UI while communicating with the debug target.",
    "You may want to break it into 2 jobs then - one that does a long calculation \nin the background and a shorter UI update job.",
    "We use a background job for the background text computation and later fire a label changed event \nin an async exec.",
    "That sounds good but I think you should use a UIJob just to be sure that there \nare not too many asyncExec going on at the same time.",
    "*** Bug 54546 has been marked as a duplicate of this bug. ***",
    "Nothing more planned for 3.0",
    "*** Bug 66438 has been marked as a duplicate of this bug. ***",
    "Re-opening",
    "Fixed. Changed to using the synchronized listener list from debug core. \nAlthough it\u0027s an \"illegal\" access to an internal class, it\u0027s within the debug \nplug-ins and I refuse to make yet another copy of ListenerList.\n\nChanges in LazyModelPresentation (imports).",
    "Please verify, Jared.",
    "Looks good but I have a question - Why isn\u0027t ListenerList#removeAll() synchronized?",
    "It should be - please fix \u0026 release.",
    "Done. Verified.",
    "*** Bug 76979 has been marked as a duplicate of this bug. ***",
    "Apparently, still a problem in 3.1",
    "The change that we checked in doesn\u0027t address the problem. I don\u0027t know how this got past two of \nus... :-(\n\nThe problem isn\u0027t related to the ListenerList in LazyModelPresentation. As the stack trace clearly \nshows, the problem come when we add listeners to the underlying presentation (the one we delegate \nto). In this particular case, that means we\u0027re calling addListener(...) on JDIModelPresentation, which \nextends LabelProvider. And LabelProvider\u0027s ListenerList isn\u0027t synchronized.",
    "Luc and I looked at this problem again and realized that the LazyModelPresentation is the most likely \ncandidate for the source of the problem (it looks like it\u0027s doing it to itself). We put a fix into \nLazyModelPresentation#getPresentation() to synchronize the initialization of the underlying \npresentation. Without this code, multiple threads calling getPresentation() early in the object\u0027s \nlifecycle could get into the same initialization code and cause the problem by calling \nLabelProvider#addListener(...) at the same time. For example, if labels were being computed in the \nvariables view at the same time it asked to compute details.\n\nPlease verify, DW.",
    "Verified.",
    "*** Bug 73943 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-02-18T06:04:32+01:00",
    "2004-02-18T14:02:55+01:00",
    "2004-02-19T21:54:51+01:00",
    "2004-02-19T21:56:54+01:00",
    "2004-02-20T05:52:57+01:00",
    "2004-02-23T20:23:52+01:00",
    "2004-02-23T20:34:43+01:00",
    "2004-02-23T20:40:54+01:00",
    "2004-02-23T23:44:55+01:00",
    "2004-02-24T13:35:27+01:00",
    "2004-03-11T22:03:41+01:00",
    "2004-05-31T16:04:34+02:00",
    "2004-06-10T02:00:04+02:00",
    "2004-06-10T04:57:16+02:00",
    "2004-06-10T05:05:59+02:00",
    "2004-06-10T05:06:15+02:00",
    "2004-06-10T19:54:29+02:00",
    "2004-06-10T19:58:41+02:00",
    "2004-06-10T20:05:27+02:00",
    "2004-10-25T23:21:46+02:00",
    "2004-10-25T23:22:13+02:00",
    "2004-11-09T21:20:16+01:00",
    "2004-11-09T22:17:11+01:00",
    "2004-11-11T21:06:40+01:00",
    "2004-11-16T19:20:58+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "1",
      "elements": [
        {
          "method": "org.eclipse.jface.util.ListenerList.add",
          "source": "ListenerList.java:103"
        },
        {
          "method": "org.eclipse.jface.viewers.LabelProvider.addListener",
          "source": "LabelProvider.java:43"
        },
        {
          "method": "org.eclipse.debug.internal.ui.LazyModelPresentation.getPresentation",
          "source": "LazyModelPresentation.java:196"
        },
        {
          "method": "org.eclipse.debug.internal.ui.LazyModelPresentation.getText",
          "source": "LazyModelPresentation.java:121"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText",
          "source": "DelegatingModelPresentation.java:183"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.DebugViewLabelDecorator$LabelJob.run",
          "source": "DebugViewLabelDecorator.java:326"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "52336",
      "date": "2004-02-18T06:04:32+01:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "52336",
  "bugId": "52336",
  "date": "2004-02-18T06:04:32+01:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}