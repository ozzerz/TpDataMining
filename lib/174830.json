{
  "comments": [
    "posted by \u003cmatthew_webster@uk.ibm.com\u003e on the equinox mailing list.\n\nTom, \n\nI have just started testing the Aspects Equinox Incubator with 3.3M5 and found that the changes you made in Bug 164373 break the supplements mechanism that I re-implemented using a StorageHook (https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d165484). I need to change manifest headers _after_ the default hooks have read the manifest but the new \"readonly\" flag gives me UnsupportedOperationExceptions. Do you have any hints as to how I can solve this problem? \n\n\u003e AspectJStorageHook.initialize() demo.hello \n- AspectJStorageHook.initialize() demo.hello supplementers\u003d[org.aspectj.osgi.aunit] \n- AspectJStorageHook.addRequiredBundles() demo.hello ,manifest\u003dorg.eclipse.osgi.framework.util.Headers@19f3736, value\u003dorg.junit,system.bundle,org.aspectj.osgi.aunit \njava.lang.UnsupportedOperationException \n        at org.eclipse.osgi.framework.util.Headers.set(Headers.java:155) \n        at org.aspectj.osgi.hooks.AspectJStorageHook.addRequiredBundles(AspectJStorageHook.java:311) \n        at org.aspectj.osgi.hooks.AspectJStorageHook.initialize(AspectJStorageHook.java:280) \n        at org.eclipse.osgi.internal.baseadaptor.BundleInstall.begin(BundleInstall.java:84) \n        at org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged(Framework.java:908) \n        at org.eclipse.osgi.framework.internal.core.Framework$2.run(Framework.java:824) \n        at java.security.AccessController.doPrivileged(Native Method) \n        at org.eclipse.osgi.framework.internal.core.Framework.installWorker(Framework.java:875) \n        at org.eclipse.osgi.framework.internal.core.Framework.installBundle(Framework.java:819) \n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.installBundle(BundleContextImpl.java:229) \n        at org.eclipse.update.internal.configurator.ConfigurationActivator.installBundles(ConfigurationActivator.java:197) \n        at org.eclipse.update.internal.configurator.ConfigurationActivator.start(ConfigurationActivator.java:82) \n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999) \n        at java.security.AccessController.doPrivileged(Native Method) \n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993) \n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974) \n        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346) \n        at org.eclipse.osgi.framework.internal.core.AbstractBundle.resume(AbstractBundle.java:350) \n        at org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1118) \n        at org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:631) \n        at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:505) \n        at org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:279) \n        at org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent(StartLevelManager.java:465) \n        at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:189) \n        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:291)",
    "I\u0027m not sure I want to reintroduce the ability to set the values of the Headers class again.  The Headers object needs to be read-only to code outside of the framework.\n\nThe aspectJ adaptor could work around the issue by using reflection to temporarily set the private readOnly field to true.  Matthew, do you think that would be ok?  Otherwise I would have to revert the set method back to the previous behavior which exposed bundle metadata to other bundles.",
    "\u003eThe aspectJ adaptor could work around the issue by using reflection to\n\u003etemporarily set the private readOnly field to true.\nYeeees, that had crossed my mind as the hack of last resort. I am a bit surprised to see such a change late in the cycle to what is not an internal class. Also I think as a StorageHook packaged as a framework extension I am entitled to some privileges :-).",
    "technically org.eclipse.osgi.framework.util is internal (at least according to the x-internal:\u003dtrue directive in the manifest).  You have access as a fragment to the internal class.\n\nA simple fix would be to remove the readOnly check in the Headers.set method.  I would only like to do that as a last resort though.",
    "Your suggestion certainly works. I will have to look at how I am using the StorageHook to implement the supplements support. I really want to intercept manifest creation but there is no obvious mechanism."
  ],
  "commentCreationDates": [
    "2007-02-20T18:42:44+01:00",
    "2007-02-20T18:46:51+01:00",
    "2007-02-21T11:59:22+01:00",
    "2007-02-21T13:52:41+01:00",
    "2007-02-21T17:28:34+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsupportedOperationException",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.util.Headers.set",
          "source": "Headers.java:155"
        },
        {
          "method": "org.aspectj.osgi.hooks.AspectJStorageHook.addRequiredBundles",
          "source": "AspectJStorageHook.java:311"
        },
        {
          "method": "org.aspectj.osgi.hooks.AspectJStorageHook.initialize",
          "source": "AspectJStorageHook.java:280"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.BundleInstall.begin",
          "source": "BundleInstall.java:84"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged",
          "source": "Framework.java:908"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework$2.run",
          "source": "Framework.java:824"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installWorker",
          "source": "Framework.java:875"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installBundle",
          "source": "Framework.java:819"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.installBundle",
          "source": "BundleContextImpl.java:229"
        },
        {
          "method": "org.eclipse.update.internal.configurator.ConfigurationActivator.installBundles",
          "source": "ConfigurationActivator.java:197"
        },
        {
          "method": "org.eclipse.update.internal.configurator.ConfigurationActivator.start",
          "source": "ConfigurationActivator.java:82"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
          "source": "BundleContextImpl.java:999"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "BundleContextImpl.java:993"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:974"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:346"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.resume",
          "source": "AbstractBundle.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.resumeBundle",
          "source": "Framework.java:1118"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles",
          "source": "StartLevelManager.java:631"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL",
          "source": "StartLevelManager.java:505"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel",
          "source": "StartLevelManager.java:279"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent",
          "source": "StartLevelManager.java:465"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run",
          "source": "EventManager.java:291"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "174830",
      "date": "2007-02-20T18:42:44+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "174830",
  "bugId": "174830",
  "date": "2007-02-20T18:42:44+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}