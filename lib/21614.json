{
  "comments": [
    "Build R2.0\n\nEclipse fails to read the .keyring file containing CVS passwords when running \non IBM JDK 1.4.0, and leaves it corrupted, as follows:\n\njava.io.IOException: SHA1PRNG SecureRandom not available\n  at org.eclipse.core.internal.runtime.CipherInputStream.read\n(CipherInputStream.java:71)\n  at java.io.ObjectInputStream$PeekInputStream.read(ObjectInputStream.java:2138)\n  at java.io.ObjectInputStream$PeekInputStream.readFully\n(ObjectInputStream.java:2151)\n  at java.io.ObjectInputStream$BlockDataInputStream.readShort\n(ObjectInputStream.java:2622)\n  at java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:729)\n  at java.io.ObjectInputStream.\u003cinit\u003e(ObjectInputStream.java:254)\n  at org.eclipse.core.internal.runtime.AuthorizationDatabase.load\n(AuthorizationDatabase.java:260)\n  at org.eclipse.core.internal.runtime.AuthorizationDatabase.load\n(AuthorizationDatabase.java:248)\n  at org.eclipse.core.internal.runtime.AuthorizationDatabase.\u003cinit\u003e\n(AuthorizationDatabase.java:73)\n  at org.eclipse.core.internal.runtime.InternalPlatform.loadKeyring\n(InternalPlatform.java:589)\n\n\nThe code fails because there is a hard coded reference to a Sun implementation \nof a random number stream \"SHA1PRNG\" (see \norg.eclipse.core.internal.runtime.Cipher#nextRandom(int)) that is unavailable \nby default in IBM\u0027s JRE.\n\nThe code should not reference a particular algorithm.\n\nA work around is to add the following line to jre/lib/security/java.security:\nsecurity.provider.5\u003dsun.security.provider.Sun",
    "SHA1PRNG is listed as a standard algorithm name in the Java 2 SDK Security API \n(Appendix A).  That spec states that the algorithm names in that appendix are \nthe standard required names.  Shouldn\u0027t all compliant JREs have that algorithm \navailable?  It is available in IBM JRE 1.3 and in J9.\n\nSince SHA1PRNG is the only specified algorithm name, the only alternative is to \nuse the default constructor of SecureRandom.  The only problem with using it is \nthat we won\u0027t know what algorithm is used.  This means the keyring file will \nprobably never be portable across VMs.  It might also be difficult for export \ncontrol requirements which require us to specify what encryption algorithms are \nused in the product.",
    "I have released a fix to the HEAD (2.1) stream.  We\u0027re now using our own secure \nnumber generator based on SHA-1.  This also fixes our long-standing problem that \nSHA1PRNG produced a different bit stream on J9, thus .keyring files were never \nportable between J9 and non-J9 VMs.\n\nWe should consider as a 2.0.1 candidate.",
    "I agree this should be 2.0.1."
  ],
  "commentCreationDates": [
    "2002-07-16T13:33:46+02:00",
    "2002-07-16T16:56:32+02:00",
    "2002-07-18T22:50:24+02:00",
    "2002-07-18T23:01:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "SHA1PRNG SecureRandom not available",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.CipherInputStream.read",
          "source": "CipherInputStream.java:71"
        },
        {
          "method": "java.io.ObjectInputStream$PeekInputStream.read",
          "source": "ObjectInputStream.java:2138"
        },
        {
          "method": "java.io.ObjectInputStream$PeekInputStream.readFully",
          "source": "ObjectInputStream.java:2151"
        },
        {
          "method": "java.io.ObjectInputStream$BlockDataInputStream.readShort",
          "source": "ObjectInputStream.java:2622"
        },
        {
          "method": "java.io.ObjectInputStream.readStreamHeader",
          "source": "ObjectInputStream.java:729"
        },
        {
          "method": "java.io.ObjectInputStream.\u003cinit\u003e",
          "source": "ObjectInputStream.java:254"
        },
        {
          "method": "org.eclipse.core.internal.runtime.AuthorizationDatabase.load",
          "source": "AuthorizationDatabase.java:260"
        },
        {
          "method": "org.eclipse.core.internal.runtime.AuthorizationDatabase.load",
          "source": "AuthorizationDatabase.java:248"
        },
        {
          "method": "org.eclipse.core.internal.runtime.AuthorizationDatabase.\u003cinit\u003e",
          "source": "AuthorizationDatabase.java:73"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.loadKeyring",
          "source": "InternalPlatform.java:589"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "21614",
      "date": "2002-07-16T13:33:46+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "major"
    }
  ],
  "groupId": "21614",
  "bugId": "21614",
  "date": "2002-07-16T13:33:46+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "major"
}