{
  "comments": [
    "The layout of the Task List could be improved in order to make the considerably amount of visual information being presented easier to view and to better support hierarchical structures.  For example, with the current use of columns showing subtasks would require a considerable expansion of the first column, which will waste more horizontal space.",
    "One idea we had for this is to make the tree only have two columns.  The first would have everything but the current \"incoming\" indication column, and we would deal with the current use of columns for images by making a fancier decorator that handled everything.  We would then right-align the \"incoming\" column so that those images showed to the right of the Summary labels and would be easy to pick out.\n\nBen: do you know if this kind of right-aligning is possible?  If not I guess we could do it by setting the width of the main column whenever a resize happened?  The idea is that we would never want to get a horizontal scrollbar, since those waste space.",
    "(In reply to comment #1)\n\u003e One idea we had for this is to make the tree only have two columns.  The first\n\u003e would have everything but the current \"incoming\" indication column, and we\n\u003e would deal with the current use of columns for images by making a fancier\n\u003e decorator that handled everything.  We would then right-align the \"incoming\"\n\u003e column so that those images showed to the right of the Summary labels and would\n\u003e be easy to pick out.\n\u003e \n\u003e Ben: do you know if this kind of right-aligning is possible?  If not I guess we\n\u003e could do it by setting the width of the main column whenever a resize happened?\n\u003e  The idea is that we would never want to get a horizontal scrollbar, since\n\u003e those waste space.\n\u003e \n\nNot sure I see the same picture as you yet, is there a UI mockup of your ideas? You can right align the contents of a Column using SWT.RIGHT in the constructor,  but you can not have an Image right to the Text content of a Column without using custom owner drawn (see http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet220.java)\n",
    "Will show you a mock up when we meet at Eclipse Forum Europe and then post a design to this bug.",
    "Mik, can you please elaborate, why exactly you need columns in the Task List? I would say that raw Tree widget may work just as well and will be using screen real estate more efficiently. The only missing part would be to add an explicit sort menu.\n\nAnother option is to simply merge first column with the icon and summary columns and allow to reorder the rest of the columns (i.e. to put them up front). But then those columns are pretty much redundant and can be just icon decorator.",
    "Eugene: that\u0027s pretty much the idea I was getting at.  The only column I was referring to is a right-aligned column that will show whether something has an incoming or not, but from the user\u0027s point of view this would not be a column.  Ben just prototyped this with me, it looked promising and we may have something to experiment with soon via the approach described on bug 177891.",
    "I just not quite understand why incoming/outgoing changes need to be right aligned and can\u0027t be just regular decoration for the icon? Synchronize view is using such mode for tree-based representation and it worked well up there.",
    "It needs to be very easy to pick out which bugs have incoming/outgoing, since this is some of the most important informatoin displayed in the Task List.  Note that we go against the usual convention of making unread be bold.  Making the column that contains the incoming/outgoing not contain any other images makes it easy to pick out incomings.  Synch doesn\u0027t have this problem because it\u0027s all incoming/outgoing.  In contrast Microsoft Outlook puts a similar replied/forwarded decorator on the message icon an dI find that nearly impossible to notice.\n\nThanks to bug 177891 I have now committed a prototype right-aligned incoming column.  It\u0027s still experimental.",
    " (In reply to comment #7)\n\u003e Thanks to bug 177891 I have now committed a prototype right-aligned incoming\n\u003e column.  It\u0027s still experimental.\n\nI don\u0027t think it is a good idea to show incoming status at the right. It is completely against common eye tracking habbits and it makes really hard to see what bug id got incoming changes and what its description is.\n\nAs for picking incoming only entries, I though we already agreed on providing a special filter/model for the Task List to show incoming only tasks.",
    " (In reply to comment #8)\n\u003e I don\u0027t think it is a good idea to show incoming status at the right. It is\n\u003e completely against common eye tracking habbits and it makes really hard to see\n\u003e what bug id got incoming changes and what its description is.\n\nPlease try it before dismissing it, I\u0027ll put a dev build out sometime today.  It took me a few hours to get used to and I\u0027m still deciding on it, but it unclutters the region near the icon.  It does indeed require a new eye tracking habit (i.e. scan rightmost edge) but I actually find this a feature because it separates looking at status over looking at incoming.  \n\nAlso, it is not uncommon, e.g. Outlook 2007 does the same thing with flags, Thunderbird 2 does it for stars, and RSSOwl 2 does it for pinning entries.  Their use of it makes me wonder if we should put the task activation toggle there, but then we\u0027d lose it feeling like a radio button.\n\n\u003e As for picking incoming only entries, I though we already agreed on providing a\n\u003e special filter/model for the Task List to show incoming only tasks.\n\nWhere did we agree on that?  I think it\u0027s a bad idea because it will make it hard to know which category the task is incoming on, or it will require constant switching to have the filter on/off.\n",
    "(In reply to comment #9)\n\u003e Please try it before dismissing it, \n\nSorry. I forgot to mention that I already did tried it and my first intention was to move/drag that column back where it was, but of course it didn\u0027t work because reordering of columns is disabled. So, I can\u0027t order them to my personal preferences like I could do in ThunderBird or Outlook.\n\n\u003e It took me a few hours to get used to and I\u0027m still deciding on it, but it\n\u003e unclutters the region near the icon.  It does indeed require a new eye tracking\n\u003e habit (i.e. scan rightmost edge) but I actually find this a feature because it\n\u003e separates looking at status over looking at incoming.\n\nDo I need to remind you that reading from right to left is very unusual to the European culture? :-)\n\n\u003e Also, it is not uncommon, e.g. Outlook 2007 does the same thing with flags,\n\u003e Thunderbird 2 does it for stars, and RSSOwl 2 does it for pinning entries.\n\nNote that all of those are managed by the user. That actually makes a very big difference.\n\n\u003e Their use of it makes me wonder if we should put the task activation toggle\n\u003e there, but then we\u0027d lose it feeling like a radio button.\n\nToggle may work on the very right column.\n\n\u003e \u003e As for picking incoming only entries, I though we already agreed on providing\n\u003e \u003e a special filter/model for the Task List to show incoming only tasks.\n\u003e Where did we agree on that?  I think it\u0027s a bad idea because it will make it\n\u003e hard to know which category the task is incoming on, or it will require constant\n\u003e switching to have the filter on/off.\n\nIf it would be a filter that you\u0027ll see incomings on all other models. Apparently I misinterpreted conclusion from the bug 177208. I see nothing wrong with switching filter on in case if you need to browse trough all unread entries. Bringing up ThunderBird / Outlook analogy, I think they both allow such mode for the Inbox.\n\n177208: provide a presentation that focuses on incoming\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d177208",
    "I\u0027ve committed my current progress on improving this.  I tried half a dozen variations and this is the best compromise that I found in terms of support subtasks and quickly scanning for incomings.  I tried a few fancy things like putting the incoming icon on the left and right of the task icon, both close and far, but it was always hard to pick out incomings that way.  Note that this currently gives some decorator clashes and implies that sorting by priority will need to be done via the view and/or context menu.  But it\u0027s looking promising.",
    "\u003e But it\u0027s looking promising.\n\nIs it really? I wouldn\u0027t say so considering how many old features it breakes. Anyways, do we really have to change how tree component worked and what is the driver for this?",
    " (In reply to comment #12)\n\u003e Is it really? I wouldn\u0027t say so considering how many old features it breakes.\n\nAs I said: \"I\u0027ve committed my current progress\".  Just got off the plane and committed the proper handling of images that are wider than 16px, that was tricky to get right but its mostly there.  \n\n\u003e Anyways, do we really have to change how tree component worked and what is the\n\u003e driver for this?\n\nSubtasks (bug 137543) and alternate content models (bug 170681) are key drivers, as they require us to support another level of nesting in the Task List, which we can\u0027t do with the current leading columns based approach because it would cause a huge amount of whitespace at the start of the Task List.  The other driver is the various bugs that suggest us combining tasks and hits (e.g. bug 161734), because one key thing I want to accomplish here is make incomings prominent enough that we get rid of the distinction between tasks and hits and just have \"new tasks\" indicated clearly enough, as you have been suggesting for ages.  I\u0027m about to commit a first try at UI for that soon.",
    "Btw, in case anyone previews this not that it\u0027s still in progress and all the fixes aren\u0027t in yet.",
    "Mik, can you please allow to reorder Task List columns, so it will be possible to put \"incoming\" status and \"active\" indicator before tree column. \nMaybe it is something with me, but it seems like those icons on the right are dragging visual attention from the text, making it harder to read.",
    "Also I think that task icon should be closer to the above folder/category icon (i.e. just slightly shifted). See how tree widget render that (i.e. Package Explorer).",
    "*** Bug 180851 has been marked as a duplicate of this bug. ***",
    "Skype discussion with Eugene about current implementation.   Will post more notes after we discuss this on tomorrow\u0027s conference call.\n\n[8:39:07 PM] eu says: I am tempted to click to those \"+\" icons every time...\n[8:39:38 PM] Mik Kersten says: I\u0027m not thrilled with that icon right now.  It\u0027s for \"new hits\" in case you haven\u0027t noticed.\n[8:39:41 PM] eu says: and column on the right is totally out of place. decorator would look better\n[8:39:46 PM] Mik Kersten says: Let me know if you have icon suggestions.\n[8:39:52 PM] Mik Kersten says: can\u0027t have decorator for incoming\n[8:40:07 PM] eu says: what was wrong with add/incoming  icon that cvs uses?\n[8:40:12 PM] eu says: why not?\n[8:40:31 PM] Mik Kersten says: I tried 10 versions of that, it\u0027s either impossible to notice or adds 8px to the width of the image which adds 10 or more px to the indentation of the task\n[8:40:51 PM] Mik Kersten says: CVS makes the image more broad\n[8:40:59 PM] Mik Kersten says: we can\u0027t make it any more broad\n[8:41:08 PM] Mik Kersten says: also, we need the top-right and top-left for other decorators\n[8:41:16 PM] eu says: right. incoming decorator can overlap icon on 1/3\n[8:41:19 PM] Mik Kersten says: 7px wide ones, which overlay\n[8:41:51 PM] eu says: I am sorry to say, but icons on the right just don\u0027t work\n[8:42:24 PM] Mik Kersten says: but are you sure the column on the right is out of place?  I find it very easy to scan because it is not busy.  A problem with the previous way of doing it was that we had an extremely busy set of icons.\n[8:42:28 PM] eu says: especially if you\u0027ll have horizontally oriented tasklist\n[8:42:43 PM] Mik Kersten says: Yes, it\u0027s bad for a horizontally oriented Task List.\n[8:43:26 PM] eu says: it is only easy to scan if you have all incomings. when they are mized up with sheduled, you can\u0027t track which one had changed\n[8:43:46 PM] eu says: mized \u003d\u003d mixed\n[8:43:49 PM] Mik Kersten says: what do yo mean \"mixed up with scheduled\"?\n[8:44:13 PM] eu says: you have incoming and old tasks shown at the same time\n[8:44:56 PM] Mik Kersten says: right, that\u0027s when I find it easy to pick out the ones which have arrows\n[8:45:21 PM] eu says: and that \"active\" icon is looking really odd now. I\u0027d sacrifise it.\n[8:46:19 PM] eu says: yes, but can you pickup the description of each particular task that has arrow? I mark tasks as read about 70% of time. so just need to read description\n[8:46:40 PM] Mik Kersten says: I tried.  There is no other good place for it, and we have to have it.  It\u0027s the main thing that Mylar changes about tree interaction (i.e. a node can be activated).\n[8:47:07 PM] Mik Kersten says: Everyone in our office hated the activation button missing or on the right.\n[8:47:21 PM] eu says: activated node will be bold. and you can activate it on doubleclick or popup menu\n[8:47:36 PM] Mik Kersten says: need to show which tasks have a context\n[8:48:11 PM] eu says: context can go to the end of text label or into popup tooltip\n[8:48:13 PM] Mik Kersten says: I wish we could get rid of the activation button on the left...\n[8:48:21 PM] Mik Kersten says: I don\u0027t think so\n[8:48:46 PM] eu says: why would you need to waste space to show context?\n[8:48:49 PM] Mik Kersten says: Like I said, I tried that and had very strong feedback that it was a very bad idea from everyone in our lab.\n[8:49:16 PM] eu says: hmm. how many people?\n[8:49:20 PM] Mik Kersten says: This needs to be a public discussion, it\u0027s already been too much inter-personal discussion with everyone yelling at me to put context activation back.\n[8:49:29 PM] eu says: did anyone gave feedback on incoming icon on the right?\n[8:49:34 PM] Mik Kersten says: 5 people.  Let\u0027s discusson on tomorrow\u0027s call.\n[8:50:03 PM] Mik Kersten says: Yes, with icon on right they thought it was completely uninteligible.  I thought it was OK for advanced users but bad for intermediates, and we have to optimize for intermediates.\n[8:50:06 PM] eu says: shoot\n[8:50:38 PM] Mik Kersten says: btw, we could give incomings a backgroudn highlight, same as in editor.\n[8:50:44 PM] Mik Kersten says: not sure that\u0027s a good iea.\n[8:50:48 PM] eu says: that to the second from the last post\n[8:51:00 PM] Mik Kersten says: ?\n[8:51:29 PM] eu says: background is used for highlighters.\n[8:52:10 PM] Mik Kersten says: only in the sandbox.  But I\u0027m not yet willing to get rid of the extensibility that highlighters could provide for other integrators or for tagging.\n[8:52:29 PM] eu says: I am still thinking that incoming should be next to icon like in sync view... can we have several rendering options?\n[8:52:53 PM] Mik Kersten says: Oh yeah, it\u0027s really easy to switch.\n[8:53:10 PM] Mik Kersten says: I made a pretty fancy composite image architecture.\n[8:53:27 PM] Mik Kersten says: But again, if we put it there the task node will be indented by 1cm more.\n[8:53:37 PM] Mik Kersten says: I don\u0027t know why SWT indents more than the image pixel width.\n[8:53:40 PM] eu says: so I could have my incoming decorator and activate disabled and guys from your lab will have whathever they like... :)\n[8:54:12 PM] Mik Kersten says: no, we need to settle on a good lowest common denominotor.  We can experiment further, but it would be bad if we did not come up with a good compromise for 2.0M3\n[8:54:57 PM] eu says: the only common denominator we could have is incoming image in the middle of the row, since some need it on the left and others on the right.\n[8:55:27 PM] eu says: have your denominator as default, but allow to configure it\n[8:55:28 PM] Mik Kersten says: adding options for this kind of thing is not good UI design.\n[8:55:33 PM] eu says: like cvs decorations\n[8:55:51 PM] Mik Kersten says: yeah, and that was disastrous UI design.\n[8:56:07 PM] Mik Kersten says: the fact that everyting has ASCII -kv on it, and that changed is not a graphical decoration by default.\n[8:56:29 PM] eu says: I disagree. technically you don\u0027t need to show everything at once. and the problem is that you are trying to show too much at once in the same piece of ui\n[8:56:55 PM] eu says: so what? cvs does allow to change that all\n[8:57:06 PM] Mik Kersten says: yes, but 99% of users do not change those options.\n[8:57:32 PM] eu says: and by the way, we still have that bug to allow to add custom columns to thetask list (i.e. due date)\n[8:57:41 PM] Mik Kersten says: So if you say \"let\u0027s make it configurable\" than you have your advanced users configure it, not give feedback from long-term usage, and go out with bad defaults.\n[8:57:49 PM] Mik Kersten says: CVS label decorations are a perfect example.\n[8:57:50 PM] eu says: that is why you would have your denominator\n[8:58:23 PM] Mik Kersten says: gotta go, let\u0027s talk about this tomorrow during the call, because right now I\u0027m tempted to paste our conversation onto the bug ;)\n[8:58:40 PM] eu says: they only example of bad field for UI research. it is good for advanced users",
    "Eugene: even though it is still work in progress I just cut a dev build so that you can try working with this (should be available within 20 min).  I want to know if you really have trouble with the notifications on the right, since I find them much easier to notice than with the previous layout, have no trouble visually attributing the arrow to the task, and like how the query and task notifications are aligned vertically.  Let\u0027s discuss further on the call.",
    "I hate to say that, but I\u0027ll pass on this dev build. Like old task list better.",
    "To clarify, two things I consider show stoppers. Missing sorting (sort in non-focused mode is completely random) and \"incoming\" icon on the right. The latter makes whole task list pretty unusable to me, especially when view is wide enough. Like I\u0027ve tried to point out in our chat with Mik, incoming indication need to be next to the icon (on the left side of the description text).",
    "I\u0027m liking the big blue plus for incoming and larger in/out arrows. I\u0027m not 100% convinced on the current position of priority yet, I might prefer between the activation and task icon...but I\u0027ll try it for a bit longer before I complain too loudly. I only wish there was a way to shift the entire row over so that there wasn\u0027t so much blank space to the left of the activation button.",
    "Filed Platform bug 185004 regarding tree node padding problem on Windows.",
    "In the new layout, task gets activated if you click anywhere in a huge blank space on the left of the task icon. It already screwed my other active task few times...",
    "(In reply to comment #24)\n\u003e In the new layout, task gets activated if you click anywhere in a huge blank\n\u003e space on the left of the task icon. \n\nThis is fixed in HEAD.  A new dev build will be available this evening.\n\n",
    "Created an attachment (id\u003d65710)\nrendering suggestion\n\nMik, can you use custom cell rendering to put activate/context indicator to the left like this? Then icon decoration should take less space.",
    "That would be awesome and I did investigate it, but afaik SWT can not draw to the left of the tree expansion widget.  I guess that otherwise it would be violating how a tree renders.  Making the viewer not be a tree, but a nesting of trees or tables or something to that effect would get rid of the \"Go into\" and filtered tree functionality that we rely on.  Making a floating ruler to the left would be too much work.\n\nThe only other alternative layout I have thought of is to go back to fixed leading columns, all images 16px, and to dynamically change the width of the first column to correspond to the level of nesting.  I worked with such a prototype for a bit and disliked it, but that could be because I had the icons wider than 16px.",
    " (In reply to comment #27)\n\u003e That would be awesome and I did investigate it, but afaik SWT can not draw to\n\u003e the left of the tree expansion widget.\n\nI don\u0027t see why not. You can do one of the following: use negative offset with the SWT.PaintItem event type, so the following change for Snippet220   draw pictures on the very left of the tree column http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet220.java \n\n\t\t\t\tcase SWT.PaintItem: {\n\t\t\t\t\tRectangle rect \u003d image.getBounds();\n\t\t\t\t\t// int x \u003d event.x + event.width;\n\t\t\t\t\tint x \u003d 0;\n\t\t\t\t\tint offset \u003d Math.max(0, (event.height - rect.height) / 2);\n\t\t\t\t\tSystem.err.println(event.x + \" : \" + event);\n\t\t\t\t\tevent.gc.drawImage(image, x, event.y + offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\nAnother option is to hook into SWT.EraseItem similar to the one used to draw fancy gradients in TaskListView and just draw those images at the right locations. You already have mouse handling for the arbitrary coordinates.\n\nSo, either of those options should be easy to implement.\n\n",
    "I must say that I found the move of the incoming indicator to the far right a bit of a shock mainly because I have the Tasks View as a wide fast view so I can see the whole task title which made the indicators were hard to notice at first. Now that I know where they are, I could probably live with it. Of course, the graphics themselves look much nicer. I\u0027m also glad to see that the incoming indication on a folder is now kept after the folder is expanded.\n\nAnother issue I have is that the indicator column has a tooltip that displays the tasks title. I would only expect to see this is the title was somehow obscured which, in my wide view, is not the case. As an alternative, perhaps the tooltip should show some indication of what the change is (e.g \"comments added\" or \"milestone changed\".",
    "(In reply to comment #29)\n\u003e I\u0027m also glad to see that the incoming indication on a folder is now kept after the folder is expanded.\n\nIt must be a coincidence, because I do see expanded folders without incoming indicator.",
    " (In reply to comment #29)\n\u003e I must say that I found the move of the incoming indicator to the far right a\n\u003e bit of a shock mainly because I have the Tasks View as a wide fast view so I can\n\u003e see the whole task title which made the indicators were hard to notice at first.\n\u003e Now that I know where they are, I could probably live with it. \n\nThanks for the feedback Michael, that\u0027s helpful.  Personally it took me a day to get used to it and now I like it slightly more.  But only slightly, and my eyes are likely more accustomed to scanning a fixed right-aligned column on a table/tree from other UIs I use (Outlook 2007 and Thunderbird 2.0).  The extra whitespace from using 24px images is driving me crazy (Platform/SWT bug 185004).  So we\u0027ve got these issues, your, Willian, and Eugene\u0027s initially negative reactions and the fact that right-aligned columns like this can not work on Eclipse 3.2 (while I wanted to experiment, I always ensure that our UI does not overly diverge between 3.3. and 3.2).  So I\u0027m going to give the approach I propose in the second paragraph of comment#27 a try, even though it will be a hack to get subtasks working properly with that.\n\n (In reply to comment #29)\n\u003e As an alternative, perhaps the\n\u003e tooltip should show some indication of what the change is (e.g \"comments added\" or \"milestone changed\".\n\nYes, this has come up on a few bugs lately and would definitely be useful, created bug 185380\n\n (In reply to comment #30)\n\u003e It must be a coincidence, because I do see expanded folders without incoming\n\u003e indicator.\n\nThere is still a refresh concurrency problem here.  ",
    "(In reply to comment #28)\n\u003e I don\u0027t see why not. You can do one of the following: use negative offset with\n\u003e the SWT.PaintItem event type, so the following change for Snippet220   draw\n\u003e pictures on the very left of the tree column\n\u003e http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet220.java\n\nHoly cow, it looks like this is going to work!  SWT never ceases to impress me...",
    " (In reply to comment #32)\n\u003e Holy cow, it looks like this is going to work!  SWT never ceases to impress me...\n\nI would say that variant with EraseItem is probably more manageable... ",
    "Created an attachment (id\u003d65828)\nin progress\n\nFyi, here is the current status.  I\u0027m still playing with placement in order to reduce the visual business problem that comes from having all the information in one area.  But the good news is that the activation is out (thanks for that snippet Eugene!) and that the custom decoration placement should work fine, although integrators will need special instructions on how to use that.",
    " (In reply to comment #34)\n\u003e Fyi, here is the current status.\n\nNow you are talking! \n\nBTW, incoming \"+\" icon can really use improvement. Now it look way too different from the regular incoming icon and background color making arrow look blury. You know, I can\u0027t not complain on something. :-)",
    "(In reply to comment #29):\nI am not decided yet if I like the incoming icon on the right better than on the left. One thing I like about the old layout is that all information about a task is closely grouped together. Also as Eugene already pointed out if you read from left to right the new layout requires a lot more eye movement. I also have a rather wide task list (I use the fast view mode).\n\nI am certain that I don\u0027t like the priority indicator all the way on the right, it looks ugly and logically is part of the \"static\" task information like task type and summary which are displayed left aligned. \n\nTo make the layout more compact we could stop displaying bug numbers which have absolutely no meaning to me. They should be searchable through the quick find though.\n\nGenerally the new layout looks less crowded and I like the colorful icons denoting task types already.",
    "Created an attachment (id\u003d65856)\nRendering on Linux\n\nThis is on Ubuntu feisty using the integration build I20070501-0010:\n\n * The old bright header color looked nicer\n * The activate column is not rendered correctly\n\nIt occasionally happens that a task is activate or deactivated when I click on the arrow to collapse or expand a query.\n ",
    "(In reply to comment #36)\n\u003e To make the layout more compact we could stop displaying bug numbers which have\n\u003e absolutely no meaning to me.\n\n-1. With risk of looking selfish again, I think those ids/keys do serve as important markers, especially for non-bugzilla repositories that use more meaningful ids. Also note that there are several places where Mylar inconsistently choose not to show ids and we have quite old bugs opened on those issues. But I wouldn\u0027t mind if there will be some preference to configure if id/key should be shown in the UI.",
    "A new build (2.0.0.v20070503-1400) with the still in-progress work on the combined icon (comment#34) should be available shortly.\n\nEugene: I\u0027m not sure if this meets your use case because me, Rob, and Shawn and Leo all think it\u0027s much harder to pick out incomings due to the fact that it\u0027s much harder to scan vertically for them.  Do you find it easier?  That\u0027s not to say that this design isn\u0027t worth keeping and finessing, just that we need to be clear about what we are trading off.\n\nSteffen: thanks for the feedback, that\u0027s very useful.  Regarding Linux, it looks like we have a major problem with the custom drawing of the context activation button.  It won\u0027t show on children of a category or query at all.  Investigating now...",
    " (In reply to comment #32)\n\u003e (In reply to comment #28)\n\u003e \u003e I don\u0027t see why not. You can do one of the following: use negative offset with\n\u003e \u003e the SWT.PaintItem event type, so the following change for Snippet220   draw\n\u003e \u003e pictures on the very left of the tree column\n\u003e \u003e\n\u003e http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet220.java\n\u003e Holy cow, it looks like this is going to work!  SWT never ceases to impress\n\u003e me...\n\nUnfortunately it looks like my original assumption was correct.  This approach works on Windows, but on Linux/GTK you can not draw to the left of the image (Steffen\u0027s screenshot demonstrates this).  Will investigate whether the EraseItem approach behaves differently.",
    "BTW, I am getting all kind of deadlocks and NPEs when running bootstrapped from the head. For example, when trying to edit repository (to fix credentials). Is this because I need to run -clean or there is something fishy?\n\njava.lang.NullPointerException\n\tat org.eclipse.mylar.internal.tasks.ui.wizards.EditRepositoryWizard.\u003cinit\u003e(EditRepositoryWizard.java:40)\n\tat org.eclipse.mylar.tasks.ui.TasksUiUtil.openEditRepositoryWizard(TasksUiUtil.java:393)\n\tat org.eclipse.mylar.internal.tasks.ui.actions.EditRepositoryPropertiesAction.run(EditRepositoryPropertiesAction.java:53)\n\tat org.eclipse.mylar.internal.tasks.ui.views.TaskRepositoriesView$2.doubleClick(TaskRepositoriesView.java:140)\n\tat org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:799)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:850)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:45)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:153)\n\tat org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:797)\n\tat org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.java:1061)\n\tat org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1168)\n\tat org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:237)\n\tat org.eclipse.jface.util.OpenStrategy.access$0(OpenStrategy.java:234)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:295)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3673)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3284)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2337)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2301)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2176)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:463)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:458)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:101)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:146)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:356)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:171)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:476)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:416)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1141)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1116)\n",
    "(In reply to comment #40)\n\nPaintItem does not work on Linux as described, but EraseItem does.  However, EraseItem gets overriden if there is a selection.  I\u0027ve updated the implementation to use a combination of PaintItem and EraseItem, but the caveat is that on Linux the context toggle/status disappears when the task is selected.\n\nSteffen, Leo: since you both work bootstrapped on Linux please try working with this and letting me know how bad a UI nit this is.\n\n(In reply to comment #41)\n\u003e BTW, I am getting all kind of deadlocks and NPEs when running bootstrapped from\n\u003e the head. For example, when trying to edit repository (to fix credentials). Is\n\u003e this because I need to run -clean or there is something fishy?\n\nNot related to this bug, please file a new one.  We made a change to Task List startup that could be related.",
    "Created an attachment (id\u003d65867)\nrendering on win xp\n\nHere is how it look like on win xp here. Just for reference I also shown incoming decoration on sync view to illustrate the differences. Its icons are darkers, more contrast, so easier to pickup. In the task list, incoming \"+\" icon don\u0027t look like an arrow, but more like diamand and it is too close in color to the task icon.\n\nNote other rendering artefacts on query nodes, misaligned context icons and somehow too wide gaps between icons and text.",
    "Created an attachment (id\u003d65878)\nscrenshot with Synch view icons\n\nThe problem with using the exact synch view icons is that they can result in too much contrast.  It is normal for the Task List to have lots of incomings and having all that contrast gives it that overly contrasty Eclipse 3.1 look that\u0027s hard on the eyes.  I\u0027ll look for a compromise.\n\nFyi, the diamond is the standard \"new\" indicator in Eclipse (e.g. New Repository Task) but I agree that it looked werid.",
    "(In reply to comment #44)\n\u003e The problem with using the exact synch view icons is that they can result in too\n\u003e much contrast.\n\nShould I even say that I like it?\n\nPS: by the diamond I meant the shape of the brownish arrow and not yellow diamond-looking \"+\"",
    "2.0.0.v20070503-1930 with latest updates is uploading now.",
    "BTW, you may want to take care how icon decoration look like on selected rows, some of the decorating images don\u0027t have enough borders around \u0027em.",
    "I didn\u0027t have the time the take a full look and read all this thread, but the gradient colors look very bad on 20070506-2200, another thing I noted now (not sure if this was present on old layout) is that there is no delay when you hover the mouse over task list, i.e., the tooltip appear as you move the mouse over.",
    "Created an attachment (id\u003d66358)\nScreenshot on 3.3 M7, WinXP with classic theme\n\n",
    "The warning icon that indicates a synchronization error is too small for tasks and not displayed for queries at all.",
    "Yup, will fix.  I\u0027m having to revamp everything around the problems discussed on bug 185004 and Platform-specific rendering problems.  Nearly done with first cut that\u0027s consistent and supports subtasks properly (the previous prototypes posted here didn\u0027t due to issue such as +/- widgets being occluded by activation toggle).",
    "I\u0027ll send a message to mylar-dev on this tomorrow, but the bottom line is that the placement of incoming is now an option in the prefs (either overlay or right-aligned), nesting works but needs a few more pixel positioning tweaks, and layout is almost entirely consistent between Linux and Win.  We have non e3.3 specific stuff but I still need to test on e3.2.  The only thing I don\u0027t think we can get working on Linux, on on Windows with nesting in the root, is uncategorized tasks.  So for 2.0M3 we probably need to add the \"Unfiled\" category that we\u0027ve been toying with.",
    "Dev build uploading now.  Note that subtasks are disabled by default and need to be enabled in view menu.",
    "Created an attachment (id\u003d66947)\nmylar/context/zip\n\n",
    "Due to some additional fixes it is now possible for us to left-align the incomings.  The current default is left-aligned, and there is an option to overlay them.  Dev build will be available within the hour.",
    "Final fixes in HEAD, might still do some very minor Linux tweaks for subtasks.  MacOS fixes done.",
    " (In reply to comment #55)\n\u003e The current default is left-aligned, and there is an option to overlay them.\n\nMik, did you meant right aligned?\n\nBTW, there is a plenty of space between icon and activation button, so it could be used for that status icon too...",
    " (In reply to comment #57)\n\u003e (In reply to comment #55)\n\u003e \u003e The current default is left-aligned, and there is an option to overlay them.\n\nNo, left-aligned.  This is a new solution that seems to be by far the best default and best behaved across platforms, and avoids the bug of having to scan from right to left.  Overlaid is still an option, but the overlay has to come from the left and will overlap with priority.  Check it out in the latest dev build. \n\nI\u0027m now marking this complete and specific problems can be raised on new bugs (such as Linux bug 186667).  But everyone should feel free to put general discussion items or nits on this bug.",
    "Created an attachment (id\u003d66963)\nmylar/context/zip\n\n",
    "Mik, don\u0027t you think that it is bit too experimental it in a last day before release? I mean the moving incoming overlay to the left. \nBesides, it is inconsistent with other Eclipse UI, that is using left arrows (and not the right ones) to show incoming stuff everywhere else.",
    "I still don\u0027t like the colors for query/category (see comment#49).\n\nIMHO, the incoming/outgoing arrow doesn\u0027t make sense. The incoming is now a ***left-to-right*** blue arrow and the outgoing is a ***right-to-left*** arrow.\n\nAlso, I\u0027d like to see the same icons used on synchronize view being used here. I.e., the blue icon on task list is lighter than the sync view one.",
    "Another thing I missed was why the columns were removed and the priority/incoming/etc. were turned into icons? This way there is no possibility to order them by just clicking the column title.\n\nI suppose the change was to enable the subtask/nesting tasks feature, i.e., the first column originally didn\u0027t scale.\n\nIf so, why don\u0027t move all offending columns to the beginning, something like on thunderbird 2.0?",
    "Created an attachment (id\u003d66982)\nThunderbird 2.0 screenshot\n\nJust a speculation about making the task list more like a news reader.",
    "Created an attachment (id\u003d66986)\nMockup moving icons to left\n\nI wonder if something like this is possible.\n\nOn the latest build, the priority icon is very narrow to the task icon, and IMHO don\u0027t look well.",
    "Created an attachment (id\u003d66988)\nIcons overlap on Linux\n\nThe attached screenshot shows that the expand arrow overlaps the activate icon. Clicking on it expands the tree and activates the task.\n",
    " (In reply to comment #60)\n\u003e Mik, don\u0027t you think that it is bit too experimental it in a last day before\n\u003e release? I mean the moving incoming overlay to the left.\n\nYes, I wish I had made it possible to make this change earlier in the release cycle.  However, it was the work for the work-arounds to bug 185004 and the fact that we got rid of root tasks that made the left-aligned incomings an option.  Having tried just about every other combination and placement I think that there is compelling reason that this is the best cross-platform compromise and we need user feedback on this for 2.0.  Since the change was last minute I made sure to make the overlays an option, at least for now.\n\n\u003e Besides, it is inconsistent with other Eclipse UI, that is using left arrows\n\u003e (and not the right ones) to show incoming stuff everywhere else.\n\nAFAIK the only place in the Eclipse SDK where overlays of this sort appear is the Synchronize view.  I think that the way they appear is the right choice for the synchronize view because the icon stays recognizable.  However, I think that the left-placement is more logical because the arrow points to the item, not from icon to label.  Also, having the incoming arrows aligned and away from the icon itself makes them much easier to pick out in the Task List.  The Synchronize view is much different in this respect because everything in it is either incoming or outgoing, and you rarely need to pick out an outgoing from a bunch of incomings (just conflicts).  \n\n (In reply to comment #61)\n\u003e I still don\u0027t like the colors for query/category (see comment#49).\n\nThese are based off your window trim colors.  It would be great if you could state why (e.g. don\u0027t like the gradient effect, too dark, too light).  After you do that, please note that you can change them via the Colors and Fonts preference page.  To me they look too dark on a default XP (good on all other OSes we test) so I\u0027m tempted to lighten them some.\n\n\u003e IMHO, the incoming/outgoing arrow doesn\u0027t make sense. The incoming is now a\n\u003e ***left-to-right*** blue arrow and the outgoing is a ***right-to-left*** arrow.\n\nIn all the UIs I know the idiom uses is whether the arrow points to or away from the item, not whether it\u0027s right-or-left, so I think that an incoming arrow placed on the left needs to point the current way.  In terms of using the current UI what really matters is that the incomings are easy to pick out without being overly noisy, and that hits can be quickly distinguished from incomings.\n\n\u003e Also, I\u0027d like to see the same icons used on synchronize view being used here.`\n\u003e I.e., the blue icon on task list is lighter than the sync view one.\n\nWe had those in a dev build.  From comment#44: \"The problem with using the exact synch view icons is that they can result in too much contrast.  It is normal for the Task List to have lots of incomings and having all that contrast gives it that overly contrasty Eclipse 3.1 look that\u0027s hard on the eyes.  I\u0027ll look for a compromise.\"  The compromise I used takes an arrow that has a more defined arrow shape, but less contrast since it is normal for the Task List to have many incomings.\n\n\n (In reply to comment #62)\n\u003e Another thing I missed was why the columns were removed and the\n\u003e priority/incoming/etc. were turned into icons? This way there is no possibility\n\u003e to order them by just clicking the column title.\n\nOrdering is now done via the view menu, and more ordering options are possible now (e.g. you could ask for ordering by severity and it would be easy to add).  \n\n\u003e I suppose the change was to enable the subtask/nesting tasks feature, i.e., the\n\u003e first column originally didn\u0027t scale.\n\u003e If so, why don\u0027t move all offending columns to the beginning, something like on\n\u003e thunderbird 2.0?\n\nYes, the main driver for this was subtasks (impossible with previous column layout).  Any column style renderings, even the Thunderbird 2.0 style ones either took too much horizontal space to work well in a vertical view, or did not support subtasks.  So we\u0027ve ended up with something similar to what you propose in comment#64, but via custom drawing to keep the information density up.  I did try the priorities being rendered away from the icons.  But note that we can not put any clickable icon (i.e. activation) in the left-most position because of bug 185564.  I will try to put more padding between the icon and priority, but this is very tricky and requires platform-specific code due to bug 185004.\n\n (In reply to comment #65)\n\u003e Created an attachment (id\u003d66988)\n\u003e Icons overlap on Linux\n\nThanks, this is bug 186667 and I should be able to resolve it with some Linux-specific rendering, but that will  have to wait until after 2.0M3, so for now the work-around is to activate those tasks via the popup menu.",
    "Reopening since we can use this bug to continue collecting feedback.",
    " (In reply to comment #66)\n\u003e Yes, I wish I had made it possible to make this change earlier in the release\n\u003e cycle.  However, it was the work for the work-arounds to bug 185004 and the fact\n\u003e that we got rid of root tasks that made the left-aligned incomings an option.\n\u003e Having tried just about every other combination and placement I think that there\n\u003e is compelling reason that this is the best cross-platform compromise and we need\n\u003e user feedback on this for 2.0.  Since the change was last minute I made sure to\n\u003e make the overlays an option, at least for now.\n\nI hate to say this, but this change suck much more comparing to the previous option with incoming markers on the left. At least it has more issues then the previous option: reverted icon meaning comparing to the rest of the Platform, overlapping priority icons and few other things.\n\nI thought that workaround suggested in bug 185004 (i.e. manually draw text label) should resolve indentation issue, and anyways, platform issues should not be a driving force for UI design.\n\n\u003e AFAIK the only place in the Eclipse SDK where overlays of this sort appear is\n\u003e the Synchronize view.  \n\nNot only. There is also comparison editors and patch wizard too.\n\n\u003e I think that the way they appear is the right choice for\n\u003e the synchronize view because the icon stays recognizable.  However, I think that\n\u003e the left-placement is more logical because the arrow points to the item, not\n\u003e from icon to label.\n\nLike I said, because it is different, it is not intuitive and require some thinking because it is NOT unified within Platform.\n\n\u003e Also, having the incoming arrows aligned and away from the\n\u003e icon itself makes them much easier to pick out in the Task List.  The\n\u003e Synchronize view is much different in this respect because everything in it is\n\u003e either incoming or outgoing, and you rarely need to pick out an outgoing from a\n\u003e bunch of incomings (just conflicts).\n\nI\u0027ve been using right-sided incoming decoration for several days and didn\u0027t find it difficult to use. On the other hand, the left-sided decoration still look annoying after several days of using it.\n\n\u003e \u003e IMHO, the incoming/outgoing arrow doesn\u0027t make sense. The incoming is now a\n\u003e \u003e ***left-to-right*** blue arrow and the outgoing is a ***right-to-left***\n\u003e arrow.\n\u003e In all the UIs I know the idiom uses is whether the arrow points to or away from\n\u003e the item, not whether it\u0027s right-or-left, so I think that an incoming arrow\n\u003e placed on the left needs to point the current way.  In terms of using the\n\u003e current UI what really matters is that the incomings are easy to pick out\n\u003e without being overly noisy, and that hits can be quickly distinguished from\n\u003e incomings.\n\nMik, no matter how much logical explanation you are going to put into that, it is still OPPOSITE to what the other UI is using. Hence it is NOT intuitive.\n\n\u003e We had those in a dev build.  From comment#44: \"The problem with using the exact\n\u003e synch view icons is that they can result in too much contrast.  \n\nIsn\u0027t more contrast is good?\nI have to say that current incoming/outgoing icons are practically don\u0027t work if you have other-then-white background (including category and row selection).\n\nAlso, your last change for the \"new\" incomings really look less intuitive and more cluttered then previously used arrow with \"+\" sign on it. This one look like a \"star\" that is used for \"create new\" actions, which is actually totally separate UI idiom.",
    " (In reply to comment #68)\n\u003e I hate to say this, but this change suck much more comparing to the previous\n\u003e option with incoming markers on the left. \n\nSorry to hear that.  Are you talking about the left-aligned incomings, the current default, or the experimental overlapping ones (not default, now marked \"Experimental\" because of cross-platform rendering problems)?  If you haven\u0027t yet please try to work with the left-aligned ones because that\u0027s the main thing I would like more feedback on.\n\n\u003e At least it has more issues then the\n\u003e previous option: reverted icon meaning comparing to the rest of the Platform,\n\u003e overlapping priority icons and few other things.\n\nThe reverted icon is an issue.  Given the tradeoffs I think that the overall benefit is greater than the lack of consistency with Platform.  Platform has no UI that\u0027s sufficient for an email Inbox replacement and that\u0027s the function that the Task List has for many users.  But I\u0027m very happy to put this up for debate and consider whether the Task List should lean more to consistency.  The entire time we have been walking a very fine balance between a tuned UI and Platform consistency, and sometimes it\u0027s the Platform that needs to evolve, not downstream plug-ins only.\n\n\u003e I thought that workaround suggested in bug 185004 (i.e. manually draw text\n\u003e label) should resolve indentation issue, and anyways, platform issues should not\n\u003e be a driving force for UI design.\n\nI haven\u0027t yet tried manually drawing labels.  All the manual drawing code has incurred such an overhead that if I go down this road I fear that we may have to triage more out of the 2.0 plan, especially since text drawing is even more tricky and platform sensitive, due to what happens with selections.  Patch is welcome if you want to experiment.\n\nRegarding \"Platform issues should not be a driving force for UI design\", I\u0027m not sure what you mean.  It\u0027s not a driving force, but the hardest and very important thing about getting this done has been making sure it supports Linux and Mac as well and not just Windows.\n\n\u003e Mik, no matter how much logical explanation you are going to put into that, it\n\u003e is still OPPOSITE to what the other UI is using. Hence it is NOT intuitive.\n\nDefault !\u003d intuitive.  If people are finding the arrow unintuitive or difficult please comment.  I found it a bit odd for the first couple of hours and now prefer it.  \n\n\u003e I have to say that current incoming/outgoing icons are practically don\u0027t work if\n\u003e you have other-then-white background (including category and row selection).\n\u003e Also, your last change for the \"new\" incomings really look less intuitive and\n\u003e more cluttered then previously used arrow with \"+\" sign on it. This one look\n\u003e like a \"star\" that is used for \"create new\" actions, which is actually totally\n\u003e separate UI idiom.\n\nNo matter how I created the white \"+\" symbol it was always hard to quickly pick out incomings from new hits, and it\u0027s now much easier because the shape is different.  This is consistent, because we use the \"+\" for New Task, and what happens after you create a task is that it gets an incoming.  \n\nRegarding contrast: please post a screenshot.  Note that the Task List is not currently intended to support the background highlighters which is why they are in the sandbox.  But if this is a big issue I\u0027m happy to make a high contrast icon scheme or just use the one from Platform.  Also, if you could set up a flag on that bug so that others can vote for an alternate scheme please do so and we can consider changing the default.  ",
    "Created an attachment (id\u003d67137)\nTask List with Synchronize view style decorations\n\nAlthough the high contrast worked great at first, I worked like this for a while and found the eye strain got to the point where I was getting a headache, since it is so common for the Task List to have many incomings.  Eclipse has made the very good UI choice of keeping contrast down for elements that are always visible, and I think the Task List should as well.  But we could consider providing a high contrast scheme or making this configurable in other ways.",
    "Regarding the above screenshot, note that it also puts the arrows on the right of the icons, causing 1cm more indentation (bug 185004) which gets considerably worse with subtasks.  That can\u0027t be remedied in a cross-platform way without custom text drawing.",
    "\u003e \u003e At least it has more issues then the\n\u003e \u003e previous option: reverted icon meaning comparing to the rest of the Platform,\n\u003e \u003e overlapping priority icons and few other things.\n\u003e The reverted icon is an issue.  Given the tradeoffs I think that the overall\n\u003e benefit is greater than the lack of consistency with Platform.  \n\nI agree to Eugene that it is very confusing that incoming icons now point in the opposite direction which is inconsistent with the synchronize perspective and previous Mylar versions. Since Mylar\u0027s incoming/outgoing indicator has a very similar meaning to the one used by CVS and SVN the UI should be consistent as well. The same is true for the \"+\", it looks better when it is inside the arrow and it should be consistent with the synchronize perspective as well.",
    " (In reply to comment #72)\n\u003e Since Mylar\u0027s incoming/outgoing indicator has a very\n\u003e similar meaning to the one used by CVS and SVN the UI should be consistent as\n\u003e well. The same is true for the \"+\", it looks better when it is inside the arrow\n\u003e and it should be consistent with the synchronize perspective as well.\nI\u0027m not liking the + at the tip of the arrow either. In terms of out/in coming, I\u0027ve been working with it for a bit now do find them easier to spot, and the task icon area much less cluttered.  I\u0027m liking that!  That said, I too am finding that arrow direction is a problem since I\u0027m used to seeing the opposite in the synchronize view.  Unfortunately reversing the arrow directions won\u0027t work either since incoming won\u0027t point towards the task icon which would likely add to the confusion. Guess we\u0027ll need the option of Synchronize style vs left aligned?  ",
    "We now have Eugene, Willian and Steffen who all prefer the Synchronize view arrows and direction.  I\u0027m making the option be \"Use Synchronize View style incoming overlays and placement\".  In this mode you get the exact Synchronize view icons, and I should be able to position them within a pixe or two of how they\u0027re positioned relative to the icon on that view without triggering the cross-platform problems.  Changes will be committed within 15 min so please comment on HEAD asap if you would like any changes before 2.0M3 goes out since this is the only significant changes we\u0027re making.\n\nI still believe that the points I have made about the new style rendering still hold (e.g. much easier to scan for incomings, less hard on the eyes, less visual clutter on icons).  As such I\u0027m making the new mode the default.  Over the course of 2.0M3 if we get sufficient feedback that the Synchronize view mode is prepared we can change the default.  However, I would like to ask that people try working for at least a few days in each mode before providing definitive feedback.",
    " (In reply to comment #74)\n\u003e Changes will be committed within 15 min so please\n\u003e comment on HEAD asap if you would like any changes before 2.0M3 goes out since\n\u003e this is the only significant changes we\u0027re making.\n\nPlease don\u0027t use yellow \"star\" marker for new incoming changes",
    "(In reply to comment #75)\n\u003e Please don\u0027t use yellow \"star\" marker for new incoming changes\n\nNot using it, check HEAD for the new incoming marker, it\u0027s now way easier to pick out and a sort of staggered style that other Eclipse icons have.  But note that in the Synchronize view style you\u0027ll get the standard high contrast boxy arrow with the white +.\n",
    "(In reply to comment #76)\n\u003e Not using it, check HEAD for the new incoming marker, it\u0027s now way easier to\n\u003e pick out and a sort of staggered style that other Eclipse icons have.  But note\n\u003e that in the Synchronize view style you\u0027ll get the standard high contrast boxy\n\u003e arrow with the white +.\n\nI see that you are using totally different icons now. Though there is not enough gap between icon and text when decorator mode is used... Such variant is hard to use, but only because of space.",
    " (In reply to comment #77)\n\u003e I see that you are using totally different icons now. Though there is not enough\n\u003e gap between icon and text when decorator mode is used... Such variant is hard to\n\u003e use, but only because of space.\n\nNot sure what you mean by \"totally different icons\".  There are two sets:\n\n1) Lower-contrast icons, arrow style and colors derived from \"input/output\" image in started icons.  I created the incoming icon to be very easy to distinguish visually by having the doubled-up arrow head.  I wish we could have made it consistent with the yellow \"new\" + that\u0027s throughout the SDK, but all combinations I tried looked either weird or hard to notice.\n\n2) Unchanged high-contrast Synchronize view icons. (not default, need to be enabled).  These do look quite squished up between the text and icon (btw, you recommended that we use that white space).  As previously stated, the problem is that for each 1px of extra space that I give them we get around 3px of padding (win32 only) which puts a lot of whitespace in on the left, especially if there are subtasks.  2.0M3 is frozen now, but I\u0027m happy to make changes to a dev build any time if those interested provide requests (e.g. move arrow left more, add the 6px of padding needed for 2px of space).",
    "(In reply to comment #78)\n\u003e Not sure what you mean by \"totally different icons\".  There are two sets:\n\nthat is what I meant.\n\n\u003e 1) Lower-contrast icons, arrow style and colors derived from \"input/output\"\n\u003e image in started icons.  I created the incoming icon to be very easy to\n\u003e distinguish visually by having the doubled-up arrow head.\n\nyea, it does look different and less ugly then yellow \"star\" icon. though I doubt that anyone will be able guess its meaning from its look. :-)\n\n\u003e enabled).  These do look quite squished up between the text and icon (btw, you\n\u003e recommended that we use that white space).  \n\nI probably _suggested_ it, but don\u0027t remember now in what context. :-)\n\n\u003e 2.0M3 is frozen now, but I\u0027m happy to make changes to a\n\u003e dev build any time if those interested provide requests (e.g. move arrow left\n\u003e more, add the 6px of padding needed for 2px of space).\n\nI\u0027d suggest to actually move arrow right 2px (to make it look like on sync view) and add 2px space (so it would look as 6px gap on windows)...",
    "Just had a look at M3 and I think its a great improvement so far! But now I am seeing a weird bug where the activation icon overlays the expand node. See attached screenshot (not sure if this is known?).",
    "Created an attachment (id\u003d67200)\nActivation icon overlays expand node\n\n",
    "Glad to hear you like the changes Ben.  You are hitting a bug where for some reason the tree is only allocating 16px for its images instead of the custom width, causing all the images and placement to get squashed.  I think I\u0027ve seen this happen if the first icon in the tree wrongly specifies its width as 16px.  Could you please file a new bug, and let me know what the first icon in the tree is?",
    "\u003e PaintItem does not work on Linux as described, but EraseItem does.  However,\n\u003e EraseItem gets overriden if there is a selection.  I\u0027ve updated the\n\u003e implementation to use a combination of PaintItem and EraseItem, but the caveat\n\u003e is that on Linux the context toggle/status disappears when the task is\n\u003e selected.\n\nThis looks like bug #186722 (not yet known if it\u0027s a real limitation or just a bug).\n\n",
    " (In reply to comment #66)\n\u003e (In reply to comment #61)\n\u003e \u003e I still don\u0027t like the colors for query/category (see comment#49).\n\u003e These are based off your window trim colors.  It would be great if you could\n\u003e state why (e.g. don\u0027t like the gradient effect, too dark, too light).  After you\n\u003e do that, please note that you can change them via the Colors and Fonts\n\u003e preference page.  To me they look too dark on a default XP (good on all other\n\u003e OSes we test) so I\u0027m tempted to lighten them some.\n\nI think there is some bug here. When I start Eclipse, the used colors are those who appear on my previous screenshot.\n\nBut if I look at Colors and Fonts preference page, it appear to be light/dark gray gradient. If I change to some random color, apply, reset the color preference, apply again, they appear correctly.\n\nAnyway this gray gradient is a little different from what it used to be until some builds ago. If I\u0027m not wrong, there wasn\u0027t this dark line between each line, that makes the gradient look busy.\n\n\u003e \u003e IMHO, the incoming/outgoing arrow doesn\u0027t make sense. The incoming is now a\n\u003e \u003e ***left-to-right*** blue arrow and the outgoing is a ***right-to-left***\n\u003e arrow.\n\u003e In all the UIs I know the idiom uses is whether the arrow points to or away from\n\u003e the item, not whether it\u0027s right-or-left, so I think that an incoming arrow\n\u003e placed on the left needs to point the current way.  In terms of using the\n\u003e current UI what really matters is that the incomings are easy to pick out\n\u003e without being overly noisy, and that hits can be quickly distinguished from\n\u003e incomings.\n\nYou are right on this point of view, it is just that for long-time Eclipse users, it is very hard to not to see the team/synchronize metaphor here. Also I haven\u0027t see any application using a left-to-right arrow to mean incoming.\n\n\u003e \u003e Also, I\u0027d like to see the same icons used on synchronize view being used\n\u003e here.`\n\u003e \u003e I.e., the blue icon on task list is lighter than the sync view one.\n\u003e We had those in a dev build.  From comment#44: \"The problem with using the exact\n\u003e synch view icons is that they can result in too much contrast.  It is normal for\n\u003e the Task List to have lots of incomings and having all that contrast gives it\n\u003e that overly contrasty Eclipse 3.1 look that\u0027s hard on the eyes.  I\u0027ll look for a\n\u003e compromise.\"  The compromise I used takes an arrow that has a more defined arrow\n\u003e shape, but less contrast since it is normal for the Task List to have many\n\u003e incomings.\n\nThere is a little bug on M3, using team/sync icons: if you select the task, you can see a white border around the arrow.\n\n\u003e I will try to put more padding between the icon and\n\u003e priority, but this is very tricky and requires platform-specific code due to bug\n\u003e 185004.\n\nThe spacing on M3 looks good. Have you tried to add a little more (1 or 2 pixels) to see if it looks better?\n",
    "I\u0027ve been using this for a few days and I quite like it. The direction of the arrows are not a big deal to me because I\u0027ve always relied on the colour to distinguish between the incoming/outgoing (less thinking ;)), but I understand that it doesn\u0027t work for everyone.\n\nI also prefer the low-contrast version of the overlays.",
    "Thanks for the feedback Ismael.  What I\u0027m finding most effective about the incoming arrows is that I can quickly scan the left of the view for incomings since there is almost no other visual information there, and since the view border makes it easier for the eye to scan vertically.  \n\nIn terms of icon shape, I\u0027m liking the new arrows because they look more like arrows and less like boxes.  But I\u0027m finding myself mostly liking the difference between incoming and new, but it may be too subtle and is a bit slow to pick out.  That\u0027s been by far the trickiest icon to make.  The only idioms I have for it are the white \"+\" (hard to pick out, especially on the smaller and lower contrast arrows), the yellow plus/star (all the variants I tried looked weird) or some variation of the current design.  We could also try a different color for the incoming arrow, but it has to vary with more than color for accessibility reasons.",
    "Mik, we still have issue with arrow direction. Even so there is an option for using overlays, arrows in all menus are using opposite direction, which is confusing. So, I\u0027d suggest to use blue left arrows even for non-overlay mode.",
    "Having an \"incoming\" arrow point away from the icon and label seems extremely counter intuitive to me.  Maybe its because every phone that I have ever used has incoming calls point to the name/icon, but its also logical becaues the incoming points at the name/icon of the thing that\u0027s incoming.  It always bugged me that in the Synchronize view it points away from the icon and towards the label because it is less obvious which direction is incoming.  The goal with the Task List is for it to be a very obvious UI, even no programmers, because the Task List itself is also intended to be used by non-IDE RCP apps.  So I think it is more important that it be show right in the Task List (where you see them most), and separately we can deal with consistency in other parts of the UI (e.g. ensuring that they are consistent for the Synch View overlay mode or the Submit button).  \n\nBut so that I get a better sense for this, could anyone working regularly with the default left-aligned incoming style please comment if the arrow direction is not working well for you.",
    " (In reply to comment #88)\n\u003e Having an \"incoming\" arrow point away from the icon and label seems extremely\n\u003e counter intuitive to me.\n\nIn non-decorator mode the arrow is too far away from the icon, so it doesn\u0027t seem like direction is matters there.",
    "I moved the Synchronize view style overlay mode to the Sandbox UI Tweaks feature because there is too much of a mismatch between the visual design of the Task List and this mode.  However, if there is sufficient interest in making this part of the default distribution we can consider moving it. The Sandbox UI Tweaks plug-in update site will go up alongside the dev build site.",
    "This is complete and the only related thing that should remain is bug 187550."
  ],
  "commentCreationDates": [
    "2007-04-17T17:26:55+02:00",
    "2007-04-17T17:30:38+02:00",
    "2007-04-17T20:28:25+02:00",
    "2007-04-24T10:04:03+02:00",
    "2007-04-24T15:30:29+02:00",
    "2007-04-24T18:26:58+02:00",
    "2007-04-24T19:49:02+02:00",
    "2007-04-25T00:37:22+02:00",
    "2007-04-25T07:16:04+02:00",
    "2007-04-25T11:32:19+02:00",
    "2007-04-25T14:40:08+02:00",
    "2007-04-26T04:40:12+02:00",
    "2007-04-26T15:20:23+02:00",
    "2007-04-27T03:40:13+02:00",
    "2007-04-27T03:44:54+02:00",
    "2007-04-27T18:44:31+02:00",
    "2007-04-27T18:47:04+02:00",
    "2007-05-01T05:48:01+02:00",
    "2007-05-01T06:01:15+02:00",
    "2007-05-01T17:21:53+02:00",
    "2007-05-01T18:22:50+02:00",
    "2007-05-01T18:35:45+02:00",
    "2007-05-01T18:41:38+02:00",
    "2007-05-02T01:10:28+02:00",
    "2007-05-02T23:23:39+02:00",
    "2007-05-03T00:11:18+02:00",
    "2007-05-03T02:20:20+02:00",
    "2007-05-03T02:31:27+02:00",
    "2007-05-03T05:54:48+02:00",
    "2007-05-03T14:17:57+02:00",
    "2007-05-03T16:20:20+02:00",
    "2007-05-03T18:15:18+02:00",
    "2007-05-03T19:25:23+02:00",
    "2007-05-03T20:27:01+02:00",
    "2007-05-03T21:30:09+02:00",
    "2007-05-03T21:52:43+02:00",
    "2007-05-03T23:18:28+02:00",
    "2007-05-03T23:31:39+02:00",
    "2007-05-03T23:40:03+02:00",
    "2007-05-03T23:55:11+02:00",
    "2007-05-04T00:01:07+02:00",
    "2007-05-04T00:11:08+02:00",
    "2007-05-04T00:26:44+02:00",
    "2007-05-04T00:31:29+02:00",
    "2007-05-04T03:53:23+02:00",
    "2007-05-04T04:27:52+02:00",
    "2007-05-04T04:50:08+02:00",
    "2007-05-04T04:53:50+02:00",
    "2007-05-08T22:10:32+02:00",
    "2007-05-08T22:14:10+02:00",
    "2007-05-11T02:38:54+02:00",
    "2007-05-11T05:05:29+02:00",
    "2007-05-11T05:54:43+02:00",
    "2007-05-11T07:03:42+02:00",
    "2007-05-12T00:26:17+02:00",
    "2007-05-12T00:34:49+02:00",
    "2007-05-12T03:53:52+02:00",
    "2007-05-12T05:25:08+02:00",
    "2007-05-12T06:10:13+02:00",
    "2007-05-12T06:10:18+02:00",
    "2007-05-12T09:16:56+02:00",
    "2007-05-13T07:19:32+02:00",
    "2007-05-13T08:24:29+02:00",
    "2007-05-13T08:26:57+02:00",
    "2007-05-13T09:35:58+02:00",
    "2007-05-13T10:49:02+02:00",
    "2007-05-14T16:27:29+02:00",
    "2007-05-14T16:56:00+02:00",
    "2007-05-14T22:00:00+02:00",
    "2007-05-14T22:58:06+02:00",
    "2007-05-14T23:00:40+02:00",
    "2007-05-14T23:02:21+02:00",
    "2007-05-14T23:30:48+02:00",
    "2007-05-15T00:48:37+02:00",
    "2007-05-15T01:12:52+02:00",
    "2007-05-15T01:29:58+02:00",
    "2007-05-15T01:39:23+02:00",
    "2007-05-15T03:35:51+02:00",
    "2007-05-15T03:53:12+02:00",
    "2007-05-15T05:04:22+02:00",
    "2007-05-15T11:16:48+02:00",
    "2007-05-15T11:17:42+02:00",
    "2007-05-15T19:32:26+02:00",
    "2007-05-15T19:54:04+02:00",
    "2007-05-15T21:49:54+02:00",
    "2007-05-17T17:20:50+02:00",
    "2007-05-17T17:55:17+02:00",
    "2007-05-17T19:33:10+02:00",
    "2007-05-17T20:51:02+02:00",
    "2007-05-17T21:33:52+02:00",
    "2007-06-15T18:32:39+02:00",
    "2007-06-21T23:08:07+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.wizards.EditRepositoryWizard.\u003cinit\u003e",
          "source": "EditRepositoryWizard.java:40"
        },
        {
          "method": "org.eclipse.mylar.tasks.ui.TasksUiUtil.openEditRepositoryWizard",
          "source": "TasksUiUtil.java:393"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.actions.EditRepositoryPropertiesAction.run",
          "source": "EditRepositoryPropertiesAction.java:53"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskRepositoriesView$2.doubleClick",
          "source": "TaskRepositoriesView.java:140"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$1.run",
          "source": "StructuredViewer.java:799"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:850"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:45"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:153"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick",
          "source": "StructuredViewer.java:797"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect",
          "source": "StructuredViewer.java:1061"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected",
          "source": "StructuredViewer.java:1168"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent",
          "source": "OpenStrategy.java:237"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$0",
          "source": "OpenStrategy.java:234"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:295"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3673"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3284"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2337"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2301"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2176"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:463"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:458"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:101"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:146"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:356"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:171"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:476"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:416"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1141"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1116"
        }
      ],
      "number": 0,
      "commentIndex": 41,
      "bugId": "182772",
      "date": "2007-05-04T00:11:08+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    }
  ],
  "groupId": "182772",
  "bugId": "182772",
  "date": "2007-04-17T17:26:55+02:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "enhancement"
}