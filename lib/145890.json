{
  "comments": [
    "Embedding an SWT Browser in Swing on Mac OS X \u003e\u003d 10.4 with 1.5 JVM leads to an error \"org.eclipse.swt.SWTError: Not implemented\".\n\nHere\u0027s the stack trace:\nException in thread \"Thread-2\" org.eclipse.swt.SWTError: Not implemented\n\tat org.eclipse.swt.SWT.error(SWT.java:3400)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.SWT.error(SWT.java:3268)\n\tat org.eclipse.swt.awt.SWT_AWT.new_Shell(SWT_AWT.java:162)\n\tat SwtBrowserTest$1.run(SwtBrowserTest.java:112)\n\tat org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)\n\tat org.eclipse.swt.widgets.Display.syncExec(Display.java:3825)\n\tat SwtBrowserTest$2.run(SwtBrowserTest.java:137)\n\tat SwtBrowserTest.run(SwtBrowserTest.java:155)\n\tat java.lang.Thread.run(Thread.java:613)\n\nThis bug has some history from a previous thread:\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d67384",
    "Created an attachment (id\u003d43811)\nA Java source file that demonstrates the issue\n\nRead the Java class comments on how to run this class to demonstrate the error",
    "adding myself to CC list",
    "The fix from Bug #67384, while technically allowing you to embed Swing in SWT, seems to deadlock as soon as an application uses any invokeLater calls in its Swing code. Since invokeLater calls are typically used throughout most Swing applications, they would have to be rewritten to make use of the changes from bug #67384.  However, even a rewrite of this nature would cause the application to execute completely synchronously, and that would make them extremely inconvenient to use, or unusable, on all platforms.  So while the bug #67384 is marked \"fixed\", the core issues still don\u0027t seem to be resolved because you still can\u0027t fully utilize Swing on a Macintosh; you can only use a very specific and restricted subset of it.\n\nMy first inclination is to simply reopen bug #67384, but since there seems to be a lot of sensitivity to that, I\u0027m posting the comments here so that this can become the \"new\" 67384.\n\n",
    "It is correct not to reopen bug #67384, because that bug is about the fact that SWT_AWT was not implemented. \n\nThis bug is tracking SWT_AWT.new_Shell() issues.\n\nIf you are seeing a deadlock using SWT_AWT.new_Frame(), please open a new bug for that and provide some code that shows the problem. Thanks!",
    "If you look at the source code contributed by Apple to fix bug 67384, only embedding AWT within SWT was implemented.  The reverse, SWT within AWT, was not.  This bug should more than likely be retitled \"AWT side of SWT_AWT bridge unimplemented on OS X\" (or similar) to better reflect the underlying problem, but I\u0027ll leave that up to the author of the bug.\n\nFrom the bug #67384 Patch:\n\n\tpublic static Shell new_Shell(final Display display, final Canvas parent) {\n\t\tif (display \u003d\u003d null)\n\t\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\tif (parent \u003d\u003d null)\n\t\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\tSWT.error(SWT.ERROR_NOT_IMPLEMENTED);\n\t\treturn null;\n\t}\n",
    "Is there a radar bug for this yet?  Where does this issue stand?",
    "adding myself to the CC list",
    "We need framework support from the Carbon and Cocoa teams to do this. We have two radars tracking it -- one for the Cocoa team and one for the Java team (me) to hook it up.",
    "FYI, I noticed this in the most recent MyEclipse Newsletter:\n\n\"Though Matisse4MyEclipse is fully integrated into MyEclipse, Macintosh users will be unable to utilize the Matisse4MyEclipse, MyUML, JavaScript debugger, Web 2.0 browser and MyEclipse Image Editor functions due to the long-standing Eclipse SWT_AWT bug #145890.\"\n\nLingering Eclipse/SWT problems on Mac, whether founded in fact or FUD, often crop up in discussions, blogs, and marketing that mention Swing or NetBeans. It would be really good for Eclipse and Apple to apply whatever resources and tweaks that are needed to eliminate this issue once and for all.",
    "(In reply to comment #9)\nWhat about using more of SWT and less of AWT? :-D",
    "*** Bug 163629 has been marked as a duplicate of this bug. ***",
    "adding myself to the CC list",
    "I cannot even begin to descibe how frustrating this bug is to many of us ISV\u0027s.",
    "Progress anyone? What is going on with this? Can someone from somewhere who knows please post an update?",
    "There is no short-term or quick fix here. The core of the problem is that there is no way to put an HIView inside an NSView. Granted, we did the other direction for putting AWT inside SWT, but that\u0027s because we had the benefit of WebKit, which did this to support WebViews inside Carbon windows. We have a request into the Carbon and Cocoa teams to do this, but it isn\u0027t a high priority for them right now.\n\nBut, in the interest of being helpful, I see a couple of ways to proceed, from least to most complicated:\n\n-- I get the impression that the main use case that is driving people to embed SWT in an AWT window is the SWT Browser widget, based on this example. Even if we had SWT-in-AWT, you would have an NSView hosting an HIView hosting an NSView, which isn\u0027t supported. Would there be any value in a JComponent-based Browser widget that used the API of SWT\u0027s Browser? org.eclipse.swt.browser.Browser is the only class in the browser package that relies the underlying SWT control hierarchy, but all of the other supporting classes don\u0027t.\n\n-- A motivated individual with the time could work on a Carbon event-to-Cocoa event converter for view-level embedding. Using the WebKit open source project, you should be able to get a lot of ideas on how to proceed.\n\n-- The biggest project of all involves a Cocoa-based SWT, which feels like using a sledgehammer to kill a wasp, and I know Steve N. is not keen on doing it. However, if you started from the Shell level and worked all the way through the controls, basing them off equivalent AppKit objects, it could fit in to the existing SWT architecture, since we already have Carbon and Cocoa support for Cocoa windows in a Carbon app.\n\nThis is probably not the right place for this kind of discussion, but I wanted to get the issues on the table.\n",
    "JDIC is the AWT/Swing browser story.  Can that be used instead of the SWT browser by those people who are embedding only to use the browser?",
    "Genuitec uses this bug as a claim why they cannot support the ArgoUML editor (which they repackage as MyEclipse UML) in MyEclipse.  See http://tinyurl.com/y4jt5q\n\nSteve, can you shed any light on whether your description of the issues (and possible resolutions) relates to the difficulty with supporting ArgoUML?\n\nI\u0027m anxious to see ArgoUML/EclipseUML added to (My)Eclipse to support Plone/Zope programming, but seem to be forever stuck with Genuitec claiming this bug as a blocking item.",
    "We\u0027re getting pretty far afield now, but ArgoEclipse is an open source Eclipse plugin which is based on a more modern version of ArgoUML than the MyEclipse UML closed source version.  My impression was that the resolution of the previous half of this bug provided enough support so that we could now run on a Mac, but I don\u0027t have one to test with.  Since ArgoEclipse is open source it may be easier to make progress on any remaining bugs if someone wants to help with testing.",
    "I have a little time to help test.\n\nI\u0027ve installed the latest argoUML plugin from the update site:\nhttp://argoeclipse.tigris.org/update_site\n\nAs soon as I attempted to create a new ArgoUML file, eclipse crashed.\n\nI\u0027ve saved the error report that mac os x generated if that would be helpful to you.\n\nPlease let me know how else I can help get this fixed.\n-Ben",
    "Please attach the error here.",
    "Created an attachment (id\u003d56996)\nerror report generated by mac os x when I try to run argoUML from eclipse\n\n",
    "This is a GP, not \"org.eclipse.swt.SWTError: Not implemented\".",
    "I know I suggested renaming this bug once before (sorry), but I believe some of the FUD/confusion regarding this bug may be due to its vague title.  \n\n1. It seems to be misinterpreted as \"the new Bug 67384,\" which from the comments on that bug was primarily focused on SWT_AWT.new_Frame().  In my experience with two large RCP applications that bug really is fixed.  I\u0027m using Java3D within multiple ViewParts on OS X without deadlocks or major issues.  I believe that SWT_AWT.new_Frame() covers the vast majority of SWT_AWT use.\n\n2. Correct me please or provide examples if I\u0027m wrong, but I can\u0027t imagine an instance in which *this* bug should prevent a 3rd-party eclipse plugin from working.  Any eclipse plugin has a top-level SWT component available to embed other SWT components into.  Embedding a swing component within an SWT view, only to turn around and embed another SWT view within that swing component (i.e. SWT View-\u003eSwing view-\u003eSWT view) seems unnecessarily complex.  I see no reason this bug should prevent a 3rd party Eclipse plugin developer from supporting OS X?  JDIC does seem to provide the browser functionality cited, though I\u0027ve not used it myself.\n\n3. I propose renaming this bug: \"SWT_AWT.new_Shell() unimplemented on OS X\" (or similar) to avoid confusion and/or misinterpretation by 3rd parties.",
    "Re comment #21, download Java 5 update 5 DP 2 from connect.apple.com, and also install the native library attached to bug 162687. That should clear up this crash.",
    "Re comment #23 -- Ian, I agree completely.",
    "Re comment #24: yes Scott, that did resolve the issue I had in comment #21.\n\nRe comment #18: Tom - ArgoUML appears to work now under mac os x.  Anything specific I should be trying to cause it to crash?\n\nRe comment #23: Yeah there does seem to be a lot of FUD surrounding this issue.  Does anyone know whether the claim from MyEclipse is legitimate (that MyEclipse can\u0027t do certain graphical tasks on mac os x due to this issue)?",
    "Greg from MyEclipse says that comment #3 is the problem that prevents their product from working fully on Mac OS X.  \n\nHe has not had a chance to test with the DP2 JVM, and native library (comment #24).\n\nHopefully Greg will update us all when he has time to test it out.\n\nRead about it here: http://www.myeclipseide.com/index.php?name\u003dPNphpBB2\u0026file\u003dviewtopic\u0026p\u003d71595#71595\u0026sid\u003d8b4d5e2e7025f11dce95e18f499607f6",
    "The claim in comment #3 is that invokeLater() deadlocks.  If this is true, please open a bug report with some sample code that deadlocks on the Mac but works elsewhere.  Thanks!",
    "this might be related: https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d171105\n\nThis affects JBoss IDE and its integration of SoapUI.",
    "(In reply to comment #23)\n\u003e JDIC does seem to provide the browser functionality cited,\n\u003e though I\u0027ve not used it myself.\n\nSince posting this bug, I have been successfully deploying JDIC to Windows, OSX and Linux with Java 5. The browser-in-swing performance is robust and the performance is good.\n\nNo major issues :)",
    "Ok Julian, glad you could get the problem solved.  Hope is works out for you.",
    "(In reply to comment #15)\n\u003e There is no short-term or quick fix here. \n\nWe\u0027ve noticed :-)\n\n\u003e -- A motivated individual with the time could work on a Carbon event-to-Cocoa\n\u003e event converter for view-level embedding. Using the WebKit open source project,\n\u003e you should be able to get a lot of ideas on how to proceed.\n\nHow about a motivated company that sells billions of dollars of MacOS X machines?\n \n\u003e -- The biggest project of all involves a Cocoa-based SWT, which feels like\n\u003e using a sledgehammer to kill a wasp, and I know Steve N. is not keen on doing\n\u003e it. However, if you started from the Shell level and worked all the way through\n\u003e the controls, basing them off equivalent AppKit objects, it could fit in to the\n\u003e existing SWT architecture, since we already have Carbon and Cocoa support for\n\u003e Cocoa windows in a Carbon app.\n\nEither a Cocoa based SWT or a Swing based SWT (so mostly a shim on top of a shim on top of Cocoa from the MacOS perspective). I\u0027m a proponent of the Swing port, but even a Cocoa port would be a better choice than the kludged Carbon port. This seems like it would solve this problem and other future problems. It would probably be overkill, but it\u0027s a cleaner architecture and would facilitate new platform support much easier (assuming an existing JVM/Swing port already exists, a native SWT port could be done at leisure).\n\nApple should really consider putting either some resources (maybe Steve K and/or others) or contract someone like Dieter Krachtus to do it for them. (EOS: http://eos.sourceforge.net/index.html).\n\n\n",
    "(In reply to comment #32)\n\nSorry - this conversation really does belong somewhere else. I\u0027m just not sure where. Any suggestions?\n\n\n",
    "Calvin, I know I shouldn\u0027t, but ... what exactly is \"kludged\" about the Carbon\nport?  Specifically, which widgets draw wrong or have the wrong behavior?",
    "(In reply to comment #34)\n\u003e Calvin, I know I shouldn\u0027t, but ... what exactly is \"kludged\" about the Carbon\n\u003e port?  Specifically, which widgets draw wrong or have the wrong behavior?\n\u003e \n\nYou\u0027re absolutley right - you shouldn\u0027t and neither should I. At least not here. The \"kludge\" is a fundamental architectural one, not a component level one (well, Carbon itself has some internal event handling complexities using Carbon that make the SWT_AWT nigh impossible to resolve without Apple\u0027s commited involvement). There\u0027s probably a better place for this argument. \n\nThese symptoms of the architecture have been going on for almost 3 years with this strain of bugs alone. More are inevitable.\n\nI really think it should be discussed in some other forum rather than the bug reports, but then I go back and reread this bug, https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d67384 and https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d69930 and realize there\u0027s too much resistance internally to bother with any other discussion.\n\nSo I\u0027ll shut up again and go help Deiter over at EoS. Maybe that will make a difference instead of spinning wheels here.",
    "Neither of the bug reports that you provided have anything to do with a carbon widget behaving or drawing wrong.\n\nBug 67384 deals with interop with AWT/Swing.  When Apple changed AWT from carbon to cocoa, everyone who had any native carbon C code was broken.  That bug is fixed.\n\nBug 69930 asks for a port of SWT to Swing, which would certainly help with this bug report (embedding SWT in Swing), since the underlying SWT widgets would be Swing.",
    "Any reasons why SWT not base on cocoa ? What I know is carbon much more easier to develop and very close to Win32. Is that the reason ?\n\nAny future plan port SWT over to cocoa ?",
    "FYI, As of 18mar2007, MyEclipse 5.1.1 is out and still says \"Though Matisse4MyEclipse is fully integrated into MyEclipse, Macintosh users will be unable to utilize the Matisse4MyEclipse, MyUML, and MyEclipse Image Editor functions due to the long-standing Eclipse SWT_AWT bug #145890.\"\n\nMyEclipse 5.1.1 is based off of Eclipse 3.2.2. \n",
    "(In reply to comment #38)\n\u003e FYI, As of 18mar2007, MyEclipse 5.1.1 is out and still says \"Though\n\u003e Matisse4MyEclipse is fully integrated into MyEclipse, Macintosh users will be\n\u003e unable to utilize the Matisse4MyEclipse, MyUML, and MyEclipse Image Editor\n\u003e functions due to the long-standing Eclipse SWT_AWT bug #145890.\"\nCould the folks from myeclipse help then?\n",
    "I talked to their director of marketing (I believe) at EclipseCon this year, and asked what they were trying to do that wasn\u0027t working. He wasn\u0027t fully aware of what the problems were, but said he would follow up with his engineers. I haven\u0027t heard back yet, but I also have been extremely busy with Leopard work.",
    "As another data point, I\u0027d like to mention that with the changes that were made (thank you!) our Swing Designer tool (the Swing portion of our WindowBuilder Pro product - http://www.windowbuilderpro.com) now works very nicely under OSX, and we have added OSX to our list of supported platforms.",
    "Changing OS from Mac OS to Mac OS X as per bug 185991"
  ],
  "commentCreationDates": [
    "2006-06-08T01:19:45+02:00",
    "2006-06-08T01:23:31+02:00",
    "2006-06-08T16:27:15+02:00",
    "2006-06-11T23:17:07+02:00",
    "2006-06-12T21:31:26+02:00",
    "2006-06-15T19:28:07+02:00",
    "2006-07-18T17:33:16+02:00",
    "2006-07-31T16:27:24+02:00",
    "2006-08-16T04:29:57+02:00",
    "2006-11-27T14:56:42+01:00",
    "2006-11-27T20:39:12+01:00",
    "2006-11-30T08:13:51+01:00",
    "2006-12-10T04:47:31+01:00",
    "2006-12-16T18:30:55+01:00",
    "2007-01-16T16:15:42+01:00",
    "2007-01-16T16:50:17+01:00",
    "2007-01-16T17:07:03+01:00",
    "2007-01-16T19:09:01+01:00",
    "2007-01-16T22:42:47+01:00",
    "2007-01-17T00:29:57+01:00",
    "2007-01-17T00:34:59+01:00",
    "2007-01-17T00:38:29+01:00",
    "2007-01-17T00:55:15+01:00",
    "2007-01-17T01:41:30+01:00",
    "2007-01-17T02:30:11+01:00",
    "2007-01-17T02:32:07+01:00",
    "2007-01-17T07:12:50+01:00",
    "2007-01-19T16:47:57+01:00",
    "2007-01-19T17:35:22+01:00",
    "2007-01-19T22:06:42+01:00",
    "2007-01-25T05:33:04+01:00",
    "2007-01-25T14:27:13+01:00",
    "2007-02-14T18:43:52+01:00",
    "2007-02-14T18:46:08+01:00",
    "2007-02-15T14:04:38+01:00",
    "2007-02-15T17:29:05+01:00",
    "2007-02-15T20:59:22+01:00",
    "2007-02-16T02:17:19+01:00",
    "2007-03-19T13:05:48+01:00",
    "2007-03-20T05:46:17+01:00",
    "2007-03-20T14:58:08+01:00",
    "2007-03-20T15:09:44+01:00",
    "2007-07-29T15:20:12+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTError",
      "message": "Not implemented",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3400"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3268"
        },
        {
          "method": "org.eclipse.swt.awt.SWT_AWT.new_Shell",
          "source": "SWT_AWT.java:162"
        },
        {
          "method": "SwtBrowserTest$1.run",
          "source": "SwtBrowserTest.java:112"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.syncExec",
          "source": "Synchronizer.java:152"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.syncExec",
          "source": "Display.java:3825"
        },
        {
          "method": "SwtBrowserTest$2.run",
          "source": "SwtBrowserTest.java:137"
        },
        {
          "method": "SwtBrowserTest.run",
          "source": "SwtBrowserTest.java:155"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:613"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "145890",
      "date": "2006-06-08T01:19:45+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "blocker"
    }
  ],
  "groupId": "145890",
  "bugId": "145890",
  "date": "2006-06-08T01:19:45+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "blocker"
}