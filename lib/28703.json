{
  "comments": [
    "class Base {\n     /** extend when overriding - must call Base.lockResource() */\n      public void lockResource() { /* ... */ }\n}\n\nclass Derived extends Base {\n      boolean isLocked;\n\n      public void lockResource() {\n              // Whoops: didn\u0027t call super.lockResource()\n              super.lockResource();\n          isLocked \u003d true;\n      }\n}\n \npublic aspect EnsureOverriding pertarget(mustExtend()) {\n    boolean calledSuper \u003d false;\n    pointcut mustExtend() : \n        execution(void Base+.lockResource(..)) \u0026\u0026 !within(Base);\n \n    after () returning: mustExtend() {\n            System.err.println\n(\"returning: \"+calledSuper+\"from \"+thisJoinPoint+\" at \"+this);\n        assert(calledSuper);\n            if (!calledSuper) { throw new RuntimeException(\"bad\"); }\n    }\n \n    after(Base a, Base b) returning: \n            cflow(mustExtend() \u0026\u0026 target(a)) \u0026\u0026 execution(void \nBase.lockResource(..)) \u0026\u0026 target(b) {\n        if (a \u003d\u003d b) {\n                System.err.println(\"made call\");\n            calledSuper \u003d true;\n        }\n    }\n \n     public static void main(String args[]) {\n         (new Derived()).lockResource();\n     }\n}\n \n\nerror output:\n\n \n\nD:\\devel\\test\u003eajc -1.4 EnsureOverriding.aj\n\ntrouble in:\n\npublic class EnsureOverriding extends java.lang.Object implements EnsureOverrid\n\nng$ajcMightHaveAspect:\n\n  boolean calledSuper\n\n  static final boolean $assertionsDisabled [Synthetic]\n\n  static Class class$0 [Synthetic]\n\n  private transient EnsureOverriding ajc$EnsureOverriding$perObjectField\n\n  public static final org.aspectj.runtime.internal.CFlowStack ajc$cflowStack$0\n\n  static void \u003cclinit\u003e():\n\n                    GETSTATIC EnsureOverriding.class$0 Ljava/lang/Class;   (lin\n\n 16)\n\n                    DUP\n\n                    IFNONNULL L0\n\n                    POP\n\n    catch java.lang.ClassNotFoundException -\u003e E0\n\n    |               LDC \"EnsureOverriding\"\n\n    |               INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Lj\n\nva/lang/Class;\n\n    catch java.lang.ClassNotFoundException -\u003e E0\n\n                    DUP\n\n                    PUTSTATIC EnsureOverriding.class$0 Ljava/lang/Class;\n\n                    GOTO L0\n\n                E0: NEW java.lang.NoClassDefFoundError\n\n                    DUP_X1\n\n                    SWAP\n\n                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/S\n\nring;\n\n                    INVOKESPECIAL java.lang.NoClassDefFoundError.\u003cinit\u003e (Ljava/\n\nang/String;)V\n\n                    ATHROW\n\n                L0: INVOKEVIRTUAL java.lang.Class.desiredAssertionStatus ()Z\n\n                    IFNE L1\n\n                    ICONST_1\n\n                    GOTO L2\n\n                L1: ICONST_0\n\n                L2: PUTSTATIC EnsureOverriding.$assertionsDisabled Z\n\n                    RETURN\n\n  end static void \u003cclinit\u003e()\n\n \n\n  public void \u003cinit\u003e():\n\n                    ALOAD_0     // EnsureOverriding this   (line 16)\n\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n\n                    ALOAD_0     // EnsureOverriding this   (line 17)\n\n                    ICONST_0\n\n                    PUTFIELD EnsureOverriding.calledSuper Z\n\n                    RETURN   (line 16)\n\n  end public void \u003cinit\u003e()\n\n \n\n  public void ajc$afterReturning$EnsureOverriding$21b(org.aspectj.lang.JoinPoin\n\n)    AdviceAttribute(afterReturning, mustExtend(), 2, 539)\n\n:\n\n                    GETSTATIC java.lang.System.err Ljava/io/PrintStream;   (lin\n\n 22)\n\n                    NEW java.lang.StringBuffer\n\n                    DUP\n\n                    LDC \"returning: \"\n\n                    INVOKESPECIAL java.lang.StringBuffer.\u003cinit\u003e (Ljava/lang/Str\n\nng;)V\n\n                    ALOAD_0     // EnsureOverriding this\n\n                    GETFIELD EnsureOverriding.calledSuper Z\n\n                    INVOKEVIRTUAL java.lang.StringBuffer.append (Z)Ljava/lang/S\n\nringBuffer;\n\n                    LDC \" from \"\n\n                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Str\n\nng;)Ljava/lang/StringBuffer;\n\n                    ALOAD_1     // org.aspectj.lang.JoinPoint arg0\n\n                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Obj\n\nct;)Ljava/lang/StringBuffer;\n\n                    LDC \" at \"\n\n                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Str\n\nng;)Ljava/lang/StringBuffer;\n\n                    ALOAD_0     // EnsureOverriding this\n\n                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Obj\n\nct;)Ljava/lang/StringBuffer;\n\n                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/\n\ntring;\n\n                    INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/Strin\n\n;)V\n\n                    GETSTATIC EnsureOverriding.$assertionsDisabled Z   (line 23\n\n \n\n                    IFNE L0\n\n                    ALOAD_0     // EnsureOverriding this\n\n                    GETFIELD EnsureOverriding.calledSuper Z\n\n                    IFNE L0\n\n                    NEW java.lang.AssertionError\n\n                    DUP\n\n                    INVOKESPECIAL java.lang.AssertionError.\u003cinit\u003e ()V\n\n                    ATHROW\n\n                L0: ALOAD_0     // EnsureOverriding this   (line 24)\n\n                    GETFIELD EnsureOverriding.calledSuper Z\n\n                    IFNE L1\n\n                    NEW java.lang.RuntimeException\n\n                    DUP\n\n                    LDC \"bad\"\n\n                    INVOKESPECIAL java.lang.RuntimeException.\u003cinit\u003e (Ljava/lang\n\nString;)V\n\n                    ATHROW\n\n                L1: RETURN   (line 25)\n\n  end public void ajc$afterReturning$EnsureOverriding$21b(org.aspectj.lang.Join\n\noint)\n\n \n\n  public void ajc$afterReturning$EnsureOverriding$2f9(Base, Base)    AdviceAttr\n\nbute(afterReturning, (cflow((mustExtend() \u0026\u0026 target(BindingTypePattern(Base, 0)\n\n)) \u0026\u0026 (execution(ExactTypePattern(void) ExactTypePattern(Base).lockResource(..)\n\n \u0026\u0026 target(BindingTypePattern(Base, 1)))), 0, 761)\n\n:\n\n                    ALOAD_1     // Base arg0   (line 29)\n\n                    ALOAD_2     // Base b\n\n                    IF_ACMPNE L0\n\n                    GETSTATIC java.lang.System.err Ljava/io/PrintStream;   (lin\n\n 30)\n\n                    LDC \"made call\"\n\n                    INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/Strin\n\n;)V\n\n                    ALOAD_0     // EnsureOverriding this   (line 31)\n\n                    ICONST_1\n\n                    PUTFIELD EnsureOverriding.calledSuper Z\n\n                L0: RETURN   (line 33)\n\n  end public void ajc$afterReturning$EnsureOverriding$2f9(Base, Base)\n\n \n\n  public static void main(String[]):\n\n                    NEW Derived   (line 36)\n\n                    DUP\n\n                    INVOKESPECIAL Derived.\u003cinit\u003e ()V\n\n                    INVOKEVIRTUAL Derived.lockResource ()V\n\n                    RETURN   (line 37)\n\n  end public static void main(String[])\n\n \n\n  public static EnsureOverriding aspectOf(Object)    org.aspectj.weaver.AjAttri\n\nute$AjSynthetic@16546ef\n\n:\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    INSTANCEOF EnsureOverriding$ajcMightHaveAspect\n\n                    IFEQ L1\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    CHECKCAST EnsureOverriding$ajcMightHaveAspect\n\n                    INVOKEINTERFACE EnsureOverriding$ajcMightHaveAspect.ajc$Ens\n\nreOverriding$perObjectGet ()LEnsureOverriding;\n\n                    DUP\n\n                    IFNULL L0\n\n                    ARETURN\n\n                L0: POP\n\n                L1: NEW org.aspectj.lang.NoAspectBoundException\n\n                    DUP\n\n                    INVOKESPECIAL org.aspectj.lang.NoAspectBoundException.\u003cinit\n\n ()V\n\n                    ATHROW\n\n  end public static EnsureOverriding aspectOf(Object)\n\n \n\n  public static boolean hasAspect(Object)    org.aspectj.weaver.AjAttribute$AjS\n\nnthetic@1428ea\n\n:\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    INSTANCEOF EnsureOverriding$ajcMightHaveAspect\n\n                    IFEQ L0\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    CHECKCAST EnsureOverriding$ajcMightHaveAspect\n\n                    INVOKEINTERFACE EnsureOverriding$ajcMightHaveAspect.ajc$Ens\n\nreOverriding$perObjectGet ()LEnsureOverriding;\n\n                    IFNULL L0\n\n                    ICONST_1\n\n                    IRETURN\n\n                L0: ICONST_0\n\n                    IRETURN\n\n  end public static boolean hasAspect(Object)\n\n \n\n  public static void ajc$perObjectBind(Object)    org.aspectj.weaver.AjAttribut\n\n$AjSynthetic@18a49e0\n\n:\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    INSTANCEOF EnsureOverriding$ajcMightHaveAspect\n\n                    IFEQ L0\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    CHECKCAST EnsureOverriding$ajcMightHaveAspect\n\n                    INVOKEINTERFACE EnsureOverriding$ajcMightHaveAspect.ajc$Ens\n\nreOverriding$perObjectGet ()LEnsureOverriding;\n\n                    IFNONNULL L0\n\n                    ALOAD_0     // java.lang.Object arg0\n\n                    CHECKCAST EnsureOverriding$ajcMightHaveAspect\n\n                    NEW EnsureOverriding\n\n                    DUP\n\n                    INVOKESPECIAL EnsureOverriding.\u003cinit\u003e ()V\n\n                    INVOKEINTERFACE EnsureOverriding$ajcMightHaveAspect.ajc$Ens\n\nreOverriding$perObjectSet (LEnsureOverriding;)V\n\n                L0: RETURN\n\n  end public static void ajc$perObjectBind(Object)\n\n \n\n  public EnsureOverriding ajc$EnsureOverriding$perObjectGet():\n\n                    ALOAD_0\n\n                    GETFIELD EnsureOverriding.ajc$EnsureOverriding$perObjectFie\n\nd LEnsureOverriding;\n\n                    ARETURN\n\n  end public EnsureOverriding ajc$EnsureOverriding$perObjectGet()\n\n \n\n  public void ajc$EnsureOverriding$perObjectSet(EnsureOverriding):\n\n                    ALOAD_0\n\n                    ALOAD_1\n\n                    PUTFIELD EnsureOverriding.ajc$EnsureOverriding$perObjectFie\n\nd LEnsureOverriding;\n\n                    RETURN\n\n  end public void ajc$EnsureOverriding$perObjectSet(EnsureOverriding)\n\nend public class EnsureOverriding\n\nException thrown from AspectJ 1.1b2\n\n \n\nThis might be logged as a bug already -- see the bug database at\n\n  http://dev.eclipse.org (product: AspectJ, component: compiler)\n\n \n\nBugs for exceptions thrown have titles File:line from the top stack,\n\ne.g., \"SomeFile.java:243\"\n\n \n\nIf you don\u0027t find the exception below in a bug, please add a new bug\n\nTo make the bug a priority, please include a test program\n\nthat can reproduce this exception.\n\nunimplemented\n\nunimplemented\n\njava.lang.RuntimeException: unimplemented\n\n        at org.aspectj.weaver.bcel.LazyClassGen.getAjcClinit(Unknown Source)\n\n        at org.aspectj.weaver.bcel.BcelCflowStackFieldAdder.munge(Unknown Sourc\n\n)\n\n        at org.aspectj.weaver.bcel.BcelClassWeaver.weave(Unknown Source)\n\n        at org.aspectj.weaver.bcel.BcelClassWeaver.weave(Unknown Source)\n\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source)\n\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source)\n\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenera\n\neClassFiles(Unknown Source)\n\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unk\n\nown Source)\n\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)\n\n        at org.aspectj.tools.ajc.Main.run(Unknown Source)\n\n        at org.aspectj.tools.ajc.Main.runMain(Unknown Source)\n\n        at org.aspectj.tools.ajc.Main.main(Unknown Source)\n\n \n\n \n\n1 fail|abort",
    "fixed in cvs tree, test case in tests/bugs/EnsureOverriding.java"
  ],
  "commentCreationDates": [
    "2002-12-19T23:00:23+01:00",
    "2003-01-07T20:34:39+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "unimplemented",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.LazyClassGen.getAjcClinit",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelCflowStackFieldAdder.munge",
          "source": "Unknown Sourc  "
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGeneraeClassFiles",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "Unk  own Source"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "28703",
      "date": "2002-12-19T23:00:23+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    }
  ],
  "groupId": "28703",
  "bugId": "28703",
  "date": "2002-12-19T23:00:23+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "blocker"
}