{
  "comments": [
    "Running with the version of XSLTMediationTest in track\n213001, which allows the calling method to specify\nif the main test method is to use System.out.println or\nnot, I get a ConcurrentModificationException from the\ndepths of emf if I disable the calls to System.out.println!\n\njava.util.ConcurrentModificationException\n       at org.eclipse.emf.common.util.DelegatingEList$EIterator.checkModCount\n(DelegatingEList.java:997)\n       at org.eclipse.emf.common.util.DelegatingEList$EIterator.next\n(DelegatingEList.java:944)\n       at \norg.eclipse.emf.ecore.util.EContentsEList$FeatureIteratorImpl.scanNext\n(EContentsEList.java(Compiled Code))\n       at org.eclipse.emf.ecore.util.EContentsEList$FeatureIteratorImpl.hasNext\n(EContentsEList.java(Compiled Code))\n       at com.ibm.ws.sib.mfp.sdo.SdoEncapsulation$DataGraphMonitor.setAdapter\n(SdoEncapsulation.java:522)\n\n\n\n    \u003cNote by mlovett (Lovett, Matthew (Matt)), 2004/09/07 12:51:28, seq: 3 \nrel: 0  action: note\u003e\nIn the face of it this looks like a SDO problem. Kelvin\u0027s store\nimplementation allows for \u0027lazy parsing\u0027 - e.g. the Store only\nparses the data when it is really needed. Within the SDO code\nthey are using an iterator to go over the values of an EStoreList,\nbut the list is updated (by the Store) when the iterator is used...\nand the iterator thinks that\u0027s an error.\n\nHere\u0027s a snip of the code in EContentsEList::hasNext():\n\n                Object value \u003d eObject.eGet(feature, resolve());\n                isHandlingFeatureMap \u003d FeatureMapUtil.isFeatureMap(feature);\n                if (isHandlingFeatureMap || feature.isMany())\n                {\n                  values \u003d resolve() ? ((List)value).listIterator() : \n((InternalEList)value).basicListIterator();\n                  if (scanNext(values))\n                  {\n                    preparedResult \u003d values.next();\n\nIn this context, values is a EStoreObjectImpl$EStoreList. The scanNext()\ncall forces some more parsing... and then the call to values.next() blows\nup, as the iterator doesn\u0027t like the underlying list being updated.\n\nI think a fix is to make EStoreList produce iterators that do allow parsing\nto continue without trapping errors. Alternatively, perhaps Kelvin shouldn\u0027t\nbe using the EStoreList to push updates into his data graph... the store\nshould be able to set new values in there without going through the StoreList\nthat front-ends the store.\n\nKelvin, what do you think?\n\n    \u003cNote by mlovett (Lovett, Matthew (Matt)), 2004/09/08 09:59:35, seq: 4 \nrel: 0  action: assign\u003e\nI\u0027ve had a talk to Kelvin, and it\u0027s a core part of his design\nthat he uses the SDO API to populate his store - and he and Ed\ndiscussed that, so I think it must be a design goal to allow it.\n\nGiven that, I think we need a fix from SDO-land, so over to you!\n\nCheers, Matt",
    "It seems that the problem is happening on the store itself.  I may be wrong \nbut the comments give the impression that the list is being populated as it is \nnavigated which is a design that usually leads to Concurrent Exceptions.\n\nI am returning the defect because we can\u0027t reproduce the problem.  Feel free \nto reopen it if you can provide a small test case that throws the exception."
  ],
  "commentCreationDates": [
    "2004-09-08T18:21:40+02:00",
    "2004-09-08T22:03:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.ConcurrentModificationException",
      "elements": [
        {
          "method": "org.eclipse.emf.common.util.DelegatingEList$EIterator.checkModCount",
          "source": "DelegatingEList.java:997"
        },
        {
          "method": "org.eclipse.emf.common.util.DelegatingEList$EIterator.next",
          "source": "DelegatingEList.java:944"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EContentsEList$FeatureIteratorImpl.scanNext",
          "source": "EContentsEList.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EContentsEList$FeatureIteratorImpl.hasNext",
          "source": "EContentsEList.java(Compiled Code)"
        },
        {
          "method": "com.ibm.ws.sib.mfp.sdo.SdoEncapsulation$DataGraphMonitor.setAdapter",
          "source": "SdoEncapsulation.java:522"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "73462",
      "date": "2004-09-08T18:21:40+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "73462",
  "bugId": "73462",
  "date": "2004-09-08T18:21:40+02:00",
  "product": "EMF",
  "component": "Core",
  "severity": "normal"
}