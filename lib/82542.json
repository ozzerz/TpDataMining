{
  "comments": [
    "I20050104-1600 + ZRH plugin export 200501111141 (JDT Core v530b)\n\njava.lang.ArrayIndexOutOfBoundsException: Array index out of range: 0\nat org.eclipse.jdt.core.compiler.CharOperation.pathMatch\n(CharOperation.java:1856)\nat org.eclipse.jdt.internal.compiler.util.Util.isExcluded(Util.java:488)\nat \norg.eclipse.jdt.internal.compiler.env.AccessRestriction.getViolatedRestriction\n(AccessRestriction.java:81)\nat org.eclipse.jdt.internal.core.SearchableEnvironment.find\n(SearchableEnvironment.java:113)\nat org.eclipse.jdt.internal.core.SearchableEnvironment.findType\n(SearchableEnvironment.java:198)\nat org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType\n(CancelableNameEnvironment.java:45)\nat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType\n(LookupEnvironment.java:119)\nat org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage\n(PackageBinding.java:176)\nat org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport\n(CompilationUnitScope.java:371)\nat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport\n(CompilationUnitScope.java:424)\nat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.resolveSingleImpo\nrt(CompilationUnitScope.java:586)\nat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java:2204)\nat org.eclipse.jdt.internal.compiler.lookup.Scope.getType(Scope.java:1988)\nat org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding\n(SingleTypeReference.java:39)\nat org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType\n(TypeReference.java:141)\nat org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType\n(TypeReference.java:104)\nat org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype\n(ClassScope.java:1066)\nat org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass\n(ClassScope.java:725)\nat org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy\n(ClassScope.java:861)\nat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierar\nchy(CompilationUnitScope.java:243)\nat \norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings\n(LookupEnvironment.java:195)\nat org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:307)\nat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve\n(CompilationUnitResolver.java:755)\nat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve\n(CompilationUnitResolver.java:464)\nat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:759)\nat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:575)\nat org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST\n(ASTProvider.java:563)\nat org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST\n(ASTProvider.java:494)\nat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartLis\ntenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:165)\nat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run\n(SelectionListenerWithASTManager.java:142)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "The version of JDT Core is actually HEAD",
    "From the stack trace, I\u0027m not sure how this can happen. Do you have steps to\nreproduce ?",
    "I am sorry, I can\u0027t give any specific details.\n\nIt seems that only arbitrary source code from JDT UI which is opened in the \njava editor (from source) triggers the exception.\n\nThe stack trace shows that AccessRestriction#getViolatedRestriction(..) \nreceives an empty char array as target type name, but the following string \noperations are designed to handle either null or a non-empty array.",
    "We could work around the problem, but it indicates a deeper problem as the path\nshould never be of length 0.",
    "Increased severity since I can\u0027t use I2005011-0800 for self hosting.",
    "I got this with my development workspace when I started up I20050111-0800.\n\nI guess the problem is that external archives are not handled properly. In\nCancelableNameEnvironment(SearchableEnvironment).find(String, String) line: 113,\nI see this situation on startup:\n\ntypeName\u003d \"IAdaptable\"\npackageName\u003d \"org.eclipse.core.runtime\"\ntypePath\u003d Path  (/org.eclipse.core.runtime/runtime.jar)\nrootPath\u003d Path  (/org.eclipse.core.runtime/runtime.jar)\n\ntype.getPath() of a binary type returns only the path of the archive, which\nhappens to be the same as the path to the package fragment root.\n\nI have org.eclipse.core.runtime imported as binary project.",
    "Workaround is to set preference Java\u003eCompiler\u003eBuilding\u003eType restriction\u003eAccess\nrestriction violation to Ignore",
    "Thanks Markus for the test case.\n\nFixed SearchableEnvironment#find(String,String) and\nSearchableEnvironmentRequestor#acceptType(IType) to handle the case where the\ntype comes from a jar. In this case, build a relative path (e.g.\njava/lang/Object.class).\n\nAdded regression test ReconcilerTests#testAccessRestriction2().",
    "*** Bug 82762 has been marked as a duplicate of this bug. ***",
    "*** Bug 82842 has been marked as a duplicate of this bug. ***",
    "Verified in I20050214-0927"
  ],
  "commentCreationDates": [
    "2005-01-11T11:33:32+01:00",
    "2005-01-11T11:40:23+01:00",
    "2005-01-11T11:42:19+01:00",
    "2005-01-11T12:02:33+01:00",
    "2005-01-11T12:23:01+01:00",
    "2005-01-11T16:07:50+01:00",
    "2005-01-11T16:10:16+01:00",
    "2005-01-11T16:31:23+01:00",
    "2005-01-11T18:21:09+01:00",
    "2005-01-14T12:27:37+01:00",
    "2005-01-14T15:00:15+01:00",
    "2005-02-15T12:54:51+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "Array index out of range: 0",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.compiler.CharOperation.pathMatch",
          "source": "CharOperation.java:1856"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.util.Util.isExcluded",
          "source": "Util.java:488"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.env.AccessRestriction.getViolatedRestriction",
          "source": "AccessRestriction.java:81"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SearchableEnvironment.find",
          "source": "SearchableEnvironment.java:113"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SearchableEnvironment.findType",
          "source": "SearchableEnvironment.java:198"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CancelableNameEnvironment.findType",
          "source": "CancelableNameEnvironment.java:45"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:119"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage",
          "source": "PackageBinding.java:176"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport",
          "source": "CompilationUnitScope.java:371"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport",
          "source": "CompilationUnitScope.java:424"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.resolveSingleImport",
          "source": "CompilationUnitScope.java:586"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java:2204"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getType",
          "source": "Scope.java:1988"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding",
          "source": "SingleTypeReference.java:39"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType",
          "source": "TypeReference.java:141"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType",
          "source": "TypeReference.java:104"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:1066"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass",
          "source": "ClassScope.java:725"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:861"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:243"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:195"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.beginToCompile",
          "source": "Compiler.java:307"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:755"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:464"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.internalCreateAST",
          "source": "ASTParser.java:759"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createAST",
          "source": "ASTParser.java:575"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST",
          "source": "ASTProvider.java:563"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST",
          "source": "ASTProvider.java:494"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java:165"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run",
          "source": "SelectionListenerWithASTManager.java:142"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "82542",
      "date": "2005-01-11T11:33:32+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "82542",
  "bugId": "82542",
  "date": "2005-01-11T11:33:32+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}