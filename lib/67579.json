{
  "comments": [
    "package b;\n\nimport a.*;\n\nprivileged aspect B {\n  void blah(ITD x) { x.returnNothing(\"y\"); }\n}\n\npackage a;\n\npublic class ITD {\n    private void returnNothing(Object a) {\n    }\n}\n\nOutput:\nC:\\devel\\test\\priv\u003eajc a\\ITD.aj b\\B.aj\nC:\\devel\\test\\priv\\b\\B.aj error Internal compiler error\njava.lang.NullPointerException\n        at \norg.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding\n.initializeMethodAccessor(SyntheticAccessMethodBinding.java:286)\n        at \norg.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding\n.\u003cinit\u003e(SyntheticAccessMethodBinding.java:138)\n        at \norg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSynthet\nicMethod(SourceTypeBinding.java:342)\n        at \norg.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAcce\nssIfNecessary(MessageSend.java:140)\n        at org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode\n(Message\nSend.java:50)\n        at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode\n(M\nethodDeclaration.java:70)\n        at \norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyse\nCode(TypeDeclaration.java:706)\n        at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode\n(Typ\neDeclaration.java:262)\n        at \norg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.anal\nyseCode(CompilationUnitDeclaration.java:77)\n        at org.eclipse.jdt.internal.compiler.Compiler.process\n(Compiler.java:554)\n\n        at org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:358)\n\n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat\nion(AjBuildManager.java:601)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuild\nManager.java:160)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBu\nildManager.java:94)\n        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:102)\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)\n        at org.aspectj.tools.ajc.Main.run(Main.java:280)\n        at org.aspectj.tools.ajc.Main.runMain(Main.java:217)\n        at org.aspectj.tools.ajc.Main.main(Main.java:79)\n\n(no source information available)\nABORT\n\nException thrown from AspectJ 1.2\n\nThis might be logged as a bug already -- find current bugs at\n  http://bugs.eclipse.org/bugs/buglist.cgi?product\u003dAspectJ\u0026component\u003dCompiler\n\nBugs for exceptions thrown have titles File:line from the top stack,\ne.g., \"SomeFile.java:243\"\n\nIf you don\u0027t find the exception below in a bug, please add a new bug\nat http://bugs.eclipse.org/bugs/enter_bug.cgi?product\u003dAspectJ\nTo make the bug a priority, please include a test program\nthat can reproduce this exception.\nnull\njava.lang.NullPointerException\n        at \norg.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding\n.initializeMethodAccessor(SyntheticAccessMethodBinding.java:286)\n        at \norg.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding\n.\u003cinit\u003e(SyntheticAccessMethodBinding.java:138)\n        at \norg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSynthet\nicMethod(SourceTypeBinding.java:342)\n        at \norg.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAcce\nssIfNecessary(MessageSend.java:140)\n        at org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode\n(Message\nSend.java:50)\n        at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode\n(M\nethodDeclaration.java:70)\n        at \norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyse\nCode(TypeDeclaration.java:706)\n        at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode\n(Typ\neDeclaration.java:262)\n        at \norg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.anal\nyseCode(CompilationUnitDeclaration.java:77)\n        at org.eclipse.jdt.internal.compiler.Compiler.process\n(Compiler.java:554)\n\n        at org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:358)\n\n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat\nion(AjBuildManager.java:601)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuild\nManager.java:160)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBu\nildManager.java:94)\n        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:102)\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)\n        at org.aspectj.tools.ajc.Main.run(Main.java:280)\n        at org.aspectj.tools.ajc.Main.runMain(Main.java:217)\n        at org.aspectj.tools.ajc.Main.main(Main.java:79)\n\n\n1 fail|abort, 1 error",
    "Appears to be related to bug #67578.",
    "marked as target 1.2.1",
    "Ok, after constantly getting confused on this bug because Ron called one of the\ntest classes ITD :), I have now worked it out.  It seems to me that using\nprivileged to enable the calling of private methods really can\u0027t be working very\nwell !\n\nThe code was getting in a real mess when working out the accessor method\nrequired.  AspectJ wants to create an accessor for the returnNothing() method\nwith a name something like ajc$privMethod$\u003cblahblah\u003e.  Now there is accessor\nmethod support for some method references built into the JDT compiler and the\ngenerated accessors have names like access$0() (I think its for things like\ncalling private methods on a type from an inner type).  These JDT accessors are\nnot for making private methods globally accessible so they have default\n(package) level visibility, unlike the AJC accessors which are declared public.\n\nWhat is currently happening is that when we first try a visibility test to check\nif the aspect can see the method in class ITD, we work out that we should be\nable to even though it is private, because we are privileged.  The privileged\nhandler assigned to the aspect generates a new method accessor in class ITD:\n\npublic void ajc$privMethod$b_B$a_ITD$returnNothing(Object obj) {\n  returnNothing(obj);\n}\n\nThat is great.\n\nThen, later on when we are processing the call to the private method in the\naspect (x.returnNothing(\"y\")).  This drops us into\nMessageSend.manageSyntheticAccessIfNecessary().  This method has an AspectJ\nchange in to cope with ITDs but not to cope with private accessors.  Without any\nsupport for identifying calls that are allowed due to the privileged keyword we\nactually generate a JDT accessor of the form access$0() in the ITD class.  This\naccidentally works when the classes are in the same package because the JDT\ngenerated accessor is default (package) visible.  When the two types are in\ndifferent packages the access$0() method can\u0027t be seen and we fail.  The NPE\nactually reported in the bug is because we are getting much further on through\nthis processing than we should be.\n\nIf you javap what ajc currently produces for two types in the same package that\nlook like those below, you will see there are multiple accessors in the class,\nwhen there should only be one and the aspect will contain calls to the wrong\naccessor.\n\nThe fix is in two parts:\n\n- Modify the manageSyntheticAccessIfNecessary() method to check for a privileged\naccessor when the method being called is private.\n- Modify MessageSend.generateCode() to allow for non-static accessors (i.e. the\nAspectJ ones) and use invokevirtual in these cases.\n\nThis addresses both bugs on this issue (67578,67579) and is possibly the hardest\nbug I\u0027ve ever fixed.",
    "I might have spoken too soon about the fix for this also addressing 67578 ...\ninvestigating now ...",
    "FIXED!\n\nFix available in:\n\nBUILD COMPLETE -  build.342\nDate of build: 08/16/2004 18:17:03\nTime to build: 97 minutes 49 seconds\nLast changed: 08/16/2004 17:44:55\nLatest good AspectJ jar available at:\ndownload.eclipse.org/technology/ajdt/dev/aspectj-DEVELOPMENT.jar\n",
    "Fix released as part of AspectJ 1.2.1"
  ],
  "commentCreationDates": [
    "2004-06-17T07:50:05+02:00",
    "2004-06-17T07:50:52+02:00",
    "2004-08-09T21:26:53+02:00",
    "2004-08-16T12:00:28+02:00",
    "2004-08-16T12:32:26+02:00",
    "2004-08-16T21:32:40+02:00",
    "2004-10-21T10:31:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding.initializeMethodAccessor",
          "source": "SyntheticAccessMethodBinding.java:286"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding.\u003cinit\u003e",
          "source": "SyntheticAccessMethodBinding.java:138"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod",
          "source": "SourceTypeBinding.java:342"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary",
          "source": "MessageSend.java:140"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode",
          "source": "Message Send.java:50"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode",
          "source": "M ethodDeclaration.java:70"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode",
          "source": "TypeDeclaration.java:706"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode",
          "source": "Typ eDeclaration.java:262"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode",
          "source": "CompilationUnitDeclaration.java:77"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:554"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:358"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:601"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuild Manager.java:160"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBu ildManager.java:94"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:102"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:53"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:280"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:217"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:79"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "67579",
      "date": "2004-06-17T07:50:05+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding.initializeMethodAccessor",
          "source": "SyntheticAccessMethodBinding.java:286"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SyntheticAccessMethodBinding.\u003cinit\u003e",
          "source": "SyntheticAccessMethodBinding.java:138"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticMethod",
          "source": "SourceTypeBinding.java:342"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary",
          "source": "MessageSend.java:140"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode",
          "source": "Message Send.java:50"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode",
          "source": "M ethodDeclaration.java:70"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode",
          "source": "TypeDeclaration.java:706"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode",
          "source": "Typ eDeclaration.java:262"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode",
          "source": "CompilationUnitDeclaration.java:77"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:554"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:358"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:601"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuild Manager.java:160"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBu ildManager.java:94"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:102"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:53"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:280"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:217"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:79"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "67579",
      "date": "2004-06-17T07:50:05+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "67579",
  "bugId": "67579",
  "date": "2004-06-17T07:50:05+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}