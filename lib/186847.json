{
  "comments": [
    "Build ID: 200705021527\n\nWhile IDE-based builds are great for development, eventually all larger projects need to perform automated, command-line builds. Since the new CDT 4.0 internal builder creates no makefile artifacts, automated, command line builds cannot be performed. \n\nIs there a headless way to perform CDT builds, as there is for ant via org.eclipse.ant.core.antRunner?",
    "I can see several ways of enabling the command line builds for the Internal Builder-based projects:\n\n1. run/start eclipse from command line and tell it to build the specified project and then shut down. A support for such command line options should be implemented in eclipse/CDT. This approach is the most generic one since it would support building any kind of projects, not CDT only.\n\n2. even though the Internal Builder is used for the project, it could be possible to export the buildfile to be used for building the project from the command line. This could be a makefile of any format, e.g. a gnu make, ant, etc. For the gnu makefile generation the current GnuMakefileGenerator could be used. As for the ant cripts, the ant script generator could be implemented using the Build Model framework available in the build system.\n\nMikhail",
    "I would have thought that option 1 would already be there. If not, it should be an easy task to create an application that invokes the build on the workspace.",
    "I wonder how do the Eclipse+CDT users manage to have automated builds, without this feature.\n\nIdeally, I\u0027d like a command like this:\n\n     $ eclipse build myproject mytarget\n\n(could have another name, cdtbuild, or whatever).\n\nOther IDEs open the GUI, execute the build, and close it automatically, but I find it preferable if the command executes without GUI, only with the console output. \n\nThe command should exit with a value of 0, if the build finish with success.\n\nWith such command it would be easy to integrate Eclipse in our centraliced build and packaging system.",
    "This should be easy to implement and I\u0027m disappointed no one has given this a try.\n\nEclipse allows you to specify the id of an org.eclipse.core.runtime.application extension on the commandline using -application. The application is simply an IApplication class that has a start method that will let you do pretty much anything. One of the things it could do is automate everything you need to do a build.\n\nThe big question is whether the APIs necessary to do things like check out source area available to you. Running the build, though, should be as easy as invoking the build method on the IWorkspace.",
    "I agree with Doug that it \u0027ought to be easy...\u0027, but there are obstacles that must be removed first.\n\nWe have our own application intended for headless execution, but it gets tripped up by dependencies on UI plugins.\n\nSo, I have two questions.\n  1. What triggered the PDOMManager to run?\n  2. Why does CDT variable resolution depend on UI?\n\n!ENTRY org.eclipse.osgi 4 0 2007-11-01 14:26:10.160\n!MESSAGE An error occurred while automatically activating bundle org.eclipse.debug.ui (2088).\n!STACK 0\norg.osgi.framework.BundleException: Exception in org.eclipse.debug.internal.ui.DebugUIPlugin.start() of bundle org.eclipse.debug.ui.\n  at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(Unknown Source)\n  at org.eclipse.osgi.framework.util.SecureAction.start(Unknown Source)\n  at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(Unknown Source)\n  at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(Unknown Source)\n  at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(Unknown Source)\n  at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(Unknown Source)\n  at java.lang.ClassLoader.loadClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(Unknown Source)\n  at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.variables.DynamicVariable.getValue(Unknown Source)\n  at org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.loadValue(Unknown Source)\n  at org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.getStringValue(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider$VariableWrapper.getStringValue(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.getResolvedMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolve(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolveToString(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider.resolveValue(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.core.Builder.getBuildLocation(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.core.ManagedBuildManager.getBuildFullPath(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.core.Builder.getDefaultOutputSettings(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.core.Builder.getOutputEntries(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.dataprovider.BuildBuildData.getOutputDirectories(Unknown Source)\n  at org.eclipse.cdt.core.settings.model.extension.impl.CDefaultBuildData.copySettingsFrom(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CBuildSettingCache.\u003cinit\u003e(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.copyBuildData(Unknown Source)\n  at org.eclipse.cdt.core.settings.model.extension.impl.CDefaultConfigurationData.copySettingsFrom(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.loadData(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescription.loadDatas(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.loadProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.pdom.PDOMManager.isFullyCreated(Unknown Source)\n  at org.eclipse.cdt.internal.core.pdom.PDOMManager.access$0(Unknown Source)\n  at org.eclipse.cdt.internal.core.pdom.PDOMManager$3.run(Unknown Source)\n  at org.eclipse.core.internal.jobs.Worker.run(Unknown Source)\nCaused by: java.lang.IllegalStateException: Workbench has not been created yet.\n  at org.eclipse.ui.PlatformUI.getWorkbench(Unknown Source)\n  at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.startup(Unknown Source)\n  at org.eclipse.debug.internal.ui.DebugUIPlugin.getLaunchingResourceManager(Unknown Source)\n  at org.eclipse.debug.internal.ui.DebugUIPlugin.start(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(Unknown Source)\n  at java.security.AccessController.doPrivileged(Unknown Source)\n  ... 53 more\nRoot exception:\njava.lang.IllegalStateException: Workbench has not been created yet.\n  at org.eclipse.ui.PlatformUI.getWorkbench(Unknown Source)\n  at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.startup(Unknown Source)\n  at org.eclipse.debug.internal.ui.DebugUIPlugin.getLaunchingResourceManager(Unknown Source)\n  at org.eclipse.debug.internal.ui.DebugUIPlugin.start(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(Unknown Source)\n  at java.security.AccessController.doPrivileged(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(Unknown Source)\n  at org.eclipse.osgi.framework.util.SecureAction.start(Unknown Source)\n  at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(Unknown Source)\n  at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(Unknown Source)\n  at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(Unknown Source)\n  at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(Unknown Source)\n  at java.lang.ClassLoader.loadClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(Unknown Source)\n  at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(Unknown Source)\n  at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(Unknown Source)\n  at org.eclipse.core.internal.variables.DynamicVariable.getValue(Unknown Source)\n  at org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.loadValue(Unknown Source)\n  at org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.getStringValue(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider$VariableWrapper.getStringValue(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.getResolvedMacro(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolve(Unknown Source)\n  at org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolveToString(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider.resolveValue(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.core.Builder.getBuildLocation(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.core.ManagedBuildManager.getBuildFullPath(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.core.Builder.getDefaultOutputSettings(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.core.Builder.getOutputEntries(Unknown Source)\n  at org.eclipse.cdt.managedbuilder.internal.dataprovider.BuildBuildData.getOutputDirectories(Unknown Source)\n  at org.eclipse.cdt.core.settings.model.extension.impl.CDefaultBuildData.copySettingsFrom(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CBuildSettingCache.\u003cinit\u003e(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.copyBuildData(Unknown Source)\n  at org.eclipse.cdt.core.settings.model.extension.impl.CDefaultConfigurationData.copySettingsFrom(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.loadData(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescription.loadDatas(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.loadProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription(Unknown Source)\n  at org.eclipse.cdt.internal.core.pdom.PDOMManager.isFullyCreated(Unknown Source)\n  at org.eclipse.cdt.internal.core.pdom.PDOMManager.access$0(Unknown Source)\n  at org.eclipse.cdt.internal.core.pdom.PDOMManager$3.run(Unknown Source)\n  at org.eclipse.core.internal.jobs.Worker.run(Unknown Source)\n",
    "Cool. Thanks for looking into this Keith.\n\nThe variables thing depends on a component to process the variable. For example resourceLoc takes a parameter which is the name of the resource and that gets resolved into an actual file location. Unfortunately, I think that component is a UI component. I remember looking at this and figuring it was a really broken architecture. This proves it.\n\nThe PDOMManager runs all the time. It must have gotten a resource delta and was processing it. We may want to have a facility to turn this off in the application.",
    "org.eclipse.debug.ui contributes several org.eclipse.core.variables.dynamicVariables.\nThe only ones that I suspect actually depend on UI are:\n\n  file_prompt\n  folder_prompt\n  selected_text\n  string_prompt\n\nThe remaining variables probably belong in org.eclipse.core.resources:\n\n  container_loc\n  container_name\n  container_path\n  project_loc\n  project_name\n  project_path\n  resource_loc\n  resource_name\n  resource_path\n  workspace_loc\n\nThat would probably go a long way towards enabling headless use of CDT.",
    "(In reply to comment #6)\n\u003e Cool. Thanks for looking into this Keith.\n\u003e \n\u003e The variables thing depends on a component to process the variable. For example\n\u003e resourceLoc takes a parameter which is the name of the resource and that gets\n\u003e resolved into an actual file location. Unfortunately, I think that component is\n\u003e a UI component. I remember looking at this and figuring it was a really broken\n\u003e architecture. This proves it.\n\u003e \n\u003e The PDOMManager runs all the time. It must have gotten a resource delta and was\n\u003e processing it. We may want to have a facility to turn this off in the\n\u003e application.\n\u003e \n\nI agree that the variable resolution thing should be fixed by the platform.  Keith, you should file a separate bug for that.\n\nIn the short term, the variables in this stack trace won\u0027t be asked for if the PDOMManager isn\u0027t running.  It should be pretty easy to put in something that turns this off.  Keith (or whomever), if you want to submit a patch for this we can have a look.  If it\u0027s not too disruptive we might be able to do something for 4.0.x but it will depend on how risky it is.",
    "Would the build not ask for these variables?",
    "(In reply to comment #9)\n\u003e Would the build not ask for these variables?\n\u003e \n\nThe answer is \"it depends.\"  Unless something has changed recently, the builder by default doesn\u0027t try to use any of these variables.  However, the ISV can use variables in their toolchain definition, and the user can use variables in the values of their build options etc.\n\nSo, I think you can perhaps get it to work, but you\u0027d have to get around the PDOM issue first, which you probably want to do for performance reasons anyway.  If you\u0027re just doing an automated build, you don\u0027t necessarily need to build the index.\n\nHowever, this brings up an interesting problem.  I had been thinking in terms of the generated makefile builder, but the reporter is using the internal builder.  The internal builder uses the index for dependency calculation... so if you prevent the PDOM manager from starting up, you won\u0027t be able to respond to dependency changes and do incremental builds based on them.  Maybe this doesn\u0027t matter... automated builds are usually of the \"clean all\" variety.",
    "(In reply to comment #8)\nI opened bug 208484 on which this one depends.\n\n(In reply to comment #9)\n\u003e Would the build not ask for these variables?\nYes, I would expect the build to use the variables too.\n\nThe first response to bug 208484 was this:\n\u003e All of these variables work on the selected resource when there is no argument,\n\u003e which requires the UI.\nI checked, and with the exception of \u0027workspace_loc\u0027, it appears this is true. They could probably be made to fail if there\u0027s no argument when running headless, but I suspect that idea will be harder to sell. The best option for the CDT, IMHO, is to avoid using any of the variables provided by org.eclipse.debug.ui. I think the best place for a replacement for \u0027workspace_loc\u0027 (the only variable I saw in use) is org.eclipse.core.resources, but it will be easier to coordinate if it\u0027s simply added to the CDT.\n\n(In reply to comment #10)\nI think the variables are used by both the internal and external builders. The internal builder uses the variables to build the commands for execution. The external builder uses the variables to build the commands for insertion into a makefile."
  ],
  "commentCreationDates": [
    "2007-05-14T19:50:19+02:00",
    "2007-07-05T12:12:00+02:00",
    "2007-07-05T16:30:47+02:00",
    "2007-09-11T15:48:55+02:00",
    "2007-09-11T17:18:31+02:00",
    "2007-11-01T19:50:09+01:00",
    "2007-11-01T20:45:56+01:00",
    "2007-11-01T21:56:47+01:00",
    "2007-11-02T13:57:54+01:00",
    "2007-11-02T14:38:55+01:00",
    "2007-11-02T15:36:11+01:00",
    "2007-11-02T15:51:35+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "Exception in org.eclipse.debug.internal.ui.DebugUIPlugin.start() of bundle org.eclipse.debug.ui.",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.util.SecureAction.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.variables.DynamicVariable.getValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.loadValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.getStringValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider$VariableWrapper.getStringValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.getResolvedMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolve",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolveToString",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider.resolveValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.core.Builder.getBuildLocation",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.core.ManagedBuildManager.getBuildFullPath",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.core.Builder.getDefaultOutputSettings",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.core.Builder.getOutputEntries",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.dataprovider.BuildBuildData.getOutputDirectories",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.core.settings.model.extension.impl.CDefaultBuildData.copySettingsFrom",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CBuildSettingCache.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.copyBuildData",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.core.settings.model.extension.impl.CDefaultConfigurationData.copySettingsFrom",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.loadData",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescription.loadDatas",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.loadProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.pdom.PDOMManager.isFullyCreated",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.pdom.PDOMManager.access$0",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.pdom.PDOMManager$3.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Unknown Source"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IllegalStateException",
        "message": "Workbench has not been created yet.",
        "elements": [
          {
            "method": "org.eclipse.ui.PlatformUI.getWorkbench",
            "source": "Unknown Source"
          },
          {
            "method": "org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.startup",
            "source": "Unknown Source"
          },
          {
            "method": "org.eclipse.debug.internal.ui.DebugUIPlugin.getLaunchingResourceManager",
            "source": "Unknown Source"
          },
          {
            "method": "org.eclipse.debug.internal.ui.DebugUIPlugin.start",
            "source": "Unknown Source"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
            "source": "Unknown Source"
          },
          {
            "method": "java.security.AccessController.doPrivileged",
            "source": "Unknown Source"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 5,
      "bugId": "186847",
      "date": "2007-11-01T19:50:09+01:00",
      "product": "CDT",
      "component": "cdt-build",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Workbench has not been created yet.",
      "elements": [
        {
          "method": "org.eclipse.ui.PlatformUI.getWorkbench",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.startup",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DebugUIPlugin.getLaunchingResourceManager",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DebugUIPlugin.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
          "source": "Unknown Source"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.util.SecureAction.start",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.variables.DynamicVariable.getValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.loadValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.cdtvariables.EclipseVariablesVariableSupplier$EclipseVarMacro.getStringValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider$VariableWrapper.getStringValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.getResolvedMacro",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.SupplierBasedCdtVariableSubstitutor.resolveToString",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolve",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.utils.cdtvariables.CdtVariableResolver.resolveToString",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.macros.BuildMacroProvider.resolveValue",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.core.Builder.getBuildLocation",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.core.ManagedBuildManager.getBuildFullPath",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.core.Builder.getDefaultOutputSettings",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.core.Builder.getOutputEntries",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.managedbuilder.internal.dataprovider.BuildBuildData.getOutputDirectories",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.core.settings.model.extension.impl.CDefaultBuildData.copySettingsFrom",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CBuildSettingCache.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.copyBuildData",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.core.settings.model.extension.impl.CDefaultConfigurationData.copySettingsFrom",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CConfigurationDescriptionCache.loadData",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescription.loadDatas",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.loadProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.settings.model.CProjectDescriptionManager.getProjectDescription",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.pdom.PDOMManager.isFullyCreated",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.pdom.PDOMManager.access$0",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.cdt.internal.core.pdom.PDOMManager$3.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Unknown Source"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "186847",
      "date": "2007-11-01T19:50:09+01:00",
      "product": "CDT",
      "component": "cdt-build",
      "severity": "enhancement"
    }
  ],
  "groupId": "186847",
  "bugId": "186847",
  "date": "2007-05-14T19:50:19+02:00",
  "product": "CDT",
  "component": "cdt-build",
  "severity": "enhancement"
}