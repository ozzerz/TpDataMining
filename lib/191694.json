{
  "comments": [
    "Using eclipse.buildId\u003dI20070608-0010\njava.version\u003d1.6.0_02-ea\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dfr_CA\nFramework arguments:  -showlocation\nCommand-line arguments:  -os win32 -ws win32 -arch x86 -debug -consolelog -console -showlocation\n\nI got this exception: \n\njava.lang.NullPointerException\nat org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore(InternalFileSystemCore.java:104)\nat org.eclipse.core.filesystem.EFS.getStore(EFS.java:350)\nat org.eclipse.ui.part.FileEditorInput.getPath(FileEditorInput.java:175)\nat org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:658)\nat org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)\nat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2719)\nat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2633)\nat org.eclipse.ui.internal.WorkbenchPage.access$12(WorkbenchPage.java:2625)\nat org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2577)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\nat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2572)\nat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2556)\nat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2547)\nat org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)\nat org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)\nat org.eclipse.ui.ide.IDE.openEditor(IDE.java:1044)\nat org.eclipse.ui.views.markers.internal.ActionOpenMarker.run(ActionOpenMarker.java:86)\nat org.eclipse.ui.views.markers.internal.MarkerView.handleOpenEvent(MarkerView.java:1085)\nat org.eclipse.ui.views.markers.internal.TableView$2.open(TableView.java:175)\nat org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.core.runtime.Platform.run(Platform.java:857)\nat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\nat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:193)\nat org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818)\nat org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079)\nat org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183)\nat org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)\nat org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)\nat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:597)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1144)\n\nSteps to reproduce:\n1) Check out a project that contains warnings. I used org.eclipse.core.tools.\n2) Build it\n3) Open the problem view\n4) I use the filter to see only the warnings/errors for the selected resource and its children.\n5) I select the project and I delete it\n6) While the deletion is running, I try to open a resource by double-clicking on the warning in the problem view.\n7) I get a bunch of:\n!ENTRY org.eclipse.ui.ide 4 4 2007-06-08 09:00:42.301\n!MESSAGE Error accessing marker type\n\n!ENTRY org.eclipse.core.resources 4 376 2007-06-08 09:00:42.311\n!MESSAGE Marker id 2202606 not found.\n\n!ENTRY org.eclipse.ui.ide 4 4 2007-06-08 09:00:42.311\n!MESSAGE Error accessing marker type\n\n!ENTRY org.eclipse.core.resources 4 376 2007-06-08 09:00:42.311\n!MESSAGE Marker id 2202606 not found.\n\n!ENTRY org.eclipse.ui.ide 4 4 2007-06-08 09:00:42.321\n!MESSAGE Error accessing marker type\n\n!ENTRY org.eclipse.core.resources 4 376 2007-06-08 09:00:42.321\n!MESSAGE Marker id 2202606 not found.\n\n!ENTRY org.eclipse.ui.ide 4 4 2007-06-08 09:00:42.321\n!MESSAGE Error accessing marker type\n\n!ENTRY org.eclipse.core.resources 4 376 2007-06-08 09:00:42.331\n!MESSAGE Marker id 2202606 not found.\n\n!ENTRY org.eclipse.ui.ide 4 4 2007-06-08 09:00:42.331\n!MESSAGE Error accessing marker type\n\n!ENTRY org.eclipse.core.resources 4 376 2007-06-08 09:00:42.331\n!MESSAGE Marker id 2202606 not found.\n\nand a NPE.\nAll entries for marker id .... not found and \"Error accessing marker type\" should not be displayed to the log since there is nothing I can do.",
    "This is caused by this code in FileEditorInput.getPath:\n\n\tfinal URI locationURI \u003d file.getLocationURI();\n\tIFileStore store \u003d EFS.getStore(locationURI);\n\nfile.getLocationURI() will return null if the file\u0027s project has been deleted. Suggested fix:\n\n\tfinal URI locationURI \u003d file.getLocationURI();\n\tif (locationURI \u003d\u003d null)\n\t\treturn null;\n\tIFileStore store \u003d EFS.getStore(locationURI);\n",
    "IPathEditorInput#getPath does not specify if the path can be null or not either. I have checked our current implementations and it is possible for the path to be null in several other cases so I think the API needs to be clarified.\n\nJohn I will attach a patch for you to review.\n\nI have released the patch for 3.4 build \u003e20070327",
    "Created an attachment (id\u003d72515)\nPatch\n\n",
    "John could you review the patch please?",
    "+1\n\nIURIEditorInput.getURI() javadoc should have the same disclaimer about returning null (FileEditorInput.getURI() may return null).",
    "Fixed in build \u003e20070723",
    "Sorry but those changes are not OK as they break the API and need to be reverted ASAP as they cause NPEs for those that now follow this changed Javadoc (see bug 197015 for such a case).\n\n\u003eIPathEditorInput#getPath does not specify if the path can be null or not\n\u003eeither.\nThis is simply not true. From the \"General Rules\" section of the API guidelines [1]:\n\"Do not treat null as an object. Null is more the lack of an object. Assume everything is non-null unless the API specification says otherwise.\"\n\n\u003d\u003d\u003e the Javadoc did not mention \u0027null\u0027 and hence it must not be changed now. Note that IPathEditorInput#getPath() was like that for several years now and hence almost every client does not check for \u0027null\u0027. Changing this now will result in many NPEs.\n\n\n[1] http://www.eclipse.org/articles/article.php?file\u003dArticle-API-Use/index.html:",
    "So what is your suggestion then Dani?\n\nI see two alternatives:\n1) we do nothing and update the IPathEditorInput API to warn of this\n2) We explictly do the null check and throw a more meaningful exception\n\nEither you get an NPE or a runtime exception. I don\u0027t see either as a nice solution. Also the current code only gets hit in the EFS case - existing clients not using EFS will see no change in behaviour.\n\n",
    "BTW is has always been possible to return null. java.io.File#getLocation() can return null so this is not a behavioural change from 3.2.2.",
    "\u003eBTW is has always been possible to return null. java.io.File#getLocation() can\n\u003ereturn null so this is not a behavioural change from 3.2.2.\nBut this seemed to happen almost never as there were no NPEs until this one. If we start to allow it by breaking the API we encourage clients to return \u0027null\u0027 (see bug 197015) and hence cause more NPEs.\n\n\u003e1) we do nothing and update the IPathEditorInput API to warn of this\n\u003e2) We explictly do the null check and throw a more meaningful exception\nThe primary cause for this bug here is that IDE.openEditor goes ahead an creates the file editor input in the first place. It should check whether it makes sense at all to do this. However, even after fixing that there\u0027s still the possibility that the file gets deleted after the creation of the editor input. For such cases we could declare that the getters throw an IllegalStateException or an IAE.",
    "Could we fix this in FileEditorInput by computing the path and URI eagerly, at construction time? If one of the two computations return null, we throw an IAE from the constructor - at construction time, we should have both the path and the URI.",
    "Boris and I have discussed this and our feeling is that we should fix this problem in the problems view in 3.3.1 and revert the API in both streams. In 3.4 we can do more robust error checking on input creation - see Bug 199770.",
    "I have released a patch that does a check in the ActionOpenMarker for M build \u003e20070813 and I build \u003e20070813",
    "From an API point of view, Boris\u0027 suggestion seems like an equivalent API breakage - a new constraint is being added to the constructor (must not be called with non-existent file) and existing clients who didn\u0027t know about this constraint will get an exception. However, it likely does have the advantage of being more obvious when the problem occurs. You may get some weird behaviour if your cached path/URI becomes out of sync with the underlying file due to deletion or a location change.\n\n",
    "Verified in M build 20070905",
    "verified in M20070913-1500 by code inspection"
  ],
  "commentCreationDates": [
    "2007-06-08T15:05:45+02:00",
    "2007-06-08T16:07:08+02:00",
    "2007-06-26T20:57:36+02:00",
    "2007-06-26T20:58:03+02:00",
    "2007-06-26T20:58:25+02:00",
    "2007-06-26T22:19:50+02:00",
    "2007-07-23T16:51:51+02:00",
    "2007-07-25T11:06:06+02:00",
    "2007-07-25T15:55:05+02:00",
    "2007-07-25T15:56:12+02:00",
    "2007-07-25T16:08:41+02:00",
    "2007-08-13T16:54:52+02:00",
    "2007-08-13T17:34:51+02:00",
    "2007-08-13T18:54:20+02:00",
    "2007-08-13T19:47:57+02:00",
    "2007-09-13T16:42:19+02:00",
    "2007-09-14T16:06:58+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore",
          "source": "InternalFileSystemCore.java:104"
        },
        {
          "method": "org.eclipse.core.filesystem.EFS.getStore",
          "source": "EFS.java:350"
        },
        {
          "method": "org.eclipse.ui.part.FileEditorInput.getPath",
          "source": "FileEditorInput.java:175"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor",
          "source": "EditorManager.java:658"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openEditor",
          "source": "EditorManager.java:634"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched",
          "source": "WorkbenchPage.java:2719"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor",
          "source": "WorkbenchPage.java:2633"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$12",
          "source": "WorkbenchPage.java:2625"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$10.run",
          "source": "WorkbenchPage.java:2577"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2572"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2556"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2547"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:644"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:603"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:1044"
        },
        {
          "method": "org.eclipse.ui.views.markers.internal.ActionOpenMarker.run",
          "source": "ActionOpenMarker.java:86"
        },
        {
          "method": "org.eclipse.ui.views.markers.internal.MarkerView.handleOpenEvent",
          "source": "MarkerView.java:1085"
        },
        {
          "method": "org.eclipse.ui.views.markers.internal.TableView$2.open",
          "source": "TableView.java:175"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$2.run",
          "source": "StructuredViewer.java:820"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:193"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireOpen",
          "source": "StructuredViewer.java:818"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleOpen",
          "source": "StructuredViewer.java:1079"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$6.handleOpen",
          "source": "StructuredViewer.java:1183"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireOpenEvent",
          "source": "OpenStrategy.java:263"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$2",
          "source": "OpenStrategy.java:257"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:297"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3682"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3293"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "191694",
      "date": "2007-06-08T15:05:45+02:00",
      "product": "Platform",
      "component": "IDE",
      "severity": "normal"
    }
  ],
  "groupId": "191694",
  "bugId": "191694",
  "date": "2007-06-08T15:05:45+02:00",
  "product": "Platform",
  "component": "IDE",
  "severity": "normal"
}