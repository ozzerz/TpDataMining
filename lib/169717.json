{
  "comments": [
    "From equinox newgroup posting\n\nhttp://www.eclipse.org/newsportal/article.php?id\u003d2543\u0026group\u003declipse.technology.equinox#2543\n\nHi all,\n\nAs mentioned in a previous post, I am having some trouble when trying to install and start bundles in 3.3M4.  For example, if I install both equinox.common and equinox.registry using BundleContext.installBundle, then start them using Bundle.start(Bundle.START_TRANSIENT), I get an exception:\n\norg.osgi.framework.BundleException: State change in progress for bundle \"reference:file:C:\\tools\\cygwin\\home\\jsankey\\repo\\pulse\\trunk\\plugins\\internal\\org.eclipse.equinox.common_3.3.0.v20061117-3.3M4.jar\" by thread \"main\".\n    at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1141)\n    at org.eclipse.osgi.framework.internal.core.AbstractBundle.resume(AbstractBundle.java:347)\n    at org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1115)\n    at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.resumeBundles(PackageAdminImpl.java:255)\n    at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.doResolveBundles(PackageAdminImpl.java:225)\n    at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.resolveBundles(PackageAdminImpl.java:173)\n    at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:301)\n    at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)\n    at com.zutubi.pulse.plugins.DefaultPluginManager.loadInternalPlugins(DefaultPluginManager.java:91)\n    at com.zutubi.pulse.plugins.DefaultPluginManager.init(DefaultPluginManager.java:40)\n...\n\nTracing the code, this feels like a bug.  If a bundle is started when in the INSTALLED state (i.e. not resolved), and a few other (seemingly common) conditions are met, the above occurs.  The bundle is already undergoing state change by being started, but the resolve-\u003eresume process tries to mark it for state change again.  I can overcome this by forcing the bundles to be resolved (in any of a few different ways) before I start them.\n\nI also poked into the EclipseStarter and ConfigurationActivator to try and understand why they are unaffected.  In both cases, they avoid the issue by a call to PackageAdmin.refreshPackages in between installing and starting bundles (so bundles are resolved before start is called). In fact, the code in these two classes is pretty much cut-and-pasted and, to quote a comment, \"a hack\".  This arises as the refresh is asynchronous but in these cases the code forces it to be synchronous by waiting for FrameworkEvent.PACKAGES_REFRESHED.  All this seems quite complicated for what ought to be a basic use case: installing and starting bundles.  In my case I am currently just calling PackageAdmin.resolveBundles, but do wonder when a package refresh is necessary?  My reading of the spec suggests that it is only important when some bundles are uninstalled, which can happen in the configurator case but not (as yet) in my own case.\n\nCheers,\nJason",
    "Created an attachment (id\u003d56488)\npatch\n\nI can reproduce the error, but I only see a FrameworkEvent of type ERROR getting fired (and written to the log).  The exception is not propagated to the caller of Bundle.start.\n\nThis patch prevents the FrameworkEvent by checking to see if the bundle is currently changing state by the current thread when doing a normal resolve (not refreshPackage).  If the bundle is currently changing state (i.e. being started) then we do not attempt to resume the bundle.",
    "Released fix for 3.3 M5.",
    "Setting state to FIXED."
  ],
  "commentCreationDates": [
    "2007-01-05T19:20:47+01:00",
    "2007-01-05T19:57:15+01:00",
    "2007-01-05T23:01:05+01:00",
    "2007-01-05T23:01:49+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "State change in progress for bundle \"reference:file:C:\\tools\\cygwin\\home\\jsankey\\repo\\pulse\\trunk\\plugins\\internal\\org.eclipse.equinox.common_3.3.0.v20061117-3.3M4.jar\" by thread \"main\".",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange",
          "source": "AbstractBundle.java:1141"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.resume",
          "source": "AbstractBundle.java:347"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.resumeBundle",
          "source": "Framework.java:1115"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.resumeBundles",
          "source": "PackageAdminImpl.java:255"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.doResolveBundles",
          "source": "PackageAdminImpl.java:225"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.resolveBundles",
          "source": "PackageAdminImpl.java:173"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:301"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:260"
        },
        {
          "method": "com.zutubi.pulse.plugins.DefaultPluginManager.loadInternalPlugins",
          "source": "DefaultPluginManager.java:91"
        },
        {
          "method": "com.zutubi.pulse.plugins.DefaultPluginManager.init",
          "source": "DefaultPluginManager.java:40"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "169717",
      "date": "2007-01-05T19:20:47+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "169717",
  "bugId": "169717",
  "date": "2007-01-05T19:20:47+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}