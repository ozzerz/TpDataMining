{
  "comments": [
    "In recent Eclipse N20040826 GTK build, SWT depends on eclipse executable being\nexecuted.\nThe standalone help does not start when -noexec (to use java startup.jar instead\nof eclipse executable) is used.  The application exits.\n\n\nThe log contains:\n\n!SESSION Aug 26, 2004 10:25:18.118 ---------------------------------------------\neclipse.buildId\u003dN200408260010\njava.version\u003d1.4.2_04\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dunknown, ARCH\u003dx86, WS\u003dunknown, NL\u003den_US\nCommand-line arguments: -application org.eclipse.help.base.helpApplication\n \n!ENTRY org.eclipse.osgi Aug 26, 2004 10:25:18.120\n!MESSAGE An unexpected runtime error has occurred.  The application will terminate.\n!STACK 0\njava.lang.NoClassDefFoundError: org/eclipse/swt/widgets/Control\n        at\norg.eclipse.ui.plugin.AbstractUIPlugin.refreshPluginActions(AbstractUIPlugin.java:802)\n        at\norg.eclipse.ui.plugin.AbstractUIPlugin$4.bundleChanged(AbstractUIPlugin.java:917)\n        at\norg.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1151)\n        at\norg.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:186)\n        at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:104)",
    "Doesn\u0027t it rather sound like a plugin initialization/packaging issue? If SWT \nis not in the classpath, what can SWT do?\n\njava.lang.NoClassDefFoundError: org/eclipse/swt/widgets/Control",
    "Have you tried to run with -console and do a \"ss\" while the application is \nstarting to see if SWT is \"RESOLVED\"?",
    "swt and swt.gtk bundles are resolved.\n\nIf I add -ws gtk parameter, that allows standalone help to start , but we have \nnaver had to do so.  Something has been broken recently.",
    "Note - The GTK Eclipse launcher has not changed since Aug 19th.",
    "The Eclipse launcher itself it is not a problem, since in a context of stand-\nalone help it is not used when -noexec is passed, and this is when the error \noccurs.  Rather something suddenly started relying on what there is in the \nlauncher (-ws gtk) option.",
    "It seems that the problem does not appear in the recent nightly builds (help \njunit tests on gtk pass).\nHowever, the M-M20040901-200409010800 towards 3.0.1 experienced the test \nfailure, and I verifed the failure is caused by this issue.\n\nChristophe, the bug is assigned to you.  Does it mean you know the cause, and \nintend to fix it, or are we still guessing which component introduced the \nchange?",
    "Konrad, I\u0027m surprised by this problem that comes and goes away, whereas the \nonly changes that have been made to the startup.jar are not in this area and \nthat the code determining the os / ws / arch has not changed since 3.0 (at \nleast I\u0027m not aware of it)\nAre you sure that we are running with the same VM in all the cases?",
    "I run all builds using the same VM, and I guess releng would not change VMs \nback and forth.  I think the change might be either in core, swt, or UI.",
    "AbstractUIPlugin was changed recently (Aug 26) to call refreshPluginActions a\nlittle bit later than before, but I doubt this is responsible.  See bug 63324\nfor details.\n\nIt\u0027s very strange that it was able to resolve AbstractUIPlugin but not Control,\nsince org.eclipse.swt is a prerequisite of org.eclipse.ui (where\nAbstractUIPlugin is found), and is re-exported.\n\n",
    "So the problem appeared in:\nN20040826 - HEAD stream\nM20040901 - 3.0.1 stream\n\nAt first look, there are no changes in SWT that look suspicious and would \nexplain a java.lang.NoClassDefFoundError: org/eclipse/swt/widgets/Control\n\nI haven\u0027t reproduce the problem here. Konrad - what are the exact steps?\n",
    "To reproduce, from eclipse directory of gtk build issue command to start\nstand-alone help, like:\n\njava -cp plugins/org.eclipse.help.base_3.0.1/helpbase.jar\norg.eclipse.help.standalone.Help -command displayHelp -noexec\n\nIf it returns to command prompt, it means standalone did not start properly. \nCheck workspace/.metadata/.log.\n\nIn case it worked (opened a browser and did not return), you can stop standalone\nhelp by issuing:\njava -cp plugins/org.eclipse.help.base_3.0.1/helpbase.jar\norg.eclipse.help.standalone.Help -command shutdown\nfrom another connand window.\n",
    "Created an attachment (id\u003d14327)\n.log\n\nFull log from M20040901 build.",
    "Created an attachment (id\u003d14328)\nPatch to revert changes made to \"org.eclipse.ui.workbench\" by Bug 63324\n",
    "ok i can reproduce",
    "Were there changes in 3.0.1 to distinguish between GTK and GTK64?\nIs it possible it\u0027s not able to determine this?\nI don\u0027t see why that would cause classes to not be found though.  I\u0027d expect it\nto complain that it couldn\u0027t find a native DLL or something.\n",
    "Actually, SWT\u0027s plugin.xml has:\n \u003clibrary name\u003d\"$ws$/swt.jar\"\u003e\n\nSo if it can\u0027t determine the ws, then no classes will be found.\n",
    "I have tried the following: \n1.) Copy M200409010800 to a temporary space. \n2.) Delete org.eclipse.jface* and org.eclipse.ui* from the plugins directory. \n3.) Copy org.eclipse.jface* and org.eclipse.ui* from M200408250800. \n \nThe test case given in comment #11 succeeds.  If you don\u0027t do steps #2 and #3, \nthen it fails. ",
    "Moving to UI - let us know if we can help more here",
    "Are these exception traces a red herring? ",
    "Created an attachment (id\u003d14331)\nLog File from 3.0\n\nThis is the log file from starting the stand-alone browser from a clean 3.0\ninstall.  It stills contains the NoClassDefFoundErrors for both Control and\nAbstractUIPlugin.\n\nIf the exceptions are a problem, then this problem existed in 3.0 and it\nappears to be separate from the stand-alone help not starting.\n",
    "Created an attachment (id\u003d14332)\nlog for the same test case using 3.0\n\nSorry for misleading.  The stack trace are not specific to the problem in the\nM20040901 build.  They occur in 3.0 as well, but they were unnoticed and\nescaped testing since the application could start and fall back to use Mozilla\nbased browser instead of SWT.\n\nWe will need to require -ws gtk option to be passed when -noexec is used in\norder for standalone help to use embedded browser.\n\nThe remaining is to ensure that standalone help still starts when there is no\n-ws gtk passed, or the machine does not have correct gtk.  If the changes to\nthe UI are correct, I will take a look if this can be fixed (exceptions caught)\nin help code.  Douglass do not rush reverting back the changes.",
    "Konrad - so the problem could occur on other platforms too like the Mac \nisnt\u0027it? Or is this code specific to Linux GTK?",
    "The\n org.eclipse.help.internal.base.DisplayUtils.invoke()\nhas a catch all\n } catch (Exception e) {\n\nWhy do we have the following in the log?\n !ENTRY org.eclipse.osgi Sep 01, 2004 13:53:32.42\n !MESSAGE An unexpected runtime error has occurred.  The application will \nterminate.\n\n",
    "The code is not specific to GTK.  The -noexec option is to avoid the extra \nprocess running and to allow stand-alone help to be used on platforms other \nthan what we explicely support in Eclipse.org.",
    "More information to my comment #23.  The help application is in the \norg.eclipse.help.base plug-in, so any failures in the help.ui, eclipse.ui, \nwhen they are caught should not cause the application to be terminated.  Does \nanybody have a clue why this happens?",
    "possibly because NoClassDefFoundError extends LinkageError \u003e Error \u003e Throwable \nand not Exception\n",
    "Okay, there are three things going on here that should be fixed: \n+ Platform-Help should specify \"-ws gtk\" on the command-line for its test. \n+ Platform-Core (?) should be able to better detect the widget toolkit.  This \nis a matter of listing the files in the top-level Eclipse install directory, \nand looking for files starting with \"libXm\".  It should default to GTK+ if \nthose files can be found. \n+ Equinox-OSGI has a serious hole in the bundle listener code.  If a bundle \nlistener throws an exception, then OSGI will shutdown.  (We have confirmed this \nwith doctored JAR files and printlns.) \n \nWe have talked with Pascal about the last two problems, and he agrees.  I am \nre-assigning this bug to Equinox-OSGI/Pascal. \n \nPlatform UI has no intention -- at this time -- of reverting its changes on the \n3.0.1 or 3.1 streams. \n ",
    "Great thanks to everybody involved for chasing this problem.\n\nI have released a changed to help tests into HEAD and 3.0.1 to specify option \nand value for -ws, so the tests will properly open embedded help browser, and \nnot generated exception.\n\nFor getting application to stay alive without -ws gtk, I have added catch \nError, to org.eclipse.help.internal.base.DisplayUtils.invoke().  It does not \nseem to make any difference.  I assume Pascal will take care of it on osgi \nside.",
    "After a long discussion with Jeem about the whole problem, here is the action\nplan from a core point of view.\n\n- the code detecting the ws will not be changed because there is no clean way to\ndetect the right ws, especially if several version of eclipse are installed\ntogether. \nHowever, it is proposed that each config.ini of each linux drop will set the ws\naccordingly to the swt version that is included therefore fixing the problem of\nrunning without the exe.\n\n- osgi code does *not* contains a hole. It is the expected behavior. The way it\nis today is the result of a long discussion between Jeff, Jim, BJ and others (in\nbug 61942). \nAlthough Jeem and I recognized this is too harsh, nothing will be done on this\nfor 3.0.x. The reasons are that finding the appropriate filtering of exception\nis not something will get right the first time, and there is only a few\nBundleListeners registered and we should be able to ensure that the one existing\nbehaves properly.\n\nIn 3.1 timeframe, we are planning to review this behavior and make it more\nselective. A problem remains in notifying the user in case of the presence or\nthe absence of a UI (for example what do we do when a server is running and\nkeeps on generating exceptions).",
    "That passing -ws gtk or modifying config.ini will fix the problem for linux.\n\nOn platforms for which SWT does not exist, to use standalone help, ISVs can  \ninstall only the minimal set of plug-ins required for standalone help \n(excluding org.eclipse.help.ui from full Eclipse installation is good \nenough).  Creating a minimal set of plug-ins is currently specified as an \noptional step in standalone help documentation.\n\nI think for 3.0.1 it is appropriate to readme the fact that on non SWT \nsupported platforms, creating the minimal set of plug-ins, removing UI plug-\nins or just org.eclipse.help.ui is mandatory.",
    "Is it possible to make standalone help not use org.eclipse.help.ui even if it is\ninstalled?  Ideally there should be no dependencies on the workbench from the\nstandalone help support.",
    "Created an attachment (id\u003d14366)\norg.eclipse.help.base 72690 patch.txt\n\nIf SWT is installed and working, then standalone needs org.eclipse.help.ui\nsince it contains UI loop and SWT based web browser adapters (swt.Browser and\nswt.Program).  This code does not need the workbench, but there is no separate\nplug-in for it, so it is in org.eclipse.help.ui that has dependency on\neclipse.ui for other reasons.  Help can handle failure of org.eclipse.help.ui\nto start, but the platform cannot.\nRemoving all private reflection calls from org.eclipse.help.base to\norg.eclipse.help.ui, does not avoid the issue yet, since there are extension\ncontributions from org.eclipse.help.ui to org.eclipse.help.base and the problem\nexist.\n\nIn 3.1 the SWT help browsers, and UI loop for standalone help could be placed\nin a separate new plug-in(s), but in 3.0 we tried to avoid having to many help\nplug-ins with few lines of code.\n\nA possible workaround in 3.0.1 is to test existence of SWT before trying to\ncall org.eclipse.help.ui plug-in from org.eclipse.help.base, and carefully\ncheck extension points to avoid creation of executable extensions if SWT has\npreviously failed.  This prevents use of eclipse.ui if SWT is not working\nproperly, and the test subject is now SWT, that does not give hard time to the\nruntime if it fails.\nAttached is a patch for org.eclips.help.base plug-in that would add the\nnecessary hacks in 3.0.1.  Opinions on releasing it?  I am not 100% sure it is\na good idea at this point.",
    "I wouldn\u0027t bother changing it in 3.0.1, particularly if you\u0027re going to require\n-ws gtk on the command line, which will avoid the problem.\n\nWhile refactoring into separate plugins would probably be cleaner, if you do\nwant to do a runtime check for SWT instead, I suggest having as few code\ndependencies on org.eclipse.ui from org.eclipse.help.ui as possible.  In\nparticular, I\u0027d change the plugin class to extend Plugin, not AbstractUIPlugin.\n",
    "Bug 73111 has been fixed for 3.0.1.",
    "Thanks.  That allows standalone help to start without eclipse executable (with \nsome exceptions in the log).  Separating the SWT based web browsers from \norg.eclipse.help.ui plug-in can be later (not for 3.0.1).",
    "Trying this lately, with I20050527-0900 3.1 build, standalone help starts OK, \nwhen launched bypassing eclipse executable (using -noexec command line \noption), and without -ws parameter.  Does that mean -ws is no longer required \nfor proper SWT operation?\n",
    "No problems observed recently."
  ],
  "commentCreationDates": [
    "2004-08-26T16:44:28+02:00",
    "2004-08-26T17:42:18+02:00",
    "2004-08-26T18:20:12+02:00",
    "2004-08-26T18:41:59+02:00",
    "2004-08-26T19:13:42+02:00",
    "2004-08-26T19:57:03+02:00",
    "2004-09-01T19:14:30+02:00",
    "2004-09-01T19:37:21+02:00",
    "2004-09-01T20:11:55+02:00",
    "2004-09-01T20:36:54+02:00",
    "2004-09-01T20:39:52+02:00",
    "2004-09-01T20:54:47+02:00",
    "2004-09-01T21:01:44+02:00",
    "2004-09-01T21:16:25+02:00",
    "2004-09-01T21:40:25+02:00",
    "2004-09-01T21:50:33+02:00",
    "2004-09-01T21:52:10+02:00",
    "2004-09-01T21:59:23+02:00",
    "2004-09-01T22:10:36+02:00",
    "2004-09-01T22:11:08+02:00",
    "2004-09-01T22:17:23+02:00",
    "2004-09-01T22:29:09+02:00",
    "2004-09-01T22:41:55+02:00",
    "2004-09-01T22:43:23+02:00",
    "2004-09-01T22:45:14+02:00",
    "2004-09-01T22:50:29+02:00",
    "2004-09-01T22:54:41+02:00",
    "2004-09-01T23:08:43+02:00",
    "2004-09-01T23:42:15+02:00",
    "2004-09-02T00:54:41+02:00",
    "2004-09-02T01:18:19+02:00",
    "2004-09-02T15:10:40+02:00",
    "2004-09-02T21:01:10+02:00",
    "2004-09-07T16:29:04+02:00",
    "2004-09-07T20:05:41+02:00",
    "2004-09-07T20:49:29+02:00",
    "2005-05-27T16:50:04+02:00",
    "2005-06-15T03:24:56+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org/eclipse/swt/widgets/Control",
      "elements": [
        {
          "method": "org.eclipse.ui.plugin.AbstractUIPlugin.refreshPluginActions",
          "source": "AbstractUIPlugin.java:802"
        },
        {
          "method": "org.eclipse.ui.plugin.AbstractUIPlugin$4.bundleChanged",
          "source": "AbstractUIPlugin.java:917"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent",
          "source": "BundleContextImpl.java:1151"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:186"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventThread.run",
          "source": "EventThread.java:104"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "72690",
      "date": "2004-08-26T16:44:28+02:00",
      "product": "Platform",
      "component": "User Assistance",
      "severity": "normal"
    }
  ],
  "groupId": "72690",
  "bugId": "72690",
  "date": "2004-08-26T16:44:28+02:00",
  "product": "Platform",
  "component": "User Assistance",
  "severity": "normal"
}