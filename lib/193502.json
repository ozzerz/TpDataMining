{
  "comments": [
    "Hi, this is a description of some test sessions of ECF TCPSOContainer\nwe have realized the following test:\n\nScenario\n- 20 clients (2 per PC)\n- automatic sending of messages with time interval [min: 100 millis. - max: 100 millis.]\n- 2 shared objects for each client\n- LAN Network\n\nWe have realized several tests and all went well; we had only a\nstrange behaviour in one of them. During this test the memory\noccupation was between 3 and 6 MB for approximately one hour, and then\nwe had a peak to 60 MB, and all clients were disconnected.\n\nIn the other tests (same scenario) we had this situation after more\nthan one hour\nThe error on the disconnected clients (6 clients) was:\n\njava.net.ConnectException: Not connected\n       at org.eclipse.ecf.provider.comm.tcp.Client.queueObject(Client.java:464)\n       at org.eclipse.ecf.provider.comm.tcp.Client.sendAsynch(Client.java:456)\n       at org.eclipse.ecf.provider.generic.ServerSOContainer.forwardExcluding(ServerSOContainer.java:83)\n       at org.eclipse.ecf.provider.generic.SOContainer.forward(SOContainer.java:419)\n       at org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage(SOContainer.java:778)\n       at org.eclipse.ecf.provider.generic.SOContainer.processAsynch(SOContainer.java:965)\n       at org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent(SOContainer.java:207)\n       at org.eclipse.ecf.provider.comm.tcp.Client.handleRcv(Client.java:353)\n       at org.eclipse.ecf.provider.comm.tcp.Client.access$5(Client.java:341)\n       at org.eclipse.ecf.provider.comm.tcp.Client$4.run(Client.java:326)\n       at java.lang.Thread.run(Unknown Source)\n   java.net.ConnectException: Not connected\n       at org.eclipse.ecf.provider.comm.tcp.Client.queueObject(Client.java:464)\n       at org.eclipse.ecf.provider.comm.tcp.Client.sendAsynch(Client.java:456)\n       at org.eclipse.ecf.provider.generic.ServerSOContainer.forwardExcluding(ServerSOContainer.java:83)\n       at org.eclipse.ecf.provider.generic.SOContainer.forward(SOContainer.java:419)\n       at org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage(SOContainer.java:778)\n       at org.eclipse.ecf.provider.generic.SOContainer.processAsynch(SOContainer.java:965)\n       at org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent(SOContainer.java:207)\n       at org.eclipse.ecf.provider.comm.tcp.Client.handleRcv(Client.java:353)\n       at org.eclipse.ecf.provider.comm.tcp.Client.access$5(Client.java:341)\n       at org.eclipse.ecf.provider.comm.tcp.Client$4.run(Client.java:326)\n       at java.lang.Thread.run(Unknown Source)\n\n\nWe had also this error on the server after other 30 minutes, and other clients were disconnected (4 clients). \nThe problem seems relative to the \u0027fail-stop\u0027 model of the TCPSOContainer.\nWe also performed a test by increasing the time interval [min: 1000\nmillis. - max: 2000 millis.] and the number of shared objects (10) and\nall went well in this test.",
    "The temporaly links to download the eclipse project of the application used for the test is http://web.oneonline.it/andima/download/ecfTest/ecfTestProject.zip\n\nThe temporaly links to download the jconsole screen shot is http://web.oneonline.it/andima/download/ecfTest/jconsoleScreenShot.zip",
    "Created an attachment (id\u003d71922)\nThe eclipse project of the application used for test sessions\n\n",
    "Created an attachment (id\u003d71923)\nThe jconsole screen shot of the test sessions\n\n",
    "I\u0027m marking this bug as fixed because:\n\n1) The nice contribution given in attachments to this bug provides some of this stress testing requested by the bug.  Thanks.\n\n2) There now exist multiple providers that support the ECF generic server (i.e. activemq JMS/Websphere community edition, weblogic/BEA JMS).  These are available at http://ecf1.osuosl.org.  So people wanting stress testing can look to commercial stress testing associated with these products.\n\n3) The ECF project doesn\u0027t really have the means (i.e. servers) to do proper additional stress testing at this point.  \n"
  ],
  "commentCreationDates": [
    "2007-06-20T14:42:55+02:00",
    "2007-06-20T15:40:04+02:00",
    "2007-06-20T18:14:18+02:00",
    "2007-06-20T18:15:04+02:00",
    "2007-10-16T20:26:37+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.ConnectException",
      "message": "Not connected",
      "elements": [
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.queueObject",
          "source": "Client.java:464"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.sendAsynch",
          "source": "Client.java:456"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.ServerSOContainer.forwardExcluding",
          "source": "ServerSOContainer.java:83"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.forward",
          "source": "SOContainer.java:419"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage",
          "source": "SOContainer.java:778"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.processAsynch",
          "source": "SOContainer.java:965"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent",
          "source": "SOContainer.java:207"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.handleRcv",
          "source": "Client.java:353"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.access$5",
          "source": "Client.java:341"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client$4.run",
          "source": "Client.java:326"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "193502",
      "date": "2007-06-20T14:42:55+02:00",
      "product": "ECF",
      "component": "ecf.providers",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.net.ConnectException",
      "message": "Not connected",
      "elements": [
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.queueObject",
          "source": "Client.java:464"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.sendAsynch",
          "source": "Client.java:456"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.ServerSOContainer.forwardExcluding",
          "source": "ServerSOContainer.java:83"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.forward",
          "source": "SOContainer.java:419"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage",
          "source": "SOContainer.java:778"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.processAsynch",
          "source": "SOContainer.java:965"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent",
          "source": "SOContainer.java:207"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.handleRcv",
          "source": "Client.java:353"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.access$5",
          "source": "Client.java:341"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client$4.run",
          "source": "Client.java:326"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "193502",
      "date": "2007-06-20T14:42:55+02:00",
      "product": "ECF",
      "component": "ecf.providers",
      "severity": "enhancement"
    }
  ],
  "groupId": "193502",
  "bugId": "193502",
  "date": "2007-06-20T14:42:55+02:00",
  "product": "ECF",
  "component": "ecf.providers",
  "severity": "enhancement"
}