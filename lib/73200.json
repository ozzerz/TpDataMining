{
  "comments": [
    "The evaluation engine need to support autoboxing/inboxing.",
    "Implemented.\nA fair bit of change in ASTInstructionCompiler. Code to manage autoboxing had to\nbe added for assigment, infix, prefix, postfix operator and method calls.\n\nASTInstructionCompiler -\nDup - new class to duplicate elements in the execution stack\nDupX1 - new class to duplicate elements in the execution stack\nValue - new class to pop a variable and push its value in the stack",
    "Please verify, Darin W.",
    "Found two problems using this example (and Card from JDK examples)\n\nimport java.util.*;\n\npublic class Deal {\n    public static void main(String args[]) {\n        int numHands \u003d Integer.parseInt(args[0]);\n        Map map \u003d new HashMap();\n        int cardsPerHand \u003d Integer.parseInt(args[1]); // BREAKPOINT\n        List\u003cCard\u003e deck  \u003d Card.newDeck();\n        Collections.shuffle(deck);\n        Card.Suit.CLUBS.junk();\n        for (int i\u003d0; i \u003c numHands; i++)\n            System.out.println(deal(deck, cardsPerHand));\n    }\n\n    public static ArrayList\u003cCard\u003e deal(List\u003cCard\u003e deck, int n) {\n         int deckSize \u003d deck.size();\n         List\u003cCard\u003e handView \u003d deck.subList(deckSize-n, deckSize);\n         ArrayList\u003cCard\u003e hand \u003d new ArrayList\u003cCard\u003e(handView);\n         handView.clear();\n         return hand;\n     }\n}\n\nDebug to the breakpoint, don\u0027t select any variable and evaluate:\n   map.put(\"One\", 1)\n\nI get this stack trace:\n\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Stack.java:94)\n\tat java.util.Stack.pop(Stack.java:76)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.pop\n(ASTInstructionCompiler.java:293)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.storeInst\nruction(ASTInstructionCompiler.java:297)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.endVisit\n(ASTInstructionCompiler.java:1225)\n\tat org.eclipse.jdt.core.dom.ReturnStatement.accept0\n(ReturnStatement.java:137)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.MethodDeclaration.accept0\n(MethodDeclaration.java:504)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0\n(TypeDeclaration.java:486)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.CompilationUnit.accept0\n(CompilationUnit.java:291)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.createExpres\nsionFromAST(ASTEvaluationEngine.java:275)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledE\nxpression(ASTEvaluationEngine.java:158)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate\n(ASTEvaluationEngine.java:75)\n\tat org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run\n(EvaluateAction.java:243)\n\tat org.eclipse.jdt.internal.debug.ui.actions.DisplayAction.run\n(DisplayAction.java:104)\n\tat org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run\n(EvaluateAction.java:564)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent\n(PluginAction.java:244)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent\n(WWinPluginAction.java:220)\n\tat org.eclipse.ui.commands.ActionHandler.execute\n(ActionHandler.java:188)\n\tat org.eclipse.ui.internal.commands.Command.execute(Command.java:130)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand\n(WorkbenchKeyboard.java:445)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.press\n(WorkbenchKeyboard.java:724)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent\n(WorkbenchKeyboard.java:767)\n\tat \norg.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings\n(WorkbenchKeyboard.java:536)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2\n(WorkbenchKeyboard.java:479)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent\n(WorkbenchKeyboard.java:221)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Display.filterEvent(Display.java:758)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:832)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:870)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:866)\n\tat org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1172)\n\tat org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3115)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3018)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3376)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1575)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2452)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1577)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1543)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:287)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:102)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:220)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:274)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:684)\n\tat org.eclipse.core.launcher.Main.main(Main.java:668)\n\n\nSecond case:\n* debug to the breakpoint, select \"map\"\n* in details area evaluate this.put(1,1)\n\u003e error dialog saying the method is not applicable to the arguments (int, int)",
    "Fixed the first test case.\nThere was two problems, I was trying to box String values, and the boxing was\nnot done if the expected type was java.lang.Object (and not Integer, Character,\n...).\n\nChanges in ASTInstructionCompiler.\n\nFor the second test case, the compiler returns the correct error.\n\nIn the following source, in main(), TestGen is declare with String as parameter,\nso bar() should always return a String. But if the code in foo() was allowed,\nbar() would return an Object, the execution would fail when trying to invoke the\nlength() method on this Object.\nInside generic type, you often have to use the declared type (T in this case),\nand cannot use a type which extends the requirement of the declared type\n(java.lang.Object in this case).\n\npublic class TestGen\u003cT extends Object\u003e {\n  T fT;\n  void foo() {\n    bar(new Object());     // if this code is allowed\n  }\n  void put(T t) {\n    fT\u003d t;\n  }\n  T get() {\n    return fT;\n  }\n  public static void main(String[] args) {\n    TestGen\u003cString\u003e tgb\u003d new TestGen\u003cString\u003e();\n    tgb.foo();\n    tgb.get().length();     //  runtime error here\n  }\n}",
    "Please verify, Darin W.",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-09-03T02:43:57+02:00",
    "2005-01-15T02:26:04+01:00",
    "2005-01-15T02:26:29+01:00",
    "2005-01-17T15:30:29+01:00",
    "2005-01-17T21:18:09+01:00",
    "2005-01-17T21:18:31+01:00",
    "2005-01-20T15:22:57+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.EmptyStackException",
      "elements": [
        {
          "method": "java.util.Stack.peek",
          "source": "Stack.java:94"
        },
        {
          "method": "java.util.Stack.pop",
          "source": "Stack.java:76"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.pop",
          "source": "ASTInstructionCompiler.java:293"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.storeInstruction",
          "source": "ASTInstructionCompiler.java:297"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.endVisit",
          "source": "ASTInstructionCompiler.java:1225"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ReturnStatement.accept0",
          "source": "ReturnStatement.java:137"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:135"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
          "source": "MethodDeclaration.java:504"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:486"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:291"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.createExpressionFromAST",
          "source": "ASTEvaluationEngine.java:275"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledExpression",
          "source": "ASTEvaluationEngine.java:158"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate",
          "source": "ASTEvaluationEngine.java:75"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run",
          "source": "EvaluateAction.java:243"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.DisplayAction.run",
          "source": "DisplayAction.java:104"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run",
          "source": "EvaluateAction.java:564"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:244"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.runWithEvent",
          "source": "WWinPluginAction.java:220"
        },
        {
          "method": "org.eclipse.ui.commands.ActionHandler.execute",
          "source": "ActionHandler.java:188"
        },
        {
          "method": "org.eclipse.ui.internal.commands.Command.execute",
          "source": "Command.java:130"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:445"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:724"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:767"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:536"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2",
          "source": "WorkbenchKeyboard.java:479"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent",
          "source": "WorkbenchKeyboard.java:221"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java:758"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:832"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:857"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:870"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:866"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmChar",
          "source": "Widget.java:1172"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_CHAR",
          "source": "Control.java:3115"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3018"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3376"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1575"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2452"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1577"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1543"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:287"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:144"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:102"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:220"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:274"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:684"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:668"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "73200",
      "date": "2005-01-17T15:30:29+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "enhancement"
    }
  ],
  "groupId": "73200",
  "bugId": "73200",
  "date": "2004-09-03T02:43:57+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "enhancement"
}