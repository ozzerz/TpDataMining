{
  "comments": [
    "Build: 20020508\n\nWe wrote the following code because we encountered an intermittent problem\nsetting autobuild on/off.  This code fails instantly with the included stack trace.\n\nThere are really two problems here.\n1. We need a public way to turn autobuild off during the execution of a\nIWorkspaceRunnable (like core does internally with Workspace#avoidAutoBuild()).\nWithout this the user autobuild state could be lost.\n2. The setting of the workspace description needs to be Thread safe.\n\nfor(int i\u003d 0; i \u003c 2; i++) {\n\tThread t\u003d new Thread(new Runnable() {\n\t\t/**\n\t\t * @see Runnable#run()\n\t\t */\n\t\tpublic void run() {\n\t\t\tIWorkspace workspace\u003d ResourcesPlugin.getWorkspace();\n\t\t\tIWorkspaceDescription description\u003d workspace.getDescription();\n\t\t\twhile(true) {\n\t\t\t\tdescription.setAutoBuilding(false);\n\t\t\t\ttry {\n\t\t\t\t\tworkspace.setDescription(description);\n\t\t\t\t} catch (CoreException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tdescription.setAutoBuilding(true);\n\t\t\t\ttry {\n\t\t\t\t\tworkspace.setDescription(description);\n\t\t\t\t} catch (CoreException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, \"Autobuild \" + i);\n\tt.start();\n}\n\norg.eclipse.core.internal.resources.ResourceException(null)[568]:\njava.io.FileNotFoundException:\nC:\\eclipse0508\\eclipse\\runtime-workspace\\.metadata\\.plugins\\org.eclipse.core.resources\\.workspace.bak\n(The process cannot access the file because it is being used by another process)\n\tat java.io.FileInputStream.open(Native Method)\n\tat java.io.FileInputStream.\u003cinit\u003e(FileInputStream.java:103)\n\tat\norg.eclipse.core.internal.localstore.SafeFileOutputStream.copy(SafeFileOutputStream.java:72)\n\tat\norg.eclipse.core.internal.localstore.SafeFileOutputStream.commit(SafeFileOutputStream.java:66)\n\tat\norg.eclipse.core.internal.localstore.SafeFileOutputStream.close(SafeFileOutputStream.java:60)\n\tat\norg.eclipse.core.internal.resources.ModelObjectWriter.write(ModelObjectWriter.java:37)\n\tat\norg.eclipse.core.internal.resources.ModelObjectWriter.write(ModelObjectWriter.java:65)\n\tat org.eclipse.core.internal.resources.LocalMetaArea.write(LocalMetaArea.java:281)\n\tat org.eclipse.core.internal.resources.Workspace.setDescription(Workspace.java:1413)\n\tat Test.actions.SampleAction$1.run(SampleAction.java:53)\n\tat java.lang.Thread.run(Thread.java:536)",
    "A core issue, moving (sorry Nick)",
    "Please describe why you need to disable autobuild.",
    "If you add markers it causes a build.  So any plugin that wants to add \ntemporary markers needs to twiddle the autobuild setting so that a build \ndoesn\u0027t occur for no reason.  This includes Compare, Search, Debug, etc.\n\nSearch for senders of IWorkspaceDescription#setAutoBuilding(boolean).",
    "It seems strange that adding/modifying markers triggers a build.\nAt least in the case of the Java builder, it cares only about files and their \ncontents.\n",
    "Yes, setDescription needs to be made thread safe.\n\nHowever, just adding or changing markers should not trigger a build.  Marker \nchanges do not appear in the deltas for builders.  Is this reproducible with a \nsimple case?",
    "If marker changes are wrapped in an IWorkspace.run, would that trigger a build?",
    "No, that shouldn\u0027t cause a build either.",
    "If you do a search for senders of IWorkspaceDescription#setAutoBuilding\n(boolean) you find lots of people who are trying not to cause autobuilds.  \nPerhaps we should notify them that they have nothing to be afraid of.  This \ncould dramatically improve performance in some places.\n\nAny ideas on my point #2 + example?",
    "Released the fix for IWorkspace.setDescription thread safety.\n\nI will investigate why people are trying to avoid autobuild.  This shouldn\u0027t be \nnecessary.  I suspect they were working around inefficiencies in the build \nmechanism that have since been improved.",
    "Investigate for 2.0 why people are calling #setAutoBuild.\n",
    "I wrote a test case in org.eclipse.core.tools.benchmark to show that finding, \ncreating, and deleting markers in a workspace runnable does not cause any \nautobuilds.\n\nBelow are the four places I found that turn off autobuild during an operation.  \nI will open a separate PR against JDT/UI so they can fix this.\n\nI think this bug report can be closed.\n\n\nareAllEditorsSaved() - \norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter\n\nsaveModifiedResources(IFile[]) - \norg.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation\n\nsaveModifiedResources(IFile[]) - \norg.eclipse.jdt.internal.ui.javadocexport.JavadocWizard\n\nrun(IJavaElement) - org.eclipse.jdt.ui.actions.FindAction",
    "Entered bug 19203 against JDT-UI for the places where they turn off autobuild.",
    "Closing.  A separate PR has been filed against JDTUI for them to review their \nuse of setAutoBuilding().  Marking this bug as fixed since the concurrency \nproblem has been addressed."
  ],
  "commentCreationDates": [
    "2002-05-09T19:13:41+02:00",
    "2002-05-09T19:14:20+02:00",
    "2002-05-10T01:03:48+02:00",
    "2002-05-10T01:44:44+02:00",
    "2002-05-10T17:23:00+02:00",
    "2002-05-10T18:51:55+02:00",
    "2002-05-10T20:22:30+02:00",
    "2002-05-10T20:40:08+02:00",
    "2002-05-10T23:22:48+02:00",
    "2002-05-16T21:59:54+02:00",
    "2002-05-23T18:10:54+02:00",
    "2002-06-04T21:56:41+02:00",
    "2002-06-04T22:05:38+02:00",
    "2002-06-10T20:25:35+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "C:\\eclipse0508\\eclipse\\runtime-workspace\\.metadata\\.plugins\\org.eclipse.core.resources\\.workspace.bak (The process cannot access the file because it is being used by another process)",
      "elements": [
        {
          "method": "java.io.FileInputStream.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.FileInputStream.\u003cinit\u003e",
          "source": "FileInputStream.java:103"
        },
        {
          "method": "org.eclipse.core.internal.localstore.SafeFileOutputStream.copy",
          "source": "SafeFileOutputStream.java:72"
        },
        {
          "method": "org.eclipse.core.internal.localstore.SafeFileOutputStream.commit",
          "source": "SafeFileOutputStream.java:66"
        },
        {
          "method": "org.eclipse.core.internal.localstore.SafeFileOutputStream.close",
          "source": "SafeFileOutputStream.java:60"
        },
        {
          "method": "org.eclipse.core.internal.resources.ModelObjectWriter.write",
          "source": "ModelObjectWriter.java:37"
        },
        {
          "method": "org.eclipse.core.internal.resources.ModelObjectWriter.write",
          "source": "ModelObjectWriter.java:65"
        },
        {
          "method": "org.eclipse.core.internal.resources.LocalMetaArea.write",
          "source": "LocalMetaArea.java:281"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.setDescription",
          "source": "Workspace.java:1413"
        },
        {
          "method": "Test.actions.SampleAction$1.run",
          "source": "SampleAction.java:53"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:536"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "15649",
      "date": "2002-05-09T19:13:41+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "15649",
  "bugId": "15649",
  "date": "2002-05-09T19:13:41+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}