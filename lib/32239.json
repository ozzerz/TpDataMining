{
  "comments": [
    "PROGRAM\n\n\nimport org.aspectj.lang.*;\n\n\nimport java.lang.reflect.*;\n\n\nimport org.aspectj.lang.reflect.*;\n\n\n\n\npublic class Test4 {\n\n\n   public static void main(String[] args) throws Exception {\n\n\n      Test4 t \u003d new Test4();\n\n\n            System.out.println(t.foo(\"a\"));\n\n\n   }\n\n\n   String foo(Object s) {\n\n\n      return \"x\"+s;\n\n\n   }\n\n\n}\n\n\n\n\naspect profile {\n\n\n   // It\u0027s the [] that is offending the compiler\n\n\n   Object around(Object targ, Object[] x): call(* *(..)) \u0026\u0026 target(targ) \u0026\u0026 \n!within(profile) \u0026\u0026 args(x) {\n\n\n      System.out.println(\"\" + targ + \",\" + x);\n\n\n      return proceed(targ,x);\n\n\n   }\n\n\n   \n\n\n}\n\n\n\n\nRESULT OF COMPILATION\n\n\n\n\n[erik@oden test] ajc Test4.java\n\n\ntrouble in: \n\n\npublic class Test4 extends java.lang.Object:\n\n\n  public void \u003cinit\u003e():\n\n\n                    ALOAD_0     // Test4 this   (line 5)\n\n\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n\n\n    constructor-execution(void Test4.\u003cinit\u003e())\n\n\n    |               RETURN\n\n\n    constructor-execution(void Test4.\u003cinit\u003e())\n\n\n  end public void \u003cinit\u003e()\n\n\n \n\n\n  public static void main(String[]) throws java.lang.Exception:\n\n\n    method-execution(void Test4.main(java.lang.String[]))\n\n\n    |               NEW Test4   (line 7)\n\n\n    |               DUP\n\n\n    | constructor-call(void Test4.\u003cinit\u003e())\n\n\n    | |             INVOKESPECIAL Test4.\u003cinit\u003e ()V\n\n\n    | constructor-call(void Test4.\u003cinit\u003e())\n\n\n    |               ASTORE_1\n\n\n    | field-get(java.io.PrintStream java.lang.System.out)\n\n\n    | |             GETSTATIC java.lang.System.out Ljava/io/PrintStream;   (line \n8)\n\n\n    | field-get(java.io.PrintStream java.lang.System.out)\n\n\n    |               ALOAD_1     // Test4 t\n\n\n    |               LDC \"a\"\n\n\n    |               ASTORE_2\n\n\n    |               ASTORE_3\n\n\n    | method-call(void java.io.PrintStream.println(java.lang.String))\n\n\n    | |             INVOKEVIRTUAL java.io.PrintStream.println \n(Ljava/lang/String;)V\n\n\n    | method-call(void java.io.PrintStream.println(java.lang.String))\n\n\n    |               RETURN   (line 9)\n\n\n    method-execution(void Test4.main(java.lang.String[]))\n\n\n  end public static void main(String[]) throws java.lang.Exception\n\n\n \n\n\n  String foo(Object):\n\n\n    method-execution(java.lang.String Test4.foo(java.lang.Object))\n\n\n    |               NEW java.lang.StringBuffer   (line 11)\n\n\n    |               DUP\n\n\n    |               LDC \"x\"\n\n\n    | constructor-call(void java.lang.StringBuffer.\u003cinit\u003e(java.lang.String))\n\n\n    | |             INVOKESPECIAL java.lang.StringBuffer.\u003cinit\u003e \n(Ljava/lang/String;)V\n\n\n    | constructor-call(void java.lang.StringBuffer.\u003cinit\u003e(java.lang.String))\n\n\n    |               ALOAD_1     // java.lang.Object s\n\n\n    | method-call(java.lang.StringBuffer \njava.lang.StringBuffer.append(java.lang.Object))\n\n\n    | |             INVOKEVIRTUAL java.lang.StringBuffer.append \n(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n\n\n    | method-call(java.lang.StringBuffer \njava.lang.StringBuffer.append(java.lang.Object))\n\n\n    | method-call(java.lang.String java.lang.StringBuffer.toString())\n\n\n    | |             INVOKEVIRTUAL java.lang.StringBuffer.toString \n()Ljava/lang/String;\n\n\n    | method-call(java.lang.String java.lang.StringBuffer.toString())\n\n\n    |               ARETURN\n\n\n    method-execution(java.lang.String Test4.foo(java.lang.Object))\n\n\n  end String foo(Object)\n\n\n \n\n\n  static final String foo_aroundBody0(Test4, Object):\n\n\n                    ALOAD_0\n\n\n                    ALOAD_1\n\n\n                    INVOKEVIRTUAL Test4.foo \n(Ljava/lang/Object;)Ljava/lang/String;   (line 8)\n\n\n                    ARETURN\n\n\n  end static final String foo_aroundBody0(Test4, Object)\n\n\nend public class Test4\n\n\nException thrown from AspectJ 1.1beta4\n\n\n \n\n\nThis might be logged as a bug already -- see the bug database at\n\n\n  http://dev.eclipse.org (product: AspectJ, component: compiler)\n\n\n \n\n\nBugs for exceptions thrown have titles File:line from the top stack, \n\n\ne.g., \"SomeFile.java:243\"\n\n\n \n\n\nIf you don\u0027t find the exception below in a bug, please add a new bug\n\n\nTo make the bug a priority, please include a test program\n\n\nthat can reproduce this exception.\n\n\norg.apache.bcel.generic.ArrayType\n\n\norg.apache.bcel.generic.ArrayType\n\n\njava.lang.ClassCastException: org.apache.bcel.generic.ArrayType\n\n\n        at org.aspectj.weaver.bcel.BcelRenderer.visit(BcelRenderer.java:152)\n\n\n        at org.aspectj.weaver.ast.Instanceof.accept(Instanceof.java:29)\n\n\n        at org.aspectj.weaver.bcel.BcelRenderer.recur(BcelRenderer.java:128)\n\n\n        at org.aspectj.weaver.bcel.BcelRenderer.renderTest(BcelRenderer.java:94)\n\n\n        at \norg.aspectj.weaver.bcel.BcelAdvice.getTestInstructions(BcelAdvice.java:271)\n\n\n        at \norg.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:1199)\n\n\n        at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:117)\n\n\n        at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:306)\n\n\n        at org.aspectj.weaver.Shadow.implement(Shadow.java:278)\n\n\n        at \norg.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:917)\n\n\n        at \norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:244)\n\n\n        at \norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:35)\n\n\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:312)\n\n\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:264)\n\n\n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles\n(AjBuildManager.java:351)\n\n\n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.\njava:112)\n\n\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)\n\n\n        at org.aspectj.tools.ajc.Main.run(Main.java:199)\n\n\n        at org.aspectj.tools.ajc.Main.runMain(Main.java:138)\n\n\n        at org.aspectj.tools.ajc.Main.main(Main.java:58)\n\n\n \n\n\n \n\n\n1 fail|abort",
    "This is a critical bug that I\u0027m assigning to Erik.  I think this should be\nan easy fix.",
    "Fixed in CVS.  This was a bug with Array types making it through all the static\nchecking to require runtime-residualized checks.  For no discernable reason,\nthese residualized checks (which eventually emit the INSTANCEOF bytecode) \nrequired an ObjectType as input.  This is now fixed to accept any ReferenceType."
  ],
  "commentCreationDates": [
    "2003-02-19T15:07:28+01:00",
    "2003-03-05T21:53:33+01:00",
    "2003-03-11T06:10:49+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.apache.bcel.generic.ArrayType",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.visit",
          "source": "BcelRenderer.java:152"
        },
        {
          "method": "org.aspectj.weaver.ast.Instanceof.accept",
          "source": "Instanceof.java:29"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.recur",
          "source": "BcelRenderer.java:128"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.renderTest",
          "source": "BcelRenderer.java:94"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.getTestInstructions",
          "source": "BcelAdvice.java:271"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline",
          "source": "BcelShadow.java:1199"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.implementOn",
          "source": "BcelAdvice.java:117"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implementMungers",
          "source": "Shadow.java:306"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:278"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:917"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:244"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:35"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:312"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:264"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles",
          "source": "AjBuildManager.java:351"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager. java:112"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:54"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:199"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:138"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "32239",
      "date": "2003-02-19T15:07:28+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "critical"
    }
  ],
  "groupId": "32239",
  "bugId": "32239",
  "date": "2003-02-19T15:07:28+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "critical"
}