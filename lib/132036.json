{
  "comments": [
    "This bug report covers three problems:\n\n1) A NPE may be thrown by LoadStrategy.getFiles();\n2) A NPE may be thrown by LoadStrategy.getFiles(String) -- when the\n   search pattern does not map to an existing file or directory;\n3) The LoadStrategy interface does not have \u0027getFiles(String)\u0027 in the\n   interface in forward levels.  (The method was added in an earlier\n   level, but was not carried forward into forward levels.)\n\nThe problems were noted on Win2K on an IBM Intellistation, but are not\nbelieved to be limited to that OS/platform combination.\n\nFor example:\n\nException in thread \"main\" java.lang.NullPointerException\n\tat com.ibm.etools.archive.impl.DirectoryLoadStrategyImpl.addFile(DirectoryLoadStrategyImpl.java:47)\n\tat com.ibm.etools.archive.impl.DirectoryLoadStrategyImpl.addFiles(DirectoryLoadStrategyImpl.java:71)\n\tat com.ibm.etools.archive.impl.DirectoryLoadStrategyImpl.getFiles(DirectoryLoadStrategyImpl.java:121)\n\tat TestMetaLoader.displayModule(TestMetaLoader.java:140)\n\tat TestMetaLoader.displayModules(TestMetaLoader.java:90)\n\tat TestMetaLoader.main(TestMetaLoader.java:46)\n\nHere is code to reproduce the problem:\n\nCommonarchiveFactory archiveFactory \u003d CommonarchiveFactoryImpl.getActiveFactory();\n        \nArchiveOptions options \u003d new ArchiveOptions();\noptions.setIsReadOnly(true);\noptions.setUseJavaReflection(false);\n        \nEARFile earFile \u003d archiveFactory.openEARFile(options, earPath);\n        \nearFile.getDeploymentDescriptor();\nearFile.getBindings();\nearFile.getExtensions();\n       \nApplication application \u003d (Application) earFile.getDeploymentDescriptor();\n        \nIterator useModules \u003d application.getModules().iterator();\n\nwhile ( useModules.hasNext() ) {\n    Module nextModule \u003d (Module) useModules.next();\n    ModuleFile moduleFile \u003d earFile.getModuleRef(nextModule).getModuleFile();\n\n    Iterator moduleFiles \u003d moduleFile.getLoadStrategy().getFiles(moduleDir).iterator();\n}\n\nDepending on the expansion state of the target application, a null pointer\nexception occurs within the call to \u0027getFiles\u0027.\n\nIf the load strategy implementation is a  DirectoryLoadStrategyImpl or a\nZipFileLoadStrategyImpl, a NPE results.  No NPE results if an instance of NestedArchiveLoadStrategyImpl is in use.\n\nTwo updates are recommended to fix the NPE (these are both recomendations from a WebTools developer):\n\nThis first change is to assign Collections.EMPTY_MAP to the loose files\ncollection, instead of assigning null.  This fixes the problem (1), listed\nabove.\n\nLoadStrategyImpl:\npublic List collectFiles() {\n  //The loose archives need to be read first\n  collectFilesFromLooseArchives();\n  List files \u003d getFiles();\n  files.addAll(collectedLooseArchiveFiles.values());\n  collectedLooseArchiveFiles \u003d Collections.EMPTY_MAP;  // *** PATCHED LINE ***\n  return files;\n}\n\nThe second change is to guard against the case where the target directory of \u0027getFiles\u0027 does not exist.  The guard is an added check to ensure that the\n\u0027.list()\u0027 result does not return null.  This change fixes the problem (2),\n from above:\n\nDirectoryLoadStrategyImpl:\nprotected void addFiles(java.io.File aDirectory, List aList) {\n\nString[] fileNames \u003d aDirectory.list();\nif(null !\u003d fileNames){                             // *** ADDED TEST ***\n  for (int i \u003d 0; i \u003c fileNames.length ; i++) {\n   String fileName \u003d ArchiveUtil.concatUri(aDirectory.getPath(), fileNames[i], SEPARATOR_CHAR);\n   if (fileNames[i] \u003d\u003d null ||\n    (IS_AIX \u0026\u0026 \".backup\".equals(fileNames[i])))\n    continue;\n   java.io.File aFile \u003d new java.io.File(fileName);\n   if (!aFile.exists())\n    continue;\n    //This could occur on some windows machines, eg C:\\pagefile.sys\n    //throw new RuntimeException(\"Error scanning directory structure\");\n   if (aFile.isDirectory() \u0026\u0026 !isArchive(getURIFrom(aFile))) {\n    addDirectory(aFile, aList);\n   } else {\n    addFile(aFile, aList);\n   }\n  }\n}\n\nAdditional changes will be necessary to add back \u0027getFiles\u0027 to the LoadStrategy\ninterface, for problem (3), from above.",
    "code dropped to both 1.0.2 and 1.5 streams.",
    "*** Bug 137505 has been marked as a duplicate of this bug. ***",
    "closing."
  ],
  "commentCreationDates": [
    "2006-03-15T21:20:12+01:00",
    "2006-03-17T19:57:29+01:00",
    "2006-04-24T22:50:04+02:00",
    "2006-06-13T17:53:07+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "com.ibm.etools.archive.impl.DirectoryLoadStrategyImpl.addFile",
          "source": "DirectoryLoadStrategyImpl.java:47"
        },
        {
          "method": "com.ibm.etools.archive.impl.DirectoryLoadStrategyImpl.addFiles",
          "source": "DirectoryLoadStrategyImpl.java:71"
        },
        {
          "method": "com.ibm.etools.archive.impl.DirectoryLoadStrategyImpl.getFiles",
          "source": "DirectoryLoadStrategyImpl.java:121"
        },
        {
          "method": "TestMetaLoader.displayModule",
          "source": "TestMetaLoader.java:140"
        },
        {
          "method": "TestMetaLoader.displayModules",
          "source": "TestMetaLoader.java:90"
        },
        {
          "method": "TestMetaLoader.main",
          "source": "TestMetaLoader.java:46"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "132036",
      "date": "2006-03-15T21:20:12+01:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "blocker"
    }
  ],
  "groupId": "132036",
  "bugId": "132036",
  "date": "2006-03-15T21:20:12+01:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "blocker"
}