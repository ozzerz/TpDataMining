{
  "comments": [
    "I\u0027m using 3.1RC2.  There are two symptoms of this bug, written in CAPITAL \nLETTERS in steps 4 \u0026 6 below.\n\nSteps:\n\n1) Open type javax.swing.DefaultCellEditor.\n\n2) Switch to the Java Browsing perspective.\n\n3) In the Members tab, hilite EditorDelegate and press F4 (Open Type \nHierarchy).\n\n4) In the lower pane of the Hierarchy tab, rightclick on setValue(Object) and \npick Declarations\u003e\u003eHierarchy.  WRONGLY NONE ARE FOUND.\n\n5) In the upper pane of the Hierarchy tab, doubleclick on any one of \nEditorDelegate\u0027s subclasses.  The subclass\u0027s source is scrolled into view in \nthe source text editor.\n\n6) In the left margin of the source text editor, click on any of the green \ntriangles appearing at any of the subclass\u0027s methods.  THE SOURCE TEXT EDITOR \nFAILS TO SCROLL TO THE SUPERTYPE\u0027S DECLARATION OF THAT METHOD.",
    "Steps for another symptom:\n\nRepeat steps 1-2 above.\n\n3) In the Members tab, rightclick on EditorDelegate\u0027s constructor and pick \nReferences\u003e\u003eHierarchy.  WRONGLY NONE ARE FOUND.",
    "This are two distinct issues. I opened bug 100776 for the search for declaration\nissue. \n\nMoving to Text for the navigation issue (suspect that getJavaElement returns null).\n\n",
    "we get the wrong element for the correct method binding when calling\nIMethodBinding..getJavaElement()",
    "I suspect that search match element handle is not correctly created...\n",
    "In fact this is not a search problem as it is not involved while clicking on\noverride indicator.\nIn fact, this problem does not seem to come from JDT/Core binding.\n\nI\u0027ve set a breakpoint in OverrideIndicatorManager.open() method at line 106.\nNow I try to click on override indicator of setValue(Object) method in one of\nDefaultCellEditor constructor \u003d\u003e definingMethod.exist() returns false.\nI think that\u0027s why Dany assign this bug to JDT/Core...\n\nHowever, now try a different scenario:\n1) select the setValue(Object) method\n2) click on F3 to open editor on anonymous class\n3) in this new editor click on override indicator\n\u003d\u003e at my breakpoint, definingMethod.exist() now returns true!\n\nmethodBinding (result of resolveBinding() on methodDeclaration node), is the\nsame in both scenarios but definingMethodBinding is different \u003d\u003e it looks like\nproblem comes from findMethodDefininition(IMethodBinding,boolean) which does not\ncompute correctly method binding from JDT/Core binding key\n\nSo, put back to JDT/Text component for comment and further investigation\n",
    "Not sure what the second scenario should prove.\ndefiningMethodBinding.getJavaElement() should *not* return the method in the\nanonymous class but the EditorDelegate.setValue(Object).\n\nI will have to debug this with Martin to see whether/why we compute the wrong\nmethod binding.",
    "Sorry to have returned this bug a little bit too rapidly...\nYou\u0027re right, in my second scenario the element exist but was not correct!\nI\u0027ve verified that in first scenario Binding.findMethodDefinition returns\ncorrect binding:\nLjavax/swing/DefaultCellEditor$EditorDelegate;.setValue(Ljava/lang/Object;)V\nbut getJavaElement() fails to return a valid java element.\n\nPut back in JDT/Core land...\n",
    "Problem is located in TypeBinding.getUnresolvedJavaElement(TypeBinding)\nIn this case, typeBinding argument is a MemberTypeBinding:\nMember type : EditorDelegate (id\u003dNoId)\nprotected class javax.swing.DefaultCellEditor$EditorDelegate\n\textends java.lang.Object\n\timplements : java.awt.event.ActionListener, java.awt.event.ItemListener,\njava.io.Serializable\n\tenclosing type : javax.swing.DefaultCellEditor\n...\nbut fileName computed in this method does not reflect it:\n[\u003d, b, 1, 0, 0, 7, 7, 6, /, D, :, \\, /, a, \\, /, J, D, K, s, \\, /, s, u, n, \\,\n/, 1, ., 5, ., 0, \\, /, j, r, e, \\, /, l, i, b, \\, /, r, t, ., j, a, r, |, j, a,\nv, a, x, /, s, w, i, n, g, /, D, e, f, a, u, l, t, C, e, l, l, E, d, i, t, o, r,\n., c, l, a, s, s]\n\nthen classFile is:\nDefaultCellEditor.class [in javax.swing [in D:\\a\\JDKs\\sun\\1.5.0\\jre\\lib\\rt.jar\n[in b100776]]]\n  class DefaultCellEditor\n\nand this method returns enclosing type binding instead of member type one...\n",
    "You can also see problem when looking at the method binding in the AST view:\n\n- open the AST view on DefaultCellEditor\n    line 90, (\u0027setValue\u0027), expand method binding\nor\n    line 278 (\u0027setValue\u0027)\n\njava.lang.IllegalArgumentException\n\tat org.eclipse.jdt.core.Signature.getParameterCount(Signature.java:981)\n\tat org.eclipse.jdt.core.Signature.getParameterTypes(Signature.java:1155)\n\tat org.eclipse.jdt.core.Signature.getParameterTypes(Signature.java:1194)\n\tat org.eclipse.jdt.ui.JavaElementLabels.getMethodLabel(JavaElementLabels.java:490)\n\tat org.eclipse.jdt.ui.JavaElementLabels.getElementLabel(JavaElementLabels.java:386)\n\tat org.eclipse.jdt.ui.JavaElementLabels.getElementLabel(JavaElementLabels.java:363)\n\tat org.eclipse.jdt.astview.views.JavaElement.getLabel(JavaElement.java:55)\n\tat\norg.eclipse.jdt.astview.views.ASTViewLabelProvider.getText(ASTViewLabelProvider.java:66)\n\tat\norg.eclipse.jface.viewers.StructuredViewer.buildLabel(StructuredViewer.java:1877)\n\tat org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:231)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:85)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:621)\n\tat\norg.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:434)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)\n\tat\norg.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1763)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:535)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:514)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:494)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:948)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer$4.treeExpanded(AbstractTreeViewer.java:959)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:179)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n...",
    "comment 9 issue seems to be related to bug 100549...\n\u003d\u003e set this bug as depending on it",
    "Created an attachment (id\u003d23650)\nFix partially fixing the problem\n\nThis fix partially fixes the problem as now overriden indicator works but only\nin top level class editor (ie. DefaultCellEditor.class).\nIt still fails in second scenario (ie. in DefaultCellEditor$1.class editor)\n\nI\u0027ve also added a change in SourceTypeBinding.computeUniquekey(boolean) method\nto try to fix bug 100549 issue but I\u0027m not really sure it is the correct thing\nto do...\n",
    "Hope this patch may help a little bit...",
    "In fact, bug 100549 has nothing to do with this one.\nRemoving dependency.",
    "Really removing dependency",
    "Created an attachment (id\u003d23714)\nImproved patch\n\nThis patch takes a different approach: it uses the binding\u0027s constant pool name\nto get the class file name.",
    "Created an attachment (id\u003d23723)\nAnother approach\n\nIn this approach, we ensure that the class file name is always the toplevel\ntype class file name.\nThe patch still needs to handle the case of anonymous and local types (see\nTODO)",
    "Anyway, the bug existed in 3.0. So this is not a regression.\nThis is a good candidate for 3.1.1",
    "Created an attachment (id\u003d26288)\nMerged patches from comment 15 and comment 16\n",
    "Created an attachment (id\u003d26289)\nRegression test\n",
    "+1 for 3.1.1",
    "Released fix (slightly modified to handle default binary packages) and\nregression tests\nASTModelBridgeTests#testBinaryMemberTypeFromAnonymousClassFile1() and\ntestBinaryMemberTypeFromAnonymousClassFile2() in both HEAD and R3_1_maintenance\nbranch.",
    "Verified in I20050920-0010 for 3.2M2",
    "Verified for 3.1.1 using M20050923-1430."
  ],
  "commentCreationDates": [
    "2005-06-17T20:29:56+02:00",
    "2005-06-17T20:54:02+02:00",
    "2005-06-20T11:26:12+02:00",
    "2005-06-20T14:21:26+02:00",
    "2005-06-20T14:28:29+02:00",
    "2005-06-21T13:06:59+02:00",
    "2005-06-21T13:52:19+02:00",
    "2005-06-21T14:45:03+02:00",
    "2005-06-21T14:53:10+02:00",
    "2005-06-21T14:56:44+02:00",
    "2005-06-21T20:01:35+02:00",
    "2005-06-21T20:09:42+02:00",
    "2005-06-21T20:10:22+02:00",
    "2005-06-22T10:58:20+02:00",
    "2005-06-22T11:00:07+02:00",
    "2005-06-22T12:09:34+02:00",
    "2005-06-22T14:53:21+02:00",
    "2005-06-22T14:54:15+02:00",
    "2005-08-19T12:56:43+02:00",
    "2005-08-19T12:57:05+02:00",
    "2005-09-01T12:40:09+02:00",
    "2005-09-02T12:35:17+02:00",
    "2005-09-21T13:48:37+02:00",
    "2005-09-26T16:16:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.Signature.getParameterCount",
          "source": "Signature.java:981"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.getParameterTypes",
          "source": "Signature.java:1155"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.getParameterTypes",
          "source": "Signature.java:1194"
        },
        {
          "method": "org.eclipse.jdt.ui.JavaElementLabels.getMethodLabel",
          "source": "JavaElementLabels.java:490"
        },
        {
          "method": "org.eclipse.jdt.ui.JavaElementLabels.getElementLabel",
          "source": "JavaElementLabels.java:386"
        },
        {
          "method": "org.eclipse.jdt.ui.JavaElementLabels.getElementLabel",
          "source": "JavaElementLabels.java:363"
        },
        {
          "method": "org.eclipse.jdt.astview.views.JavaElement.getLabel",
          "source": "JavaElement.java:55"
        },
        {
          "method": "org.eclipse.jdt.astview.views.ASTViewLabelProvider.getText",
          "source": "ASTViewLabelProvider.java:66"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.buildLabel",
          "source": "StructuredViewer.java:1877"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.doUpdateItem",
          "source": "TreeViewer.java:231"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run",
          "source": "AbstractTreeViewer.java:85"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:44"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:148"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem",
          "source": "AbstractTreeViewer.java:621"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run",
          "source": "StructuredViewer.java:434"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:44"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:148"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateItem",
          "source": "StructuredViewer.java:1763"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
          "source": "AbstractTreeViewer.java:535"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$1.run",
          "source": "AbstractTreeViewer.java:514"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createChildren",
          "source": "AbstractTreeViewer.java:494"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand",
          "source": "AbstractTreeViewer.java:948"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$4.treeExpanded",
          "source": "AbstractTreeViewer.java:959"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:179"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 9,
      "bugId": "100636",
      "date": "2005-06-21T14:56:44+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "100636",
  "bugId": "100636",
  "date": "2005-06-17T20:29:56+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}