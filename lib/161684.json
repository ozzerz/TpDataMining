{
  "comments": [
    "tried to run the remoteservices tests under JDK 6 and it falied with an...\nSomething for you guys too keep an eye.  Works like a treat under 5\n\nTEST clientOne id\u003dGUID[0_q8bXU3NGIATQUDmZFcKEMy_CU-]\nTEST clientTwo id\u003dGUID[9PAv6vj1UMvDEF3wKF.Zd68w9JU-]\nWaiting for 2000ms\n(trace)org.eclipse.ecf.provider.Trace.err[10/20/06;15:07:43:343]GUID[9PAv6vj1UMvDEF3wKF.Zd68w9JU-]:org.eclipse.ecf.provider.generic.TCPClientSOContainer:Exception in handleSharedObjectMessage:SharedObjectMessage[StringID[org.eclipse.ecf.provider.remoteservice.generic.RegistrySharedObject];[B@15f7c86]\njava.lang.ClassNotFoundException: [Ljava.lang.Object;\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:347)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat org.eclipse.ecf.core.util.IdentifiableObjectInputStream.resolveClass(IdentifiableObjectInputStream.java:49)\n\tat java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)\n\tat java.io.ObjectInputStream.readClassDesc(Unknown Source)\n\tat java.io.ObjectInputStream.readArray(Unknown Source)\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.defaultReadFields(Unknown Source)\n\tat java.io.ObjectInputStream.readSerialData(Unknown Source)\n\tat java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.defaultReadFields(Unknown Source)\n\tat java.io.ObjectInputStream.readSerialData(Unknown Source)\n\tat java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.readObject(Unknown Source)\n\tat org.eclipse.ecf.provider.generic.SOContainer.deserializeSharedObjectMessage(SOContainer.java:1061)\n\tat org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage(SOContainer.java:712)\n\tat org.eclipse.ecf.provider.generic.SOContainer.processAsynch(SOContainer.java:879)\n\tat org.eclipse.ecf.provider.generic.ClientSOContainer.processAsynch(ClientSOContainer.java:333)\n\tat org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent(SOContainer.java:194)\n\tat org.eclipse.ecf.provider.comm.tcp.Client.handleRcv(Client.java:386)\n\tat org.eclipse.ecf.provider.comm.tcp.Client.access$5(Client.java:374)\n\tat org.eclipse.ecf.provider.comm.tcp.Client$4.run(Client.java:359)\n\tat java.lang.Thread.run(Unknown Source)\nWaiting for 2000ms",
    "This seems to be failing to load the java.lang.Object class during deserialization...which doesn\u0027t make any sense.  Could there be some problem with use of JDK libs?  (e.g. using JDK 1.5 libs with 1.6 VM?)\n\n",
    "*** Bug 161686 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d52378)\nHack that allows the test to pass on a 1.6 JVM.\n\nThis hack is for org.eclipse.ecf and modifies IdentifiableObjectInputStream to catch the CNFE and make a call to the superclass\u0027s resolveClass(ObjectStreamClass) method.\n\nThe 1.6 JVM fails regardless of whether I have my projects at a 1.4 compiler with a 1.4 JRE or whether they\u0027re all using a 1.6 compiler with a 1.6 JRE. With this try-catch in place, the tests will pass for 1.4, 1.5, and 1.6 JVMs with a 1.4 compiler setting and JRE (admittedly I haven\u0027t tried 1.5, but I don\u0027t see why not). Using a 1.6 compiler setting and JRE also passes the test successfully on a 1.6 JVM.\n\nThe method employed is unlikely to be the desired solution, but hopefully will be a source of divine inspiration for the proper solution.",
    "I don\u0027t have JDK 6 yet, and it will be a couple of days before I can work on this, but does anyone have any insight as to why this classload is failing in the IdentifiableObjectInputStream?  Our code is not doing anything unusual and the loading of Object *should* always (obviously) succeed.  It could signify a bug in the 6 VM.\n\nI\u0027ll hold off on apply the patch/hack to the codebase so we can each do a little investigation with 6.\n\n(In reply to comment #3)\n\u003e Created an attachment (id\u003d52378) [edit]\n\u003e Hack that allows the test to pass on a 1.6 JVM.\n\u003e \n\u003e This hack is for org.eclipse.ecf and modifies IdentifiableObjectInputStream to\n\u003e catch the CNFE and make a call to the superclass\u0027s\n\u003e resolveClass(ObjectStreamClass) method.\n\u003e \n\u003e The 1.6 JVM fails regardless of whether I have my projects at a 1.4 compiler\n\u003e with a 1.4 JRE or whether they\u0027re all using a 1.6 compiler with a 1.6 JRE. With\n\u003e this try-catch in place, the tests will pass for 1.4, 1.5, and 1.6 JVMs with a\n\u003e 1.4 compiler setting and JRE (admittedly I haven\u0027t tried 1.5, but I don\u0027t see\n\u003e why not). Using a 1.6 compiler setting and JRE also passes the test\n\u003e successfully on a 1.6 JVM.\n\u003e \n\u003e The method employed is unlikely to be the desired solution, but hopefully will\n\u003e be a source of divine inspiration for the proper solution.\n\u003e \n\n",
    "By some act of divine intervention, I can no longer reproduce this error on 1.6. Aaron, could you verify this against CVS HEAD?",
    "Can we confirm this is working now (ECF 0.9.3 stable) on JDK 6 VM?\n\n(In reply to comment #5)\n\u003e By some act of divine intervention, I can no longer reproduce this error on\n\u003e 1.6. Aaron, could you verify this against CVS HEAD?\n\u003e \n\n",
    "(In reply to comment #6)\n\u003e Can we confirm this is working now (ECF 0.9.3 stable) on JDK 6 VM?\n\nJust tried this today with latest CVS HEAD now that Java SE 6 has been released.\n\nPASS - 1.4.2.06\nPASS - 1.5.0.06\nPASS - 1.6.0.00",
    "Hi Remy,\n\nThat\u0027s great...thanks much.  I\u0027m marking this as fixed then.  If the bug resurfaces (whether it\u0027s in ECF or JDK 6.0) for anyone please reopen.\n\n(In reply to comment #7)\n\u003e (In reply to comment #6)\n\u003e \u003e Can we confirm this is working now (ECF 0.9.3 stable) on JDK 6 VM?\n\u003e \n\u003e Just tried this today with latest CVS HEAD now that Java SE 6 has been\n\u003e released.\n\u003e \n\u003e PASS - 1.4.2.06\n\u003e PASS - 1.5.0.06\n\u003e PASS - 1.6.0.00\n\u003e \n\n"
  ],
  "commentCreationDates": [
    "2006-10-20T07:04:51+02:00",
    "2006-10-20T08:19:27+02:00",
    "2006-10-20T09:13:03+02:00",
    "2006-10-20T10:54:02+02:00",
    "2006-10-20T15:54:39+02:00",
    "2006-11-06T10:03:53+01:00",
    "2006-11-16T19:07:46+01:00",
    "2006-12-14T11:10:33+01:00",
    "2006-12-14T15:50:39+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "[Ljava.lang.Object;",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:402"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:347"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ecf.core.util.IdentifiableObjectInputStream.resolveClass",
          "source": "IdentifiableObjectInputStream.java:49"
        },
        {
          "method": "java.io.ObjectInputStream.readNonProxyDesc",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readClassDesc",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readArray",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readObject0",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.defaultReadFields",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readSerialData",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readOrdinaryObject",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readObject0",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.defaultReadFields",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readSerialData",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readOrdinaryObject",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readObject0",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readObject",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.deserializeSharedObjectMessage",
          "source": "SOContainer.java:1061"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage",
          "source": "SOContainer.java:712"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.processAsynch",
          "source": "SOContainer.java:879"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.ClientSOContainer.processAsynch",
          "source": "ClientSOContainer.java:333"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent",
          "source": "SOContainer.java:194"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.handleRcv",
          "source": "Client.java:386"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client.access$5",
          "source": "Client.java:374"
        },
        {
          "method": "org.eclipse.ecf.provider.comm.tcp.Client$4.run",
          "source": "Client.java:359"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "161684",
      "date": "2006-10-20T07:04:51+02:00",
      "product": "ECF",
      "component": "ecf.core",
      "severity": "minor"
    }
  ],
  "groupId": "161684",
  "bugId": "161684",
  "date": "2006-10-20T07:04:51+02:00",
  "product": "ECF",
  "component": "ecf.core",
  "severity": "minor"
}