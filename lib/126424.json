{
  "comments": [
    "[Note bug description continued in multiple comments... Why don\u0027t you allow\nattachments? ]\n\nI got the following error, which should never be possible: \n\nException in thread \"main\" java.lang.ClassFormatError: Repetitive method name/signature in class file collagen/plan/SetBeforeAct\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(Unknown Source)\n\tat java.security.SecureClassLoader.defineClass(Unknown Source)\n\tat java.net.URLClassLoader.defineClass(Unknown Source)\n\tat java.net.URLClassLoader.access$100(Unknown Source)\n\tat java.net.URLClassLoader$1.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClassInternal(Unknown Source)\n\tat collagen.plan.Builtin.\u003cclinit\u003e(Builtin.java:18)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Unknown Source)\n\tat com.merl.util.Utils.instantiate(Utils.java:202)\n\tat collagen.plan.Library$Path.setUp(Library.java:315)\n\tat collagen.Collagen.preInit(Collagen.java:237)\n\tat com.merl.util.BeanComponent$Base.init(BeanComponent.java:1222)\n\tat com.merl.util.BeanComponent$Base.start(BeanComponent.java:1268)\n\tat com.merl.util.BeanComponent$Base.main(BeanComponent.java:674)\n\tat com.merl.util.BeanComponentApplet.main(BeanComponentApplet.java:29)\n\tat collagen.Collagen.main(Collagen.java:152)\n\nI enclose the source file later below, but the entire project is much\ntoo large.  I am just doing a normal Java project.  Note that if I use\njavac from the the command line to recompile the source file, the\noffending duplicate method signature for getParameterOps() goes away:\n\n***********************************************************************\n\n\u003e javap collagen.plan.SetBeforeAct\nCompiled from \"SetBeforeAct.java\"\npublic class collagen.plan.SetBeforeAct extends collagen.plan.Act$Base implements collagen.plan.Manipulation,collagen.plan.SetBefore{\n    public static int INDEX;\n    public static final collagen.infer.equal.Term$Slot[] PARAMETERS;\n    static {};\n    public collagen.plan.Momento getBefore();\n    public collagen.plan.Momento getAfter();\n    public void setBefore(collagen.plan.Momento);\n    public void setAfter(collagen.plan.Momento);\n    public collagen.plan.Act$Occurrence newOccurrence(long);\n    public collagen.plan.Act$Quoted getPurpose();\n    public int getIndex();\n    public collagen.infer.equal.Term$Slot[] getParameterOps();\n    protected collagen.infer.equal.Term[] getParameterArray();\n    protected void setParameterArray(collagen.infer.equal.Term[]);\n    public boolean isShowable();\n    public collagen.plan.SetBeforeAct();\n    public collagen.plan.SetBeforeAct(collagen.plan.Actor, collagen.plan.Act$Quoted);\n    public collagen.plan.SetBeforeAct(collagen.infer.equal.Term[], collagen.infer.equal.Term[], collagen.infer.equal.Term[]);\n    public collagen.plan.SetBeforeAct(collagen.plan.Actor, collagen.plan.Act);\n    public boolean requiresExplanation();\n    public collagen.infer.tms.Proposition[] matches(collagen.infer.equal.Term, boolean);\n    public java.lang.Boolean isApplicable();\n    public java.lang.Boolean isAchieved();\n    public collagen.infer.equal.Term$Slot[] getResultOps();  \u003c\u003c\u003cALSO WRONG!\n    public collagen.infer.equal.Term$Slot[] getPropertyOps(); \u003c\u003c\u003cALSO WRONG!\n    public collagen.infer.equal.Term$Slot[] getParameterOps();  \u003c\u003c\u003cDUPLICATE!!!\n}\n\n****************************************************************\n\u003e javac SetBeforeAct.java\n\u003e javap collagen.plan.SetBeforeAct\nCompiled from \"SetBeforeAct.java\"\npublic class collagen.plan.SetBeforeAct extends collagen.plan.Act$Base implements collagen.plan.Manipulation,collagen.plan.SetBefore{\n    public static int INDEX;\n    public static final collagen.infer.equal.Term$Slot[] PARAMETERS;\n    public collagen.plan.Momento getBefore();\n    public collagen.plan.Momento getAfter();\n    public void setBefore(collagen.plan.Momento);\n    public void setAfter(collagen.plan.Momento);\n    public collagen.plan.Act$Occurrence newOccurrence(long);\n    public collagen.plan.Act$Quoted getPurpose();\n    public int getIndex();\n    public collagen.infer.equal.Term$Slot[] getParameterOps();\n    protected collagen.infer.equal.Term[] getParameterArray();\n    protected void setParameterArray(collagen.infer.equal.Term[]);\n    public boolean isShowable();\n    public collagen.plan.SetBeforeAct();\n    public collagen.plan.SetBeforeAct(collagen.plan.Actor, collagen.plan.Act$Quoted);\n    public collagen.plan.SetBeforeAct(collagen.infer.equal.Term[], collagen.infer.equal.Term[], collagen.infer.equal.Term[]);\n    public collagen.plan.SetBeforeAct(collagen.plan.Actor, collagen.plan.Act);\n    public boolean requiresExplanation();\n    public collagen.infer.tms.Proposition[] matches(collagen.infer.equal.Term, boolean);\n    public java.lang.Boolean isApplicable();\n    public java.lang.Boolean isAchieved();\n    static {};\n}\n\n\u003e Notice that not only redundant getParameterOps() goes away, but also\ngetPropertyOps() and getResultOps(), which are also _wrong_ (see\nnext comment)",
    "Ok, the attachment option doesn\u0027t show up until the next window... But I can\u0027t view them (View All is grayed out).\n\nAnyways, I attached both source file for both the offending class and its parent, and the bad class file, and the class file for it\u0027s parent, so you can do a full decompile to see more info.\n\nHere\u0027s the key info re the bad method entries (you can see the last one just leads to an infinite loop!).\n\nI am hosed.  A workaround idea would be welcome... -CR\n\n\npublic collagen.infer.equal.Term$Slot[] getResultOps();\n  Code:\n   0:\taload_0\n   1:\tinvokevirtual\t#198; //Method collagen/plan/Act$Base.getResultOps:()[Lcollagen/infer/equal/Term$Slot;\n   4:\tareturn\n\npublic collagen.infer.equal.Term$Slot[] getPropertyOps();\n  Code:\n   0:\taload_0\n   1:\tinvokevirtual\t#203; //Method collagen/plan/Act_Builtin.getPropertyOps:()[Lcollagen/infer/equal/Term$Slot;\n   4:\tareturn\n\npublic collagen.infer.equal.Term$Slot[] getParameterOps();\n  Code:\n   0:\taload_0\n   1:\tinvokevirtual\t#205; //Method getParameterOps:()[Lcollagen/infer/equal/Term$Slot;\n   4:\tareturn\n\n}\n\n",
    "\n\n*** This bug has been marked as a duplicate of 126423 ***"
  ],
  "commentCreationDates": [
    "2006-02-03T22:11:20+01:00",
    "2006-02-03T22:15:05+01:00",
    "2006-02-03T22:18:12+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassFormatError",
      "message": "Repetitive method name/signature in class file collagen/plan/SetBeforeAct",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "Unknown Source"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "Unknown Source"
        },
        {
          "method": "collagen.plan.Builtin.\u003cclinit\u003e",
          "source": "Builtin.java:18"
        },
        {
          "method": "java.lang.Class.forName0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Unknown Source"
        },
        {
          "method": "com.merl.util.Utils.instantiate",
          "source": "Utils.java:202"
        },
        {
          "method": "collagen.plan.Library$Path.setUp",
          "source": "Library.java:315"
        },
        {
          "method": "collagen.Collagen.preInit",
          "source": "Collagen.java:237"
        },
        {
          "method": "com.merl.util.BeanComponent$Base.init",
          "source": "BeanComponent.java:1222"
        },
        {
          "method": "com.merl.util.BeanComponent$Base.start",
          "source": "BeanComponent.java:1268"
        },
        {
          "method": "com.merl.util.BeanComponent$Base.main",
          "source": "BeanComponent.java:674"
        },
        {
          "method": "com.merl.util.BeanComponentApplet.main",
          "source": "BeanComponentApplet.java:29"
        },
        {
          "method": "collagen.Collagen.main",
          "source": "Collagen.java:152"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "126424",
      "duplicateId": "126423",
      "date": "2006-02-03T22:11:20+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "126423",
  "bugId": "126424",
  "duplicateId": "126423",
  "date": "2006-02-03T22:11:20+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}