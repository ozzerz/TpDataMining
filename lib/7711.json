{
  "comments": [
    "When the pathname of the jar file specified in the plugin.xml file has Japanese \ncharacters, the Eclipse class loader complains it cannot find the classes in \nthe jar file.\n\nThis seems to be a problem in the either its XML parser or the path handling of \nits class loader.\n\nTo reproduce:\n\n1. Install the workbench to a directory named with double-byte Japanese \ncharacters with no spaces.\n2. Open the workbench.\n\nWhen opening the workbench a java.lang.NoClassDefFoundError occurs when opening \nthe plugin jar file. The workbench displays the message ?An error has occurred \nwhen creating this view?.",
    "Attempted to reproduce error with build 2002-01-29 on Win2K (JP).\n\nEclipse splash screen came up for a few seconds and then just died. No error \nlog, no messages to the console.\n\nMoved the org.eclipse.core.runtime/.options file to the eclipse.exe directory \nand turned on all the logging options. Tried to start eclipse (popped up a new \nconsole this time) and printed out nothing (of relevance) to the log. (message \nwas similar to \"Starting up Eclipse Platform:\")",
    "This is most likely because we use URLClassLoaders, and non-ASCII characters are \nnot legal in URLs.  It\u0027s doubtful that we can fix this, since use of URLs is \npervasive throughout Eclipse.  We should try to give some kind of better error \nreporting, but this might have to be done in eclipse.exe or equivalent.",
    "Won\u0027t fix.  Use of URLs for locations is pervasive in Eclipse, and URLs don\u0027t \nsupport non-ASCII characters.",
    "This is a valid requirement for products that intend to offer support for non-\nEnglish operating systems. \n\nIdentifying this as a limitation with respect to chosen technologies does not \nremove this as a product requirement.",
    "The problem occurs in org.eclipse.core.launcher.Main.getBootPath(). We need to \nbe able to set the encoding in the call to URLDecoder.decode(), otherwise it \nis using the Platform encoding and failing. Unfortuanatly this can only be \ndone in 1.4.\n\nSome possibilities:\n\n1). Use reflection. This code is in startup so it is not a high traffic area \nand would only be called once.\n\n2). Compile against 1.4. Be tricky and put a try/catch block around the method \ncall and catch the NoSuchMethodException in which case the codepath would \ndefault to the 1.3 behaviour. Would have to think about how this would affect \nthe RelEng process. (they compile against 1.3 I think? but we supply them the \nstartup.jar manually?)\n",
    "Another alternative might be to look at doing some utf-8 encoding ourselves.",
    "It appears we have a fix, but it will only work for 1.4 VMs.  Will this be an \nacceptable solution on your end?  The problem lies in the Java 1.3 \nimplementation of URLDecoder.decode().\n\nSee also bug 13657, for starting eclipse with GB18030 characters in the install \npath.",
    "Yes. This is fine for us.\n",
    "I am attaching a simple test program (LaunchNLTest.java) that can be used to \ndetermine if a given VM will support a particular language configuration.  If \nthe location printed out does not match the directory of the program, then the \nVM is not correctly handling the URL decoding.  Such a VM will not be able to \nstart Eclipse in that location.\n\n",
    "Created an attachment (id\u003d611)\nexample java file\n",
    "*** Bug 14352 has been marked as a duplicate of this bug. ***",
    "We are now decoding the platform URL manually if JDK 1.4 is not found.  This \nallows for running eclipse in a directory with Japanese characters using 1.3 \nVMs.  Most other URLs are platform-relative, so we can get away without special \ndecoding support elsewhere.\n\nI have tested the fix in the following configurations:\n\nWin2k Japanese + IBM JRE 1.3.1 (build cn131-20020227)\nWIn2k Japanese + Sun JDK 1.4.0 (build 1.4.0-b92)\n\n\nThe fix will be in integration builds \u003e 20020423",
    "Released fix.  Should be available in builds \u003e 20020423",
    "We need to ensure that the decode() method is called in all cases in Main.java \nsince a lot of changes have occurred in this area recently.\n\nbuild 2002-05-15 won\u0027t start on a machine with Japanese characters in the \ninstall directory.\n\nThe new File().listFiles() is returning null and an exception is being thrown \nsaying to check the location of boot.",
    "Build F1\nEclipse fails to start on a german machine as well (Win 2000) when the folder \ncontains german specific characters. It does not find the plaftorm.cfg file.\n\nI also tried running it without the launcher.\nD:\\tmp\\chrix\\??? ?\\20020521\\eclipse\u003e.\\jre\\bin\\java -cp startup.jar org.eclipse.c\nore.launcher.Main -noupdate -debug\n\nWhich displays the following message, but nothing more.\n\nStartup: using configuration file:D:\\tmp\\chrix\\?\u0026#9600;? ?\\20020521\\eclipse\\workspace\\\n.metadata\\.config\\platform.cfg\n",
    "I cannot reproduce on Build F1 in Japanese.\n\nI tried on a Japanese WinXP with Sun VM 1.4.0-b92, and it started without any \nproblem.  Was there a fix made somewhere in the launcher since last week?\n\nChristophe, what VM were you using on the German machine?",
    "This fails with Sun JRE 1.3.1  The stack trace in the log is:\n\njava.lang.RuntimeException: Could not find bootstrap code. Check location of \nboo\nt plug-in or specify -boot.\n        at org.eclipse.core.launcher.Main.searchForBoot(Main.java:373)\n        at org.eclipse.core.launcher.Main.getBootPath(Main.java:343)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:190)\n        at org.eclipse.core.launcher.Main.run(Main.java:643)\n        at org.eclipse.core.launcher.Main.main(Main.java:476)\n",
    "I was using the IBM 1.3.0:\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.3.0)\nClassic VM (build 1.3.0, J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)\n)\n\nHowever, it works with IBM 1.3.1 (german test described above)\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.3.1)\nClassic VM (build 1.3.1, J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT ena\nbled: jitc))",
    "Problem with older VMs.\nInvestigate further time permitting.",
    "*** Bug 19980 has been marked as a duplicate of this bug. ***",
    "Attaching output on console when run using -debug.  Notice that all of the \ndisplayed paths have garbage characters in place of the German ones.  The \ninstall location in this case is d:\\eclipseF3\\test????\\eclipse.",
    "Created an attachment (id\u003d1379)\nText file showing console output\n",
    "The top of that attachment got clipped off.  The first lines of the output \nwere:\n\nStartup: unable to load configuration\njava.io.FileNotFoundException: D:\\eclipseF3\n\\test\u0026#9600;???\\eclipse\\.config\\platform.cfg (Das System kann den angegebenen Pfad \nnicht finden)",
    "Created an attachment (id\u003d1403)\nTest file with proposed encoding fix\n",
    "Attached is a file with a suggested fix to the \"decode\" method on Main and \nInternalBootLoader for handling decoding of URL strings.  To make a very long \nstory short, it turns out that \nclass.getProtectionDomain().getCodeSource().getLocation() returns a different \nkind of URL depending on what kind of class loader loaded it.  When loaded with \na URL classloader, it already correctly handles DBCS characters.  When loaded \nwith the system boot loader, it returns a URL with %hex escape sequences, which \nthen needs to be decoded.  The attached java class demonstrates this different \nbehaviour, when run from a directory containing DBCS characters.  I have tested \nthe fix on the following VM/NLs:\n\nJapanese XP: IBM 1.3.1, Sun 1.3.1, Sun 1.4.0, Sun 1.4.1\nGerman XP: IBM 1.3.1, Sun 1.3.1",
    "This fix has been released.  Fix reviewed by DJ and Rodrigo.",
    "Verified with build 20020618 on Japanese XP using the same four VMs."
  ],
  "commentCreationDates": [
    "2002-01-16T15:12:56+01:00",
    "2002-01-31T23:31:10+01:00",
    "2002-02-14T15:18:25+01:00",
    "2002-03-04T19:41:35+01:00",
    "2002-03-12T15:29:29+01:00",
    "2002-04-11T03:39:59+02:00",
    "2002-04-11T19:25:11+02:00",
    "2002-04-12T18:09:32+02:00",
    "2002-04-12T19:31:54+02:00",
    "2002-04-15T21:45:16+02:00",
    "2002-04-15T21:46:13+02:00",
    "2002-04-23T17:19:33+02:00",
    "2002-04-23T18:12:40+02:00",
    "2002-04-23T19:17:57+02:00",
    "2002-05-16T21:57:22+02:00",
    "2002-05-23T21:25:31+02:00",
    "2002-05-23T21:30:23+02:00",
    "2002-05-23T21:36:19+02:00",
    "2002-05-23T22:09:45+02:00",
    "2002-06-05T23:15:46+02:00",
    "2002-06-12T17:10:33+02:00",
    "2002-06-12T19:35:23+02:00",
    "2002-06-12T19:35:54+02:00",
    "2002-06-12T19:39:12+02:00",
    "2002-06-13T21:46:05+02:00",
    "2002-06-13T21:52:00+02:00",
    "2002-06-18T16:34:30+02:00",
    "2002-06-18T22:19:10+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Could not find bootstrap code. Check location of  boo t plug-in or specify -boot.",
      "elements": [
        {
          "method": "org.eclipse.core.launcher.Main.searchForBoot",
          "source": "Main.java:373"
        },
        {
          "method": "org.eclipse.core.launcher.Main.getBootPath",
          "source": "Main.java:343"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:190"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:643"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:476"
        }
      ],
      "number": 0,
      "commentIndex": 17,
      "bugId": "7711",
      "date": "2002-05-23T21:36:19+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "major"
    }
  ],
  "groupId": "7711",
  "bugId": "7711",
  "date": "2002-01-16T15:12:56+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "major"
}