{
  "comments": [
    "build R2.1\n\nLoaded a project from CVS that contained a linked file. The linked file was\ncreated using a path variable. The path variable is not defined in my workspace.\nThe project was not built due to \"The location for .../linkedFile could not be\ndetermined because it is based on an ndefined path variable.\". I don\u0027t see why\nan invalid linked resource should prevent the project from being built.",
    "This is happening in the java builder.  To generalize this problem, if a\nCoreException is thrown while copying a single resource, should the whole build\nbe aborted?  Perhaps you could put an error marker on that resource and continue\nwith copying the other resources?  Here is a sample stack trace:\n\norg.eclipse.core.internal.resources.ResourceException: The location for /t/abc\ncould not be determined because it is based on an undefined path variable.\n\tat\norg.eclipse.core.internal.resources.Resource.checkCopyRequirements(Resource.java:241)\n\tat\norg.eclipse.core.internal.resources.Resource.assertCopyRequirements(Resource.java:134)\n\tat org.eclipse.core.internal.resources.Resource.copy(Resource.java:501)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder$3.visit(BatchImageBuilder.java:192)\n\tat org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:50)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:60)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack(BatchImageBuilder.java:170)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:113)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:37)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:194)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:122)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:427)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:413)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:125)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:181)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:191)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:151)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:413)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:165)\n\tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:243)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:212)\n\tat org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:884)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1600)\n...\n",
    "Can we still blame such a resource for which the variable path isn\u0027t bound ?\n",
    "I think yes, the relevant information for the user is that the linked resource \nwas not copied to the build output.",
    "What\u0027s supposed to happen when 50 or 500 resources cannot be copied because of \nthe same error?\n\nWe treat all classpath errors (including undefined variables) as major build \nfailures since they can affect so many resources in the project.\n\nProducing hundreds of the same error won\u0027t make things better.",
    "You may have a point here. \nIn my case the linked resource was just an \"extra\" and not an essential part of \nthe project.\nIn the general case linked resources would point to actual build input or may \neven be the only build input. If we think there can be a large number of linked \nresources on the classpath then it\u0027s probably ok or even desirable to abort \nbuilding the project.",
    "Closing.\n\nUnless we can come up with a way to avoid the 50/100 identical error case, I \nthink we\u0027ll leave this as is."
  ],
  "commentCreationDates": [
    "2003-04-02T21:27:59+02:00",
    "2003-04-02T22:24:17+02:00",
    "2003-04-03T09:23:47+02:00",
    "2003-04-03T16:42:30+02:00",
    "2003-04-09T20:52:41+02:00",
    "2003-04-10T14:47:17+02:00",
    "2003-04-10T18:51:32+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "The location for /t/abc could not be determined because it is based on an undefined path variable.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkCopyRequirements",
          "source": "Resource.java:241"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.assertCopyRequirements",
          "source": "Resource.java:134"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.copy",
          "source": "Resource.java:501"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder$3.visit",
          "source": "BatchImageBuilder.java:192"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$1.visitElement",
          "source": "Resource.java:50"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:76"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:80"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.iterate",
          "source": "ElementTreeIterator.java:119"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:60"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack",
          "source": "BatchImageBuilder.java:170"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders",
          "source": "BatchImageBuilder.java:113"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:37"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:194"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:122"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:427"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:889"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:125"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:181"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:191"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:151"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:889"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:165"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:243"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:212"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:884"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1600"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "35993",
      "date": "2003-04-02T22:24:17+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "35993",
  "bugId": "35993",
  "date": "2003-04-02T21:27:59+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}