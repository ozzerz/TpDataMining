{
  "comments": [
    "The Plugin dialog must verify the bundles are signed, but checking caused this error:\n\njava.lang.SecurityException: Either the manfiest file or the signature file has been tampered in this bundle: /opt/local/eclipse/I0110-1600/eclipse/plugins/org.eclipse.core.expressions_3.3.0.v20070109-1100.jar\n\tat org.eclipse.osgi.internal.verifier.SignedBundleFile.verifyManifestAndSingatureFile(SignedBundleFile.java:112)\n\tat org.eclipse.osgi.internal.verifier.SignedBundleFile.processSigner(SignedBundleFile.java:553)\n\tat org.eclipse.osgi.internal.verifier.SignedBundleFile.setBundleFile(SignedBundleFile.java:489)\n\tat org.eclipse.osgi.internal.verifier.SignedBundleHook.getVerifier(SignedBundleHook.java:161)\n\tat org.eclipse.osgi.internal.verifier.SignedBundleHook.getVerifier(SignedBundleHook.java:172)\n\tat org.eclipse.ui.internal.about.AboutBundleData.isSigned(AboutBundleData.java:107)\n\tat org.eclipse.ui.internal.dialogs.AboutPluginsDialog$1.run(AboutPluginsDialog.java:90)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n\n\neclipse.buildId\u003dI20070110-1600\njava.fullversion\u003dJ2RE 1.5.0 IBM J9 2.3 Linux x86-32 j9vmxi3223-20060919 (JIT enabled)\nJ9VM - 20060915_08260_lHdSMR\nJIT  - 20060908_1811_r8\nGC   - 20060906_AA\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\nFramework arguments:  /opt/pwebster/workspaces/presentations330\nCommand-line arguments:  -os linux -ws gtk -arch x86 /opt/pwebster/workspaces/presentations330\n\nLater,\nPW",
    "John, have you seen behaviour like this before?\n\nCould it be a problem with the signing process or the verification code?\n\n",
    "On successive launches of the Plugin details dialog, I get SecurityExceptions about different plugins than core.expressions.\n\nIt seems to change every time.\n\nPW\n",
    "I can\u0027t reproduce on Windows.  However, when I set a breakpoint to debug this, I had \u003e100 threads suspended in the debugger at the same time.  Kim H, this implementation isn\u0027t scalable (imagine an install with 2000 plugins).  I suspect there is some race condition going on when 100 threads are concurrently trying to verify.\n\nAlso CCing Tom because there is likely a bug in the signing code, but it\u0027s a bit of an extreme test case.  I suspect the problem will go away when there is only one background thread doing the verification.",
    "On further poking around, it doesn\u0027t look like this was caused by the threading problem.  I\u0027m going to move this to Equinox to investigate the cause of the security investigation, and I\u0027ll enter a separate bug for the scalability problem in the implementation.",
    "Entered bug 170664 for the UI problem",
    "Running with the UI bug fixed, I am no longer seeing the SecurityException, but many plugins in the install are still failing the verification step.  Basically I now see a mix of red X\u0027s and checks in the plugin details dialog.  It seems to be the same set of plugins failing verification every time.  org.eclipse.core.expressions is a good example that always seems to fail, and it\u0027s small enough to inspect by hand.  I can\u0027t see anything wrong with it, and jarsigner -verify also does not complain.  This is all on Linux only.",
    "John, I\u0027m not able to reproduce on Linux with the latest UI.  When you reproduce are you self-hosting or doing a normal launch?  If you are self-hosting then the bundles you launch from your workspace will not be signed.",
    "Created an attachment (id\u003d57052)\npatch\n\nI can reproduce the original SecurityException if I use the old ui code.\n\nThere seems to be a bug in the VM.  I\u0027m using IBM 1.5 vm.  I\u0027ve found that MessageDigest.digest() is not thread safe.  We always clone the MessageDigest object before calling digest on it so it should be done on a completely separate object.  But it looks like this is not working correctly on Linux (w/ IBM VM at least)\n\nThis patch adds a global lock when calling digest().  This seems strange.  If this is really required then we need to add synchronization to the other places in the code where we call digest().",
    "Re comment #7 - you\u0027re right, I was running in a test environment from unsigned plugins in my workspace.",
    "Created an attachment (id\u003d57182)\npatch\n\nI\u0027m pretty sure this is an IBM VM bug.  I cannot reproduce the issue on the Sun 1.5.0_11 build on Linux.  Strange thing is I cannot reproduce the error on the IBM VM on windows either.  So it may only be a bug in the Linux IBM VM.\n\nIt seems that the IBM VM is not doing a deep copy on MessageDigest.clone() because it is clear that separate threads are stepping on each others digest calculations.\n\nThis patch uses MessageDigest.getInstance instead of clone to get a new instance of the MessageDigest object.  This seems to work around the issue on the Linux IBM VM.  But I have concerns about the performance impact this may have.  Limited performance tests show that MessageDigest.getInstance vs. MessageDigest.clone are 10X slower on the Sun VM.  On the IBM vm the difference is not measurable.  The performance impact will be during classload but only if  osgi.support.signature.verify is set to cause runtime verification checks.  Even then the cost may not be measureable since we are doing more expensive io and digest calculations at this same time.",
    "I did some more research.  Even though I convinced the clone() should work it looks like a best practice for our scenario is to call getInstance each time we want a new \"fresh\" MD object.  Besides we need to work around this VM bug  I released this patch for 3.3 M5.",
    "Created an attachment (id\u003d57936)\npatch\n\nCorrection, I\u0027m about to release this patch new.  The last patch had a bug that prevented an IOException to be thrown properly when an extra entry exists that should not.  Also we need to strip off leading \u0027/\u0027 chars for the entry names to ensure they can match the paths we read from the manifest.",
    "Patch has been released for 3.3 M5.",
    "Eric found some unecessary calls to MessageDigest.clone.  I will attach a patch that Eric has provided.",
    "Created an attachment (id\u003d58161)\nremove clone calls\n\n",
    "I released the patch to remove the clone calls.  Thanks Eric.",
    "in I20070206-0010\nPW\n"
  ],
  "commentCreationDates": [
    "2007-01-16T13:53:17+01:00",
    "2007-01-16T14:48:15+01:00",
    "2007-01-16T14:50:17+01:00",
    "2007-01-16T15:51:53+01:00",
    "2007-01-16T17:18:13+01:00",
    "2007-01-16T21:40:30+01:00",
    "2007-01-16T23:13:13+01:00",
    "2007-01-17T18:34:36+01:00",
    "2007-01-17T23:40:27+01:00",
    "2007-01-18T17:10:18+01:00",
    "2007-01-19T22:05:22+01:00",
    "2007-01-31T19:51:42+01:00",
    "2007-01-31T19:54:29+01:00",
    "2007-01-31T19:55:54+01:00",
    "2007-02-02T22:45:18+01:00",
    "2007-02-02T22:46:57+01:00",
    "2007-02-02T22:53:23+01:00",
    "2007-02-07T12:36:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.SecurityException",
      "message": "Either the manfiest file or the signature file has been tampered in this bundle: /opt/local/eclipse/I0110-1600/eclipse/plugins/org.eclipse.core.expressions_3.3.0.v20070109-1100.jar",
      "elements": [
        {
          "method": "org.eclipse.osgi.internal.verifier.SignedBundleFile.verifyManifestAndSingatureFile",
          "source": "SignedBundleFile.java:112"
        },
        {
          "method": "org.eclipse.osgi.internal.verifier.SignedBundleFile.processSigner",
          "source": "SignedBundleFile.java:553"
        },
        {
          "method": "org.eclipse.osgi.internal.verifier.SignedBundleFile.setBundleFile",
          "source": "SignedBundleFile.java:489"
        },
        {
          "method": "org.eclipse.osgi.internal.verifier.SignedBundleHook.getVerifier",
          "source": "SignedBundleHook.java:161"
        },
        {
          "method": "org.eclipse.osgi.internal.verifier.SignedBundleHook.getVerifier",
          "source": "SignedBundleHook.java:172"
        },
        {
          "method": "org.eclipse.ui.internal.about.AboutBundleData.isSigned",
          "source": "AboutBundleData.java:107"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.AboutPluginsDialog$1.run",
          "source": "AboutPluginsDialog.java:90"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "170622",
      "date": "2007-01-16T13:53:17+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "170622",
  "bugId": "170622",
  "date": "2007-01-16T13:53:17+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}