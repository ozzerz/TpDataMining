{
  "comments": [
    "Build: I20030813\n\nI am getting an assertion failure during search.  I am searching for references\nto a private field.  Searching in hierarchy or in workspace causes the same\nassertion failure.  Log file attached.\n\nOlivier: The assertion is in the constructor for jdt.internal.core.SourceType. \nIf the assertion failure message included the name of the type, it would make\ndebugging this case easier.",
    "Created an attachment (id\u003d5765)\nLog file showing stack trace\n",
    "I changed the assertion call to report the name in the error message. Now it \nwill look like this:\nThe source type has an invalid name: {0}\n\nwhere {0} will be replaced by the argument name.\n\n",
    "Would you have any steps to reproduce?",
    "I can reproduce in my workspace every time, but not in a new workspace.  I\ninstrumented jdtcore.jar and ran it again in my workspace.  The string passed to\nSourceType was \".##Workbench\".  The filename was \".#Workbench.java.1.85\"  These\nare the files that are created by CVS when you perform an update on a file with\nconflicts that can\u0027t be resolved automatically.\n\nThe interesting thing to me is that I did \"search in hierarchy\", and this took\nalmost a minute to complete.  In this case the hierarchy involved three class\n(Object included), so clearly the search scope is broken.  The .#Workbench file\nwas in the same package, but definitely not in the hierarchy of the type I was\nsearching.",
    "It sounds like the .#Workbench.java file was indexed when it should not be.\nJohn do you still have your workspace? If you do, can you please zip it and \ngive it to me?",
    "I can still reproduce with build I20030820, but now I get a different error on\nthe same search:\n\njava.lang.reflect.InvocationTargetException: java.lang.NullPointerException\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.NullPointerException.\u003cinit\u003e(NullPointerException.java:63)\n\tat org.eclipse.jdt.internal.compiler.parser.Scanner.setSource(Scanner.java)\n\tat org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java)\n\tat org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.buildBindings(MatchLocator.java)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:594)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:681)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:499)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:426)\n\tat\norg.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute(JavaSearchOperation.java:90)\n\tat\norg.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:71)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1574)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1591)\n\tat\norg.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)",
    "To reproduce in my workspace:\n\n1) Open file UILockListener.java\n2) Select the field \"ui\".\n3) Search for references in hierarchy\n\nAgain, I think it is interesting that this search takes over a minute even\nthough there are only two types in the hierarchy.",
    "Sorry John, but I cannot reproduce the problem. After starting your workspace, \nI refreshed all projects, and did the search to the field \u0027ui\u0027 in the \nhierarchy. I got 4 matches and no error/stack trace.\n\nAs for the time it takes, search in hierarchy doesn\u0027t first compute the \nhierarchy (we found it was too costly in most cases). It finds potential \nmatches in the workspace (actually in current project and its dependent \nprojects only), resolve these potential matches and eliminate the ones that are \nnot in the hierarchy. In your case, there are 4700 potential matches. These are \nbecause of the references to packages containing \u0027ui\u0027 (e.g. \u0027org.eclipse.ui\u0027). \nWe might want to optimize out those. I entered bug 41954.",
    "Strange... it still happens for me every time (the NPE, not the original\nassertion failure).  Could there be something that invalidates the indexes on\nmoving from OTT-\u003eSNZ?  Change of time zone could make the indexes appear to be\nout of sync, and thus get recomputed??  Would it help for Olivier to look at it\nlocally?",
    "To reproduce it, it might be good to remove the code that recomputes the \nindexes.",
    "Even without recomputing the indexes, I don\u0027t get the NPE that John got.\n\nJohn, which VM are you using?",
    "I\u0027m using J9SC, build 20030714 (with -Xj9 VM arg).",
    "Still no luck reproducing it with J9SC, build 20030714 .\nCould you please try to turn the search trace on?\n\nAdd these lines to the .options file:\norg.eclipse.jdt.core/debug\u003dtrue\norg.eclipse.jdt.core/debug/search\u003dtrue",
    "After upgrading to the M3 build I am no longer able to reproduce the failure...",
    "Thanks. Please reopen if you see the problem again."
  ],
  "commentCreationDates": [
    "2003-08-14T16:45:23+02:00",
    "2003-08-14T16:46:14+02:00",
    "2003-08-14T17:04:20+02:00",
    "2003-08-14T18:47:43+02:00",
    "2003-08-14T20:16:52+02:00",
    "2003-08-22T16:12:48+02:00",
    "2003-08-25T16:31:44+02:00",
    "2003-08-25T23:44:00+02:00",
    "2003-08-26T12:43:35+02:00",
    "2003-08-26T15:25:33+02:00",
    "2003-08-26T15:46:02+02:00",
    "2003-08-26T18:12:31+02:00",
    "2003-08-26T19:12:47+02:00",
    "2003-08-27T13:49:49+02:00",
    "2003-09-08T17:45:03+02:00",
    "2003-09-09T11:09:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.NullPointerException.\u003cinit\u003e",
          "source": "NullPointerException.java:63"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Scanner.setSource",
          "source": "Scanner.java"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.parse",
          "source": "Parser.java"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.dietParse",
          "source": "Parser.java"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.buildBindings",
          "source": "MatchLocator.java"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:594"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:681"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:499"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:426"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute",
          "source": "JavaSearchOperation.java:90"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:71"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1574"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1591"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:85"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "41554",
      "date": "2003-08-25T16:31:44+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "41554",
  "bugId": "41554",
  "date": "2003-08-14T16:45:23+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}