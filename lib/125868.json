{
  "comments": [
    "Running HEAD.\n\n1.  restart eclipse\n2.  start a jdt debug session and resulted in this exception\n\nIt seems to only happen on the first launch.  Subsequent launches do not result in exceptions.\n\norg.eclipse.swt.SWTException: Invalid thread access\nat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\nat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\nat org.eclipse.swt.SWTException.\u003cinit\u003e(SWTException.java:87)\nat org.eclipse.swt.SWT.error(SWT.java:3283)\nat org.eclipse.swt.SWT.error(SWT.java:3206)\nat org.eclipse.swt.SWT.error(SWT.java:3177)\nat org.eclipse.swt.widgets.Display.error(Display.java:974)\nat org.eclipse.swt.widgets.Display.checkDevice(Display.java)\nat org.eclipse.swt.widgets.Display.disposeExec(Display.java:919)\nat org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.hookDisplay(ImageDescriptorRegistry.java:85)\nat org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e(ImageDescriptorRegistry.java:48)\nat org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e(ImageDescriptorRegistry.java:36)\nat org.eclipse.jdt.internal.ui.JavaPlugin.internalGetImageDescriptorRegistry(JavaPlugin.java:861)\nat org.eclipse.jdt.internal.ui.JavaPlugin.getImageDescriptorRegistry(JavaPlugin.java:337)\nat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getJavaElementImageRegistry(JDIModelPresentation.java:1881)\nat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:870)\nat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:658)\nat org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:106)\nat org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:141)\nat org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:55)\nat org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.getImageDescriptors(AsynchronousDebugLabelAdapter.java:85)\nat org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter.computeLabels(AsynchronousLabelAdapter.java:81)\nat org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.computeLabels(AsynchronousDebugLabelAdapter.java)\nat org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter$2.run(AsynchronousLabelAdapter.java:48)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Can reproduce by closing all editors, java perspective, etc., then relauching after workspace restart. Happens when the debugger is the first to retrieve an image from JUI (in background thread).",
    "I think the severity of this one should be increased.\nI\u0027ve seen this too while testing our debuggers that depend on JDT, and the symptoms are rather severe: \n- No labels are retreived so the variables view is a tree of blank nodes\n- A dialog box comes up listing all the label retreival failures\n- It looks like the debugger is broken and it\u0027s not clear to a user that a relaunch would help\n",
    "*** Bug 135639 has been marked as a duplicate of this bug. ***",
    "Can we specialize #needsUIJob() to do the right thing the first time a label is computed. We could always run the first label job in the UI, or somehow test if the image registry has been created?",
    "Created an attachment (id\u003d38690)\nPatch\n\nPatch asks the model presentation if the image registry has been initialized.",
    "CC Darin Wright for RC2 approval.",
    "+1",
    "cleaned up and released patch to HEAD.\nChanges in DelegatingModelPresentation, LazyModelPresetation, AsynchronousLabelAdapter, and DebugElementHelper.",
    "Darin (and Jeff), please verify.",
    "I still got this expcetion running RC1 + debug from HEAD + JDT debug from HEAD.\n\norg.eclipse.swt.SWTException: Invalid thread access\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat org.eclipse.swt.SWTException.\u003cinit\u003e(SWTException.java:87)\n\tat org.eclipse.swt.SWT.error(SWT.java:3374)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.SWT.error(SWT.java:3268)\n\tat org.eclipse.swt.widgets.Display.error(Display.java:978)\n\tat org.eclipse.swt.widgets.Display.checkDevice(Display.java)\n\tat org.eclipse.swt.widgets.Display.disposeExec(Display.java:923)\n\tat org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.hookDisplay(ImageDescriptorRegistry.java:85)\n\tat org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e(ImageDescriptorRegistry.java:48)\n\tat org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e(ImageDescriptorRegistry.java:36)\n\tat org.eclipse.jdt.internal.ui.JavaPlugin.internalGetImageDescriptorRegistry(JavaPlugin.java:821)\n\tat org.eclipse.jdt.internal.ui.JavaPlugin.getImageDescriptorRegistry(JavaPlugin.java:304)\n\tat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getJavaElementImageRegistry(JDIModelPresentation.java:1856)\n\tat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:838)\n\tat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:626)\n\tat org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:110)\n\tat org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:141)\n\tat org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:61)\n\tat org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.getImageDescriptors(AsynchronousDebugLabelAdapter.java:86)\n\tat org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter.computeLabels(AsynchronousLabelAdapter.java:82)\n\tat org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.computeLabels(AsynchronousDebugLabelAdapter.java)\n\tat org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter$2.run(AsynchronousLabelAdapter.java:49)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Kevin,\nI still got the exception when trying out a jdt debug session this morning.\nThx.\nSamantha",
    "Sorry Kevin -\nFor some reasons, my workspace did not automatically rebuild after I have refreshed.  I looked at the JDIModelPresentation trace more closely and it did not make sense.  I will mark this as resolved again. Sorry for the inconvenience.\nSam",
    "mark as fixed again.",
    "Re-opening this again.\n\nWe tried to verify with our debugger that wrappers JDT.  We are still getting the same exception.\n\nHere\u0027s the problem:\nThe fix involves keeping track if the image registry of a model presentation is initilized.  If a model presentation is not initialized, the platform asks us for images on the UI thread, giving us a chance to create our image registry without hitting the exception.  After that, the platform asks us for images on a worker thread.  \n\nWhen our debugger is launched and the platform asks us for an image, the platform marks our model presentation as initialized.  As we start showing JDT debug elements, we will ask JDT\u0027s model presentation for images.  Since we are called on a worker thread, and JDT has not had a chance to create its image registry, we get into the same exception.",
    "consider for RC3",
    "Samantha, since you\u0027re debugger knows that it wrappers JDT, it should cause JDT image registry to be created on its first access. Otherwise the platform has no way of knowing when to call model presentations in the UI thread, and would have to do it all the time. The knowledge of what debugger you wrapper is in your model presentation? Can you force-load the JDT debug image registry.",
    "For now, you may need to use an internal reference - something like \"JDIDebugUIPlugin.getDefault().getImageRegistry()\".",
    "I will have to check to see if it\u0027s possible.  I will get back to you on that.\n\nBut it still does not solve the problem that JDT also includes other plugins\u0027 image registries.  We have no way of focing JDT to load other image registries when JDT\u0027s image registry is created.  Is JDT going to force load JavaUI image registry when my debugger force load your image registry?  I looked at JDIModelPresent#getImage, it references to JavaUI.getSharedImage(...). Like JDT Debug, Java UI does not create its image registry until it\u0027s needed.\n\nI used to be able to reproduce this again with just Java and if I close all the editors.  I can\u0027t anymore with RC2.  Seems like the editor is always up before image for a variable is required.  As a result, Java UI\u0027s image registry is already created.  \n\nIn our case, we may not even use the Java editor for our debugger.  That means, relying on the editor being up and that Java UI\u0027s image registry to be created at the time when the variables are populated is not a valid assumption for us.\n",
    "I reproduced this closing all my editors before starting the workbench to debug again.  I changed my *.java file association to use the Default Text Editor.  \n\nIn that case, I will get the invalid thread exception when I debug after restarting the workbench.",
    "Created an attachment (id\u003d40245)\npatch to org.eclipse.jdt.debug.ui\n\nPatch to JDIModelPresentation.  \n\nAdded a flag to indicate if other image registries that this model presentation references to is initialized.\n\nIn #getImage, if the other image registries are not initialized, the model presentation calls to get the other image registries and force them to be initilized.  This will only be done if #getImage is called on the UI thread for the first time.",
    "Darin, please review patch and consider for RC3.  Thanks...\nSamantha",
    "*** Bug 140089 has been marked as a duplicate of this bug. ***",
    "Marking as RC3. Needs more investigation before we ask for approval.",
    "Created an attachment (id\u003d40366)\nmodified patch\n\nThis patch moves the initialization of the debug platform\u0027s registry to the debug platform (jdt should not have to initialize the platform\u0027s registry). As well, it adds synchronization to the init method.\n\nSamantha, please verify the patch works for you.",
    "CC\u0027ing the one and only Markus Keller for RC3 approval.",
    "+1 for 3.2 RC3.",
    "verified that the patch works",
    "Applied patch.",
    "Please verify, Sam.",
    "verified."
  ],
  "commentCreationDates": [
    "2006-01-31T17:12:52+01:00",
    "2006-02-10T17:05:48+01:00",
    "2006-02-17T18:56:19+01:00",
    "2006-04-07T22:01:43+02:00",
    "2006-04-11T16:43:23+02:00",
    "2006-04-17T18:44:06+02:00",
    "2006-04-17T18:44:44+02:00",
    "2006-04-17T18:52:45+02:00",
    "2006-04-17T18:55:48+02:00",
    "2006-04-17T18:56:56+02:00",
    "2006-04-19T16:13:16+02:00",
    "2006-04-19T16:15:24+02:00",
    "2006-04-19T16:34:44+02:00",
    "2006-04-19T16:35:18+02:00",
    "2006-04-20T20:08:25+02:00",
    "2006-04-27T22:02:16+02:00",
    "2006-05-03T04:02:02+02:00",
    "2006-05-03T04:25:34+02:00",
    "2006-05-03T06:01:19+02:00",
    "2006-05-03T06:08:41+02:00",
    "2006-05-03T18:12:10+02:00",
    "2006-05-03T18:12:44+02:00",
    "2006-05-04T03:50:50+02:00",
    "2006-05-04T04:12:34+02:00",
    "2006-05-04T17:54:19+02:00",
    "2006-05-04T17:55:01+02:00",
    "2006-05-04T18:28:31+02:00",
    "2006-05-04T21:09:20+02:00",
    "2006-05-04T21:14:20+02:00",
    "2006-05-04T21:14:34+02:00",
    "2006-05-04T21:30:13+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid thread access",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "org.eclipse.swt.SWTException.\u003cinit\u003e",
          "source": "SWTException.java:87"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3283"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3206"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3177"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.error",
          "source": "Display.java:974"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.checkDevice",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.disposeExec",
          "source": "Display.java:919"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.hookDisplay",
          "source": "ImageDescriptorRegistry.java:85"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e",
          "source": "ImageDescriptorRegistry.java:48"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e",
          "source": "ImageDescriptorRegistry.java:36"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.JavaPlugin.internalGetImageDescriptorRegistry",
          "source": "JavaPlugin.java:861"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.JavaPlugin.getImageDescriptorRegistry",
          "source": "JavaPlugin.java:337"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getJavaElementImageRegistry",
          "source": "JDIModelPresentation.java:1881"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage",
          "source": "JDIModelPresentation.java:870"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage",
          "source": "JDIModelPresentation.java:658"
        },
        {
          "method": "org.eclipse.debug.internal.ui.LazyModelPresentation.getImage",
          "source": "LazyModelPresentation.java:106"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage",
          "source": "DelegatingModelPresentation.java:141"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor",
          "source": "DebugElementHelper.java:55"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.getImageDescriptors",
          "source": "AsynchronousDebugLabelAdapter.java:85"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter.computeLabels",
          "source": "AsynchronousLabelAdapter.java:81"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.computeLabels",
          "source": "AsynchronousDebugLabelAdapter.java"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter$2.run",
          "source": "AsynchronousLabelAdapter.java:48"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "125868",
      "date": "2006-01-31T17:12:52+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid thread access",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "org.eclipse.swt.SWTException.\u003cinit\u003e",
          "source": "SWTException.java:87"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3268"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.error",
          "source": "Display.java:978"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.checkDevice",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.disposeExec",
          "source": "Display.java:923"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.hookDisplay",
          "source": "ImageDescriptorRegistry.java:85"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e",
          "source": "ImageDescriptorRegistry.java:48"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.\u003cinit\u003e",
          "source": "ImageDescriptorRegistry.java:36"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.JavaPlugin.internalGetImageDescriptorRegistry",
          "source": "JavaPlugin.java:821"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.JavaPlugin.getImageDescriptorRegistry",
          "source": "JavaPlugin.java:304"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getJavaElementImageRegistry",
          "source": "JDIModelPresentation.java:1856"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage",
          "source": "JDIModelPresentation.java:838"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage",
          "source": "JDIModelPresentation.java:626"
        },
        {
          "method": "org.eclipse.debug.internal.ui.LazyModelPresentation.getImage",
          "source": "LazyModelPresentation.java:110"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage",
          "source": "DelegatingModelPresentation.java:141"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor",
          "source": "DebugElementHelper.java:61"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.getImageDescriptors",
          "source": "AsynchronousDebugLabelAdapter.java:86"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter.computeLabels",
          "source": "AsynchronousLabelAdapter.java:82"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.computeLabels",
          "source": "AsynchronousDebugLabelAdapter.java"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter$2.run",
          "source": "AsynchronousLabelAdapter.java:49"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 1,
      "commentIndex": 10,
      "bugId": "125868",
      "date": "2006-04-19T16:13:16+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "125868",
  "bugId": "125868",
  "date": "2006-01-31T17:12:52+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}