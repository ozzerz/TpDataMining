{
  "comments": [
    "Is this the first bug against AspectJ 1.5.0? This error came from an incremental compilation where I was changing the name of a static method that I\u0027d pulled up from a nested aspect:\n\norg.aspectj.weaver.BCException\nat org.aspectj.weaver.bcel.LazyClassGen.getLazyMethodGen(LazyClassGen.java:1216)\nat org.aspectj.weaver.bcel.LazyClassGen.getLazyMethodGen(LazyClassGen.java:1201)\nat org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:2048)\nat org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:232)\nat org.aspectj.weaver.Shadow.implementMungers(Shadow.java:588)\nat org.aspectj.weaver.Shadow.implement(Shadow.java:405)\nat org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:979)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\ntrouble in: \npublic class glassbox.monitor.resource.RemoteCallMonitor extends glassbox.monitor.AbstractMonitor implements glassbox.config.Bean:\n  private static Throwable ajc$initFailureCause\n  public static final glassbox.monitor.resource.RemoteCallMonitor ajc$perSingletonInstance\n  private static transient glassbox.monitor.AbstractMonitor$RuntimeControl ajc$glassbox_monitor_AbstractMonitor$RuntimeControl$ptwAspectInstance\n  static void \u003cclinit\u003e():\n    staticinitialization(void glassbox.monitor.resource.RemoteCallMonitor.\u003cclinit\u003e())\n    |               LDC \"glassbox.monitor.resource.RemoteCallMonitor\"\n    |               INVOKESTATIC glassbox.monitor.AbstractMonitor$RuntimeControl.ajc$createAspectInstance (Ljava/lang/String;)Lglassbox/monitor/AbstractMonitor$RuntimeControl;\n    |               PUTSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$glassbox_monitor_AbstractMonitor$RuntimeControl$ptwAspectInstance Lglassbox/monitor/AbstractMonitor$RuntimeControl;\n    | catch java.lang.Throwable -\u003e E0\n    | |             INVOKESTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$postClinit ()V   (line 8)\n    | catch java.lang.Throwable -\u003e E0\n    |               GOTO L0\n    |           E0: ASTORE_0\n    |               ALOAD_0\n    |               PUTSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$initFailureCause Ljava/lang/Throwable;\n    |           L0: RETURN\n    staticinitialization(void glassbox.monitor.resource.RemoteCallMonitor.\u003cclinit\u003e())\n  end static void \u003cclinit\u003e()\n\n  public void \u003cinit\u003e():\n                    ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 8)\n                    INVOKESPECIAL glassbox.monitor.AbstractMonitor.\u003cinit\u003e ()V\n    constructor-execution(void glassbox.monitor.resource.RemoteCallMonitor.\u003cinit\u003e())\n    | catch java.lang.Exception -\u003e E0\n    | |             RETURN\n    | catch java.lang.Exception -\u003e E0\n    |           E0: ASTORE_1\n    |               ALOAD_1\n    |               INSTANCEOF java.lang.RuntimeException\n    |               IFEQ L0\n    |               ALOAD_1\n    |               ATHROW\n    |           L0: NEW org.aspectj.lang.SoftException\n    |               DUP\n    |               ALOAD_1\n    |               INVOKESPECIAL org.aspectj.lang.SoftException.\u003cinit\u003e (Ljava/lang/Throwable;)V\n    |               ATHROW\n    constructor-execution(void glassbox.monitor.resource.RemoteCallMonitor.\u003cinit\u003e())\n  end public void \u003cinit\u003e()\n\n  private glassbox.track.api.PerfStats lookupCallStats(Object, Object, Object)    org.aspectj.weaver.MethodDeclarationLineNumber: 14:600\n:\n    method-execution(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n    | catch java.lang.Exception -\u003e E0\n    | |             ALOAD_3     // java.lang.Object endPoint   (line 15)\n    | | method-call(java.lang.String java.lang.Object.toString())\n    | | |           INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;\n    | | method-call(java.lang.String java.lang.Object.toString())\n    | |             ASTORE 4\n    | | method-call(glassbox.track.api.StatisticsRegistry glassbox.monitor.AbstractMonitor.getRegistry())\n    | | |           INVOKESTATIC glassbox.monitor.AbstractMonitor.getRegistry ()Lglassbox/track/api/StatisticsRegistry;   (line 16)\n    | | method-call(glassbox.track.api.StatisticsRegistry glassbox.monitor.AbstractMonitor.getRegistry())\n    | |             BIPUSH 6\n    | |             ALOAD 4     // java.lang.String key\n    | | method-call(glassbox.track.api.PerfStats glassbox.track.api.StatisticsRegistry.getPerfStats(int, java.io.Serializable))\n    | | |           INVOKEINTERFACE glassbox.track.api.StatisticsRegistry.getPerfStats (ILjava/io/Serializable;)Lglassbox/track/api/PerfStats;\n    | | method-call(glassbox.track.api.PerfStats glassbox.track.api.StatisticsRegistry.getPerfStats(int, java.io.Serializable))\n    | |             ARETURN\n    | catch java.lang.Exception -\u003e E0\n    |           E0: ASTORE 5\n    |               ALOAD 5\n    |               INSTANCEOF java.lang.RuntimeException\n    |               IFEQ L0\n    |               ALOAD 5\n    |               ATHROW\n    |           L0: NEW org.aspectj.lang.SoftException\n    |               DUP\n    |               ALOAD 5\n    |               INVOKESPECIAL org.aspectj.lang.SoftException.\u003cinit\u003e (Ljava/lang/Throwable;)V\n    |               ATHROW\n    method-execution(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n  end private glassbox.track.api.PerfStats lookupCallStats(Object, Object, Object)\n\n  public void ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a(Object, Object, Object)    AdviceAttribute(before, jaxmCall(BindingTypePattern(java.lang.Object, 0), BindingTypePattern(java.lang.Object, 1), BindingTypePattern(java.lang.Object, 2)), 0, 937)\n:\n                    ALOAD_1\n                    ASTORE 5\n                    ALOAD_2\n                    ASTORE 6\n                    ALOAD_3\n                    ASTORE 7\n    adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object))\n    |               INVOKESTATIC glassbox.agent.ErrorContainment.aspectOf ()Lglassbox/agent/ErrorContainment;\n    |               BIPUSH 4\n    |               ANEWARRAY java.lang.Object\n    |               ASTORE 8\n    |               ALOAD 8\n    |               BIPUSH 0\n    |               ALOAD_0\n    |               AASTORE\n    |               ALOAD 8\n    |               BIPUSH 1\n    |               ALOAD 5\n    |               AASTORE\n    |               ALOAD 8\n    |               BIPUSH 2\n    |               ALOAD 6\n    |               AASTORE\n    |               ALOAD 8\n    |               BIPUSH 3\n    |               ALOAD 7\n    |               AASTORE\n    |               NEW glassbox.monitor.resource.RemoteCallMonitor$AjcClosure1\n    |               DUP\n    |               ALOAD 8\n    |               INVOKESPECIAL glassbox.monitor.resource.RemoteCallMonitor$AjcClosure1.\u003cinit\u003e ([Ljava/lang/Object;)V\n    |               INVOKEVIRTUAL glassbox.agent.ErrorContainment.ajc$around$glassbox_agent_ErrorContainment$1$fc26178e (Lorg/aspectj/runtime/internal/AroundClosure;)Ljava/lang/Object;\n    |               POP\n    |               RETURN\n    adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object))\n  end public void ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a(Object, Object, Object)\n\n  public void ajc$afterReturning$glassbox_monitor_resource_RemoteCallMonitor$2$3f19eb7a(Object, Object, Object)    AdviceAttribute(afterReturning, jaxmCall(BindingTypePattern(java.lang.Object, 0), BindingTypePattern(java.lang.Object, 1), BindingTypePattern(java.lang.Object, 2)), 0, 1207)\n:\n    adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$afterReturning$glassbox_monitor_resource_RemoteCallMonitor$2$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object))\n    |               ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 29)\n    |               ALOAD_1     // java.lang.Object soapConnection\n    |               ALOAD_2     // java.lang.Object msg\n    |               ALOAD_3     // java.lang.Object endPoint\n    | method-call(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n    | |             INVOKESPECIAL glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lglassbox/track/api/PerfStats;\n    | method-call(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n    |               ASTORE 4\n    |               ALOAD 4     // glassbox.track.api.PerfStats stats   (line 30)\n    |               IFNULL L0\n    |               ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 31)\n    |               ALOAD 4     // glassbox.track.api.PerfStats stats\n    | method-call(void glassbox.monitor.AbstractMonitor.recordEnd(glassbox.track.api.PerfStats))\n    | |             INVOKEVIRTUAL glassbox.monitor.AbstractMonitor.recordEnd (Lglassbox/track/api/PerfStats;)V\n    | method-call(void glassbox.monitor.AbstractMonitor.recordEnd(glassbox.track.api.PerfStats))\n    |           L0: RETURN   (line 33)\n    adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$afterReturning$glassbox_monitor_resource_RemoteCallMonitor$2$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object))\n  end public void ajc$afterReturning$glassbox_monitor_resource_RemoteCallMonitor$2$3f19eb7a(Object, Object, Object)\n\n  public void ajc$afterThrowing$glassbox_monitor_resource_RemoteCallMonitor$3$3f19eb7a(Object, Object, Object, Throwable, org.aspectj.lang.JoinPoint$StaticPart)    AdviceAttribute(afterThrowing, jaxmCall(BindingTypePattern(java.lang.Object, 0), BindingTypePattern(java.lang.Object, 1), BindingTypePattern(java.lang.Object, 2)), 5, 1484)\n:\n    adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$afterThrowing$glassbox_monitor_resource_RemoteCallMonitor$3$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Throwable, org.aspectj.lang.JoinPoint$StaticPart))\n    |               ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 36)\n    |               ALOAD_1     // java.lang.Object soapConnection\n    |               ALOAD_2     // java.lang.Object msg\n    |               ALOAD_3     // java.lang.Object endPoint\n    | method-call(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n    | |             INVOKESPECIAL glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lglassbox/track/api/PerfStats;\n    | method-call(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n    |               ASTORE 6\n    |               ALOAD 6     // glassbox.track.api.PerfStats stats   (line 37)\n    |               IFNULL L0\n    |               ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 38)\n    |               ALOAD 6     // glassbox.track.api.PerfStats stats\n    |               ALOAD 5     // org.aspectj.lang.JoinPoint$StaticPart thisJoinPointStaticPart\n    |               ALOAD 4     // java.lang.Throwable t\n    | method-call(void glassbox.monitor.AbstractMonitor.recordException(glassbox.track.api.PerfStats, org.aspectj.lang.JoinPoint$StaticPart, java.lang.Throwable))\n    | |             INVOKEVIRTUAL glassbox.monitor.AbstractMonitor.recordException (Lglassbox/track/api/PerfStats;Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Throwable;)V\n    | method-call(void glassbox.monitor.AbstractMonitor.recordException(glassbox.track.api.PerfStats, org.aspectj.lang.JoinPoint$StaticPart, java.lang.Throwable))\n    |           L0: RETURN   (line 40)\n    adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$afterThrowing$glassbox_monitor_resource_RemoteCallMonitor$3$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Throwable, org.aspectj.lang.JoinPoint$StaticPart))\n  end public void ajc$afterThrowing$glassbox_monitor_resource_RemoteCallMonitor$3$3f19eb7a(Object, Object, Object, Throwable, org.aspectj.lang.JoinPoint$StaticPart)\n\n  public static glassbox.monitor.resource.RemoteCallMonitor aspectOf()    org.aspectj.weaver.AjAttribute$AjSynthetic@965b88\n:\n                    GETSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$perSingletonInstance Lglassbox/monitor/resource/RemoteCallMonitor;\n                    IFNONNULL L0\n                    NEW org.aspectj.lang.NoAspectBoundException\n                    DUP\n                    LDC \"glassbox_monitor_resource_RemoteCallMonitor\"\n                    GETSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$initFailureCause Ljava/lang/Throwable;\n                    INVOKESPECIAL org.aspectj.lang.NoAspectBoundException.\u003cinit\u003e (Ljava/lang/String;Ljava/lang/Throwable;)V\n                    ATHROW\n                L0: GETSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$perSingletonInstance Lglassbox/monitor/resource/RemoteCallMonitor;\n                    ARETURN\n  end public static glassbox.monitor.resource.RemoteCallMonitor aspectOf()\n\n  public static boolean hasAspect()    org.aspectj.weaver.AjAttribute$AjSynthetic@9666e9\n:\n                    GETSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$perSingletonInstance Lglassbox/monitor/resource/RemoteCallMonitor;\n                    IFNULL L0\n                    ICONST_1\n                    IRETURN\n                L0: ICONST_0\n                    IRETURN\n  end public static boolean hasAspect()\n\n  private static void ajc$postClinit()    org.aspectj.weaver.AjAttribute$AjSynthetic@97a54d\n:\n                    NEW glassbox.monitor.resource.RemoteCallMonitor\n                    DUP\n                    INVOKESPECIAL glassbox.monitor.resource.RemoteCallMonitor.\u003cinit\u003e ()V\n                    PUTSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$perSingletonInstance Lglassbox/monitor/resource/RemoteCallMonitor;\n                    RETURN\n  end private static void ajc$postClinit()\n\n  public static glassbox.monitor.AbstractMonitor$RuntimeControl ajc$glassbox_monitor_AbstractMonitor$RuntimeControl$localAspectOf():\n                    GETSTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$glassbox_monitor_AbstractMonitor$RuntimeControl$ptwAspectInstance Lglassbox/monitor/AbstractMonitor$RuntimeControl;\n                    ARETURN\n  end public static glassbox.monitor.AbstractMonitor$RuntimeControl ajc$glassbox_monitor_AbstractMonitor$RuntimeControl$localAspectOf()\n\n  static final void ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a_aroundBody0(glassbox.monitor.resource.RemoteCallMonitor, Object, Object, Object):\n                    ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 22)\n                    ALOAD_1     // java.lang.Object soapConnection\n                    ALOAD_2     // java.lang.Object msg\n                    ALOAD_3     // java.lang.Object endPoint\n    method-call(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n    |               INVOKESPECIAL glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lglassbox/track/api/PerfStats;\n    method-call(glassbox.track.api.PerfStats glassbox.monitor.resource.RemoteCallMonitor.lookupCallStats(java.lang.Object, java.lang.Object, java.lang.Object))\n                    ASTORE 4\n                    ALOAD 4     // glassbox.track.api.PerfStats stats   (line 23)\n                    IFNULL L0\n                    ALOAD_0     // glassbox.monitor.resource.RemoteCallMonitor this   (line 24)\n                    ALOAD 4     // glassbox.track.api.PerfStats stats\n    method-call(void glassbox.monitor.AbstractMonitor.recordStart(glassbox.track.api.PerfStats))\n    |               INVOKEVIRTUAL glassbox.monitor.AbstractMonitor.recordStart (Lglassbox/track/api/PerfStats;)V\n    method-call(void glassbox.monitor.AbstractMonitor.recordStart(glassbox.track.api.PerfStats))\n                L0: RETURN   (line 26)\n  end static final void ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a_aroundBody0(glassbox.monitor.resource.RemoteCallMonitor, Object, Object, Object)\nend public class glassbox.monitor.resource.RemoteCallMonitor\n\npublic class glassbox.monitor.resource.RemoteCallMonitor$AjcClosure1 extends org.aspectj.runtime.internal.AroundClosure:\n  public void \u003cinit\u003e(Object[]):\n                    ALOAD_0\n                    ALOAD_1\n                    INVOKESPECIAL org.aspectj.runtime.internal.AroundClosure.\u003cinit\u003e ([Ljava/lang/Object;)V\n                    RETURN\n  end public void \u003cinit\u003e(Object[])\n\n  public Object run(Object[]):\n                    ALOAD_0\n                    GETFIELD org.aspectj.runtime.internal.AroundClosure.state [Ljava/lang/Object;\n                    ASTORE_2\n                    ALOAD_2\n                    BIPUSH 0\n                    AALOAD\n                    CHECKCAST glassbox.monitor.resource.RemoteCallMonitor\n                    ALOAD_2\n                    BIPUSH 1\n                    AALOAD\n                    ALOAD_2\n                    BIPUSH 2\n                    AALOAD\n                    ALOAD_2\n                    BIPUSH 3\n                    AALOAD\n                    INVOKESTATIC glassbox.monitor.resource.RemoteCallMonitor.ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a_aroundBody0 (Lglassbox/monitor/resource/RemoteCallMonitor;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V\n                    ACONST_NULL\n                    ARETURN\n  end public Object run(Object[])\nend public class glassbox.monitor.resource.RemoteCallMonitor$AjcClosure1\n\nwhen implementing on shadow adviceexecution(void glassbox.monitor.resource.RemoteCallMonitor.ajc$before$glassbox_monitor_resource_RemoteCallMonitor$1$3f19eb7a(java.lang.Object, java.lang.Object, java.lang.Object))\nwhen weaving type glassbox.monitor.resource.RemoteCallMonitor\nwhen weaving aspects \nwhen weaving \nwhen incrementally building BuildConfig[c:\\devel\\glassbox\\.metadata\\.plugins\\org.eclipse.ajdt.core\\glassboxMonitor.generated.lst] #Files\u003d60",
    "second I think.\n\nWe love incremental compilation :)",
    "Since the changes entitled \"go \u0027back to source\u0027 on incremental aspect change\" were checked in to HEAD I don\u0027t believe the failing scenario described in this bug can happen. The description is that the failure occured when changing the name of a static method pulled up from a nested aspect. However, following these steps now results in a full build rather than an incremental one. ",
    "Yep - cant happen now - or at least cant fail in the same way ;)\n",
    "closing"
  ],
  "commentCreationDates": [
    "2005-12-21T20:26:02+01:00",
    "2005-12-22T09:19:54+01:00",
    "2006-02-14T08:49:43+01:00",
    "2006-02-15T11:21:25+01:00",
    "2006-02-15T11:22:08+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.LazyClassGen.getLazyMethodGen",
          "source": "LazyClassGen.java:1216"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyClassGen.getLazyMethodGen",
          "source": "LazyClassGen.java:1201"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline",
          "source": "BcelShadow.java:2048"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.implementOn",
          "source": "BcelAdvice.java:232"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implementMungers",
          "source": "Shadow.java:588"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:405"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:2146"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:467"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:102"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1543"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1494"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:979"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:811"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:254"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:163"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "121768",
      "date": "2005-12-21T20:26:02+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "121768",
  "bugId": "121768",
  "date": "2005-12-21T20:26:02+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}