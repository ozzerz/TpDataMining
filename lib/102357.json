{
  "comments": [
    "calling a method through a generic interface causes an AbstractMethodError at\nruntime if the method was introduced through an intertype declaration:\n\n\ninterface Generic\u003cT\u003e {\n  void non_generic(String i);\n  void generic(T t);\n}\n\nclass Bug implements Generic\u003cString\u003e {\n  public static void main(String[] args) {\n    new Bug().non_generic(\"works\");\n    new Bug().generic(\"works\");\n\n    Generic\u003cString\u003e generic \u003d new Bug();\n    generic.non_generic(\"works\");\n    generic.generic(\"AbstractMethodError\");\n  }\n}\n\naspect Injector {\n  public void Bug.non_generic(String s) {}\n  public void Bug.generic(String s) {}\n}\n\n$ ajc -1.5 Bug.java\n$ java Bug\nException in thread \"main\" java.lang.AbstractMethodError:\nBug.generic(Ljava/lang/Object;)V\n        at Bug.main(Bug.java:13)",
    "marking M4 so we can track resolution",
    "This appears fixed now, fixed since at least M3a.  Can you confirm its fixed for\nyou? thanks.",
    "yes, It works now. good job!"
  ],
  "commentCreationDates": [
    "2005-06-30T19:03:54+02:00",
    "2005-08-26T17:31:34+02:00",
    "2005-09-30T12:52:13+02:00",
    "2005-09-30T18:34:31+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.AbstractMethodError",
      "message": "Bug.generic(Ljava/lang/Object;)V",
      "elements": [
        {
          "method": "Bug.main",
          "source": "Bug.java:13"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "102357",
      "date": "2005-06-30T19:03:54+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "102357",
  "bugId": "102357",
  "date": "2005-06-30T19:03:54+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}