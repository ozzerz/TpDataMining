{
  "comments": [
    "After copious commenting out of code I managed to isolate it to a small section\nof code that is causing the Problems/Quick Fix/\"Add generated serial version ID\"\noption to freeze up. The bottom part of the dialog says \"Starting Virtual\nMachine\" when this happens. The offending class is Test.java below, but only\nfails in conjunction with a call to Test2.java in a static String[] (See below).\nWhen this happens the cancel button does not work either so I have to kill\neclipse  from taskmanager and restart it making it very slow to troubleshoot the\nsource. The set of circumstances that causes it doesn\u0027t make much sense to me.\nAny ideas guys? Atleast make the cancel button work so when it happens I don\u0027t\nhave to kill eclipse. Thanks in advance.\n\nCode To Reproduce Error\n---------------------------------------\n/* Test.java */\nimport java.io.Serializable;\n\npublic class Test implements Serializable {\n  private static final String[] values \u003d new String[] {\n    Test2.getResourceText(\"some property\")\n  };\n}\n\n/* Test2.java */\nimport java.util.*;\n\npublic class Test2 {\n  public static String getResourceText(String strResourceKey) {\n    ResourceBundle.getBundle(\"MyBundle\"); // if I comment this out it works!?\t\t\n    return strResourceKey;\n  }\n}\n\nOperating System\n----------------------\nWindows 2000 5.00.2195\n\nJDK versions tried\n---------------------------------------------------------\njava version \"1.4.2_06\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_06-b03)\nJava HotSpot(TM) Client VM (build 1.4.2_06-b03, mixed mode)\n\njava version \"1.5.0_02\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_02-b09)\nJava HotSpot(TM) Client VM (build 1.5.0_02-b09, mixed mode)",
    "Ok, I figured it out. Apparently the serialver.exe has to actually run the\nstatic initializers on the class to work. This is very surprising to me. Here is\na simple example.\n\npublic class Test implements java.io.Serializable {\n\tstatic {\n\t\tint n \u003d 5/0;\n\t}\n}\n\nrunning serialver.exe on Test manually I get this stacktrace:\nException in thread \"main\" java.lang.ExceptionInInitializerError\n        at java.io.ObjectStreamClass.hasStaticInitializer(Native Method)\n        at java.io.ObjectStreamClass.computeDefaultSUID(ObjectStreamClass.java:1\n557)\n        at java.io.ObjectStreamClass.access$100(ObjectStreamClass.java:47)\n        at java.io.ObjectStreamClass$1.run(ObjectStreamClass.java:173)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.io.ObjectStreamClass.getSerialVersionUID(ObjectStreamClass.java:\n170)\n        at sun.tools.serialver.SerialVer.resolveClass(SerialVer.java:192)\n        at sun.tools.serialver.SerialVer.serialSyntax(SerialVer.java:161)\n        at sun.tools.serialver.SerialVer.main(SerialVer.java:270)\nCaused by: java.lang.ArithmeticException: / by zero\n        at Test.\u003cclinit\u003e(Test.java:3)\n        ... 9 more\n\nSo the real bug is that the eclipse quick fix dialog goes into an infinite loop\nwhen this happens and fails to report an error. I shouldn\u0027t have to end task\neclipse when this happens.\n",
    "Fixed in HEAD \u003e 20060111"
  ],
  "commentCreationDates": [
    "2005-11-08T22:20:36+01:00",
    "2005-11-08T23:41:25+01:00",
    "2006-01-11T12:13:48+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ExceptionInInitializerError",
      "elements": [
        {
          "method": "java.io.ObjectStreamClass.hasStaticInitializer",
          "source": "Native Method"
        },
        {
          "method": "java.io.ObjectStreamClass.computeDefaultSUID",
          "source": "ObjectStreamClass.java:1 557"
        },
        {
          "method": "java.io.ObjectStreamClass.access$100",
          "source": "ObjectStreamClass.java:47"
        },
        {
          "method": "java.io.ObjectStreamClass$1.run",
          "source": "ObjectStreamClass.java:173"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.io.ObjectStreamClass.getSerialVersionUID",
          "source": "ObjectStreamClass.java: 170"
        },
        {
          "method": "sun.tools.serialver.SerialVer.resolveClass",
          "source": "SerialVer.java:192"
        },
        {
          "method": "sun.tools.serialver.SerialVer.serialSyntax",
          "source": "SerialVer.java:161"
        },
        {
          "method": "sun.tools.serialver.SerialVer.main",
          "source": "SerialVer.java:270"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.ArithmeticException",
        "message": "/ by zero",
        "elements": [
          {
            "method": "Test.\u003cclinit\u003e",
            "source": "Test.java:3"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 1,
      "bugId": "115561",
      "date": "2005-11-08T23:41:25+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "115561",
  "bugId": "115561",
  "date": "2005-11-08T22:20:36+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}