{
  "comments": [
    "Our debugger wrappers JDT debug elements.  When our stackframe is selected, we got exceptions from DropToFrame action and Disconnect action.\n\nWhen #getAdapter is called, if the caller is asking for something that the stackframe recognizes, the stackframe calls the java stackframe\u0027s #getAdapter method and return its result.\n\nOur stackfframe does not implement IDropToFrame and IDisconnect.  But JDIStackframe implements both of them.\n\nSo, when the drop to frame action tries to determine if the selected stackframe supports drop to frame, the action tries to get an IAsynchronousDropToFrame adapter from the selected stackframe.  Because our stackframe does not implement IDropToFrame, ActionAdapterFactory returns null.  Our stackframe then calls JDIStackFrame#getAdapter.  This time, ActionAdapterFactory returns DropToFrameAdapter because JDIStackframe implements IDropToFrame.\n\nGiven the adapter, DropToFrameAction calls the adapter to find out if the action should be enabled.  But when IAsynchronousDropToFrameAdapter#canDropToFrame is called, the action passes our stackframe to the adapter.  Our stackframe does not implement IDropToFrame and resulted in the exception.\n\nTo fix, I suggest that each of these actions call #getAdapter on the element that it is trying to enable the action for. e.g. for drop to frame, the action calls element.getAdapter(IDropToFrame.class).  It should then pass the result to the IAsynchronousDropToFrameAdapter when it needs to check for enablement or when the action is run. \n\nI will attach a patch for DropToFrameAction and DisconnectAction.  If you agree that it\u0027s the right fix, I can do the rest of them.\n\norg.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: element must be an instance of IDropToFrame\n at org.eclipse.jface.util.Assert.isTrue(Assert.java:182)\n at org.eclipse.debug.internal.ui.actions.context.DropToFrameAdapter.canDropToFrame(DropToFrameAdapter.java:28)\n at org.eclipse.debug.internal.ui.actions.context.DropToFrameAction.isEnabledFor(DropToFrameAction.java:47)\n at org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.updateEnableStateForContext(AbstractDebugContextAction.java:114)\n at org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.update(AbstractDebugContextAction.java:84)\n at org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.contextActivated(AbstractDebugContextAction.java:70)\n at org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.contextChanged(AbstractDebugContextAction.java:78)\n at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService$1.run(DebugWindowContextService.java:133)\n at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify(DebugWindowContextService.java:128)\n at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify(DebugWindowContextService.java:118)\n at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify(DebugWindowContextService.java:113)\n at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.contextChanged(DebugWindowContextService.java:272)\n at org.eclipse.debug.internal.ui.views.launch.LaunchView$2.run(LaunchView.java:203)\n at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n at org.eclipse.debug.internal.ui.views.launch.LaunchView$ContextProvider.possibleContextChange(LaunchView.java:201)\n at org.eclipse.debug.internal.ui.views.launch.LaunchView.possibleContextChange(LaunchView.java:492)\n at org.eclipse.debug.internal.ui.views.launch.LaunchViewUpdatePolicy.handleState(LaunchViewUpdatePolicy.java:44)\n at org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes(TreeUpdatePolicy.java:63)\n at org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes(TreeUpdatePolicy.java:72)\n at org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes(TreeUpdatePolicy.java:72)\n at org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes(TreeUpdatePolicy.java:72)\n at org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.modelChanged(TreeUpdatePolicy.java:32)\n at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run(AbstractModelProxy.java:70)\n at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n at org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged(AbstractModelProxy.java:74)\n at org.eclipse.debug.internal.ui.viewers.update.DebugEventHandler.fireDelta(DebugEventHandler.java:164)\n at org.eclipse.debug.internal.ui.viewers.update.ThreadEventHandler.handleSuspend(ThreadEventHandler.java:70)\n at org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.dispatchSuspend(EventHandlerModelProxy.java:200)\n at org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.handleDebugEvents(EventHandlerModelProxy.java:138)\n at org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1076)\n at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1108)\n at org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:344)\n at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Created an attachment (id\u003d38855)\npatch for DropToFrameAction and DisconnectAction\n\n",
    "Sorry Samantha, we don\u0027t agree with the patch. In the new world the \"disconnect\" action works on things that do not need to implement IDisconnect.\n\nOnly in the case of the standard model does the object have to implement IDiconnect, and only the standard implementation of the standard adapters assumes this.\n\nYou will need to update your wrappers to return the appropriate adapter when asked, or register your own asynch adapter on your wrappers.",
    "Darin -\nWhat about calling #getAdapter(IDropToFrame.class) inside the DropToFrameAdapter.  So, instead of doing an assert in the adapter, the adapter calls #getAdapter and work on the returned object.  This way, we can keep the actions generic and maintain the old behavior.  I am not comfortable with updating our wrapper to fix this since this breaks existing adapters that wrappers JDT.  In addtion, whenever JDT comes up with a new action in the future and employs the same strategy, our wrapper will have to updated in order to support the new actions.  \nThanks...\nSamantha",
    "+1 for RC2. The standard adapters can check for instanceof IDropToFrame, and failing that, ask for an IDropToFrame adapter. Will attach proposed patch.",
    "Created an attachment (id\u003d38988)\nPatch\n\n",
    "Fixed in:\nDisconnectAdapter\nDropToFrameAdapter\nStepAdapter\nStepFiltersAdapter\nSuspendResumeAdapter\nTerminateAdapter",
    "Darin, please verify.  Thx\nSam",
    "Verified."
  ],
  "commentCreationDates": [
    "2006-04-18T23:24:08+02:00",
    "2006-04-18T23:25:03+02:00",
    "2006-04-19T00:12:55+02:00",
    "2006-04-19T00:33:25+02:00",
    "2006-04-19T23:55:02+02:00",
    "2006-04-19T23:55:30+02:00",
    "2006-04-21T19:48:28+02:00",
    "2006-04-21T22:27:24+02:00",
    "2006-04-24T16:35:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
      "message": "Assertion failed: element must be an instance of IDropToFrame",
      "elements": [
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:182"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.context.DropToFrameAdapter.canDropToFrame",
          "source": "DropToFrameAdapter.java:28"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.context.DropToFrameAction.isEnabledFor",
          "source": "DropToFrameAction.java:47"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.updateEnableStateForContext",
          "source": "AbstractDebugContextAction.java:114"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.update",
          "source": "AbstractDebugContextAction.java:84"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.contextActivated",
          "source": "AbstractDebugContextAction.java:70"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.context.AbstractDebugContextAction.contextChanged",
          "source": "AbstractDebugContextAction.java:78"
        },
        {
          "method": "org.eclipse.debug.internal.ui.contexts.DebugWindowContextService$1.run",
          "source": "DebugWindowContextService.java:133"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify",
          "source": "DebugWindowContextService.java:128"
        },
        {
          "method": "org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify",
          "source": "DebugWindowContextService.java:118"
        },
        {
          "method": "org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify",
          "source": "DebugWindowContextService.java:113"
        },
        {
          "method": "org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.contextChanged",
          "source": "DebugWindowContextService.java:272"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView$2.run",
          "source": "LaunchView.java:203"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView$ContextProvider.possibleContextChange",
          "source": "LaunchView.java:201"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchView.possibleContextChange",
          "source": "LaunchView.java:492"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchViewUpdatePolicy.handleState",
          "source": "LaunchViewUpdatePolicy.java:44"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes",
          "source": "TreeUpdatePolicy.java:63"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes",
          "source": "TreeUpdatePolicy.java:72"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes",
          "source": "TreeUpdatePolicy.java:72"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.updateNodes",
          "source": "TreeUpdatePolicy.java:72"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.TreeUpdatePolicy.modelChanged",
          "source": "TreeUpdatePolicy.java:32"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run",
          "source": "AbstractModelProxy.java:70"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged",
          "source": "AbstractModelProxy.java:74"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.DebugEventHandler.fireDelta",
          "source": "DebugEventHandler.java:164"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.ThreadEventHandler.handleSuspend",
          "source": "ThreadEventHandler.java:70"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.dispatchSuspend",
          "source": "EventHandlerModelProxy.java:200"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.handleDebugEvents",
          "source": "EventHandlerModelProxy.java:138"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventNotifier.run",
          "source": "DebugPlugin.java:1076"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch",
          "source": "DebugPlugin.java:1108"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run",
          "source": "DebugPlugin.java:344"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "137379",
      "date": "2006-04-18T23:24:08+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "major"
    }
  ],
  "groupId": "137379",
  "bugId": "137379",
  "date": "2006-04-18T23:24:08+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "major"
}