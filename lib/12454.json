{
  "comments": [
    "The following source (yes, it\u0027s bad) generates an IllegalArgumentException when\nwe try to parse it.\n\nvoid ___eval() {\nnew Runnable(){\nvoid ___run() throws Throwable {\nreturn blah;\n}\nprivate String blarg;\npublic void run (){\n}\n}\n;}\npublic class Hello{\nprivate static int x;\nprivate String blah;\npublic static void main (String[] args){\n}\npublic void hello (){\n}\npublic boolean blah (){\nreturn false;}\npublic void foo (){\n}\n}\n\nHere\u0027s the relevant part of the stack trace:\n\njava.lang.IllegalArgumentException\n\tat org.eclipse.jdt.core.dom.SimpleName.setIdentifier(SimpleName.java:129)\n\tat org.eclipse.jdt.core.dom.AST.newSimpleName(AST.java:463)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:137)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:73)\n\tat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:330)",
    "What do you expect? You don\u0027t even provide a compilation unit source. \n",
    "We don\u0027t expect a valid AST (the bad source was clearly from a bug), but the\nmethod shouldn\u0027t blow up.",
    "In fact this is a bug in the error recovery. The compilation unit declaration is \nreturned with two types. One anonymous class and one class. An anonymous class \ncannot be a toplevel type. This doesn\u0027t work. I am expecting the beginning of \nthe code to be ignore till the declaration of the class Hello.\nThe converter blew up trying to set the name of the anonymous type declaration.\n",
    "Fixed recovery to filter out anonymous toplevel types during the updating \nphase. Regression test (DietRecoveryTest#test102) added.\n\nFixed."
  ],
  "commentCreationDates": [
    "2002-03-28T17:03:44+01:00",
    "2002-03-28T17:23:41+01:00",
    "2002-03-28T18:07:20+01:00",
    "2002-03-28T19:23:56+01:00",
    "2002-04-02T11:36:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.SimpleName.setIdentifier",
          "source": "SimpleName.java:129"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.newSimpleName",
          "source": "AST.java:463"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:137"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:73"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:330"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "12454",
      "date": "2002-03-28T17:03:44+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "12454",
  "bugId": "12454",
  "date": "2002-03-28T17:03:44+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}