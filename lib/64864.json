{
  "comments": [
    "After a while working with overview tree (or semantic/syntax) in XSD model it\nstops responding to actions like \"Add new child\" (in my case on Complex Type)\nand starts throwing exception below. It does the same if I add a new Complex\nType, delete it and try to add a new one.\n\n!MESSAGE An exception was ignored during command execution\n!STACK 0\nWrapped exception\norg.apache.crimson.tree.DomEx: INDEX_SIZE_ERR: An index is out of bounds.\n\tat org.apache.crimson.tree.DataNode.replaceData(Unknown Source)\n\tat\norg.eclipse.xsd.impl.XSDConcreteComponentImpl.forceNiceInsertBefore(XSDConcreteComponentImpl.java:1523)\n\tat\norg.eclipse.xsd.impl.XSDConcreteComponentImpl.niceInsertBefore(XSDConcreteComponentImpl.java:1478)\n\tat\norg.eclipse.xsd.impl.XSDConcreteComponentImpl.handleElementForAdopt(XSDConcreteComponentImpl.java:1331)\n\tat\norg.eclipse.xsd.impl.XSDConcreteComponentImpl.adoptContent(XSDConcreteComponentImpl.java:1359)\n\tat org.eclipse.xsd.impl.XSDModelGroupImpl.adoptContent(XSDModelGroupImpl.java:688)\n\tat\norg.eclipse.xsd.impl.XSDConcreteComponentImpl.eNotify(XSDConcreteComponentImpl.java:1122)\n\tat\norg.eclipse.emf.common.notify.impl.NotificationChainImpl.dispatch(NotificationChainImpl.java:113)\n\tat\norg.eclipse.emf.common.notify.impl.NotificationChainImpl.dispatch(NotificationChainImpl.java:101)\n\tat\norg.eclipse.emf.common.notify.impl.NotifyingListImpl.addAllUnique(NotifyingListImpl.java:417)\n\tat\norg.eclipse.emf.common.notify.impl.NotifyingListImpl.addAllUnique(NotifyingListImpl.java:366)\n\tat org.eclipse.emf.common.util.BasicEList.addAll(BasicEList.java:671)\n\tat org.eclipse.emf.edit.command.AddCommand.doExecute(AddCommand.java:309)\n\tat\norg.eclipse.emf.edit.command.AbstractOverrideableCommand.execute(AbstractOverrideableCommand.java:128)\n\tat org.eclipse.emf.common.command.CommandWrapper.execute(CommandWrapper.java:179)\n\tat\norg.eclipse.emf.edit.command.CreateChildCommand.execute(CreateChildCommand.java:245)\n\tat\norg.eclipse.emf.common.command.BasicCommandStack.execute(BasicCommandStack.java:91)\n\tat\norg.eclipse.emf.edit.ui.action.StaticSelectionCommandAction.run(StaticSelectionCommandAction.java:219)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:881)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)\n\tat\norg.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:638)\n\tat org.eclipse.core.launcher.Main.main(Main.java:622)\nWrapped by\norg.eclipse.emf.common.util.WrappedException: An exception was ignored during\ncommand execution\n\tat\norg.eclipse.emf.common.command.BasicCommandStack.execute(BasicCommandStack.java:100)\n\tat\norg.eclipse.emf.edit.ui.action.StaticSelectionCommandAction.run(StaticSelectionCommandAction.java:219)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:881)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)\n\tat\norg.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:638)\n\tat org.eclipse.core.launcher.Main.main(Main.java:622)\n\nI\u0027m using 3.0RC1 and emf-sdo-xsd-SDK-I200405200923.zip",
    "This looks like yet another bug in the Crimson DOM implementation.  The Javadoc \nfor CharacterData.replaceData says \n\n     * @exception DOMException\n     *   INDEX_SIZE_ERR: Raised if the specified \u003ccode\u003eoffset\u003c/code\u003e is\n     *   negative or greater than the number of 16-bit units in\n     *   \u003ccode\u003edata\u003c/code\u003e, or if the specified \u003ccode\u003ecount\u003c/code\u003e is\n     *   negative.\n\nIt will often be the case that the offset I pass in is equal to the length but \nnot greater than the length.  So this implemention of the Crimson DOM isn\u0027t \ncorrect:\n\n  if (offset \u003c 0 || offset \u003e\u003d data.length || count \u003c 0)\n      throw new DomEx (DOMException.INDEX_SIZE_ERR);\n\nIt should work like StringBuffer.replace, which is also specified like this:\n\n  StringIndexOutOfBoundsException - if start is negative, greater than length(), \nor greater than end.\n\nIn general, I would suggest using a Xerces implementation of JAXP using the \nmechanism outlined in the download page to avoid bugs in the Crimson DOM, but \nI\u0027ll also work around this particular problem by using appendData for this case.",
    "OK, I\u0027ll switch to Xerces. I\u0027m just curious why Eclipse stops including Xerces\nin the distribution if Crimson is so buggy.",
    "The problem with including a Xerces plugin for Eclipse 3.0 is that every JDK 1.4 \nincludes an implementation of JAXP, which includes the W3C DOM APIs. These \nclasses will hide the ones made available by any plugin, because they are \nalready on the classpath before Eclipse starts up. :-(\n",
    "This is fixed in the latest driver."
  ],
  "commentCreationDates": [
    "2004-06-01T09:00:09+02:00",
    "2004-06-01T14:15:15+02:00",
    "2004-06-01T14:25:28+02:00",
    "2004-06-01T14:36:08+02:00",
    "2004-06-04T11:49:33+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.emf.common.util.WrappedException",
      "message": "An exception was ignored during command execution",
      "elements": [
        {
          "method": "org.eclipse.emf.common.command.BasicCommandStack.execute",
          "source": "BasicCommandStack.java:100"
        },
        {
          "method": "org.eclipse.emf.edit.ui.action.StaticSelectionCommandAction.run",
          "source": "StaticSelectionCommandAction.java:219"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:881"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:915"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:866"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$7.handleEvent",
          "source": "ActionContributionItem.java:785"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2716"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2382"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1363"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1334"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:253"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:334"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:128"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:638"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:622"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "64864",
      "date": "2004-06-01T09:00:09+02:00",
      "product": "MDT",
      "component": "XSD",
      "severity": "normal"
    }
  ],
  "groupId": "64864",
  "bugId": "64864",
  "date": "2004-06-01T09:00:09+02:00",
  "product": "MDT",
  "component": "XSD",
  "severity": "normal"
}