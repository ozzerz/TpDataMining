{
  "comments": [
    "This is on 3.2M6 (worked fine in 3.2M5)\n\nI think this cuade is the cause:\n        throw new DataException(\"\") {\n            public boolean isTransient() {\n              return false;\n            }\n          };\n\n\nI get this error while trying to compile my source code.\n\nInternal compiler error\njava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericTypeCannotExtendThrowable(ProblemReporter.java:1696)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:961)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1078)\n\tat org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:344)\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolveTypeExpecting(Expression.java:903)\n\tat org.eclipse.jdt.internal.compiler.ast.ThrowStatement.resolve(ThrowStatement.java:64)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:101)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:234)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:101)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:234)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:101)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:234)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:101)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:234)\n\tat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:432)\n\tat org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:179)\n\tat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:403)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1050)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1097)\n\tat org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:353)\n\tat org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:631)\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:448)\n\tat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:300)\n\tat org.eclipse.jdt.internal.core.builder.BatchImageBuilder.compile(BatchImageBuilder.java:217)\n\tat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:264)\n\tat org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:56)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:225)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:148)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:603)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:167)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:230)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:233)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:252)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:285)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:145)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:208)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Could you please provide the complete test case?\nThanks.",
    "Here is how to reproduce the error...\n(Difference is in \u003cT\u003e of class declaration)\n\nTHIS FAILS\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e Bug124645.java \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\npublic class Bug134645\u003cT\u003e {\n    public void bug() throws Exception {\n        throw new Exception(\"Bug134645\") {\n            @Override\n            public String toString() {\n                return \"Bug134645\";\n            }\n        };\n    }\n}\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e Bug124645.java \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\n\n\nTHIS IS OK\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e Bug124645.java \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\npublic class Bug134645 {\n    public void bug() throws Exception {\n        throw new Exception(\"Bug134645\") {\n            @Override\n            public String toString() {\n                return \"Bug134645\";\n            }\n        };\n    }\n}\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e Bug124645.java \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c",
    "Error is legite, but reporting did not handle anonymous types.\nFixed reporting, also added support for enabling local type in static method (since no generic enclosing instance then).\n\ne.g. this is OK\npublic class Bug134645\u003cT\u003e {\n    public static void bug() throws Exception {\n        throw new Exception(\"Bug134645\") {\n            @Override\n            public String toString() {\n                return \"Bug134645\";\n            }\n        };\n    }\n}\n\nAdded GenericTypeTest#test0962-0964\nFixed",
    "You claim that this is a legit error, but Sun\u0027s Javac compiler compiles the file no problem (no errors or warnings). Given that they are kind of a de facto standard, I think eclipse should compile as well, at most give a warning. I have seen many instances where eclipse fails to compile (claims something is an error) while sun\u0027s javac compiles fine. This makes eclipse hard to use on large projects where most developers use javac.\n\nI would urge you to reconsider this is a warning not an error.",
    "We will not mirror javac bugs. Check their bug database and you will understand what I am talking about. Also javac randomly fixes its bugs with new versions, why do we need to align on a moving target, when this is a proven bug in their implementation ?\n\nfyi, javac build 1.6.0-beta2-b77\n\nD:\\\u003ejavac Bug134645.java -Xlint\nX.java:3: a generic class may not extend java.lang.Throwable\n        throw new Exception(\"Bug134645\") {\n                  ^\nX.java:3: warning: [serial] serializable class \u003canonymous X$1\u003e has no definition of serialVersionUID\n        throw new Exception(\"Bug134645\") {\n                                         ^\n1 error\n1 warning\n",
    "Also see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d5086027\nthis bug got ack\u0027ed.",
    "Re: I have seen many instances where eclipse fails to compile (claims something is an error) while sun\u0027s javac compiles fine.\n\nDid you report these ? If you found valid issues, we will fix them.",
    "To explain the reason of the error, no generic type can inherit from Throwable. It can either directly carry type parameters, or have an enclosing type which does.\n\nIf you make the declaring method static, then there is no more connection to an enclosing generic type, and the code will be fine again.",
    "Verified for 3.2 RC1 using Build id: I20060413-0010."
  ],
  "commentCreationDates": [
    "2006-04-04T03:45:30+02:00",
    "2006-04-04T03:49:37+02:00",
    "2006-04-04T06:48:55+02:00",
    "2006-04-04T09:44:21+02:00",
    "2006-04-04T19:35:07+02:00",
    "2006-04-05T13:24:00+02:00",
    "2006-04-05T13:30:42+02:00",
    "2006-04-05T13:43:09+02:00",
    "2006-04-05T13:46:30+02:00",
    "2006-04-13T21:23:02+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.problem.ProblemReporter.genericTypeCannotExtendThrowable",
          "source": "ProblemReporter.java:1696"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:961"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1078"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:344"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolveTypeExpecting",
          "source": "Expression.java:903"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ThrowStatement.resolve",
          "source": "ThrowStatement.java:64"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.resolve",
          "source": "Block.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve",
          "source": "IfStatement.java:234"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.resolve",
          "source": "Block.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve",
          "source": "IfStatement.java:234"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.resolve",
          "source": "Block.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve",
          "source": "IfStatement.java:234"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.resolve",
          "source": "Block.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve",
          "source": "IfStatement.java:234"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:432"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:179"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:403"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1050"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1097"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:353"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:631"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:448"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:300"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.compile",
          "source": "BatchImageBuilder.java:217"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:264"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:56"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:225"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:148"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:603"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:167"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:201"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:230"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:233"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:252"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:285"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:145"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:208"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "134645",
      "date": "2006-04-04T03:45:30+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "134645",
  "bugId": "134645",
  "date": "2006-04-04T03:45:30+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}