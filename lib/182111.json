{
  "comments": [
    "using Version: 3.3.0, Build id: I20070410-1043\nJ2RE 5.0 IBM J9 2.3 Windows XP x86-32 build j9vmwi3223-20070201\n\nthis regression sounds like a side effect of bug 177910\n\nsteps to reproduce:\nDebugging some code.\nStopped at BP, stack expanded, some source code selected.\n\nAfter a few seconds (may be 10/20), the stack tree collapses, focus gets lost (debug and variables views).\n\nPlease note that this does not occur as long as the debug view has the focus.\nwhen the problem occurs, the focus in the stack view gets lost as in the to be attached screen shot.",
    "Created an attachment (id\u003d63597)\nscreen shot\n\n",
    "Eric, in the screen shot the stack is not collapsed (as described in the probem - \"the stack collapes, the focus gets lost\"). Did you manually re-expand the thread? Does it happen reliably based on what you are viewing in the variables view? Do you have any special detail formatters or logical structures that are being accessed?",
    "(In reply to comment #2)\nDarin,\nin fact, the stack gets collapsed and then re-expanded exactly as displayed in the screen shot which is confusing.\nI do not have any special setting, and was not performing anything relevant: was just stopped automatically at BP.\n\nAlso note I\u0027m using J2RE 5.0 IBM J9 which might behave differently as Sun 1.6 (see bug 182092).",
    "Does the workaround mentioned in bug 177910 work? i.e. turn on (select) \"Show System Threads\" in the debug view drop down menu?",
    "I can\u0027t find the exact VM version you have. I am using sr5 which is slightly newer than the VM you are using:\n\nJava(TM) 2 Runtime Environment, Standard Edition (build pwi32dev-20070304 (SR4))\nIBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 Windows XP x86-32 j9vmwi3223-2007030\n4 (JIT enabled)",
    "\"Please note that this does not occur as long as the debug view has the focus\" - which view/editor has focus when this happens?",
    "(In reply to comment #5)\ninstalled from ISSI site\n\n",
    "(In reply to comment #6)\nany other view than the Debug (stack) one: source, other Eclipse perspective",
    "(In reply to comment #4)\nwell...no way I can reproduce the issue this afternoon,\nand this happened the whole morning...\n",
    "I found one case where the thread will still collapse. When threads are quickly added/removed we can have a situation where the add triggers an asynch update of the target\u0027s child count, and the remove is processed before the child count update completes. In this case, the remove can\u0027t find the thread to remove in the viewer, because the asynch add has not yet completed. In this case, we can check the child count of the parent (if given), and determine that the visible item count is still correct (in this case the remove is effectively complete). The asynch add still completes with the correct child count (i.e. child count remains stable).\n\nThe following test case was exposing this issue.\n\n\npublic class BlankThreads {\n\t\n\tpublic class HangsOut implements Runnable {\n\t\tpublic void run() {\n\t\t\twhile (true) {\n\t\t\t\ttry {\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t} catch (InterruptedException e) {}\n\t\t\t}\n\t\t}\t\t\n\t}\n\t\n\tpublic class MakesTransientThreads implements Runnable {\n\t\tpublic void run() {\n\t\t\twhile (true) {\n\t\t\t\tnew Thread(new Transient2()).start();\n\t\t\t\tnew Thread(new Transient()).start();\n\t\t\t\ttry {\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t} catch (InterruptedException e) {}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic class Transient implements Runnable {\n\t\tpublic void run() {\n//\t\t\ttry {\n//\t\t\t\tThread.sleep(1000);\n//\t\t\t} catch (InterruptedException e) {}\n\t\t}\t\t\t\t\n\t}\n\n\tpublic class Transient2 implements Runnable {\n\t\tpublic void run() {\n\t\t\ttry {\n\t\t\t\tThread.sleep(50);\n\t\t\t} catch (InterruptedException e) {}\n\t\t}\t\t\t\t\n\t}\n\tpublic static void main(String[] args) {\n\t\tnew BlankThreads().go();\n\n\t}\n\t\n\tpublic void go() {\n\t\t// make 20 hang-out threads\n\t\tfor (int i \u003d 0; i \u003c 20; i++) {\n\t\t\tThread thread \u003d new Thread(new HangsOut());\n\t\t\tthread.start();\n\t\t}\n\t\tThread thead \u003d new Thread(new MakesTransientThreads());\n\t\tthead.start();\n\t\twhile (thead.isAlive()) {\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000); // BREAKPOINT\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\n}",
    "Released fix to HEAD. Not sure this is the same issue Eric was seeing.",
    "Hmmm. This fix seems to cause other trouble... reverting due to following exception that appears in the test suite with this fix:\n\nCaused by: java.lang.IllegalArgumentException: Index out of bounds\n\tat org.eclipse.swt.SWT.error(SWT.java:3518)\n\tat org.eclipse.swt.SWT.error(SWT.java:3457)\n\tat org.eclipse.swt.SWT.error(SWT.java:3428)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:432)\n\tat org.eclipse.swt.widgets.TreeItem.getItem(TreeItem.java:718)\n\tat org.eclipse.debug.internal.ui.viewers.model.InternalTreeModelViewer$3.run(InternalTreeModelViewer.java:1084)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1333)\n\tat org.eclipse.debug.internal.ui.viewers.model.InternalTreeModelViewer.replace(InternalTreeModelViewer.java:1073)\n\tat org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.expand(TreeModelContentProvider.java:159)\n\tat org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.handleExpand(TreeModelContentProvider.java:141)\n\tat org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes(ModelContentProvider.java:608)\n\tat org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes(ModelContentProvider.java:634)\n\tat org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes(ModelContentProvider.java:634)\n\tat org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes(ModelContentProvider.java:634)\n\tat org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider$7.runInUIThread(ModelContentProvider.java:583)\n\tat org.eclipse.ui.progress.UIJob$1.run(UIJob.java:94)",
    "Re-released fix. This was not causing the IIOB.",
    "Eric - if you\u0027re feeling brave, you may want to try the next nightly build to see if this fixes your problem.",
    "(In reply to comment #14)\nno guts no glory ;-)\nI\u0027ll test with the next nightly build and will update the bug accordingly.",
    "(In reply to comment #14)\nnot reproduced with Build id: N20070415-0010",
    "Thanks for testing, Eric.\n",
    "Please verify, Curtis. (Changes to TreeModelContentProvider).",
    "Verified"
  ],
  "commentCreationDates": [
    "2007-04-12T12:39:18+02:00",
    "2007-04-12T12:40:30+02:00",
    "2007-04-12T15:47:53+02:00",
    "2007-04-12T15:53:57+02:00",
    "2007-04-12T16:11:18+02:00",
    "2007-04-12T16:12:24+02:00",
    "2007-04-12T16:13:47+02:00",
    "2007-04-12T16:22:08+02:00",
    "2007-04-12T16:25:28+02:00",
    "2007-04-12T16:39:16+02:00",
    "2007-04-12T17:48:17+02:00",
    "2007-04-12T17:52:04+02:00",
    "2007-04-12T18:08:17+02:00",
    "2007-04-12T18:46:35+02:00",
    "2007-04-12T20:08:31+02:00",
    "2007-04-12T20:10:53+02:00",
    "2007-04-16T07:39:32+02:00",
    "2007-04-16T14:57:41+02:00",
    "2007-04-16T14:58:44+02:00",
    "2007-04-16T17:31:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3518"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3457"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3428"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:432"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.getItem",
          "source": "TreeItem.java:718"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.InternalTreeModelViewer$3.run",
          "source": "InternalTreeModelViewer.java:1084"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1333"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.InternalTreeModelViewer.replace",
          "source": "InternalTreeModelViewer.java:1073"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.expand",
          "source": "TreeModelContentProvider.java:159"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.TreeModelContentProvider.handleExpand",
          "source": "TreeModelContentProvider.java:141"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes",
          "source": "ModelContentProvider.java:608"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes",
          "source": "ModelContentProvider.java:634"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes",
          "source": "ModelContentProvider.java:634"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider.updateNodes",
          "source": "ModelContentProvider.java:634"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.model.ModelContentProvider$7.runInUIThread",
          "source": "ModelContentProvider.java:583"
        },
        {
          "method": "org.eclipse.ui.progress.UIJob$1.run",
          "source": "UIJob.java:94"
        }
      ],
      "number": 0,
      "commentIndex": 12,
      "bugId": "182111",
      "date": "2007-04-12T18:08:17+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "blocker"
    }
  ],
  "groupId": "182111",
  "bugId": "182111",
  "date": "2007-04-12T12:39:18+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "blocker"
}