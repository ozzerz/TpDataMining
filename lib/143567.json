{
  "comments": [
    "Basic idea is to specify issue description and/or some keywords that could be used to run bugzilla query and allow user to review results before submitting new issue.\n\nFrom https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d104100#c9\n\nYou might want to have a look at what the KDE project did to bugzilla --\nbasically a PHP frontend that guides bugreporters in a wizard-like manner to\nsubmit better reports.\n\nTo avoid as many dupes as possible, the reporter needs to enter some keywords\n(typically the summary line) with which a bug database search is performed.\n\nThe reporter is presented the results and is asked to look for reports that\nlook like his own problem.\n\nIf he finds one, he usually adds a comment to that bugreport and adds himself\nto the CC list.\n\nIf he doesn\u0027t he can go on and submit a new one.\n\nThat process helped tremendously in preventing dupes.\n\nTo see it in action, visit http://bugs.kde.org -- you need to create an account\nto access the reporting wizard, though.",
    "This is needed to prevent too many duplicate bug reports coming in once we have submission via error log (bug 135605).  Note that we did a partial implementation of this waaaay back, the result of which is in org.eclipse.mylar.sandbox.bridge.bugs.  Here is what you should do to start:\n1) Add a page to the new bug creation wizard called \"Find Related Reports\"\n2) In addition to Eugene\u0027s summary/description search suggestion, add an option for \"Find similar stack traces\" button, and a table which uses the same infrastructure as our Search results view but shows a multiline Description field so that the reports can be previewed without opening (see \"Custom draw Tree\" in http://download3.eclipse.org/eclipse/downloads/drops/R-3.2-200606291905/new_noteworthy/eclipse-news-part3.html)\n3) Implement the search by using the stack trace matching code either from the sandbox or by extracting it from our JavaStrackTraceHyperlinkDetector\n4) If a duplicate is found the user should be prompted to open and comment on the corresponding report in addition to being able to file a new one",
    "Hmm. Whouldn\u0027t it make sense to add to the submission of the newly entered task in task editor and not wizard? So, it would work not only for issues from the error log...",
    "Yes, that\u0027s what I was thinking too.  The stuff in comment#1 is one extra page in the comment selection page called \"Automatic Duplicate Detection\".  Clicking Finish from that page has the effect of either opening an existing bug editor if a duplicate was found, or a new bug editor if not (possibly auto-populated with values from bug 135605).  ",
    "Bumping the priority since we need this to avoid getting spammed with bug reports via the functionality from bug 135605 ;)\n\nJeff: do you think you can have a core version of this working for Friday\u0027s dev build?  It would be good to announce it for people to try out.",
    "So whats the final consensus on the UI, add a page to the wizard as in comment 1 and then open an existing editor if a dup is found like in comment 3, or show search results like point 3 of comment 1? What if the dup search returns multiple hits (for the auto-open exisiting editor idea)?",
    "Yes, we can\u0027t be opening editors indiscriminately. The problem here is the modal wizard.  Perhaps on the \u0027duplicates found\u0027 wizard page the results could include the description in addition to the summary reducing the need to open an editor?  At this point the user will more than likely have a good idea if the report is in fact a duplicate.  From that wizard we can give them the option to open selected tasks in editors (which will result in terminating the wizard).",
    "Rob: see comment#1 point (2) for how this table will summarize reports without the need to open them.\n\nJeff: Both comment#1 and comment#3 are referring to the same thing, just not being very clear about it.  Multiple search results should get shown, and then the user can select one of them to open if they believe it is a duplicate, causing the existing editor to open.  If they don\u0027t see a match in the list that looks like a duplicate they can create a new bug report.  Perhaps the best way to integrate this is with a check box at the bottom of the \"New Repository Task\" page:\n\n   [check] Search for related stack traces before creating \n   [hyperlink] Close wizard and search for related reports before submitting\n\nIf selected the \"Find Related Reports\" page shows up.  The checkbox should only be enabled if invoked from the Error Log action, or if there is a stack trace in the clipboard.  The page should look something like this:\n\n  [check] Use stack trace\n  [text with stack trace, they can either paste one in, or Error Log action will paste in automatically]\n\nNote that this punts on the summary/descrption search for now, since our Search page already provides those facilties and they will be tricky to integrate into the wizard. ",
    "Recap (with a few questions)\n\n1. We add a new (optional?) page to the New Task Wizard.\n2. This page allows the user to \n  2.1 enter some summary/description terms (separate text fields?)\n  2.2 Select a check box to search for similar stack traces (auto selected by the create from PDE log) and\n        enter a stack trace into a text box (auto-filled by the create from PDE log)\n3. Results are shown \n   3.1 The user clicks a button and the results are shown in a table in that same wizard page.\n   -- or --\n   3.2  The user clicks \"next\" and another wizard page displays the results\n4. User checks off which reports they think might be dups and clicks \"finish\", the selected reports are\n    opened. \n    4.1 If no reports are selected or there are no search results, a new report is created.\n\n\nI\u0027m not sure I understand what your suggesting with the hyperlink, also, it sounds like point 2.1 should not be included from your last comment.",
    "Mik, I\u0027m still unsure about when the actual search takes place. Does it happen in the wizard with results displayed in the wizard page, or after the wizard is finished with results in the search view/new dialog, or is the duplicate detection just flagged by the wizard and the search happens when the user tries to submit the bug?",
    "Bjorn Freeman-Benson and Ward Cunnigham visited yesterday and we chatted about this.  All were psyched about this feature because it will help with a major problem on eclipse.org: all the duplicate bug filings.\n\nRegarding comment#8:\n1: yes, the page is optional.  Call it \"Automatic Duplicate Detection\"\n2.1: skip this for now, just do the stack trace thing\n2.2: yes, but note that the check box comes on the parevious page.  From comment#7: bottom of the \"New Repository Task\" page:\n   [check] Search for related stack traces before creating \n   [hyperlink] Close wizard and search for related reports before submitting\n3: the user clicks \"Next\" and a page with the duplicate matches table is shown.  Text on page is:\n   \"If you see a duplicate candidate select it to open and comment.  If not press finish to create new one.\"\n4: yup!\n",
    "How is it going Jeff?",
    "(In reply to comment #11)\n\u003e How is it going Jeff?\n\u003e \n\nStruggling a little with the refactored code base (I\u0027ve got some bugs to file once I pinpoint the problem). I\u0027m getting NULL pointers and no connectors showing up.",
    "Is this still happening?  If so please include the NPEs since AllTests pass on my end and connectors show up.  Let me know how this is coming along and if you have any other problems.",
    "Mik, all the issues I was having before have been resolved now and everything is comming along. My first implementation was becoming a bit of a hack so I scrapped it and started over on tuesday. \n\nI now have the UI in place and a framework in the tasks plug-in to allow connectors to provide duplicate detection (they essentially provide the functionality to submit the query). The wizard implemenation ended up being much more complicated than I thought since the actual new bug wizard doesn\u0027t get created when the new task wizard does (it\u0027s not created until a repository is selected and the user clicks next). I had to create a class to queue the duplicate detecting wizard pages so they could be added by wizards which support duplicate detecting (they do so by extending an abstract new report wizard class). I can summarize all the details of how this works on the mailing list so people writing connectors can add the support. Its actually quite simple, I think my babbling is making it sound more complicated than it acutally is :)\n\n\nI am working on the bugzilla implementation now, once thats done I\u0027ll write some test cases and post up a patch.",
    "Yes, I\u0027m getting your babble because I implemented the wizards to work on-demand this way, so it makes sense that you had to do extra work to queue in the extra pages.\n\nLooking forward to the patch...  Consider posting a screenshot or two before it\u0027s completed in case feedback at this stage would be useful, and remember to get the simplest thing going and tested before making this fancy, because there is no shortage of interesting ways to make this fancy (which we should explore once the core thing works).",
    "(In reply to comment #15)\n\u003e and remember to\n\u003e get the simplest thing going and tested before making this fancy, because there\n\u003e is no shortage of interesting ways to make this fancy (which we should explore\n\u003e once the core thing works).\n\u003e \n\nYeah, thats what I\u0027ve done. I have a rather simple implementation for the bugzilla connector, once I\u0027ll post a patch a little later once I\u0027ve written some tests and fixed a couple minor bugs. I agree there are many very interesting ways to persue this. As for the UI, I\u0027ve essentially just picked one simple UI but its easy enough to adapt it to other ideas. I\u0027ll post a screen shot and explain some of the limitations I\u0027ve encountered.",
    "Created an attachment (id\u003d46617)\nScreen shot - Related reports page\n\nThis shows the related reports page. I\u0027ve nested the first bit of the description as child elements so the list doesn\u0027t get too long with many reports.\n\nOne of the problems with this type of table/tree, is that every element is sized to the size of the largest element. So if we use a 10 line description as a table/tree element, everything becomes huge.\n\nother info also comes up in the tooltip (id, date, creator, assigned to). *not shown in screen shot.\n\nclicking finish would cause the selected report to open.",
    "Suggestions\n* Limit the number of \u0027extra\u0027 lines (i.e. those below the title) to two, and make those contain the first n characters of the description.  For an example of this UI see the attached screenshot.\n* Make this RepositoryTaskSummaryTable and Viewer it\u0027s own class, it could be useful outside of the wizard.\n* Consider extending or reusing and improving the viewer used by our search results because these two have a very similar role and should show columns, etc.",
    "Created an attachment (id\u003d46618)\nscreenshot example of row details in Outlook\n\n",
    "Created an attachment (id\u003d46620)\nAdd duplicate detection\n\nMik, here\u0027s a patch so you can experiment with what\u0027s there. I still have to extract the tree into a separate class as you\u0027ve suggested and move some classes out of the internal tasks namespace so connectors can legitamately use them.\n\nI\u0027m not sure its possible to implement the type of table/tree in your screen shot (at least with the tree I\u0027m using).  If I make a child node 3 lines, all nodes will share that height (thats the way it currently is), the one in your screen shot has 1 line nodes on top, and larger ones as child nodes. Also, I don\u0027t know if a child node can span accross columns as in your screen shot.\n\nI initially listed 3 lines worth of description by character, I\u0027ve updated it to word wrap 3 lines (calculating fit by average character width) and add \"...\" if the description is being cut.\n\nI also left a (currently disabled) text field for \"Search terms\" so the find related reports can be extended beyond just stack traces. That can be removed or implemented as needed.\n\nAnd lastly, wizard descriptions wouldn\u0027t show up without and image, so I just stuck the bugzilla one in their for now :)",
    "Created an attachment (id\u003d46621)\nmylar/context/zip\n\n",
    "Oh, one other interesting point. You can generalize your stack trace search by trimming it. For example you could trim all details except for \"java.lang.NullPointerException\" to get all reports (of that product) with that exception... or you could trim it to:\n\nJava.lang.NullPointerException\nat org.eclipse.mylar.internal.tasks.ui.editors.AbstractRepositoryTaskEditor.setDescriptionText\n\nto get all null pointers in that method, or trim the method name too to get all null pointers in that class, etc....",
    "I am not very big fan of using forms in dialogs, though in this case it may worth to try.",
    "Created an attachment (id\u003d46646)\nlist prototype without custom rendering\n\nI am not a big fan of using forms in dialogs and wizards, but it seems they give better rendering options. Here is the list implemented using expandable composite and form text. Though I didn\u0027t manage to fix the vertical scrolling.",
    "Good start and test Jeff, patch applied.  Let\u0027s get this refined and into Friday\u0027s 0.6.1 release.  I used bug#41 on mylar.eclipse.org for testing.  Things to fix:\n1) The check boxes wierd.  How about you just make the tree one level deep so that the first line shows the Summary, and the additional 2-3 lines show the description.  This will get rid of the collapse ability, but I think the overall result will be better and more simple.  Haven\u0027t taken a look at Eugene\u0027s prototype list, that might help too.\n2) Show the icon for the bugt in the tree to make it recognizable.  You can get it from one of the existing label providers.\n2) Move the \"Search for related\" check box to the top of the wizard page--it\u0027s too easy to miss.\n3) Remove \"Search terms\" until we support it.\n4) I  got this stack trace when re-invoking:\n\njava.lang.NullPointerException\n\tat org.eclipse.mylar.internal.tasks.ui.wizards.DisplayRelatedReportsPage.setRelatedTasks(DisplayRelatedReportsPage.java:231)\n\tat org.eclipse.mylar.internal.tasks.ui.wizards.FindRelatedReportsPage.getNextPage(FindRelatedReportsPage.java:103)\n\tat org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:751)\n\tat org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:351)",
    "Created an attachment (id\u003d46850)\nScreen Shot - Collapseable form based table\n\nI had to add a listener to explicitly layout the scroll composite in order to get the collapsing to work, I think this will look better than the current custom render table though (will post a screen shot of that next). The only issue is that the check box will have to be part of the description so the user has to expand in order to select it.",
    "Created an attachment (id\u003d46851)\nScreen Shote - Custom render table\n\nI removed the description as a child node and added it to the same item, the result was a little messy so I indented the description. I wanted to make the summary bold or something but since its all one table item I can\u0027t really render parts of it differently AFAIK.\n\nWhich UI approach should I go with?",
    "By the way, I don\u0027t think we should have \"search duplicates\" check box on the first wizard page. Since it is repositoryspecific it should be on a secong page... or at least connector should declare \"capacity\" for this, so wizard could disable check box for repositories that does not support this feature.\n\nBTW, what is that hyperlin for? It does nothing when I tried it.",
    "Hmm. I tought TableWrapLayout would handle that. At least it dos on my test. \n\nAlso, it is possible to add a control to the expandable composite itself, so checkbox could be added there. \n\nPS: SWT designer is really grreat tool. I basically sketched all my patch in it...",
    "It is possible to test a repository connector to see if it is capable of duplicate detection but it involves instantiating it\u0027s new report wizard. I was also thinking we could leave this check box out entirely and just allow the user to click \"next\" for duplicate detection (iff supported) or click finish to create a new report.\n\nThe link functionality was broken, I have a fix for it that I can include in my next patch... however I was also thinking we should either leave the link out (because its currently redundant functionality of the \"Cancel\" button) or have it cancel the wizard and open the bugzilla search pane.\n\n\u003eHmm. I tought TableWrapLayout would handle that. At least it dos on my test. \n\nCould be a bug on OSX I suppose.\n\n\n\u003eAlso, it is possible to add a control to the expandable composite itself, so checkbox could be added there. \n\nah, good. Ill try that. I\u0027ll have to take a look at SWT designer as well.",
    "Duplicate detection relies on one capability on the connector: querying task data such as description and comments.  Since Trac needs it too, I\u0027m going to make this capability explicit via bug 142783.  For now just leave this visible and make the hyperlink open the search page to the Bugzilla Tab, which will become a generic Task search tab.  We may still want to consider improving the wizard flow as you described above but that can wait for now.\n\nI like the approach of the first screenshot, with the following changes:\n\n1)\tGet rid of the checkboxes, I think they\u0027re more harm than good.  If a submitter spots one duplicate that\u0027s enough, the bug triager/developer is the one responsible for managing mutliple duplicates.  The selection in the table will indicate what the duplicate is.\n\n2) The collapsing is nice, so keep it, but make the first line look as much as possible like the entry in the task list (i.e. give it the icon).  Maybe the icon can show up in the column that the check boxes are in now.\n\n3) The search should run with progress because it can be very slow.  As an example of how to run with progress open the properties of an existing Bugzilla repository and click Validate Settings, noting that you need to call setNeedsProgressMonitor(true) on the wizard in its constructor.",
    "I just thinking, maybe instead of another page on new task wizard it should go into the new task editor. We could have \"Search Duplicates\" button next to \"Create\" and it will run search that will be shown in a standard search view. So, user will be able to use common facilities, e.g. open issues in separate editors to review them. This way it could use entered description or issue details to complete search criteria, so it does not have to be a stack trace only. I think such interaction fits better into Eclipse UI and require less time to spend in the modal wizard.",
    "I really like this idea, thanks for putting thought into this Eugene.  It reuses existing facilities and as you indicate avoid all of the problems that comes from having users be stuck in the modal dialog (e.g. if the first 3 lines of the description are not enough to figure out if it is a duplicate.  One problem is that the facility won\u0027t be available to connectors that can search but that can\u0027t create new bug reports, but we may be able to address that by creating a custom editor for those that swallows the web browser and provides its own field for the stack trace.\n\nJeff: let me know what you think and how hard it is for you to make this change--hopefully it actually saves you some time in not having to fiddle with the custom tree (which could still be useful for other places where we might want the preview facility).  Here\u0027s what it seems you need to do, and it would need to happen by today or early tomorrow to go out with 0.6.1.\n\n1) Add a \"Find Duplicates\" button before \"Create\" on the NewBugEditor (this UI will be so nice and obvious :)\n\n2) Clicking \"Find Duplicates\" should kick off your current search, showing results as any Bugzilla Search view does, using any stack that\u0027s in the description.  If there is no stack in the description you bring up a warning dialog.\n\n3) Create a new bug report for finding duplicates based on summary, since it will have to do some textual matching.\n\n4) Leave the hyperlink in the wizard, but pull out the check box and extra page that you\u0027re adding now.",
    "I like the idea, I\u0027ll start working on this. If I don\u0027t have a patch in time for 0.6.1 we can go with the wizard version for that release or just remove it entirely (I\u0027ll post a patch to fix the null pointer and link functionality)",
    "What about connectors that don\u0027t support finding duplicates (since the button will be part of the AbstractRepositoryEditor)?\n\nI suppose we could initialize the button as disabled and have supporting connectors explicilty enable the button and override a stub implementation of the search.\n\n\nhmm, I just noticed the abstract performQuery in the AbstractConnector class. I guess any connector can query, its just a matter of hooking that into the search results page. Is querying from the integrated search something bugzilla specific or is this something done at the abstract tasklist level? It would be great if we could perform the query using the abstract connector API so connectors don\u0027t need to do any additional work to have duplicate detection.\n\nI\u0027ll keep diggin through it, just thought I\u0027d post the question in case anyone can point me to it to save some time :)",
    "Note from my comment#33 that the for now the button will only appear bugzilla.ui.editor.NewBugEditor.  Just do it all Bugzilla-specific for now, and we\u0027ll pull this up tom make it available to any connector that can query, as you indicate.  Note from my comment#31 that I\u0027ll be implementing that soon (bug 142783).\n\nIf at all possible we should try to put 0.6.1 out with this UI, especially since getting the wizard-based one usable would take more work them implementing this one.  We can delay the final build until Saturday if having tomorrow gives you enough time. ",
    "Ah, ok. I\u0027ll do it bugzilla specific then. I think I should be able to have a patch by early tomorrow.",
    "Great.  We\u0027ll make this nice and prominent in the New \u0026 Noteworthy and encourage everyone to submit Mylar and Eclipse bugs this way.",
    "Created an attachment (id\u003d46907)\nMove dup detection to editor from wizard\n\nThis patch reverses most of the previous patch (wizard stuff) and adds duplicate detection to the editor.\n\nI removed the \"cancel and search\" link because we don\u0027t know what type of repository the user will want to search at that point in the wizard. Opening to the bugzilla search page assumes they are intending to file a bugzilla bug. (The code is still present, just commented)",
    "Very nice!  I just went through the \"automatic submit, create, try to submit again, detect duplicates\" loop and the interaction is very clear and quick.  I think you have just the following two fixes left before we can close this?\n\n* Provide a test case, I noticed that you removed the previous one which was good because it exercised the stack trace search.\n\n* Ensure that you can handle a stack trace pasted in by the user, currently it can\u0027t.  Try pasting the following in, it should find bug 48 as a match on bugs222.  If this is too tricky when the start is an arbitrary line just trim the spaces and newlines off the start of the description and only support having it be at the start of the description (update the warning message accordingly so that it teaches people how to use it).\njava.lang.NullPointerException\nat org.eclipse.mylar.internal.tasks.ui.wizards.DisplayRelatedReportsPage.setRelatedTasks(DisplayRelatedReportsPage.java:232)\nat org.eclipse.mylar.internal.tasks.ui.wizards.FindRelatedReportsPage.getNextPage(FindRelatedReportsPage.java:103)\nat org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:751)",
    "The old test case was based on the wizard classes, so it got removed with them. I\u0027ll create one for this.\n\nThe stack trace detection currently looks for the identifier \"Stack Trace:\\n\" which is inserted by the generated report from the error log. I\u0027m not sure how we can identify the start or end of a stacktrace otherwise. Maybe a regex, I\u0027ll take a look at it.",
    "Don\u0027t bother with a regex yet--just assume that it is the start of the description (after trimming as described above), and fail with the warning if it doesn\u0027t parse.  If you wanted to be fancier you could try starting to parse it at every line and going until it works and failing if you get to the last line.\n\nBtw, if you don\u0027t want the wizard classes to be stuck on the report patch you can make them a patch to org.eclipse.mylar/developer/src-old where we dump stuff we figure might be useful again at some point.",
    "Created an attachment (id\u003d46929)\nImproves stack trace identification, adds test case\n\n",
    "By the way, should this new button also appear in the bugzilla issue editor too? That would allow to search duplicated after issue submitted (e.g. if submitter didn\u0027t run the search or not using Mylar).\n\nAlso, I think that search should not create new search page if there are 0 hits found. Currently it create new page every time you hit the search buton.",
    "Patch applied.  Good work getting this solid for 0.6.1 Jeff.\n\nYes, let\u0027s add this action to the editor for existing tasks as well.  There isn\u0027t a great place for it now, so we\u0027ll put it as a button after \"Submit to Repository\".  \n\nRob: please add it after you have committed your task editor changes.\n\nEugene: we should leave the search page with 0 hits for now because this is consistent with the way that other Eclipse searches work, and because changing this interaction would require rewiring the way that this feature connects to search to delay showing the page and suppressing the \"Searching...\" message which indicates the duplicate detection is running.\n",
    "Jeff: one more thing, remember to put an @author tag for yourself for classes that you create or make substantial changes to, since we like to attribute credit where it is due.  I added a tag for you to DuplicateDetectionTest.",
    "Duplicate detection tests are failing, potentially due to Rob\u0027s recent editor changes, could you investigate?\n\njava.lang.ClassCastException: org.eclipse.mylar.internal.bugzilla.ui.editor.NewBugzillaTaskEditor\n\tat org.eclipse.mylar.bugzilla.tests.DuplicateDetetionTest.testDuplicateDetection(DuplicateDetetionTest.java:54)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n",
    "Sorry about that beakage, fix should be in head now.",
    "Fix verified, AllTests are now happy.",
    "Hmm. I just tried to search duplicate from error log entry I just created posted error from (bug 152255) and search retrned 0 hits for it. \n\nI did changed description and added a comment before stack trace, but it should not affect the search results.",
    "Jeff: I just noticed the same thing.  Here\u0027s what I noticed:\n* If stack trace is pasted in manually the search works\n* If stack trace comes from the auto-generated description from error event search fails to find matches\n\nLooks like a regression from your changes to support manually created stack traces.  Please make sure to add a failing test case before fixing this.  Let me know when you can get to this, we can hold putting 0.6.1 off until early Monday morning but please verify any changes made at this point very carefully.",
    "All of the mentioned situations work for me. Copy/paste or generate from error log... It always returns the correct search results.  ??\n\nThe stack trace detection is done the same way independant of how the description is formed (in comment or auto-gen).\n\nI\u0027ve been testing with 2.22, I wonder if its a problem with how the search string is treated with a different bugzilla versions. I\u0027ll look into that.",
    "I just tried to reproduce with bug 152255 but don\u0027t have that stack trace anymore.  I\u0027m wondering if I made a mistake when trying to reproduce (comment#51).  Let me know what you find.",
    "Searches work for me in 2.22 and 2.20\n\nI did however find a bug where text added directly after a stack trace caused the search to fail (the stack trace parsing grabbed the extra line). I\u0027ll post a fix for that, but otherwise I\u0027m unable to reproduce the problem. \n\nEugene, did you have text added after the stack trace? I know your stack trace had the \"...20 more\" but that doesn\u0027t cause a problem since its part of the original stack trace anyway.",
    "Created an attachment (id\u003d47016)\nFixes text after stack trace, adds regression test\n\nThis patch fixes the issue of having comment text directly after the stack trace and adds a regression test to test it.\n\nHopefully this addresses the issue Eugene was seeing.",
    "Created an attachment (id\u003d47017)\nmylar/context/zip\n\n",
    "(In reply to comment #54)\n\u003e Eugene, did you have text added after the stack trace? I know your stack trace\n\u003e had the \"...20 more\" but that doesn\u0027t cause a problem since its part of the\n\u003e original stack trace anyway.\n \nI\u0027ve added text before stack trace. See bug 152255\n\nI am running on windows, so there could be potantial difference in line breaks.",
    "Created an attachment (id\u003d47021)\nerror log with stack trace that has duplicated issues\n\nI just tried it with latest changes from CVS and it still don\u0027t find duplicates for tose issues. However if I delete text before stack trace (making \"org.eclipse.swt.SWTException: ...\" line first in the text area) it does find bug 152255\n\nYou can import attached log (Error Log view / Import Log) and try to create issues for any of the \"Failed to execute runnable (java.lang.NullPointerException)\" rows.",
    "When I use that error log the search finds 18 potential matches including 152255. I\u0027ve tried with both the current head and with my latest posted patch. I\u0027ve also tried with and without adding text before and after the stack trace. It works for me.\n\n\nEugene, maybe you could try adding a breakpoint or a println() in org.eclipse.mylar.internal.editor.NewBugEditor::getStackTraceFromDescritpion(), to see if the stack trace being parsed is correctly. Maybe this is related to something platform specific.",
    "(In reply to comment #59)\n\u003e When I use that error log the search finds 18 potential matches including\n\u003e 152255. I\u0027ve tried with both the current head and with my latest posted patch.\n\u003e I\u0027ve also tried with and without adding text before and after the stack trace.\n\u003e It works for me.\n\nWeird. After I remove text it returns exactly 1 hit for bug 152255",
    "ok, i\u0027ve found the bug... a simple logic error in the parsing. \n\nI still don\u0027t know why I saw 18 results and you 0... but both are wrong either way. I\u0027ll have a patch up in a minute to fix this.",
    "Created an attachment (id\u003d47025)\nFixes stack parsing, adds test to excersize bug\n\nOK, This patch fixes the bug Eugene was seeing and adds a test case to excerise this issue with parsing.",
    "Patch applied, good test.  This is exactly the way we try to do things: write a few tests while creating the feature to ensure that it is testable (sometimes that can turn out to be more work than creating the feature), then for every bug that\u0027s found add a failing test and fix.  I did a quick manual test with Eugene\u0027s and with another exception and the behavior was consistent.\n\nIn my testing I noticed that NPE\u0027s tend to show too many matches, so I created bug 152279"
  ],
  "commentCreationDates": [
    "2006-05-24T21:03:45+02:00",
    "2006-07-10T19:58:19+02:00",
    "2006-07-10T21:26:35+02:00",
    "2006-07-11T18:06:27+02:00",
    "2006-07-12T18:36:42+02:00",
    "2006-07-12T18:47:34+02:00",
    "2006-07-12T19:07:24+02:00",
    "2006-07-12T19:21:59+02:00",
    "2006-07-12T21:00:53+02:00",
    "2006-07-13T20:25:49+02:00",
    "2006-07-14T18:07:54+02:00",
    "2006-07-18T07:54:57+02:00",
    "2006-07-18T17:24:28+02:00",
    "2006-07-20T07:39:47+02:00",
    "2006-07-20T18:26:34+02:00",
    "2006-07-21T02:27:43+02:00",
    "2006-07-21T04:05:06+02:00",
    "2006-07-21T04:18:26+02:00",
    "2006-07-21T04:27:38+02:00",
    "2006-07-21T04:27:40+02:00",
    "2006-07-21T04:58:31+02:00",
    "2006-07-21T04:59:05+02:00",
    "2006-07-21T05:02:10+02:00",
    "2006-07-21T18:47:41+02:00",
    "2006-07-21T18:47:43+02:00",
    "2006-07-26T07:12:50+02:00",
    "2006-07-26T23:53:56+02:00",
    "2006-07-26T23:56:51+02:00",
    "2006-07-27T00:01:27+02:00",
    "2006-07-27T00:03:43+02:00",
    "2006-07-27T00:11:54+02:00",
    "2006-07-27T02:32:15+02:00",
    "2006-07-27T13:27:27+02:00",
    "2006-07-27T17:58:59+02:00",
    "2006-07-27T19:06:59+02:00",
    "2006-07-27T19:36:26+02:00",
    "2006-07-27T19:51:50+02:00",
    "2006-07-27T20:02:59+02:00",
    "2006-07-27T20:08:59+02:00",
    "2006-07-27T22:14:29+02:00",
    "2006-07-27T23:36:02+02:00",
    "2006-07-27T23:45:46+02:00",
    "2006-07-27T23:55:05+02:00",
    "2006-07-28T06:10:37+02:00",
    "2006-07-28T14:58:34+02:00",
    "2006-07-28T19:46:18+02:00",
    "2006-07-28T20:38:29+02:00",
    "2006-07-29T01:29:25+02:00",
    "2006-07-29T01:34:59+02:00",
    "2006-07-29T01:50:23+02:00",
    "2006-07-29T15:00:40+02:00",
    "2006-07-29T22:58:44+02:00",
    "2006-07-30T05:42:20+02:00",
    "2006-07-30T05:55:37+02:00",
    "2006-07-30T06:16:05+02:00",
    "2006-07-30T06:21:57+02:00",
    "2006-07-30T06:22:31+02:00",
    "2006-07-30T13:48:03+02:00",
    "2006-07-30T14:09:05+02:00",
    "2006-07-30T16:49:08+02:00",
    "2006-07-30T17:04:08+02:00",
    "2006-07-30T17:16:11+02:00",
    "2006-07-30T17:23:19+02:00",
    "2006-07-30T21:19:26+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.wizards.DisplayRelatedReportsPage.setRelatedTasks",
          "source": "DisplayRelatedReportsPage.java:231"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.wizards.FindRelatedReportsPage.getNextPage",
          "source": "FindRelatedReportsPage.java:103"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.nextPressed",
          "source": "WizardDialog.java:751"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:351"
        }
      ],
      "number": 0,
      "commentIndex": 25,
      "bugId": "143567",
      "date": "2006-07-26T07:12:50+02:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.wizards.DisplayRelatedReportsPage.setRelatedTasks",
          "source": "DisplayRelatedReportsPage.java:232"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.wizards.FindRelatedReportsPage.getNextPage",
          "source": "FindRelatedReportsPage.java:103"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.nextPressed",
          "source": "WizardDialog.java:751"
        }
      ],
      "number": 1,
      "commentIndex": 40,
      "bugId": "143567",
      "date": "2006-07-27T23:36:02+02:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.mylar.internal.bugzilla.ui.editor.NewBugzillaTaskEditor",
      "elements": [
        {
          "method": "org.eclipse.mylar.bugzilla.tests.DuplicateDetetionTest.testDuplicateDetection",
          "source": "DuplicateDetetionTest.java:54"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        }
      ],
      "number": 2,
      "commentIndex": 47,
      "bugId": "143567",
      "date": "2006-07-29T01:29:25+02:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    }
  ],
  "groupId": "143567",
  "bugId": "143567",
  "date": "2006-05-24T21:03:45+02:00",
  "product": "Mylyn",
  "component": "Bugzilla",
  "severity": "enhancement"
}