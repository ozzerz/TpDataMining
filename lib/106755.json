{
  "comments": [
    "Doing a search (References --\u003e Workspace) for a particular method I get an error\n(message and stack trace at the bottom).  I do seem to get some search results,\nbut I suspect they are incomplete.  I am able to search successfully for (most)\nother methods in this particular class.  I haven\u0027t had this problem (that I can\nrecall) before.  The class in question is in a PDE target build (i.e., it\u0027s not\nin my workspace).  It\u0027s not practical for me to send/attach my workspace.  Doing\na clean and full rebuild does not fix it.  Exiting and restarting the workbench\ndoes not fix it.  I cannot tell you how to reproduce this, unfortunately.  All I\ncan tell you is that the method I\u0027m looking for references to is\norg.eclipse.wst.common.componentcore.internal.StructureEdit.findResourcesBySourcePath(IPath,\nint) in WTP SDK 0.7RC3 200507290654.\n\nThe offending line of code (with a little context):\n\tif (targetParameters !\u003d NoParameters) {\n\t\tfor (int i \u003d 0; i \u003c targetParameters.length; i++) {\n---\u003e\t\t\tbuffer.append(targetParameters[i].signature());\n\t\t}\n\t}\nSince \"buffer\" is unconditionally set at the top of the method it must be that\nan element of targetParameters[] is unexpectedly null.\n\nHere\u0027s the error \u0026 stack trace:\nError 2005-08-11 11:17:36.925 An internal error occurred during: \"Java Search\".\njava.lang.NullPointerException\n\tat\norg.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature(MethodBinding.java:669)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:322)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:310)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey(Binding.java:45)\n\tat org.eclipse.jdt.internal.core.BinaryMethod.resolved(BinaryMethod.java:328)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch(MatchLocator.java:1324)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(MethodLocator.java:308)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:1856)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2201)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2001)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1457)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:945)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:986)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1103)\n\tat\norg.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\n\tat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:208)\n\tat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:424)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:532)\n\tat org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:135)\n\tat\norg.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:93)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n\nSession data:\neclipse.buildId\u003dI20050627-1435\njava.version\u003d1.4.2_06\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nFramework arguments:  -showLocation\nCommand-line arguments:  -os win32 -ws win32 -arch x86 -data\nD:\\Workspaces\\development\\7.0_3.1 -showLocation -consoleLog",
    "It seems to be possible to end up with null inside the parameters of a method\nbinding.\nLook at the method:\norg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding\nprivate MethodBinding resolveTypesFor(MethodBinding method) {\n...\n}\n\nIn case foundArgProblem is true, the parameters collection of the binding passed\nas an argument can potentially contain null values. We might want to reset that\ncollection to NoParameters.",
    "Gary, can you still reproduce this problem?\n\nAnd if so, does it still happen on the latest 3.2 nightly build?",
    "The status of nightly build N20050928-0010 indicated some problems, so I didn\u0027t\ntry that.  But I was able to reproduce it in integration bild I20050928-1300:\n\njava.lang.NullPointerException\nat\norg.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature(MethodBinding.java:669)\nat\norg.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:322)\nat\norg.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey(MethodBinding.java:310)\nat\norg.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey(Binding.java:45)\nat org.eclipse.jdt.internal.core.BinaryMethod.resolved(BinaryMethod.java:328)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch(MatchLocator.java:1338)\nat\norg.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference(MethodLocator.java:323)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:1870)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2223)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2023)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1471)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:958)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:999)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1117)\nat\norg.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\nat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:207)\nat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:423)\nat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:532)\nat org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:135)\nat\norg.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:94)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n",
    "Jerome, can you take a look at this one please.",
    "Cannot do much without steps to reproduce. Sorry.\nPlease reopen when you have steps.",
    "(In reply to comment #5)\n\u003e Cannot do much without steps to reproduce. Sorry.\n\u003e Please reopen when you have steps.\n\nUm, well, sure you can.\nFor example, you can dig into the code to try to find out how it is possible for\nan element of targetParameters[] to be null where the NPE occurs.  (The stack\ntraces I provided are proof that it *is* possible.)  Olivier Thomann seems to\nhave already done some of this and even suggested a possible fix approach (see\ncomment #1).\n\nHave you tried to reproduce it yourself?  I actually *did* provide enough\ninformation for someone to try to reproduce it (notwithstanding my remark\nadmittedly to the contrary). It was kind of buried in my description, but it\nbasically boils down to 1) get one of the two builds that I was able to\nreproduce it with and fire it up; 2) target (with PDE) an Eclipse build that\nalso contains the referenced WTP code; 3) open class\norg.eclipse.wst.common.componentcore.internal.StructureEdit and select method\nfindResourcesBySourcePath(IPath, int) in the outline; 4) do \u003ccontext\nmenu\u003e--\u003eReferences--\u003eWorkspace.  Of course, whether or not the NPE occurs may\nwell depend on the state of the workbench/workspace at the time, so those steps\nmay or may not reproduce the problem when you try it.",
    "(In reply to comment #6)\n\u003e Um, well, sure you can.\n\u003e For example, you can dig into the code to try to find out how it is possible\n\u003e for an element of targetParameters[] to be null where the NPE occurs.  (The\n\u003e stack traces I provided are proof that it *is* possible.)  \nUnfortunately this is not possible to protect all access for performance\nreasons. This is why I want to understand the exact problem you\u0027re having.\n\n\u003e Olivier Thomann seems to\n\u003e have already done some of this and even suggested a possible fix approach (see\n\u003e comment #1).\nKent fixed the problem highlighted by Olivier on September 28th. Unfortunately\nyou reported that you still had the NPE.\n\n\u003e Have you tried to reproduce it yourself?  \nYes but I failed to reproduce it.\n\n\u003e I actually *did* provide enough\n\u003e information for someone to try to reproduce it (notwithstanding my remark\n\u003e admittedly to the contrary). \nI tried :-)\n\n\u003e It was kind of buried in my description, but it\n\u003e basically boils down to 1) get one of the two builds that I was able to\n\u003e reproduce it with and fire it up; 2) target (with PDE) an Eclipse build that\n\u003e also contains the referenced WTP code; 3) open class\n\u003e org.eclipse.wst.common.componentcore.internal.StructureEdit and select method\n\u003e findResourcesBySourcePath(IPath, int) in the outline; 4) do \u003ccontext\n\u003e menu\u003e--\u003eReferences--\u003eWorkspace.  \nThanks. These steps are better. I\u0027ll try those.\n\n\u003e Of course, whether or not the NPE occurs may\n\u003e well depend on the state of the workbench/workspace at the time, so those \n\u003e steps may or may not reproduce the problem when you try it.\nThis doesn\u0027t sound very encouraging. In fact I\u0027m looking for steps that always\nreproduce the problem.\n",
    "Here are the steps I followed:\n1. Downloaded and expanded wtp-all-in-one-0.7-win32.zip\n2. Started Eclipse SDK I20051102-0010\n3. Changed Preferences \u003e Plug-in Development \u003e Target Platform to point to the\ndirectory containing WTP 0.7\n4. File \u003e Import \u003e Plug-in Developement \u003e External Plugins and Fragments\n5. Next \u003e Next\n6. Added org.eclipse.wst.common.modulecore\n7. Finish\n8. Opened org.eclipse.wst.common.componentcore.internal.StructureEdit\nNote that it doesn\u0027t have source attached.\n9. Selected findResourcesBySourcePath(IPath, int) in the Outline\n10. Search for referenced in the Workspace\nIt found one with no problem.\n\nCan you please try those steps ?",
    "(In reply to comment #8)\n\u003e ...\n\u003e Can you please try those steps ?\n\nDone.  I got the same results as you (i.e., it found 1 with no problem).  Oh,\nwell.  So I guess this one will fade into the sunset.  Anyway, thanks for your\ntime \u0026 attention.",
    "Please reopen if you have more details."
  ],
  "commentCreationDates": [
    "2005-08-11T17:45:54+02:00",
    "2005-08-11T18:08:16+02:00",
    "2005-09-28T22:24:29+02:00",
    "2005-09-29T14:10:50+02:00",
    "2005-10-31T19:38:53+01:00",
    "2005-11-02T11:15:08+01:00",
    "2005-11-02T15:43:20+01:00",
    "2005-11-02T16:12:35+01:00",
    "2005-11-02T16:42:33+01:00",
    "2005-11-02T19:18:54+01:00",
    "2005-11-03T11:33:16+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature",
          "source": "MethodBinding.java:669"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey",
          "source": "MethodBinding.java:322"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey",
          "source": "MethodBinding.java:310"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey",
          "source": "Binding.java:45"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BinaryMethod.resolved",
          "source": "BinaryMethod.java:328"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch",
          "source": "MatchLocator.java:1324"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference",
          "source": "MethodLocator.java:308"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching",
          "source": "MatchLocator.java:1856"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching",
          "source": "MatchLocator.java:2201"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching",
          "source": "MatchLocator.java:2001"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.process",
          "source": "MatchLocator.java:1457"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:945"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:986"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1103"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:208"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:424"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:532"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run",
          "source": "JavaSearchQuery.java:135"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:93"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "106755",
      "date": "2005-08-11T17:45:54+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature",
          "source": "MethodBinding.java:669"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey",
          "source": "MethodBinding.java:322"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.computeUniqueKey",
          "source": "MethodBinding.java:310"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Binding.computeUniqueKey",
          "source": "Binding.java:45"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BinaryMethod.resolved",
          "source": "BinaryMethod.java:328"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.newMethodReferenceMatch",
          "source": "MatchLocator.java:1338"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MethodLocator.matchReportReference",
          "source": "MethodLocator.java:323"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching",
          "source": "MatchLocator.java:1870"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching",
          "source": "MatchLocator.java:2223"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching",
          "source": "MatchLocator.java:2023"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.process",
          "source": "MatchLocator.java:1471"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:958"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:999"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1117"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:207"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:423"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:532"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run",
          "source": "JavaSearchQuery.java:135"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:94"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 1,
      "commentIndex": 3,
      "bugId": "106755",
      "date": "2005-09-29T14:10:50+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "106755",
  "bugId": "106755",
  "date": "2005-08-11T17:45:54+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}