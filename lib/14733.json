{
  "comments": [
    "Build 20020423\n\nMarker#setAttributes may throw a NPE due to a missing null check\non the line:\n\nMarkerInfo markerInfo \u003d (MarkerInfo)resourceInfo.getMarkers().get(id);\n\nsince #getMarkers() can answer null.\n\n-----\nI came across a scenario where it did occur inside the JavaModel test suites.\nIf you\u0027re interested in reproducing it, let me know.",
    "The sender of #setAttributes is creating the marker prior to modifying it. For \nsome reason the marker info isn\u0027t available afterwards...\n\nJavaProject#createClasspathProblemMarker(\n\t\tString message,\n\t\tint severity,\n\t\tboolean cycleDetected) {\n\t\ttry {\n\t\t\tif (cycleDetected){\n\t\t\t\tString dummy \u003d null;\n\t\t\t}\n\t\t\tIMarker marker \u003d getProject().createMarker\n(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER);\n\t\t\tmarker.setAttributes(\n\t\t\t\tnew String[] { \n\t\t\t\t\tIMarker.MESSAGE, \n\t\t\t\t\tIMarker.SEVERITY, \n\t\t\t\t\tIMarker.LOCATION, \n\t\t\t\t\tIJavaModelMarker.CYCLE_DETECTED },\n\t\t\t\tnew Object[] {\n\t\t\t\t\tmessage,\n\t\t\t\t\tnew Integer(severity), \n\t\t\t\t\tUtil.bind(\"classpath.buildPath\"),//$NON-\nNLS-1$\n\t\t\t\t\tcycleDetected ? \"true\" : \"false\"});//\n$NON-NLS-1$ //$NON-NLS-2$\n\t\t} catch (CoreException e) {\n\t\t}\n\t}",
    "I traced the code so as to double check that the marker was correctly created \nand recorded into the project info markers slot.\n\nHowever, when retrieving it for setting attributes, the slot has been cleared \n(suspecting the info was flushed in the meantime).",
    "The NPE is easy to reproduce:\n\nmarker.delete();\nmarker.setAttribute(IMarker.MESSAGE, \"Foo\");\n\nThis will produce the NPE.  However in Philippe\u0027s case the marker has just been \ncreated so this shouldn\u0027t happen.  Philippe, would it be easy for us to load \nyour tests to try reproducing this?",
    "I will send you email for reproducing this defect.\n\nInvestigating more the defect, I am seeing a concurrency problem. In a \nbackground thread (indexer) I am also querying the resource info (asking \n#isLocal to resource), and thus it might recreate the info under the marker \ncreation resulting in the NPE.\n\nWe might need to protect the background indexer with some Workspace runnables...",
    "Released a fix for the NPE.  I haven\u0027t yet figured out what\u0027s happening in \nPhilippe\u0027s case.  I can reproduce it every time when launched in \"Run\" mode, but \ncan\u0027t reproduce at all in \"Debug\" mode.  This seems to be timing/concurrency \nrelated, but no other threads are manipulating the resource tree.",
    "Could it be due to some timestamp granularity ?",
    "I finally tracked it down.  The java model is deleting the marker in a resource \nchange listener.  I am attaching a stack trace that shows what happens.  When \nyou wrap the create/setAttributes in a workspace runnable, you don\u0027t experience \nthe problem because the resource change listener doesn\u0027t get invoked until after \nthe setAttributes call.\n\nI was able to reproduce it today when running in debug mode.  I was thrown off \nlast week because the JUnit UI shows a different stack trace when running in \ndebug mode.  I can\u0027t figure out why this happens, but this is the stack trace I \nsee when running the same test case in debug mode:\n\njava.lang.NullPointerException\n\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\n\tat junit.extensions.TestSetup$1.protect(TestSetup.java:19)\n\tat junit.extensions.TestSetup.run(TestSetup.java:23)\n",
    "Created an attachment (id\u003d720)\nstack trace showing problem\n",
    "Moving back to JDT.  The NullPointerException has been fixed, but the test case \nstill has problems.",
    "Reentering is indeed intriguing, but in this case a different marker is being \ndeleted than the one added (first was a CP cycle marker, then next one was an \nunbound CP entry marker).\n\nCannot reproduce issue any longer (after removing the workspace runnable \nprotection).\nClosing"
  ],
  "commentCreationDates": [
    "2002-04-26T15:07:46+02:00",
    "2002-04-26T15:11:14+02:00",
    "2002-04-26T15:35:14+02:00",
    "2002-04-26T15:42:22+02:00",
    "2002-04-26T16:44:49+02:00",
    "2002-04-26T22:53:04+02:00",
    "2002-04-26T23:50:16+02:00",
    "2002-04-29T19:09:48+02:00",
    "2002-04-29T19:10:13+02:00",
    "2002-04-29T19:11:24+02:00",
    "2002-04-30T16:12:25+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "junit.extensions.TestDecorator.basicRun",
          "source": "TestDecorator.java:22"
        },
        {
          "method": "junit.extensions.TestSetup$1.protect",
          "source": "TestSetup.java:19"
        },
        {
          "method": "junit.extensions.TestSetup.run",
          "source": "TestSetup.java:23"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "14733",
      "date": "2002-04-29T19:09:48+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "14733",
  "bugId": "14733",
  "date": "2002-04-26T15:07:46+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}