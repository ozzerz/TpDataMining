{
  "comments": [
    "Have a dstore connection connected.\nQuit RSE, stop the remote server or make it unavailable.\nRestart RSE, it will try to reconnect (Preference setting restore tree).\nQuit RSE while connect is still ongoing. \nObserve InterruptedException in the PDE Errorlog: these exceptions should not be shown.\n\nFor correctly dealing with InterruptedException, see \nhttp://michaelscharf.blogspot.com/2006/09/dont-swallow-interruptedexception-call.html\n\nWhen addressing this, all RSE code should be searched for how InterruptedException is treated. Mind that in many cases, exception handlers will just catch(Exception e) which is harder to find but just as bad.\n\njava.lang.InterruptedException\nat org.eclipse.rse.core.subsystems.AbstractConnectorService.promptForPassword(AbstractConnectorService.java:577)\nat org.eclipse.rse.connectorservice.dstore.DStoreConnectorService$2.run(DStoreConnectorService.java:1045)\nat org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:155)\nat org.eclipse.ui.internal.UISynchronizer$2.run(UISynchronizer.java:125)\nat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\nat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3467)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3107)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2264)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2228)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2103)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:457)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:452)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:101)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:146)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:476)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:416)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1124)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1099)\n\n\n-----------Enter bugs above this line-----------\ninstallation : eclipse-SDK-3.3M5 (I20070209-1006)\nRSE install  : RSE-SDK 2.0M5\njava.runtime : Sun 1.5.0_11\nos.name:     : Windows XP 5.1, Service Pack 2\n------------------------------------------------\nsystemtype   : Unix-ssh / Linux-dstore (REXEC Launcher)\ntargetos     : Red Hat Enterprise Linux WS release 4 (Nahant Update 3)\ntargetuname  : Linux parser.takefive.co.at 2.6.9-34.EL #1 Fri Feb 24 16:44:51 EST 2006 i686 athlon i386 GNU/Linux\ntargetvm     : Sun Java HotSpot(TM) Client VM (build 1.4.2_13-b06, mixed mode)\n------------------------------------------------",
    "The prompting connector service stuff has changed quite a bit since this defect was created.  Is this still a problem?",
    "The real problem here is, that RSE uses InterruptedException instead of OperationCanceledException in order to report user cancellation - see bug #190750.\n\nBecause of this, we cannot know whether an InterruptedException we catch is due to the Thread actually being interrupted e.g. as part of a shutdown sequence, or due to normal user cancellation. The blog entry mentioned in the description only applies for thread interruption, which is by far less likely than user cancellation.\n\nTherefore, I think that for now we should just catch InterruptedException without logging it, as discussed in bug #190803. When this is done, the exception should no longer be logged (should be verified) and this bug can be marked fixed. We will deal with correct handling of InterruptedException through bug #190750 in the Future.",
    "\n\u003e \n\u003e Therefore, I think that for now we should just catch InterruptedException\n\u003e without logging it, as discussed in bug #190803. When this is done, the\n\u003e exception should no longer be logged (should be verified) and this bug can be\n\u003e marked fixed. We will deal with correct handling of InterruptedException\n\u003e through bug #190750 in the Future.\n\u003e \n\nRight now, the DStoreConnectorService does not catch the InterruptedExceptions.  It ends up throwing them as does the AbstractConnectorService.  Beyond this, the exception handling lies in the hands of clients.  I\u0027m not sure whether you\u0027re looking for additional logging in the connector service before throwing/passing on the exceptions or whether you want to use this defect to change the clients that actually catch the exceptions.    \n",
    "Since the connector service now just throws the interrupted exceptions to clients, I think this is invalid."
  ],
  "commentCreationDates": [
    "2007-03-07T13:48:57+01:00",
    "2007-06-07T16:41:13+02:00",
    "2007-06-08T07:21:25+02:00",
    "2007-06-08T18:32:36+02:00",
    "2007-06-11T15:37:16+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.InterruptedException",
      "elements": [
        {
          "method": "org.eclipse.rse.core.subsystems.AbstractConnectorService.promptForPassword",
          "source": "AbstractConnectorService.java:577"
        },
        {
          "method": "org.eclipse.rse.connectorservice.dstore.DStoreConnectorService$2.run",
          "source": "DStoreConnectorService.java:1045"
        },
        {
          "method": "org.eclipse.ui.internal.UILockListener.doPendingWork",
          "source": "UILockListener.java:155"
        },
        {
          "method": "org.eclipse.ui.internal.UISynchronizer$2.run",
          "source": "UISynchronizer.java:125"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3467"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3107"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2264"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2228"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2103"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:457"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:452"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:101"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:146"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:354"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:169"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:476"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:416"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1124"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1099"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "176606",
      "date": "2007-03-07T13:48:57+01:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "minor"
    }
  ],
  "groupId": "176606",
  "bugId": "176606",
  "date": "2007-03-07T13:48:57+01:00",
  "product": "Target Management",
  "component": "RSE",
  "severity": "minor"
}