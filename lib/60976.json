{
  "comments": [
    "On 4/28 I build. \nIn working with out XML Editor, making sure it still worked, I noticed that if\n\"junk\" in entered in an file (with an extension of .xml), that all kinds of bad \nthings happen due to \"sax parser\" exceptions. Can\u0027t save, with our editor, for \nexample, but even if created by some other means, even basic text editor no \nlonger opens. I recommend the object contribution code be extremely bullet proof \nso if any xmlish exception occurs it just quietly ignore it. The exception stack \ntrace is pasted below. (I\u0027d seen this problem in earlier drivers, but haven\u0027t \nrecently, so thought was fixed, or maybe I just haven\u0027t been entering junk \nlately?). Thanks.\n\nBTW, if it matters, theres the JRE info I was running under:\njava.fullversion\u003dJ2RE 1.4.2 IBM Windows 32 build cndev-20040414 (JIT disabled)\n\n\u003d \u003d \u003d \u003d \u003d \u003d \n!MESSAGE Problem parsing file\n!ENTRY org.eclipse.ui.ide 4 4 May 04, 2004 17:56:00.43\n!MESSAGE Problem parsing file\n!STACK 0\norg.xml.sax.SAXParseException: Content is not allowed in prolog.\n\tat org.apache.xerces.util.ErrorHandlerWrapper.\ncreateSAXParseException(Unknown Source)\n\tat org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)\n\tat org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)\n\tat org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)\n\tat org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher.\ndispatch(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.\nscanDocument(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat javax.xml.parsers.SAXParser.parse(Unknown Source)\n\tat javax.xml.parsers.SAXParser.parse(Unknown Source)\n\tat org.eclipse.ui.internal.ide.model.PropertyParser.\nparseResource(PropertyParser.java:127)\n\tat org.eclipse.ui.internal.ide.model.WorkbenchResource.\ntestXMLProperty(WorkbenchResource.java:331)\n\tat org.eclipse.ui.internal.ide.model.WorkbenchResource.\ntestAttribute(WorkbenchResource.java:127)\n\tat org.eclipse.ui.internal.ActionExpression$ObjectStateExpression.\npreciselyMatches(ActionExpression.java:376)\n\tat org.eclipse.ui.internal.ActionExpression$ObjectStateExpression.\nisEnabledFor(ActionExpression.java:345)\n\tat org.eclipse.ui.internal.ActionExpression$SingleExpression.\nisEnabledFor(ActionExpression.java:239)\n\tat org.eclipse.ui.internal.ActionExpression.isEnabledFor(ActionExpression.\njava:79)\n\tat org.eclipse.ui.internal.ObjectActionContributor$ObjectContribution.\nisApplicableTo(ObjectActionContributor.java:234)\n\tat org.eclipse.ui.internal.ObjectActionContributor.\nisApplicableTo(ObjectActionContributor.java:155)\n\tat org.eclipse.ui.internal.ObjectContributorManager.\nisApplicableTo(ObjectContributorManager.java:249)\n\tat org.eclipse.ui.internal.ObjectActionContributorManager.\ncontributeObjectActions(ObjectActionContributorManager.java:129)\n\tat org.eclipse.ui.internal.PopupMenuExtender.\naddObjectActions(PopupMenuExtender.java:98)\n\tat org.eclipse.ui.internal.PopupMenuExtender.\nmenuAboutToShow(PopupMenuExtender.java:119)\n\tat org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:\n286)\n\tat org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:\n370)\n\tat org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:367)\n\tat org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:383)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:\n116)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:801)\n\tat org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3303)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:2975)\n\tat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1451)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3158)\n\tat org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)\n\tat org.eclipse.swt.widgets.Menu._setVisible(Menu.java:222)\n\tat org.eclipse.swt.widgets.Display.runPopups(Display.java:2618)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2263)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:\n240)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.\nrun(PlatformActivator.java:283)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:\n240)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:\n117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.\njava:84)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.\njava:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.\ninvoke(DelegatingMethodAccessorImpl.java:59)\n\tat java.lang.reflect.Method.invoke(Method.java:390)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:269)\n\tat org.eclipse.core.launcher.Main.run(Main.java:700)\n\tat org.eclipse.core.launcher.Main.main(Main.java:684)",
    "Hmmm, changing from \u0027blocker\u0027 since I re-tried this \"afresh\", and while \nexception was still thrown, and written to log, it did not seem to keep basic \neditor from opening ... so not sure if that was fluke, or if I had in some other \nway compromised by development environment? Will still leave as major, since its \neffects may  depend on exact timing of other jobs, or something? (and, after \nall, it is a pretty darn scary message to see in log :)",
    "Doug,  Is this related to the stuff you were working on?  If not, please \nreassign to me.  ",
    "This code is now in Platform-Core, and is routed through \nXMLRootElementContentDescriber. \n \nRafael: I\u0027m not sure if it is a good or bad idea to swallow exceptions.  It \nmight be better to not print a whole exception trace, but something should \nprobably go in the log.  Take, for example, CVS logging messages when \nsynchronization bytes don\u0027t arrive. ",
    "Doug, the stack mentioned above still happens with UI from HEAD. The code in\nruntime (as contributed by UI) was already ignoring any SAXExceptions. It still\nignores SAXExceptions (seems a good idea to me), but I changed it to cause\ncontent describer disablement whenever a ParserConfiguration happens (it will be\nlogged only once in a session).",
    "Reassigning to UI for comments/closure. Work has been done in Core to ensure we\nhandle invalid XML files properly.",
    "Just in case my comment above might cause any confusion... this is still an\nissue at the UI level.",
    "David: Can you try using I200405051600? ",
    "Ok, I checked in 0505 I-build ... and sort of works as expected. In a \"first \nlevel\" development environment, it appears ok. Namely that \"junk\" in an XML \nfile prints nothing to log/console and editors open ok. \n\nThe odd thing is, that if I use launcher and \"Run Workbench\", things don\u0027t go \nso smooth in that \"second level\" workbench. In that case, there\u0027s still nothing \nprinted to log, but neither \"ant editor\" or the basic text editor will open an \nxml file with \"junk\" in it (by junk, I just mean literally I typed some \u0027junk\u0027 \nat the beginnig of file, no XMLDecl, no tags, etc). I just get the vague \u0027could \nnot open editor\u0027 message, with no exceptions logged nor more details provided \n(which is the subject of another defect of mine :( \n\nI\u0027m not sure what\u0027s different about that second order environment. The \"target\" \njust points to the development environment. I have all default options on the \nlaunch. (I did try once with pure defaults, even though I normally run with -\ndebug -consolelog as arguments).  I also tried with two JRE\u0027s (IBM\u0027s and \nSun\u0027s), same effect in both. The good news is my editor still opens ok on it :)\n\nSo, obviously, the basic editor not opening some file (junk or note) in \"run \nworkbench\" is kind of serious, but not sure if that\u0027s related to \noriginal \u0027defect\u0027 or some other \"pde\" related problem?\n",
    "David, are you sure you reimported external plugins, fragments and features (if\nyou are running with features in the workspace) from the same build?",
    "Rafael, I don\u0027t actual import anything \"from base\" .. I had started with a new \nworkspace, and just had my own plugins from repository, and depend on dynamic \nclasspath container to pickup rest. But, with your comment, I was motivated to \nshutdown my workbench (primary one), restart it, and retry, and then all worked \nok (both from primary one as before, and from \"run workbench\" launch too) .... \nSo, I\u0027m not sure dynamic class paths are working quite right yet, but as far as \nI\u0027m concerned this particular bug can be closed. \n\n[on the potential dynamic classpath problem, I had experienced a crash earlier, \nand even though I had restarted .. I\u0027m wondering if something was left in a bad \nstate ... maybe I\u0027d better start using that new -clean option :) \n\nThanks as always. ",
    "I\u0027ll look at this for M9. ",
    "I have tried the following without reproducing the problem mentioned in comment  \n#8.  I am running I200405060200.  I also see no error messages printed to the \nlogs.... \n \n(A) \n1. create a simple project with a file called \"junk.xml\" \n2. open the file, and insert some random text (no tags whatsoever) \n3. save the file and close it \n4. right-click on the file (Ant does not show open in the context menu) \n5. double-click opens the file in an editor \n \n(B) \nSame as above, but with a self-hosted (i.e., \"second-level\") workspace.  \nPlatform UI is checked out from HEAD. \n \n \nCan you give exact steps to reproduce your problem?   ",
    "I had started seeing the \"Comment 8\" problems again but can not re-create \nreliably, and never in a in \"empty and pure\" envirionment and have traced it at \nleast partially to our code. We had started to tie into file buffers a few \nweeks ago, got distracted, and didn\u0027t finish. The end result is that one of our \ndocuments (a StructuredDocument) was being created for xml files, but \nnot \"setup\", but the AntSetupParticipant was trying to set it up. Eventually an \nassert was being thrown:\n\nAssert.isTrue(!document.containsPositionCategory(fPositionCategory));\n\n\nWith top of stack trace looking like this:\n(where the \u0027document\u0027 is an instance of StructuredDocument (our class). \n\nAssert.isTrue(boolean, String) line: 177\nAssert.isTrue(boolean) line: 162\nDefaultPartitioner.connect(IDocument) line: 105\nAntDocumentSetupParticipant.setup(IDocument) line: 33\nTextFileBufferManager.createEmptyDocument(IPath) line: 156\nResourceTextFileBuffer.initializeFileBufferContent(IProgressMonitor) line: 231\nResourceTextFileBuffer(ResourceFileBuffer).create(IPath, IProgressMonitor) \nline: 229\nTextFileBufferManager.connect(IPath, IProgressMonitor) line: 70\n\n\nOur immediate work around is to remove our partially implemented extension \npoint ... as we finish that work, I\u0027ll open new bugs if/when we get into some \nsort of \"conflict\" with other participants. \n\nThis was actually very hard to track down, I\u0027ll add, since it seemed like \nchanging VM\u0027s, creating \"new launch configurations\" etc., was related to it \noccurring or not occurring. So, not sure of what\u0027s going on there, why its so \nintermittant, but don\u0027t really have a \"bug\" to report at this time. Feel free \nto close this one, and I\u0027ll open new ones if/when I have more reproducable \nresults. ",
    "I\u0027ll close this as fix then."
  ],
  "commentCreationDates": [
    "2004-05-05T00:21:25+02:00",
    "2004-05-05T00:45:37+02:00",
    "2004-05-05T16:11:50+02:00",
    "2004-05-05T16:25:40+02:00",
    "2004-05-05T18:48:35+02:00",
    "2004-05-05T20:16:04+02:00",
    "2004-05-05T20:42:48+02:00",
    "2004-05-05T23:19:52+02:00",
    "2004-05-06T23:19:38+02:00",
    "2004-05-07T00:53:49+02:00",
    "2004-05-07T01:34:45+02:00",
    "2004-05-07T15:47:53+02:00",
    "2004-05-07T18:43:23+02:00",
    "2004-05-07T23:30:33+02:00",
    "2004-05-07T23:55:13+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.xml.sax.SAXParseException",
      "message": "Content is not allowed in prolog.",
      "elements": [
        {
          "method": "org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.util.ErrorHandlerWrapper.fatalError",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLErrorReporter.reportError",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLErrorReporter.reportError",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLScanner.reportFatalError",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher.dispatch",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XMLParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ui.internal.ide.model.PropertyParser.parseResource",
          "source": "PropertyParser.java:127"
        },
        {
          "method": "org.eclipse.ui.internal.ide.model.WorkbenchResource.testXMLProperty",
          "source": "WorkbenchResource.java:331"
        },
        {
          "method": "org.eclipse.ui.internal.ide.model.WorkbenchResource.testAttribute",
          "source": "WorkbenchResource.java:127"
        },
        {
          "method": "org.eclipse.ui.internal.ActionExpression$ObjectStateExpression.preciselyMatches",
          "source": "ActionExpression.java:376"
        },
        {
          "method": "org.eclipse.ui.internal.ActionExpression$ObjectStateExpression.isEnabledFor",
          "source": "ActionExpression.java:345"
        },
        {
          "method": "org.eclipse.ui.internal.ActionExpression$SingleExpression.isEnabledFor",
          "source": "ActionExpression.java:239"
        },
        {
          "method": "org.eclipse.ui.internal.ActionExpression.isEnabledFor",
          "source": "ActionExpression. java:79"
        },
        {
          "method": "org.eclipse.ui.internal.ObjectActionContributor$ObjectContribution.isApplicableTo",
          "source": "ObjectActionContributor.java:234"
        },
        {
          "method": "org.eclipse.ui.internal.ObjectActionContributor.isApplicableTo",
          "source": "ObjectActionContributor.java:155"
        },
        {
          "method": "org.eclipse.ui.internal.ObjectContributorManager.isApplicableTo",
          "source": "ObjectContributorManager.java:249"
        },
        {
          "method": "org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectActions",
          "source": "ObjectActionContributorManager.java:129"
        },
        {
          "method": "org.eclipse.ui.internal.PopupMenuExtender.addObjectActions",
          "source": "PopupMenuExtender.java:98"
        },
        {
          "method": "org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow",
          "source": "PopupMenuExtender.java:119"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.fireAboutToShow",
          "source": "MenuManager.java: 286"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.handleAboutToShow",
          "source": "MenuManager.java: 370"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.access$0",
          "source": "MenuManager.java:367"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager$2.menuShown",
          "source": "MenuManager.java:383"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java: 116"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:820"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:801"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP",
          "source": "Control.java:3303"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:2975"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1451"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3158"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.TrackPopupMenu",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Menu._setVisible",
          "source": "Menu.java:222"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runPopups",
          "source": "Display.java:2618"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2263"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1324"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java: 240"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:283"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java: 240"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java: 117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl. java:84"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl. java:57"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:59"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:390"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:700"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:684"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "60976",
      "date": "2004-05-05T00:21:25+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "60976",
  "bugId": "60976",
  "date": "2004-05-05T00:21:25+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}