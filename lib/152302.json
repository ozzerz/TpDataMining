{
  "comments": [
    "I create SetValueCommand and pass it SetRequest instance with elementToEdit \u003d\u003d \nnull. I do not have elementToEdit at the moment because it will be produced by \nthe CreateElementCommand earlier in the CompositeCommand being constructed. In \nother words this SetValueCommand will initialize new element right after \ncreation. I override doExecuteWithResult() so it works fine except this NPE.\n\njava.lang.NullPointerException\nat \norg.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand.getAffectedFiles(EditElementCommand.java:78)\nat \norg.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand.\u003cinit\u003e(EditElementCommand.java:65)\nat \norg.eclipse.gmf.runtime.emf.type.core.commands.SetValueCommand.\u003cinit\u003e(SetValueCommand.java:52)\nat \norg.eclipse.gmf.x.editor.edit.policies.ext.XEditPolicy$1$2.\u003cinit\u003e(XEditPolicy.java:57)\nat \norg.eclipse.gmf.x.editor.edit.policies.ext.XEditPolicy$1.getCommand(XEditPolicy.java:57)\nat \norg.eclipse.gmf.runtime.diagram.ui.tools.AbstractPopupBarTool.handleButtonDown(AbstractPopupBarTool.java:115)\nat org.eclipse.gef.tools.AbstractTool.mouseDown(AbstractTool.java:964)\nat org.eclipse.gef.tools.SelectionTool.mouseDown(SelectionTool.java:490)\nat org.eclipse.gef.EditDomain.mouseDown(EditDomain.java:215)\nat \norg.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMousePressed(DomainEventDispatcher.java:342)\nat \norg.eclipse.draw2d.LightweightSystem$EventHandler.mouseDown(LightweightSystem.java:513)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:133)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1496)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505)\nat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3312)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2941)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\nat \norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\nat \norg.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\nat \norg.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\nat org.eclipse.core.launcher.Main.run(Main.java:977)\nat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "What would you like to do about SetValueCommand#canExecute in this case?  Will your subclass override so that the elementToEdit is not required?",
    "It should return true when there is no element so when it\u0027s available the command may be executed; on the other hand it\u0027s not executable if there is no element. I think that there should be a policy how the command may be used; maybe it should support deferred element update or maybe we need another command specially designed to support deferred setting of element.",
    "Sounds good - how about I add a new subclass of SetValueCommand called DeferredSetValueCommand, then?  It will be exectuable when it doesn\u0027t have an elementToEdit.  Clients can subclass it to implement their own version of #getElementToEdit to find the element to edit any way they choose.\n\nI\u0027ll still fix the SetValueCommand to prevent the NPEs when it\u0027s instantiated without an elementToEdit, but it\u0027s #canExecute method will return false if there\u0027s no elementToEdit.",
    "Created an attachment (id\u003d49264)\nProposed fix.\n\nDmitri, if you have time could you look at my proposed fix to make sure it will meet your requirements before I commit?  Thanks!",
    "That\u0027s ok except canExecute() in SetValueCommand - check for null first; canExecute() in super accesses elementToEdit to get it\u0027s EClass so it\u0027ll throw NPE.",
    "Right.  Thanks for catching that!\n\nFixed as proposed."
  ],
  "commentCreationDates": [
    "2006-07-31T10:04:13+02:00",
    "2006-08-30T23:32:23+02:00",
    "2006-09-01T14:02:26+02:00",
    "2006-09-01T17:18:06+02:00",
    "2006-09-01T17:28:34+02:00",
    "2006-09-01T17:55:14+02:00",
    "2006-09-01T18:22:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand.getAffectedFiles",
          "source": "EditElementCommand.java:78"
        },
        {
          "method": "org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand.\u003cinit\u003e",
          "source": "EditElementCommand.java:65"
        },
        {
          "method": "org.eclipse.gmf.runtime.emf.type.core.commands.SetValueCommand.\u003cinit\u003e",
          "source": "SetValueCommand.java:52"
        },
        {
          "method": "org.eclipse.gmf.x.editor.edit.policies.ext.XEditPolicy$1$2.\u003cinit\u003e",
          "source": "XEditPolicy.java:57"
        },
        {
          "method": "org.eclipse.gmf.x.editor.edit.policies.ext.XEditPolicy$1.getCommand",
          "source": "XEditPolicy.java:57"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.tools.AbstractPopupBarTool.handleButtonDown",
          "source": "AbstractPopupBarTool.java:115"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.mouseDown",
          "source": "AbstractTool.java:964"
        },
        {
          "method": "org.eclipse.gef.tools.SelectionTool.mouseDown",
          "source": "SelectionTool.java:490"
        },
        {
          "method": "org.eclipse.gef.EditDomain.mouseDown",
          "source": "EditDomain.java:215"
        },
        {
          "method": "org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMousePressed",
          "source": "DomainEventDispatcher.java:342"
        },
        {
          "method": "org.eclipse.draw2d.LightweightSystem$EventHandler.mouseDown",
          "source": "LightweightSystem.java:513"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:133"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1496"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1520"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1505"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java:1279"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3312"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2941"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "152302",
      "date": "2006-07-31T10:04:13+02:00",
      "product": "GMF",
      "component": "Runtime Diagram",
      "severity": "normal"
    }
  ],
  "groupId": "152302",
  "bugId": "152302",
  "date": "2006-07-31T10:04:13+02:00",
  "product": "GMF",
  "component": "Runtime Diagram",
  "severity": "normal"
}