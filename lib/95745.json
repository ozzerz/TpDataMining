{
  "comments": [
    "Actually, if a stack trace gets printed to the console, one can easily jump/load\nthe approriate source file into the editor by just clicking on the appropriate\n\"link\" in the console (really great feature :)). E.g.:\n\n15:23:41,349 [main] WARN  (Sftp.java:489) - bla\n15:23:41,357 [main] DEBUG (Sftp.java:491) - main\njava.lang.IllegalArgumentException: bla\n\tat Sftp.run(Sftp.java:36)\n\tat Sftp.main(Sftp.java:487)\n\nHowever, today many developers are using a logging framework, which outputs the\nfile of interest in their log statements. The UI marks those file as a \"link\",\nbut if one clicks on the terminal (where eclipse has been started) one gets:\n\nUnhandled event loop exception\nReason:\nString index out of range: -1\n\nWould be nice, if the click would cause the same action (i.e. loading the source\nfile if available), as for stack traces.\n\nTo get a better impression, what I mean, I\u0027ll attach an appropriate screen shot.\nThe logging statements where made with the following log4j settings:\n\nlog4j.rootLogger\u003dINFO, stderr\nlog4j.appender.stderr\u003dorg.apache.log4j.ConsoleAppender\nlog4j.appender.stderr.layout\u003dorg.apache.log4j.PatternLayout\nlog4j.appender.stderr.layout.ConversionPattern\u003d%d{HH:mm:ss,SSS} [%t] %-5p\n(%F:%L) - %m%n\nlog4j.logger.com.jcraft.jsch.Buffer\u003dDEBUG\nlog4j.logger.Sftp\u003dDEBUG",
    "Created an attachment (id\u003d21329)\nscreenshot eclipse\n",
    "from my Log...\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\nat java.lang.String.substring(String.java:1444)\nat java.lang.String.subSequence(String.java:1479)\nat \norg.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.getTypeName(JavaStackTraceHyperlin\nk.java:187)\nat \norg.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.linkActivated(JavaStackTraceHyperlink\n.java:73)\nat org.eclipse.ui.console.TextConsoleViewer.mouseUp(TextConsoleViewer.java:482)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:136)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1380)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1404)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1389)\nat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1237)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3035)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2696)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1652)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1616)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:336)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\nat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:372)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:161)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:324)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:330)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:274)\nat org.eclipse.core.launcher.Main.run(Main.java:977)\nat org.eclipse.core.launcher.Main.main(Main.java:952)\n",
    "Fixed in JavaStackTraceHyperlink.",
    "Please verify, Kevin.",
    "verified",
    "Well, the \"String index out of range: -1\" has been removed and a \"Source not\nfound for $sourcefilename\" shows up, but the problem is IMHO not solved.\n\nE.g., if the console shows:\n\n02:07:24,585 [AWT-EventQueue-0] WARN  (PopupListener.java:643) - \"null\" ignored\n\nisn\u0027t it possible to check, whether the current project contains such a file and\nif not, doing a Class.forName($file.split(\".\")[0]) ... and than opening an\neditor ... ? If not, the \"PopupListener.java:643\" should not be marked/act as a\nlink ...",
    "Checking if the source exists is an expensive operation and not something that\nwe\u0027d want to do while processing the output of a process. We simply do our best\nto create links on text that appears to be a source file name.\nFeel free to enter a new feature request if this does not meet your needs.",
    "."
  ],
  "commentCreationDates": [
    "2005-05-18T15:37:02+02:00",
    "2005-05-18T15:39:27+02:00",
    "2005-05-20T21:09:45+02:00",
    "2005-05-26T20:18:32+02:00",
    "2005-05-26T20:18:54+02:00",
    "2005-06-01T23:01:53+02:00",
    "2005-06-23T02:30:52+02:00",
    "2005-06-23T16:21:37+02:00",
    "2005-06-23T16:21:53+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "bla",
      "elements": [
        {
          "method": "Sftp.run",
          "source": "Sftp.java:36"
        },
        {
          "method": "Sftp.main",
          "source": "Sftp.java:487"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "95745",
      "date": "2005-05-18T15:37:02+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: -1",
      "elements": [
        {
          "method": "java.lang.String.substring",
          "source": "String.java:1444"
        },
        {
          "method": "java.lang.String.subSequence",
          "source": "String.java:1479"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.getTypeName",
          "source": "JavaStackTraceHyperlin k.java:187"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceHyperlink.linkActivated",
          "source": "JavaStackTraceHyperlink .java:73"
        },
        {
          "method": "org.eclipse.ui.console.TextConsoleViewer.mouseUp",
          "source": "TextConsoleViewer.java:482"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:136"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1380"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1404"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1389"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java:1237"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3035"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2696"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1652"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1616"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:336"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:372"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:161"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:330"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:274"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "95745",
      "date": "2005-05-20T21:09:45+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "95745",
  "bugId": "95745",
  "date": "2005-05-18T15:37:02+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}