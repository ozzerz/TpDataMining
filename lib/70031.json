{
  "comments": [
    "I am using XSD libraries provided by eclipse in a stand alone application \n(using weblogic).\nMy application is deployed on linux environment.\n\nWhen I am trying to generate the schema, I am getting the following exception\n\njava.lang.IllegalArgumentException: invalid authority: /apps/bea/user_projects/m\nytest/cms1/stage/cma/lib/xsd.resources.jar!\n        at org.eclipse.emf.common.util.URI.validateURI(URI.java:663)\n        at org.eclipse.emf.common.util.URI.parseIntoURI(URI.java:489)\n        at org.eclipse.emf.common.util.URI.createURIWithCache(URI.java:380)\n        at org.eclipse.emf.common.util.URI.createURI(URI.java:338)\n        at org.eclipse.emf.common.EMFPlugin.getBaseURL(EMFPlugin.java:121)\n        at org.eclipse.xsd.impl.XSDSchemaImpl.getSchemaForSchema(XSDSchemaImpl.j\nava:610)\n        at org.eclipse.xsd.impl.XSDSchemaImpl.getSchemaForSchema(XSDSchemaImpl.j\nava:2364)",
    "Can you tell me what value is returned for\ngetClass().getResource(\"plugin.properties\") in this method in EMFPlugin:\n\n  public URL getBaseURL()\n  {\n    if (baseURL \u003d\u003d null)\n    {\n      if (getPluginResourceLocator() \u003d\u003d null)\n      {\n        try\n        {\n          URL pluginPropertiesURL \u003d getClass().getResource(\"plugin.properties\");\n          if (pluginPropertiesURL \u003d\u003d null)\n\nIf it\u0027s not zip or jar, you need to set a system property so that this code in\nURI.java will know about the archive scheme:\n  static\n  {\n    Set set \u003d new HashSet();\n    String propertyValue \u003d\nSystem.getProperty(\"org.eclipse.emf.common.util.URI.archiveSchemes\");\n\n    if (propertyValue \u003d\u003d null)\n    {\n      set.add(SCHEME_JAR);\n      set.add(SCHEME_ZIP);\n    }\n    else\n    {\n      for (StringTokenizer t \u003d new StringTokenizer(propertyValue);\nt.hasMoreTokens(); )\n      {\n        set.add(t.nextToken().toLowerCase());\n      }\n    }\n\n    archiveSchemes \u003d Collections.unmodifiableSet(set);\n  }",
    "Sorry I am not able to understand the solution.\nAre suggesting to change the code of EMFPluggin Class?\nOr put the following code in the code written by me.\n\nAs I am directly using the jar files provided for the XSD APIs.",
    "I\u0027m asking you to determine what archive scheme is used by your runtime. \nNormally  it will be \"jar\" or \"zip\" but it would seem to be different in your\ncase and I would like to know what it is.  Determining what \n\n  URL pluginPropertiesURL \u003d getClass().getResource(\"plugin.properties\");\n\nproduces will give that answer.  Stepping through this code with the debugger\nshould give the information.  Whatever it is, if you add it to the system\nproperty org.eclipse.emf.common.util.URI.archiveSchemes should make things work.\n(See the URI javadoc.)",
    "I don\u0027t have a development environment set up on my linux machine. I just \ncreate a war file and deploy it on the linux environment so I am afraid I won\u0027t \nbe able to debug the code.\n\nBut I added the following lines to my code (with system.out)\nString baseURL \u003d XSDPlugin.INSTANCE.getBaseURL().toString();\nSystem.out.println(\"The base URL is**********\" + baseURL);\n\nIt\u0027s not returning the base url and throwing the same exception.\n\nCould you please suggest any other way out. Or if possible can give me a jar \nfile with some System.outs in it.\nThat will be very helpful.\nAlso this code is working fine on Windows environment.\n",
    "Try XSDPlugin.class.getResource(\"plugin.properties\").  That should return you\nthe full URL for the plugin.properties and should let you know what archive\nscheme is being used in your runtime.",
    "Thanks a lot for the information. I added that line in my code and the value I \nam getting is\n\nzip:/apps/bea/user_projects/myblank/cms1/stage/cma/lib/xsd.resources.jar!/org/ec\nlipse/xsd/plugin.properties\n\nfor the code\n\nXSDPlugin.class.getResource(\"plugin.properties\")\n\nSo it\u0027s not the archive scheme. It\u0027s complainig about authority, which is the \npart after archive scheme. Is this something known or is there any work around \nfor that.",
    "Which JDK produces this result?  It should produce:\n\nzip:file:/apps/bea/user_projects/myblank/cms1/stage/cma/lib/xsd.resources.jar!/org/ec\nlipse/xsd/plugin.properties\n\nI.e., the thing after zip: or jar: should be an absolute URI, that is, one with\na scheme of its own.  ",
    "We are using jdk131_08 provided by BEA with weblogic 7.1 SP4.\n\nIs there any work around to fix this problem? Any system property?",
    "I think this is a problem in the JDK that should be fixed by the JDK, neither\nthe Sun nor the IBM JDK have this problem.  What URL does it produce on Windows,\nwhich you say is working correctly?  (Probably the driver letter appears first\nand that looks like a URI scheme.)  One workaround would be to unzip the jar and\nput that directory on the classpath rather than the jar...",
    "Yes you are right, the URL on windows is Like \nzip:E:/apps/bea/user_projects/myblank/cms1/stage/cma/lib/xsd.resources.jar!/org/\nec\nlipse/xsd/plugin.properties\n\nSo it\u0027s taking \"E\" as a scheme and giving no problem on windows.\n\nAre you talking about xsd.resources.jar file?\n\n",
    "Hi,\nI tried with Sun jdk 1.4 also on windows and the URL I am getting is\nzip:E:/apps/bea/user_projects/dotp/myserver/stage/_appsdir_cma_ear/lib/xsd.resou\nrces.jar!/org/eclipse/xsd/plugin.properties\n\nSo even here there is no file or any other scheme added to it. \nDo you think it\u0027s really a JDK problem? Or Am I doing something wrong.",
    "Yes, I mean the xsd.resources.jar.\n\nAre you sure you are using the JDK you think you are?\n\nI get these results:\n\njava version \"1.4.2_04\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05)\nJava HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode)\n\u003e\u003ejar:file:/D:/sandbox/unpackage1_3.0/eclipse/plugins/org.eclipse.xsd/runtime/xsd.jar!/org/eclipse/xsd/plugin.properties\n\nAnd \n\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2)\nClassic VM (build 1.4.2, J2RE 1.4.2 IBM Windows 32 build cndev-20040605 (JIT\nenabled: jitc))\n\u003e\u003ejar:file:/D:/sandbox/unpackage1_3.0/eclipse/plugins/org.eclipse.xsd/runtime/xsd.jar!/org/eclipse/xsd/plugin.properties",
    "Yes, when I run a standalone Java application the URL I get is \njar:file:/E:/XSDPOC/xsd.resources.jar!/org/eclipse/xsd/plugin.properties\n\nwith JDK 1.4.2_05.\n\nBut when I deploy this code to weblogic as a part of my complete application, \nit generates the following URL\nzip:E:/apps/bea/user_projects/dotp/myserver/stage/_apps\ndir_cma_ear/lib/xsd.resources.jar!/org/eclipse/xsd/\n\nwith JDK 1.4.2_05.\n\nThis is how my weblogic starts :\n\n\"E:\\j2sdk1.4.2_05\\bin\\java\" -hotspot -Xms64m -Xmx\n200m -XX:MaxPermSize\u003d96m -Xbootclasspath/a:\"dotp-locale.jar\" -Dejfw.config.token\nfile\u003d\"dotp-env.properties\" -Dweblogic.security.SSL.trustedCAKeyStore\u003d\"E:/apps/be\na/weblogic700/server\\lib\\cacerts\"  -Dweblogic.Name\u003dmyserver -Dbea.home\u003d\"E:\\apps\\\nbea\" -Dweblogic.management.username\u003dsystem -Dweblogic.management.password\u003dpasswo\nrd -Dweblogic.ProductionModeEnabled\u003dfalse -Djava.security.policy\u003d\"E:\\apps\\bea\\we\nblogic700\\server\\lib\\weblogic.policy\" weblogic.Server\n\nSo, it\u0027s a different behaviour under different environments.\n",
    "Are you sure the server isn\u0027t starting other processes that are using a\ndifferent JDK, i.e., the java that\u0027s on the PATH?  I find it hard to believe\nthat a given JDK can produce such inconsistent results.  And I just can\u0027t see\nhow to properly address this problem within the framework, particularly the case\nof Windows where the drive letter looks like a scheme. It might be possible to\nhack it in some way, i.e., if the zip/jar scheme isn\u0027t followed by another\nscheme with at least two letters, insert file:, but without being able to\nreproduce the problem, I can\u0027t be sure that this won\u0027t be unsupported by that\nJDK.  Can I get the BEA JDK that reproduces this problem somewhere?  Or is there\nsome other way I can reproduce it?\n\nDid the suggested workaround work?",
    "I am still looking into this.\nBut the interesting finding is that\nany JDK used with standalone application retuns a URL\nas Jar:file:/[file path]  \nEven the BEA JDK.\nbut when code is executed as a part of weblogic application then it returns \nZip:/[file path]\n\nSo it\u0027s not a problem with any of the JDK as they are working fine standalone.\nIt\u0027s something to do with weblogic processes. \nAlso I am not sure why weblogix is treating is as Zip instead of jar.\n",
    "Hi,\nIt seems that since we are deploying our application as a war file and \neverything is in this war. So the getResource(\"pluggin.properties\") in the xsd \ncode returns the URL with Zip scheme.\n\nIf you want to reproduce the problem, try to deploy your application as war \nfile in some application server and then try to run the client code.\n\nWaiting for your reply.",
    "Hi!\nIs there any update on this bug?\nWaiting for your reply.\n",
    "The fix is in CVS.  The archive file URI may now be relative.",
    "The fix is available in the M200407280859 build."
  ],
  "commentCreationDates": [
    "2004-07-14T17:30:47+02:00",
    "2004-07-14T17:57:58+02:00",
    "2004-07-14T18:04:43+02:00",
    "2004-07-14T18:42:02+02:00",
    "2004-07-14T20:31:46+02:00",
    "2004-07-14T22:12:21+02:00",
    "2004-07-15T10:13:07+02:00",
    "2004-07-15T14:36:08+02:00",
    "2004-07-15T14:43:01+02:00",
    "2004-07-15T15:47:53+02:00",
    "2004-07-15T16:20:43+02:00",
    "2004-07-15T17:18:02+02:00",
    "2004-07-15T17:33:32+02:00",
    "2004-07-16T11:27:22+02:00",
    "2004-07-16T14:12:19+02:00",
    "2004-07-16T14:20:53+02:00",
    "2004-07-20T09:41:38+02:00",
    "2004-07-26T16:15:49+02:00",
    "2004-07-27T15:21:22+02:00",
    "2004-07-28T18:54:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "invalid authority: /apps/bea/user_projects/m ytest/cms1/stage/cma/lib/xsd.resources.jar!",
      "elements": [
        {
          "method": "org.eclipse.emf.common.util.URI.validateURI",
          "source": "URI.java:663"
        },
        {
          "method": "org.eclipse.emf.common.util.URI.parseIntoURI",
          "source": "URI.java:489"
        },
        {
          "method": "org.eclipse.emf.common.util.URI.createURIWithCache",
          "source": "URI.java:380"
        },
        {
          "method": "org.eclipse.emf.common.util.URI.createURI",
          "source": "URI.java:338"
        },
        {
          "method": "org.eclipse.emf.common.EMFPlugin.getBaseURL",
          "source": "EMFPlugin.java:121"
        },
        {
          "method": "org.eclipse.xsd.impl.XSDSchemaImpl.getSchemaForSchema",
          "source": "XSDSchemaImpl.j ava:610"
        },
        {
          "method": "org.eclipse.xsd.impl.XSDSchemaImpl.getSchemaForSchema",
          "source": "XSDSchemaImpl.j ava:2364"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "70031",
      "date": "2004-07-14T17:30:47+02:00",
      "product": "MDT",
      "component": "XSD",
      "severity": "normal"
    }
  ],
  "groupId": "70031",
  "bugId": "70031",
  "date": "2004-07-14T17:30:47+02:00",
  "product": "MDT",
  "component": "XSD",
  "severity": "normal"
}