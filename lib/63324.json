{
  "comments": [
    "During plugin starts up, startup() method in the plugin class will be called.  \nIf CoreException is thrown, the plugin should be disabled.  \n\nHave tried Eclipse 3.0M8 200403261517, and 200405201226. Create a sample Hello \nWorld Plguin.  In the plugin class, add the following code:\n\n\tpublic void startup() throws CoreException {\n\t\tsuper.startup();\n\t\tthrow new CoreException(\n\t\t\t\tnew Status(\n\t\t\t\tIStatus.INFO, \n\t\t\t\t\"StartupTest\",\n\t\t\t\t0, \n\t\t\t\t\"Throw by startup()\", \n\t\t\t\tnull));\n\n\t}\n\nIt throws CoreException during plugin starts up.  It should disable this plugin \nbut it does not work.  We still get the Hello World dialog.\n\nHere is the exception that we get:\n\norg.osgi.framework.BundleException: Exception in \norg.eclipse.core.internal.compatibility.PluginActivator.start()\n\tat org.eclipse.osgi.framework.internal.core.BundleContext.startActivator\n(BundleContext.java:1009)\n\tat org.eclipse.osgi.framework.internal.core.BundleContext.start\n(BundleContext.java:971)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker\n(BundleHost.java:404)\n\tat org.eclipse.osgi.framework.internal.core.Bundle.start\n(Bundle.java:304)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass\n(EclipseClassLoader.java:89)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass\n(BundleLoader.java:315)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:346)\n\tat org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass\n(AbstractClassLoader.java:116)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass\n(BundleLoader.java:251)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass\n(BundleHost.java:332)\n\tat org.eclipse.osgi.framework.internal.core.Bundle.loadClass\n(Bundle.java:1294)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:132)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:125)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:114)\n\tat org.eclipse.ui.internal.WorkbenchPlugin$1.run\n(WorkbenchPlugin.java:189)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)\n\tat org.eclipse.ui.internal.WorkbenchPlugin.createExtension\n(WorkbenchPlugin.java:186)\n\tat org.eclipse.ui.internal.PluginAction.createDelegate\n(PluginAction.java:107)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent\n(PluginAction.java:240)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent\n(WWinPluginAction.java:207)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:550)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2\n(ActionContributionItem.java:502)\n\tat org.eclipse.jface.action.ActionContributionItem$6.handleEvent\n(ActionContributionItem.java:474)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2578)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2256)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1562)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:257)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:90)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:277)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:239)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:267)\n\tat org.eclipse.core.launcher.Main.run(Main.java:692)\n\tat org.eclipse.core.launcher.Main.main(Main.java:676)\norg.eclipse.core.runtime.CoreException: Throw by startup()\n\tat StartupTest.StartupTestPlugin.startup(StartupTestPlugin.java:64)\n\tat org.eclipse.core.internal.compatibility.PluginActivator.start\n(PluginActivator.java:49)\n\tat org.eclipse.osgi.framework.internal.core.BundleContext$1.run\n(BundleContext.java:992)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.osgi.framework.internal.core.BundleContext.startActivator\n(BundleContext.java:988)\n\tat org.eclipse.osgi.framework.internal.core.BundleContext.start\n(BundleContext.java:971)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker\n(BundleHost.java:404)\n\tat org.eclipse.osgi.framework.internal.core.Bundle.start\n(Bundle.java:304)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass\n(EclipseClassLoader.java:89)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass\n(BundleLoader.java:315)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:346)\n\tat org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass\n(AbstractClassLoader.java:116)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass\n(BundleLoader.java:251)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass\n(BundleHost.java:332)\n\tat org.eclipse.osgi.framework.internal.core.Bundle.loadClass\n(Bundle.java:1294)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:132)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:125)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:114)\n\tat org.eclipse.ui.internal.WorkbenchPlugin$1.run\n(WorkbenchPlugin.java:189)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)\n\tat org.eclipse.ui.internal.WorkbenchPlugin.createExtension\n(WorkbenchPlugin.java:186)\n\tat org.eclipse.ui.internal.PluginAction.createDelegate\n(PluginAction.java:107)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent\n(PluginAction.java:240)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent\n(WWinPluginAction.java:207)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:550)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2\n(ActionContributionItem.java:502)\n\tat org.eclipse.jface.action.ActionContributionItem$6.handleEvent\n(ActionContributionItem.java:474)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2578)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2256)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1562)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:257)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:90)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:277)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:239)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:267)\n\tat org.eclipse.core.launcher.Main.run(Main.java:692)\n\tat org.eclipse.core.launcher.Main.main(Main.java:676)\n\nstartup() method works as expected in Eclipse 2.1\n\nHave also tried to throw exception inside the following method, but the plugin \nalso does not get disabled:\npublic void start(org.osgi.framework.BundleContext context)\n           throws Exception",
    "Created an attachment (id\u003d10918)\nSample Hello World Plugin with CoreException at statup method\n",
    "The 2.1 behavior needs to be verified. There might be a whole in the backward\ncompatibility layer.",
    "Trying to solve this bug, I came accros something that we knew but that has \ninteresting characteristics.\nBasically when the startup of a plugin fails classes can still loaded from it \nand this is the osgi model (this behavior is ensured by catching all \nbundleException coming out the hostdata.getBundle().start() call in \nEclipseClassLoader.findLocalClass()). \n\nThis starts to be interesting when the activation is resulting from the \ncreation of an executable extension. Indeed the class will be found, \ninstantiated and the executable extension created successfully. \n\nFor example with the example generated from PDE, the view will be open without \nproblems.\n\nAt the time I\u0027m writing this I do not have a 2.x drop available to see what \nwas happening before but I would say that we were failing.\n\nSo basically 2 questions:\n- in 3.0, when the activation fails, should not we throw a \nclassNotFoundException? If we were to implement that we would probably have a \nbehavior closer to what we had in 2.1, but it seems to be a big semantical \nchange to put in know.\n- in 2.1 was it possible to load class if the plugin failed starting. If the \nanswer to that is yes (which I believe), then we should clearly state the new \nbehavior, and say that the backward compatibility layer is, depending on the \nprevious answer, either not supporting this or may have flows.\n",
    "Created an attachment (id\u003d11174)\nPatch to the compatibility plugin\n\nThis patch only fixes the obvious. The 2.1 behavior needs to be observed in\ngreater details to see all the cases where the shutdown method was being\ncalled. For example I think it may be necessary to call include \"plugin \u003d\npd.getPlugin();\" into the try/catch block.",
    "This has been fixed in HEAD and will be in the next I build.\n\nHere is a description of what has been implemented for record.\nThe 2.1 behavior has been re-established.\n- if the plugin startup() method call fails, the shutdown() method is called and\nthe plugin is marked as deactivated. If the instantiation of the Plugin class\nfails startup has not been called, therefore it is not necessary to call\nshutdown.  However the plugin is marked as deactivated. This is done in the\nPluginDescriptor#doPluginActivation().\n\nThe 3.0 behavior is intentionaly left different, in that the bundle is never\nmarked as deactivated. Indeed in a dynamic system, it is possible that\nconditions have changed allowing the bundle to start successfully.\n\nThe EclipseClassLoader.findLoadClass() has been changed to throw a\nClassNotFoundException when a bundle fails starting. This guarantees that the\nstartup failure will not go unnoticed.",
    "Created an attachment (id\u003d13852)\nA plugin that did not get disabled even CoreException is thrown\n\nThis plugin is a simple Hello World plugin.  The only different is, we display\na dialog and thrown CoreException in startup() methed.\tThe plugin should be\ndisabled, but it doesn\u0027t.",
    "The original problem is fixed.  But we found that when there is a MessageDialog \nbefore the CoreException, the plugin will not be disabled.  \n\n\tpublic void startup() throws CoreException {\n\t\tsuper.startup();\n\t\t\n\t\tMessageDialog.openInformation(\n\t\t\t\tnull,\n\t\t\t\t\"Information\", \n\t\t\t\t\"Enter Startup\");\n\t\t\n\t\tthrow new CoreException(\n\t\t\t\tnew Status(\n\t\t\t\tIStatus.INFO, \n\t\t\t\t\"StartupTest\",\n\t\t\t\t0, \n\t\t\t\t\"Throw by startup()\", \n\t\t\t\tnull));\n\n\t}\n\nThe problem can be reproduced using the third attachment with the latest IES.  \nPlease let me know if more information is required.",
    "When I try to start the plugin directly from the console, I get the appropriate\nthe behavior: \n- the first time, the exception is logged\n- the second time, another exception is logged indicating that the plugin is\ndeactivated\n\nWhen I let the plugin be activated automatically because the action is executed,\nI get an error which is expected. When I try to re-run the action again, no\nerror is logged and the action is executed (this is abnormal).\n\nIf instead of re-running the action, I go to the console and try to start the\nplugin, I get an error message saying that the plugin is deactivated. This is\nthe expected behavior.\n\nTo summarize, the error is in the UI and not in the runtime. It looks like its\naround PluginAction#runWithAction() and #createDelegate().",
    "Is this being considered for 3.0.1?  It looks like it is, but I just wanted to \nbe sure?\n",
    "No, I do not have it on the plate for 3.0.1.\nCan you explain why this is critical for you?\n",
    "Note that only bugs tagged with 3.0.1 target milestone are being considered for\n3.0.1.\n",
    "It is important to have it fixed in 3.0.1.  Otherwise, it will affect the RAD \ndelivery.  ",
    "To elaborate...  \n\nRAD is usinng LUM protection.  When a product does not have LUM license, core \nexception will be thrown to disable the plugin.  Currently the plugin is not \ngetting disabled so our licensing is invalid.\n\n\n",
    "The problem occurs because AbstractUIPlugin.refreshPluginActions() is getting\nrun when the dialog opened in startup() starts processing events.  It was queued\nas an asyncExec in AbstractUIPlugin.start(BundleContext).  This then\ninstantiates all the delegates, including the one already in process that\ntriggered the plugin startup.\nSo even though the first creation fail, the delegate is still successfully\ncreated  by refreshPluginActions(), and so are all other delegates for any\naction sets from the plugin that are currently on.\n\nWe should:\n1. Avoid creating delegates until the plugin is successfully started.\n2. Shut down any delegates when the plugin is shut down.\n\nI\u0027m investigating a low risk fix for (1) in 3.0.1, which will address the use\ncase here.  (2) is probably too high risk for 3.0.1, but should be investigated\nfor 3.1.\n\nPascal, what would be the best way to ensure that some code gets run when a\nplugin is successfully started?\nOne approach would be:\n- in AbstactUIPlugin.startup, hook a BundleListener\n- when it gets notified that the plugin in question is STARTED, queue the\nasyncExec to do refreshPluginActions, and remove the listener\n- refreshPluginActions() should check to ensure that the plugin is still in the\nright state before doing any work\n\n\n",
    "Replacing AbstractUIPlugin.start with the following fixes the problem.\nPascal, could you please review?\n\nIn particular, it seems like no notification is sent in the case where the\nbundle is stopped while in the STARTING state (going to the RESOLVED state), so\nthe listener is not unhooked.  Not sure how to address this.\n\n   public void start(BundleContext context) throws Exception {\n        super.start(context);\n        // Should only attempt refreshPluginActions() when the bundle\n        // has been fully started.  Otherwise action delegates\n        // can be created while in the process of creating \n        // a triggering action delegate.  Also, if the start throws\n        // an exception, the bundle will be shut down.  We don\u0027t\n        // want to have created any delegates if this happens.\n        // See bug 63324 for more details.\n        final BundleContext finalContext \u003d context;\n        context.addBundleListener(new BundleListener() {\n            public void bundleChanged(BundleEvent event) {\n                if (event.getBundle() \u003d\u003d finalContext.getBundle()) {\n                    switch (event.getType()) {\n                    \tcase BundleEvent.STARTED:\n                    \t    refreshPluginActions();\n                    \t\t// fall through\n                    \tcase BundleEvent.STOPPED:\n                    \t    finalContext.removeBundleListener(this);\n                    \t\tbreak;\n                    }\n                }\n            }\n        });\n    }\n",
    "Pascal recommended removing the listener in stop instead.\nThe revised patch is:\nIndex: AbstractUIPlugin.java\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nRCS file: /home/eclipse/org.eclipse.ui.workbench/Eclipse\nUI/org/eclipse/ui/plugin/AbstractUIPlugin.java,v\nretrieving revision 1.21\ndiff -u -r1.21 AbstractUIPlugin.java\n--- AbstractUIPlugin.java\t23 Jun 2004 17:14:38 -0000\t1.21\n+++ AbstractUIPlugin.java\t26 Aug 2004 19:42:21 -0000\n@@ -40,6 +40,8 @@\n import org.eclipse.ui.internal.util.BundleUtility;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleEvent;\n+import org.osgi.framework.BundleListener;\n \n /**\n  * Abstract base class for plug-ins that integrate with the Eclipse platform UI.\n@@ -137,6 +139,13 @@\n \t */\n \tprivate ImageRegistry imageRegistry \u003d null;\n \n+    /**\n+     * The bundle listener used for kicking off refreshPluginActions().\n+     * \n+     * @since 3.0.1\n+     */\n+    private BundleListener bundleListener;\n+    \n \t/**\n \t * Internal implementation of a JFace preference store atop a core runtime\n \t * preference store.\n@@ -894,7 +903,24 @@\n \t */\n \tpublic void start(BundleContext context) throws Exception {\n \t\tsuper.start(context);\n-\t\trefreshPluginActions();\n+        // Should only attempt refreshPluginActions() once the bundle\n+        // has been fully started.  Otherwise, action delegates\n+        // can be created while in the process of creating \n+        // a triggering action delegate (if UI events are processed during\nstartup).  \n+        // Also, if the start throws an exception, the bundle will be shut down.  \n+        // We don\u0027t want to have created any delegates if this happens.\n+        // See bug 63324 for more details.\n+        bundleListener \u003d new BundleListener() {\n+            public void bundleChanged(BundleEvent event) {\n+                if (event.getBundle() \u003d\u003d getBundle()) {\n+                    if (event.getType() \u003d\u003d BundleEvent.STARTED) {\n+                        refreshPluginActions();\n+                    }\n+                }\n+            }\n+        };\n+        context.addBundleListener(bundleListener);\n+        // bundleListener is removed in stop(BundleContext)\n \t}\n \t\n \t/**\n@@ -910,6 +936,9 @@\n \t */\n \tpublic void stop(BundleContext context) throws Exception {\n \t\ttry {\n+            if (bundleListener !\u003d null) {\n+                context.removeBundleListener(bundleListener);\n+            }\n \t\t\tsaveDialogSettings();\n \t\t\tsavePreferenceStore();\n \t\t\tpreferenceStore \u003d null;\n",
    "Patch released to 3.0.1 and head streams.\n",
    "With reference to comment #17, should this bug be moved to RESOLVED/FIXED \nnow?  Just wanted to make sure we are reporting the correct status.\n",
    "I\u0027m leaving open for now since I want to add a regression test for it.\n",
    "Ivan, can you please verify this in today\u0027s 3.0.1 build?\n\n",
    "Created an attachment (id\u003d14343)\nLog when using StartupTest plugin\n\nThe log file is from:\nEclipse Platform\nVersion: 3.0.1\nBuild id: 200408250800",
    "Have run the StartupTest plugin attached on 2004-08-10.  That plugin is still \nnot disabled probably.  The message dialog still pops up even the plugin is \ndisabled.  \n\nMy test is run on: \nEclipse Platform\nVersion: 3.0.1\nBuild id: 200408250800\n\nLog file has been attached",
    "The fix was only released on the 26th.  Please use yesterday\u0027s 3.0.1 build.\nhttp://download.eclipse.org/downloads/drops/M-M20040901-200409010800/index.php\n(you can ignore the red X).\n",
    "I\u0027ve verified it in M20040901, but would appreciate your double-checking it Ivan.\n",
    "Verified.\n",
    "Also verified in 200409081421/GTK",
    "Ivan, can you confirm that this fixes your exact case in M20040908?\n",
    "Have tried M20040910 driver.  The StartupTest plugin attached previously \nworks.  However, it still fails with our original plugin (StartupTest is just \nthe reduced one).  \n",
    "Looks like the activation of the LUM plugin (while activating the sample plugin)\nwas kicking off refreshPluginActions(), which caused the sample plugin\u0027s action\ndelegate to be created before its start() had completed.\n\nThe fix is to only instantiate action delegates if the bundle is ACTIVE, not\nSTARTING or STOPPING.\n\nI\u0027m also including a change to remove the bundle listener after it has done its\nwork, otherwise it\u0027s call O(N^2) times.  Even with this, it\u0027s called more than\nI\u0027d expect, probably because events are queued and dispatched asynchronously so\nit\u0027s possible for multiple start notifications to be queued before the listener\nremoves itself.\n\n\n",
    "Patch reviewed by Pascal and released to the 3.0.1 and head streams.\nIvan\u0027s test case passes with this change.\n"
  ],
  "commentCreationDates": [
    "2004-05-20T23:42:04+02:00",
    "2004-05-20T23:44:58+02:00",
    "2004-05-21T04:55:05+02:00",
    "2004-05-27T03:36:13+02:00",
    "2004-05-27T04:00:16+02:00",
    "2004-05-27T17:07:03+02:00",
    "2004-08-10T21:12:11+02:00",
    "2004-08-10T21:21:26+02:00",
    "2004-08-23T19:51:08+02:00",
    "2004-08-24T14:47:09+02:00",
    "2004-08-24T17:20:41+02:00",
    "2004-08-24T17:21:16+02:00",
    "2004-08-24T17:31:25+02:00",
    "2004-08-25T05:22:47+02:00",
    "2004-08-25T17:15:45+02:00",
    "2004-08-25T21:57:54+02:00",
    "2004-08-26T21:46:09+02:00",
    "2004-08-26T21:46:57+02:00",
    "2004-08-27T14:52:14+02:00",
    "2004-08-27T15:31:30+02:00",
    "2004-09-01T21:21:59+02:00",
    "2004-09-02T03:22:53+02:00",
    "2004-09-02T03:25:39+02:00",
    "2004-09-02T15:16:21+02:00",
    "2004-09-02T15:24:14+02:00",
    "2004-09-02T15:24:27+02:00",
    "2004-09-09T16:30:24+02:00",
    "2004-09-09T22:57:10+02:00",
    "2004-09-15T15:34:34+02:00",
    "2004-09-15T18:04:21+02:00",
    "2004-09-15T18:50:47+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "Exception in  org.eclipse.core.internal.compatibility.PluginActivator.start()",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContext.startActivator",
          "source": "BundleContext.java:1009"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContext.start",
          "source": "BundleContext.java:971"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:404"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Bundle.start",
          "source": "Bundle.java:304"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass",
          "source": "EclipseClassLoader.java:89"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:315"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:346"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:116"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:251"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:332"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Bundle.loadClass",
          "source": "Bundle.java:1294"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:132"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:125"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:114"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin$1.run",
          "source": "WorkbenchPlugin.java:189"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:186"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.createDelegate",
          "source": "PluginAction.java:107"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:240"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.runWithEvent",
          "source": "WWinPluginAction.java:207"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:550"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:502"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$6.handleEvent",
          "source": "ActionContributionItem.java:474"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:769"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2578"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2256"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1562"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1536"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:257"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:277"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:239"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:267"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:692"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:676"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "63324",
      "date": "2004-05-20T23:42:04+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Throw by startup()",
      "elements": [
        {
          "method": "StartupTest.StartupTestPlugin.startup",
          "source": "StartupTestPlugin.java:64"
        },
        {
          "method": "org.eclipse.core.internal.compatibility.PluginActivator.start",
          "source": "PluginActivator.java:49"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContext$1.run",
          "source": "BundleContext.java:992"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContext.startActivator",
          "source": "BundleContext.java:988"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContext.start",
          "source": "BundleContext.java:971"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:404"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Bundle.start",
          "source": "Bundle.java:304"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass",
          "source": "EclipseClassLoader.java:89"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:315"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:346"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:116"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:251"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:332"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Bundle.loadClass",
          "source": "Bundle.java:1294"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:132"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:125"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:114"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin$1.run",
          "source": "WorkbenchPlugin.java:189"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:186"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.createDelegate",
          "source": "PluginAction.java:107"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:240"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.runWithEvent",
          "source": "WWinPluginAction.java:207"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:550"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:502"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$6.handleEvent",
          "source": "ActionContributionItem.java:474"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:769"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2578"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2256"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1562"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1536"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:257"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:277"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:239"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:267"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:692"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:676"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "63324",
      "date": "2004-05-20T23:42:04+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "63324",
  "bugId": "63324",
  "date": "2004-05-20T23:42:04+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}