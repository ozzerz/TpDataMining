{
  "comments": [
    "It looks like TaskRepository can\u0027t be extended or have some additional settings.\nPerhaps concrete implementation of the AbstractRepositorySettingsPage should return instance of the TaskRepository (or its subclass)",
    "Created an attachment (id\u003d44076)\nProposed changes\n\nHere is the proposed changes",
    "Created an attachment (id\u003d44077)\nmylar/context/zip\n\nTask context for proposed refactorings",
    "Will look at this after 0.5.3 goes out (scheduled for today).",
    "Mik, do you have time to adress this any time soon? Thanks",
    "Changes look good and patch applied.  However, once this is further along we\u0027ll need to figure out if we want to promote inheritance for TaskRepository (e.g. making AbstractTaskRepository with an IssueTrackerRepository subtype), or have a final, customizable, and probably immutable class for TaskRepository.\n\nOn another note, I worry that the single-sanbox plug-in will be too restrictive for you and others.  I\u0027m thinking of making an org.eclipse.mylar/sandbox folder in CVS that will contain seperate sandbox projects, can have an update site project, etc. ",
    "(In reply to comment #5)\n\u003e Changes look good and patch applied.  However, once this is further along we\u0027ll\n\u003e need to figure out if we want to promote inheritance for TaskRepository (e.g.\n\u003e making AbstractTaskRepository with an IssueTrackerRepository subtype), or have\n\u003e a final, customizable, and probably immutable class for TaskRepository.\n\nIither one is fine with me. Though it could be easier to handle persistence with generic customizable one (e.g. use something like map of properties)\n\n\u003e On another note, I worry that the single-sanbox plug-in will be too restrictive\n\u003e for you and others.  I\u0027m thinking of making an org.eclipse.mylar/sandbox folder\n\u003e in CVS that will contain seperate sandbox projects, can have an update site\n\u003e project, etc. \n\nOps. It looks like I\u0027ve included sanbox stuff into this patch. But it is probably good thing...\n\n",
    "It appears that TaskRepositoryManager.saveRepositories() and readRepositories() can\u0027t handle any additional repository properties besides those hardcoded in TaskRepository.",
    "I wonder if AbstractRepositoryConnector should provide String[] getRepositoryProperties() method that will return names of supported repository properties. Then TaskRepository will have map of those properties and allow RepositoryManager to deal with any custom attributes.",
    "Created an attachment (id\u003d44464)\nChanges for TaskRepository persistence and custom attributes\n\nI\u0027ve also included changes for sandbox web provider.",
    "Looks good and I do like this approach more than the subtype.  But before I apply could you please add a unit test for a custom property to TaskRepositoryManagerTest?",
    "Created an attachment (id\u003d44474)\nChanges for TaskRepository persistence and custom attributes with test\n\nI\u0027ve added a test case, however there are two existing tests are failing.\n\norg.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest\ntestRepositoryPersistance(org.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest)\njunit.framework.AssertionFailedError: expected:\u003c1\u003e but was:\u003c2\u003e\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.failNotEquals(Assert.java:282)\n\tat junit.framework.Assert.assertEquals(Assert.java:64)\n\tat junit.framework.Assert.assertEquals(Assert.java:201)\n\tat junit.framework.Assert.assertEquals(Assert.java:207)\n\tat org.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest.testRepositoryPersistance(TaskRepositoryManagerTest.java:103)\n\ntestRepositorySyncTimePersistance2(org.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest)\njunit.framework.AssertionFailedError: expected:\u003cWed Dec 31 19:00:00 EST 1969\u003e but was:\u003cWed Jun 14 21:30:38 EDT 2006\u003e\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.failNotEquals(Assert.java:282)\n\tat junit.framework.Assert.assertEquals(Assert.java:64)\n\tat junit.framework.Assert.assertEquals(Assert.java:71)\n\tat org.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest.testRepositorySyncTimePersistance2(TaskRepositoryManagerTest.java:195)\n",
    "I tried to apply the patch, and if I run the suite without the patch all tests pass, with the patch those two tests fail.  I launched a test workspace and this resulted in a fatal error causing previous tasks not to be associated with repositories (message is \"Mylar: No repository associated with task\").  So there is a bug with the patch.\n\nBtw, icons need to come as attachments since they won\u0027t apply as a patch.",
    "Created an attachment (id\u003d44605)\n/org.eclipse.mylar.sandbox/icons/obj16/web_repository.gif\n\n",
    "Created an attachment (id\u003d44607)\nChanges for TaskRepository persistence and custom attributes with test\n\nThat should fix it.",
    "Great.  Patch applied.\n\nI\u0027m going to request to move the sandbox into the org.eclipse.mylar/sandbox directory.  I won\u0027t know exactly when it happens, but when it does you may need to take any additional patches that haven\u0027t been applied, save them locally, and then re-apply them to the new project.  Will keep you posted.",
    "Thanks Mik.\n\nBy the way, I wonder if createTaskFromExistingKey() should be actually in AbstractAddExistingTaskWizard class, so it will at least stay close to its usage...",
    "I have had this struggle .  The bad thing about it is that it puts functionality that\u0027s not UI into the UI.  The good thing about it is that it is where you expect it to be.  Let\u0027s keep this in mind if we start doing another refactoring of the connectors.",
    "Created an attachment (id\u003d44706)\nEditRepositoryWizard fix for editing existing repositories\n\nThis fix would allow to edit existing repositories. Otherwise custom properties are lost. This probably makes \"edit\" wizard the same as \"new repository\" wizard.",
    "It is hard to let it go. Had to reopen again since saving custom properties didn\u0027t work with EditRepositoryWizard (purely an UI issue). Fix attached.",
    "Yup, they\u0027re almost the same, but note that the edit one needs to refactor the task handles in performFinish().  \n\n  MylarTaskListPlugin.getTaskListManager().refactorRepositoryUrl(oldUrl, newUrl);\n\nWe could make the single wizard polymorphic to this... btw, this is one of the reasons I prefer to not put too much functionality into the wizards--sometimes it\u0027s perfectly fine to have duplication with UI things like wizards, and plugin.xml often forces this.  But it\u0027s rarely OK to have that with the core functionality that we end up pushing into the managers and connectors.\n\nPatch applied.",
    "Anything left to do here?",
    "Not sure if it belong to this report. Here is the list of possible refactorings:\n\n-- AbstractRepositoryConnector.openEditQueryDialog() method should be replaced with getEditQueryWizard()\n-- WebTaskNewPage and WebTaskWizard should be made generic and reused by Jira plugin\n-- review WebTask, WebQuery, WebQueryHit and WebTaskExternalizer to see what can be generalized\n-- review WebQueryEditWizard, WebQueryWizard, WebQueryWizardPage, WebTaskNewPage, WebTaskWizard to see what can be generalized",
    "(In reply to comment #22)\n\u003e -- AbstractRepositoryConnector.openEditQueryDialog() method should be replaced\n\u003e with getEditQueryWizard()\n\nI have opened bug 149921 to discuss changes to the query wizard api.\n",
    "Mik, I guess we can close this now.",
    "Closing as fixed, since there is no work left on this."
  ],
  "commentCreationDates": [
    "2006-06-11T01:51:14+02:00",
    "2006-06-11T02:14:45+02:00",
    "2006-06-11T02:16:19+02:00",
    "2006-06-12T17:38:13+02:00",
    "2006-06-14T18:33:49+02:00",
    "2006-06-14T21:00:28+02:00",
    "2006-06-14T21:28:01+02:00",
    "2006-06-14T22:34:48+02:00",
    "2006-06-14T22:37:38+02:00",
    "2006-06-15T00:06:16+02:00",
    "2006-06-15T02:58:40+02:00",
    "2006-06-15T03:34:51+02:00",
    "2006-06-16T01:31:02+02:00",
    "2006-06-16T01:50:21+02:00",
    "2006-06-16T02:06:24+02:00",
    "2006-06-16T20:29:49+02:00",
    "2006-06-16T21:07:12+02:00",
    "2006-06-16T23:13:32+02:00",
    "2006-06-17T01:17:06+02:00",
    "2006-06-17T01:18:16+02:00",
    "2006-06-17T01:30:11+02:00",
    "2006-07-06T04:39:12+02:00",
    "2006-07-06T17:20:49+02:00",
    "2006-07-07T00:48:53+02:00",
    "2006-10-22T18:43:04+02:00",
    "2006-10-22T18:44:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c1\u003e but was:\u003c2\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.failNotEquals",
          "source": "Assert.java:282"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:64"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:201"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:207"
        },
        {
          "method": "org.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest.testRepositoryPersistance",
          "source": "TaskRepositoryManagerTest.java:103"
        }
      ],
      "number": 0,
      "commentIndex": 11,
      "bugId": "146396",
      "date": "2006-06-15T03:34:51+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "blocker"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cWed Dec 31 19:00:00 EST 1969\u003e but was:\u003cWed Jun 14 21:30:38 EDT 2006\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.failNotEquals",
          "source": "Assert.java:282"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:64"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:71"
        },
        {
          "method": "org.eclipse.mylar.tasklist.tests.TaskRepositoryManagerTest.testRepositorySyncTimePersistance2",
          "source": "TaskRepositoryManagerTest.java:195"
        }
      ],
      "number": 1,
      "commentIndex": 11,
      "bugId": "146396",
      "date": "2006-06-15T03:34:51+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "blocker"
    }
  ],
  "groupId": "146396",
  "bugId": "146396",
  "date": "2006-06-11T01:51:14+02:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "blocker"
}