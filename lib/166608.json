{
  "comments": [
    "Current implementation of task list is processing requests to save task list synchronously. Since those requests can come in hundreds and often come from the UI thread it makes UI unresponsive. I think task list should be saved asynchronously to not slowdown the UI.",
    "Created an attachment (id\u003d54948)\nproposed patch\n\nThis patch shown significant improvement in UI responsiveness and also reducing number of actual saves of task list data when those comes as a result of group operations.\n\nExtracted from changes suggested in bug 165732.",
    "Created an attachment (id\u003d54949)\nmylar/context/zip\n\n",
    "Just tried to apply, but this makes AllTasksTests fail, probably due to the asynchronous save.  Consider adding a flag that forces synchronous save for the purpose of the tests?  Also note that there is a stray System.err.println in ther ethat you\u0027ll notice when running tests.\n\nOne more thing: the web connector\u0027s GlassFish test sesm sto regularly fail for me.\n\n",
    "Created an attachment (id\u003d54952)\nproposed improved patch\n\nHere it is, big patch again.\n\nThis time tasks tests are passing. I\u0027ve changed TaskListManager.saveTaskList() to delegate to TaskListSaveManager and force save (it also wait when background save completed) it alowed to remove all other calls to TaskListSaveManager.saveTaskList() leading to a better api. As before group actions are rocket fast and don\u0027t block UI. Though task list is flickering, but that is a separate issue.\n\nPlease fill a bug report about failing test you found. ;-P",
    "Created an attachment (id\u003d54953)\nmylar/context/zip\n\n",
    "Looks like the following method was missing in TaskListSaveManager.  Just added it.  Patch reviewed and applied, very nice contribution.\n\n\tpublic void saveTaskList(boolean saveContext) {\n\t\tsaveTaskList(saveContext, false);\n\t}\n\t\nNote that I also made the following little change, our convention is to put \"internal\" as the first part of the name and avoid package accessibility unless needed:\n\n\tprivate void internalSaveTaskList() {",
    "Created an attachment (id\u003d55017)\nmylar/context/zip\n\n",
    "(In reply to comment #6)\n\u003e Looks like the following method was missing in TaskListSaveManager.  \n\nIt didn\u0027t seem like it was actually needed/used anywhere, so I skipped it.\n\nGlad you managed to find time for this. Thanks a lot. \n\nPS: Now all the UI performance issues we have will be much more verbose. ;-)",
    " (In reply to comment #8)\n\u003e PS: Now all the UI performance issues we have will be much more verbose. ;-)\n\nWhat do you mean \"more verbose\"?\n",
    "(In reply to comment #9)\n\u003e What do you mean \"more verbose\"?\n\nSay user select 30 issues and schedule them or mark as read. Before this patch, saving of the task list was taking about 2 seconds per task, so whole workbench was frozen for about a minute. With this patch actions are applied momentarily and you\u0027ll see a lots of flickering in the Task List, but workbench is responsive...",
    "Mik, the following method in TasksUiPlugin class:\n\n\tpublic void setDataDirectory(String newPath) {\n\t\tgetTaskListSaveManager().saveTaskList(true);\n\t\tContextCorePlugin.getContextManager().saveActivityHistoryContext();\n\t\tgetPreferenceStore().setValue(MylarPreferenceContstants.PREF_DATA_DIR, newPath);\n\t\tContextCorePlugin.getDefault().getContextStore().notifyContextStoreMoved();\n\t}\n\nshould use getTaskListManager().saveTaskList(); and not getTaskListSaveManager().saveTaskList(true); as it supposed to be in my patch.\n\nMy idea was to replace all calls to TaskListSaveManager.saveTaskList(true) with TaskListManager.saveTaskList(). So, save manager only called trough task list manager. Then you could remove accessor for save manager from the task UI plugin.",
    "Changes made.  Had to add a wrapper for copyDataDirContentsTo() and modify the background save test, but now the accessor on TasksUiPlugin is gone.",
    "Created an attachment (id\u003d55056)\nmylar/context/zip\n\n",
    "Either these or the patch changes are now causing the following failure, investigating since the data directory change is very sensitive.  \n\nRob: please take not that the directory changing has be be verified carefully in the manual tests.\n\njunit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat junit.framework.Assert.assertNotNull(Assert.java:217)\n\tat junit.framework.Assert.assertNotNull(Assert.java:210)\n\tat org.eclipse.mylar.tests.integration.ChangeDataDirTest.testTaskMove(ChangeDataDirTest.java:110)\n\n",
    "There is a race condition in the synchronous saving since this fails only intermittently.  Investigating further.",
    "This patch has broken task data directory move functionality.  Since this would be a very bad regression, and there have been too many chagnes sine to back out, this is now on top of my list so I\u0027m investigating.",
    "(In reply to comment #16)\n\u003e This patch has broken task data directory move functionality.  Since this would\n\u003e be a very bad regression, and there have been too many chagnes sine to back\n\u003e out, this is now on top of my list so I\u0027m investigating.\n\nMik, internalSaveTaskList() should be made synchronized because it is called from sync and from asynch savers.",
    "Just made that change but it doesn\u0027t resolve it.  Please synch with the latest and run AllTests to verify that you see the failure.",
    "We may still have a related failure with a JIRA test that I saw but could not reproduce again, but core problems solved now.",
    "Created an attachment (id\u003d55097)\nmylar/context/zip\n\n",
    "*** Bug 166560 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2006-12-03T01:39:38+01:00",
    "2006-12-03T01:46:31+01:00",
    "2006-12-03T01:46:33+01:00",
    "2006-12-03T02:06:25+01:00",
    "2006-12-03T05:57:26+01:00",
    "2006-12-03T05:58:15+01:00",
    "2006-12-05T04:11:32+01:00",
    "2006-12-05T04:11:35+01:00",
    "2006-12-05T04:41:22+01:00",
    "2006-12-05T04:46:02+01:00",
    "2006-12-05T04:57:36+01:00",
    "2006-12-05T05:16:28+01:00",
    "2006-12-05T17:33:19+01:00",
    "2006-12-05T17:33:27+01:00",
    "2006-12-06T00:32:17+01:00",
    "2006-12-06T00:36:37+01:00",
    "2006-12-06T00:58:20+01:00",
    "2006-12-06T01:00:59+01:00",
    "2006-12-06T01:10:06+01:00",
    "2006-12-06T02:57:08+01:00",
    "2006-12-06T02:57:11+01:00",
    "2006-12-06T05:42:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.assertTrue",
          "source": "Assert.java:20"
        },
        {
          "method": "junit.framework.Assert.assertNotNull",
          "source": "Assert.java:217"
        },
        {
          "method": "junit.framework.Assert.assertNotNull",
          "source": "Assert.java:210"
        },
        {
          "method": "org.eclipse.mylar.tests.integration.ChangeDataDirTest.testTaskMove",
          "source": "ChangeDataDirTest.java:110"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "166608",
      "date": "2006-12-06T00:32:17+01:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "major"
    }
  ],
  "groupId": "166608",
  "bugId": "166608",
  "date": "2006-12-03T01:39:38+01:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "major"
}