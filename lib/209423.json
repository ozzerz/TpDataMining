{
  "comments": [
    "This bug is related to bug 207178. In my plugin code, I call FileServiceSubSystem.listMultiple with the parameters set to:\n\nparents \u003d {/home/testid, /home/testid, /home/testid}\nfileNameFilters \u003d {test.c, test.hpp, test.mak}\n...\n\n\n. It throws an NPE:\n\njava.lang.NullPointerException\n\tat org.eclipse.rse.subsystems.files.core.servicesubsystem.AbstractRemoteFile.\u003cinit\u003e(AbstractRemoteFile.java:42)\n\tat org.eclipse.rse.internal.subsystems.files.dstore.DStoreFile.\u003cinit\u003e(DStoreFile.java:178)\n\tat org.eclipse.rse.internal.subsystems.files.dstore.DStoreFileAdapter.convertToRemoteFiles(DStoreFileAdapter.java:68)\n\tat org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.listMultiple(FileServiceSubSystem.java:388)",
    "The problem was that the DataElement representing a filter string was not using a unique id, and as a consequence, when multiple filter strings were being used, we ended up reusing the last filter DataElement.  This is fixed now.",
    "I still see the same error. From the quick investigation I did, the problem seems to be in:\n\nDataElement deObj \u003d getElementFor(remoteParents[i]);\n\tif (deObj \u003d\u003d null)\n        {\n\t    DataElement universaltemp \u003d getMinerElement();\n\t    deObj \u003d ds.createObject(universaltemp, IUniversalDataStoreConstants.UNIVERSAL_FILTER_DESCRIPTOR, remoteParents[i], remoteParents[i], \"\", false); //$NON-NLS-1$\n\t}\n\n\u0027deObj\u0027 always retruns the same element since the parents are the same in my scenario.\n",
    "I\u0027m not able to reproduce this.  I think I\u0027ve got the same scenario here and you - here\u0027s the code I\u0027m using to test this:\n\n\n                      IRemoteFile[] parents \u003d new IRemoteFile[3];\n\n\t\t\ttry\n\t\t\t{\t\n\t\t\t\tparents[0] \u003d ss.getRemoteFileObject(\"/home/dmcknigh/examples/fetchmail\", monitor);\n\t\t\t\tparents[1] \u003d parents[0];\n\t\t\t\tparents[2] \u003d parents[0];\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tString[] filters \u003d new String[3];\n\t\t\tfilters[0] \u003d \"odmr.c\";\n\t\t\tfilters[1] \u003d \"strstr.c\";\n\t\t\tfilters[2] \u003d \"ntlm.h\";\n\t\t\t\n\t\t\tint[] types \u003d new int[3];\n\t\t\ttypes[0] \u003d IFileServiceConstants.FILE_TYPE_FILES;\n\t\t\ttypes[1] \u003d IFileServiceConstants.FILE_TYPE_FILES;\n\t\t\ttypes[2] \u003d IFileServiceConstants.FILE_TYPE_FILES;\n\t\t\t\n\t\t\t\n\t\t\t// query folders\n\t\t\tIRemoteFile[] results \u003d null;\n\t\t\ttry\n\t\t\t{\t\t\n\t\t\t\tresults \u003d ss.listMultiple(parents, filters, types, monitor);\n\t\t\t}\n\t\t\tcatch (Exception e){\n                               ...\n\t\t\t}\n\nIs there something I\u0027m missing?\n\n",
    "Dave,\n\nInterestingly, the test code snippet that you provided throws that NullPointerException for me. Also, just from some of the investigation (see my last comment), it seems that the NPE SHOULD be thrown.\n\nBy the way, I forgot to point out that the problem code that I listed in comment 2 is in the DStoreFileService.fetchMulti() method.",
    "(In reply to comment #4)\n\u003e Dave,\n\u003e Interestingly, the test code snippet that you provided throws that\n\u003e NullPointerException for me. Also, just from some of the investigation (see my\n\u003e last comment), it seems that the NPE SHOULD be thrown.\n\u003e By the way, I forgot to point out that the problem code that I listed in\n\u003e comment 2 is in the DStoreFileService.fetchMulti() method.\n\nI just went through the scenario again with the debugger but I don\u0027t hit a NPE (and I\u0027m not sure why it would).  In the section of code you site, the array of DataElements ends up being an array of the same 3 elements, which should still be okay.  We send down 3 queries to remote side with the same subject for each one.  I\u0027m doing this via Junit so maybe there\u0027s other factors that aren\u0027t being accounted for when I\u0027m trying it.\n",
    "Dave,\n\nOnce you send the queries to the remote side with the SAME subject, you perform:\n\n\t\t// wait for each command to complete\n\t\tfor (int i \u003d 0; i \u003c statuses.size() \u0026\u0026 !monitor.isCanceled(); i++)\n\t\t{\n\t\t    DataElement status \u003d (DataElement)statuses.get(i);\n\t\t    DataElement deObj \u003d subjects[i];\n\t\t    \n\t\t    try\n\t\t    {\n\t\t    \tsmon.waitForUpdate(status, monitor);\t\t \t\t    \n\t\t    \t\n\t\t\t    if (!monitor.isCanceled() \u0026\u0026 smon.determineStatusDone(status))\n\t\t\t    {\n\t\t\t    \tList nested \u003d deObj.getNestedData();\n\t\t\t    \tif (nested !\u003d null)\n\t\t\t    \t{\n\t\t\t    \t\tconsolidatedResults.add(nested.toArray(new DataElement[nested.size()]));\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    }\n\t\t\t}\n\t\t    catch (InterruptedException e)\n\t\t    {\t\t\t\t\n\t\t    \t// cancel monitor if it\u0027s still not canceled\n\t\t    \tif (monitor !\u003d null \u0026\u0026 !monitor.isCanceled())\n\t\t    \t{\n\t\t    \t\tmonitor.setCanceled(true);\n\t\t    \t}\n\t\t\t\n\t\t\t//InterruptedException is used to report user cancellation, so no need to log\n\t\t\t//This should be reviewed (use OperationCanceledException) with bug #190750\n\t\t    }\t\n\t\t}\n\nSince \u0027deObj\u0027 is the same for all three, the \u0027deObj.getNestedData()\u0027 call will return just one of the three files. An I missing something here? Does getNestedData() concatenate all three results?\n",
    "\n\u003e Since \u0027deObj\u0027 is the same for all three, the \u0027deObj.getNestedData()\u0027 call will\n\u003e return just one of the three files. An I missing something here? Does\n\u003e getNestedData() concatenate all three results?\n\nI would expect that deObj.getNestedData() would concatenate all three results since they\u0027re all acting on the same subject.  But it just occurred to me that there was a fix the other day that you probably don\u0027t have on the server that would have deleted previous DataElements for files that didn\u0027t match a filter - it\u0027s fixed now so that those elements are only deleted if they actually don\u0027t exist anymore.  Try updating dstore_miners.jar.\n",
    "Dave,\n\nThat was it. Thanks!"
  ],
  "commentCreationDates": [
    "2007-11-11T01:45:12+01:00",
    "2007-11-12T17:16:33+01:00",
    "2007-11-12T23:09:10+01:00",
    "2007-11-12T23:35:34+01:00",
    "2007-11-13T01:15:30+01:00",
    "2007-11-13T02:11:41+01:00",
    "2007-11-13T02:29:03+01:00",
    "2007-11-13T02:47:06+01:00",
    "2007-11-13T03:09:10+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.rse.subsystems.files.core.servicesubsystem.AbstractRemoteFile.\u003cinit\u003e",
          "source": "AbstractRemoteFile.java:42"
        },
        {
          "method": "org.eclipse.rse.internal.subsystems.files.dstore.DStoreFile.\u003cinit\u003e",
          "source": "DStoreFile.java:178"
        },
        {
          "method": "org.eclipse.rse.internal.subsystems.files.dstore.DStoreFileAdapter.convertToRemoteFiles",
          "source": "DStoreFileAdapter.java:68"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.listMultiple",
          "source": "FileServiceSubSystem.java:388"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "209423",
      "date": "2007-11-11T01:45:12+01:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    }
  ],
  "groupId": "209423",
  "bugId": "209423",
  "date": "2007-11-11T01:45:12+01:00",
  "product": "Target Management",
  "component": "RSE",
  "severity": "normal"
}