{
  "comments": [
    "Build ID:  I20070503-1400\n\nSteps To Reproduce:\n1.Create a plugin project \"myPlugTest\" in a specific folder like \"d:\\myWorkspace\\@TEST\"\n2.define a configuration to launch an osgi framework and select the plugin \"myPlugTest\"\n3.The osgi framework runs but the plugin \"myPlugTest\" is not installed\n\n\nMore information:\nThe plugin \"myPlugTest\" is not installed in the osgi framework because the list of bundles in the property \"osgi.bundles\" in the \"config.ini\" file contains an id with two \"@\" caracters.\n\nIn this case, the exception \"NumberFormatException\" is thrown because the \"EclipseStarter\" tries to find the load level just after the first \"@\" caracter.\n\n!ENTRY org.eclipse.osgi 4 0 2007-05-11 09:17:37.937\n!MESSAGE Startup error\n!STACK 1\njava.lang.NumberFormatException: For input string: \"TEST@start\"\nat java.lang.NumberFormatException.forInputString(Unknown Source)\nat java.lang.Integer.parseInt(Unknown Source)\nat java.lang.Integer.parseInt(Unknown Source)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.getInitialBundles(EclipseStarter.java:661)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.loadBasicBundles(EclipseStarter.java:608)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:303)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:172)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nat java.lang.reflect.Method.invoke(Unknown Source)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:497)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:436)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1162)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1137)",
    "probably should look for the lastIndexOf @ here.  Also likely need to be more robust incase the file name has a \u0027@\u0027 but the bundle is not marked to be started or have a start-level assigned.",
    "I seem to recall that we are processing @ in a particular way (@default, @none). Tom, check the code that instantiates the Location objects.",
    "This is not related to the osgi.*.area location properties that process @noDefault, @user.home etc.\n\nThis is about the osgi.bundles property.  When launching with PDE the PDE launcher sets the osgi.bundles property to include paths to the project folders.  For example:\n\nosgi.bundles \u003d reference:file://myworkspace/org.eclipse.equinox.common@2:start\n\nThe issue is when the workspace folder has a \u0027@\u0027 char in it like this:\n\nosgi.bundles \u003d reference:file://myworkspace/my@project@3:start\n\nCurrent EclipseStarter uses the first instance of \u0027@\u0027 as the delimiter which is incorrect in this case.",
    "Chris, can you take a look at this.  EclipseStarter should probably be using the lastIndexof(\u0027@\u0027) instead of indexOf(\u0027@\u0027) in getInitialBundles.\n\nMake sure this works properly with PDE configurations.\n",
    "*** Bug 199864 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d76392)\norg.eclipse.osgi.patch\n\nchanged to use lastIndexOf(...)\n\nDidn\u0027t break PDE from my tests. I\u0027m cc\u0027ng Brian for his awareness as he\u0027s a master of breaking the launcher :)",
    "Created an attachment (id\u003d76393)\nmylyn/context/zip\n\n",
    "Brian, for your awareness. We have people that love using \"@\" in folder names ;)",
    "should consider for 3.4M2",
    "Thanks Chris.  I released the patch to HEAD, but then I realized this does not fix the original issue from comment 0.  If you create a project and place it in a folder that has a \u0027@\u0027 then it will still fail with the OSGi framework launcher in some cases.  For example, if you set the bundle to *not* be started and to use the default startlevel and the project is located in \"d:\\myWorkspace\\@TEST\".  The code will find the \u0027@\u0027 and will try to parse \"TEST\" as if it specified the start/start-level options.  See comment 1.",
    "Created an attachment (id\u003d76475)\norg.eclipse.osgi.patch\n\nHere is the updated patch. The strategy way changed to catch a NumberFormatException if we had problem parsing out the start level information. This will successfully let people work with bundles and workspaces with the \"@\" in it. However, we will still have an issue if someone decides to be awesome and name their project \"@start\" :P This is such a minor case that we will ignore it.",
    "Created an attachment (id\u003d76476)\nmylyn/context/zip\n\n",
    "Latest patch released to HEAD.  Thanks Chris.",
    "*** Bug 204815 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2007-05-21T15:21:13+02:00",
    "2007-05-21T16:12:00+02:00",
    "2007-05-21T16:24:02+02:00",
    "2007-05-21T17:01:09+02:00",
    "2007-07-31T22:29:22+02:00",
    "2007-08-17T17:16:19+02:00",
    "2007-08-19T20:07:15+02:00",
    "2007-08-19T20:07:17+02:00",
    "2007-08-19T20:07:49+02:00",
    "2007-08-19T20:14:24+02:00",
    "2007-08-20T16:51:24+02:00",
    "2007-08-20T20:17:32+02:00",
    "2007-08-20T20:17:37+02:00",
    "2007-09-11T19:11:27+02:00",
    "2007-09-27T16:40:18+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NumberFormatException",
      "message": "For input string: \"TEST@start\"",
      "elements": [
        {
          "method": "java.lang.NumberFormatException.forInputString",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.Integer.parseInt",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.Integer.parseInt",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.getInitialBundles",
          "source": "EclipseStarter.java:661"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.loadBasicBundles",
          "source": "EclipseStarter.java:608"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.startup",
          "source": "EclipseStarter.java:303"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:172"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:497"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:436"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1162"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1137"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "188089",
      "date": "2007-05-21T15:21:13+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "188089",
  "bugId": "188089",
  "date": "2007-05-21T15:21:13+02:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}