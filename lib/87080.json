{
  "comments": [
    "3.1M5a\nwhen analyzing JLex, I get:\n(will attach the file)\n\nCaused by: java.lang.NullPointerException\n\tat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getElementVariable(InferTypeArgumentsTCModel.java:518)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.doVisitMethodInvocationArguments(InferTypeArgumentsConstraintCreator.java:401)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.endVisit(InferTypeArgumentsConstraintCreator.java:307)\n\tat org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat\norg.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:143)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:189)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:228)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:503)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:486)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:291)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST(InferTypeArgumentsRefactoring.java:137)\n\tat\norg.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:641)\n\tat\norg.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:436)\n\tat org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:651)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions(InferTypeArgumentsRefactoring.java:132)\n\tat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)\n\tat\norg.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:114)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1702)\n\tat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:111)",
    "Created an attachment (id\u003d18439)\nJLEX\n\nyou may want to check the licence before adding this file as a test case.\nProbably better to distill the problem to a separate file.",
    "ok, here\u0027s a test case for you - has the same bug (not from JLex so feel free to\nadd to your suite).\n\npublic abstract class ClassClassTest {\n\tClassClassTest newOne() {\n        try {\n            return (ClassClassTest)getClass().newInstance();\n        } catch(InstantiationException ie) {\n            return null;\n        } catch(IllegalAccessException iae) {\n            return null;\n        }\n    }\n\n}\n",
    "or even this: \npublic abstract class ClassClassTest {\n  void doNothing() throws Exception {\n     getClass().newInstance();\n  }\n}",
    "changed summary (from: infer type args: NPE on analyzing Jlex[refactoring]\n[infer type arguments]) to avoid confusion",
    "Moving Milestone.",
    "Thanks for the test case. Fixed in HEAD."
  ],
  "commentCreationDates": [
    "2005-03-03T15:46:04+01:00",
    "2005-03-03T15:47:54+01:00",
    "2005-03-16T19:05:56+01:00",
    "2005-03-16T19:08:11+01:00",
    "2005-03-22T19:39:18+01:00",
    "2005-03-29T14:49:47+02:00",
    "2005-05-04T09:45:16+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getElementVariable",
          "source": "InferTypeArgumentsTCModel.java:518"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.doVisitMethodInvocationArguments",
          "source": "InferTypeArgumentsConstraintCreator.java:401"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.endVisit",
          "source": "InferTypeArgumentsConstraintCreator.java:307"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodInvocation.accept0",
          "source": "MethodInvocation.java:247"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ExpressionStatement.accept0",
          "source": "ExpressionStatement.java:143"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:135"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.IfStatement.accept0",
          "source": "IfStatement.java:189"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:135"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ForStatement.accept0",
          "source": "ForStatement.java:228"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:135"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
          "source": "MethodDeclaration.java:503"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:486"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:291"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST",
          "source": "InferTypeArgumentsRefactoring.java:137"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:641"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:436"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createASTs",
          "source": "ASTParser.java:651"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions",
          "source": "InferTypeArgumentsRefactoring.java:132"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:84"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:114"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1702"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:86"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:111"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "87080",
      "date": "2005-03-03T15:46:04+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "87080",
  "bugId": "87080",
  "date": "2005-03-03T15:46:04+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}