{
  "comments": [
    "On Linux there appears to be a problem whereby Eclipse incorrectly identifies the cvs files used to store the structure and changes of a cvs project as actual source code files.\n\ne.g. \n\n1) Start Eclipse with a clean workspace.\n2) Create an empty Java project with /src and /bin subdirectories.\n3) Connect to a CVS server and checkout some code into the /src directory of your project.\n4) Shutdown Eclipse.\n5) Restart Eclipse.\n6) Eclipse now shows all the hidden cvs files and directories that are used to save the cvs structure as part of your project. \n\nI\u0027ve also seen this problem occur under an earlier version of Eclipse when you use the refresh button of the package explorer view. (The extra files appear under all views / perspectives though - e.g. team synchronizing.)\n\nOS: IBM Open Client v1.0 PR (Based on RHEL 4)\nMachine: Pentium IV T4p laptop\n\nEclipse \nVersion: 3.1.0\nBuild id: I20050627-1435",
    "We didn;t have time to address this in 3.2.",
    "I have just had this problem again while refreshing my workspace. As I run backups on my machine I got hold of my latest backup and tried copying sections of the workspace back until to see if I could get the problem to disappear. I thought the problem might be in the /.metadata/.plugins directory so I tried copying groups of plugin data directories across. I found that when I copied over a group of three plugin data directories:\n\norg.eclipse.compare\norg.eclipse.core.resources\norg.eclipse.core.runtime\n\nthe Java and CVS Synchronize views both returned to their previous status, without the cvs directories being visible. Looking in the org.eclipse.core.resources directory, there is a subdirectory with a file called .syncinfo, I don\u0027t know if that has anything to do with it? Anyway, maybe this extra info will help to fix the problem.\n\nAlso, I\u0027ve realised that when I raised this bug I didn\u0027t actually explain the impact of the problem. In my original text I\u0027ve made it sound like it is just a visual annoyance seeing the cvs directories, but it actually stops you from being able to synchronize with your repository, as when you try to do so, you get an error saying something like \"a file called projectname/cvs already exists\". This means you either have to try and patch up your Eclipse workspace, or take a copy of your files, check everything out from CVS again, then replace those files with the newer versions.\n\nOS: IBM OpenClient v1.2\nEclipse Version: 3.2.0\nBuild id: M20060629-1905",
    "I am not able to reproduce the problem with the steps provided. The team-private marker on resources is stored in the meta-data of the org.eclipse.core.resources plug-in. There are several ways I can think of that may lead to the problem you are seeing:\n\n1) The CVS directories are created externally and, when the refresh occurs, the directory is noticed by a view before the CVS plug-in can mark it as team-private. This could be the cause of what you saw in comment 2. If this was the problem, you can correct it by first ensuring that CVS is loaded (by opening the Repo view for instance) and then restarting Eclipse.\n\n2) The resources meta-data is lost. If this were the case, there should be an accompanying error in the Error log file. Are there any errors in your log that look related (they would have at least some classes from the org.eclipse.core.resources plug-in)?\n",
    "I\u0027m still getting this problem when I hit refresh. The error in my .log is:\n\n!MESSAGE Errors saving CVS synchronization information to disk. Please fix the problems listed below and then update the affected resources from the CVS repository.\n!SUBENTRY 2 org.eclipse.core.resources 4 272 2007-01-31 00:50:10.673\n!MESSAGE A resource already exists on disk /shared/eclipse_testing2/stuff2/Reflections/CVS.\n!STACK 1\norg.eclipse.core.internal.resources.ResourceException: A resource already exists on disk /shared/eclipse_testing2/stuff2/Reflections/CVS.\n\tat org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:45)\n\tat org.eclipse.core.internal.resources.Folder.create(Folder.java:88)\n\tat org.eclipse.team.internal.ccvs.core.util.SyncFileWriter$1.run(SyncFileWriter.java:439)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n\tat org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.createCVSSubdirectory(SyncFileWriter.java:435)\n\tat org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.writeAllResourceSync(SyncFileWriter.java:148)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.commitCache(EclipseSynchronizer.java:1013)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer$1.run(EclipseSynchronizer.java:517)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.flush(EclipseSynchronizer.java:515)\n\tat org.eclipse.team.internal.core.subscribers.BatchingLock$ThreadInfo.flush(BatchingLock.java:174)\n\tat org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock$CVSThreadInfo.flush(ReentrantLock.java:53)\n\tat org.eclipse.team.internal.core.subscribers.BatchingLock$ThreadInfo.popRule(BatchingLock.java:106)\n\tat org.eclipse.team.internal.core.subscribers.BatchingLock.release(BatchingLock.java:301)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endBatching(EclipseSynchronizer.java:499)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1458)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseResource$2.run(EclipseResource.java:260)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n\tat org.eclipse.team.internal.ccvs.core.resources.EclipseResource.run(EclipseResource.java:257)\n\tat org.eclipse.team.internal.ccvs.core.util.BuildCleanupListener.resourceChanged(BuildCleanupListener.java:141)\n\tat org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:280)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:274)\n\tat org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:148)\n\tat org.eclipse.core.internal.resources.Workspace.broadcastBuildEvent(Workspace.java:240)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:146)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:208)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n",
    "Here\u0027s the code snippet where the error comes from:\n\nif (! cvsSubDir.exists()) {\n   cvsSubDir.create(IResource.TEAM_PRIVATE, true /*make local*/, null);\n}\n\nThis is in a workspace runnable which holds a lock on the folder so it should not  a race condition. Hence, it would appear that somehow the folder in question exists on disk but not in the workspace. This could easily be the case if you were using an external CVS client but should not happen with the steps you provided. John, do you have any insight here?\n\nHedley, is there anything special about your project setup? Do you use external tools on the project? Do you use resource links? ",
    "My workspace is stored on the FAT 32 partition that I share between Windows and Linux. I have found that the problem doesn\u0027t seem to occur if I create a workspace on my Linux ext3 filesystem. However, I\u0027d very much like to keep using the FAT32 partition, as, like most users of a dual boot system, I try to store all of my data there so that I can access it from both Windows and Linux.\n\nSo, is it perhaps something to do with the filesystem / file permissions that is causing the problem? I think that a CVS checkout usually tries to set various file permissions on the files it has checked out, doesn\u0027t it?\n\nMy FAT 32 partition is mounted as:\n\n/dev/hda5 on /shared type vfat (rw,uid\u003d500,gid\u003d502,umask\u003d000)\n",
    "Do you share the workspace project between Windows and Linux as well? That is, do you use the same project on disk in two different workspaces, one on Windows and one on Linux)?",
    "Yes, I use the same workspace on Windows and Linux. Although the problem sounds like it to do with trying to use a FAT32 workspace on a Linux machine, correct? (Since the problem occurs when I create a new workspace. i.e. I don\u0027t have to reboot into Windows and use Eclipse from Windows to recreate the problem.) ",
    "I was just wondering if you\u0027d made any progress on this? Is the problem caused by the CVS checkout trying to change the file permissions? Or something else?",
    "No, I haven\u0027t had time to investigate this further and it is unlikely that I will have time to do so in the foreseeable future. One of the main roadblocks is that I do not have access to a setup that is similar to yours. If you are willing to investigate this further than I will offer whatever assistance I can.",
    "I\u0027m happy to collect information from my system or try out a few things if you want. What is it best to start with? Are there some log files that I can send to you? Or is there some kind of config change you think it might be worth trying?",
    "Actually, there really isn\u0027t any tracing that I know of that will help in this situation. One thing I just did is modify the SyncFileWriter to behave better in the case I outlined in comment 5. This change will be available in M6. If you could try that when it becomes available (end of next week) that would be helpful.\n\nI should point out that we have seen similar problems involving network drives. There seems to be some instability in the timestamps that get returned from the file system which causes resources to become out-of-sync and appear as dirty w.r.t CVS. We\u0027ll see if the change I have made helps out and then go from there."
  ],
  "commentCreationDates": [
    "2006-04-07T21:18:42+02:00",
    "2006-05-25T22:32:39+02:00",
    "2007-01-13T03:44:05+01:00",
    "2007-01-15T17:14:57+01:00",
    "2007-01-31T00:57:31+01:00",
    "2007-01-31T13:06:31+01:00",
    "2007-02-06T01:15:58+01:00",
    "2007-02-06T12:59:59+01:00",
    "2007-02-19T19:59:03+01:00",
    "2007-03-13T12:06:43+01:00",
    "2007-03-13T15:21:52+01:00",
    "2007-03-13T16:04:39+01:00",
    "2007-03-13T19:57:48+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "A resource already exists on disk /shared/eclipse_testing2/stuff2/Reflections/CVS.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Folder.assertCreateRequirements",
          "source": "Folder.java:45"
        },
        {
          "method": "org.eclipse.core.internal.resources.Folder.create",
          "source": "Folder.java:88"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.util.SyncFileWriter$1.run",
          "source": "SyncFileWriter.java:439"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1737"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.createCVSSubdirectory",
          "source": "SyncFileWriter.java:435"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.writeAllResourceSync",
          "source": "SyncFileWriter.java:148"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.commitCache",
          "source": "EclipseSynchronizer.java:1013"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer$1.run",
          "source": "EclipseSynchronizer.java:517"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1737"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.flush",
          "source": "EclipseSynchronizer.java:515"
        },
        {
          "method": "org.eclipse.team.internal.core.subscribers.BatchingLock$ThreadInfo.flush",
          "source": "BatchingLock.java:174"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock$CVSThreadInfo.flush",
          "source": "ReentrantLock.java:53"
        },
        {
          "method": "org.eclipse.team.internal.core.subscribers.BatchingLock$ThreadInfo.popRule",
          "source": "BatchingLock.java:106"
        },
        {
          "method": "org.eclipse.team.internal.core.subscribers.BatchingLock.release",
          "source": "BatchingLock.java:301"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.endBatching",
          "source": "EclipseSynchronizer.java:499"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run",
          "source": "EclipseSynchronizer.java:1458"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource$2.run",
          "source": "EclipseResource.java:260"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1737"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.run",
          "source": "EclipseResource.java:257"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.util.BuildCleanupListener.resourceChanged",
          "source": "BuildCleanupListener.java:141"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager$2.run",
          "source": "NotificationManager.java:280"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.notify",
          "source": "NotificationManager.java:274"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.broadcastChanges",
          "source": "NotificationManager.java:148"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastBuildEvent",
          "source": "Workspace.java:240"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:146"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:208"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "135635",
      "date": "2007-01-31T00:57:31+01:00",
      "product": "Platform",
      "component": "CVS",
      "severity": "normal"
    }
  ],
  "groupId": "135635",
  "bugId": "135635",
  "date": "2006-04-07T21:18:42+02:00",
  "product": "Platform",
  "component": "CVS",
  "severity": "normal"
}