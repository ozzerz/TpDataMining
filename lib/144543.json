{
  "comments": [
    "I just updated to the latest CDT (3.1.0.200605290500) and now I get plenty of\nthe following exception during indexing:\n\nI had to truncate the stack trace (due to length restrictions on comments) but\nyou can see it\u0027s a recursive loop.\n\n\neclipse.buildId\u003dI20060505-1306\njava.version\u003d1.5.0_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\nCommand-line arguments:  -os linux -ws gtk -arch x86\n\nError\nTue May 30 11:08:31 PDT 2006\nError\n\njava.lang.StackOverflowError\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.getNames(CPPASTQualifiedName.java:97)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics$LookupData.typesOnly(CPPSemantics.java:197)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics$LookupData.\u003cinit\u003e(CPPSemantics.java:166)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.createLookupData(CPPSemantics.java:768)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding(CPPSemantics.java:608)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding(CPPVisitor.java:164)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.resolveBinding(CPPASTName.java:52)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.getContainingScope(CPPVisitor.java:793)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.getLookupScope(CPPSemantics.java:919)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.lookup(CPPSemantics.java:999)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding(CPPSemantics.java:612)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding(CPPVisitor.java:164)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.resolveBinding(CPPASTName.java:52)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.resolveBinding(CPPASTQualifiedName.java:45)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.processDirectives(CPPSemantics.java:1314)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.lookup(CPPSemantics.java:1061)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding(CPPSemantics.java:612)\n        at\norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding(CPPVisitor.java:164)\n        at",
    "*** Bug 144532 has been marked as a duplicate of this bug. ***",
    "Thanks Lothar. The stack overflows are nasty to debug. Do you have a code sample to help us reproduce it?",
    "I tried to run an eclipse in the debugger to catch the error, but whatever I try I always get Java Debugger Timeout problems and I can not debug the indexer problem. The stack trace also does give no hint about the file the indexer was about to parse. Is there a way to tell the indexer to generate debug log entries about the file it parses? Otherwise I don\u0027t know how to help you finding the problem. It may help to know that we use ACE/TAO in our project and maybe you get the same problems if you try to parse ACE/TAO yourself.\n\nHappy hunting :-)\nLothar",
    "you could also add a configurable stack limit after that you deliberately cancel the parsing and add an error log entry with the filename. That would help to catch future stack overflow errors, too.",
    "What a great idea. The tricky part will be picking where I want to put the check. There are actually a few cases I\u0027ve seen with stack overflows and they all seem to be different.",
    "I can\u0027t seem to find a quick solution to this. I\u0027ll make sure I use ACE/TAO in my testing for CDT 3.1.1.",
    "I briefly tried to reproduce this the other day but was unsuccessful.  I was running the indexer over the ace/tao source though, and not a built/deployed version if that makes a difference.\n\nThe problems with the indexer not adding templates to the index but adding template\u0027s non-template members to the root are quite prevalent here.",
    "I\u0027ll definitely look at adding template information for 3.1.1. Hopefully that\u0027ll make things a lot smooter.",
    "\n\n*** This bug has been marked as a duplicate of 147080 ***"
  ],
  "commentCreationDates": [
    "2006-05-30T22:24:26+02:00",
    "2006-05-30T22:28:55+02:00",
    "2006-05-30T22:29:36+02:00",
    "2006-05-31T00:58:54+02:00",
    "2006-05-31T01:01:31+02:00",
    "2006-06-01T16:45:18+02:00",
    "2006-06-09T18:33:52+02:00",
    "2006-06-09T18:44:53+02:00",
    "2006-06-09T19:35:58+02:00",
    "2006-07-27T22:11:49+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.getNames",
          "source": "CPPASTQualifiedName.java:97"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics$LookupData.typesOnly",
          "source": "CPPSemantics.java:197"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics$LookupData.\u003cinit\u003e",
          "source": "CPPSemantics.java:166"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.createLookupData",
          "source": "CPPSemantics.java:768"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding",
          "source": "CPPSemantics.java:608"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding",
          "source": "CPPVisitor.java:164"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.resolveBinding",
          "source": "CPPASTName.java:52"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.getContainingScope",
          "source": "CPPVisitor.java:793"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.getLookupScope",
          "source": "CPPSemantics.java:919"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.lookup",
          "source": "CPPSemantics.java:999"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding",
          "source": "CPPSemantics.java:612"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding",
          "source": "CPPVisitor.java:164"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.resolveBinding",
          "source": "CPPASTName.java:52"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.resolveBinding",
          "source": "CPPASTQualifiedName.java:45"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.processDirectives",
          "source": "CPPSemantics.java:1314"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.lookup",
          "source": "CPPSemantics.java:1061"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding",
          "source": "CPPSemantics.java:612"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding",
          "source": "CPPVisitor.java:164"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "144543",
      "duplicateId": "147080",
      "date": "2006-05-30T22:24:26+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "major"
    }
  ],
  "groupId": "147080",
  "bugId": "144543",
  "duplicateId": "147080",
  "date": "2006-05-30T22:24:26+02:00",
  "product": "CDT",
  "component": "CDT-parser",
  "severity": "major"
}