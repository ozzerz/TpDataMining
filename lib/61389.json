{
  "comments": [
    "Just tested on the latest EMF 1.1.1 build, EMF_1.1.1_20031120_1149, this \nconcurrentcy problem can be reproduced although it is not easy. Below is part \nof stack trace I got. The typical exception is FeatureNotFoundException.\n\norg.eclipse.emf.ecore.xmi.FeatureNotFoundException: Feature \u0027stateManagement\u0027 \nnot found. (server.xml, 63, 73)\n        at org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature\n(XMLHandler.java(Compiled Code))\n        at org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement\n(XMLHandler.java(Compiled Code))\n        at org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement\n(XMIHandler.java(Compiled Code))\n        at org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement\n(XMLHandler.java(Inlined Compiled Code))\n        at org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement\n(SAXWrapper.java(Compiled Code))\n        at org.apache.xerces.parsers.AbstractSAXParser.startElement\n(AbstractSAXParser.java(Compiled Code))\n        at org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement\n(AbstractXMLDocumentParser.java(Compiled Code))\n        at org.apache.xerces.impl.XMLNamespaceBinder.emptyElement\n(XMLNamespaceBinder.java(Compiled Code))\n        at org.apache.xerces.impl.dtd.XMLDTDValidator.emptyElement\n(XMLDTDValidator.java(Compiled Code))\n        at \norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement\n(XMLDocumentFragmentScannerImpl.java(Compiled C\node))\n        at \norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.\ndispatch(XMLDocumentFragmentScannerIm\npl.java:1456)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument\n(XMLDocumentFragmentScannerImpl.java:333)\n        at org.apache.xerces.parsers.StandardParserConfiguration.parse\n(StandardParserConfiguration.java:525)\n        at org.apache.xerces.parsers.StandardParserConfiguration.parse\n(StandardParserConfiguration.java:581)\n        at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:147)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse\n(AbstractSAXParser.java:1158)\n        at javax.xml.parsers.SAXParser.parse(Unknown Source)\n        at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:76)\n        at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad\n(XMLResourceImpl.java:135)\n        at com.ibm.etools.xmi.helpers.CompatibilityXMIResourceImpl.basicDoLoad\n(CompatibilityXMIResourceImpl.java:159)\n        at com.ibm.etools.xmi.helpers.CompatibilityXMIResourceImpl.doLoad\n(CompatibilityXMIResourceImpl.java:152)\n        at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load\n(ResourceImpl.java:881)\n        at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load\n(ResourceImpl.java:755)\n        at EMFProcessPackageLoadTest.loadFile(EMFProcessPackageLoadTest.java:92)\n        at EMFProcessPackageLoadTest.run(EMFProcessPackageLoadTest.java:73)",
    "Fuhwei,\n\nAs we discussed on the phone, I believe this problem is caused \nEClass.getEAllStructuralFeatures not being thread safe in 1.x, which is fixed in \n2.0.  This code during static initialization:\n\nvoid initialize(EPackage ePackage)\n{\n  for (Iterator i \u003d ePackage.getEClassifiers().iterator(); i.hasNext(); )\n  {\n    EClassifier eClassifier \u003d (EClassifier)i.next();\n    if (eClassifier instanceof EClass)\n    {\n      EClass eClass \u003d (EClass)eClassifier;\n      eClass.getEAllStructuralFeatures();\n      eClass.getEStructuralFeature(\"dummy\");\n    }\n  }\n}\n\nshould ensure that the metadata is completely initialized and that it will be \nsafe for multithreaded read access after that.  It would be best if this \nworkaround could be applied until EMF 2.0 is being used."
  ],
  "commentCreationDates": [
    "2004-05-07T16:24:54+02:00",
    "2004-05-07T20:28:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.emf.ecore.xmi.FeatureNotFoundException",
      "message": "Feature \u0027stateManagement\u0027  not found. (server.xml, 63, 73)",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature",
          "source": "XMLHandler.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement",
          "source": "XMLHandler.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement",
          "source": "XMIHandler.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement",
          "source": "SAXWrapper.java(Compiled Code)"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.startElement",
          "source": "AbstractSAXParser.java(Compiled Code)"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement",
          "source": "AbstractXMLDocumentParser.java(Compiled Code)"
        },
        {
          "method": "org.apache.xerces.impl.XMLNamespaceBinder.emptyElement",
          "source": "XMLNamespaceBinder.java(Compiled Code)"
        },
        {
          "method": "org.apache.xerces.impl.dtd.XMLDTDValidator.emptyElement",
          "source": "XMLDTDValidator.java(Compiled Code)"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement",
          "source": "XMLDocumentFragmentScannerImpl.java(Compiled C ode)"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch",
          "source": "XMLDocumentFragmentScannerIm pl.java:1456"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "XMLDocumentFragmentScannerImpl.java:333"
        },
        {
          "method": "org.apache.xerces.parsers.StandardParserConfiguration.parse",
          "source": "StandardParserConfiguration.java:525"
        },
        {
          "method": "org.apache.xerces.parsers.StandardParserConfiguration.parse",
          "source": "StandardParserConfiguration.java:581"
        },
        {
          "method": "org.apache.xerces.parsers.XMLParser.parse",
          "source": "XMLParser.java:147"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.parse",
          "source": "AbstractSAXParser.java:1158"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load",
          "source": "XMLLoadImpl.java:76"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad",
          "source": "XMLResourceImpl.java:135"
        },
        {
          "method": "com.ibm.etools.xmi.helpers.CompatibilityXMIResourceImpl.basicDoLoad",
          "source": "CompatibilityXMIResourceImpl.java:159"
        },
        {
          "method": "com.ibm.etools.xmi.helpers.CompatibilityXMIResourceImpl.doLoad",
          "source": "CompatibilityXMIResourceImpl.java:152"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:881"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:755"
        },
        {
          "method": "EMFProcessPackageLoadTest.loadFile",
          "source": "EMFProcessPackageLoadTest.java:92"
        },
        {
          "method": "EMFProcessPackageLoadTest.run",
          "source": "EMFProcessPackageLoadTest.java:73"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "61389",
      "date": "2004-05-07T16:24:54+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "critical"
    }
  ],
  "groupId": "61389",
  "bugId": "61389",
  "date": "2004-05-07T16:24:54+02:00",
  "product": "EMF",
  "component": "Core",
  "severity": "critical"
}