{
  "comments": [
    "Build ID: EMF 2.2.1\n\nSeveral of our EMF generated java files contain over a thousand empty lines after the interface or class\u0027 closing brace.  When we re-generate, we get the StackOverflowError below.\n\njava.lang.StackOverflowError\n\tat java.util.regex.Pattern$Slice.match(Pattern.java:3834)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\n\t\u003c\u003c many lines deleted \u003e\u003e\n\n\tat java.util.regex.Pattern$Curly.match0(Pattern.java:4271)\n\tat java.util.regex.Pattern$Curly.match(Pattern.java:4233)\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4606)\n\tat java.util.regex.Pattern$GroupTail.match(Pattern.java:4665)\n\tat java.util.regex.Pattern$Slice.match(Pattern.java:3838)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\tat java.util.regex.Pattern$Branch.match(Pattern.java:4566)\n\tat java.util.regex.Pattern$GroupHead.match(Pattern.java:4606)\n\tat java.util.regex.Pattern$Start.match(Pattern.java:3055)\n\tat java.util.regex.Matcher.search(Matcher.java:1108)\n\tat java.util.regex.Matcher.find(Matcher.java:544)\n\tat org.eclipse.emf.codegen.merge.java.JMerger.getTargetCompilationUnitContents(JMerger.java:150)\n\tat org.eclipse.emf.codegen.ecore.generator.AbstractGeneratorAdapter.generateJava(AbstractGeneratorAdapter.java:638)\n\tat org.eclipse.emf.codegen.ecore.genmodel.generator.GenPackageGeneratorAdapter.generatePackageInterface(GenPackageGeneratorAdapter.java:277)\n\tat org.eclipse.emf.codegen.ecore.genmodel.generator.GenPackageGeneratorAdapter.generateModel(GenPackageGeneratorAdapter.java:167)\n\tat org.eclipse.emf.codegen.ecore.genmodel.generator.GenBaseGeneratorAdapter.doGenerate(GenBaseGeneratorAdapter.java:160)\n\tat org.eclipse.emf.codegen.ecore.generator.AbstractGeneratorAdapter.generate(AbstractGeneratorAdapter.java:180)\n\tat org.eclipse.emf.codegen.ecore.generator.Generator.generate(Generator.java:335)\n\tat org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$8.execute(GenModelActionBarContributor.java:370)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:101)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:113)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\n\n\nThe simplest fix is to have org.eclipse.emf.codegen.merge.java.JMerger#getTargetCompilationUnitContents() trim the compilation unit content string before trying to match the regular expression.\n\nMore information:",
    "I assume you\u0027ve simply stripped these files down and that there is no specific need to fix this in the maintenance stream nor a need to fix this in EMF 2.3.  It just would be nice to handle this case more gracefully.  So I\u0027ve marked this as a trivial problem that we can look at in EMF 2.4.  Let me know if I\u0027ve misunderstood.",
    "It\u0027s trivial once you figure out which files are causing the problem.  When the error occurs, there is no indication of which file was being processed.  I had to patch the method to print out the file names in order to fix it.",
    "John,\n\nWe had the same nasty experience with some of our old internal test cases and should have done what you suggested at that time. :-(  All the bad lines were caused by very old versions (pre-EMF) of the generator that kept adding blank lines after each generation step.  In EMF 2.3, we do a better job collecting the failures and reporting them to the users; I haven\u0027t tested, but I think this would at least help narrow down the file.  Sorry you were bitten.",
    "John,\n\nGiven now much there is to do and how little time we have to do it, I\u0027m just going to ignore this problem since I think only clients who had code generated with very old pre-open source versions of the generator are the only ones ever likely to encounter this.  You\u0027re the only one in the last 5 years.  If I start stripping blank lines at the end, (which I have to do carefully consider all the different line breaking conventions on different OSes) existing clients might start seeing what look like pointless deltas in their code..."
  ],
  "commentCreationDates": [
    "2007-06-14T23:28:21+02:00",
    "2007-06-15T13:58:21+02:00",
    "2007-06-15T16:10:03+02:00",
    "2007-06-15T16:23:06+02:00",
    "2007-09-30T15:20:41+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "java.util.regex.Pattern$Slice.match",
          "source": "Pattern.java:3834"
        },
        {
          "method": "java.util.regex.Pattern$Branch.match",
          "source": "Pattern.java:4566"
        },
        {
          "method": "java.util.regex.Pattern$Branch.match",
          "source": "Pattern.java:4566"
        },
        {
          "method": "java.util.regex.Pattern$Branch.match",
          "source": "Pattern.java:4566"
        },
        {
          "method": "java.util.regex.Pattern$Branch.match",
          "source": "Pattern.java:4566"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "192754",
      "date": "2007-06-14T23:28:21+02:00",
      "product": "EMF",
      "component": "Tools",
      "severity": "trivial"
    }
  ],
  "groupId": "192754",
  "bugId": "192754",
  "date": "2007-06-14T23:28:21+02:00",
  "product": "EMF",
  "component": "Tools",
  "severity": "trivial"
}