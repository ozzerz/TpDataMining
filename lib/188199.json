{
  "comments": [
    "The NullPointerException below can happen for packages which are exported by fragment bundles if the host bundle cannot be resolved.  The issue is the fragments are not correctly detached from the host bundle.  As a result if the host bundle becomes resolved later then the fragment bundles do not correctly attach back to the host bundle.  This causes an inconsistent source for the Exported packages from the fragment bundles.  As a result the inconsistent state can be persisted to disk.  When such a state is read from disk the exporter of the fragment exports is not set resulting in the following NPE.\n\nThis is an issue on 3.2.x and 3.3\n\n\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.getLoaderProxy(BundleLoader.java:240)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.createExportPackageSource(BundleLoader.java:212)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.addImportedPackages(BundleLoader.java:203)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findImportedSource(BundleLoader.java:868)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findResource(BundleLoader.java:470)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findResource(BundleLoader.java:446)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.getResource(DefaultClassLoader.java:119)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.getResource(BundleLoader.java:291)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.getResource(BundleHost.java:257)\n\tat com.ibm.ws.management.descriptor.MBeanDescriptorManager$1.run(MBeanDescriptorManager.java:248)\n\tat java.security.AccessController.doPrivileged(AccessController.java:193)\n\tat com.ibm.ws.security.util.AccessController.doPrivileged(AccessController.java:65)\n\tat com.ibm.ws.management.descriptor.MBeanDescriptorManager.getResourceAsStream(MBeanDescriptorManager.java:246)\n\tat com.ibm.ws.management.descriptor.MBeanDescriptorManager.loadMasterDescriptorFile(MBeanDescriptorManager.java:451)\n\tat com.ibm.ws.management.descriptor.MBeanDescriptorManager.getInstance(MBeanDescriptorManager.java:112)\n\tat com.ibm.ws.management.MBeanFactoryImpl.\u003cinit\u003e(MBeanFactoryImpl.java:100)\n\tat com.ibm.ws.management.AdminServiceImpl.\u003cinit\u003e(AdminServiceImpl.java:175)\n\tat com.ibm.ws.management.component.AdminImpl.initialize(AdminImpl.java:195)",
    "Investigate a fix for 3.3 RC2.",
    "Need jeff\u0027s PMC approval.  I will attach a patch shortly for DJ to review.",
    "Sorry for the spam, forgot to cc Jeff and DJ.",
    "Created an attachment (id\u003d68136)\nsolution and new testcase\n\nThe basic issue is when a host bundle cannot be resolved then the exports from the attached fragment bundles were not being removed from the pool of exported packages available for import.\n\nWhen setting a host bundle to unresolved we should always remove the current packages exported by the host (and attached fragments) then detach all the fragment bundles, finally we should add back the exports from the host only.  In the current code it was possible to only detach all the fragment bundles without removing the exports from host and fragment bundle.  This causes issues if the host is able to resolve later.  At that point the new exports from the fragment bundle are not selected, instead the old ones from the previous resolve are used.  This leaves the resolver in an inconsistent state.  If this state is persisted then a NPE could result because the ExportPackageDescriptions from the fragment bundle will have a null exporter.",
    "Created an attachment (id\u003d68139)\n3.2 patch\n\nPatch backported to 3.2 in case there is a need to fix there.",
    "Need 2 reviewers for RC2.  Pascal please review.",
    "oops, I want pascal to code review, not give PMC approval ;-)",
    "Fixed for 3.3 RC2."
  ],
  "commentCreationDates": [
    "2007-05-22T04:39:24+02:00",
    "2007-05-22T04:41:52+02:00",
    "2007-05-22T17:02:47+02:00",
    "2007-05-22T17:03:28+02:00",
    "2007-05-22T17:11:25+02:00",
    "2007-05-22T17:29:25+02:00",
    "2007-05-22T18:19:51+02:00",
    "2007-05-22T18:53:11+02:00",
    "2007-05-22T19:40:03+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.getLoaderProxy",
          "source": "BundleLoader.java:240"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.createExportPackageSource",
          "source": "BundleLoader.java:212"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.addImportedPackages",
          "source": "BundleLoader.java:203"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findImportedSource",
          "source": "BundleLoader.java:868"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findResource",
          "source": "BundleLoader.java:470"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findResource",
          "source": "BundleLoader.java:446"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.getResource",
          "source": "DefaultClassLoader.java:119"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.getResource",
          "source": "BundleLoader.java:291"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.getResource",
          "source": "BundleHost.java:257"
        },
        {
          "method": "com.ibm.ws.management.descriptor.MBeanDescriptorManager$1.run",
          "source": "MBeanDescriptorManager.java:248"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "AccessController.java:193"
        },
        {
          "method": "com.ibm.ws.security.util.AccessController.doPrivileged",
          "source": "AccessController.java:65"
        },
        {
          "method": "com.ibm.ws.management.descriptor.MBeanDescriptorManager.getResourceAsStream",
          "source": "MBeanDescriptorManager.java:246"
        },
        {
          "method": "com.ibm.ws.management.descriptor.MBeanDescriptorManager.loadMasterDescriptorFile",
          "source": "MBeanDescriptorManager.java:451"
        },
        {
          "method": "com.ibm.ws.management.descriptor.MBeanDescriptorManager.getInstance",
          "source": "MBeanDescriptorManager.java:112"
        },
        {
          "method": "com.ibm.ws.management.MBeanFactoryImpl.\u003cinit\u003e",
          "source": "MBeanFactoryImpl.java:100"
        },
        {
          "method": "com.ibm.ws.management.AdminServiceImpl.\u003cinit\u003e",
          "source": "AdminServiceImpl.java:175"
        },
        {
          "method": "com.ibm.ws.management.component.AdminImpl.initialize",
          "source": "AdminImpl.java:195"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "188199",
      "date": "2007-05-22T04:39:24+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "188199",
  "bugId": "188199",
  "date": "2007-05-22T04:39:24+02:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}