{
  "comments": [
    "If I create an external tool, and use as its arguments \"${file_prompt}\n${file_prompt}\", both prompts appear ok.  However, if I change the arguments to\n\"${string_prompt} ${file_prompt}\", only the string prompt appears regardless of\nwhat action I take in the string_prompt dialog.\n\neclipse 3.0RC1, linux fedora core 2",
    "Oops, never saw the stack trace till now \u003d)  Here it is.\nNote that the external tool _did_ continue to execute even though there was a\nstack trace - this probably should not happen.\n\nError Jun 01, 2004 12:27:28.414 Argument cannot be null\njava.lang.IllegalArgumentException: Argument cannot be null\nat org.eclipse.swt.SWT.error(SWT.java:2677)\nat org.eclipse.swt.SWT.error(SWT.java:2616)\nat org.eclipse.swt.SWT.error(SWT.java:2587)\nat org.eclipse.swt.widgets.Dialog.error(Dialog.java:166)\nat org.eclipse.swt.widgets.Dialog.checkParent(Dialog.java:153)\nat org.eclipse.swt.widgets.Dialog.\u003cinit\u003e(Dialog.java:116)\nat org.eclipse.swt.widgets.FileDialog.\u003cinit\u003e(FileDialog.java:83)\nat org.eclipse.swt.widgets.FileDialog.\u003cinit\u003e(FileDialog.java:56)\nat\norg.eclipse.debug.internal.ui.stringsubstitution.FilePrompt.prompt(FilePrompt.java:27)\nat\norg.eclipse.debug.internal.ui.stringsubstitution.PromptingResolver$1.run(PromptingResolver.java:93)\nat org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:107)\nat org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:33)\nat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)\nat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2489)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2226)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\nat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:324)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\nat org.eclipse.core.launcher.Main.run(Main.java:638)\nat org.eclipse.core.launcher.Main.main(Main.java:622)\n\n",
    "Looks like the file prompt did not open because the active shell was null. The \nproblem does not happen to me on Windows.\n\nJared, does the problem happen to you on Linux?",
    "Assigning for investigation.",
    "For some reason, DebugUIPlugin.getStandardDisplay().getActiveShell() returns null for the \nsecond prompting variable if you have two variables in a row. The exception happens because we \npass null in as the shell for the prompt dialog.\n\nWe could put a null check in to avoid the exception, but that doesn\u0027t solve the problem - the user\u0027s \nvariable still won\u0027t get expanded.\n\nI believe we\u0027re getting burned by a timing problem here. As the first prompt is in the process of \nclosing, the launching thread expands the next prompt variable before the workbench has time to \nupdate the \"active shell\". Since our code is (necessarily) running in the UI thread, there\u0027s no \nchance for the workbench to recover.\n\nNot sure what we can do about this.",
    "Poked around some more and I can actually fix this trivially. All we have to do is call \nDebugUIPlugin.getShell() instead of DebugUIPlugin.getStandardDisplay().getShell(). This returns \nthe shell from the active workbench window instead of the \"active display\".",
    "Created an attachment (id\u003d12429)\norg.eclipse.debug.ui.65051.patch\n\nThis patch adds a getShell() method which tries to get the active display shell\nor the active window shell, whichever isn\u0027t null.\n\nI didn\u0027t add the null check because writing the exception to the log will let\nus know if there are any other cases where the shell can be null.",
    "Without this patch, users can\u0027t specify two prompting variables in a row. Not a critical problem for \nmost people, but if you really need to do so, this bug will be a pisser. Consider for RC3?",
    "I\u0027m trying to understand why the fix works. What\u0027s the difference between the \ndisplay\u0027s shell and the active workbench window\u0027s shell?",
    "I believe it\u0027s just a timing issue. The \"active display\" is probably still the display from the dialog \nthat\u0027s being closed. The thing is that we have a thread in the background (the launching thread) \nprocessing as quick as it can and it just gets us back to the UI code before the \"active display\" is \nset to the workbench window\u0027s display.",
    "I\u0027m OK with the fix. It basically is the same code, but it tries the active \nworkbench window in the case that the display\u0027s shell is null. Erich, do you \napprove?",
    "+1 for RC3",
    "+1 for RC3",
    "released patch, Jared please verify.",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-06-01T18:35:22+02:00",
    "2004-06-01T18:40:07+02:00",
    "2004-06-09T17:31:21+02:00",
    "2004-06-11T16:50:14+02:00",
    "2004-06-17T22:36:30+02:00",
    "2004-06-17T22:41:56+02:00",
    "2004-06-17T22:52:03+02:00",
    "2004-06-17T22:54:01+02:00",
    "2004-06-17T23:29:16+02:00",
    "2004-06-17T23:35:39+02:00",
    "2004-06-17T23:37:40+02:00",
    "2004-06-17T23:54:01+02:00",
    "2004-06-17T23:54:52+02:00",
    "2004-06-17T23:56:34+02:00",
    "2004-06-18T01:05:58+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument cannot be null",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2677"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2616"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2587"
        },
        {
          "method": "org.eclipse.swt.widgets.Dialog.error",
          "source": "Dialog.java:166"
        },
        {
          "method": "org.eclipse.swt.widgets.Dialog.checkParent",
          "source": "Dialog.java:153"
        },
        {
          "method": "org.eclipse.swt.widgets.Dialog.\u003cinit\u003e",
          "source": "Dialog.java:116"
        },
        {
          "method": "org.eclipse.swt.widgets.FileDialog.\u003cinit\u003e",
          "source": "FileDialog.java:83"
        },
        {
          "method": "org.eclipse.swt.widgets.FileDialog.\u003cinit\u003e",
          "source": "FileDialog.java:56"
        },
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.FilePrompt.prompt",
          "source": "FilePrompt.java:27"
        },
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.PromptingResolver$1.run",
          "source": "PromptingResolver.java:93"
        },
        {
          "method": "org.eclipse.ui.internal.UILockListener.doPendingWork",
          "source": "UILockListener.java:107"
        },
        {
          "method": "org.eclipse.ui.internal.UISynchronizer$1.run",
          "source": "UISynchronizer.java:33"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:106"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:2489"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2226"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1363"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1334"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:253"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:334"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:128"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:638"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:622"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "65051",
      "date": "2004-06-01T18:40:07+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "65051",
  "bugId": "65051",
  "date": "2004-06-01T18:35:22+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}