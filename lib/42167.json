{
  "comments": [
    "see attachements",
    "Created an attachment (id\u003d5875)\nfail to load in swt\n",
    "Created an attachment (id\u003d5876)\n.\n",
    "Created an attachment (id\u003d5877)\n..\n",
    "Created an attachment (id\u003d5878)\n..\n",
    "Created an attachment (id\u003d5879)\nverify has transparency pixel instead of alpha\n",
    "Created an attachment (id\u003d5880)\ntransparent pixel?\n",
    "Verified attachments 5 and 6 use alpha (palette) info and not single \ntransparency index.\nThe other attachments fail to load in SWT.",
    "Created an attachment (id\u003d6051)\ncontain the first 4 attachments resaved with PSP - load in SWT\n",
    "Created an attachment (id\u003d6142)\npng not correctly loaded\n\nAll PNG files with issues were coming from Photoshop. The current workaround is\nto resave them with PSP.\norg.eclipse.swt.SWTException: i/o error\n(java.lang.ArrayIndexOutOfBoundsException)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat org.eclipse.swt.SWTException.\u003cinit\u003e(SWTException.java:73)\n\tat org.eclipse.swt.SWTException.\u003cinit\u003e(SWTException.java:62)\n\tat org.eclipse.swt.SWT.error(SWT.java:2332)\n\tat\norg.eclipse.swt.internal.image.FileFormat.loadFromStream(FileFormat.java:49)\n\tat org.eclipse.swt.internal.image.FileFormat.load(FileFormat.java)\n\tat org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:124)\n\tat org.eclipse.swt.graphics.ImageData.\u003cinit\u003e(ImageData.java:311)\n",
    "after fixing 43394, these PNG still don\u0027t load.\nNot calling checkAdler allows the image to be loaded - but the resulting image \nhas some problems\n\n\norg.eclipse.swt.SWTException: Invalid image\n\tat org.eclipse.swt.SWT.error(SWT.java:2369)\n\tat org.eclipse.swt.SWT.error(SWT.java:2299)\n\tat org.eclipse.swt.internal.image.PngDecodingDataStream.error\n(PngDecodingDataStream.java:104)\n\tat org.eclipse.swt.internal.image.PngDecodingDataStream.checkAdler\n(PngDecodingDataStream.java:133)\n\tat org.eclipse.swt.internal.image.PNGFileFormat.readPixelData\n(PNGFileFormat.java:281)\n\tat org.eclipse.swt.internal.image.PNGFileFormat.readNextChunk\n(PNGFileFormat.java:116)\n\tat org.eclipse.swt.internal.image.PNGFileFormat.loadFromByteStream\n(PNGFileFormat.java:70)\n\tat org.eclipse.swt.internal.image.FileFormat.loadFromStream\n(FileFormat.java:47)\n\tat org.eclipse.swt.internal.image.FileFormat.load(FileFormat.java:75)\n\tat org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:124)\n\tat org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:150)\n\tat org.eclipse.swt.graphics.ImageData.\u003cinit\u003e(ImageData.java:356)\n\tat PR43394.main(PR43394.java:11)\nException in thread \"main\" ",
    "All of these PNGs can now be loaded using new Image(Device, String);\nSee bug 24451 comment 51 for details.\n\nThis is not a fix, but it will most likely be a suitable work-around.\nI will leave this bug open, but I will reduce the priority to P4.\n\nNotes: I did have a quick look to try to fix the bug in our java PNG reader. \nI believe the problem has to do with decoding Fixed Huffman encoded data. \nFor some reason, we are getting 2 consecutive end-of-block markers, and this should not happen. Perhaps we are reading too many (or too few) copy bits.",
    "See this: \n\nhttp://dev.eclipse.org/newslists/news.eclipse.platform.swt/msg28204.html\n\nI use latest stable (3.1.2)."
  ],
  "commentCreationDates": [
    "2003-08-27T20:26:25+02:00",
    "2003-08-27T20:27:27+02:00",
    "2003-08-27T20:27:57+02:00",
    "2003-08-27T20:28:38+02:00",
    "2003-08-27T20:28:55+02:00",
    "2003-08-27T20:29:43+02:00",
    "2003-08-27T20:30:14+02:00",
    "2003-09-09T16:58:17+02:00",
    "2003-09-09T17:08:05+02:00",
    "2003-09-18T15:47:14+02:00",
    "2003-09-25T22:07:16+02:00",
    "2005-12-02T17:34:59+01:00",
    "2006-04-20T18:47:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "i/o error (java.lang.ArrayIndexOutOfBoundsException)",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "org.eclipse.swt.SWTException.\u003cinit\u003e",
          "source": "SWTException.java:73"
        },
        {
          "method": "org.eclipse.swt.SWTException.\u003cinit\u003e",
          "source": "SWTException.java:62"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2332"
        },
        {
          "method": "org.eclipse.swt.internal.image.FileFormat.loadFromStream",
          "source": "FileFormat.java:49"
        },
        {
          "method": "org.eclipse.swt.internal.image.FileFormat.load",
          "source": "FileFormat.java"
        },
        {
          "method": "org.eclipse.swt.graphics.ImageLoader.load",
          "source": "ImageLoader.java:124"
        },
        {
          "method": "org.eclipse.swt.graphics.ImageData.\u003cinit\u003e",
          "source": "ImageData.java:311"
        }
      ],
      "number": 0,
      "commentIndex": 9,
      "bugId": "42167",
      "date": "2003-09-18T15:47:14+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid image",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2369"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2299"
        },
        {
          "method": "org.eclipse.swt.internal.image.PngDecodingDataStream.error",
          "source": "PngDecodingDataStream.java:104"
        },
        {
          "method": "org.eclipse.swt.internal.image.PngDecodingDataStream.checkAdler",
          "source": "PngDecodingDataStream.java:133"
        },
        {
          "method": "org.eclipse.swt.internal.image.PNGFileFormat.readPixelData",
          "source": "PNGFileFormat.java:281"
        },
        {
          "method": "org.eclipse.swt.internal.image.PNGFileFormat.readNextChunk",
          "source": "PNGFileFormat.java:116"
        },
        {
          "method": "org.eclipse.swt.internal.image.PNGFileFormat.loadFromByteStream",
          "source": "PNGFileFormat.java:70"
        },
        {
          "method": "org.eclipse.swt.internal.image.FileFormat.loadFromStream",
          "source": "FileFormat.java:47"
        },
        {
          "method": "org.eclipse.swt.internal.image.FileFormat.load",
          "source": "FileFormat.java:75"
        },
        {
          "method": "org.eclipse.swt.graphics.ImageLoader.load",
          "source": "ImageLoader.java:124"
        },
        {
          "method": "org.eclipse.swt.graphics.ImageLoader.load",
          "source": "ImageLoader.java:150"
        },
        {
          "method": "org.eclipse.swt.graphics.ImageData.\u003cinit\u003e",
          "source": "ImageData.java:356"
        },
        {
          "method": "PR43394.main",
          "source": "PR43394.java:11"
        }
      ],
      "number": 1,
      "commentIndex": 10,
      "bugId": "42167",
      "date": "2003-09-25T22:07:16+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "42167",
  "bugId": "42167",
  "date": "2003-08-27T20:26:25+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}