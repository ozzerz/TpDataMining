{
  "comments": [
    "Opening one of my Jazz workspaces with Eclipse M6 () produces the following stack trace while initializing the Java tooling:\n\njava.lang.ClassCastException: org.eclipse.osgi.internal.resolver.BundleDescriptionImpl\nat java.util.TreeMap.compare(TreeMap.java:1093)\nat java.util.TreeMap.getEntry(TreeMap.java:347)\nat java.util.TreeMap.get(TreeMap.java:265)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getInclusions(RequiredPluginsClasspathContainer.java:301)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getInclusions(RequiredPluginsClasspathContainer.java:295)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addPlugin(RequiredPluginsClasspathContainer.java:273)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addDependency(RequiredPluginsClasspathContainer.java:250)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addSecondaryDependencies(RequiredPluginsClasspathContainer.java:411)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.computePluginEntries(RequiredPluginsClasspathContainer.java:156)\nat org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getClasspathEntries(RequiredPluginsClasspathContainer.java:109)\nat org.eclipse.jdt.internal.core.JavaModelManager.containerPutIfInitializingWithSameEntries(JavaModelManager.java:534)\nat org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:47)\nat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:720)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)\nat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:784)\nat org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:4445)\nat org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:33)\nat org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2147)\nat org.eclipse.jdt.internal.core.JavaModelManager$9.run(JavaModelManager.java:2082)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)\nat org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:2098)\nat org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1479)\nat org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1563)\nat org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2571)\nat org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1878)\nat org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots(DeltaProcessingState.java:202)\nat org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3198)\nat org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:35)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n\nOpening the open type dialog produces the same exception.",
    "Build id is: I20070322-1800\n\nI am using Sun JDK 1.5.0_11",
    "cc Tom because the key in the hashmap is a BundleDescription object.\n",
    "- Is this a regression introduced during M6 ?\n- Is it 100% reproducible or rather rare ?",
    "BundleDescription does not extend the Comparable interface.  Did you create the TreeMap with your own Comparator?  If not then all keys inserted into the map must be of type Comparable.",
    "there is no tree map.  it\u0027s a hashmap.  that\u0027s why I am puzzled.\n\nA BundleDescription is a perfectly fine key for a hashmap.\n\nThis particular line of code (line 301) gets called a million times during an Eclipse session.  If it were a problem, it would have come up for us.\n\nperhaps a JDK bug?  Let\u0027s look at it closer.",
    "sigh...  I hate \"secondary dependencies\"...\n\nA TreeMap is being created in the \u0027secondary dependencies\u0027 path, which is never used in the SDK.  That is why this regression was not encountered.\n\nThis warrants a rebuild though because a CCE will be thrown every time this line gets called for those who do use secondary dependencies.  This line gets called many many times during a session.  As a result, the classpath/tooling will be paralyzed for workspace projects using it.\n\nThe fix is a one liner.  Just create a hashmap instead of a treemap.\n\nI hate \"secondary dependencies\"...  Did I already say that?",
    "Damn my long write up!  I was just going to say the same thing that it was caused by secondary dependencies.  \n\nWe might want to update method signature to make them take HashMap instead of any regular map to prevent someone from making this same mistake in the future.",
    "A JUnit test might also help... (just a crazy thought)"
  ],
  "commentCreationDates": [
    "2007-03-23T19:18:42+01:00",
    "2007-03-23T19:21:50+01:00",
    "2007-03-23T19:24:09+01:00",
    "2007-03-23T19:35:22+01:00",
    "2007-03-23T20:08:58+01:00",
    "2007-03-23T20:14:23+01:00",
    "2007-03-23T20:38:31+01:00",
    "2007-03-23T20:51:39+01:00",
    "2007-03-23T20:56:56+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.osgi.internal.resolver.BundleDescriptionImpl",
      "elements": [
        {
          "method": "java.util.TreeMap.compare",
          "source": "TreeMap.java:1093"
        },
        {
          "method": "java.util.TreeMap.getEntry",
          "source": "TreeMap.java:347"
        },
        {
          "method": "java.util.TreeMap.get",
          "source": "TreeMap.java:265"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getInclusions",
          "source": "RequiredPluginsClasspathContainer.java:301"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getInclusions",
          "source": "RequiredPluginsClasspathContainer.java:295"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addPlugin",
          "source": "RequiredPluginsClasspathContainer.java:273"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addDependency",
          "source": "RequiredPluginsClasspathContainer.java:250"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addSecondaryDependencies",
          "source": "RequiredPluginsClasspathContainer.java:411"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.computePluginEntries",
          "source": "RequiredPluginsClasspathContainer.java:156"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getClasspathEntries",
          "source": "RequiredPluginsClasspathContainer.java:109"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.containerPutIfInitializingWithSameEntries",
          "source": "JavaModelManager.java:534"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation",
          "source": "SetContainerOperation.java:47"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:720"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1797"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:784"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.setClasspathContainer",
          "source": "JavaCore.java:4445"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize",
          "source": "RequiredPluginsInitializer.java:33"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer",
          "source": "JavaModelManager.java:2147"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager$9.run",
          "source": "JavaModelManager.java:2082"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1797"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers",
          "source": "JavaModelManager.java:2098"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer",
          "source": "JavaModelManager.java:1479"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:1563"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.resolveClasspath",
          "source": "JavaProject.java:2571"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1878"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots",
          "source": "DeltaProcessingState.java:202"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.initializeAfterLoad",
          "source": "JavaCore.java:3198"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run",
          "source": "InitializeAfterLoadJob.java:35"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "179093",
      "date": "2007-03-23T19:18:42+01:00",
      "product": "PDE",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "179093",
  "bugId": "179093",
  "date": "2007-03-23T19:18:42+01:00",
  "product": "PDE",
  "component": "UI",
  "severity": "normal"
}