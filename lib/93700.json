{
  "comments": [
    "build N20050503\n\n- opened an editor on a file\n- made some changes in the editor\n- in the sync compare editor, undid some changes to the same file\n  - this prompted whether to save the editor\u0027s changes first, but I chose not to\n- went to close the editor\n- it prompted to save the unsaved changes, and I chose not to\n- it prompted that the file had changed concurrently, and whether to reload, and\nI chose yes\n- got the following\n\n\n\norg.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: \n\tat org.eclipse.jface.util.Assert.isTrue(Assert.java:180)\n\tat org.eclipse.jface.util.Assert.isTrue(Assert.java:165)\n\tat org.eclipse.ui.internal.PartList.removePart(PartList.java:141)\n\tat org.eclipse.ui.internal.WorkbenchPage.partRemoved(WorkbenchPage.java:1334)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditors(WorkbenchPage.java:1158)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:1183)\n\tat org.eclipse.ui.internal.EditorPane.doHide(EditorPane.java:54)\n\tat org.eclipse.ui.internal.PartStack.close(PartStack.java:459)\n\tat org.eclipse.ui.internal.EditorStack.close(EditorStack.java:197)\n\tat org.eclipse.ui.internal.PartStack$1.close(PartStack.java:98)\n\tat\norg.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:81)\n\tat\norg.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent(AbstractTabFolder.java:267)\n\tat\norg.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent(AbstractTabFolder.java:276)\n\tat\norg.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)\n\tat\norg.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$1.closeButtonPressed(DefaultTabFolder.java:63)\n\tat\norg.eclipse.ui.internal.presentations.PaneFolder.notifyCloseListeners(PaneFolder.java:563)\n\tat org.eclipse.ui.internal.presentations.PaneFolder$3.close(PaneFolder.java:190)\n\tat org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:2080)\n\tat org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:291)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2901)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2534)\n\tat org.eclipse.jface.window.Window.runEventLoop(Window.java:803)\n\tat org.eclipse.jface.window.Window.open(Window.java:781)\n\tat org.eclipse.jface.dialogs.MessageDialog.openQuestion(MessageDialog.java:368)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged(AbstractTextEditor.java:3423)\n\tat\norg.eclipse.ui.texteditor.StatusTextEditor.handleEditorInputChanged(StatusTextEditor.java:203)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor.sanityCheckState(AbstractTextEditor.java:3553)\n\tat\norg.eclipse.ui.texteditor.StatusTextEditor.sanityCheckState(StatusTextEditor.java:193)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor.safelySanityCheckState(AbstractTextEditor.java:3531)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.handleActivation(AbstractTextEditor.java:836)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.partActivated(AbstractTextEditor.java:798)\n\tat org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:72)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1031)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:757)\n\tat org.eclipse.ui.internal.PartListenerList.fireEvent(PartListenerList.java:58)\n\tat\norg.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java:70)\n\tat org.eclipse.ui.internal.PartService.firePartActivated(PartService.java:73)\n\tat org.eclipse.ui.internal.PartService.setActivePart(PartService.java:166)\n\tat\norg.eclipse.ui.internal.WWinPartService.updateActivePart(WWinPartService.java:124)\n\tat org.eclipse.ui.internal.WWinPartService.access$0(WWinPartService.java:115)\n\tat\norg.eclipse.ui.internal.WWinPartService$1.partDeactivated(WWinPartService.java:48)\n\tat org.eclipse.ui.internal.PartListenerList2$4.run(PartListenerList2.java:113)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1031)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:757)\n\tat org.eclipse.ui.internal.PartListenerList2.fireEvent(PartListenerList2.java:54)\n\tat\norg.eclipse.ui.internal.PartListenerList2.firePartDeactivated(PartListenerList2.java:111)\n\tat org.eclipse.ui.internal.PartService.firePartDeactivated(PartService.java:116)\n\tat org.eclipse.ui.internal.PartService.setActivePart(PartService.java:160)\n\tat\norg.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged(WorkbenchPagePartList.java:54)\n\tat org.eclipse.ui.internal.PartList.setActivePart(PartList.java:112)\n\tat org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:2721)\n\tat org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:2369)\n\tat org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:246)\n\tat org.eclipse.ui.internal.EditorPane.requestActivation(EditorPane.java:88)\n\tat\norg.eclipse.ui.internal.presentations.PresentablePart.setFocus(PresentablePart.java:137)\n\tat\norg.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:92)\n\tat\norg.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent(AbstractTabFolder.java:267)\n\tat\norg.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent(AbstractTabFolder.java:272)\n\tat\norg.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.handleMouseDown(AbstractTabFolder.java:326)\n\tat\norg.eclipse.ui.internal.presentations.newapi.AbstractTabFolder$3.mouseDown(AbstractTabFolder.java:79)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:132)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2901)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2534)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1572)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:306)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:230)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:345)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:158)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:328)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:272)\n\tat org.eclipse.core.launcher.Main.run(Main.java:964)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)",
    "I was able to reproduce this stack trace as follows:\n\n1. Open two editor stacks.\n2. Give the rightmost editor focus.\n3. Edit the file on the left outside Eclipse (use Notepad or something)\n4. Click the close button for the folder on the left (without first giving it focus)\n\nThere seems to be three problems here:\n1. In general, the workbench page cannot handle being modified while it is in\nthe middle of notifying its listeners of a previous change.\n2. CTabFolder is still firing a close event even though it is still in the\nmiddle of notifying its listeners of a mousedown AND there is a modal child\nshell open. Presumably either scenario should prevent the widget from firing\nuser events.\n3. AbstractTextEditor should not be opening a modal dialog inside an activation\nlistener. (It should open a nonmodal shell or - preferably - a control that\ncovers the editor).\n\nI\u0027ve added an explicit check that prevents a part from being closed while it is\nstill in the process of being activated (it also logs a more informative error\nmessage). This prevents the workbench from entering an invalid state when this\nbug occurs.\n\nMoving to SWT for investigation of issue 2. cc\u0027ing Daniel for issue 3.\n",
    "CTabFolder fires the Close event on MouseUp not MouseDown so I do not believe \nit is possible for the Close to come while MouseDown events are being sent.  \nIt is entirely possible for Close to come while MouseUp events are being \nprocessed.  CTabFolder detects the MouseUp in a MouseUp Listener and fires off \nthe Close.  Since CTabFolder adds its listener for MouseUp in the constructor, \nit is the first MouseUp listener to ever get called.  All application MouseUp \nlisteners will be called after the Close event is sent.  There is currently no \nmechanism for a custom widget to do anything else (except asyncExec which \nwould not be desireable because of the uncertainty in timing).\n\nI will take a look at this scenario and see if I can understand what is going \non.",
    "The following simple example demonstrates the problem.  It fails for \nCTabFolder but not for Composite.  Click on the main shell that opens.  You \nshould get a MouseDown and not a MouseUp printed to the console.\n\npublic static void main (String [] args) {\n\tfinal Display display \u003d new Display ();\n\tfinal Shell shell \u003d new Shell (display);\n\tshell.setText(\"main\");\n\tshell.setLayout(new FillLayout());\n\t//Composite c \u003d new Composite(shell, SWT.BORDER);\n\tCTabFolder c \u003d new CTabFolder(shell, SWT.BORDER);\n\tListener listener \u003d new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tswitch (e.type) {\n\t\t\tcase SWT.MouseUp:\n\t\t\t\tSystem.out.println(\"Mouse Up\");\n\t\t\t\tbreak;\n\t\t\tcase SWT.MouseDown:\n\t\t\t\tSystem.out.println(\"Mouse Down\");\n\t\t\t\tShell shell2 \u003d new Shell(shell, \nSWT.APPLICATION_MODAL | SWT.DIALOG_TRIM);\n\t\t\t\tshell2.setText(\"modal dialog\");\n\t\t\t\tshell2.pack();\n\t\t\t\tshell2.open();\n\t\t\t\twhile (shell2 !\u003d null \u0026\u0026 !shell2.isDisposed()) \n{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!display.readAndDispatch())\n\t\t\t\t\t\t\tdisplay.sleep();\n\t\t\t\t\t} catch (Throwable th) {\n\t\t\t\t\t\tSystem.out.println(th);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\tc.addListener(SWT.MouseUp, listener);\n\tc.addListener(SWT.MouseDown, listener);\n\tshell.setSize(150, 150);\n\tshell.open();\n\twhile (!shell.isDisposed ()) {\n\t\tif (!display.readAndDispatch ()) display.sleep ();\n\t}\n\tdisplay.dispose ();\n}",
    "Stefan, can you file a separate bug for issue 3 in comment 1: the Platform Text\nframework (and I suppose other components) open dialogs when they get notified /\nactivated.\n\nIs there some guideline / API spec that guides clients not/how to do this?",
    "OK, here is the simple example with Composite that shows the problem - you \nneed a DragDetect listener.\n\npublic static void main (String [] args) {\n\tfinal Display display \u003d new Display ();\n\tfinal Shell shell \u003d new Shell (display);\n\tshell.setText(\"main\");\n\tshell.setLayout(new FillLayout());\n\tComposite c \u003d new Composite(shell, SWT.BORDER);\n\tListener listener \u003d new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tswitch (e.type) {\n\t\t\tcase SWT.MouseUp:\n\t\t\t\tSystem.out.println(\"Mouse Up\");\n\t\t\t\tbreak;\n\t\t\tcase SWT.MouseDown:\n\t\t\t\tSystem.out.println(\"Mouse Down\");\n\t\t\t\tShell shell2 \u003d new Shell(shell, \nSWT.APPLICATION_MODAL | SWT.DIALOG_TRIM);\n\t\t\t\tshell2.setText(\"modal dialog\");\n\t\t\t\tshell2.pack();\n\t\t\t\tshell2.open();\n\t\t\t\twhile (shell2 !\u003d null \u0026\u0026 !shell2.isDisposed()) \n{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!display.readAndDispatch())\n\t\t\t\t\t\t\tdisplay.sleep();\n\t\t\t\t\t} catch (Throwable th) {\n\t\t\t\t\t\tSystem.out.println(th);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\tc.addListener(SWT.MouseUp, listener);\n\tc.addListener(SWT.MouseDown, listener);\n\tc.addListener(SWT.DragDetect, listener);\n\tshell.setSize(150, 150);\n\tshell.open();\n\twhile (!shell.isDisposed ()) {\n\t\tif (!display.readAndDispatch ()) display.sleep ();\n\t}\n\tdisplay.dispose ();\n}",
    "Filed bug 94161 for issue 3.",
    "*** Bug 94998 has been marked as a duplicate of this bug. ***",
    "The problem is that OS.DragDetect() eats the mouse up under certain conditions.  We use SendMessage() to send a fake mouse up.  When a grab or the active window changes, the WM_LBUTTONUP goes to the wrong window.\n\nI believe the right thing to do is post a fake mouse event to the queue and let Windows decide who gets it.  I have a hack/fix of this somewhere but I remember that I caused problems with WM_COMMAND and tool bar (of all things)."
  ],
  "commentCreationDates": [
    "2005-05-04T20:46:11+02:00",
    "2005-05-06T01:10:13+02:00",
    "2005-05-06T15:19:37+02:00",
    "2005-05-06T18:17:39+02:00",
    "2005-05-08T20:50:56+02:00",
    "2005-05-09T17:21:08+02:00",
    "2005-05-09T19:04:17+02:00",
    "2005-05-13T19:25:09+02:00",
    "2007-06-21T00:56:05+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
      "message": "Assertion failed:",
      "elements": [
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:180"
        },
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:165"
        },
        {
          "method": "org.eclipse.ui.internal.PartList.removePart",
          "source": "PartList.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.partRemoved",
          "source": "WorkbenchPage.java:1334"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditors",
          "source": "WorkbenchPage.java:1158"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditor",
          "source": "WorkbenchPage.java:1183"
        },
        {
          "method": "org.eclipse.ui.internal.EditorPane.doHide",
          "source": "EditorPane.java:54"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.close",
          "source": "PartStack.java:459"
        },
        {
          "method": "org.eclipse.ui.internal.EditorStack.close",
          "source": "EditorStack.java:197"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack$1.close",
          "source": "PartStack.java:98"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation$1.handleEvent",
          "source": "TabbedStackPresentation.java:81"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent",
          "source": "AbstractTabFolder.java:267"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent",
          "source": "AbstractTabFolder.java:276"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1",
          "source": "DefaultTabFolder.java:1"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$1.closeButtonPressed",
          "source": "DefaultTabFolder.java:63"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PaneFolder.notifyCloseListeners",
          "source": "PaneFolder.java:563"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PaneFolder$3.close",
          "source": "PaneFolder.java:190"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder.onMouse",
          "source": "CTabFolder.java:2080"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder$1.handleEvent",
          "source": "CTabFolder.java:291"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2901"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2534"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:803"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:781"
        },
        {
          "method": "org.eclipse.jface.dialogs.MessageDialog.openQuestion",
          "source": "MessageDialog.java:368"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged",
          "source": "AbstractTextEditor.java:3423"
        },
        {
          "method": "org.eclipse.ui.texteditor.StatusTextEditor.handleEditorInputChanged",
          "source": "StatusTextEditor.java:203"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.sanityCheckState",
          "source": "AbstractTextEditor.java:3553"
        },
        {
          "method": "org.eclipse.ui.texteditor.StatusTextEditor.sanityCheckState",
          "source": "StatusTextEditor.java:193"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.safelySanityCheckState",
          "source": "AbstractTextEditor.java:3531"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.handleActivation",
          "source": "AbstractTextEditor.java:836"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.partActivated",
          "source": "AbstractTextEditor.java:798"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList$1.run",
          "source": "PartListenerList.java:72"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1031"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:757"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList.fireEvent",
          "source": "PartListenerList.java:58"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList.firePartActivated",
          "source": "PartListenerList.java:70"
        },
        {
          "method": "org.eclipse.ui.internal.PartService.firePartActivated",
          "source": "PartService.java:73"
        },
        {
          "method": "org.eclipse.ui.internal.PartService.setActivePart",
          "source": "PartService.java:166"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPartService.updateActivePart",
          "source": "WWinPartService.java:124"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPartService.access$0",
          "source": "WWinPartService.java:115"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPartService$1.partDeactivated",
          "source": "WWinPartService.java:48"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList2$4.run",
          "source": "PartListenerList2.java:113"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1031"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:757"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList2.fireEvent",
          "source": "PartListenerList2.java:54"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList2.firePartDeactivated",
          "source": "PartListenerList2.java:111"
        },
        {
          "method": "org.eclipse.ui.internal.PartService.firePartDeactivated",
          "source": "PartService.java:116"
        },
        {
          "method": "org.eclipse.ui.internal.PartService.setActivePart",
          "source": "PartService.java:160"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged",
          "source": "WorkbenchPagePartList.java:54"
        },
        {
          "method": "org.eclipse.ui.internal.PartList.setActivePart",
          "source": "PartList.java:112"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.setActivePart",
          "source": "WorkbenchPage.java:2721"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.requestActivation",
          "source": "WorkbenchPage.java:2369"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.requestActivation",
          "source": "PartPane.java:246"
        },
        {
          "method": "org.eclipse.ui.internal.EditorPane.requestActivation",
          "source": "EditorPane.java:88"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PresentablePart.setFocus",
          "source": "PresentablePart.java:137"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation$1.handleEvent",
          "source": "TabbedStackPresentation.java:92"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent",
          "source": "AbstractTabFolder.java:267"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.fireEvent",
          "source": "AbstractTabFolder.java:272"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.AbstractTabFolder.handleMouseDown",
          "source": "AbstractTabFolder.java:326"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.AbstractTabFolder$3.mouseDown",
          "source": "AbstractTabFolder.java:79"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:132"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2901"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2534"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1572"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1536"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:306"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:230"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:345"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:158"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:328"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:272"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:964"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "93700",
      "date": "2005-05-04T20:46:11+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "93700",
  "bugId": "93700",
  "date": "2005-05-04T20:46:11+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}