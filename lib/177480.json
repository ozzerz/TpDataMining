{
  "comments": [
    "CM: Subversion Synchronizing error when do import\n\nSteps:\n1. Create a new Method Library, a configuration and new plug-in named A\n2. Add the lib to source control server of SubVersion\n3. Export the plug-in A\n4. Re-import the plug-in A\nProblem: \n(1) A Synchronizing error window show when do Team - Synchronize\n(2) An error information show in Console view\n\nRemark:\n1. Add error screen image to show Synchronizing error window and Console error information \n2. Add text attachment to show detail of Synchronizing error",
    "Created an attachment (id\u003d60890)\nSynchronizing error and Console error\n\n",
    "Created an attachment (id\u003d60891)\nSynchronizing error detail\n\n",
    "I am getting the following exception:\n\nCaused by: org.tigris.subversion.javahl.ClientException: Working copy not locked; this is probably a bug, please report\nsvn: Unable to lock \u0027C:\\Libs\\72\\177480\\A\u0027\n\n\tat org.tigris.subversion.javahl.SVNClient.status(Native Method)\n\tat org.tigris.subversion.svnclientadapter.javahl.AbstractJhlClientAdapter.getStatus(AbstractJhlClientAdapter.java:431)\n\t... 46 more\norg.tigris.subversion.subclipse.core.SVNException: org.tigris.subversion.javahl.ClientException: Working copy not locked; this is probably a bug, please report\nsvn: Unable to lock \u0027C:\\Libs\\72\\177480\\A\u0027\n\n\tat org.tigris.subversion.subclipse.core.SVNException.wrapException(SVNException.java:85)\n\tat org.tigris.subversion.subclipse.core.status.StatusCacheManager.refreshStatus(StatusCacheManager.java:289)\n\tat org.tigris.subversion.subclipse.core.resourcesListeners.FileModificationManager.refreshStatus(FileModificationManager.java:172)\n\tat org.tigris.subversion.subclipse.core.resourcesListeners.FileModificationManager.resourceChanged(FileModificationManager.java:121)\n\tat org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:282)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:276)\n\tat org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:148)\n\tat org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:311)\n\tat org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1018)\n\tat org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1433)\n\tat org.eclipse.core.internal.resources.File.refreshLocal(File.java:331)\n\tat org.eclipse.epf.persistence.FileManager.refresh(FileManager.java:140)\n\tat org.eclipse.epf.persistence.FileManager.refresh(FileManager.java:156)\n\tat org.eclipse.epf.persistence.FileManager.refresh(FileManager.java:163)\n\tat org.eclipse.epf.persistence.MultiFileXMIResourceImpl.updateTimeStamps(MultiFileXMIResourceImpl.java:836)\n\tat org.eclipse.epf.persistence.MultiFileXMIResourceImpl.load(MultiFileXMIResourceImpl.java:371)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:256)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.demandLoad(MultiFileResourceSetImpl.java:394)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:271)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:398)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.getResource(MultiFileResourceSetImpl.java:460)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.getEObject(MultiFileResourceSetImpl.java:2265)\n\tat org.eclipse.epf.uma.ecore.impl.MultiResourceEObject.resolveProxy(MultiResourceEObject.java:549)\n\tat org.eclipse.epf.uma.ecore.impl.MultiResourceEObject.eResolveProxy(MultiResourceEObject.java:596)\n\tat org.eclipse.epf.resourcemanager.impl.ResourceManagerImpl.eResolveProxy(ResourceManagerImpl.java:230)\n\tat org.eclipse.emf.ecore.util.EcoreEList.resolveProxy(EcoreEList.java:206)\n\tat org.eclipse.emf.ecore.util.EcoreEList.resolve(EcoreEList.java:161)\n\tat org.eclipse.emf.ecore.util.EObjectContainmentEList$Resolving.resolve(EObjectContainmentEList.java:111)\n\tat org.eclipse.emf.common.util.BasicEList.get(BasicEList.java:537)\n\tat org.eclipse.emf.common.util.BasicEList$EIterator.doNext(BasicEList.java:1326)\n\tat org.eclipse.emf.common.util.BasicEList$EIterator.next(BasicEList.java:1313)\n\tat org.eclipse.emf.common.util.AbstractTreeIterator.next(AbstractTreeIterator.java:137)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadResourceManagerTree(MultiFileResourceSetImpl.java:1023)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.initialize(MultiFileResourceSetImpl.java:590)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadLibraryWithoutReset(MultiFileResourceSetImpl.java:944)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadLibrary(MultiFileResourceSetImpl.java:876)\n\tat org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadMethodLibraries(MultiFileResourceSetImpl.java:2504)\n\tat org.eclipse.epf.library.xmi.XMILibraryManager.openMethodLibrary(XMILibraryManager.java:278)\n\tat org.eclipse.epf.library.xmi.XMILibraryManager.reopenMethodLibrary(XMILibraryManager.java:342)\n\tat org.eclipse.epf.library.LibraryService.reopenMethodLibrary(LibraryService.java:344)\n\tat org.eclipse.epf.library.LibraryService.reopenCurrentMethodLibrary(LibraryService.java:371)\n\tat org.eclipse.epf.importing.services.PluginImportingService.merge(PluginImportingService.java:844)\n\tat org.eclipse.epf.importing.services.PluginImportingService.__doImport(PluginImportingService.java:222)\n\tat org.eclipse.epf.importing.services.PluginImportingService.performImport(PluginImportingService.java:185)\n\tat org.eclipse.epf.importing.wizards.ImportPluginWizard$1.run(ImportPluginWizard.java:196)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\n",
    "Fixed in DirCopy by taking care of \".svn\" folders during import",
    "Note for QA: I\u0027ve tested with XML import and config import too. They worked fine in my tests. But please verify them too. Thanks.",
    "Fix is verified on EPF daily build 20070624-2033 and closed."
  ],
  "commentCreationDates": [
    "2007-03-15T04:33:40+01:00",
    "2007-03-15T04:34:50+01:00",
    "2007-03-15T04:35:29+01:00",
    "2007-06-16T02:42:46+02:00",
    "2007-06-18T21:26:54+02:00",
    "2007-06-18T21:33:27+02:00",
    "2007-06-25T09:55:31+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.tigris.subversion.javahl.ClientException",
      "message": "Working copy not locked; this is probably a bug, please report svn: Unable to lock \u0027C:\\Libs\\72\\177480\\A\u0027",
      "elements": [
        {
          "method": "org.tigris.subversion.javahl.SVNClient.status",
          "source": "Native Method"
        },
        {
          "method": "org.tigris.subversion.svnclientadapter.javahl.AbstractJhlClientAdapter.getStatus",
          "source": "AbstractJhlClientAdapter.java:431"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "177480",
      "date": "2007-06-16T02:42:46+02:00",
      "product": "EPF",
      "component": "Tool",
      "severity": "normal"
    },
    {
      "exceptionType": "org.tigris.subversion.javahl.ClientException",
      "message": "Working copy not locked; this is probably a bug, please report svn: Unable to lock \u0027C:\\Libs\\72\\177480\\A\u0027",
      "elements": [
        {
          "method": "org.tigris.subversion.subclipse.core.SVNException.wrapException",
          "source": "SVNException.java:85"
        },
        {
          "method": "org.tigris.subversion.subclipse.core.status.StatusCacheManager.refreshStatus",
          "source": "StatusCacheManager.java:289"
        },
        {
          "method": "org.tigris.subversion.subclipse.core.resourcesListeners.FileModificationManager.refreshStatus",
          "source": "FileModificationManager.java:172"
        },
        {
          "method": "org.tigris.subversion.subclipse.core.resourcesListeners.FileModificationManager.resourceChanged",
          "source": "FileModificationManager.java:121"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager$2.run",
          "source": "NotificationManager.java:282"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.notify",
          "source": "NotificationManager.java:276"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.broadcastChanges",
          "source": "NotificationManager.java:148"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastPostChange",
          "source": "Workspace.java:311"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:1018"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.refreshLocal",
          "source": "Resource.java:1433"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.refreshLocal",
          "source": "File.java:331"
        },
        {
          "method": "org.eclipse.epf.persistence.FileManager.refresh",
          "source": "FileManager.java:140"
        },
        {
          "method": "org.eclipse.epf.persistence.FileManager.refresh",
          "source": "FileManager.java:156"
        },
        {
          "method": "org.eclipse.epf.persistence.FileManager.refresh",
          "source": "FileManager.java:163"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileXMIResourceImpl.updateTimeStamps",
          "source": "MultiFileXMIResourceImpl.java:836"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileXMIResourceImpl.load",
          "source": "MultiFileXMIResourceImpl.java:371"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:256"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.demandLoad",
          "source": "MultiFileResourceSetImpl.java:394"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:271"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:398"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.getResource",
          "source": "MultiFileResourceSetImpl.java:460"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.getEObject",
          "source": "MultiFileResourceSetImpl.java:2265"
        },
        {
          "method": "org.eclipse.epf.uma.ecore.impl.MultiResourceEObject.resolveProxy",
          "source": "MultiResourceEObject.java:549"
        },
        {
          "method": "org.eclipse.epf.uma.ecore.impl.MultiResourceEObject.eResolveProxy",
          "source": "MultiResourceEObject.java:596"
        },
        {
          "method": "org.eclipse.epf.resourcemanager.impl.ResourceManagerImpl.eResolveProxy",
          "source": "ResourceManagerImpl.java:230"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EcoreEList.resolveProxy",
          "source": "EcoreEList.java:206"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EcoreEList.resolve",
          "source": "EcoreEList.java:161"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EObjectContainmentEList$Resolving.resolve",
          "source": "EObjectContainmentEList.java:111"
        },
        {
          "method": "org.eclipse.emf.common.util.BasicEList.get",
          "source": "BasicEList.java:537"
        },
        {
          "method": "org.eclipse.emf.common.util.BasicEList$EIterator.doNext",
          "source": "BasicEList.java:1326"
        },
        {
          "method": "org.eclipse.emf.common.util.BasicEList$EIterator.next",
          "source": "BasicEList.java:1313"
        },
        {
          "method": "org.eclipse.emf.common.util.AbstractTreeIterator.next",
          "source": "AbstractTreeIterator.java:137"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadResourceManagerTree",
          "source": "MultiFileResourceSetImpl.java:1023"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.initialize",
          "source": "MultiFileResourceSetImpl.java:590"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadLibraryWithoutReset",
          "source": "MultiFileResourceSetImpl.java:944"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadLibrary",
          "source": "MultiFileResourceSetImpl.java:876"
        },
        {
          "method": "org.eclipse.epf.persistence.MultiFileResourceSetImpl.loadMethodLibraries",
          "source": "MultiFileResourceSetImpl.java:2504"
        },
        {
          "method": "org.eclipse.epf.library.xmi.XMILibraryManager.openMethodLibrary",
          "source": "XMILibraryManager.java:278"
        },
        {
          "method": "org.eclipse.epf.library.xmi.XMILibraryManager.reopenMethodLibrary",
          "source": "XMILibraryManager.java:342"
        },
        {
          "method": "org.eclipse.epf.library.LibraryService.reopenMethodLibrary",
          "source": "LibraryService.java:344"
        },
        {
          "method": "org.eclipse.epf.library.LibraryService.reopenCurrentMethodLibrary",
          "source": "LibraryService.java:371"
        },
        {
          "method": "org.eclipse.epf.importing.services.PluginImportingService.merge",
          "source": "PluginImportingService.java:844"
        },
        {
          "method": "org.eclipse.epf.importing.services.PluginImportingService.__doImport",
          "source": "PluginImportingService.java:222"
        },
        {
          "method": "org.eclipse.epf.importing.services.PluginImportingService.performImport",
          "source": "PluginImportingService.java:185"
        },
        {
          "method": "org.eclipse.epf.importing.wizards.ImportPluginWizard$1.run",
          "source": "ImportPluginWizard.java:196"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 1,
      "commentIndex": 3,
      "bugId": "177480",
      "date": "2007-06-16T02:42:46+02:00",
      "product": "EPF",
      "component": "Tool",
      "severity": "normal"
    }
  ],
  "groupId": "177480",
  "bugId": "177480",
  "date": "2007-03-15T04:33:40+01:00",
  "product": "EPF",
  "component": "Tool",
  "severity": "normal"
}