{
  "comments": [
    "Upon drag and drop of a context zip file onto a task in the tasklist a validation is performed on the file to ensure it has a context, this validation now fails since it is looking for a bogus context with handle \u0027temp\u0027, hence the drop of context onto the target task is failing. This raises the additional question of what to do when multiple contexts exist in the file. We should likely present a context preview/selection dialog allowing the user to choose the appropriate context.",
    "I can fix it in a number of ways:\n\nSince it is only a context filename that can vary in ZIP file then I can detect, that if filename is not \"repositories.xml\" or \"tasklist.xml\", then it is a context file. Not very good solution, I think, it can break again if a new data file is added to the arhive later. Fast enough to do, thought.\n\nThe second option is to make readContext() to work the old way(process the very first ZipEntry) if handleIndentifier in SaxContextReader.readContext() is \"temp\" (or \"\", or null, or what to choose?).\n\nThe third option is to pass to ContextCorePlugin.getContextManager().isValidContextFile(file) also a handle of a target AbstractTask, to make the externalizer use legal handle, not a \"temp\" one. Nevertheless, matching task\u0027s handle and context\u0027s file name in zip file can fail. This can occur if the handle was changed (can it happen?) or the context was taken from another task.\n\nAnother way would be trying to read all files in the archive and fix SaxContextContentHandler() so it would notify/stop processing, if a xml file\u0027s content is not a context description.\n\nWhich way should I go?\n\nAs to the question of many contexts in one file, as I understand, currently it\u0027s not possible: for each task a separate file is created with a single context inside.",
    "Thanks Jevgeni, if you don\u0027t have time just pass back to me. I think your second option of just using the first available context is appropriate for now provided null is passed for the handle. Is it feasible (in the future) to put contexts into a context folder within the zip making it easier to get \u0027just contexts\u0027 from the zip (for when we have multiple tasks/contexts in a single zip?",
    "Created an attachment (id\u003d79352)\nFixed isValidContextFile() util\n\n",
    "Created an attachment (id\u003d79353)\nmylyn/context/zip\n\n",
    "\n(In reply to comment #2)\n\u003e Thanks Jevgeni, if you don\u0027t have time just pass back to me. I think your\n\u003e second option of just using the first available context is appropriate for now\n\u003e provided null is passed for the handle. Is it feasible (in the future) to put\n\u003e contexts into a context folder within the zip making it easier to get \u0027just\n\u003e contexts\u0027 from the zip (for when we have multiple tasks/contexts in a single\n\u003e zip?\n\u003e \n\n\nRight, I was also thinking about this option, it should be quite simple to implement. Nevertheless, I would prefer touching xml files\u0027s root element to ensure that the the Mylyn is actually working with a correct context file. Matching by filenames seems to me a bit unsafe, but this can be only my gut feeling :)",
    " (In reply to comment #5)\n\u003e I would prefer touching xml files\u0027s root element to\n\u003e ensure that the the Mylyn is actually working with a correct context file.\n\nAgreed. Will look at patch as soon as I get the go ahead from Mik.\n",
    "Let\u0027s hold off until 2.1 is fully out.  Consider scheduling for next Tuesday or Wednesay.",
    "Jevgeni: So this patch doesn\u0027t resolve the case of dropping a previously dragged out Task (with context) onto another task. If you try you get:\n\njava.lang.NullPointerException\n\tat org.eclipse.mylyn.internal.monitor.core.util.XmlStringConverter.convertXmlToString(XmlStringConverter.java:59)\n\tat org.eclipse.mylyn.internal.context.core.SaxContextContentHandler.createEventFromAttributes(SaxContextContentHandler.java:72)\n\tat org.eclipse.mylyn.internal.context.core.SaxContextContentHandler.startElement(SaxContextContentHandler.java:62)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:501)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:179)\n\tat com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2740)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:645)\n\tat com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:508)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)\n\tat org.eclipse.mylyn.internal.context.core.SaxContextReader.readContext(SaxContextReader.java:76)\n\tat org.eclipse.mylyn.internal.context.core.InteractionContextExternalizer.readContextFromXML(InteractionContextExternalizer.java:132)\n\tat org.eclipse.mylyn.internal.context.core.InteractionContextExternalizer.readContextFromXML(InteractionContextExternalizer.java:121)\n\tat org.eclipse.mylyn.internal.context.core.InteractionContextManager.isValidContextFile(InteractionContextManager.java:1073)\n\tat org.eclipse.mylyn.internal.tasks.ui.views.TaskListDropAdapter.performDrop(TaskListDropAdapter.java:109)\n\tat org.eclipse.jface.viewers.ViewerDropAdapter.drop(ViewerDropAdapter.java:239)\n\tat org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:90)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)",
    "Created an attachment (id\u003d80334)\nFixed NPE and SaxContextReader\n\nSaxContextReader now scans all entries in ZipFile and detects the context file by the file\u0027s content",
    "Jevgeni: sorry, this patch went stale, could you please re-create?",
    "Jevgeni: are you able to recreate the patch for this?",
    "Created an attachment (id\u003d84140)\nFixed NPE and SaxContextReader, recreated patch\n\nSorry for delay, I\u0027ve been busy with my studies last month. This patch is the same as the previous one, but with \u0027scaling\u0027 added. Hope, I\u0027m using it correctly.",
    "Created an attachment (id\u003d84141)\n Fixed NPE and SaxContextReader, recreated patch, clean\n\nRemoved commented out code as well",
    "Rob: please review.",
    "Had a look Jevgeni.  If the first zip entry is something other than a context, a bogus context is constructed. I think we need to do more work to get a proper context out of the file if it exists. Scheduling for 2.3 since we\u0027re so late in the 2.2 cycle."
  ],
  "commentCreationDates": [
    "2007-09-26T19:43:47+02:00",
    "2007-09-27T18:48:02+02:00",
    "2007-09-27T19:23:51+02:00",
    "2007-09-28T08:21:31+02:00",
    "2007-09-28T08:21:33+02:00",
    "2007-09-28T08:30:58+02:00",
    "2007-09-28T19:04:59+02:00",
    "2007-09-28T20:26:51+02:00",
    "2007-10-05T03:02:39+02:00",
    "2007-10-15T09:19:34+02:00",
    "2007-10-19T01:01:19+02:00",
    "2007-11-23T19:12:51+01:00",
    "2007-11-30T07:06:27+01:00",
    "2007-11-30T07:08:54+01:00",
    "2007-12-06T02:39:30+01:00",
    "2007-12-12T15:41:40+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylyn.internal.monitor.core.util.XmlStringConverter.convertXmlToString",
          "source": "XmlStringConverter.java:59"
        },
        {
          "method": "org.eclipse.mylyn.internal.context.core.SaxContextContentHandler.createEventFromAttributes",
          "source": "SaxContextContentHandler.java:72"
        },
        {
          "method": "org.eclipse.mylyn.internal.context.core.SaxContextContentHandler.startElement",
          "source": "SaxContextContentHandler.java:62"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement",
          "source": "AbstractSAXParser.java:501"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement",
          "source": "AbstractXMLDocumentParser.java:179"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement",
          "source": "XMLNSDocumentScannerImpl.java:377"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next",
          "source": "XMLDocumentFragmentScannerImpl.java:2740"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next",
          "source": "XMLDocumentScannerImpl.java:645"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next",
          "source": "XMLNSDocumentScannerImpl.java:140"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "XMLDocumentFragmentScannerImpl.java:508"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:807"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:737"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XMLParser.parse",
          "source": "XMLParser.java:107"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse",
          "source": "AbstractSAXParser.java:1205"
        },
        {
          "method": "org.eclipse.mylyn.internal.context.core.SaxContextReader.readContext",
          "source": "SaxContextReader.java:76"
        },
        {
          "method": "org.eclipse.mylyn.internal.context.core.InteractionContextExternalizer.readContextFromXML",
          "source": "InteractionContextExternalizer.java:132"
        },
        {
          "method": "org.eclipse.mylyn.internal.context.core.InteractionContextExternalizer.readContextFromXML",
          "source": "InteractionContextExternalizer.java:121"
        },
        {
          "method": "org.eclipse.mylyn.internal.context.core.InteractionContextManager.isValidContextFile",
          "source": "InteractionContextManager.java:1073"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.views.TaskListDropAdapter.performDrop",
          "source": "TaskListDropAdapter.java:109"
        },
        {
          "method": "org.eclipse.jface.viewers.ViewerDropAdapter.drop",
          "source": "ViewerDropAdapter.java:239"
        },
        {
          "method": "org.eclipse.swt.dnd.DNDListener.handleEvent",
          "source": "DNDListener.java:90"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 8,
      "bugId": "204711",
      "date": "2007-10-05T03:02:39+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "normal"
    }
  ],
  "groupId": "204711",
  "bugId": "204711",
  "date": "2007-09-26T19:43:47+02:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "normal"
}