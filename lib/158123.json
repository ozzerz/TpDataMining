{
  "comments": [
    "I20060921-0010\n\nCoreException swallows all messages contained in a MultiStatus. This makes it hard to find out what\u0027s going on when tests fail, see e.g. bug 158105:\n\norg.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.\nat org.eclipse.core.internal.resources.Resource.delete(Resource.java:701)\nat org.eclipse.core.internal.resources.Resource.delete(Resource.java:660)\nat org.eclipse.jdt.ui.tests.refactoring.RefactoringTest.tearDown(RefactoringTest.java:130)\nat org.eclipse.jdt.ui.tests.refactoring.ValidateEditTests.tearDown(ValidateEditTests.java:70)\n\nWe have no clue what\u0027s happening, and we first need to hunt for a MacOS X machine to debug it.\n\nTo reproduce, run the code below. The \"status_message\" does not appear in the stacktrace, but it should.\n\npublic class CE {\n    public static void main(String[] args) {\n\tStatus status \u003d new Status(IStatus.OK, \"plug\", \"status_message\");\n\tMultiStatus multi\u003d new MultiStatus(\"plug\", 17,\n\t\tnew IStatus[] { status }, \"multi_message\", null);\n\tCoreException e \u003d new CoreException(multi);\n\te.printStackTrace();\n    }\n}",
    "CoreException is in the o.e.equinox.common bundle.",
    "The CoreException.printStackTrace() prints the status object\u0027s trace only if the getException() of the status object is not null. In your example is it is null. \n\nAlso, for MultiStatus, the MultiStatus itself has to have an exception associated with it for the CoreException.printStackTrace() to produce an output.\n",
    "(In reply to comment #2)\nThat\u0027s an explanation of the current behavior, but it doesn\u0027t solve the problem.\n\nIf CoreException is incapable of printing all information of the given MultiStatus, then this should be documented in CoreException. Core/Resources would then have to reimplement their error handling to not use a MultiStatus in a CoreException any more. However, I still think this should be fixed in CoreException.",
    "I agree that this is a problematic situation, but it seems to be approached from the wrong end. \n\nIt doesn\u0027t look like CoreException is intended to do any special processing for MultiStatus. It takes an IStatus object (which just happens to be a MultiStatus in this particular case). \n\nThe CoreExeption class is not trying to consolidate MultiStatus - and I don\u0027t think it should as all it knows about is an IStatus.\n\nIn terms of the state of things today, if MultiStatus is used to construct a CoreExeption object, the MultiStatus shold contain meaningful status message and, if appropriate, originating exception. The CoreExeption itself doesn\u0027t do any processing of the status message.\n\nCould this be improved? Probably. However, this needs to be improved in the error reporting first with, probably, a couple of new methods on the MultiStatus / Status / IStatus.\n\nIf you\u0027d like, let\u0027s reopen this as an enhancement request with a slightly different title - something like \"Improve reporting of the CoreException(MultiStatus)\".\n",
    "\u003e The CoreExeption class is not trying to consolidate MultiStatus - and I don\u0027t\n\u003e think it should as all it knows about is an IStatus.\nIStatus already contains the protocol of MultiStatus (except for mutators), so I don\u0027t think it\u0027s too far-fetched to handle nested statuses as well.\n\n\u003e If you\u0027d like, let\u0027s reopen this as an enhancement request with a slightly\n\u003e different title - something like \"Improve reporting of the\n\u003e CoreException(MultiStatus)\".\nDone, thanks.",
    "Assigning to Oleg since he seems to enjoy this problem :)"
  ],
  "commentCreationDates": [
    "2006-09-21T12:16:00+02:00",
    "2006-09-21T15:53:26+02:00",
    "2006-09-21T16:01:20+02:00",
    "2006-09-21T16:19:59+02:00",
    "2006-09-21T16:40:58+02:00",
    "2006-09-21T17:00:10+02:00",
    "2006-09-21T21:43:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Problems encountered while deleting resources.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.delete",
          "source": "Resource.java:701"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.delete",
          "source": "Resource.java:660"
        },
        {
          "method": "org.eclipse.jdt.ui.tests.refactoring.RefactoringTest.tearDown",
          "source": "RefactoringTest.java:130"
        },
        {
          "method": "org.eclipse.jdt.ui.tests.refactoring.ValidateEditTests.tearDown",
          "source": "ValidateEditTests.java:70"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "158123",
      "date": "2006-09-21T12:16:00+02:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "enhancement"
    }
  ],
  "groupId": "158123",
  "bugId": "158123",
  "date": "2006-09-21T12:16:00+02:00",
  "product": "Equinox",
  "component": "Bundles",
  "severity": "enhancement"
}