{
  "comments": [
    "This bug was discovered on Eclipse 3.1 M5a (I20050219-1500):\n\nWhen debugging any Java application, if the variables view is open and visible,\ndoing stepping operations in rapid succession, such as by pressing and holding\nthe F6 key, would sometimes cause an error pop-up:\n\nExceptions occurred attempting to step over the frame\n  org.eclipse.jdi.TimeoutException: Timeout occurred while waiting for packet\n2225 occurred creating step request.\n\nAfter the error pops up for the first time, all stepping operations will no\nlonger work (it will give a similar org.eclipse.jdi.TimeoutException error each\ntime), the variables view will display the values of all variables as \u003cunknown\nvalue\u003e, and sometimes Eclipse would freeze completely.\n\nBelow is the full error log entry:\n\n!SESSION 2005-03-04 09:56:51.937 -----------------------------------------------\neclipse.buildId\u003dI20050219-1500\njava.version\u003d1.4.2_05\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.debug.ui 4 5012 2005-03-04 09:56:51.937\n!MESSAGE Exceptions occurred attempting to step over the frame\n!SUBENTRY 1 org.eclipse.jdt.debug 4 5010 2005-03-04 09:56:51.937\n!MESSAGE org.eclipse.jdi.TimeoutException: Timeout occurred while waiting for\npacket 2225 occurred creating step request.\n!STACK 0\norg.eclipse.jdi.TimeoutException: Timeout occurred while waiting for packet 2225\n\tat\norg.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:163)\n\tat\norg.eclipse.jdi.internal.connect.PacketReceiveManager.getReply(PacketReceiveManager.java:172)\n\tat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:174)\n\tat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:192)\n\tat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:207)\n\tat\norg.eclipse.jdi.internal.ObjectReferenceImpl.isCollected(ObjectReferenceImpl.java:388)\n\tat\norg.eclipse.jdi.internal.request.EventRequestImpl.addStepFilter(EventRequestImpl.java:409)\n\tat\norg.eclipse.jdi.internal.request.EventRequestManagerImpl.createStepRequest(EventRequestManagerImpl.java:195)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIThread$StepHandler.createStepRequest(JDIThread.java:1724)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIThread$StepHandler.step(JDIThread.java:1675)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIThread.stepOver(JDIThread.java:1215)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIStackFrame.stepOver(JDIStackFrame.java:415)\n\tat\norg.eclipse.debug.internal.ui.actions.StepOverActionDelegate.stepAction(StepOverActionDelegate.java:30)\n\tat\norg.eclipse.debug.internal.ui.actions.StepActionDelegate.doAction(StepActionDelegate.java:25)\n\tat\norg.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate$DebugRequestJob.run(AbstractDebugActionDelegate.java:97)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)",
    "Is your target program also running on Sun\u0027s 1.4.2_05 VM?",
    "Yes, the target program is running on Sun\u0027s j2re1.4.2_05",
    "Does reselecting the stack frame in the debug view allow you to step once again? Does this always \nhappen using \"Step Over\" or do all the step actions have the same effect?",
    "Reselecting the stack frame does not allow me to step once again. All 3 \nstepping operations (Step Into, Step Over, and Step Return) can cause this \nproblem.\n\nIn order to reproduce this bug, there has to be several variables of sufficient \ncomplexity displayed in the variables view. Below is the code that I used and \nthe steps to reproduce the bug:\n\nimport java.io.*;\npublic class Hello {\n\n\tprivate static int x\u003d0;\n\t\n\tprivate static void f()\n\t{\n\t\tBufferedReader in \u003d new BufferedReader(new\n\t\tInputStreamReader(System.in));\n\t\tint i\u003d0;\n\t\tint j\u003d0;\n\t\tx++;\n\t\tif(x\u003c100)\n\t\t\tf();\n\t\n\t\twhile(i\u003c100)\n\t\t{\n\t\t\tj+\u003di;\n\t\t\ti++;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tf();\n\t}\n\n}\n\n- Set a breakpoint at the while loop and remove it after the debug session \nstarts.\n\n- Expand the BufferedReader in the variables view so that at least some of its \nmember variables are displayed\n\n- Try the various stepping operations in quick succession by holding down onto \ntheir keyboard shortcuts\n\n\nAfter causing this error for the first time. If I terminate the debug session,  \nstart a new one, and try stepping again, the following message gets printed to \nstandard error:\nTransport error, error code \u003d -1\n\nAfter that the debug session terminates because it got disconnected. The stack \nin the Debug View displays:\n\u003cdisconnected\u003e Hello at localhost:1304\n\nThere is no error log entry for the above error.\n",
    "I am unable to reproduce the problem as shown. What version of Windows XP are \nyou running? What sort of hardware are you using?",
    "My machine is an IA32 running Windows XP with Service Pack 2.",
    "released change to PacketReceiveManager. Slightly changed the synchronization of getReply(), and \nmade error message more detailed when a Timeout occurs.",
    "Created an attachment (id\u003d18544)\nReplacement jdt.debug plugin\n\nKevin (L),\nIs there any chance that you could run your test with today\u0027s I-Build and this\njdt.debug plugin? It may give us some more useful info in the error messages.",
    "Created an attachment (id\u003d18550)\nError log for StepReturn in Eclipse I20050308-0835\n\nThis is the complete error log as I started Eclipse I20050308-0835, created the\ntest project, and then ran it. I tested the Step Return operation this time and\nheld down the F9 key.",
    "What we really need is a trace from today\u0027s build with the attached jdt.debug plugin. To get this you\u0027ll \nneed to unzip the plugin attached and copy/paste the unzipped plugin into the \u003ceclipse_home\u003e/\nplugins directory on your machine. After doing this it\u0027s best to start eclipse with the -clean option to be \nsure that the new plugin is loaded properly (eclipse.exe -clean). Today\u0027s changes are not included in \nany build yet. Sorry for the confusion.",
    "Sorry, I forgot to mention that I overwrote the jdt.debug plugin in today\u0027s \nbuild with the one you supplied before I ran the tests. So the error log I \nattached should be correct.",
    "Created an attachment (id\u003d18555)\nnew plugin\n\nugh. I forgot to release changes to the properties file. Working on too many\nmachines at once. Sorry, please try this new plugin.",
    "Created an attachment (id\u003d18558)\nNew Error log for step return on Eclipse I20050308-0835\n\nHere\u0027s the new error log, using the new plugin. Hope it\u0027ll be useful.",
    "These look like real timeouts. You can increase the timeout on the Preferences/Java/Debug page. 3 \nseconds should be long enough though.\nThese timeouts are occuring in the UI thread. Should move host-target communication out of UI thread.",
    "Kevin, Are you running ZoneLabs (or another firewall)? Could you disable it and run your test again. I\u0027m \nwondering if there is something causing packet loss between the host and target.",
    "You\u0027re right. Turning off the firewall seems to solve the problem. I notice \nthere\u0027s firewall activity whenever I perform stepping operations.\n\nHowever, increasing the timeout setting seems to solve the problem too. Seems \nlike the higher I set it, the lesser the chance the exception occurs... \n\nMaybe it\u0027s a performance problem, and has nothing to do with packet loss. \nPerhaps I\u0027m just stressing out Eclipse too much by stepping so fast?",
    "Good questions! How fast is your machine? My WinXP box is a P4 2.66 GHz with 768MB of RAM running \nZoneLabs firewall. I don\u0027t get Timeouts when holding the F6 on it. \nI\u0027m also on SP1 still. I\u0027ll try upgrading my machine to SP2\nDoes your firewall have a log file? Is there anything in it?",
    "My machine is a P4 3.2 GHz with 1.5 GB Ram running Windows XP with SP2\n\nI\u0027m also running Zone Labs, and I don\u0027t notice anything in the log file.\n\nActually the error seems to be occuring a lot less often now... Maybe I was \njust running too many programs last time, causing Eclipse to run slowly and \ngenerate those timeout exceptions.",
    "\n\n*** This bug has been marked as a duplicate of 83937 ***"
  ],
  "commentCreationDates": [
    "2005-03-04T15:04:36+01:00",
    "2005-03-07T15:48:51+01:00",
    "2005-03-07T16:17:40+01:00",
    "2005-03-07T21:58:33+01:00",
    "2005-03-08T15:02:11+01:00",
    "2005-03-08T15:16:41+01:00",
    "2005-03-08T15:31:13+01:00",
    "2005-03-08T18:50:26+01:00",
    "2005-03-08T19:00:02+01:00",
    "2005-03-08T19:45:38+01:00",
    "2005-03-08T19:57:37+01:00",
    "2005-03-08T20:19:54+01:00",
    "2005-03-08T20:29:12+01:00",
    "2005-03-08T20:39:36+01:00",
    "2005-03-09T15:07:53+01:00",
    "2005-03-09T15:18:45+01:00",
    "2005-03-09T15:55:58+01:00",
    "2005-03-09T16:38:41+01:00",
    "2005-03-09T17:55:20+01:00",
    "2005-04-04T21:38:02+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdi.TimeoutException",
      "message": "Timeout occurred while waiting for packet 2225",
      "elements": [
        {
          "method": "org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply",
          "source": "PacketReceiveManager.java:163"
        },
        {
          "method": "org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply",
          "source": "PacketReceiveManager.java:172"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:174"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:192"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:207"
        },
        {
          "method": "org.eclipse.jdi.internal.ObjectReferenceImpl.isCollected",
          "source": "ObjectReferenceImpl.java:388"
        },
        {
          "method": "org.eclipse.jdi.internal.request.EventRequestImpl.addStepFilter",
          "source": "EventRequestImpl.java:409"
        },
        {
          "method": "org.eclipse.jdi.internal.request.EventRequestManagerImpl.createStepRequest",
          "source": "EventRequestManagerImpl.java:195"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread$StepHandler.createStepRequest",
          "source": "JDIThread.java:1724"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread$StepHandler.step",
          "source": "JDIThread.java:1675"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.stepOver",
          "source": "JDIThread.java:1215"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.stepOver",
          "source": "JDIStackFrame.java:415"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.StepOverActionDelegate.stepAction",
          "source": "StepOverActionDelegate.java:30"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.StepActionDelegate.doAction",
          "source": "StepActionDelegate.java:25"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate$DebugRequestJob.run",
          "source": "AbstractDebugActionDelegate.java:97"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "87144",
      "duplicateId": "83937",
      "date": "2005-03-04T15:04:36+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "83937",
  "bugId": "87144",
  "duplicateId": "83937",
  "date": "2005-03-04T15:04:36+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}