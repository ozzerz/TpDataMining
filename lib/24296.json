{
  "comments": [
    "I seem to crash about 3-4 times a day with one SWT error or another.  I\u0027ve \nincluded my configuration setup.  The latest error:\n\n!SESSION Oct 01, 2002 16:46:35.494 ---------------------------------------------\njava.version\u003d1.4.1\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -os win32 -ws win32 -arch x86 -data c:\\temp\\workspace -\ninstall file:C:/eclipse/\n!ENTRY org.eclipse.ui 4 4 Oct 01, 2002 16:46:35.494\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Oct 01, 2002 16:46:35.494\n!MESSAGE No more handles\n!STACK 0\norg.eclipse.swt.SWTError: No more handles\n\tat org.eclipse.swt.SWT.error(SWT.java:2144)\n\tat org.eclipse.swt.SWT.error(SWT.java:2051)\n\tat org.eclipse.swt.graphics.Image.init(Image.java:1787)\n\tat org.eclipse.swt.graphics.Image.init(Image.java:1816)\n\tat org.eclipse.swt.graphics.Image.\u003cinit\u003e(Image.java:703)\n\tat org.eclipse.jface.resource.ImageDescriptor.createImage\n(ImageDescriptor.java:128)\n\tat org.eclipse.jface.resource.ImageDescriptor.createImage\n(ImageDescriptor.java:87)\n\tat org.eclipse.jface.resource.ImageDescriptor.createImage\n(ImageDescriptor.java:76)\n\tat net.sourceforge.eclipseccase.ui.ClearcaseDecorator.getImage\n(ClearcaseDecorator.java:101)\n\tat net.sourceforge.eclipseccase.ui.ClearcaseDecorator.decorateImage\n(ClearcaseDecorator.java:145)\n\tat org.eclipse.ui.internal.DecoratorDefinition.decorateImage\n(DecoratorDefinition.java:233)\n\tat org.eclipse.ui.internal.DecoratorManager.decorateImage\n(DecoratorManager.java:157)\n\tat org.eclipse.jface.viewers.DecoratingLabelProvider.getImage\n(DecoratingLabelProvider.java:69)",
    "Our proxy server at work will not allow me to attach a file to this bug \nreport.  I will attach the configuration file from home later today.",
    "Created an attachment (id\u003d2088)\nconfiguration info and stack trace\n",
    "The attachment has more stack traces then I thought.  This bug invoves the \nstack traces that are at the end of the attached file.",
    "Somebody is leaking and there\u0027s not much SWT can do about it, other than ensure \nthat SWT itself does not leak.\n\nAre you sure that you are running Windows 2000?  You seem also to be running \nsome extra plugins.  Try not running them (if you can) and see if the problem \ngoes away.",
    "I\u0027m running Windows 2000 with SP3.  I am also running with a number of \nplugins.  It will not be possible to run without several of them, but I\u0027ll \nremove the ones I can.\n\nIs there a way to figure out which plugin is leaking?  As the number of plugins \nincrease, many written by junior developers, bad code is inevitability.  \nCausing Eclipse to crash without warning will be a serious problem and will \ngive Eclipse a bad rap. \n",
    "I agree, however the automatically disposing operating system resources in an \noperating system that does not support garbage collection is not an option (see \narticles on Eclipse corner).\n\nThere is a tool called Sleak that helps debug leaks but it only does \"snapshot \nand difference\" analysis, meaning that it can\u0027t really detect leaks, only the \nfact that new resource keep getting allocated (they might be legit).\n\nNot sure what to do for you.  Ideas?",
    "The ant plugin leaks memory like a champ. If you\u0027re using that, it could be the \nproblem.",
    "I\u0027ve posted a message on eclipse.tools newsgroup soliciting help.  I?m out of \nideas.  The Sleak concept would work for dump analyst.  I realize it can?t \ndetect leaks, however if I could do a ?help\u003eabout\u003eresources? and show the \nnumber of resources allocated per plugin I could monitor this now and again \nwhile the system was working normally.  Then when it crashed I could look for \nany plugins that have significantly higher allocations.  Yeah, I know, its \nimperfect because high allocations do not necessary constitute a  problem, \nhowever it would be a clue.   The big problem I?m guessing is that there is no \nway to track SWT resource allocation per plugin, correct?",
    "Yes, there is nothing that will do this.  It\u0027s hard to tell which resources \nare owned by which plugins because resources such as icons and fonts are \nshared.\n\nI\u0027m not sure what to do with this PR.  It\u0027s not SWT.  Moving to Ant?",
    "See bug 24448 for details on how and why the eclipse ant plugin leaks.\n\nBut I have seen no evidence that we leak fonts or icons. I think comment #7 is \nout of context.\n\nIs this still a problem on the latest builds?",
    "While I agree there is a real problem here (or there was in the past), it is \nnot an Ant problem. With all of the profiling that I have done with the Ant / \nExternal tools integration of Eclipse I have seen no resource leakage."
  ],
  "commentCreationDates": [
    "2002-10-02T00:27:43+02:00",
    "2002-10-02T00:33:26+02:00",
    "2002-10-02T02:12:33+02:00",
    "2002-10-02T02:14:45+02:00",
    "2002-10-02T14:37:24+02:00",
    "2002-10-02T14:53:16+02:00",
    "2002-10-02T15:02:35+02:00",
    "2002-10-02T19:55:38+02:00",
    "2002-10-03T04:59:43+02:00",
    "2003-03-05T23:05:53+01:00",
    "2003-03-05T23:13:42+01:00",
    "2003-03-07T17:14:24+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTError",
      "message": "No more handles",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2144"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2051"
        },
        {
          "method": "org.eclipse.swt.graphics.Image.init",
          "source": "Image.java:1787"
        },
        {
          "method": "org.eclipse.swt.graphics.Image.init",
          "source": "Image.java:1816"
        },
        {
          "method": "org.eclipse.swt.graphics.Image.\u003cinit\u003e",
          "source": "Image.java:703"
        },
        {
          "method": "org.eclipse.jface.resource.ImageDescriptor.createImage",
          "source": "ImageDescriptor.java:128"
        },
        {
          "method": "org.eclipse.jface.resource.ImageDescriptor.createImage",
          "source": "ImageDescriptor.java:87"
        },
        {
          "method": "org.eclipse.jface.resource.ImageDescriptor.createImage",
          "source": "ImageDescriptor.java:76"
        },
        {
          "method": "net.sourceforge.eclipseccase.ui.ClearcaseDecorator.getImage",
          "source": "ClearcaseDecorator.java:101"
        },
        {
          "method": "net.sourceforge.eclipseccase.ui.ClearcaseDecorator.decorateImage",
          "source": "ClearcaseDecorator.java:145"
        },
        {
          "method": "org.eclipse.ui.internal.DecoratorDefinition.decorateImage",
          "source": "DecoratorDefinition.java:233"
        },
        {
          "method": "org.eclipse.ui.internal.DecoratorManager.decorateImage",
          "source": "DecoratorManager.java:157"
        },
        {
          "method": "org.eclipse.jface.viewers.DecoratingLabelProvider.getImage",
          "source": "DecoratingLabelProvider.java:69"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "24296",
      "date": "2002-10-02T00:27:43+02:00",
      "product": "Platform",
      "component": "Ant",
      "severity": "critical"
    }
  ],
  "groupId": "24296",
  "bugId": "24296",
  "date": "2002-10-02T00:27:43+02:00",
  "product": "Platform",
  "component": "Ant",
  "severity": "critical"
}