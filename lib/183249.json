{
  "comments": [
    "In the Web services wizard, here\u0027s what we do when creating EAR:\n\n- Create the faceted project.\n- Get the highest version supported for EAR.\n- Ask the targetted server runtime if it supports it.  \n- If it does, then we add that EAR facet version to the project.  If it doesn\u0027t, then we move to a lower version.\n- Add the Web module to the EAR.\n- Add the EAR to the server.",
    "For certain type of server, it allowing certain types of child module for a particular EAR version but not another type, so we need a better way to determine module/EAR compatibility with server before we add the module to EAR and then adding the EAR to the server.\n\nCurrently, here\u0027s the stack trace when the server cannot take a particular module/EAR combination:\n\nError occured when adding the module, TestEAR, to the server\n    org.eclipse.core.runtime.CoreException:\n    at org.eclipse.wst.server.core.internal.ServerWorkingCopy.modifyModules(ServerWorkingCopy.java:496)\n    at org.eclipse.wst.server.core.ServerUtil.modifyModules(ServerUtil.java:390)\n    at org.eclipse.jst.ws.internal.consumption.command.common.AddModuleToServerCommand.execute(AddModuleToServerCommand.java:101)\n    at org.eclipse.jst.ws.internal.creation.ui.extension.PreServiceInstallCommand.execute(PreServiceInstallCommand.java:76)\n\nHere\u0027s one suggested approach from server tooling:\n\nYou don\u0027t need to add the module to the server before you can call canModifyModule().  The way that it works is after you do step 5 where you have added the web module to the EAR, you can then call canModifyModule() on the server even before adding the module to the server, i.e. you can do it before step 6. \n\nIf you happens to want to do the check even before you add the module to the server, you can use the information in the runtime of a server.  For a given IServer, you can call IServer.getRuntime().getRuntimeType() for a IRuntimeType.  Then you can call IRuntimeType.getModuleTypes() to returns you the complete list of module types and versions that a given runtime supports.  You can use that info to do the check before you add the module to a given EAR.\n\n",
    "\n\n*** This bug has been marked as a duplicate of bug 203826 ***",
    "Closing.",
    "With recent changes in server/J2EE tools behaviour, the wizard would not allow incompatible WAR version to be created.  So we would not have run into this problem anymore."
  ],
  "commentCreationDates": [
    "2007-04-19T20:28:04+02:00",
    "2007-04-19T20:38:15+02:00",
    "2007-09-27T19:46:10+02:00",
    "2007-10-09T22:39:12+02:00",
    "2007-12-12T19:57:24+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "",
      "elements": [
        {
          "method": "org.eclipse.wst.server.core.internal.ServerWorkingCopy.modifyModules",
          "source": "ServerWorkingCopy.java:496"
        },
        {
          "method": "org.eclipse.wst.server.core.ServerUtil.modifyModules",
          "source": "ServerUtil.java:390"
        },
        {
          "method": "org.eclipse.jst.ws.internal.consumption.command.common.AddModuleToServerCommand.execute",
          "source": "AddModuleToServerCommand.java:101"
        },
        {
          "method": "org.eclipse.jst.ws.internal.creation.ui.extension.PreServiceInstallCommand.execute",
          "source": "PreServiceInstallCommand.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "183249",
      "duplicateId": "203826",
      "date": "2007-04-19T20:38:15+02:00",
      "product": "Web Tools",
      "component": "jst.ws",
      "severity": "major"
    }
  ],
  "groupId": "203826",
  "bugId": "183249",
  "duplicateId": "203826",
  "date": "2007-04-19T20:28:04+02:00",
  "product": "Web Tools",
  "component": "jst.ws",
  "severity": "major"
}