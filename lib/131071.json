{
  "comments": [
    "We\u0027ve been having problems with using ExpandBar / ExpandItem on PocketPC, \nfirst from release M5, and from CVS HEAD (checked out on 8th March 2006), as \nwe saw there was a bug report that was fixed on the 7th March [128891].\n\nWe\u0027re using code from the SWT Snippets online, in this case for ExpandBar.\n\nWe\u0027re running the IBM J9 JVM on a Dell X31 PDA in PP profile.\n\nThe initial problem was a NullPointerException in ExpandBar.createItem(). \nThis was from the M5 release of SWT, no alterations, for Pocket PC.\n\nI then checked out from CVS after noticing the aforementioned bugfix. \nHowever it still fails when running on the IBM J9 JVM on the PDA.\nA new error arose - an IllegalAccessError in isValidSubclass() in Widget \nwhich is called from checkSubclass() in ExpandBar. The error is traced at \nthe bottom.\n\nAfter I remove the call to isValidSubclass() I added some tracing into \nExpandBar / ExpandItem to see why I was getting the NullPointerException.\n\nIt appears that ExpandBar.createWidget() is not being called, thus the \nExpandItem[] items is not being instantiated. When items.length is \naccessed in createItem() it throws the NullPointerException.\n\nIf I called createWidget() if items\u003d\u003dnull, then it gets a little further \nbefore throwing an IllegalAccessError in setControl() in ExpandItem.\n\nIt\u0027s odd, it\u0027s almost as if the Widget superclass wasn\u0027t in the same\npackage, hence the IllegalAccessError when calling methods in Widget.\n\nI also won\u0027t ignore the possibility that I\u0027m doing it all wrong :) \n\n\n\nAnd the IllegalAccessError that was new since M5:\n\nException in thread \"main\" java.lang.IllegalAccessError: \norg/eclipse/swt/widgets/Widget.isValidSubclass()Z\nat org.eclipse.swt.widgets.ExpandBar.checkSubClass(Unknown Source)\nat org.eclipse.swt.widgets.Widget.\u003cinit\u003e(Unknown Source)\nat org.eclipse.swt.widgets.Control.\u003cinit\u003e(Unknown Source)\nat org.eclipse.swt.widgets.ExpandBar.\u003cinit\u003e(Unknown Source)\nat exp.ExpandBarExperiment.main(Unknown Source) \n\n\nOther information: We\u0027re developing using Eclipse on Mac OS X. We have no\nproblems running test applications like the above on Mac OS X using the \nversion of SWT available for Mac OS X. Thus we are using an unmodified\nPocketPC DLL (build 3227) on the PDAs, even when building our own swt.jar.",
    "I don\u0027t understand how you do it. Develop WinCE app using Mac OS X.\nThat is how to build my swt.jar\n1. I run eclipse on windows\n2. I load org.eclipse.swt from cvs dev.eclipse.org\n3. I rename .classpath_win32 to .classpath\n4. I select the folders\nEclipse SWT/win32\nEclipse SWT/common\nEclipse SWT/common_j2se\nEclipse SWT PI/win32\nEclipse SWT PI/common_j2se\n5. I export them as jar (swt.jar) to my wince device\n6. Load org.eclipse.swt.win32.wce_ppc.arm from dev.eclipse.org\n7. export swt-win32-3227.dll to the device\n8. Run app using swt.jar and swt-win32-3227.dll \n\nI guess you can do exactly the same on mac.\n",
    "(In reply to comment #1)\n\u003e I don\u0027t understand how you do it. Develop WinCE app using Mac OS X.\n\nThe development of this application was a surprise to us all! So we\u0027ve got Macs, so we\u0027ll use them...\n\nI just wish Java was a bit quicker on these machines.\n\n\u003e That is how to build my swt.jar\n\u003e 1. I run eclipse on windows\n\u003e 2. I load org.eclipse.swt from cvs dev.eclipse.org\n\u003e 3. I rename .classpath_win32 to .classpath\n\u003e 4. I select the folders\n\u003e Eclipse SWT/win32\n\u003e Eclipse SWT/common\n\u003e Eclipse SWT/common_j2se\n\u003e Eclipse SWT PI/win32\n\u003e Eclipse SWT PI/common_j2se\n\u003e 5. I export them as jar (swt.jar) to my wince device\n\u003e 6. Load org.eclipse.swt.win32.wce_ppc.arm from dev.eclipse.org\n\u003e 7. export swt-win32-3227.dll to the device\n\u003e 8. Run app using swt.jar and swt-win32-3227.dll \n\u003e \n\u003e I guess you can do exactly the same on mac.\n\nYes, that\u0027s exactly what we\u0027re doing. Other GUI components work fine, it is just happening to the ExpandBar/ExpandItem.\n\nHang on, I\u0027m using .classpath_win32_j2me - could that explain it all? I\u0027ll try with using .classpath_win32 only.\n\nOkay, tested. The same error occurs when using .classpath_win32 as .classpath_win32_j2me",
    "We\u0027re trying something else at the moment, it might be that swt wasn\u0027t updated correctly in ppro-ui.jar so a new build of swt is trying to use the wrong swt classes embedded in that jar file."
  ],
  "commentCreationDates": [
    "2006-03-09T12:31:24+01:00",
    "2006-03-09T17:16:31+01:00",
    "2006-03-09T18:28:05+01:00",
    "2006-03-09T20:07:09+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalAccessError",
      "message": "org/eclipse/swt/widgets/Widget.isValidSubclass()Z",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.ExpandBar.checkSubClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.swt.widgets.ExpandBar.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "exp.ExpandBarExperiment.main",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "131071",
      "date": "2006-03-09T12:31:24+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "131071",
  "bugId": "131071",
  "date": "2006-03-09T12:31:24+01:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}