{
  "comments": [
    "The following error now occurs for my project when weaving into Tomcat 5.5.7 \nwith a Sun 1.5.0_02 VM  This used to work (with the branch code), and it works \nfine with JRockIt 1.5.0_02:\n\nFound one Java-level deadlock:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\"http-8080-Processor25\":\n  waiting to lock monitor 0x009590d4 (object 0x051a2f68, a \njava.util.WeakHashMap\n),\n  which is held by \"main\"\n\"main\":\n  waiting to lock monitor 0x00959074 (object 0x052e9188, a \norg.apache.catalina.l\noader.StandardClassLoader),\n  which is held by \"http-8080-Processor25\"\n\nJava stack information for the threads listed above:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\"http-8080-Processor25\":\n        at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Aj.java:79)\n        - waiting to lock \u003c0x051a2f68\u003e (a java.util.WeakHashMap)\n        at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:55)\n        at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform\n(C\nlassPreProcessorAgentAdapter.java:52)\n        at sun.instrument.TransformerManager.transform\n(TransformerManager.java:1\n22)\n        at sun.instrument.InstrumentationImpl.transform\n(InstrumentationImpl.java\n:155)\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n        at java.security.SecureClassLoader.defineClass\n(SecureClassLoader.java:12\n4)\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n        at java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n        - locked \u003c0x052e9188\u003e (a \norg.apache.catalina.loader.StandardClassLoader)\n\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n        - locked \u003c0x052e9188\u003e (a \norg.apache.catalina.loader.StandardClassLoader)\n\n        at org.apache.tomcat.util.collections.MultiMap.\u003cinit\u003e(MultiMap.java:52)\n        at org.apache.tomcat.util.http.Parameters.\u003cinit\u003e(Parameters.java:71)\n        at org.apache.coyote.Request.\u003cinit\u003e(Request.java:140)\n        at org.apache.coyote.http11.Http11Processor.\u003cinit\u003e\n(Http11Processor.java:\n86)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.init\n(\nHttp11Protocol.java:683)\n        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.getInitData\n(Lea\nderFollowerWorkerThread.java:48)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadP\nool.java:673)\n        at java.lang.Thread.run(Thread.java:595)\n\"main\":\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:295)\n        - waiting to lock \u003c0x052e9188\u003e (a \norg.apache.catalina.loader.StandardCla\nssLoader)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n        at org.xml.sax.helpers.NewInstance.newInstance(NewInstance.java:49)\n        at org.xml.sax.helpers.XMLReaderFactory.loadClass\n(XMLReaderFactory.java:\n187)\n        at org.xml.sax.helpers.XMLReaderFactory.createXMLReader\n(XMLReaderFactory\n.java:150)\n        at org.aspectj.weaver.loadtime.definition.DocumentParser.parse\n(DocumentP\narser.java:80)\n        at \norg.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.registerDefinit\nions(ClassLoaderWeavingAdaptor.java:124)\n        at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.\u003cinit\u003e\n(ClassLoa\nderWeavingAdaptor.java:96)\n        at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Aj.java:81)\n        - locked \u003c0x051a2f68\u003e (a java.util.WeakHashMap)\n        at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:55)\n        at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform\n(C\nlassPreProcessorAgentAdapter.java:52)\n        at sun.instrument.TransformerManager.transform\n(TransformerManager.java:1\n22)\n        at sun.instrument.InstrumentationImpl.transform\n(InstrumentationImpl.java\n:155)\n        at sun.misc.Unsafe.defineClass(Native Method)\n        at sun.reflect.ClassDefiner.defineClass(ClassDefiner.java:45)\n        at sun.reflect.MethodAccessorGenerator$1.run\n(MethodAccessorGenerator.jav\na:381)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at sun.reflect.MethodAccessorGenerator.generate\n(MethodAccessorGenerator.\njava:377)\n        at sun.reflect.MethodAccessorGenerator.generateMethod\n(MethodAccessorGene\nrator.java:59)\n        at sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.\njava:28)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAcces\nsorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.commons.modeler.BaseModelMBean.invoke\n(BaseModelMBean.java:\n503)\n        at com.sun.jmx.mbeanserver.DynamicMetaDataImpl.invoke\n(DynamicMetaDataImp\nl.java:213)\n        at com.sun.jmx.mbeanserver.MetaDataImpl.invoke(MetaDataImpl.java:220)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke\n(DefaultM\nBeanServerInterceptor.java:815)\n        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke\n(JmxMBeanServer.java:784\n)\n        at org.apache.catalina.connector.MapperListener.registerWrapper\n(MapperLi\nstener.java:487)\n        at org.apache.catalina.connector.MapperListener.init\n(MapperListener.java\n:140)\n        at org.apache.catalina.connector.Connector.start(Connector.java:1011)\n        at org.apache.catalina.core.StandardService.start\n(StandardService.java:4\n59)\n        - locked \u003c0x05f04b78\u003e (a [Lorg.apache.catalina.connector.Connector;)\n        at org.apache.catalina.core.StandardServer.start\n(StandardServer.java:683\n)\n        - locked \u003c0x05fe7210\u003e (a [Lorg.apache.catalina.Service;)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:537)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.\njava:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAcces\nsorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)\n\nFound 1 deadlock.",
    "Created an attachment (id\u003d23048)\nthread dump (clean EOL)\n",
    "from the dump:\n\nThread-main is starting its job and some reflective invocation leads to creation\nof JDK proxy that leads to Sun Unsafe.defineClass(...) (explicit class load)\nThis call goes into the VM, and then back in the JVMTI AJ agent that then locks\nthe AJ aop.xml \"definition\" repository.\nThe defining ClassLoader is not locked by Sun Unsafe stuff.\n\nAt some point Thread-x has been started. During its execution this one triggers\nimplicit class load. This ones goes in the JDK ClassLaoder.loadClass that locks\nthe defining ClassLoader.\nThis one then reach the JVMTI agent and waits for the AJ repository.\n\nTwo locks have been obtained in 2 different order hence the deadlock.\n-----\n\nI think I can fix that by enforcing a manual (synchronized(laoder) {}) before\nlocking the AJ repository but that s really BAD.\nI think the issue comes from Unsafe that happens to be broken since it does goes\nto JVMTI without locking the loader.\n\nMy assumption is that this should be a SUN JDK bug, easily reproduced outside of\nAJ (write a JVMTI agent, write a main that forks a thread that keeps working\n(say do Class.forName() given a long list of stuff from some jar)), and in the\nmain (after thread fork) call some stuff to gen a proxy and go into the agent\nthru Sun Unsafe.defineClass.\nIn the agent then lock on whatever object you like. You \u0027ll get the deadlock.\n\nJVMTI does not say \"don\u0027t lock anything\" (else give me the link and the quote)\nso this is Sun bug.\nGoing fine in JRockit is another evidence I guess.\nIn the branch you can perhaps check but perhaps I was not locking the repository\n(which is not safe).\n\ncomments ?",
    "I\u0027m willing to believe this is a Sun JVMTI implementation bug, but I think \nit\u0027s really important that AspectJ continue to work-around bugs in the Sun \nVMs. Even if Sun fixes this in a future release, it\u0027s still important to \nsupport the leading VM, bugs and all.\n\nI\u0027m guessing that I didn\u0027t see this bug earlier because you weren\u0027t locking \nthe repository in an earlier release?\n\nWould the work-around add a risk of other deadlocks? Would it materially harm \nperformance?",
    "You perhaps can try and check.\nI don\u0027t want a workaround in the long run.\n\nIt would be interesting to see what is in the Sun bug database and if you find\nsomething link the Sun bug here.\n\n",
    "I was going to try the work around but the latest version in CVS head is \ngiving me a verify error. I\u0027m assuming that it\u0027s just an instability in the \nrun up to M3 (since other things from the CVS HEAD version are causing me \nproblems too), and I\u0027ll wait until things are a little more stable to try \nagain.",
    "I am not aware of such a verify error\n\nPlease report a bug so that we can reproduce, track and fix (or refer to it if\nyou know it is a known bug)",
    "I was able to get everything to build \u0026 run today (*), and your proposed work-\naround fixes the problem on a Sun 1.5.0_02 JVM. The resulting code continues \nto work on JRockIt 1.5.0_02. I think integrating the workaround into HEAD \nwould make sense. Perhaps if Sun fixes this issue, it could be included only \non the specific VM\u0027s with the problem.\n\nI made this one change to CVS HEAD:\n\nStarting at Aj.java:76\n        static WeavingAdaptor getWeaver(ClassLoader loader) {\n        \tsynchronized (loader) {\n\t            synchronized (weavingAdaptors) {\n...\n                    }\n                }\n        }\n\n\n(*) Either the verify error was caused by my not seeing error output from ant \n(a bug I just submitted) or one of the changes checked in today fixed it for \nme.",
    "ok patch is in cvs\nlet the issue open, to see how it goes\n(ie M3 will ship with this hack hence assigned to M4)",
    "raising to P2",
    "see 109334 that is a consequence of the horrible hack here\n\nonly option is to fine a Sun 1.5 VM that has not the JSR 163 bug and only\nsupport this one and more recent ones.",
    "Ron please comment\n\nI can\u0027t reproduce it from a simpler agent to post a Sun bug report.\nThat said perhaps we can avoid this by having a postInit() method that is called\nafter the synchrnoized block, or by having a doNothingWeavingAdaptor() as long\nas we are in the middle of initializing the adaptor - to avoid this kind of\nreentrancy. ie:\n\nstatic WeavingAdaptor getWeaver(ClassLoader loader, IWeavingContext\nweavingContext) {\n synchronized (weavingAdaptors) {\n    weavingAdaptor \u003d (WeavingAdaptor) weavingAdaptors.get(loader);\n    if (weavingAdaptor \u003d\u003d null) {\n        weavingAdaptor \u003d new ClassLoaderWeavingAdaptor(loader, weavingContext);\n        weavingAdaptors.put(loader, weavingAdaptor);\n    }\n  }\n  // (extract local variable to make this compile off course)\n  weavingAdaptor.postInit();//method to add, that does what \u003cinit\u003e does right now\n  // and that has a boolean like \"isInit\" to avoid multiple initialization\n\n  // this call will trigger nested classloading but that should be fine.\n  return weavingAdaptor;\n}\n\n\nthis would ensure that no nested loading is done while lock is held.\n\n\n\nRon - can you send me detailled instructions / war on how to reproduce that with\na Tomcat 5.x? so that I can fix it once for all?",
    "I think it would be great to move the initialization out of the synchronized \nblock. Clearly this helps if you load resources from different classloaders. \nBut if you are loading a resource from the same classloader, in the middle of \ninitialization, how will you handle this? Obviously this would still be a big \nimprovement.\n\nYou can download a buildable project that reproduces the problem (the pre-built \njar is of course tied to a specific AspectJ compiler pre-M4 at this stage) from \nthe glassbox inspector open source project: https://glassbox-\ninspector.dev.java.net/servlets/ProjectDocumentList?\nfolderID\u003d4064\u0026expandFolder\u003d4064\u0026folderID\u003d0. If you put the inspector jar in %\nTOMCAT_HOME$\\shared\\lib then Tomcat locks up. I don\u0027t believe it depends on any \napplications being installed other than the standard pre-installed ones.",
    "Naturally, if you do the refactoring to pull the init code out, I\u0027d be glad to \ntest it out.",
    "D:\\\u003eecho %JAVA_HOME%\nD:\\java\\jdk1.5.0_03\n(ie Sun VM)\nTomcat 5.5, windows\ndrop the jars as you said in shared/lib\nchanged the script as described in readme\n\nI can see message like\nlog4j:WARN No appenders could be found for logger (glassbox.inspector.config.Sim\npleConfig).\nlog4j:WARN Please initialize the log4j system properly.\nSo GlassBox is in. So far so good.\n\nBut HelloWorld JSP or Servlet OOT with Tomcat don\u0027t deadlock.\nPlease detail where I should click to have the deadlock.",
    "Interesting. It must be loading an application on startup that causes the \nproblem. I have attached a war file from a version of the jpetstore that should \njust cause it on start-up with no user interaction. You _might_ need to \nconfigure a database for this to happen, but I bet not.",
    "Bugzilla won\u0027t accept the war file. I tried to send to you by email Alex. If \nthat doesn\u0027t work please let me know \u0026 I\u0027ll ftp it somewhere for you.",
    "got the war thru email - thx.\n\ndeployed in Tomcat, restart Tomcat\ncan see Glassbox jmx message\nall startup sequence completes just fine\n\ngo to /jpetstore/\ncan see the home page\nclick on \"enter the shop\"\ngot exceptions due to jdbc driver not there\nstill no deadlock\n\n- if you want I can commit the refactoring of AJ and you can rebuild it from a\ncvs update and see what happens then.",
    "Gak. That\u0027s weird, I and others have predictably seen this deadlock running in \nthe Tomcat environment. I wonder what\u0027s different. Maybe just unrelated chnges \nin AspectJ are affecting a race condition?\n\nPlease do check in the refactored change and I\u0027ll rebuild, then try first \nstraight the M4 version to see if I still see it on a Sun VM and then the \nrefactored change. ",
    "I am sorry I mispoke. You need to deploy the inspector to common/lib so it \naffects Tomcat itself! It works just fine in shared/lib (we changed the install \ndocs to workaround this bug!!). Can you try that. You shouldn\u0027t even need the \njpetstore.",
    "ok can reproduce\n\nwith my patch it seems to startup fine now but I have BCException as I am using\na newer version of a weaver milestone\n\njust commited a fix in CVS, module \"loadtime\" (Aj, ClassLoaderWeavingAdaptor .java)\ncan you rebuild AJ and give it a try?",
    "This now runs unbelievably slowly on my machine and finally exhausts resources. \nIt has the CPU pegged and after running about 20x as long I get these messages. \nI think it\u0027s in an infinite loop initializing somehow. I will attach the \nexception that finally occurs and a thread dump 30 seconds after startup\n\nIt seems to be incredibly slow reading in the aspects: you can\u0027t build up an \naspect string byte by byte like this?! I optimized this by using a StringBuffer \nand it seems much faster and it didn\u0027t run out of memory as before. Now I too \nsee BCException even though I did a rebuild. I will investigate this more. See \nattached patch that improved startup performance by 2 orders of magnitude...\n\nAlso, is it safe to have a race in initializing the classloader (e.g., on \nJRockit where the loader isn\u0027t locked?) Also, you should rename \nExplicitlyInitializedClassLaoderWeavingAdaptor to fix a typo - it says LAODER \nnot loader...\n\nException:\nMessage: error problem loading XlintDefault.properties, oversubscribed dynamic b\nit lengths tree\norg.aspectj.bridge.AbortException: problem loading XlintDefault.properties, over\nsubscribed dynamic bit lengths tree\n        at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHandler.\nhandleMessage(WeavingAdaptor.java:318)\n        at org.aspectj.bridge.MessageUtil.error(MessageUtil.java:80)\n        at org.aspectj.weaver.Lint.loadDefaultProperties(Lint.java:129)\n        at org.aspectj.weaver.tools.WeavingAdaptor.init(WeavingAdaptor.java:144)\n\n        at org.aspectj.weaver.tools.WeavingAdaptor.\u003cinit\u003e(WeavingAdaptor.java:82\n)\n        at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.\u003cinit\u003e(ClassLoa\nderWeavingAdaptor.java:61)\n        at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Aj.java:94)\n        at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65)\n        at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(C\nlassPreProcessorAgentAdapter.java:52)\n        at sun.instrument.TransformerManager.transform(TransformerManager.java:1\n22)\n        at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java\n:155)\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:12\n4)\n        at org.apache.catalina.loader.WebappClassLoader.findClassInternal(Webapp\nClassLoader.java:1629)\n        at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoa\nder.java:850)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoa\nder.java:1299)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoa\nder.java:1181)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n        at java.lang.Class.getDeclaredConstructors0(Native Method)\n        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2328)\n        at java.lang.Class.getConstructor0(Class.java:2640)\n        at java.lang.Class.newInstance0(Class.java:321)\n        at java.lang.Class.newInstance(Class.java:303)\n        at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.\njava:1048)\n        at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:92\n5)\n        at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContex\nt.java:3857)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4\n118)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase\n.java:759)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:73\n9)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)\n\n        at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.ja\nva:589)\n        at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.j\nava:536)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:471\n)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1102)\n        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java\n:311)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Lifecycl\neSupport.java:119)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1020)\n\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442\n)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:4\n50)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:683\n)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:537)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.\njava:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces\nsorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)\n\nFull thread dump Java HotSpot(TM) Client VM (1.5.0_04-b05 mixed mode):\n\n\"Low Memory Detector\" daemon prio\u003d5 tid\u003d0x26d44560 nid\u003d0x1374 runnable [0x000000\n00..0x00000000]\n\n\"CompilerThread0\" daemon prio\u003d10 tid\u003d0x26d5daf0 nid\u003d0x344 waiting on condition [\n0x00000000..0x26f7f6cc]\n\n\"Signal Dispatcher\" daemon prio\u003d10 tid\u003d0x26d2bad8 nid\u003d0x1370 runnable [0x0000000\n0..0x00000000]\n\n\"Finalizer\" daemon prio\u003d9 tid\u003d0x00959230 nid\u003d0xea0 in Object.wait() [0x26cff000.\n.0x26cffa68]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x051907e8\u003e (a java.lang.ref.ReferenceQueue$Lock)\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)\n        - locked \u003c0x051907e8\u003e (a java.lang.ref.ReferenceQueue$Lock)\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\n\n\"Reference Handler\" daemon prio\u003d10 tid\u003d0x00957dd8 nid\u003d0x45c in Object.wait() [0x\n26cbf000..0x26cbfae8]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x05190868\u003e (a java.lang.ref.Reference$Lock)\n        at java.lang.Object.wait(Object.java:474)\n        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\n        - locked \u003c0x05190868\u003e (a java.lang.ref.Reference$Lock)\n\n\"main\" prio\u003d5 tid\u003d0x000365d8 nid\u003d0x3f4 runnable [0x0007e000..0x0007fc3c]\n        at java.lang.String.\u003cinit\u003e(String.java:208)\n        at java.lang.StringBuffer.toString(StringBuffer.java:586)\n        - locked \u003c0x053b84c0\u003e (a java.lang.StringBuffer)\n        at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.readAspect(Clas\nsLoaderWeavingAdaptor.java:425)\n        at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.registerAspects\n(ClassLoaderWeavingAdaptor.java:262)\n        at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.registerDefinit\nions(ClassLoaderWeavingAdaptor.java:157)\n        at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.initialize(Clas\nsLoaderWeavingAdaptor.java:110)\n        at org.aspectj.weaver.loadtime.Aj$ExplicitlyInitializedClassLaoderWeavin\ngAdaptor.initialize(Aj.java:130)\n        at org.aspectj.weaver.loadtime.Aj$ExplicitlyInitializedClassLaoderWeavin\ngAdaptor.getWeavingAdaptor(Aj.java:135)\n        at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Aj.java:100)\n\n        at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65)\n        at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(C\nlassPreProcessorAgentAdapter.java:52)\n        at sun.instrument.TransformerManager.transform(TransformerManager.java:1\n22)\n        at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java\n:155)\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:12\n4)\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n        at java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n        - locked \u003c0x05299ad0\u003e (a org.apache.catalina.loader.StandardClassLoader)\n\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n        at org.apache.catalina.startup.Bootstrap.init(Bootstrap.java:198)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:386)\n\n\"VM Thread\" prio\u003d10 tid\u003d0x0003ef50 nid\u003d0xddc runnable\n\n\"VM Periodic Task Thread\" prio\u003d10 tid\u003d0x26d436c0 nid\u003d0x136c waiting on condition\n\n\n",
    "yes I have seen some weird overload - even when only one thred is working.\nIn readAspect() stuff that is used for binary diff in reweavable mode - as far\nas I understand what has been done in that area, we read stuff bytes by bytes\njust to get sort of a hash.\n\nI\u0027ll check some more what \u0027s happening and will perhaps forward this issue to Andy.\n\n[as a reminder, the test app is in my emails and cannot be attached to the bug\nas it is too big]",
    "readAspect was simplified\nclosing this one"
  ],
  "commentCreationDates": [
    "2005-06-14T01:19:27+02:00",
    "2005-06-14T15:37:43+02:00",
    "2005-06-14T15:46:54+02:00",
    "2005-06-14T23:01:48+02:00",
    "2005-06-15T16:45:14+02:00",
    "2005-07-04T22:11:19+02:00",
    "2005-07-05T10:39:17+02:00",
    "2005-07-05T18:56:46+02:00",
    "2005-07-11T17:10:58+02:00",
    "2005-09-27T11:58:12+02:00",
    "2005-09-28T15:33:13+02:00",
    "2005-10-10T11:04:16+02:00",
    "2005-10-10T18:03:47+02:00",
    "2005-10-10T18:14:41+02:00",
    "2005-10-11T10:23:47+02:00",
    "2005-10-11T12:57:59+02:00",
    "2005-10-11T13:02:05+02:00",
    "2005-10-11T13:20:33+02:00",
    "2005-10-11T13:27:26+02:00",
    "2005-10-11T13:42:20+02:00",
    "2005-10-11T16:40:37+02:00",
    "2005-10-13T12:46:30+02:00",
    "2005-10-14T18:29:36+02:00",
    "2005-10-24T11:35:44+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.bridge.AbortException",
      "message": "problem loading XlintDefault.properties, over subscribed dynamic bit lengths tree",
      "elements": [
        {
          "method": "org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHandler.handleMessage",
          "source": "WeavingAdaptor.java:318"
        },
        {
          "method": "org.aspectj.bridge.MessageUtil.error",
          "source": "MessageUtil.java:80"
        },
        {
          "method": "org.aspectj.weaver.Lint.loadDefaultProperties",
          "source": "Lint.java:129"
        },
        {
          "method": "org.aspectj.weaver.tools.WeavingAdaptor.init",
          "source": "WeavingAdaptor.java:144"
        },
        {
          "method": "org.aspectj.weaver.tools.WeavingAdaptor.\u003cinit\u003e",
          "source": "WeavingAdaptor.java:82 "
        },
        {
          "method": "org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.\u003cinit\u003e",
          "source": "ClassLoa derWeavingAdaptor.java:61"
        },
        {
          "method": "org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver",
          "source": "Aj.java:94"
        },
        {
          "method": "org.aspectj.weaver.loadtime.Aj.preProcess",
          "source": "Aj.java:65"
        },
        {
          "method": "org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform",
          "source": "C lassPreProcessorAgentAdapter.java:52"
        },
        {
          "method": "sun.instrument.TransformerManager.transform",
          "source": "TransformerManager.java:1 22"
        },
        {
          "method": "sun.instrument.InstrumentationImpl.transform",
          "source": "InstrumentationImpl.java :155"
        },
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:620"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:12 4"
        },
        {
          "method": "org.apache.catalina.loader.WebappClassLoader.findClassInternal",
          "source": "Webapp ClassLoader.java:1629"
        },
        {
          "method": "org.apache.catalina.loader.WebappClassLoader.findClass",
          "source": "WebappClassLoa der.java:850"
        },
        {
          "method": "org.apache.catalina.loader.WebappClassLoader.loadClass",
          "source": "WebappClassLoa der.java:1299"
        },
        {
          "method": "org.apache.catalina.loader.WebappClassLoader.loadClass",
          "source": "WebappClassLoa der.java:1181"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        },
        {
          "method": "java.lang.Class.getDeclaredConstructors0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.privateGetDeclaredConstructors",
          "source": "Class.java:2328"
        },
        {
          "method": "java.lang.Class.getConstructor0",
          "source": "Class.java:2640"
        },
        {
          "method": "java.lang.Class.newInstance0",
          "source": "Class.java:321"
        },
        {
          "method": "java.lang.Class.newInstance",
          "source": "Class.java:303"
        },
        {
          "method": "org.apache.catalina.core.StandardWrapper.loadServlet",
          "source": "StandardWrapper. java:1048"
        },
        {
          "method": "org.apache.catalina.core.StandardWrapper.load",
          "source": "StandardWrapper.java:92 5"
        },
        {
          "method": "org.apache.catalina.core.StandardContext.loadOnStartup",
          "source": "StandardContex t.java:3857"
        },
        {
          "method": "org.apache.catalina.core.StandardContext.start",
          "source": "StandardContext.java:4 118"
        },
        {
          "method": "org.apache.catalina.core.ContainerBase.addChildInternal",
          "source": "ContainerBase .java:759"
        },
        {
          "method": "org.apache.catalina.core.ContainerBase.addChild",
          "source": "ContainerBase.java:73 9"
        },
        {
          "method": "org.apache.catalina.core.StandardHost.addChild",
          "source": "StandardHost.java:524"
        },
        {
          "method": "org.apache.catalina.startup.HostConfig.deployDescriptor",
          "source": "HostConfig.ja va:589"
        },
        {
          "method": "org.apache.catalina.startup.HostConfig.deployDescriptors",
          "source": "HostConfig.j ava:536"
        },
        {
          "method": "org.apache.catalina.startup.HostConfig.deployApps",
          "source": "HostConfig.java:471 "
        },
        {
          "method": "org.apache.catalina.startup.HostConfig.start",
          "source": "HostConfig.java:1102"
        },
        {
          "method": "org.apache.catalina.startup.HostConfig.lifecycleEvent",
          "source": "HostConfig.java :311"
        },
        {
          "method": "org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent",
          "source": "Lifecycl eSupport.java:119"
        },
        {
          "method": "org.apache.catalina.core.ContainerBase.start",
          "source": "ContainerBase.java:1020"
        },
        {
          "method": "org.apache.catalina.core.StandardHost.start",
          "source": "StandardHost.java:718"
        },
        {
          "method": "org.apache.catalina.core.ContainerBase.start",
          "source": "ContainerBase.java:1012"
        },
        {
          "method": "org.apache.catalina.core.StandardEngine.start",
          "source": "StandardEngine.java:442 "
        },
        {
          "method": "org.apache.catalina.core.StandardService.start",
          "source": "StandardService.java:4 50"
        },
        {
          "method": "org.apache.catalina.core.StandardServer.start",
          "source": "StandardServer.java:683 "
        },
        {
          "method": "org.apache.catalina.startup.Catalina.start",
          "source": "Catalina.java:537"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl. java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAcces sorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.apache.catalina.startup.Bootstrap.start",
          "source": "Bootstrap.java:271"
        },
        {
          "method": "org.apache.catalina.startup.Bootstrap.main",
          "source": "Bootstrap.java:409"
        }
      ],
      "number": 0,
      "commentIndex": 21,
      "bugId": "99861",
      "date": "2005-10-13T12:46:30+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "99861",
  "bugId": "99861",
  "date": "2005-06-14T01:19:27+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}