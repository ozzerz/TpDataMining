{
  "comments": [
    "The Agent Controller on linux 32 is not releasing Shared memory when a process being profiler is terminated. When the max available shared memory is exhausted any profiling on the AC instance is not possible. The AC has to be shut down and the shared memory manually deleted. This is an annoyance.\n\nTo recreate the bug\na) Profile a Eclipse workbench using the JVMTI profiler on Linux 32\nb) Terminate the workbench. Repeat this a few times.\nc) Check for the number of shared mem segments used by doing ipcs\nd) On a 1G RAM machine and with the default shared mem alloc of 64K, the AC Stops servicing requests after about 10 process terminations.\n\nThe shared memory must be cleaned when the process terminates by the AC.",
    "Additionally, while this is not blocking i2 testing since I am able to get about 10 successful launches , it is a blocker for the main release",
    "This defect has a greater impact in i2 than what I have specified in comment #2.\n\nWhen you collect a large amount of Profiling data is collected, subsequent Profiler runs are not successful. So depending on how long you run your profiling session the subsequent runs may or may not succeed.\n\nHow to recreate the issue:\na) Start the AC \nb) Start the i2 driver TPTP runtime, Profile the Eclipse workbench (with the default filters) for a few minutes, terminate the process\nc) Profile the Eclipse workbench again - on my test machine with 1GB RAM - the second run fails.\n\nAdditionally - if you stop the AC\nClean the shared memory ipcrm -m \u003c\u003c\u003e\u003e, restart the AC the first run will succeed again.\nThis behavior is not seen on SLES/SUSE 10.0\n \nCandidate driver for i2.\nOS: Linux 2.4.21-27 (RH AS rel 3 update 4)\nLinux 32\n",
    "Igor, this is blocking i2 testing.  Please investigate",
    "Added sizing",
    "Joanna, I need a 2-3 days to investigate and fix the bug.\nWhat is the dead-line for the 4.4i2?",
    "Igor the deadline for i2 is APril 4th. \nAny progress on this?",
    "Yes, I have a progress in investigating this bug.\nCleaning up of shared memory could be fixed.\nBut it seems that the problem is more wide and is caused by memory leaks.\nI\u0027m going to submit a patch for shared memory tomorrow and a patch fixing some memory leaks on 4th.\n",
    "Created an attachment (id\u003d62777)\nshmem library patch\n\nSamson, to clean up shared memory it is necessary to expose ipcRamboDetach() function.\nPlease review the patch.",
    "Created an attachment (id\u003d62798)\npatch for utils\n\n",
    "Created an attachment (id\u003d62799)\npatch for the base agent\n\n",
    "Created an attachment (id\u003d62800)\npatch for the AC\n\nPatch consists of the three parts: utils, agent and ac.\nIt fixes shared memory cleaning up and some memory leaks.\n",
    "Created an attachment (id\u003d63163)\npatch for the base agent\n\n",
    "Created an attachment (id\u003d63164)\npatch for the AC\n\nAdded processing of abnormal agent termination",
    "Igor - THere are some TPTPUtil exceptions that are raised following this on a multiprocessor machine. I will create a defect for the new one. ",
    "On additional tetsing on both Windows and Linux, on multi-processor and Uni-processor machines - deadlocks are causing the Profiling to hang. \n\nTo recreate this:\nOn WIndows XP Uni-Processor machine: \na) Start JVMTI profiling using the \"Build TPTP-4.4.0-200703270100C\"\nb) Select \"Profile Eclipse Application\" and Navigate to the Monitor tab\nb) Select \"Execution Statistics and in the Edit options --\u003e Select \"Execution Flow with Graphical details\"\nc) Profile\nYou will notice that the profiling session starts and an Eclipse WOrkbench is started as well.\nRepeat the above with \"Build TPTP-4.4.0-200703270100D\" and you will notice that the \"Eclipse WOrkbench that should be started with the Profiling session does not start and hangs indefinitely\".\n",
    "Hi Guru\nI can\u0027t test it since build \"TPTP-4.4.0-200703270100C\" is unavailable.\nWhat build can I use to see a successful profiling session?",
    "As for the build TPTP-4.4.0-200703270100D, I see Eclipse splash screeen and the following exception. So why do you think that profiling issue on Windows is caused by the AC and by the current defect \"Agent Controller shared memory not released on Linux\"?\n\nThe Exception I got:\n\n!SESSION 2007-04-20 18:05:49.920 -----------------------------------------------\neclipse.buildId\u003dI20070323-1616\njava.version\u003d1.5.0_11\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dru_RU\nFramework arguments:  -product org.eclipse.sdk.ide and Settings\\ialeleko\\workspaces\\p/../runtime-New_configuration\u0027 and Settings/ialeleko/workspaces/p/.metadata/.plugins/org.eclipse.pde.core/New_configuration/\u0027 and Settings/ialeleko/workspaces/p/.metadata/.plugins/org.eclipse.pde.core/New_configuration/dev.properties\u0027 -pdelaunch\nCommand-line arguments:  -product org.eclipse.sdk.ide -data \u0027C:\\Documents and Settings\\ialeleko\\workspaces\\p/../runtime-New_configuration\u0027 and Settings/ialeleko/workspaces/p/.metadata/.plugins/org.eclipse.pde.core/New_configuration/\u0027 -dev \u0027file:C:/Documents and Settings/ialeleko/workspaces/p/.metadata/.plugins/org.eclipse.pde.core/New_configuration/dev.properties\u0027 -pdelaunch -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.osgi 4 0 2007-04-20 18:05:57.281\n!MESSAGE Error reading configuration: D:\\net\\eclipse\\\u0027file:C:\\Documents\\org.eclipse.osgi\\.manager\\.fileTableLock (The filename, directory name, or volume label syntax is incorrect)\n!STACK 0\njava.io.FileNotFoundException: D:\\net\\eclipse\\\u0027file:C:\\Documents\\org.eclipse.osgi\\.manager\\.fileTableLock (The filename, directory name, or volume label syntax is incorrect)\n\tat java.io.RandomAccessFile.open(Native Method)\n\tat java.io.RandomAccessFile.\u003cinit\u003e(Unknown Source)\n\tat org.eclipse.core.runtime.internal.adaptor.Locker_JavaNio.lock(Locker_JavaNio.java:30)\n\tat org.eclipse.osgi.storagemanager.StorageManager.lock(StorageManager.java:388)\n\tat org.eclipse.osgi.storagemanager.StorageManager.open(StorageManager.java:695)\n\tat org.eclipse.osgi.internal.baseadaptor.BaseStorage.initFileManager(BaseStorage.java:162)\n\tat org.eclipse.osgi.internal.baseadaptor.BaseStorage.initialize(BaseStorage.java:139)\n\tat org.eclipse.osgi.baseadaptor.BaseAdaptor.initializeStorage(BaseAdaptor.java:124)\n\tat org.eclipse.osgi.framework.internal.core.Framework.initialize(Framework.java:174)\n\tat org.eclipse.osgi.framework.internal.core.Framework.\u003cinit\u003e(Framework.java:147)\n\tat org.eclipse.osgi.framework.internal.core.OSGi.createFramework(OSGi.java:90)\n\tat org.eclipse.osgi.framework.internal.core.OSGi.\u003cinit\u003e(OSGi.java:31)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:279)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:167)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:476)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:416)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1141)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1116)\n\tat org.eclipse.core.launcher.Main.main(Main.java:24)\njava.io.FileNotFoundException: D:\\net\\eclipse\\\u0027file:C:\\Documents\\config.ini (The filename, directory name, or volume label syntax is incorrect)\n",
    "Hi Igor,\n\nSuch exception is thrown when profiling is started on the workspace whose path contains spaces. See the bug 178916.",
    "Hi Guru,\nProfiling on Windows shows:\n- Java application is profiled without problems.\n\n- Eclipse profiling with memory analysis: java is launched and gives the excetion: \nException in thread \"main\" java.lang.VerifyError: (class: org/eclipse/equinox/launcher/Main, method: setSecurityPolicy signature: ([Ljava/net/URL;)V) Expecting to find object/array on stack\n\tat org.eclipse.core.launcher.Main.main(Main.java:24)\n\n- Eclipse profiling with Execution Time Analysis: java is lanched, workbench profiling view is opened, no target eclipse appears, profiling is going on..\n\nSo, I see that AC launches java profiling without problems and profiling issue could be in JVMTI agent and Eclipse.\n\nGuru, I\u0027m going to close this bug since I don\u0027t see why shared memory on Linux could cause this deffect on Windows.\n",
    "Igor - the last time I tested it looked good on WIndows. But on Linux the shared mem was still not released",
    "(In reply to comment #20)\n\u003e Igor - the last time I tested it looked good on WIndows. But on Linux the\n\u003e shared mem was still not released\n\nHi Guru, \n\nWhat test case did you use?\nHow many unreleased segments did you see?\nDoes the patch improve situation?\nIs this problem steel a blocker?\n\nIf AC abnormally terminates there are no means to release allocated shared memory segments. Current code (1) releases memory when it becomes unused, (2) is able to repeatedly use old unrelesed memory segments, so unreleased segments aren\u0027t a problem. (3) The patch fixes memory issues in the main scenario of using AC. It doesn\u0027t affect Backward comp. layer which also allocates shared memory.\n",
    "The problem is much less obvious than before. I do not have the data on the number of segments still pending to be cleared.\n\nI am okay to have this as a major and have this addressed in i4",
    "Lowering the defect.",
    "Guru,\nplease supply a use case and an additional info how many segments remain unreleased - output of \"ipcs -m\" command before and after your use case.",
    "Guru, any update please?",
    "Resolving the defect since shared memory improved with #184876 got fixed.\nGuru, please reopen if your have an additional info."
  ],
  "commentCreationDates": [
    "2007-03-28T20:45:30+02:00",
    "2007-03-28T20:46:45+02:00",
    "2007-03-29T20:40:22+02:00",
    "2007-03-29T22:13:36+02:00",
    "2007-03-30T07:08:07+02:00",
    "2007-03-30T07:31:54+02:00",
    "2007-04-02T18:06:35+02:00",
    "2007-04-02T20:19:13+02:00",
    "2007-04-03T16:13:12+02:00",
    "2007-04-03T18:13:25+02:00",
    "2007-04-03T18:14:25+02:00",
    "2007-04-03T18:16:21+02:00",
    "2007-04-06T13:40:54+02:00",
    "2007-04-06T13:42:21+02:00",
    "2007-04-11T16:19:55+02:00",
    "2007-04-12T23:05:15+02:00",
    "2007-04-20T15:59:14+02:00",
    "2007-04-20T16:11:20+02:00",
    "2007-04-23T05:57:04+02:00",
    "2007-04-27T12:24:25+02:00",
    "2007-04-27T19:05:14+02:00",
    "2007-04-28T11:40:51+02:00",
    "2007-04-30T07:22:15+02:00",
    "2007-05-02T16:25:00+02:00",
    "2007-05-21T11:30:59+02:00",
    "2007-05-24T15:23:23+02:00",
    "2007-05-31T07:29:28+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "D:\\net\\eclipse\\\u0027file:C:\\Documents\\org.eclipse.osgi\\.manager\\.fileTableLock (The filename, directory name, or volume label syntax is incorrect)",
      "elements": [
        {
          "method": "java.io.RandomAccessFile.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.RandomAccessFile.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.Locker_JavaNio.lock",
          "source": "Locker_JavaNio.java:30"
        },
        {
          "method": "org.eclipse.osgi.storagemanager.StorageManager.lock",
          "source": "StorageManager.java:388"
        },
        {
          "method": "org.eclipse.osgi.storagemanager.StorageManager.open",
          "source": "StorageManager.java:695"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.BaseStorage.initFileManager",
          "source": "BaseStorage.java:162"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.BaseStorage.initialize",
          "source": "BaseStorage.java:139"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.BaseAdaptor.initializeStorage",
          "source": "BaseAdaptor.java:124"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.initialize",
          "source": "Framework.java:174"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.\u003cinit\u003e",
          "source": "Framework.java:147"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.OSGi.createFramework",
          "source": "OSGi.java:90"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.OSGi.\u003cinit\u003e",
          "source": "OSGi.java:31"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.startup",
          "source": "EclipseStarter.java:279"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:167"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:476"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:416"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1141"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1116"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:24"
        }
      ],
      "number": 0,
      "commentIndex": 17,
      "bugId": "179814",
      "date": "2007-04-20T16:11:20+02:00",
      "product": "TPTP Agent Controller",
      "component": "Platform.Collection",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: org/eclipse/equinox/launcher/Main, method: setSecurityPolicy signature: ([Ljava/net/URL;)V) Expecting to find object/array on stack",
      "elements": [
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:24"
        }
      ],
      "number": 1,
      "commentIndex": 19,
      "bugId": "179814",
      "date": "2007-04-27T12:24:25+02:00",
      "product": "TPTP Agent Controller",
      "component": "Platform.Collection",
      "severity": "major"
    }
  ],
  "groupId": "179814",
  "bugId": "179814",
  "date": "2007-03-28T20:45:30+02:00",
  "product": "TPTP Agent Controller",
  "component": "Platform.Collection",
  "severity": "major"
}