{
  "comments": [
    "In our environment, we need to use a URLClassLoader to load EMF, JEM and even WTP classes while generating code. With WTP 1.0.x, this worked fine. In WTP 1.5.1, I now get:\n\n  Error: org.eclipse.jst.common.internal.annotations.core.AnnotationsTranslator incompatible with org.eclipse.wst.common.internal.emf.resource.Translator\n      java.lang.ClassCastException: org.eclipse.jst.common.internal.annotations.core.AnnotationsTranslator incompatible with org.eclipse.wst.common.internal.emf.resource.Translator\n      at org.eclipse.wst.common.internal.emf.utilities.TranslatorManager$TranslatorDescriptor.createTranslator(TranslatorManager.java:135)\n      at org.eclipse.wst.common.internal.emf.utilities.TranslatorService.getTranslator(TranslatorService.java:89)\n      at org.eclipse.wst.common.internal.emf.utilities.TranslatorService.getTranslators(TranslatorService.java:67)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.initChildTranslators(EMF2DOMAdapterImpl.java:132)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.\u003cinit\u003e(EMF2DOMAdapterImpl.java:98)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.\u003cinit\u003e(EMF2DOMAdapterImpl.java:85)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createRootDOMAdapter(EMF2DOMRenderer.java:134)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTree(EMF2DOMRenderer.java:126)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTreeIfNecessary(EMF2DOMRenderer.java:142)\n      at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doSave(EMF2DOMRenderer.java:88)\n      at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.doSave(TranslatorResourceImpl.java:178)\n      at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:993)\n\nThis prevents our code generation from succeeding. The reason is because TranslatorManager.java:135 does the following:\n\ninstance \u003d (Translator)configElement.createExecutableExtension(CLASSNAME);\n\nwhich results in an instance of a Translator object loaded from the org.eclipse.wst.common.emf plugin being cast to the Translator object that is in a different jar loaded by my URLClassLoader thus resulting in the ClassCastException. In IBM\u0027s view, this is a regression and a hot bug.",
    "There is a simple fix for this.  We can add a classcastexception catch block around the code in TranslatorManager$TranslatorDescriptor.createTranslator.  It is already catching CoreExceptions, we just need to add classcast as well.  This will not adversely affect normal workbench behaviour and it will allow current users who use this code in lightweight manners not to have a regression.",
    "Created an attachment (id\u003d52392)\nProposed patch\n\n",
    "This patch also is required in a non-OSGI environment",
    "\n\n*** This bug has been marked as a duplicate of bug 158825 ***",
    "Hi Chuck, I am holding off on verifying this fix because the proposed patch is not in WTP 153 as of 0206 build.",
    "This is verified"
  ],
  "commentCreationDates": [
    "2006-10-18T23:03:33+02:00",
    "2006-10-20T15:58:53+02:00",
    "2006-10-20T16:02:06+02:00",
    "2006-11-15T20:35:00+01:00",
    "2006-11-27T15:40:42+01:00",
    "2007-02-06T20:58:12+01:00",
    "2007-02-15T18:43:02+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jst.common.internal.annotations.core.AnnotationsTranslator incompatible with org.eclipse.wst.common.internal.emf.resource.Translator",
      "elements": [
        {
          "method": "org.eclipse.wst.common.internal.emf.utilities.TranslatorManager$TranslatorDescriptor.createTranslator",
          "source": "TranslatorManager.java:135"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.utilities.TranslatorService.getTranslator",
          "source": "TranslatorService.java:89"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.utilities.TranslatorService.getTranslators",
          "source": "TranslatorService.java:67"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.initChildTranslators",
          "source": "EMF2DOMAdapterImpl.java:132"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.\u003cinit\u003e",
          "source": "EMF2DOMAdapterImpl.java:98"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.\u003cinit\u003e",
          "source": "EMF2DOMAdapterImpl.java:85"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createRootDOMAdapter",
          "source": "EMF2DOMRenderer.java:134"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTree",
          "source": "EMF2DOMRenderer.java:126"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTreeIfNecessary",
          "source": "EMF2DOMRenderer.java:142"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doSave",
          "source": "EMF2DOMRenderer.java:88"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.doSave",
          "source": "TranslatorResourceImpl.java:178"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.save",
          "source": "ResourceImpl.java:993"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "161478",
      "duplicateId": "158825",
      "date": "2006-10-18T23:03:33+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "major"
    }
  ],
  "groupId": "158825",
  "bugId": "161478",
  "duplicateId": "158825",
  "date": "2006-10-18T23:03:33+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "major"
}