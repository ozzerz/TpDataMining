{
  "comments": [
    "The following stack trace pops up in \u0027Problems view\u0027 in RC2, for a pretty large\nproject. Tried to gradually exclude the problematic files from the classpath,\nbut then usually stuck at another one. One common pattern I found in those\nfiles is anonymous inner classes within constructor calls:\n\ninterface I { void foo(); }\nclass C { I i; C(I i) { this.i \u003d i;} ..... };\nvoid bar() {\n   C c \u003d new C(new I() { void foo() { ....}   });\n}\n \nI didn\u0027t get the error in RC1.\n-----------------------------------\nInternal compiler error\njava.lang.ClassCastException:\norg.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:477)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:465)\n\tat org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:190)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:99)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:43)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:85)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypeFor(BinaryTypeBinding.java:742)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getField(BinaryTypeBinding.java:598)\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.findField(Scope.java:743)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.MethodScope.findField(MethodScope.java:337)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding(BlockScope.java:439)\n\tat\norg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType(QualifiedNameReference.java:840)\n\tat\norg.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:290)\n\tat\norg.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:290)\n\tat\norg.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:290)\n\tat\norg.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:291)\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:829)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:101)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:225)\n\tat\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:415)\n\tat\norg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements(ConstructorDeclaration.java:435)\n\tat\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:393)\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1063)\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1112)\n\tat\norg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:305)\n\tat org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:504)\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329)\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:240)\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:213)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:50)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:213)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:136)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1038)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:775)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1038)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:775)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)\n\tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:139)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:200)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "If you could provide a complete test case even if it is big, it would be great.\n",
    "Getting a test case might be the only way to get it fixed for 3.1.",
    "Lowering severity. It cannot be a blocker without good steps to reproduce at\nthis stage.",
    "Found a case if a project has a large number of source files (\u003e 1000).\n\nIn separate files \u0026 with AbstractImageBuilder.MAX_AT_ONCE set to 1.\n\nclass A  {\n    Object foo(B b) { return b.i; }\n}\nclass B  {\n    I.InnerType i;\n}\ninterface I {\n\tinterface InnerType {}\n}\n\nTurn off auto-builds \u0026 touch both A.java \u0026 I.java, then manually build causes \nthe following stack trace:\n\njava.lang.ClassCastException: o.e.j.i.c.lookup.MemberTypeBinding\n  at o.e.j.i.c.lookup.LookupEnvironment.createBinaryTypeFrom\n(LookupEnvironment.java:476)\n  at o.e.j.i.c.lookup.LookupEnvironment.createBinaryTypeFrom\n(LookupEnvironment.java:465)\n  at o.e.j.i.c.Compiler.accept(Compiler.java:190)\n  at o.e.j.i.c.lookup.LookupEnvironment.askForType(LookupEnvironment.java:99)\n  at o.e.j.i.c.lookup.UnresolvedReferenceBinding.resolve\n(UnresolvedReferenceBinding.java:43)\n  at o.e.j.i.c.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:85)\n  at o.e.j.i.c.lookup.BinaryTypeBinding.resolveTypeFor\n(BinaryTypeBinding.java:742)\n  at o.e.j.i.c.lookup.BinaryTypeBinding.getField(BinaryTypeBinding.java:598)\n  at o.e.j.i.c.lookup.Scope.findField(Scope.java:749)",
    "Fix is to LookupEnvironment.createBinaryType\n\npublic BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, \nPackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction \naccessRestriction) {\n\tBinaryTypeBinding binaryBinding \u003d new BinaryTypeBinding\n(packageBinding, binaryType, this);\n\t\n\t// resolve any array bindings which reference the unresolvedType\n\tReferenceBinding cachedType \u003d packageBinding.getType0\n(binaryBinding.compoundName[binaryBinding.compoundName.length - 1]);\n\tif (cachedType !\u003d null) { // update reference to unresolved binding \nafter having read classfile (knows whether generic for raw conversion)\n\t\tif (cachedType instanceof UnresolvedReferenceBinding) {\n\t\t\t((UnresolvedReferenceBinding) \ncachedType).setResolvedType(binaryBinding, this);\n\t\t} else {\n\t\t\tif (cachedType.isBinaryBinding()) // sanity check... \nat this point the cache should ONLY contain unresolved types\n\t\t\t\treturn (BinaryTypeBinding) cachedType;\n\t\t\t// it is possible with a large number of source files \n(exceeding AbstractImageBuilder.MAX_AT_ONCE) that a member type can be in the \ncache as an UnresolvedType,\n\t\t\t// but because its enclosingType is resolved while its \ncreated (call to BinaryTypeBinding constructor), its replaced with a source \ntype\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpackageBinding.addType(binaryBinding);\n\tsetAccessRestriction(binaryBinding, accessRestriction);\n\tbinaryBinding.cachePartsFrom(binaryType, needFieldsAndMethods);\n\treturn binaryBinding;\n}",
    "*** Bug 99892 has been marked as a duplicate of this bug. ***",
    "Kent isolated it. This issue is a consequence of fix for bug 97108.\nBasically, it needs to get fixed for RC4, since we may have issues on large\nsource workspaces, and it isn\u0027t 1.5 specific.\n\nKent - pls send patch to reporter to assess it fixes the problem; and attach a\nCVS patch. \n\nDirk - can you vote for it ?",
    "Dani - can you vote for it ?",
    "Created an attachment (id\u003d23647)\nPatch to LookupEnvironment\n",
    "One question that will come up is whether its ok to answer null...\n\nIf you check the senders of createBinaryTypeFrom(), you\u0027ll see the return \nvalue is not used or is checked to see if its null.\n\nWe could change the return type of the method, but that would be more a change \nthan is necessary at this point.",
    "I can confirm, that the project I tried to compile under Eclipse 3.1 is pretty \nbig. It is about 4k classes in one source folder.",
    "+1 for 3.1 RC4. Agree with Kent to keep the changes at a minimum at this point.",
    "+1 for RC4.",
    "(In reply to comment #9)\n\u003e Created an attachment (id\u003d23647) [edit]\n\u003e Patch to LookupEnvironment\n\u003e \nGreat news: it does fix it!(at least, I run the patched JDT core with\nself-hosting eclipse, and no stack trace in the Problems view with the same big\nproject).\nAlthough I\u0027ve already spent some time isolating\u0026cleaning the test project before\nI send you as a test case(not really obfuscating,just to calm down boss;),it\nfeels much better this way, thanks!",
    "I relplaced jdt.core jar in my Eclipse 3.1 RC3 with patched one sent by Kent to\nme yesterday and it solved the problem. No more nasty errors in Java Builder.\n\nUnfortunately I got another error \"Error in JDT Core during AST creation\". I\u0027m\ncreating new issue in bugzilla right now. This new error refers other classes\nthan the previous one.\n",
    "Kent - pls provide a regression test",
    "Added IncrementalTests testMemberTypeCollisionWithBinary().\n\nReleased change into HEAD for RC4.",
    "Verified for Build id: I20050624-0010.\n(Checked that the regression test case failed with I20050617-1618, raising a\nproblem similar to the problem which triggered the bug; checked that the same\nregression test case passed with I20050624-0010.)",
    "Verified."
  ],
  "commentCreationDates": [
    "2005-06-17T20:16:34+02:00",
    "2005-06-17T20:42:06+02:00",
    "2005-06-17T20:49:18+02:00",
    "2005-06-21T15:41:36+02:00",
    "2005-06-21T18:52:55+02:00",
    "2005-06-21T18:54:19+02:00",
    "2005-06-21T18:55:58+02:00",
    "2005-06-21T19:31:23+02:00",
    "2005-06-21T19:31:42+02:00",
    "2005-06-21T19:42:27+02:00",
    "2005-06-21T19:47:30+02:00",
    "2005-06-21T20:25:54+02:00",
    "2005-06-21T20:54:00+02:00",
    "2005-06-21T23:29:19+02:00",
    "2005-06-22T01:00:17+02:00",
    "2005-06-22T10:42:45+02:00",
    "2005-06-22T11:25:18+02:00",
    "2005-06-22T17:14:15+02:00",
    "2005-06-24T10:56:26+02:00",
    "2005-06-24T13:44:33+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:477"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:465"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.accept",
          "source": "Compiler.java:190"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:99"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve",
          "source": "UnresolvedReferenceBinding.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType",
          "source": "BinaryTypeBinding.java:85"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypeFor",
          "source": "BinaryTypeBinding.java:742"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getField",
          "source": "BinaryTypeBinding.java:598"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.findField",
          "source": "Scope.java:743"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodScope.findField",
          "source": "MethodScope.java:337"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding",
          "source": "BlockScope.java:439"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType",
          "source": "QualifiedNameReference.java:840"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType",
          "source": "AllocationExpression.java:290"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType",
          "source": "AllocationExpression.java:290"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType",
          "source": "AllocationExpression.java:290"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType",
          "source": "MessageSend.java:291"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:829"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.resolve",
          "source": "Block.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve",
          "source": "IfStatement.java:225"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:415"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements",
          "source": "ConstructorDeclaration.java:435"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:393"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1063"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1112"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:305"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:504"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:329"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:240"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:213"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:50"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:213"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:136"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:593"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1038"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:775"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:202"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:231"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1038"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:775"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:234"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:253"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:282"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:139"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:200"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "100631",
      "date": "2005-06-17T20:16:34+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "o.e.j.i.c.lookup.MemberTypeBinding",
      "elements": [
        {
          "method": "o.e.j.i.c.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:476"
        },
        {
          "method": "o.e.j.i.c.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:465"
        },
        {
          "method": "o.e.j.i.c.Compiler.accept",
          "source": "Compiler.java:190"
        },
        {
          "method": "o.e.j.i.c.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:99"
        },
        {
          "method": "o.e.j.i.c.lookup.UnresolvedReferenceBinding.resolve",
          "source": "UnresolvedReferenceBinding.java:43"
        },
        {
          "method": "o.e.j.i.c.lookup.BinaryTypeBinding.resolveType",
          "source": "BinaryTypeBinding.java:85"
        },
        {
          "method": "o.e.j.i.c.lookup.BinaryTypeBinding.resolveTypeFor",
          "source": "BinaryTypeBinding.java:742"
        },
        {
          "method": "o.e.j.i.c.lookup.BinaryTypeBinding.getField",
          "source": "BinaryTypeBinding.java:598"
        },
        {
          "method": "o.e.j.i.c.lookup.Scope.findField",
          "source": "Scope.java:749"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "100631",
      "date": "2005-06-21T18:52:55+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "100631",
  "bugId": "100631",
  "date": "2005-06-17T20:16:34+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}