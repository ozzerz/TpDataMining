{
  "comments": [
    "It would be great to have an IApplication startup point to allow an ECF server to be brought up at runtime, rather than having to hand-craft an ExtensionRegistry each time.",
    "Created an attachment (id\u003d72903)\nProvides a simple IApplication startup point\n\nUsing this, you can do \u0027apps\u0027 in the console, and run with -application on the command line. You can also do \u0027startApp org.eclipse.ecf.provider.ECFTCPServer 9999 foohost test\u0027 to bring up a server on ecftcp://foohost:9999/test\n\nForgive the obvious coding errors in the ECFTCP stuff ... I was making it up as I went along, so it could certainly use beefing up. However, it sets a good starting point that people could build upon if they wanted.\n\nI\u0027m not sure if the start() of the IApplication should block (the return value has a tendancy of shutting it down) but there might be a better return code/value that could be used instead.\n\nNote that you can also run multiple ECFTCPServers, simply by starting more entries.",
    "Re: \u0027the application service has not been started\u0027 -- I found that I got that message when I ran from the \u0027run as application\u0027 inside Eclipse, but when I ran e.g. a product (org.eclipse.sdk) and launched it from the -console (startApp org.eclipse....) then it worked.\n\nI\u0027m guessing that by default, the -application startup doesn\u0027t bring up a necessary service for the application to work. I noted that if the plugins in the startup aren\u0027t selected on the application service, it doesn\u0027t start. I\u0027m guessing if you select all of them, it will come up.\n\nI\u0027ve not tried from the command-line ...",
    "OK, a bit more success.\n\nIt\u0027s missing a dependency on org.eclipse.core.runtime, which is what starts the application service. Miss that bundle out, and the application service doesn\u0027t start. (I put Require-bundle org.eclipse.core.runtime to get it to work)\n\nHowever, fix that issue and another appears. The PDE launcher adds -pdelaunch to the arguments, yet this isn\u0027t stripped out of the launcher that tries to get rid of this flag. I forget where exactly it is, but there\u0027s something that gets rid of the Eclipse-specific args.\n\nAs a result, the server app does start, but then my code tries to parse -pdelaunch as a number and fails.\n\njava.lang.NumberFormatException: For input string: \"-pdelaunch\"\nat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)\nat java.lang.Integer.parseInt(Integer.java:447)\nat java.lang.Integer.parseInt(Integer.java:497)\nat org.eclipse.ecf.provider.app.ECFTCPServer.start(ECFTCPServer.java:42)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\nat org.eclipse.equinox.internal.app.AnyThreadAppLauncher.run(AnyThreadAppLauncher.java:26)\nat java.lang.Thread.run(Thread.java:613)\n\nYou\u0027ll note it\u0027s in the ECFTCPServer start at this point. If we get it to skip out on args beginning with -, then we\u0027d probably fix it.\n\nOTOH starting from the OSGi console should not have this problem, nor should running as the command line. I\u0027m tempted to blame PDE/Equinox arg parsing for this one.",
    "See also bug 195454 where I\u0027ve raised the issue regarding the -pdelaunch flag being incorrectly supplied to -application launches.",
    "Don\u0027t set it to \u0027main\u0027. If you do that, you can only run one from the -console at a time.",
    "(In reply to comment #5)\n\u003e Don\u0027t set it to \u0027main\u0027. If you do that, you can only run one from the -console\n\u003e at a time.\n\u003e \n\nOK.  Thanks Alex for tracking this down.  I\u0027ll add the necessary check to the ECFTCPServer class (for -pdelaunch param and for other ECF params which I want to add) and test, then checkin.  Shouldn\u0027t be too much of a problem to work around the pdelaunch stuff.\n\nIt\u0027s kind of problematic that using this requires adding dependency on org.eclipse.core.runtime...i.e. why should there be a dependency on org.eclipse.core.runtime if I\u0027m starting a non-eclipse app (?).  Especially since we were just asked to *remove* dependencies on org.eclipse.core.runtime from core plugins (including org.eclipse.ecf.provider) in bug #164890.  Do you know if there is any other way to have this application service started in a timely way?\n\n\n",
    "Agreed that it brings in a lot of crap, but if you have \u0027Import-Package\u0027 on something, it doesn\u0027t bring in the services (since it doesn\u0027t start the package), whereas if you have Require-Bundle, I believe that it does start it.\n\nIt might be better to extract out the ECFTCPServer (and feel free to give it a better name :-) into a fragment, so that only the fragment has dependencies on o.e.c.runtime.\n\nThis seems like it\u0027s going to be a problem for anyone running applications who doesn\u0027t have a dependency on that, and who is using \u0027any\u0027. There\u0027s basically a race condition, and \u0027main\u0027 doesn\u0027t solve it, it just hides it. I\u0027ll raise a separate bug about that, and do some digging to find out what\u0027s going on.",
    "Urgh. This is ugly. The Equinox application launcher basically fails when the thread is \u0027any\u0027. The org.eclipse.core.runtime dependency doesn\u0027t change anything, so it\u0027s not needed. I suspect that the most common case would be to launch a server from a command line, so it might be better to default to \u0027main\u0027 for now. I\u0027ve got some test code which demonstrates the problem ... basically, using \u0027any\u0027 works, but then the Equinox launcher fails to notice that the app has started, and so complains vigourously. You\u0027ll notice that if you launch the app, you can see the output of it running in the Console, but then the framework thinks that it\u0027s not there, and forcefully kills the VM.\n\nI\u0027ll put a new bug report for the equinox launcher, but for now it might be better to run with \u0027main\u0027, since that will solve the goal of getting the app up.",
    "I\u0027ve raised bug 195546 for the issue regarding the thread\u003d\"main\" issue.",
    "(In reply to comment #9)\n\u003e I\u0027ve raised bug 195546 for the issue regarding the thread\u003d\"main\" issue.\n\u003e \n\nThanks Alex.  I\u0027ll leave at thread\u003d\"main\" for the time being and add myself to the bug 195546.  \n\nRE: distribution of this application...sounds like you would prefer a fragment so that this IApplication can be added onto the existing 1.0.0 codebase...is that right?  Otherwise, I\u0027m inclined to have it be in 1.0.1 of ECF along with some other small fixes.\n\nBut do let us know about your inclination here...we\u0027ll do whatever\u0027s needed.",
    "I mentioned a fragment if adding the dependency on org.eclipse.core.runtime was needed, which it looks like it probably isn\u0027t. I think I was chasing a red herring there, owing to 195546. I think including it in ECF 1.0.1 is a reasonable idea. Plus, I\u0027m not sure if you can define any plugin.xml content in the fragment :-) If anyone wants it sooner than that, it shouldn\u0027t be too hard to take the attachment I provided and convert it into a new bundle for their use, or indeed, the same with yours.\n\nCan you start the app with -console, and do \u0027startApp org.eclipse.ecf...ECFTCPServer 1234\u0027 to bring up a 2nd (or 3rd) instance of the server with the thread\u003dmain attribute? That was the thing I was mostly concerned about being able to do.\n",
    "I\u0027ve checked in a new class GenericServer with application id:\n\norg.eclipse.ecf.provider.GenericServer\n\nTo start this server application (with 1.0.1 version of org.eclipse.ecf.provider plugin),\n\neclipse.exe -application org.eclipse.ecf.provider.GenericServer\n\nThis will start a server with hostname\u003dlocalhost, port\u003d3282, groupname\u003dserver...i.e. id\u003decftcp://localhost:3282/server.  The output upon startup looks like this:\n\nPutting server localhost:3282 on the air...\n  Creating container with id\u003decftcp://localhost:3282/server keepAlive\u003d30000\nGenericServer localhost:3282 on the air.\n\nIt\u0027s also possible to provide the port hostname groupname and keepAlive (ms) For example:\n\neclipse.exe -application org.eclipse.ecf.provider.GenericServer 3285 ecf.eclipse.org mygroup 20000\n\nPutting server ecf.eclipse.org:3285 on the air...\n  Creating container with id\u003decftcp://ecf.eclipse.org:3285mygroup keepAlive\u003d20000\nGenericServer ecf.eclipse.org:3285 on the air.\n\nor\n\neclipse.exe -application org.eclipse.ecf.provider.GenericServer 3333\n\nPutting server localhost:3333 on the air...\n  Creating container with id\u003decftcp://localhost:3333/server keepAlive\u003d30000\nGenericServer localhost:3333 on the air.\n\nAnother way to start a number of servers and groups is to create a file with the server configuration...for example:\n\n\u003cserver\u003e\n\t\u003cconnector protocol\u003d\"ecftcp\"  hostname\u003d\"localhost\" port\u003d\"3282\" timeout\u003d\"30000\"\u003e\n\t\t\u003cgroup name\u003d\"server\"/\u003e\n            \u003cgroup name\u003d\"foobar\"/\u003e\n\t\u003c/connector\u003e\n\t\u003cconnector protocol\u003d\"ecftcp\"  hostname\u003d\"localhost\" port\u003d\"3283\" timeout\u003d\"30000\"\u003e\n\t\t\u003cgroup name\u003d\"server\"/\u003e\n            \u003cgroup name\u003d\"foobar\"/\u003e\n\t\u003c/connector\u003e\n\u003c/server\u003e\n\nIf this content is in file ./server.xml\nThen the command line would be:\n\neclipse.exe -application org.eclipse.ecf.provider.GenericServer -config server.xml\n\nAnd the output would be:\n\nPutting server localhost:3282 on the air...\n  Creating container with id\u003decftcp://localhost:3282/server keepAlive\u003d30000\n  Creating container with id\u003decftcp://localhost:3282/foobar keepAlive\u003d30000\nGenericServer localhost:3282 on the air.\nPutting server localhost:3283 on the air...\n  Creating container with id\u003decftcp://localhost:3283/server keepAlive\u003d30000\n  Creating container with id\u003decftcp://localhost:3283/foobar keepAlive\u003d30000\nGenericServer localhost:3283 on the air.\n\n\nThis will be in 1.0.1 release (probably sometime week of July 9).\n\n",
    "Also put instructions for using this in wiki:\n\nhttp://wiki.eclipse.org/ECF_Servers\n\nMarking as resolved.  Not yet released (ETA 7/13/2007 for 1.0.1 release).",
    "IMHO isn\u0027t it more likely that people will want to change the group rather than the host? I.e. wouldn\u0027t swapping the group/host arguments be sensible?\n\nIn addition, does this allow the ECF server to be started as an Eclipse App? For example, you could do:\n\njava -jar org.eclipse.osgi -console -noExit\nosgi\u003e startApp org.eclipse.ecf.provider.GenericServer 1234\nosgi\u003e startApp org.eclipse.ecf.provider.GenericServer 5678\n\nto launch two simultaneously. This is as long as the thread\u003d\"main\u0027 doesn\u0027t get in the way ...",
    "Hi Alex,\n\n(In reply to comment #14)\n\u003e IMHO isn\u0027t it more likely that people will want to change the group rather than\n\u003e the host? I.e. wouldn\u0027t swapping the group/host arguments be sensible?\n\nSure, seems reasonable.  I\u0027ve made the change in the source and updated the docs here:  http://wiki.eclipse.org/ECF_Servers and in the usage/help output for the GenericServer IApplication.\n\n\u003e \n\u003e In addition, does this allow the ECF server to be started as an Eclipse App?\n\u003e For example, you could do:\n\u003e \n\u003e java -jar org.eclipse.osgi -console -noExit\n\u003e osgi\u003e startApp org.eclipse.ecf.provider.GenericServer 1234\n\u003e osgi\u003e startApp org.eclipse.ecf.provider.GenericServer 5678\n\u003e \n\u003e to launch two simultaneously. This is as long as the thread\u003d\"main\u0027 doesn\u0027t get\n\u003e in the way ...\n\u003e \n\nYes, this should work fine.  I haven\u0027t tried it out yet, but have updated the docs.  If you could try this out and let everyone know on this bug it would be appreciated.\n\n",
    "I didn\u0027t have much luck with this. You made the visible\u003d\"false\" flag on the runtime, so I\u0027m not sure if it would even show up. There also seems to be a bug in the application launching code; when you launch an app, it only shows you the applications defined in the bundle whose application is running, so unless you start up with -application ...GenericServer, you won\u0027t even see these application points. I\u0027m not sure if that\u0027s a bug or by design, but it seems a bit of an odd design decision if that\u0027s the case. Will raise another bug for that issue.\n\nAlex.",
    "NB looks like bug 195982 has the answer; put eclipse.application.registerDescriptors\u003dtrue in the startup (system property or config.ini). I\u0027ll check it out with the 1.0.1 later (with my new-and-improved checkout from CVS :-) and report back here; perhaps it\u0027s worth a note on the FAQ page.",
    "(In reply to comment #16)\n\u003e I didn\u0027t have much luck with this. You made the visible\u003d\"false\" flag on the\n\u003e runtime, so I\u0027m not sure if it would even show up. There also seems to be a bug\n\u003e in the application launching code; when you launch an app, it only shows you\n\u003e the applications defined in the bundle whose application is running, so unless\n\u003e you start up with -application ...GenericServer, you won\u0027t even see these\n\u003e application points. I\u0027m not sure if that\u0027s a bug or by design, but it seems a\n\u003e bit of an odd design decision if that\u0027s the case. Will raise another bug for\n\u003e that issue.\n\u003e \n\u003e Alex.\n\u003e \n\nThe visible flag wasn\u0027t set at all in the application declaration previously, I\u0027ve now set it to \u0027true\u0027.\n\n",
    "I\u0027m reopening this because there\u0027s some weird things in the -console case. I\u0027ve tried it with the -application flag (and it\u0027s fine), but from the console, if you do startApp org.eclipse.ecf.provider.Genericserver from the console, it doesn\u0027t print out \"on the air\" and you can\u0027t connect to the given port.\n\nBTW the magic incantation to get a console with multiple starting apps is to get rid of the \u0027eclipse.ignoreApp\u003dtrue\u0027 that PDE insists on applying, and \u0027eclipse.application.registerDescriptors\u003dtrue\u0027. Obviously.\n\nIt\u0027s possible to have 2 application descriptors; one with a \u0027main\u0027 thread, and one with an \u0027any\u0027 thread, pointing to the same class. That way, you can run one from the command line and one from the console if you want. If you have an extra application, it might \n\nCan we add an extra config to allow the console to run on the \u0027any\u0027 thread? It might be a good idea to have the GenericServer start on the \u0027any\u0027 thread, and have GenericServerMain as the \u0027main\u0027 thread. The fix might be in Equinox 3.3.1. Something like this:\n\n   \u003cextension\n         id\u003d\"MainGenericServer\"\n         point\u003d\"org.eclipse.core.runtime.applications\"\u003e\n      \u003capplication\n            cardinality\u003d\"*\"\n            thread\u003d\"main\"\n            visible\u003d\"true\"\u003e\n         \u003crun\n               class\u003d\"org.eclipse.ecf.provider.app.GenericServer\"/\u003e\n      \u003c/application\u003e\n   \u003c/extension\u003e\n   \u003cextension\n         id\u003d\"GenericServer\"\n         point\u003d\"org.eclipse.core.runtime.applications\"\u003e\n      \u003capplication\n            cardinality\u003d\"*\"\n            thread\u003d\"any\"\n            visible\u003d\"true\"\u003e\n         \u003crun\n               class\u003d\"org.eclipse.ecf.provider.app.GenericServer\"/\u003e\n      \u003c/application\u003e\n   \u003c/extension\u003e\n\nNote: there\u0027s another bug where if you have an app which is a substring of another app (e.g. Main, MainOne) then you can\u0027t stop/start the shorter one. So don\u0027t have GenericServer and GenericServerMain :-)",
    "(In reply to comment #19)\n\u003e I\u0027m reopening this because there\u0027s some weird things in the -console case. I\u0027ve\n\u003e tried it with the -application flag (and it\u0027s fine), but from the console, if\n\u003e you do startApp org.eclipse.ecf.provider.Genericserver from the console, it\n\u003e doesn\u0027t print out \"on the air\" and you can\u0027t connect to the given port.\n\u003e \n\u003e BTW the magic incantation to get a console with multiple starting apps is to\n\u003e get rid of the \u0027eclipse.ignoreApp\u003dtrue\u0027 that PDE insists on applying, and\n\u003e \u0027eclipse.application.registerDescriptors\u003dtrue\u0027. Obviously.\n\u003e \n\u003e It\u0027s possible to have 2 application descriptors; one with a \u0027main\u0027 thread, and\n\u003e one with an \u0027any\u0027 thread, pointing to the same class. That way, you can run one\n\u003e from the command line and one from the console if you want. If you have an\n\u003e extra application, it might \n\u003e \n\u003e Can we add an extra config to allow the console to run on the \u0027any\u0027 thread? It\n\u003e might be a good idea to have the GenericServer start on the \u0027any\u0027 thread, and\n\u003e have GenericServerMain as the \u0027main\u0027 thread. The fix might be in Equinox 3.3.1.\n\u003e Something like this:\n\u003e \n\u003e    \u003cextension\n\u003e          id\u003d\"MainGenericServer\"\n\u003e          point\u003d\"org.eclipse.core.runtime.applications\"\u003e\n\u003e       \u003capplication\n\u003e             cardinality\u003d\"*\"\n\u003e             thread\u003d\"main\"\n\u003e             visible\u003d\"true\"\u003e\n\u003e          \u003crun\n\u003e                class\u003d\"org.eclipse.ecf.provider.app.GenericServer\"/\u003e\n\u003e       \u003c/application\u003e\n\u003e    \u003c/extension\u003e\n\u003e    \u003cextension\n\u003e          id\u003d\"GenericServer\"\n\u003e          point\u003d\"org.eclipse.core.runtime.applications\"\u003e\n\u003e       \u003capplication\n\u003e             cardinality\u003d\"*\"\n\u003e             thread\u003d\"any\"\n\u003e             visible\u003d\"true\"\u003e\n\u003e          \u003crun\n\u003e                class\u003d\"org.eclipse.ecf.provider.app.GenericServer\"/\u003e\n\u003e       \u003c/application\u003e\n\u003e    \u003c/extension\u003e\n\u003e \n\u003e Note: there\u0027s another bug where if you have an app which is a substring of\n\u003e another app (e.g. Main, MainOne) then you can\u0027t stop/start the shorter one. So\n\u003e don\u0027t have GenericServer and GenericServerMain :-)\n\u003e \n\nIf you could submit as a patch I\u0027ll apply/test checkin.  Sort of ugly to have two applications, but I guess with current Equinox issues we can\u0027t get around it any other way.  \n\nCould I ask one more thing, Alex?  Could you provide some documentation of the right incantation for here:\n\nhttp://wiki.eclipse.org/ECF_Servers\n\nIf you can\u0027t, that\u0027s fine...I will get to it...but probably have to consult with you as haven\u0027t been able to do the parallel testing.  Thanks.\n",
    "Let me supply a patch and update the wiki, or attach text to this bug.",
    "Created an attachment (id\u003d73492)\nProvides  2 application extension points; AppGenericServer (main) and GenericServer (any)\n\nWe need these 2 separate ones, because the server doesn\u0027t like starting \u0027any\u0027 threads on the main thread in 3.3.0; hopefully, it will be fixed in 3.3.1. The workaround in the meantime is to have 2 app descriptors.",
    "Updated wiki as requested.",
    "(In reply to comment #23)\n\u003e Updated wiki as requested.\n\u003e \n\nThank you kindly Alex...for both the patch and the wiki docs update.\n\nI\u0027ve applied given patch and checked in.  I\u0027ve also updated IP log for project to include this contribution.\n\nI\u0027ll try resolving bug again.",
    "Checked out HEAD, checked out the wiki, added an extra parameter for the wiki ;-)\n\nClosing",
    "I haven\u0027t tried this on Windows but on Linux, I did a fresh install of Eclipse Europa and the ECF plugins from the Europa discovery site. Launched eclipse and confirmed the the ECF functionality was working properly.\n\nI then ran the following command from the command-line:\n\n./eclipse -application org.eclipe.ecf.provider.AppGenericServer \n\nI got the following message in the log file.\n\n!SESSION 2007-07-13 21:25:14.996 -----------------------------------------------\neclipse.buildId\u003dI20070625-1500\njava.version\u003d1.6.0_01\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\nFramework arguments:  -application org.eclipse.ecf.provider.AppGenericServer\nCommand-line arguments:  -os linux -ws gtk -arch x86 -application org.eclipse.ecf.provider.AppGenericServer\n\n!ENTRY org.eclipse.osgi 4 0 2007-07-13 21:25:17.035\n!MESSAGE Application error\n!STACK 1\njava.lang.RuntimeException: Application \"org.eclipse.ecf.provider.AppGenericServer\" could not be found in the registry. The applications available are: org.eclipse.help.base.infocenterApplication, org.eclipse.help.base.helpApplication, org.eclipse.help.base.indexTool, org.eclipse.ui.ide.workbench, org.eclipse.update.core.standaloneUpdate, org.eclipse.update.core.siteOptimizer, org.eclipse.equinox.app.error, org.eclipse.ant.core.antRunner, org.eclipse.ecf.example.clients.chatroomrobot, org.eclipse.ecf.example.clients.chatsorobot, org.eclipse.ecf.example.clients.chatrobot, org.eclipse.ecf.presence.bot.chatRoomRobot, org.eclipse.ecf.presence.bot.imRobot.\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.startDefaultApp(EclipseAppContainer.java:236)\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.start(EclipseAppContainer.java:92)\n\tat org.eclipse.equinox.internal.app.Activator.addingService(Activator.java:129)\n\tat org.osgi.util.tracker.ServiceTracker$Tracked.trackAdding(ServiceTracker.java:1064)\n\tat org.osgi.util.tracker.ServiceTracker$Tracked.track(ServiceTracker.java:1042)\n\tat org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:967)\n\tat org.eclipse.osgi.framework.internal.core.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:94)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1224)\n\tat org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:195)\n\tat org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:141)\n\tat org.eclipse.osgi.framework.internal.core.Framework.publishServiceEventPrivileged(Framework.java:1603)\n\tat org.eclipse.osgi.framework.internal.core.Framework.publishServiceEvent(Framework.java:1578)\n\tat org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.\u003cinit\u003e(ServiceRegistrationImpl.java:103)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.createServiceRegistration(BundleContextImpl.java:657)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:609)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:675)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:359)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n",
    "This bug fix has occurred since the June 29 Europa release, and the Europa update site can\u0027t be updated.\n\nWe will be doing a build and deploy to ECF update site on 7/14/2007 or 7/15/2008 with these changes.  \n\n\n\n\n\n\n(In reply to comment #26)\n\u003e I haven\u0027t tried this on Windows but on Linux, I did a fresh install of Eclipse\n\u003e Europa and the ECF plugins from the Europa discovery site. Launched eclipse and\n\u003e confirmed the the ECF functionality was working properly.\n\u003e \n\u003e I then ran the following command from the command-line:\n\u003e \n\u003e ./eclipse -application org.eclipe.ecf.provider.AppGenericServer \n\u003e \n\u003e I got the following message in the log file.\n\u003e \n\u003e !SESSION 2007-07-13 21:25:14.996\n\u003e -----------------------------------------------\n\u003e eclipse.buildId\u003dI20070625-1500\n\u003e java.version\u003d1.6.0_01\n\u003e java.vendor\u003dSun Microsystems Inc.\n\u003e BootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\n\u003e Framework arguments:  -application org.eclipse.ecf.provider.AppGenericServer\n\u003e Command-line arguments:  -os linux -ws gtk -arch x86 -application\n\u003e org.eclipse.ecf.provider.AppGenericServer\n\u003e \n\u003e !ENTRY org.eclipse.osgi 4 0 2007-07-13 21:25:17.035\n\u003e !MESSAGE Application error\n\u003e !STACK 1\n\u003e java.lang.RuntimeException: Application\n\u003e \"org.eclipse.ecf.provider.AppGenericServer\" could not be found in the registry.\n\u003e The applications available are: org.eclipse.help.base.infocenterApplication,\n\u003e org.eclipse.help.base.helpApplication, org.eclipse.help.base.indexTool,\n\u003e org.eclipse.ui.ide.workbench, org.eclipse.update.core.standaloneUpdate,\n\u003e org.eclipse.update.core.siteOptimizer, org.eclipse.equinox.app.error,\n\u003e org.eclipse.ant.core.antRunner, org.eclipse.ecf.example.clients.chatroomrobot,\n\u003e org.eclipse.ecf.example.clients.chatsorobot,\n\u003e org.eclipse.ecf.example.clients.chatrobot,\n\u003e org.eclipse.ecf.presence.bot.chatRoomRobot,\n\u003e org.eclipse.ecf.presence.bot.imRobot.\n\u003e         at\n\u003e org.eclipse.equinox.internal.app.EclipseAppContainer.startDefaultApp(EclipseAppContainer.java:236)\n\u003e         at\n\u003e org.eclipse.equinox.internal.app.EclipseAppContainer.start(EclipseAppContainer.java:92)\n\u003e         at\n\u003e org.eclipse.equinox.internal.app.Activator.addingService(Activator.java:129)\n\u003e         at\n\u003e org.osgi.util.tracker.ServiceTracker$Tracked.trackAdding(ServiceTracker.java:1064)\n\u003e         at\n\u003e org.osgi.util.tracker.ServiceTracker$Tracked.track(ServiceTracker.java:1042)\n\u003e         at\n\u003e org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:967)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:94)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1224)\n\u003e         at\n\u003e org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:195)\n\u003e         at\n\u003e org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:141)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.Framework.publishServiceEventPrivileged(Framework.java:1603)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.Framework.publishServiceEvent(Framework.java:1578)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.\u003cinit\u003e(ServiceRegistrationImpl.java:103)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.createServiceRegistration(BundleContextImpl.java:657)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:609)\n\u003e         at\n\u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:675)\n\u003e         at\n\u003e org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:359)\n\u003e         at\n\u003e org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\u003e         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e         at\n\u003e sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\u003e         at\n\u003e sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\u003e         at java.lang.reflect.Method.invoke(Method.java:597)\n\u003e         at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\u003e         at org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\u003e         at org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n\u003e \n\n"
  ],
  "commentCreationDates": [
    "2007-07-02T09:55:50+02:00",
    "2007-07-03T00:41:52+02:00",
    "2007-07-04T23:56:34+02:00",
    "2007-07-05T00:28:55+02:00",
    "2007-07-05T00:49:53+02:00",
    "2007-07-05T01:18:57+02:00",
    "2007-07-05T04:56:09+02:00",
    "2007-07-05T09:57:07+02:00",
    "2007-07-05T12:22:31+02:00",
    "2007-07-05T17:56:40+02:00",
    "2007-07-05T18:10:00+02:00",
    "2007-07-05T18:21:35+02:00",
    "2007-07-06T02:01:45+02:00",
    "2007-07-06T02:19:14+02:00",
    "2007-07-06T23:18:18+02:00",
    "2007-07-08T00:01:02+02:00",
    "2007-07-10T14:44:01+02:00",
    "2007-07-10T15:30:27+02:00",
    "2007-07-10T17:09:18+02:00",
    "2007-07-10T22:46:58+02:00",
    "2007-07-10T22:54:35+02:00",
    "2007-07-10T23:01:03+02:00",
    "2007-07-11T01:02:04+02:00",
    "2007-07-11T01:12:33+02:00",
    "2007-07-11T04:46:34+02:00",
    "2007-07-11T23:01:39+02:00",
    "2007-07-14T04:43:06+02:00",
    "2007-07-14T18:49:09+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NumberFormatException",
      "message": "For input string: \"-pdelaunch\"",
      "elements": [
        {
          "method": "java.lang.NumberFormatException.forInputString",
          "source": "NumberFormatException.java:48"
        },
        {
          "method": "java.lang.Integer.parseInt",
          "source": "Integer.java:447"
        },
        {
          "method": "java.lang.Integer.parseInt",
          "source": "Integer.java:497"
        },
        {
          "method": "org.eclipse.ecf.provider.app.ECFTCPServer.start",
          "source": "ECFTCPServer.java:42"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.equinox.internal.app.AnyThreadAppLauncher.run",
          "source": "AnyThreadAppLauncher.java:26"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:613"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "195088",
      "date": "2007-07-05T00:28:55+02:00",
      "product": "ECF",
      "component": "ecf.core",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Application \"org.eclipse.ecf.provider.AppGenericServer\" could not be found in the registry. The applications available are: org.eclipse.help.base.infocenterApplication, org.eclipse.help.base.helpApplication, org.eclipse.help.base.indexTool, org.eclipse.ui.ide.workbench, org.eclipse.update.core.standaloneUpdate, org.eclipse.update.core.siteOptimizer, org.eclipse.equinox.app.error, org.eclipse.ant.core.antRunner, org.eclipse.ecf.example.clients.chatroomrobot, org.eclipse.ecf.example.clients.chatsorobot, org.eclipse.ecf.example.clients.chatrobot, org.eclipse.ecf.presence.bot.chatRoomRobot, org.eclipse.ecf.presence.bot.imRobot.",
      "elements": [
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.startDefaultApp",
          "source": "EclipseAppContainer.java:236"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.start",
          "source": "EclipseAppContainer.java:92"
        },
        {
          "method": "org.eclipse.equinox.internal.app.Activator.addingService",
          "source": "Activator.java:129"
        },
        {
          "method": "org.osgi.util.tracker.ServiceTracker$Tracked.trackAdding",
          "source": "ServiceTracker.java:1064"
        },
        {
          "method": "org.osgi.util.tracker.ServiceTracker$Tracked.track",
          "source": "ServiceTracker.java:1042"
        },
        {
          "method": "org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged",
          "source": "ServiceTracker.java:967"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FilteredServiceListener.serviceChanged",
          "source": "FilteredServiceListener.java:94"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent",
          "source": "BundleContextImpl.java:1224"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:195"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous",
          "source": "ListenerQueue.java:141"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.publishServiceEventPrivileged",
          "source": "Framework.java:1603"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.publishServiceEvent",
          "source": "Framework.java:1578"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.\u003cinit\u003e",
          "source": "ServiceRegistrationImpl.java:103"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.createServiceRegistration",
          "source": "BundleContextImpl.java:657"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService",
          "source": "BundleContextImpl.java:609"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService",
          "source": "BundleContextImpl.java:675"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:359"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        }
      ],
      "number": 1,
      "commentIndex": 26,
      "bugId": "195088",
      "date": "2007-07-14T04:43:06+02:00",
      "product": "ECF",
      "component": "ecf.core",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Application \u003e \"org.eclipse.ecf.provider.AppGenericServer\" could not be found in the registry. \u003e The applications available are: org.eclipse.help.base.infocenterApplication, \u003e org.eclipse.help.base.helpApplication, org.eclipse.help.base.indexTool, \u003e org.eclipse.ui.ide.workbench, org.eclipse.update.core.standaloneUpdate, \u003e org.eclipse.update.core.siteOptimizer, org.eclipse.equinox.app.error, \u003e org.eclipse.ant.core.antRunner, org.eclipse.ecf.example.clients.chatroomrobot, \u003e org.eclipse.ecf.example.clients.chatsorobot, \u003e org.eclipse.ecf.example.clients.chatrobot, \u003e org.eclipse.ecf.presence.bot.chatRoomRobot, \u003e org.eclipse.ecf.presence.bot.imRobot. \u003e         at \u003e org.eclipse.equinox.internal.app.EclipseAppContainer.startDefaultApp(EclipseAppContainer.java:236) \u003e         at \u003e org.eclipse.equinox.internal.app.EclipseAppContainer.start(EclipseAppContainer.java:92) \u003e         at \u003e org.eclipse.equinox.internal.app.Activator.addingService(Activator.java:129) \u003e         at \u003e org.osgi.util.tracker.ServiceTracker$Tracked.trackAdding(ServiceTracker.java:1064) \u003e         at \u003e org.osgi.util.tracker.ServiceTracker$Tracked.track(ServiceTracker.java:1042) \u003e         at \u003e org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:967) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:94) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1224) \u003e         at \u003e org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:195) \u003e         at \u003e org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:141) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.Framework.publishServiceEventPrivileged(Framework.java:1603) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.Framework.publishServiceEvent(Framework.java:1578) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.\u003cinit\u003e(ServiceRegistrationImpl.java:103) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.createServiceRegistration(BundleContextImpl.java:657) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:609) \u003e         at \u003e org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:675) \u003e         at \u003e org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:359) \u003e         at \u003e org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176) \u003e",
      "elements": [
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        }
      ],
      "number": 2,
      "commentIndex": 27,
      "bugId": "195088",
      "date": "2007-07-14T18:49:09+02:00",
      "product": "ECF",
      "component": "ecf.core",
      "severity": "enhancement"
    }
  ],
  "groupId": "195088",
  "bugId": "195088",
  "date": "2007-07-02T09:55:50+02:00",
  "product": "ECF",
  "component": "ecf.core",
  "severity": "enhancement"
}