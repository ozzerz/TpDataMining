{
  "comments": [
    "I zipped up three of my plugins so that they would be single jar files.\nI dropped them into the plugins directory, but they would not load properly.\nI\u0027ll attach the plugins and the full .log file, but here is the first log \nentry:\n\n!SESSION Nov 12, 2004 12:56:48.209 --------------------------------------------\n-\neclipse.buildId\u003dM200409161125\njava.version\u003d1.4.2_05\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\n\n!ENTRY org.eclipse.osgi Nov 12, 2004 12:56:48.209\n!MESSAGE An error occured while automatically activating bundle \norg.eclipse.perfmsr.ui (52).\n!STACK 0\norg.osgi.framework.BundleException: The activator \norg.eclipse.perfmsr.ui.PerfMsrUIPlugin for bundle org.eclipse.perfmsr.ui is \ninvalid\n\tat \norg.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator\n(AbstractBundle.java:158)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.start\n(BundleContextImpl.java:933)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker\n(BundleHost.java:421)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.start\n(AbstractBundle.java:293)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass\n(EclipseClassLoader.java:110)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass\n(BundleLoader.java:371)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:402)\n\tat \norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass\n(AbstractClassLoader.java:93)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass\n(BundleLoader.java:307)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass\n(BundleHost.java:336)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass\n(AbstractBundle.java:1313)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:131)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:124)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:113)\n\tat org.eclipse.ui.internal.WorkbenchPlugin$1.run\n(WorkbenchPlugin.java:196)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile\n(BusyIndicator.java:51)\n\tat org.eclipse.ui.internal.WorkbenchPlugin.createExtension\n(WorkbenchPlugin.java:193)\n\tat org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension\n(EarlyStartupRunnable.java:109)\n\tat org.eclipse.ui.internal.EarlyStartupRunnable.run\n(EarlyStartupRunnable.java:61)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:616)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:747)\n\tat org.eclipse.ui.internal.Workbench$15.run(Workbench.java:1283)\n\tat java.lang.Thread.run(Unknown Source)",
    "Created an attachment (id\u003d15829)\nThe .log file\n",
    "Created an attachment (id\u003d15830)\nsample plugins\n\nThis zip file contains the three plugins that I was testing.",
    "Although not optimal for running large products this mode should be supported \nbut it seems that there is a bug, since the inner jars do not get unzipped into \nthe org.eclipse.osgi folder of the configuration area.\n\nA better approach for running large products out of jars is to:\n- unzip the code jar at the same level than the resources (or in a folder)\n- change the library entry in the plugin xml to refer to the source\n\nFor example: org.eclipse.perfmsr.core will become (in the top level jar):\nplugin.xml (with library set to \"binaries/\")\nbinaries/\n  org/eclipse/perfmsr/core/A.class\n  org/eclipse/perfmsr/core/B.class\n  ...\n\nIf you want to have the class files at the root, the library value becomes \".\".\n\nAssigning to Tom to investigate the initial problem.\n",
    "Never mind, the windows explorer tricked me.",
    "Created an attachment (id\u003d15831)\n.log file\n\nThis is the .log file from my second attempt. In this attempt I:\n\n1) deleted the source jars\n2) expanded and then removed the code jars\n3) copied the manifest file from the configuration directory, but removed the\nclasspath line\n4) edited the runtime stuff out of the plugin.xml file\n\nSo this version of the plugins do not have any nested jar files",
    "Created an attachment (id\u003d15832)\nplugins \n\nThe plugin jar files that Iused for my second attempt",
    "Pascal, I looked into the initial problem.  The jars are extracted.  It is the \nPluginConverter that does not seem to generate the Provide-Package list \ncorrectly for the inner jars.  So the framework cannot find packages from \nrequired bundles.",
    "Gary, the manifest files you copied in comment 5 will be incorrect because \nthey are missing the Provide-Package header.  This will cause the same errors \nto occur as your original jar\u0027ed bundles.  You should look at using the \nmanifest files that get generated for you plugins when the are fully extracted \nplugins.",
    "I\u0027ve been tricked by the file explorer :) \nWhat is interesting that if I unjar the plugins to be like in eclipse the plugin\nworks fine. If I run from the jar, some classes are being found but there is\nthis strange exception that I haven\u0027t figured out yet (and won\u0027t be able to\naddress today).\n\nTom if you want to keep the investigation, go ahead. I\u0027m not sure why in case of\nzipped plugin we would generate a bogus manifest.",
    "Re: Comment 8\n\nI can confirm, that once I manually added in the Provide-Package header that \nmy plugins worked!",
    "I ran into this problem while experimenting with the JavaWebStart/JNLP support.\nI debugged a bit, and the problem seems to happen in the\nPluginConverterImpl.getExports() method. This is where the jars containing the\nplugin classes need to be scanned to build a exported package list. In the\njarred plugin case however, the jar file containing the classes is not correctly\nfound, so the export list is empty. The following code is where things start to\ngo wrong. pluginManifestLocation is the plugin jar file and libEntryText is the\nname of the library within the jar, so libraryLocation becomes non-existent. \n\nFile libraryLocation;\nif (DevClassPathHelper.inDevelopmentMode()) {\n...\n} else\n    libraryLocation \u003d new File(pluginManifestLocation, libEntryText);\nSet exports \u003d null;\nif (libraryLocation.exists()) {\n    if (libraryLocation.isFile())\n        exports \u003d filterExport(getExportsFromJAR(libraryLocation), filter);\n//TODO Need to handle $xx$ variables\n    else if (libraryLocation.isDirectory())\n        exports \u003d filterExport(getExportsFromDir(libraryLocation), filter);\n} else {\n...",
    "Consider for M7.\nPatches welcomed.",
    "The launcher feature in the delta pack is not up-to-date. Please try to replace\nthe launcher feature of the delta pack with the one attached in bug #93171",
    "Wrong bug report.",
    "DJ and I did separate evaluations on how to fix this bug, and we both came to\nthe same conclusion: \"nay, too risky, too complicated for this late in the game\".\n\nI will even go further saying that this is a wontfix because:\n- Eclipse 3.1 recommends shipping with MANIFEST.MF\n- Manifest support is now first class in PDE (which used a counter argument as\nto why we should not ship manifest before)\n\nI opened bug #97689 to add something in the README.",
    "Cleaning up old defects."
  ],
  "commentCreationDates": [
    "2004-11-12T18:20:21+01:00",
    "2004-11-12T18:21:42+01:00",
    "2004-11-12T18:24:07+01:00",
    "2004-11-12T18:51:52+01:00",
    "2004-11-12T19:00:01+01:00",
    "2004-11-12T19:05:48+01:00",
    "2004-11-12T19:07:23+01:00",
    "2004-11-12T19:17:02+01:00",
    "2004-11-12T19:20:55+01:00",
    "2004-11-12T19:28:13+01:00",
    "2004-11-12T19:34:04+01:00",
    "2005-02-23T18:47:33+01:00",
    "2005-04-01T18:00:27+02:00",
    "2005-05-09T18:48:21+02:00",
    "2005-05-09T18:49:17+02:00",
    "2005-05-31T21:45:49+02:00",
    "2006-07-10T13:15:57+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "The activator  org.eclipse.perfmsr.ui.PerfMsrUIPlugin for bundle org.eclipse.perfmsr.ui is  invalid",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator",
          "source": "AbstractBundle.java:158"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:933"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:421"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:293"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass",
          "source": "EclipseClassLoader.java:110"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:371"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:402"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:93"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:307"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:336"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1313"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:131"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:124"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:113"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin$1.run",
          "source": "WorkbenchPlugin.java:196"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:51"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:193"
        },
        {
          "method": "org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension",
          "source": "EarlyStartupRunnable.java:109"
        },
        {
          "method": "org.eclipse.ui.internal.EarlyStartupRunnable.run",
          "source": "EarlyStartupRunnable.java:61"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:616"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:747"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$15.run",
          "source": "Workbench.java:1283"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78535",
      "date": "2004-11-12T18:20:21+01:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    }
  ],
  "groupId": "78535",
  "bugId": "78535",
  "date": "2004-11-12T18:20:21+01:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "normal"
}