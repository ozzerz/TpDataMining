{
  "comments": [
    "Eclipse will allow you to specify JDK 1.1.8 a JRE for running code.  This is \nquite useful for those developing code for environments that don\u0027t support Java \n2, such as some browser VMs.  However, the JUnit plugin does not work with the \nJDK 1.1.8 because the RemoteTestRunner uses classes that aren\u0027t available in \nthat VM.  When I create a simple JUnit test and attempt to run it in Eclipse \nusing JDK 1.1.8, I get the following message in the console:\n\njava.lang.NoClassDefFoundError: java/util/ArrayList\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.\u003cinit\u003e\n(RemoteTestRunner.java:32)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main\n(RemoteTestRunner.java:149)\n\nI know the Vector class isn\u0027t as elegant as ArrayList, but it\u0027s available \neverywhere - could it be used instead, or perhaps an alternate JDK 1.1.8-\nfriendly remote test runner could be invoked in such a scenario?",
    "Erich, please comment.\n",
    "can now compile the remote test runner against 1.1.7"
  ],
  "commentCreationDates": [
    "2002-11-07T15:23:27+01:00",
    "2002-11-07T15:47:04+01:00",
    "2002-11-11T22:36:50+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "java/util/ArrayList",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.\u003cinit\u003e",
          "source": "RemoteTestRunner.java:32"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main",
          "source": "RemoteTestRunner.java:149"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "25830",
      "date": "2002-11-07T15:23:27+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "25830",
  "bugId": "25830",
  "date": "2002-11-07T15:23:27+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}