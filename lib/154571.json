{
  "comments": [
    "I don\u0027t have a reproducible case for this, but it appears that there are label provider implementations that spin the event loop or otherwise cause viewer methods to be called reentrantly.\n\nWe should try to protect ourselves against cases like this.",
    "*** Bug 121483 has been marked as a duplicate of this bug. ***",
    "*** Bug 139328 has been marked as a duplicate of this bug. ***",
    "*** Bug 145807 has been marked as a duplicate of this bug. ***",
    "See the above bugs for stack traces.",
    "Oops, wrong assignee.",
    "I\u0027ve got similar exceptions from the Synchronize view in I20061114-1636.\n\norg.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException: Index out of bounds)\n\tat org.eclipse.swt.SWT.error(SWT.java:3404)\n\tat org.eclipse.swt.SWT.error(SWT.java:3327)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3440)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3080)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1936)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1900)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:348)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:165)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:341)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:285)\n\tat org.eclipse.core.launcher.Main.run(Main.java:987)\n\tat org.eclipse.core.launcher.Main.main(Main.java:962)\nCaused by: java.lang.IllegalArgumentException: Index out of bounds\n\tat org.eclipse.swt.SWT.error(SWT.java:3388)\n\tat org.eclipse.swt.SWT.error(SWT.java:3327)\n\tat org.eclipse.swt.SWT.error(SWT.java:3298)\n\tat org.eclipse.swt.widgets.TreeItem.findPrevious(TreeItem.java:210)\n\tat org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e(TreeItem.java:119)\n\tat org.eclipse.jface.viewers.TreeViewer.createNewRowPart(TreeViewer.java:947)\n\tat org.eclipse.jface.viewers.TreeViewer.newItem(TreeViewer.java:467)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:795)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:2546)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1718)\n\tat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:860)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1693)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1649)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1635)\n\tat org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1391)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1326)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1389)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1348)\n\tat org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.refreshModelRoot(AbstractSynchronizeModelProvider.java:352)\n\tat org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.access$0(AbstractSynchronizeModelProvider.java:345)\n\tat org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider$2.run(AbstractSynchronizeModelProvider.java:338)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.team.internal.ui.Utils$4.run(Utils.java:760)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\t... 20 more\n\nAnd also:\n\nCaused by: java.lang.IllegalArgumentException: Index out of bounds\n\tat org.eclipse.swt.SWT.error(SWT.java:3388)\n\tat org.eclipse.swt.SWT.error(SWT.java:3327)\n\tat org.eclipse.swt.SWT.error(SWT.java:3298)\n\tat org.eclipse.swt.widgets.TreeItem.findPrevious(TreeItem.java:210)\n\tat org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e(TreeItem.java:119)\n\tat org.eclipse.jface.viewers.TreeViewer.createNewRowPart(TreeViewer.java:947)\n\tat org.eclipse.jface.viewers.TreeViewer.newItem(TreeViewer.java:467)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:795)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(AbstractTreeViewer.java:370)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalAdd(AbstractTreeViewer.java:261)\n\tat org.eclipse.jface.viewers.TreeViewer.internalAdd(TreeViewer.java:812)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.add(AbstractTreeViewer.java:137)\n\tat org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.internalRunViewUpdate(SynchronizeModelUpdateHandler.java:586)\n\tat org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.access$1(SynchronizeModelUpdateHandler.java:561)\n\tat org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$5.run(SynchronizeModelUpdateHandler.java:540)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$4.run(SynchronizeModelUpdateHandler.java:538)\n\tat org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:155)\n\tat org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:36)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\t... 20 more\n",
    "Michael, could you have a look at Markus\u0027s stack trace?  Do you have any idea as to why this is happening?  It is just a theory of mine that it could have to do with label providers that spin the event loop, and I am looking for anything that can support or falsify my theory.",
    "All I can really say is that the Team code involved in this stack trace has not undergone any change since 3.1 and this is the first time I have seen a trace like this. Therefore, my guess is it is caused by recent changes elsewhere.",
    "Markus, did this happen at startup or shortly thereafter?  Could it be that a label provider (or some of the code it called) tried to acquire a lock that was held by a background job, which caused the \"Operation is waiting for a background job\" progress dialog to open?",
    "It happened hours after my last startup. However, I have \"Always run in background\" set to true, and I often cancel blocking compiler jobs (but not other jobs).",
    "Just FYI: I have not seen the exception from comment 6 any more (and I\u0027m not aware of changes in my usage patterns that could have caused this).",
    "Nick had another one of these stack traces, and together we were able to come up with an explanation for at list his case:\n\nContext: It happened in a view that updated itself every five minutes.\n\n1. The first update calls refresh() on a table viewer.\n2. In internalRefreshAll(), some of the items are disassociated because their data no longer matches the element at that index\n3. After disassociating some or all of the existing items, we do a second pass through the items, bringing back their data and updating their text etc. (It has to be done in two passes or else the element map might end up corrupted.)\n4. For one of these items, the label provider threw a NPE and we opened an error dialog.  This dialog spins the event loop, which is bad because it allows others to post asyncExecs when we don\u0027t expect it.  (Also, Nick was not at his computer when the error dialog came up, so it stayed up for some time.)\n5. One of those asyncExecs happened to be (after 5 minutes) the next refresh, calling into TableViewer reentrantly. This is bad because:\n6. At this time, some items did not have associated data, which caused assertion failures.\n\nWhat we can do is:\n- don\u0027t open a modal error dialog for every exception happening in label providers\n- detect cases where viewer code is called reentrantly and ignore the second update request, logging the error because we consider it a programming error to spin the event loop from within a label provider.",
    "Target milestone was set to 3.2M5 but should be 3.3M5.",
    "Moving to M6",
    "*** Bug 173535 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d62175)\npatch\n\nPatch released \u003e20070327, to see what this does to the nightly build.",
    "We\u0027ll have to see how this plays out.  With this patch, reentrant calls to public methods are detected, logged, and then ignored.  As explained in comment 12, this can happen if label providers/content providers call back into the viewer, or if they spin the event loop which then causes asyncExecs to run.  When I last talked with Nick about this, our consensus was that it is safer to ignore these calls than to try and process them because otherwise the viewer\u0027s data structures can be corrupted.",
    "We should also punt the error dialog in SafeRunnable, or avoid using it in the viewers, if that hasn\u0027t been done already.",
    "Created an attachment (id\u003d62287)\nnext patch (incremental)\n\n",
    "(In reply to comment #18)\n\u003e We should also punt the error dialog in SafeRunnable, or avoid using it in the\n\u003e viewers, if that hasn\u0027t been done already.\n\nYes. See bug 168301.",
    "I have reverted both patches - it turned out to be more complicated than I thought.  I have another idea for how to approach this, which I hope to implement tomorrow.",
    "Created an attachment (id\u003d65145)\npatch\n\nNew attempt, less ambitious...",
    "Patch released \u003e20070426-0010. (I.e. it is not in the midnight I build.)",
    "Verified - we are seeing useful stack traces being reported now (see e.g. bug 184991)",
    "This change has caused a serious problem for EMF.  https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d191010\n\nIt\u0027s not unusual for label computations to reference data that might cause proxies to resolve and such a resolve can lead to resources being loaded, which then updates the view to show these new resource as children.  This has never caused a problem, but now it\u0027s broken.  If we could detect that a viewer is busy, we could minimize the impact of changes we make to EMF, but since we can\u0027t know a viewer is busy, we can\u0027t know an attempt to update it will fail and that we must try later.  So while this fix may have fixed a problem for someone, it\u0027s not a problem we ever saw manifested, but now we do have a problem that requires us to make significant changes to the update behavior that I\u0027m not totally comfortable with.\n\nSo this change has caused problems we didn\u0027t have before and if we react, we may well cause new problems for those downstream from us.  Would you consider making isBusy available for clients?\n",
    "I talked to Ed and he said he is investigating possible fixes on their side.  I would suggest continuing the discussion on bug 191010. If it turns out to be too difficult or risky to fix this in EMF, that bug can be given to us. We need to act quickly though, we are in the last week for 3.3!"
  ],
  "commentCreationDates": [
    "2006-08-21T19:05:03+02:00",
    "2006-08-21T19:08:53+02:00",
    "2006-08-21T19:09:04+02:00",
    "2006-08-21T19:09:49+02:00",
    "2006-08-21T19:10:51+02:00",
    "2006-08-21T19:13:21+02:00",
    "2006-11-16T15:59:00+01:00",
    "2006-11-16T18:38:01+01:00",
    "2006-11-16T19:13:47+01:00",
    "2006-11-16T21:18:16+01:00",
    "2006-11-17T09:40:20+01:00",
    "2006-11-27T12:04:18+01:00",
    "2006-12-07T21:25:21+01:00",
    "2007-01-02T16:27:57+01:00",
    "2007-02-05T05:17:01+01:00",
    "2007-02-09T02:29:54+01:00",
    "2007-03-28T05:53:11+02:00",
    "2007-03-28T05:59:21+02:00",
    "2007-03-28T20:22:01+02:00",
    "2007-03-28T22:33:32+02:00",
    "2007-03-29T05:24:50+02:00",
    "2007-03-29T05:28:08+02:00",
    "2007-04-27T06:06:09+02:00",
    "2007-04-27T06:26:47+02:00",
    "2007-05-04T15:35:38+02:00",
    "2007-06-05T14:35:45+02:00",
    "2007-06-05T18:48:35+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3404"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3327"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3440"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3080"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1936"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1900"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:422"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:104"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:74"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:348"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:165"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:341"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:285"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:987"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:962"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IllegalArgumentException",
        "message": "Index out of bounds",
        "elements": [
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3388"
          },
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3327"
          },
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3298"
          },
          {
            "method": "org.eclipse.swt.widgets.TreeItem.findPrevious",
            "source": "TreeItem.java:210"
          },
          {
            "method": "org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e",
            "source": "TreeItem.java:119"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.createNewRowPart",
            "source": "TreeViewer.java:947"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.newItem",
            "source": "TreeViewer.java:467"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
            "source": "AbstractTreeViewer.java:795"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren",
            "source": "AbstractTreeViewer.java:2546"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
            "source": "AbstractTreeViewer.java:1718"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
            "source": "TreeViewer.java:860"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
            "source": "AbstractTreeViewer.java:1693"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
            "source": "AbstractTreeViewer.java:1649"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
            "source": "AbstractTreeViewer.java:1635"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer$7.run",
            "source": "StructuredViewer.java:1391"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
            "source": "StructuredViewer.java:1326"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
            "source": "StructuredViewer.java:1389"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
            "source": "StructuredViewer.java:1348"
          },
          {
            "method": "org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.refreshModelRoot",
            "source": "AbstractSynchronizeModelProvider.java:352"
          },
          {
            "method": "org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider.access$0",
            "source": "AbstractSynchronizeModelProvider.java:345"
          },
          {
            "method": "org.eclipse.team.internal.ui.synchronize.AbstractSynchronizeModelProvider$2.run",
            "source": "AbstractSynchronizeModelProvider.java:338"
          },
          {
            "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
            "source": "BusyIndicator.java:67"
          },
          {
            "method": "org.eclipse.team.internal.ui.Utils$4.run",
            "source": "Utils.java:760"
          },
          {
            "method": "org.eclipse.swt.widgets.RunnableLock.run",
            "source": "RunnableLock.java:35"
          },
          {
            "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
            "source": "Synchronizer.java:123"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 6,
      "bugId": "154571",
      "date": "2006-11-16T15:59:00+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3388"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3327"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3298"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.findPrevious",
          "source": "TreeItem.java:210"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e",
          "source": "TreeItem.java:119"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.createNewRowPart",
          "source": "TreeViewer.java:947"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.newItem",
          "source": "TreeViewer.java:467"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
          "source": "AbstractTreeViewer.java:795"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements",
          "source": "AbstractTreeViewer.java:370"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalAdd",
          "source": "AbstractTreeViewer.java:261"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.internalAdd",
          "source": "TreeViewer.java:812"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.add",
          "source": "AbstractTreeViewer.java:137"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.internalRunViewUpdate",
          "source": "SynchronizeModelUpdateHandler.java:586"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler.access$1",
          "source": "SynchronizeModelUpdateHandler.java:561"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$5.run",
          "source": "SynchronizeModelUpdateHandler.java:540"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.SynchronizeModelUpdateHandler$4.run",
          "source": "SynchronizeModelUpdateHandler.java:538"
        },
        {
          "method": "org.eclipse.ui.internal.UILockListener.doPendingWork",
          "source": "UILockListener.java:155"
        },
        {
          "method": "org.eclipse.ui.internal.UISynchronizer$1.run",
          "source": "UISynchronizer.java:36"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        }
      ],
      "number": 1,
      "commentIndex": 6,
      "bugId": "154571",
      "date": "2006-11-16T15:59:00+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "154571",
  "bugId": "154571",
  "date": "2006-08-21T19:05:03+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}