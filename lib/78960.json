{
  "comments": [
    "The watch expression test for stepping and value updating has been \nsporadically failing in nightly builds. For example:\n\nWatch expression should be 1 expected:\u003c1\u003e but was:\u003c0\u003e \n\njunit.framework.AssertionFailedError: Watch expression should be 1 \nexpected:\u003c1\u003e but was:\u003c0\u003e\nat org.eclipse.jdt.debug.tests.core.WatchExpressionTests.testStepping\n(WatchExpressionTests.java:147)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\nat org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:53)\nat java.lang.Thread.run(Thread.java:534)",
    "Fixed. There were two problems:\n\n* When a step occurrs, a watch expression fires two change events - one to \nmark the start of the step to note that its value is pending, and one to mark \nthe evaluation of its new value is complete. We were looking only for ONE \nchange event, which could be the first. The fix is to have the \nExpressionWaiter ensure the expression is not pending.\n* When using JDK1.4.2, with monitor information on, the thread monitor \ninformation can change causing the evalutaion of a watch expression to occurr \ntwice (breaking our test assumption that it happens once per step). The fix \nwas to turn monitor information OFF in the test suite.",
    "Please verify, Luc.",
    "This test still fails for me.",
    "The error I see now is:\n\ntestStepping: Evaluation failed - thread not suspended.",
    "I think the problem is that the debug view is not always on top, since \nprevious tests show the navigator. The watch expression will not udpate unless \nthe debug view fires a selection change event.",
    "Fixed. Released to HEAD.",
    "Please verify, Kevin.",
    "verified",
    "reopening as this problem seems to have resurfaced in the more recent builds (\u003e  I20061205-0800), might be due to the new viewer updates.\n\nNeeds investigation",
    "Fixed in ExpressionWaiter. The fix is to only consider \"CONTENT\" changes and ignore \"STATE\" changes.",
    "Please verify, Mike.",
    "verified...until it breaks again :)"
  ],
  "commentCreationDates": [
    "2004-11-18T15:53:22+01:00",
    "2004-11-18T15:56:06+01:00",
    "2004-11-18T15:56:50+01:00",
    "2004-11-22T22:19:06+01:00",
    "2004-11-22T22:19:45+01:00",
    "2004-12-14T17:53:56+01:00",
    "2004-12-14T18:25:49+01:00",
    "2004-12-14T18:26:03+01:00",
    "2004-12-14T19:17:39+01:00",
    "2006-12-07T15:11:27+01:00",
    "2007-01-05T17:03:12+01:00",
    "2007-01-05T17:03:25+01:00",
    "2007-01-05T21:30:23+01:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Watch expression should be 1  expected:\u003c1\u003e but was:\u003c0\u003e",
      "elements": [
        {
          "method": "org.eclipse.jdt.debug.tests.core.WatchExpressionTests.testStepping",
          "source": "WatchExpressionTests.java:147"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.DebugSuite$1.run",
          "source": "DebugSuite.java:53"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78960",
      "date": "2004-11-18T15:53:22+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "78960",
  "bugId": "78960",
  "date": "2004-11-18T15:53:22+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}