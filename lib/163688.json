{
  "comments": [
    "org.eclipse.swt.SWTException: Invalid image\nat org.eclipse.swt.SWT.error(SWT.java:3374)\nat org.eclipse.swt.SWT.error(SWT.java:3297)\nat org.eclipse.swt.SWT.error(SWT.java:3268)\nat org.eclipse.swt.internal.image.GIFFileFormat.unloadIntoByteStream(GIFFileFormat.java:449)\nat org.eclipse.swt.internal.image.FileFormat.unloadIntoStream(FileFormat.java:122)\nat org.eclipse.swt.internal.image.FileFormat.save(FileFormat.java:110)\nat org.eclipse.swt.graphics.ImageLoader.save(ImageLoader.java:199)\nat com.swtjface.Ch7.Ch7_Images.main(Ch7_Images.java:42)\nException in thread \"main\"\n\nI get the above error attempting to execute the following code:\n\npackage com.swtjface.Ch7;\nimport java.io.*;\nimport org.eclipse.swt.*;\nimport org.eclipse.swt.graphics.*;\n\npublic class Ch7_Images \n{\n\t\n  public static void main(String[] args) \n  {\n\tint numRows \u003d 6, numCols \u003d 11, pix \u003d 20;\n\tPaletteData pd \u003d new PaletteData(new RGB[] \n\t{\n\t  new RGB(0x00, 0x00, 0x00),\n\t  new RGB(0x80, 0x80, 0x80),\n\t  new RGB(0xFF, 0xFF, 0xFF)\n\t});\n\t\t\n\tImageData[] flagArray \u003d new ImageData[3];\n\tfor(int frame\u003d0; frame\u003cflagArray.length; frame++) \n\t{\n\t  flagArray[frame]\u003d new ImageData(pix*numCols, pix*numRows, 4, pd);\n\t  flagArray[frame].delayTime \u003d 10;\n\t  for(int x\u003d0; x\u003cpix*numCols; x++) \n\t  {\n\t\tfor(int y\u003d0; y\u003cpix*numRows; y++) \n\t\t{\n\t\t  int value \u003d (((x/pix)%3) + (3 - ((y/pix)%3)) + frame) % 3;\n\t\t  flagArray[frame].setPixel(x,y,value);\n\t\t}\n\t  }\n\t}\n\n\tImageLoader gifloader \u003d new ImageLoader();\n\tByteArrayOutputStream flagByte[] \u003d new ByteArrayOutputStream[3];\n\tbyte[][] gifarray \u003d new byte[3][];\n\tgifloader.data \u003d flagArray;\n\t\t\n\tfor (int i\u003d0; i\u003c3; i++) {\n\t  flagByte[i] \u003d new ByteArrayOutputStream();\n\t  flagArray[0] \u003d flagArray[i];\n\t  gifloader.save(flagByte[i],SWT.IMAGE_GIF);\n\t  gifarray[i] \u003d flagByte[i].toByteArray();\n\t}\n\t\t\n\tbyte[] gif \u003d new byte[4628];\n\tSystem.arraycopy(gifarray[0],0,gif,0,61);\n\tSystem.arraycopy(new byte[]{33,(byte)255,11},0,gif,61,3);\n\tSystem.arraycopy(\"NETSCAPE2.0\".getBytes(),0,gif,64,11);\n\tSystem.arraycopy(new byte[]{3,1,-24,3,0,33,-7,4,-24},0,gif,75,9);\n\tSystem.arraycopy(gifarray[0],65,gif,84,1512);\n    \n\tfor (int i\u003d1; i\u003c3; i++) {\n\t  System.arraycopy(gifarray[i],61,gif,1516*i + 80,3);\n\t  gif[1516*i + 83] \u003d (byte) -24;\n\t  System.arraycopy(gifarray[i],65,gif,1516*i + 84,1512);\n\t}\n    \n\ttry {\n\t  DataOutputStream in \u003d new DataOutputStream\n\t   (new BufferedOutputStream(new FileOutputStream\n\t\t (new File(\"FlagGIF.gif\"))));\n\t  in.write(gif, 0, gif.length);\n\t} catch (FileNotFoundException e) {\n\t  e.printStackTrace();\n\t} catch (IOException e) {\n\t  e.printStackTrace();\n\t}\n  }\n}",
    "You need to set the logical screen\u0027s width and height in the gifloader:\n        gifloader.logicalScreenWidth \u003d pix*numCols;\n        gifloader.logicalScreenHeight \u003d pix*numRows;\n\nHowever, you are also doing too much work. You don\u0027t need to write the animated gif info yourself - swt does that for you. Here is your code back with a bunch of lines deleted:\n\nimport org.eclipse.swt.*;\nimport org.eclipse.swt.graphics.*;\n\npublic class Bug163688WriteAnimatedGIF {\n\n  public static void main(String[] args) \n  {\n        int numRows \u003d 6, numCols \u003d 11, pix \u003d 20;\n        PaletteData pd \u003d new PaletteData(new RGB[] \n        {\n          new RGB(0x00, 0x00, 0x00),\n          new RGB(0x80, 0x80, 0x80),\n          new RGB(0xFF, 0xFF, 0xFF)\n        });\n\n        ImageData[] flagArray \u003d new ImageData[3];\n        for(int frame\u003d0; frame\u003cflagArray.length; frame++) \n        {\n          flagArray[frame]\u003d new ImageData(pix*numCols, pix*numRows, 4, pd);\n          flagArray[frame].delayTime \u003d 10;\n          for(int x\u003d0; x\u003cpix*numCols; x++) \n          {\n                for(int y\u003d0; y\u003cpix*numRows; y++) \n                {\n                  int value \u003d (((x/pix)%3) + (3 - ((y/pix)%3)) + frame) % 3;\n                  flagArray[frame].setPixel(x,y,value);\n                }\n          }\n        }\n\n        ImageLoader gifloader \u003d new ImageLoader();\n        gifloader.logicalScreenWidth \u003d pix*numCols;\n        gifloader.logicalScreenHeight \u003d pix*numRows;\n        gifloader.data \u003d flagArray;\n        gifloader.save(\"FlagGIF.gif\",SWT.IMAGE_GIF);\n  }\n}\n"
  ],
  "commentCreationDates": [
    "2006-11-07T17:03:47+01:00",
    "2006-11-07T21:57:19+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid image",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3268"
        },
        {
          "method": "org.eclipse.swt.internal.image.GIFFileFormat.unloadIntoByteStream",
          "source": "GIFFileFormat.java:449"
        },
        {
          "method": "org.eclipse.swt.internal.image.FileFormat.unloadIntoStream",
          "source": "FileFormat.java:122"
        },
        {
          "method": "org.eclipse.swt.internal.image.FileFormat.save",
          "source": "FileFormat.java:110"
        },
        {
          "method": "org.eclipse.swt.graphics.ImageLoader.save",
          "source": "ImageLoader.java:199"
        },
        {
          "method": "com.swtjface.Ch7.Ch7_Images.main",
          "source": "Ch7_Images.java:42"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "163688",
      "date": "2006-11-07T17:03:47+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "163688",
  "bugId": "163688",
  "date": "2006-11-07T17:03:47+01:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}