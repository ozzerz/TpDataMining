{
  "comments": [
    "RC1\n\nErich asks:\nthe Navigation History Drop Down could be very useful, but it currently \nisn\u0027t....\nWe have discussed it earlier and we have decided to give up, but here\nis a minor tweak that could make it really useful.\n\nThis screen shot illustrates the problem:\n\u003cscreen shot of drop-down showing lots of entries with the same names\u003e\n\nInstead of offering the user several history entry for a file we could just show\nthe last one. This means it would become\nTestFoo.java\nPackageExplorerContentProvider.java\nTestFramework.java\n....\n\nThe rational is that:\n1)\tthe user cannot distinguish between the entries with the same file name\n2)\tthe menu doesn\u0027t overflow that quickly and would allow me to get\n\tquick access to my recently opened editors.\n\nWhat do you think, is there any hope?\n\n\nNick points out:\nIt is also possible to add more details to the labels,\ne.g.\nline 10 in TestFoo.java\nor\nmain(String[]) in TestFoo.java\n\n\nErich responds:\nThis is correct, but the files I have visited is more \"valuable\" then locations\ninside a file. The overflow problem would still exist.\n\n\nNick says:\nAdvantage 2 is compelling.\nI\u0027m worried about the inconsistency in behaviour between the back/forward \nbuttons and the dropdown.\n\nEduardo says:\nI like things that are simple to explain. NavigationHistory is already too \ncomplex to explain. Adding filters or any logic to the menus would increasy its \ncomplexity. I like the idea of adding method names a lot better. If not \npossible, line numbers would be OK.\n\nAnother reason is that I think the menu should reflect the behavior of the back \nand forward button. If I drop down the back menu and see entry A.java and \nB.java, I would expect to click in the button twice to get to B.java.\n\n\nErich replies:\nno additional arguments here...this is a good discussion to have, in particular \ngiven that we have no time for experimentation...\n\nOne difference between a web browser and and Eclipse is that\nwe provide lots of navigation support inside a file, but we are weaker\nwhen it comes to historical navigation across files. \n\n\nNick:\nPlaying with it a bit, I think the suggested change would be an improvement, \ndespite the inconsistency between the buttons and the drop-down.\nAs it is now, the drop-down is not usable.\n\nWe should do it in such a way that if the editor does provide more details in \nthe label, then the items are not combined.  But if entry A is added where the \nprevious entry B has the same label, then B is omitted from the drop-down (but \nnot the history).  Only adjacent matching entries should be combined.\nChoosing a file in the drop-down would go to the most recent position in the \nfile.",
    "Let\u0027s try it out, play around with it a bit, let Erich check it out, and make a \ngo/no go decision for RC2.\n",
    "Released fix to the HEAD stream (NavigationHistory, NavigationHistoryEntry, \nNavigationHistoryEditorInfo).\n\nNick, Erich,\n Could you load the UI HEAD stream and try it? I am not sure if I like it or \nnot since I don\u0027t use the dropdown that often. I still think that adding the \nmethod name and/or line number would be better. It would be nice if we had it \nto try too.\n\n- Waiting the go/no go decision before closing this PR.",
    "I like it in particular I\u0027m no longer confused when I open it. Moreover, it is \nreally useful (it avoids that both menus are filled with the same file name).\n\nOne suggestion when we compress the locations for a file could we indicate this \nin the drop down:\nMoneyTest(3 Locations)\nTestCase\nTestSuite(5 Locations)\n\nIn this way the user can still correlate the navigation buttons with the menu.\n",
    "Released comment #3 suggestion to the HEAD stream (NavigationHistory, \nNavigationHistoryAction)",
    "Tried the latest with the location indication. It works really well for me.  \nThis is a significant improvement and we should release it.\n\nBTW, we looked into adding line numbers and methods to the label, the issue is \nthat this information quickly gets out of date as the user modifies the \ncontents of files.",
    "Found the following in the log, that looks related to the change. I have no \nreproducable steps, but I remember that I\u0027ve deleted several projects:\njava.lang.NullPointerException\n\tat org.eclipse.ui.internal.NavigationHistory.checkDuplicates\n(NavigationHistory.java:472)\n\tat org.eclipse.ui.internal.NavigationHistory.addEntry\n(NavigationHistory.java:252)\n\tat org.eclipse.ui.internal.NavigationHistory.access$9\n(NavigationHistory.java:240)\n\tat org.eclipse.ui.internal.NavigationHistory$2.run\n(NavigationHistory.java:123)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages\n(Synchronizer.java:94)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1752)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1487)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1266)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1249)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:845)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)\njava.lang.NullPointerException\n",
    "Fixed NPE.",
    "Closing. Please reopen if you see anything else that should be done here. Or \nopen new PRs if you find any bug with this implementation.\nAll changes are released in the HEAD stream and will be included in the next \nbuild."
  ],
  "commentCreationDates": [
    "2003-02-28T17:18:46+01:00",
    "2003-02-28T17:19:59+01:00",
    "2003-03-04T17:47:16+01:00",
    "2003-03-05T16:51:39+01:00",
    "2003-03-05T22:08:28+01:00",
    "2003-03-05T23:12:07+01:00",
    "2003-03-06T11:45:55+01:00",
    "2003-03-06T14:45:28+01:00",
    "2003-03-06T15:34:23+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.NavigationHistory.checkDuplicates",
          "source": "NavigationHistory.java:472"
        },
        {
          "method": "org.eclipse.ui.internal.NavigationHistory.addEntry",
          "source": "NavigationHistory.java:252"
        },
        {
          "method": "org.eclipse.ui.internal.NavigationHistory.access$9",
          "source": "NavigationHistory.java:240"
        },
        {
          "method": "org.eclipse.ui.internal.NavigationHistory$2.run",
          "source": "NavigationHistory.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:31"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1752"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1487"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1266"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1249"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "33556",
      "date": "2003-03-06T11:45:55+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "33556",
  "bugId": "33556",
  "date": "2003-02-28T17:18:46+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}