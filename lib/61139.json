{
  "comments": [
    "I200405051600.  Both Windows XP and Linux-GTK. \n \nEclipse fails to start-up, and I get the following the log.  The splash screen \nis left open, but no Java process starts (or, it dies early on).  Closing the \nsplash screen does not kill the eclipse process; the eclipse process must be \nkilled by hand. \n \nI\u0027m not sure if this is a Debug problem, but I figured it was a good place to \nstart.... \n \n \n \nSESSION May 05, 2004 17:13:10.401 --------------------------------------------- \njava.version\u003d1.4.2_04 \njava.vendor\u003dSun Microsystems Inc. \nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US \n!ENTRY org.eclipse.ui 4 4 May 05, 2004 17:13:10.403 \n!MESSAGE Could not create action delegate for id: \norg.eclipse.ui.externaltools.ExternalToolMenuDelegateMenu \n!ENTRY org.eclipse.ui 4 4 May 05, 2004 17:13:10.404 \n!MESSAGE Internal plug-in action delegate error on creation. \n!STACK 0 \njava.lang.NullPointerException \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchConfigurationManager(AbstractLaunchHistoryAction.java:340) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.initialize(AbstractLaunchHistoryAction.java:123) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.selectionChanged(AbstractLaunchHistoryAction.java:306) \n        at \norg.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:230) \n        at \norg.eclipse.ui.internal.PluginAction.createDelegate(PluginAction.java:117) \n        at \norg.eclipse.ui.internal.WWinPluginPulldown.getPulldownDelegate(WWinPluginPulldown.java:76) \n        at \norg.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu(WWinPluginPulldown.java:35) \n        at \norg.eclipse.jface.action.ActionContributionItem.fill(ActionContributionItem.java:324) \n        at \norg.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58) \n        at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603) \n        at org.eclipse.jface.action.MenuManager.update(MenuManager.java:525) \n        at org.eclipse.jface.action.MenuManager.fill(MenuManager.java:233) \n        at \norg.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58) \n        at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603) \n        at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:2061) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.updateActionSets(WorkbenchWindow.java:2083) \n        at \norg.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:1891) \n        at \norg.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1866) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(WorkbenchWindow.java:514) \n        at \norg.eclipse.ui.internal.WorkbenchWindow$5.run(WorkbenchWindow.java:1104) \n        at \norg.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.openPage(WorkbenchWindow.java:1101) \n        at \norg.eclipse.ui.internal.Workbench.openFirstTimeWindow(Workbench.java:980) \n        at \norg.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow(WorkbenchConfigurer.java:174) \n        at \norg.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:654) \n        at org.eclipse.ui.internal.Workbench.init(Workbench.java:807) \n        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1301) \n        at \norg.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243) \n        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140) \n        at \norg.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90) \n        at \norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283) \n        at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242) \n        at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:324) \n        at org.eclipse.core.launcher.Main.basicRun(Main.java:269) \n        at org.eclipse.core.launcher.Main.run(Main.java:700) \n        at org.eclipse.core.launcher.Main.main(Main.java:684) \n!ENTRY org.eclipse.ui 4 4 May 05, 2004 17:13:10.414 \n!MESSAGE Unhandled event loop exception \n!ENTRY org.eclipse.ui 4 0 May 05, 2004 17:13:10.415 \n!MESSAGE java.lang.NullPointerException \n!STACK 0 \njava.lang.NullPointerException \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchConfigurationManager(AbstractLaunchHistoryAction.java:340) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchHistory(AbstractLaunchHistoryAction.java:322) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.fillMenu(AbstractLaunchHistoryAction.java:259) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.fillMenu(AbstractLaunchToolbarAction.java:49) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getMenu(AbstractLaunchHistoryAction.java:215) \n        at \norg.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu(WWinPluginPulldown.java:38) \n        at \norg.eclipse.jface.action.ActionContributionItem.fill(ActionContributionItem.java:324) \n        at \norg.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58) \n        at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603) \n        at org.eclipse.jface.action.MenuManager.update(MenuManager.java:525) \n        at org.eclipse.jface.action.MenuManager.fill(MenuManager.java:233) \n        at \norg.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:58) \n        at org.eclipse.jface.action.MenuManager.update(MenuManager.java:603) \n        at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:697) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:2061) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.updateActionSets(WorkbenchWindow.java:2083) \n        at \norg.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:1891) \n        at \norg.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1866) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(WorkbenchWindow.java:514) \n        at \norg.eclipse.ui.internal.WorkbenchWindow$5.run(WorkbenchWindow.java:1104) \n        at \norg.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84) \n        at \norg.eclipse.ui.internal.WorkbenchWindow.openPage(WorkbenchWindow.java:1101) \n        at \norg.eclipse.ui.internal.Workbench.openFirstTimeWindow(Workbench.java:980) \n        at \norg.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow(WorkbenchConfigurer.java:174) \n        at \norg.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:654) \n        at org.eclipse.ui.internal.Workbench.init(Workbench.java:807) \n        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1301) \n        at \norg.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243) \n        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140) \n        at \norg.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90) \n        at \norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283) \n        at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242) \n        at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:324) \n        at org.eclipse.core.launcher.Main.basicRun(Main.java:269) \n        at org.eclipse.core.launcher.Main.run(Main.java:700) \n        at org.eclipse.core.launcher.Main.main(Main.java:684) \n!ENTRY org.eclipse.ui 4 4 May 05, 2004 17:13:10.456 \n!MESSAGE Could not create action delegate for id: \norg.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar \n!ENTRY org.eclipse.ui 4 4 May 05, 2004 17:13:10.457 \n!MESSAGE Internal plug-in action delegate error on creation. \n!STACK 0 \njava.lang.NullPointerException \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchConfigurationManager(AbstractLaunchHistoryAction.java:340) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.initialize(AbstractLaunchHistoryAction.java:123) \n        at \norg.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.selectionChanged(AbstractLaunchHistoryAction.java:306) \n        at \norg.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:230) \n        at \norg.eclipse.ui.internal.PluginAction.createDelegate(PluginAction.java:117) \n        at \norg.eclipse.ui.internal.WWinPluginAction.refreshActionList(WWinPluginAction.java:147) \n        at \norg.eclipse.ui.plugin.AbstractUIPlugin$3.run(AbstractUIPlugin.java:788) \n        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35) \n        at \norg.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106) \n        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1996) \n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1786) \n        at org.eclipse.swt.widgets.Display.release(Display.java:1835) \n        at org.eclipse.swt.graphics.Device.dispose(Device.java:174) \n        at \norg.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:99) \n        at \norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283) \n        at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242) \n        at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:324) \n        at org.eclipse.core.launcher.Main.basicRun(Main.java:269) \n        at org.eclipse.core.launcher.Main.run(Main.java:700) \n        at org.eclipse.core.launcher.Main.main(Main.java:684)",
    "Just trie - my workspace started OK. The error looks like the Debug plugin is \nnull. The line of code in question is:\n\n   return DebugUIPlugin.getDefault().getLaunchConfigurationManager();\n\nWhat happens if you clear your registry? (Or ask Jeff/Pascal for advice).",
    "Did you make a clean install?",
    "Deleting the configuration directory fixes the problem.  \n  \nPlatform-Core: I have had numerous problems with this type of problem over the  \npast couple of months.  Always, deleting the configuration directory fixes the  \nproblem.  What is the root of this bug? ",
    "As Jeff described in his email to eclipse-dev recently, if you make manual\nchanges to your configuration (add, remove, or change plugins), you must run\nwith with either the \"-dev\" or \"-clean\" command line arguments to reconcile the\nchanges.\n\nDid you make any changes (such as adding the releng plugin), or was it a clean\ninstall?\n\nMoving to Equinox for further comment.",
    "No manually editing of the configuration directory.  The configuration \ndirectory was \"old\" in the sense that it is written to my home directory, as my \neclipse installation directory is read-only.  OSGI should be able to handle \nthis case. ",
    "As I understand this, you have a local config area and a \"shared\" (readonly) \ninstall area.  When you install a new Eclipse drop, do you delete the local \nconfig area?  If not then in effect what you are doing is a massive change \nunderneath (i.e., without telling) the configuration (configurations are very \nmuch tied to installs).  This is basically the same as if you unziped the new \nbuild over the old (an unsupported scenario).\n\n-clean is the thing to do in this case.  You want to flush (i.e., clean) the \ncaches kept by the runtime and others and start afresh.  This needs to be done \nonly once after installing the new build.\n\nI\u0027d like to know more about your usage model.",
    "Doug and I chatted about this.  The summary is that under his work model (which \nis quite reasonable) people are effectively \"tweaking\" the install all the time \nwithout telling the configurations.  We certainly could implement more rigorous \nchecking and timestamping in the runtime but this is potentially very expensive.\n\nStepping back however, the problem is more fundamental.  Eclipse does not \nincrement the plugin version numbers to indicate changes.  If we did then \ninstalling a new eclipse would effectvely be \"adding a bunch of *new* \nplugins\".  Rather than changing in place something we have already processed, \nthere would be a mess of new things that would be picked up by Update and \ninstalled into the framework.\n\nIn product scenarios this is pretty much covered since product teams likely inc \ntheir version numbers when they ship something new.  Doug sees this because he \nis closer to the lifecycle and gets all the intermediate builds.\n\nThe eclipse plugin id and versioning design point is that the tuple uniquely \nidentifies a set of bytes.  We have been violating that model and should stop. \nPDE build contains support to automatically tagging plugins and features with \nthe appropriate \"build number\" depending on the build context.  Turning this on \nis a trivial (though widespread) change.  The net effect is that all plugin \nversions and their dirs names would have appended a stamp. For example the \nruntime dir\n    org.eclipse.core.runtime_3.0.0\nwould become\n    org.eclipse.core.runtime_3.0.0.v20040505  \u003c--- that is the CVS tag\n\nThe big issue with this (I forgot when talking to Doug) is that when we ship \n3.0, there is a strong desire for the plugins to be actually called 3.0.0. \nUnfortunately, that sorts before the above mentioned version and so all the \nintermediate builds would appear to be newer than the actual release.  you also \nthen have to consider how the versions work going forward (post 3.0).\n\nThe net is that we can and should do something about it but likely will not be \nable to for 3.0.  It is too disruptive and given the timeline, there is not \nenough gain.  \n\nI\u0027m going to close this as wontfix.  The workaround is to use -clean when \nrunning the first (or every ifyou like) time after you have installed a new \nEclipse.",
    "Toward the end of our conversation, it became clear that this bug has little \nor nothing to do with stale configuration directories.  (I\u0027m still undecided \nas to whether the plug-in versions should be extended in such a way, though I \nthink Linux should be distributed with \"check\" on by default.)  It pointed to \na timing issue in starting up the OSGI runtime.\n\nExamining the code where the NPE occurs, it points to a situation in which \nmemory reads and writes are possibly occurring out of order.  My machine is a \nPentium-4 configured as an SMP machine in Linux.  Therefore, multiple threads \ncan run concurrently.\n\nAn interesting article to read about this is \"Synchronization and the Java \nMemory Model\" (\"http://gee.cs.oswego.edu/dl/cpj/jmm.html\").  Bill Pugh is \napparently the main guy to talk to about this kind of stuff, but I\u0027ve always \nfound his website (\"http://www.cs.umd.edu/~pugh/java/memoryModel/\") kind of \nhard to follow.  To quote from the first article:\n\n\"Among other consequences, it is bad practice to make available the reference \nto an incompletely constructed object (see ?2.1.2)....  Similarly, if you \ncreate and start a new thread T and then create an object X used by thread T, \nyou cannot be sure that the fields of X will be visible to T unless you employ \nsynchronization surrounding all references to object X. Or, when applicable, \nyou can create X before starting T.\"\n\nReading this article, I can envision a possible explanation for the behaviour \nI saw.  A thread, T1, accesses the debug classes -- forcing plug-in loading.  \nIt gets far enough along in the plug-in loading to mark the plug-in as loaded \n(so that other threads can access the classes).  T1 is then interrupted.  T2 \ncomes along and access the debug classes, but, as it has not passed a \nsynchronization barrier, it sees only some of T1\u0027s memory writes.  T2 tries to \naccess the debug plug-in instance, but this happens to be one of the missing \nwrites; a NPE is thrown.\n\nNow, I have heard that the Java Memory Model has been revised.  But I\u0027m not \nsure what revisions were made, or which version of the JVM the new \nimplementations appear in.  So, I could be pointing you guys at stale \ninformation.\n\nAlso, I\u0027ve made an assumption that there a synchronization barrier is either \nmissing, or that it isn\u0027t doing quite what one would intuitively expect.\n",
    "Just to be clear about this, the intent of the runtime and the autoactivation \ncode is that no one sees classes from a plugin before that plugin is fully \nactivated.  However...\n\n- the activation code itself sees the plugin in an uninitialized state\n- there is nothing we can do if the plugin makes itself available to other \nobjects (or threads) before it is ready to do work.\n- if activation takes too long we have opt\u0027d for reporting a warning and \nreturning the requested class. This avoids deadlock cases that were hounding us \npreviously.\n\nThere are really three stages of initialization. \n1) Plugin class loading and running of clinit()  \n2) Plugin class instantiation and running of init()\n3) plugin activation and running of start()\n\nOn autoactivation we attempt to run all three of these before giving any \nclasses out to others.  We detect the first load of a class for the plugin \n(before we actually try to load it). Then lock the start mechanism and do all 3 \nsteps.  It is not until step 3 is completed that we release the lock.\n\nIf another thread comes along to during this process and tries to load a class, \nit too thinks this is the first load of a class for the plugin and tries to \nactivate.  It then sees that another thread is activating and it waits.  It \nwill wait for upto 5 sec.  After that, we allow it to just go ahead and load \nthe class.  \n\nThis last characteristic CAN allow people to see classes that violate the \ninvariant defined above.  The flip side of this is deadlock.  I don\u0027t recall \nthe scenarios but we were seeing deadlock if we blocked indefinitely waiting \nfor the activating thread to finish.  Note however that this is not the issue \nhere as you would have seen messages related to this in your log.\n\nPascal, can you look through this again to ensure that we are thread safe?  I \nam a little concerned about safety in true SMP scenarios (think atomic \nwrites/reads of ints and pointers...).  If Doug can reproduce\n- try to tweak the timing such that it does NOT happen (if you cannot stop it \nhappening then it does not seem like a timing issue)\n- try to figure out what exactly is going on.\n\nIn all of this it is still possible however for the plugin being activated to \nfork threads with objects which are not yet initialized (e.g., the Plugin \nobject). This is, as you note, bad practice but not an Eclipse thing.\n\n",
    "*** Bug 61730 has been marked as a duplicate of this bug. ***",
    "*** Bug 63338 has been marked as a duplicate of this bug. ***",
    "Doug is now running with the check.configuration option and we haven\u0027t heard\nback from him yet.\nMoreover a change has been released that allows to reuse the manifests,\n.registry, and framework files from the shared install as much as possible (ie:\nuntil the user install something locally). Note that in this case the owner of\nthe shared install must run eclipse once with -initialize so all the files are\ngetting created.\n\nThis has been tested with various install / update scenarios and works fine.\n",
    "*** Bug 101085 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-05-05T23:29:25+02:00",
    "2004-05-05T23:40:37+02:00",
    "2004-05-05T23:42:32+02:00",
    "2004-05-05T23:54:51+02:00",
    "2004-05-06T00:07:40+02:00",
    "2004-05-06T00:27:41+02:00",
    "2004-05-06T03:28:53+02:00",
    "2004-05-08T06:30:53+02:00",
    "2004-05-08T14:34:57+02:00",
    "2004-05-09T04:21:32+02:00",
    "2004-05-20T23:21:10+02:00",
    "2004-05-21T22:32:41+02:00",
    "2004-05-29T00:14:01+02:00",
    "2005-06-21T19:05:57+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchConfigurationManager",
          "source": "AbstractLaunchHistoryAction.java:340"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.initialize",
          "source": "AbstractLaunchHistoryAction.java:123"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.selectionChanged",
          "source": "AbstractLaunchHistoryAction.java:306"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.refreshEnablement",
          "source": "PluginAction.java:230"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.createDelegate",
          "source": "PluginAction.java:117"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginPulldown.getPulldownDelegate",
          "source": "WWinPluginPulldown.java:76"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu",
          "source": "WWinPluginPulldown.java:35"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.fill",
          "source": "ActionContributionItem.java:324"
        },
        {
          "method": "org.eclipse.jface.action.SubContributionItem.fill",
          "source": "SubContributionItem.java:58"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.update",
          "source": "MenuManager.java:603"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.update",
          "source": "MenuManager.java:525"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.fill",
          "source": "MenuManager.java:233"
        },
        {
          "method": "org.eclipse.jface.action.SubContributionItem.fill",
          "source": "SubContributionItem.java:58"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.update",
          "source": "MenuManager.java:603"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.updateAll",
          "source": "MenuManager.java:697"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.updateActionBars",
          "source": "WorkbenchWindow.java:2061"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.updateActionSets",
          "source": "WorkbenchWindow.java:2083"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$6.run",
          "source": "WorkbenchWindow.java:1891"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.setActivePage",
          "source": "WorkbenchWindow.java:1866"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage",
          "source": "WorkbenchWindow.java:514"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$5.run",
          "source": "WorkbenchWindow.java:1104"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.openPage",
          "source": "WorkbenchWindow.java:1101"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.openFirstTimeWindow",
          "source": "Workbench.java:980"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow",
          "source": "WorkbenchConfigurer.java:174"
        },
        {
          "method": "org.eclipse.ui.application.WorkbenchAdvisor.openWindows",
          "source": "WorkbenchAdvisor.java:654"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:807"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1301"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:243"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:283"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:242"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:119"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:700"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:684"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "61139",
      "date": "2004-05-05T23:29:25+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchConfigurationManager",
          "source": "AbstractLaunchHistoryAction.java:340"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchHistory",
          "source": "AbstractLaunchHistoryAction.java:322"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.fillMenu",
          "source": "AbstractLaunchHistoryAction.java:259"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.fillMenu",
          "source": "AbstractLaunchToolbarAction.java:49"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getMenu",
          "source": "AbstractLaunchHistoryAction.java:215"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginPulldown$MenuProxy.getMenu",
          "source": "WWinPluginPulldown.java:38"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.fill",
          "source": "ActionContributionItem.java:324"
        },
        {
          "method": "org.eclipse.jface.action.SubContributionItem.fill",
          "source": "SubContributionItem.java:58"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.update",
          "source": "MenuManager.java:603"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.update",
          "source": "MenuManager.java:525"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.fill",
          "source": "MenuManager.java:233"
        },
        {
          "method": "org.eclipse.jface.action.SubContributionItem.fill",
          "source": "SubContributionItem.java:58"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.update",
          "source": "MenuManager.java:603"
        },
        {
          "method": "org.eclipse.jface.action.MenuManager.updateAll",
          "source": "MenuManager.java:697"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.updateActionBars",
          "source": "WorkbenchWindow.java:2061"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.updateActionSets",
          "source": "WorkbenchWindow.java:2083"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$6.run",
          "source": "WorkbenchWindow.java:1891"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.setActivePage",
          "source": "WorkbenchWindow.java:1866"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage",
          "source": "WorkbenchWindow.java:514"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$5.run",
          "source": "WorkbenchWindow.java:1104"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.openPage",
          "source": "WorkbenchWindow.java:1101"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.openFirstTimeWindow",
          "source": "Workbench.java:980"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow",
          "source": "WorkbenchConfigurer.java:174"
        },
        {
          "method": "org.eclipse.ui.application.WorkbenchAdvisor.openWindows",
          "source": "WorkbenchAdvisor.java:654"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:807"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1301"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:243"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:283"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:242"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:119"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:700"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:684"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "61139",
      "date": "2004-05-05T23:29:25+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.getLaunchConfigurationManager",
          "source": "AbstractLaunchHistoryAction.java:340"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.initialize",
          "source": "AbstractLaunchHistoryAction.java:123"
        },
        {
          "method": "org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.selectionChanged",
          "source": "AbstractLaunchHistoryAction.java:306"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.refreshEnablement",
          "source": "PluginAction.java:230"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.createDelegate",
          "source": "PluginAction.java:117"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.refreshActionList",
          "source": "WWinPluginAction.java:147"
        },
        {
          "method": "org.eclipse.ui.plugin.AbstractUIPlugin$3.run",
          "source": "AbstractUIPlugin.java:788"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:106"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1996"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1786"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.release",
          "source": "Display.java:1835"
        },
        {
          "method": "org.eclipse.swt.graphics.Device.dispose",
          "source": "Device.java:174"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:99"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:283"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:242"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:119"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:700"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:684"
        }
      ],
      "number": 2,
      "commentIndex": 0,
      "bugId": "61139",
      "date": "2004-05-05T23:29:25+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "critical"
    }
  ],
  "groupId": "61139",
  "bugId": "61139",
  "date": "2004-05-05T23:29:25+02:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "critical"
}