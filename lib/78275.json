{
  "comments": [
    "I200411090800\n\npublic class K {\n\tvoid a() {\n/*press Ctrl+Shift+Down here*/\t}\n\t}\n\tvoid m() {}\n}\n\nError Nov 10, 2004 13:06:05.553 The command for the key you pressed failed\njava.lang.NullPointerException\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.firstOpeningBraceOffset(GoToNextPreviousMemberAction.java:224)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.getOffset(GoToNextPreviousMemberAction.java:214)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.addMemberOffsetList(GoToNextPreviousMemberAction.java:207)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.createOffsetArray(GoToNextPreviousMemberAction.java:200)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.getNewSelectionRange(GoToNextPreviousMemberAction.java:135)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.run(GoToNextPreviousMemberAction.java:102)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:988)\n\tat org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:188)\n\tat org.eclipse.ui.internal.commands.Command.execute(Command.java:130)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:445)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:724)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:767)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:536)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:479)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:221)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Display.filterEvent(Display.java:752)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:817)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)\n\tat org.eclipse.swt.widgets.Control.traverse(Control.java:2696)\n\tat org.eclipse.swt.widgets.Control.translateTraversal(Control.java:2677)\n\tat org.eclipse.swt.widgets.Composite.translateTraversal(Composite.java:799)\n\tat org.eclipse.swt.widgets.Display.translateTraversal(Display.java:3241)\n\tat org.eclipse.swt.widgets.Display.filterMessage(Display.java:766)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2444)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1537)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1508)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:277)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)",
    "- iInitializer.getSourceRange() returns a SourceRange with offset\u003d36, length\u003d0\n- the getSource() and getSourceRange() API say null is returned when there\u0027s no \n  source but since the parent has the source and getSourceRange() returns not null\n  I\u0027d expect to get non-null value for iInitializer.getSource()\n",
    "This is a recovery problem. Start and end of initializer are not correctly\ninitialized when inserted to fix compilation issue.\n",
    "Created an attachment (id\u003d15834)\nThis patch seems to fix the problem...\n",
    "Created an attachment (id\u003d15835)\nRegression test add to CompilationUnitTests\n",
    "David,\nRunning JDT/Core tests shows that the fix is not valid. You\u0027re surely knows why\nthat source range length needs to be equals to 0 for the inserted initializer...\nMay you comment this change? Thx\n",
    "Dani,\nAfter further investigation, I\u0027m not really convinced with your explanation.\nThe source range used by GoToNextPreviousMemberAction comes from private method\ncreateSourceRange() which never returns null!\nSo, you do not rely on ISourceReference#getSourceRange() result to know whether\nthere\u0027s source or not...\n\nI return this bug in your land as you really need to change implementation to\navoid this NPE in JDT/UI.\nHowever, I agree that looking at implementation, Javadoc is not really accurate.\nSo, feel free to open a new bug to make us change either the Javadoc or the\nbehavior of ISourceReference#getSourceRange() method...\n",
    "My explanation did not mention where the source range came from ;-) and I think\nit\u0027s not relevant in this scenario. I commented what I saw in the debugger:\n\n- I have an IType which has source (the action is only enabled in such a case)\n- J Core gives me the (1) initializer (by calling IType.getInitializers())\n- the initializer returns a source range but returns null for getSource()\n\nDirk and I would expect that if X (e.g. IType in our case) has source then all\nthe children have source as well (at least the empty string). getSourceRange()\nalready works like that.",
    "So, if I\u0027ve well understood, you\u0027re expecting that IInitializer#getSource() does\nnot return null in this case (like its parent in fact...).\nAm i right?\n",
    "Yes that is our expectation. Same as we expect getSourceRange() not to return\nnull when the parent already returned a source range.",
    "This is a recovery problem but the fix inside comment 3 is not correct.",
    "David, I already discarded my fix by myself in comment 5... ;-)",
    "*** Bug 78305 has been marked as a duplicate of this bug. ***",
    "I\u0027ve released regression test in CompilationUnitTests by, of course, I\u0027ve\ndesactivated it...\n",
    "Created an attachment (id\u003d16009)\nCorrect patch\n",
    "Fixed and test added\n  ASTConverterTestAST3_2#test0577()\n  CompilationUnitTests#testBug78275()",
    "Verified for 3.1 M4 using build I200412140800.\n"
  ],
  "commentCreationDates": [
    "2004-11-10T12:22:47+01:00",
    "2004-11-10T18:37:28+01:00",
    "2004-11-12T19:59:31+01:00",
    "2004-11-12T20:03:47+01:00",
    "2004-11-12T20:26:22+01:00",
    "2004-11-14T21:14:12+01:00",
    "2004-11-14T21:16:07+01:00",
    "2004-11-15T11:00:04+01:00",
    "2004-11-15T17:46:51+01:00",
    "2004-11-15T17:53:36+01:00",
    "2004-11-16T14:33:00+01:00",
    "2004-11-16T14:44:28+01:00",
    "2004-11-16T14:52:39+01:00",
    "2004-11-17T18:20:47+01:00",
    "2004-11-19T09:34:35+01:00",
    "2004-11-19T09:37:03+01:00",
    "2004-12-14T15:39:16+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.firstOpeningBraceOffset",
          "source": "GoToNextPreviousMemberAction.java:224"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.getOffset",
          "source": "GoToNextPreviousMemberAction.java:214"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.addMemberOffsetList",
          "source": "GoToNextPreviousMemberAction.java:207"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.createOffsetArray",
          "source": "GoToNextPreviousMemberAction.java:200"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.getNewSelectionRange",
          "source": "GoToNextPreviousMemberAction.java:135"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.selectionactions.GoToNextPreviousMemberAction.run",
          "source": "GoToNextPreviousMemberAction.java:102"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:988"
        },
        {
          "method": "org.eclipse.ui.commands.ActionHandler.execute",
          "source": "ActionHandler.java:188"
        },
        {
          "method": "org.eclipse.ui.internal.commands.Command.execute",
          "source": "Command.java:130"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:445"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:724"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:767"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:536"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2",
          "source": "WorkbenchKeyboard.java:479"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent",
          "source": "WorkbenchKeyboard.java:221"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java:752"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:817"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:827"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.traverse",
          "source": "Control.java:2696"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.translateTraversal",
          "source": "Control.java:2677"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.translateTraversal",
          "source": "Composite.java:799"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.translateTraversal",
          "source": "Display.java:3241"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterMessage",
          "source": "Display.java:766"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2444"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1537"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1508"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:277"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:144"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:102"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78275",
      "date": "2004-11-10T12:22:47+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "minor"
    }
  ],
  "groupId": "78275",
  "bugId": "78275",
  "date": "2004-11-10T12:22:47+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "minor"
}