{
  "comments": [
    "We have 5 failing JUnit tests in the 0.7 maintenance stream:\n\nhttp://download.eclipse.org/webtools/downloads/drops/M-M20050815-200508152253/\n\nPreliminary investigation suggests that it\u0027s caused by an underlying error when \ntrying to create a module and a failing builder. Here\u0027s some more info from the \nlog file:\n\nhttp://download.eclipse.org/webtools/downloads/drops/M-M20050815-\n200508152253/testResults/consolelogs/wtptestlog.txt\n\neclipse-test:\n     [echo] Running org.eclipse.wst.common.frameworks.tests.bvt.AutomatedBVT\n\n     [java] *** ERROR ***: Mon Aug 15 23:59:59 EEST 2005    \norg.eclipse.core.runtime.CoreException[1]: java.lang.ClassNotFoundException: \nbogusClass\n     [java]     \tat \norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:403)\n     [java]     \tat \norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:350)\n     [java]     \tat \norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass\n(AbstractClassLoader.java:78)\n     [java]     \tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n     [java]     \tat \norg.eclipse.osgi.framework.internal.core.BundleLoader.loadClass\n(BundleLoader.java:275)\n     [java]     \tat \norg.eclipse.osgi.framework.internal.core.BundleHost.loadClass\n(BundleHost.java:227)\n     [java]     \tat \norg.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass\n(AbstractBundle.java:1259)\n     [java]     \tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:152)\n     [java]     \tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:142)\n     [java]     \tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensio\nn(ConfigurationElement.java:129)\n     [java]     \tat \norg.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableEx\ntension(ConfigurationElementHandle.java:48)\n     [java]     \tat \norg.eclipse.wst.common.frameworks.internal.datamodel.DataModelExtensionReader.ge\ntProvider(DataModelExtensionReader.java:158)\n     [java]     \tat \norg.eclipse.wst.common.frameworks.datamodel.DataModelFactory.loadProvider\n(DataModelFactory.java:52)\n     [java]     \tat \norg.eclipse.wst.common.frameworks.datamodel.DataModelFactory.createDataModel\n(DataModelFactory.java:42)\n     [java]     \tat \norg.eclipse.wst.common.frameworks.datamodel.tests.DataModelFactoryTest.testBogus\nExtension(DataModelFactoryTest.java:25)\n     [java]     \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native \nMethod)\n     [java]     \tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n     [java]     \tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n     [java]     \tat java.lang.reflect.Method.invoke(Method.java:324)\n     [java]     \tat junit.framework.TestCase.runTest(TestCase.java:154)\n     [java]     \tat junit.framework.TestCase.runBare(TestCase.java:127)\n     [java]     \tat junit.framework.TestResult$1.protect\n(TestResult.java:106)",
    "Tim are these your tests?",
    "Hi Chuck,\n\nJeffrey had talked to me and assigned it to wst.common since I hadn\u0027t changed\nany code and the failure is happening in EMF problems underneath wst.common:\n\n     [echo] Running org.eclipse.jst.server.tomcat.core.tests.AllTests\n     [java] java.lang.NullPointerException\n     [java] \tat\norg.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:229)\n     [java] \tat\norg.eclipse.emf.common.notify.impl.NotifyingListImpl.dispatchNotification(NotifyingListImpl.java:251)\n     [java] \tat\norg.eclipse.emf.common.notify.impl.NotifyingListImpl.clear(NotifyingListImpl.java:846)\n     [java] \tat\norg.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:951)\n     [java] \tat\norg.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:832)\n     [java] \tat\norg.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load(TranslatorResourceImpl.java:382)\n     [java] \tat\norg.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:249)\n     [java] \tat\norg.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad(ProjectResourceSetImpl.java:83)\n     [java] \tat\norg.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:264)\n     [java] \tat\norg.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:305)\n     [java] \tat\norg.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource(WorkbenchResourceHelper.java:299)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource(EditModel.java:677)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getPrimaryResource(EditModel.java:1507)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getPrimaryRootObject(EditModel.java:1488)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryRootObject(ModuleStructuralModel.java:75)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.StructureEdit.getComponentModelRoot(StructureEdit.java:491)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.StructureEdit.getWorkbenchModules(StructureEdit.java:519)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.resources.FlexibleProject.getComponents(FlexibleProject.java:40)\n     [java] \tat\norg.eclipse.jst.j2ee.internal.deployables.J2EEDeployableFactory.createModules(J2EEDeployableFactory.java:103)\n     [java] \tat\norg.eclipse.jst.j2ee.internal.deployables.J2EEDeployableFactory.createModules(J2EEDeployableFactory.java:89)\n     [java] \tat\norg.eclipse.wst.server.core.util.ProjectModuleFactoryDelegate.addModules(ProjectModuleFactoryDelegate.java:297)\n     [java] \tat\norg.eclipse.wst.server.core.util.ProjectModuleFactoryDelegate.cacheModules(ProjectModuleFactoryDelegate.java:83)\n     [java] \tat\norg.eclipse.jst.j2ee.internal.web.deployables.WebDeployableFactory.getModules(WebDeployableFactory.java:98)\n     [java] \tat\norg.eclipse.wst.server.core.internal.ModuleFactory.getModules(ModuleFactory.java:129)\n     [java] \tat\norg.eclipse.wst.server.core.ServerUtil.getModules(ServerUtil.java:255)\n     [java] \tat\norg.eclipse.wst.server.core.ServerUtil.getModules(ServerUtil.java:53)\n     [java] \tat\norg.eclipse.wst.server.core.internal.ResourceManager.publishHandleProjectChange(ResourceManager.java:938)\n     [java] \tat\norg.eclipse.wst.server.core.internal.ResourceManager$2.visit(ResourceManager.java:165)\n     [java] \tat\norg.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:68)\n\n\n  [java] java.lang.NullPointerException\n     [java] \tat org.eclipse.emf.ecore.util.EcoreUtil.getAdapter(EcoreUtil.java:144)\n     [java] \tat\norg.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.preUnload(EMF2DOMRenderer.java:243)\n     [java] \tat\norg.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.doUnload(TranslatorResourceImpl.java:185)\n     [java] \tat\norg.eclipse.emf.ecore.resource.impl.ResourceImpl.unload(ResourceImpl.java:1101)\n     [java] \tat\norg.eclipse.wst.common.internal.emf.resource.ReferencedXMIResourceImpl.unloadIfNecessary(ReferencedXMIResourceImpl.java:135)\n     [java] \tat\norg.eclipse.wst.common.internal.emf.resource.ReferencedXMIResourceImpl.releaseFromRead(ReferencedXMIResourceImpl.java:188)\n     [java] \tat\norg.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.releaseFromRead(TranslatorResourceImpl.java:343)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.release(ModuleStructuralModel.java:64)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.integration.EditModel.release(EditModel.java:979)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.integration.EditModel.releaseResources(EditModel.java:1001)\n     [java] \tat\norg.eclipse.wst.common.internal.emfworkbench.integration.EditModel.releaseAccess(EditModel.java:959)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.StructureEdit.dispose(StructureEdit.java:463)\n     [java] \tat\norg.eclipse.wst.common.componentcore.internal.builder.ComponentStructuralBuilder.build(ComponentStructuralBuilder.java:87)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n     [java] \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n     [java] \tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n     [java] \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n     [java] \tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)\n     [java] \tat\norg.eclipse.core.internal.resources.Workspace.build(Workspace.java:211)\n     [java] \tat\norg.eclipse.jst.server.tomcat.core.tests.module.ModuleTestCase.test04GetModule(ModuleTestCase.java:60)\n",
    "Ah sorry - these tests were failing off and on in 0.7 builds, and we did make\nsome fixes in the WTP0.7 builds.\n\nI don\u0027t think we should make these fixes in this stream unless we really require\nthem.   The stack in this defect  (ClassNotFound) actually is from a \"passing\"\ntest.   \n\n",
    "Chuck, are these code fixes or test fixes? If these are code fixes, are they \nnot critical enough to get into the maintenance stream? If these are test \nfixes, that means these testcases are obsolete. In which case, I suggest we \ndisable them or fix them.",
    "These are code fixes  For the NPE\u0027s Tim showed below - they happen randomly, and\nare due to multithreading situations...  we added some synchronization changes\nin the 1.0 stream, but don\u0027t feel we should retrofit the changes here...  Let me\nknow how you feel about this....  actually we are still tracking down a few\nholes in the 1.0 stream.",
    "Since we decided to not fix these problems in 0.7 stream, and the fixes seem to\nhave fixed the junits in the 1.0 stream, I am closing this defect.",
    "Verified. Closing bug."
  ],
  "commentCreationDates": [
    "2005-08-17T15:51:37+02:00",
    "2005-08-23T17:17:14+02:00",
    "2005-08-23T18:36:49+02:00",
    "2005-08-23T18:51:44+02:00",
    "2005-08-23T20:08:17+02:00",
    "2005-08-23T20:21:40+02:00",
    "2005-09-09T05:33:54+02:00",
    "2006-01-10T15:01:06+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "bogusClass      [java]",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:403"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "107209",
      "date": "2005-08-17T15:51:37+02:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "critical"
    }
  ],
  "groupId": "107209",
  "bugId": "107209",
  "date": "2005-08-17T15:51:37+02:00",
  "product": "Web Tools",
  "component": "wst.common",
  "severity": "critical"
}