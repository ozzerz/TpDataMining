{
  "comments": [
    "This can happen during the shutdown of the workbench window.  It happens because\n of the reference to the window after it\u0027s gone to get the history.  This is all\ndone in an async task which might run once the window is gone.  It\u0027s only\nannoying because it makes scary looking messages in the log.\n\nI have a headless test suite that makes this happen at will, as it\ncreates/destroys workbench windows with each test case.\n\nCaused by: java.lang.NullPointerException\n        at\norg.eclipse.ui.operations.OperationHistoryActionHandler.getHistory(OperationHistoryActionHandler.java:227)\n        at\norg.eclipse.ui.operations.RedoActionHandler.flush(RedoActionHandler.java:51)\n        at\norg.eclipse.ui.operations.OperationHistoryActionHandler$2.run(OperationHistoryActionHandler.java:140)\n        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n        at\norg.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n        ... 58 more",
    "Created an attachment (id\u003d29681)\nSimple patch\n",
    "I was slightly wrong in my initial description, my tests only destroy the window\nat the end of the junit run, and the unpatched code shows this error several\ntimes in the log. ",
    "Fixed \u003e20051110.\nFrancis - is this something that you would prefer be backported to 3.1.2 or is \nfixing it in the 3.2 cycle good enough?",
    "Thanks for the quick turnaround.  It would be great to have it for 3.1.2.  Thanks.",
    "mvm - okay for 3.1.2?   fix is low risk",
    "NPEs are bad, yes for 3.1.2",
    "committed to R3_1_maintenance branch, \u003e20051114.\nLeaving as a 3.2 M4 milestone for verification, then it will be marked for \nR3.1.2 for later verification.",
    "I\u0027ve logged bug 116309 to track the 3.1.2 fix so that we can close this one and\nverify for M4",
    "verified I20051213-0100, Win XP Pro through source code inspection",
    "Francis - for completeness, I\u0027m trying to write an automated test to mock this condition.  (to prevent future regressions).  Do you have any idea which part of your test suite triggered the logging?  It would seem someone was attempting to run the action handler in an async block.  Most of my test cases trigger asyncs when the action handler receives notifications, and these don\u0027t cause the failure.\n\nI can put together a test case that hangs onto the action handler and runs it after the window is closed, but I want to make sure I understand the original condition.  There might be something stranger going on underneath that caused the action handler to be run after the window was shutdown (ie, a client problem that is being masked by my fixes)...",
    "Susan, don\u0027t you just love the one line fixes that take 3 days to write the automated regression tests?\n\nThis happens in my environment because I make very heavy use of the operation history with undo/redo.  Since I have the menu items and buttons for undo/redo, I have 4 listeners for OperationHistoryEvents.  The OperationHistoryActionHandler is emitting these events running them asynchronously, so each Operation I execute in my tests results in 4 of these async events when is it executed.  And my tests execute thousands of these (manipulating trees mostly).  When the main window goes away there are still a bunch of theses hanging out being processed.\n\nI\u0027m surprised these errors would not be seen in the eclipse automated regression testing, if it\u0027s going a lot of operations which can be undone and then terminating the main window in junit, you should see this condition.\n\nI think if you make a test that does a few thousand undoable operations and executes them, and then closes the main window you will easily see this problem.\n\nLet me know if I can provide more information, I can easily reproduce this.",
    "Thanks for the info, Francis.\n\nBecause the operations framework was designed to be headless, most of the API tests are done at the framework level and performed headlessly.  And they aren\u0027t so much stress tests as they are API correctness tests.  Your comments point out that what we need is more stress testing done in the context of the workbench.  The workbench operation tests are currently just checking things specific to the workbench undo context, etc.\n\nIn trying to \"force\" the error, I ran the operations API tests in the workbench and dispatched all async execs in the test after closing the workbench window, and then tried running them multiple times, in multiple workbench windows, etc.  This did not fail, so I suspect I\u0027m just not doing enough operations to get the timing right.  I\u0027ll add some stress tests that do thousands of operations as you suggest.\n\nThanks for the info. ",
    "opened bug #123520 to track the stress tests issue.  This bug remains closed and verified."
  ],
  "commentCreationDates": [
    "2005-11-10T07:29:56+01:00",
    "2005-11-10T07:49:14+01:00",
    "2005-11-10T08:00:23+01:00",
    "2005-11-10T18:19:52+01:00",
    "2005-11-10T18:44:33+01:00",
    "2005-11-10T19:09:20+01:00",
    "2005-11-10T19:13:10+01:00",
    "2005-11-14T19:07:38+01:00",
    "2005-11-14T19:27:20+01:00",
    "2005-12-13T21:56:07+01:00",
    "2006-01-11T01:13:45+01:00",
    "2006-01-11T01:41:21+01:00",
    "2006-01-11T18:11:25+01:00",
    "2006-01-11T23:16:41+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.operations.OperationHistoryActionHandler.getHistory",
          "source": "OperationHistoryActionHandler.java:227"
        },
        {
          "method": "org.eclipse.ui.operations.RedoActionHandler.flush",
          "source": "RedoActionHandler.java:51"
        },
        {
          "method": "org.eclipse.ui.operations.OperationHistoryActionHandler$2.run",
          "source": "OperationHistoryActionHandler.java:140"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "115761",
      "date": "2005-11-10T07:29:56+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "115761",
  "bugId": "115761",
  "date": "2005-11-10T07:29:56+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}