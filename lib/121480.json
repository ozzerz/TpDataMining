{
  "comments": [
    "I upgraded to 3.2M4 this morning and found that among other problems debugger is not able to locate sources of some of my classes any more. It looks like the problem is triggered by two \"interesting\" things about my workspace:\n\n* Everything is a plugin project in my workspace even though I launch some of classes as regular java apps.\n* Some of my bundles to not write anything to project-default output folder and the folder does not even exist, everything goes to source-folder-specific output location (this is how Eclipse WTP 0.7 treats \"dependent utility jar\" projects)\n\n\n\nProblem appears to be caused by JavaSourceLookupUtil (around line 77) which assumes ExternalArchiveSourceContainer for everything which is not a directory. Let me know if you need a patch for this problem.\n\nHere is the exceptions that I get and I will attach sample projects with steps to reproduce the problem in a moment. \n\n!ENTRY org.eclipse.debug.core 4 2 2005-12-19 18:19:04.598\n!MESSAGE Problems occurred when invoking code from plug-in: \"org.eclipse.debug.core\".\n!STACK 1\norg.eclipse.core.runtime.CoreException[120]: java.util.zip.ZipException: The system cannot find the path specified.\n \\p1\\bin\n\tat java.util.zip.ZipFile.open(Native Method)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:140)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:100)\n\tat org.eclipse.debug.internal.core.sourcelookup.SourceLookupUtils.getZipFile(SourceLookupUtils.java:63)\n\tat org.eclipse.debug.core.sourcelookup.containers.ExternalArchiveSourceContainer.getArchive(ExternalArchiveSourceContainer.java:193)\n\tat org.eclipse.debug.core.sourcelookup.containers.ExternalArchiveSourceContainer.findSourceElements(ExternalArchiveSourceContainer.java:79)\n\tat org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer.findSourceElements(CompositeSourceContainer.java:78)\n\tat org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer.findSourceElements(CompositeSourceContainer.java:45)\n\tat org.eclipse.debug.core.sourcelookup.AbstractSourceLookupParticipant.findSourceElements(AbstractSourceLookupParticipant.java:67)\n\tat org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run(AbstractSourceLookupDirector.java:126)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:785)\n\tat org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup(AbstractSourceLookupDirector.java:461)\n\tat org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement(AbstractSourceLookupDirector.java:711)\n\tat org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup(SourceLookupFacility.java:147)\n\tat org.eclipse.debug.ui.DebugUITools.lookupSource(DebugUITools.java:665)\n\tat org.eclipse.debug.internal.ui.elements.adapters.StackFrameSourceDisplayAdapter$SourceLookupJob.run(StackFrameSourceDisplayAdapter.java:89)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n\n\nThis problem makes 3.2M4 unusable for me :-(",
    "Created an attachment (id\u003d31987)\nsample projects\n\nSteps to reproduce\n\n* Import p1 and p2 projects into a fresh workspace\n* Put breakpoint in P2#main\n* Debug P2 and step P1#getInstance into as specified in the comment\n\nHope this helps",
    "This does not work in 3.2 M3 either. (The problem is not new to 3.2 M4).\n\nThe problem is the resolution of the \"required plug-ins\" container. We resolve it to the project output locations, rather than the source folders.",
    "Does not work in 3.1 either. If your not really using plug-ins, the workaround is to add the project as a required project (on the buildpath), rather than a required plug-in.",
    "A classpath container can contain library and project references. When computing the source lookup path for a conatiner, we resolve the container as a classpath and convert to source locations. This means a project in a container is resolved to its output locations rather than its source locations.\n\nA container may resolve differently in the context of a configuration than a project (for example, the JRE used to run/debug with). The shortcoming is that we have no way to ask for the \"unresolved\" entries within a container for a runtime classpath (so that the source lookup provider could do the right thing for projects). ",
    "Deferred for future consideration."
  ],
  "commentCreationDates": [
    "2005-12-19T23:31:51+01:00",
    "2005-12-19T23:37:28+01:00",
    "2005-12-20T17:47:46+01:00",
    "2005-12-20T17:50:12+01:00",
    "2006-01-06T16:37:22+01:00",
    "2006-02-08T14:28:04+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.zip.ZipException",
      "message": "The system cannot find the path specified.  \\p1\\bin",
      "elements": [
        {
          "method": "java.util.zip.ZipFile.open",
          "source": "Native Method"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:140"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:100"
        },
        {
          "method": "org.eclipse.debug.internal.core.sourcelookup.SourceLookupUtils.getZipFile",
          "source": "SourceLookupUtils.java:63"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.containers.ExternalArchiveSourceContainer.getArchive",
          "source": "ExternalArchiveSourceContainer.java:193"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.containers.ExternalArchiveSourceContainer.findSourceElements",
          "source": "ExternalArchiveSourceContainer.java:79"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer.findSourceElements",
          "source": "CompositeSourceContainer.java:78"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer.findSourceElements",
          "source": "CompositeSourceContainer.java:45"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.AbstractSourceLookupParticipant.findSourceElements",
          "source": "AbstractSourceLookupParticipant.java:67"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector$SourceLookupQuery.run",
          "source": "AbstractSourceLookupDirector.java:126"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:785"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.doSourceLookup",
          "source": "AbstractSourceLookupDirector.java:461"
        },
        {
          "method": "org.eclipse.debug.core.sourcelookup.AbstractSourceLookupDirector.getSourceElement",
          "source": "AbstractSourceLookupDirector.java:711"
        },
        {
          "method": "org.eclipse.debug.internal.ui.sourcelookup.SourceLookupFacility.lookup",
          "source": "SourceLookupFacility.java:147"
        },
        {
          "method": "org.eclipse.debug.ui.DebugUITools.lookupSource",
          "source": "DebugUITools.java:665"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.StackFrameSourceDisplayAdapter$SourceLookupJob.run",
          "source": "StackFrameSourceDisplayAdapter.java:89"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "121480",
      "date": "2005-12-19T23:31:51+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "major"
    }
  ],
  "groupId": "121480",
  "bugId": "121480",
  "date": "2005-12-19T23:31:51+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "major"
}