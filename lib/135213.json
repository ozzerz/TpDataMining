{
  "comments": [
    "I have a moderately large source base (between 100-200 classes I would guess) that compiles fine w/ ajc 1.5.0. On 1.5.1 it crashes the compiler:\n\nD:\\work\\napa\\jnapa\\core\u003eajc -source 1.5 -target 1.5 -d build\\classes -cp ..\\commons\\utils\\build\\napa_utils.jar;lib\\aspec\ntjrt.jar;lib\\dom4j-1.5.2.jar;lib\\groovy-all-1.0-jsr-05.jar;..\\commons\\test_commons\\lib\\junit.jar -sourceroots src;gen_sr\nc;test_src\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\bootstrap\\MappingXMLInitializer.java:67 [warning] Exce\nption swallowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(Exception ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\bootstrap\\ResourceLinkXMLInitializer.java:69 [warning]\n Exception swallowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(Exception ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\link\\rdbms\\RdbmsLink.java:250 [warning] Exception swal\nlowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(SQLException ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\link\\rdbms\\RdbmsTransaction.java:645 [warning] Excepti\non swallowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(SQLException ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\link\\rdbms\\RdbmsTransaction.java:649 [warning] Excepti\non swallowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(SQLException ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\link\\rdbms\\StaleConnectionClosingAspect.aj:15 [warning\n] Exception swallowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(SQLException ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\link\\rdbms\\StaleConnectionClosingAspect.aj:18 [warning\n] Exception swallowed in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(SQLException ignored) {}\n\ntrouble in:\npublic final class fi.napa.core.tableprocessing.transfer.link.TableMetaData extends java.lang.Object:\n  private final String _tableName\n  private final java.util.List _columns\n  static final boolean $assertionsDisabled\n  private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0\n  static void \u003cclinit\u003e():\n    staticinitialization(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cclinit\u003e())\n    |               LDC fi.napa.core.tableprocessing.transfer.link.TableMetaData   (line 23)\n    | method-call(boolean java.lang.Class.desiredAssertionStatus())\n    | |             INVOKEVIRTUAL java.lang.Class.desiredAssertionStatus ()Z\n    | method-call(boolean java.lang.Class.desiredAssertionStatus())\n    |               IFNE L0\n    |               ICONST_1\n    |               GOTO L1\n    |           L0: ICONST_0\n    |           L1: PUTSTATIC fi.napa.core.tableprocessing.transfer.link.TableMetaData.$assertionsDisabled Z\n    |               RETURN\n    staticinitialization(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cclinit\u003e())\n  end static void \u003cclinit\u003e()\n\n  public void \u003cinit\u003e(String, java.util.List)    org.aspectj.weaver.MethodDeclarationLineNumber: 31:975\n:\n                    ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 31)\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n    constructor-execution(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e(java.lang.String, java.ut\nil.List))\n    |               ALOAD_2     // Ljava/util/List; columns   (line 32)\n    |               IFNULL L0\n    |               ALOAD_2     // Ljava/util/List; columns\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               IFNE L1\n    |           L0: NEW java.lang.IllegalArgumentException\n    |               DUP\n    |               LDC \"The columns may not be null or empty\"\n    | constructor-call(void java.lang.IllegalArgumentException.\u003cinit\u003e(java.lang.String))\n    | |             INVOKESPECIAL java.lang.IllegalArgumentException.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void java.lang.IllegalArgumentException.\u003cinit\u003e(java.lang.String))\n    |               ATHROW\n    |           L1: ICONST_0   (line 34)\n    |               ISTORE_3\n    |               GOTO L6\n    |           L2: ILOAD_3     // I i   (line 35)\n    |               ICONST_1\n    |               IADD\n    |               ISTORE 4\n    |               GOTO L5\n    |           L3: ALOAD_2     // Ljava/util/List; columns   (line 36)\n    |               ILOAD_3     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    |               ALOAD_2     // Ljava/util/List; columns\n    |               ILOAD 4     // I j\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    | |             INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    |               IFEQ L4\n    |               NEW java.lang.IllegalArgumentException   (line 37)\n    |               DUP\n    |               NEW java.lang.StringBuilder\n    |               DUP\n    |               LDC \"There were two columns named \"\n    | constructor-call(void java.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n    | |             INVOKESPECIAL java.lang.StringBuilder.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void java.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n    |               ALOAD_2     // Ljava/util/List; columns\n    |               ILOAD_3     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String))\n    | method-call(java.lang.String java.lang.StringBuilder.toString())\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;\n    | method-call(java.lang.String java.lang.StringBuilder.toString())\n    | constructor-call(void java.lang.IllegalArgumentException.\u003cinit\u003e(java.lang.String))\n    | |             INVOKESPECIAL java.lang.IllegalArgumentException.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void java.lang.IllegalArgumentException.\u003cinit\u003e(java.lang.String))\n    |               ATHROW\n    |           L4: IINC 4 1     // I j   (line 35)\n    |           L5: ILOAD 4     // I j\n    |               ALOAD_2     // Ljava/util/List; columns\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               IF_ICMPLT L3\n    |               IINC 3 1     // I i   (line 34)\n    |           L6: ILOAD_3     // I i\n    |               ALOAD_2     // Ljava/util/List; columns\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               IF_ICMPLT L2\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 41)\n    |               ALOAD_1     // Ljava/lang/String; tableName\n    |               PUTFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._tableName Ljava/lang/String;\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 42)\n    |               NEW java.util.ArrayList\n    |               DUP\n    |               ALOAD_2     // Ljava/util/List; columns\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(java.util.Collection))\n    | |             INVOKESPECIAL java.util.ArrayList.\u003cinit\u003e (Ljava/util/Collection;)V\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(java.util.Collection))\n    | method-call(java.util.List java.util.Collections.unmodifiableList(java.util.List))\n    | |             INVOKESTATIC java.util.Collections.unmodifiableList (Ljava/util/List;)Ljava/util/List;\n    | method-call(java.util.List java.util.Collections.unmodifiableList(java.util.List))\n    |               PUTFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               RETURN   (line 43)\n    constructor-execution(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e(java.lang.String, java.ut\nil.List))\n  end public void \u003cinit\u003e(String, java.util.List)\n\n  public void \u003cinit\u003e(java.util.List)    org.aspectj.weaver.MethodDeclarationLineNumber: 45:1675\n:\n                    ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 46)\n                    ACONST_NULL\n                    ALOAD_1     // Ljava/util/List; columns\n                    INVOKESPECIAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e (Ljava/lang/String;Lja\nva/util/List;)V\n    constructor-execution(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e(java.util.List))\n    |               RETURN   (line 47)\n    constructor-execution(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e(java.util.List))\n  end public void \u003cinit\u003e(java.util.List)\n\n  public void \u003cinit\u003e(String, fi.napa.core.tableprocessing.transfer.link.TableMetaData)    org.aspectj.weaver.MethodDecla\nrationLineNumber: 49:1756\n:\n                    ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 49)\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n    constructor-execution(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e(java.lang.String, fi.napa\n.core.tableprocessing.transfer.link.TableMetaData))\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 50)\n    |               ALOAD_1     // Ljava/lang/String; tableName\n    |               PUTFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._tableName Ljava/lang/String;\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 51)\n    |               ALOAD_2     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; other\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               PUTFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               RETURN   (line 52)\n    constructor-execution(void fi.napa.core.tableprocessing.transfer.link.TableMetaData.\u003cinit\u003e(java.lang.String, fi.napa\n.core.tableprocessing.transfer.link.TableMetaData))\n  end public void \u003cinit\u003e(String, fi.napa.core.tableprocessing.transfer.link.TableMetaData)\n\n  public java.util.List getKeyColumns()    org.aspectj.weaver.MethodDeclarationLineNumber: 56:1997\n:\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 57)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.Column.extractKey(java.util.List))\n    | |             INVOKESTATIC fi.napa.core.tableprocessing.transfer.link.Column.extractKey (Ljava/util/List;)Ljava/ut\nil/List;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.Column.extractKey(java.util.List))\n    |               ARETURN\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n  end public java.util.List getKeyColumns()\n\n  public java.util.List getNonKeyColumns()    org.aspectj.weaver.MethodDeclarationLineNumber: 60:2089\n:\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumns())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 61)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.Column.extractNonKeyCols(java.util.List))\n    | |             INVOKESTATIC fi.napa.core.tableprocessing.transfer.link.Column.extractNonKeyCols (Ljava/util/List;)L\njava/util/List;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.Column.extractNonKeyCols(java.util.List))\n    |               ARETURN\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumns())\n  end public java.util.List getNonKeyColumns()\n\n  public java.util.List getKeyColumnNames()    org.aspectj.weaver.MethodDeclarationLineNumber: 64:2193\n:\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumnNames())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 65)\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns ()Ljava/util/Li\nst;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    |               ASTORE_1\n    |               NEW java.util.ArrayList   (line 66)\n    |               DUP\n    |               ALOAD_1     // Ljava/util/List; keyCols\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(int))\n    | |             INVOKESPECIAL java.util.ArrayList.\u003cinit\u003e (I)V\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(int))\n    |               ASTORE_2\n    |               ALOAD_1     // Ljava/util/List; keyCols   (line 67)\n    | method-call(java.util.Iterator java.util.List.iterator())\n    | |             INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    |               ASTORE_3\n    |               GOTO L1\n    |           L0: ALOAD_3     // Ljava/util/Iterator; keyColIt   (line 68)\n    | method-call(java.lang.Object java.util.Iterator.next())\n    | |             INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Iterator.next())\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               ASTORE 4\n    |               ALOAD_2     // Ljava/util/List; keyNames   (line 69)\n    |               ALOAD 4     // Lfi/napa/core/tableprocessing/transfer/link/Column; col\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | method-call(boolean java.util.List.add(java.lang.Object))\n    | |             INVOKEINTERFACE java.util.List.add (Ljava/lang/Object;)Z\n    | method-call(boolean java.util.List.add(java.lang.Object))\n    |               POP\n    |           L1: ALOAD_3     // Ljava/util/Iterator; keyColIt   (line 67)\n    | method-call(boolean java.util.Iterator.hasNext())\n    | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n    | method-call(boolean java.util.Iterator.hasNext())\n    |               IFNE L0\n    |               ALOAD_2     // Ljava/util/List; keyNames   (line 71)\n    |               ARETURN\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumnNames())\n  end public java.util.List getKeyColumnNames()\n\n  public java.util.List getNonKeyColumnNames()    org.aspectj.weaver.MethodDeclarationLineNumber: 74:2526\n:\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumnNames())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 75)\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumns())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumns ()Ljava/util\n/List;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumns())\n    |               ASTORE_1\n    |               NEW java.util.ArrayList   (line 76)\n    |               DUP\n    |               ALOAD_1     // Ljava/util/List; cols\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(int))\n    | |             INVOKESPECIAL java.util.ArrayList.\u003cinit\u003e (I)V\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(int))\n    |               ASTORE_2\n    |               ALOAD_1     // Ljava/util/List; cols   (line 77)\n    | method-call(java.util.Iterator java.util.List.iterator())\n    | |             INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    |               ASTORE_3\n    |               GOTO L1\n    |           L0: ALOAD_3     // Ljava/util/Iterator; colIt   (line 78)\n    | method-call(java.lang.Object java.util.Iterator.next())\n    | |             INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Iterator.next())\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               ASTORE 4\n    |               ALOAD_2     // Ljava/util/List; colNames   (line 79)\n    |               ALOAD 4     // Lfi/napa/core/tableprocessing/transfer/link/Column; col\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | method-call(boolean java.util.List.add(java.lang.Object))\n    | |             INVOKEINTERFACE java.util.List.add (Ljava/lang/Object;)Z\n    | method-call(boolean java.util.List.add(java.lang.Object))\n    |               POP\n    |           L1: ALOAD_3     // Ljava/util/Iterator; colIt   (line 77)\n    | method-call(boolean java.util.Iterator.hasNext())\n    | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n    | method-call(boolean java.util.Iterator.hasNext())\n    |               IFNE L0\n    |               ALOAD_2     // Ljava/util/List; colNames   (line 81)\n    |               ARETURN\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getNonKeyColumnNames())\n  end public java.util.List getNonKeyColumnNames()\n\n  public java.util.List getColumnNames()    org.aspectj.weaver.MethodDeclarationLineNumber: 84:2841\n:\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnNames())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 85)\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumns())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumns ()Ljava/util/List;\n\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumns())\n    |               ASTORE_1\n    |               NEW java.util.ArrayList\n    |               DUP\n    |               ALOAD_1     // Ljava/util/List; cols\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(int))\n    | |             INVOKESPECIAL java.util.ArrayList.\u003cinit\u003e (I)V\n    | constructor-call(void java.util.ArrayList.\u003cinit\u003e(int))\n    |               ASTORE_2\n    |               ALOAD_1     // Ljava/util/List; cols   (line 86)\n    | method-call(java.util.Iterator java.util.List.iterator())\n    | |             INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    |               ASTORE_3\n    |               GOTO L1\n    |           L0: ALOAD_3     // Ljava/util/Iterator; colIt   (line 87)\n    | method-call(java.lang.Object java.util.Iterator.next())\n    | |             INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Iterator.next())\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               ASTORE 4\n    |               ALOAD_2     // Ljava/util/List; colNames   (line 88)\n    |               ALOAD 4     // Lfi/napa/core/tableprocessing/transfer/link/Column; col\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | method-call(boolean java.util.List.add(java.lang.Object))\n    | |             INVOKEINTERFACE java.util.List.add (Ljava/lang/Object;)Z\n    | method-call(boolean java.util.List.add(java.lang.Object))\n    |               POP\n    |           L1: ALOAD_3     // Ljava/util/Iterator; colIt   (line 86)\n    | method-call(boolean java.util.Iterator.hasNext())\n    | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n    | method-call(boolean java.util.Iterator.hasNext())\n    |               IFNE L0\n    |               ALOAD_2     // Ljava/util/List; colNames   (line 90)\n    |               ARETURN\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnNames())\n  end public java.util.List getColumnNames()\n\n  public int getColumnPosition(fi.napa.core.tableprocessing.transfer.link.Column)    org.aspectj.weaver.MethodDeclaratio\nnLineNumber: 94:3183\n:\n    method-execution(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(fi.napa.core.tablepr\nocessing.transfer.link.Column))\n    |               GETSTATIC fi.napa.core.tableprocessing.transfer.link.TableMetaData.$assertionsDisabled Z   (line 95)\n\n    |               IFNE L0\n    |               ALOAD_1     // Lfi/napa/core/tableprocessing/transfer/link/Column; c\n    |               IFNONNULL L0\n    |               NEW java.lang.AssertionError\n    |               DUP\n    | constructor-call(void java.lang.AssertionError.\u003cinit\u003e())\n    | |             INVOKESPECIAL java.lang.AssertionError.\u003cinit\u003e ()V\n    | constructor-call(void java.lang.AssertionError.\u003cinit\u003e())\n    |               ATHROW\n    |           L0: ICONST_0   (line 96)\n    |               ISTORE_2\n    |               GOTO L3\n    |           L1: ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 97)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               ILOAD_2     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               ASTORE_3\n    |               ALOAD_3     // Lfi/napa/core/tableprocessing/transfer/link/Column; col   (line 98)\n    |               ALOAD_1     // Lfi/napa/core/tableprocessing/transfer/link/Column; c\n    | method-call(boolean fi.napa.core.tableprocessing.transfer.link.Column.equals(java.lang.Object))\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.equals (Ljava/lang/Object;)Z\n    | method-call(boolean fi.napa.core.tableprocessing.transfer.link.Column.equals(java.lang.Object))\n    |               IFEQ L2\n    |               ILOAD_2     // I i\n    |               IRETURN\n    |           L2: IINC 2 1     // I i   (line 96)\n    |           L3: ILOAD_2     // I i\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               IF_ICMPLT L1\n    |               ICONST_M1   (line 100)\n    |               IRETURN\n    method-execution(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(fi.napa.core.tablepr\nocessing.transfer.link.Column))\n  end public int getColumnPosition(fi.napa.core.tableprocessing.transfer.link.Column)\n\n  public int[] getKeyColumnPositions()    org.aspectj.weaver.MethodDeclarationLineNumber: 104:3462\n:\n    method-execution(int[] fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumnPositions())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 105)\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns ()Ljava/util/Li\nst;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               NEWARRAY INT\n    |               ASTORE_1\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 106)\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns ()Ljava/util/Li\nst;\n    | method-call(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumns())\n    |               ASTORE_2\n    |               ICONST_0   (line 107)\n    |               ISTORE_3\n    |               GOTO L1\n    |           L0: ALOAD_1     // [I keys   (line 108)\n    |               ILOAD_3     // I i\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               ALOAD_2     // Ljava/util/List; keyList\n    |               ILOAD_3     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(fi.napa.core.tableproce\nssing.transfer.link.Column))\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition (Lfi/napa/c\nore/tableprocessing/transfer/link/Column;)I\n    | method-call(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(fi.napa.core.tableproce\nssing.transfer.link.Column))\n    |               IASTORE\n    |               IINC 3 1     // I i   (line 107)\n    |           L1: ILOAD_3     // I i\n    |               ALOAD_2     // Ljava/util/List; keyList\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               IF_ICMPLT L0\n    |               ALOAD_1     // [I keys   (line 110)\n    |               ARETURN\n    method-execution(int[] fi.napa.core.tableprocessing.transfer.link.TableMetaData.getKeyColumnPositions())\n  end public int[] getKeyColumnPositions()\n\n  public boolean hasKey()    org.aspectj.weaver.MethodDeclarationLineNumber: 113:3748\n:\n    method-execution(boolean fi.napa.core.tableprocessing.transfer.link.TableMetaData.hasKey())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 114)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    | |             INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    |               ASTORE_1\n    |               GOTO L1\n    |           L0: ALOAD_1     // Ljava/util/Iterator; cols   (line 115)\n    | method-call(java.lang.Object java.util.Iterator.next())\n    | |             INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Iterator.next())\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(boolean fi.napa.core.tableprocessing.transfer.link.Column.isKey())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.isKey ()Z\n    | method-call(boolean fi.napa.core.tableprocessing.transfer.link.Column.isKey())\n    |               IFEQ L1\n    |               ICONST_1\n    |               IRETURN\n    |           L1: ALOAD_1     // Ljava/util/Iterator; cols   (line 114)\n    | method-call(boolean java.util.Iterator.hasNext())\n    | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n    | method-call(boolean java.util.Iterator.hasNext())\n    |               IFNE L0\n    |               ICONST_0   (line 116)\n    |               IRETURN\n    method-execution(boolean fi.napa.core.tableprocessing.transfer.link.TableMetaData.hasKey())\n  end public boolean hasKey()\n\n  public fi.napa.core.tableprocessing.transfer.link.Column column4name(String)    org.aspectj.weaver.MethodDeclarationLi\nneNumber: 119:3922\n:\n    method-execution(fi.napa.core.tableprocessing.transfer.link.Column fi.napa.core.tableprocessing.transfer.link.TableM\netaData.column4name(java.lang.String))\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 120)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    | |             INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    |               ASTORE_2\n    |               GOTO L1\n    |           L0: ALOAD_2     // Ljava/util/Iterator; colIterator   (line 121)\n    | method-call(java.lang.Object java.util.Iterator.next())\n    | |             INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Iterator.next())\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               ASTORE_3\n    |               ALOAD_3     // Lfi/napa/core/tableprocessing/transfer/link/Column; col   (line 122)\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    |               ALOAD_1     // Ljava/lang/String; name\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    | |             INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    |               IFEQ L1\n    |               ALOAD_3     // Lfi/napa/core/tableprocessing/transfer/link/Column; col\n    |               ARETURN\n    |           L1: ALOAD_2     // Ljava/util/Iterator; colIterator   (line 120)\n    | method-call(boolean java.util.Iterator.hasNext())\n    | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n    | method-call(boolean java.util.Iterator.hasNext())\n    |               IFNE L0\n    |               ACONST_NULL   (line 124)\n    |               ARETURN\n    method-execution(fi.napa.core.tableprocessing.transfer.link.Column fi.napa.core.tableprocessing.transfer.link.TableM\netaData.column4name(java.lang.String))\n  end public fi.napa.core.tableprocessing.transfer.link.Column column4name(String)\n\n  public fi.napa.core.tableprocessing.transfer.link.Column column4nameIgnoreCase(String)    org.aspectj.weaver.MethodDec\nlarationLineNumber: 127:4177\n:\n    method-execution(fi.napa.core.tableprocessing.transfer.link.Column fi.napa.core.tableprocessing.transfer.link.TableM\netaData.column4nameIgnoreCase(java.lang.String))\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 128)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    | |             INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator;\n    | method-call(java.util.Iterator java.util.List.iterator())\n    |               ASTORE_2\n    |               GOTO L1\n    |           L0: ALOAD_2     // Ljava/util/Iterator; colIterator   (line 129)\n    | method-call(java.lang.Object java.util.Iterator.next())\n    | |             INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Iterator.next())\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               ASTORE_3\n    |               ALOAD_3     // Lfi/napa/core/tableprocessing/transfer/link/Column; col   (line 130)\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    |               ALOAD_1     // Ljava/lang/String; name\n    | method-call(boolean java.lang.String.equalsIgnoreCase(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z\n    | method-call(boolean java.lang.String.equalsIgnoreCase(java.lang.String))\n    |               IFEQ L1\n    |               ALOAD_3     // Lfi/napa/core/tableprocessing/transfer/link/Column; col\n    |               ARETURN\n    |           L1: ALOAD_2     // Ljava/util/Iterator; colIterator   (line 128)\n    | method-call(boolean java.util.Iterator.hasNext())\n    | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n    | method-call(boolean java.util.Iterator.hasNext())\n    |               IFNE L0\n    |               ACONST_NULL   (line 132)\n    |               ARETURN\n    method-execution(fi.napa.core.tableprocessing.transfer.link.Column fi.napa.core.tableprocessing.transfer.link.TableM\netaData.column4nameIgnoreCase(java.lang.String))\n  end public fi.napa.core.tableprocessing.transfer.link.Column column4nameIgnoreCase(String)\n\n  public int getColumnPosition(String)    org.aspectj.weaver.MethodDeclarationLineNumber: 138:4510\n:\n    method-execution(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(java.lang.String))\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 139)\n    |               ALOAD_1     // Ljava/lang/String; colName\n    |               ICONST_1\n    | method-call(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(java.lang.String, boole\nan))\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition (Ljava/lang\n/String;Z)I\n    | method-call(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(java.lang.String, boole\nan))\n    |               IRETURN\n    method-execution(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(java.lang.String))\n  end public int getColumnPosition(String)\n\n  public int getColumnPosition(String, boolean)    org.aspectj.weaver.MethodDeclarationLineNumber: 145:4665\n:\n    method-execution(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(java.lang.String, bo\nolean))\n    |               ICONST_0   (line 146)\n    |               ISTORE_3\n    |               GOTO L3\n    |           L0: ILOAD_2     // Z casesensitive   (line 147)\n    |               IFEQ L1\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 148)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               ILOAD_3     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    |               ALOAD_1     // Ljava/lang/String; colName\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    | |             INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    |               IFEQ L2\n    |               ILOAD_3     // I i   (line 149)\n    |               IRETURN\n    |               GOTO L2\n    |           L1: ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 151)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               ILOAD_3     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    |               ALOAD_1     // Ljava/lang/String; colName\n    | method-call(boolean java.lang.String.equalsIgnoreCase(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.String.equalsIgnoreCase (Ljava/lang/String;)Z\n    | method-call(boolean java.lang.String.equalsIgnoreCase(java.lang.String))\n    |               IFEQ L2\n    |               ILOAD_3     // I i   (line 152)\n    |               IRETURN\n    |           L2: IINC 3 1     // I i   (line 146)\n    |           L3: ILOAD_3     // I i\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               IF_ICMPLT L0\n    |               ICONST_M1   (line 155)\n    |               IRETURN\n    method-execution(int fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumnPosition(java.lang.String, bo\nolean))\n  end public int getColumnPosition(String, boolean)\n\n  public final java.util.List getColumns()    org.aspectj.weaver.MethodDeclarationLineNumber: 160:5160\n:\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumns())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 160)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               ARETURN\n    method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.getColumns())\n  end public final java.util.List getColumns()\n\n  public final String getTableName()    org.aspectj.weaver.MethodDeclarationLineNumber: 164:5366\n:\n    method-execution(java.lang.String fi.napa.core.tableprocessing.transfer.link.TableMetaData.getTableName())\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 164)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._tableName Ljava/lang/String;\n    |               ARETURN\n    method-execution(java.lang.String fi.napa.core.tableprocessing.transfer.link.TableMetaData.getTableName())\n  end public final String getTableName()\n\n  public final Object[] map2array(java.util.Map)    org.aspectj.weaver.MethodDeclarationLineNumber: 174:5923\n:\n    method-execution(java.lang.Object[] fi.napa.core.tableprocessing.transfer.link.TableMetaData.map2array(java.util.Map\n))\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 175)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(int java.util.List.size())\n    | |             INVOKEINTERFACE java.util.List.size ()I\n    | method-call(int java.util.List.size())\n    |               ANEWARRAY java.lang.Object\n    |               ASTORE_2\n    |               ICONST_0   (line 176)\n    |               ISTORE_3\n    |               GOTO L1\n    |           L0: ALOAD_2     // [Ljava/lang/Object; retVal   (line 177)\n    |               ILOAD_3     // I i\n    |               ALOAD_1     // Ljava/util/Map; values\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               ILOAD_3     // I i\n    | method-call(java.lang.Object java.util.List.get(int))\n    | |             INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.List.get(int))\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.Column\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | |             INVOKEVIRTUAL fi.napa.core.tableprocessing.transfer.link.Column.getName ()Ljava/lang/String;\n    | method-call(java.lang.String fi.napa.core.tableprocessing.transfer.link.Column.getName())\n    | method-call(java.lang.Object java.util.Map.get(java.lang.Object))\n    | |             INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;\n    | method-call(java.lang.Object java.util.Map.get(java.lang.Object))\n    |               AASTORE\n    |               IINC 3 1     // I i   (line 176)\n    |           L1: ILOAD_3     // I i\n    |               ALOAD_2     // [Ljava/lang/Object; retVal\n    |               ARRAYLENGTH\n    |               IF_ICMPLT L0\n    |               ALOAD_2     // [Ljava/lang/Object; retVal   (line 179)\n    |               ARETURN\n    method-execution(java.lang.Object[] fi.napa.core.tableprocessing.transfer.link.TableMetaData.map2array(java.util.Map\n))\n  end public final Object[] map2array(java.util.Map)\n\n  public boolean equals(Object)    org.aspectj.weaver.MethodDeclarationLineNumber: 184:6250\n:\n    method-execution(boolean fi.napa.core.tableprocessing.transfer.link.TableMetaData.equals(java.lang.Object))\n    |               ALOAD_1     // Ljava/lang/Object; o   (line 185)\n    |               IFNULL L0\n    |               ALOAD_1     // Ljava/lang/Object; o\n    |               INSTANCEOF fi.napa.core.tableprocessing.transfer.link.TableMetaData\n    |               IFNE L1\n    |           L0: ICONST_0\n    |               IRETURN\n    |           L1: ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 186)\n    |               ALOAD_1     // Ljava/lang/Object; o\n    |               IF_ACMPNE L2\n    |               ICONST_1\n    |               IRETURN\n    |           L2: ALOAD_1     // Ljava/lang/Object; o   (line 187)\n    |               CHECKCAST fi.napa.core.tableprocessing.transfer.link.TableMetaData\n    |               ASTORE_2\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this   (line 188)\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._tableName Ljava/lang/String;\n    |               ALOAD_2     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; other\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._tableName Ljava/lang/String;\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    | |             INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z\n    | method-call(boolean java.lang.String.equals(java.lang.Object))\n    |               IFEQ L3\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    |               ALOAD_2     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; other\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(boolean java.util.List.equals(java.lang.Object))\n    | |             INVOKEINTERFACE java.util.List.equals (Ljava/lang/Object;)Z\n    | method-call(boolean java.util.List.equals(java.lang.Object))\n    |               IFEQ L3\n    |               ICONST_1\n    |               IRETURN\n    |           L3: ICONST_0\n    |               IRETURN\n    method-execution(boolean fi.napa.core.tableprocessing.transfer.link.TableMetaData.equals(java.lang.Object))\n  end public boolean equals(Object)\n\n  public String toString()    org.aspectj.weaver.MethodDeclarationLineNumber: 191:6520\n:\n    method-execution(java.lang.String fi.napa.core.tableprocessing.transfer.link.TableMetaData.toString())\n    |               NEW java.lang.StringBuilder   (line 192)\n    |               DUP\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._tableName Ljava/lang/String;\n    | method-call(java.lang.String java.lang.String.valueOf(java.lang.Object))\n    | |             INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;\n    | method-call(java.lang.String java.lang.String.valueOf(java.lang.Object))\n    | constructor-call(void java.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n    | |             INVOKESPECIAL java.lang.StringBuilder.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void java.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n    |               LDC \" : \"\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String))\n    |               ALOAD_0     // Lfi/napa/core/tableprocessing/transfer/link/TableMetaData; this\n    |               GETFIELD fi.napa.core.tableprocessing.transfer.link.TableMetaData._columns Ljava/util/List;\n    | method-call(java.lang.String java.lang.Object.toString())\n    | |             INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;\n    | method-call(java.lang.String java.lang.Object.toString())\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String))\n    | method-call(java.lang.String java.lang.StringBuilder.toString())\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;\n    | method-call(java.lang.String java.lang.StringBuilder.toString())\n    |               ARETURN\n    method-execution(java.lang.String fi.napa.core.tableprocessing.transfer.link.TableMetaData.toString())\n  end public String toString()\nend public final class fi.napa.core.tableprocessing.transfer.link.TableMetaData\n\n\nException thrown from AspectJ 1.5.1\n\nThis might be logged as a bug already -- find current bugs at\n  http://bugs.eclipse.org/bugs/buglist.cgi?product\u003dAspectJ\u0026component\u003dCompiler\n\nBugs for exceptions thrown have titles File:line from the top stack,\ne.g., \"SomeFile.java:243\"\n\nIf you don\u0027t find the exception below in a bug, please add a new bug\nat http://bugs.eclipse.org/bugs/enter_bug.cgi?product\u003dAspectJ\nTo make the bug a priority, please include a test program\nthat can reproduce this exception.\n\nwhen implementing on shadow method-execution(java.util.List fi.napa.core.tableprocessing.transfer.link.TableMetaData.get\nKeyColumns())\nwhen weaving classes\nwhen weaving\nwhen batch building BuildConfig[null] #Files\u003d316\nnull\njava.lang.NullPointerException\n        at org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:2109)\n        at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:232)\n        at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:639)\n        at org.aspectj.weaver.Shadow.implement(Shadow.java:456)\n        at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2236)\n        at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:491)\n        at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109)\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1560)\n        at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1511)\n        at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1291)\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1113)\n        at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311)\n        at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183)\n        at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_Comp\nilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\n        at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:242)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161)\n        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112)\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)\n        at org.aspectj.tools.ajc.Main.run(Main.java:367)\n        at org.aspectj.tools.ajc.Main.runMain(Main.java:246)\n        at org.aspectj.tools.ajc.Main.main(Main.java:86)\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\TransferManager.java:382 [warning] Exception swallowed\n in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(Exception ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\core\\tableprocessing\\transfer\\TransferManager.java:407 [warning] Exception swallowed\n in catch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(Exception ignored) {}\n\nD:\\work\\napa\\jnapa\\core\\src\\fi\\napa\\legacy\\nativeaccess\\NapaNativeException.java:125 [warning] Exception swallowed in ca\ntch block [Xlint:swallowedExceptionInCatchBlock]\n} catch(NapaNativeException ignored) {}\n\nfi\\napa\\util\\aspects\\ArgumentCheckAspect.aj [warning] advice defined in fi.napa.util.aspects.ArgumentCheckAspect has not\n been applied [Xlint:adviceDidNotMatch]\n\nfi\\napa\\util\\aspects\\CachingAspect.aj [warning] advice defined in fi.napa.util.aspects.CachingAspect has not been applie\nd [Xlint:adviceDidNotMatch]\n\n\n1 fail|abort, 12 warnings\n\nD:\\work\\napa\\jnapa\\core\u003e",
    "a simple search of bugzilla reveals this is a duplicate of another bug (135001).\n\ntry -XnoInline to see if that helps you get further?\n\n*** This bug has been marked as a duplicate of 135001 ***",
    "(In reply to comment #1)\n\u003e a simple search of bugzilla reveals this is a duplicate of another bug\n\u003e (135001).\n\n  Woops, sorry. I checked, but must have missed that as I believed the compiler message : \"Bugs for exceptions thrown have titles File:line from the top stack,\ne.g., \"SomeFile.java:243\"\" and thus only sought for bugs named BcelShadow.java:2109, which I could not find. I\u0027ll try to search w/ more options next time.\n\n\u003e try -XnoInline to see if that helps you get further?\n\n  Yes, that seems to do the trick. Thanks a lot.\n\n"
  ],
  "commentCreationDates": [
    "2006-04-06T10:05:19+02:00",
    "2006-04-06T10:29:56+02:00",
    "2006-04-06T10:57:03+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline",
          "source": "BcelShadow.java:2109"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.implementOn",
          "source": "BcelAdvice.java:232"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implementMungers",
          "source": "Shadow.java:639"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:456"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:2236"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:491"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:109"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1560"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1511"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:1291"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1113"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:311"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:183"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:862"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:242"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:161"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:112"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:60"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:367"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:246"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:86"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "135213",
      "duplicateId": "135001",
      "date": "2006-04-06T10:05:19+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    }
  ],
  "groupId": "135001",
  "bugId": "135213",
  "duplicateId": "135001",
  "date": "2006-04-06T10:05:19+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "blocker"
}