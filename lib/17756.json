{
  "comments": [
    "Drop Alphabet soup 1.0.0 parent feature only in the feature directory\n1) when Dialog opens (new feature found) we cannot configure broken feature\n2) when expanding current configuration, receive parsing error\n3) IsBroken doesn\u0027t show for this feature\n4) Unable to update feature",
    "I fixed 3, but it seems to me UI is agressively opening Dialogs...\n\n1) install Alphabet 1.0.0\n2) on the file system, remove features/my.alphabet.round.letters_1.0.0 and\nfeatures/my.alphabet.straight.letters_1.0.0\n3) start eclipse\n\n#2 and #4 happen when the child of the feature cannot be created. I am wondeirng\nif we cannot \u0027eat\u0027 the error to be able to at least unconfigure. Even there, I\nam not sure we will be able to install a new one as we may face the \u0027imposter\nfeature\u0027 where the files will be there, but teh featur eis not recognize. And\nupdating or re-installing will not solve the issue completely. But user will\nneed to manually delete the plugins/features ? no\n\nAnyway, can UI confirm they can bhave with Children feature the same way the\nbehave with root feature (i.e mark as dummy feature with featureRef URL and\n0.0.0 as version ?)\n\n!MESSAGE Error parsing \"feature.xml\" stream in the feature archive\nfile:c:/oti/source-code/features/my.alphabet.round.letters_1.0.0.jar/.[java.io.FileNotFoundException:\nc:\\oti\\source-code\\features\\my.alphabet.round.letters_1.0.0.jar\\feature.xml (The\nsystem cannot find the path specified)]\n!STACK 0\njava.io.FileNotFoundException:\nc:\\oti\\source-code\\features\\my.alphabet.round.letters_1.0.0.jar\\feature.xml (The\nsystem cannot find the path specified)\n\tat java.io.FileInputStream.open(Native Method)\n\tat java.io.FileInputStream.\u003cinit\u003e(FileInputStream.java:64)\n\tat sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:69)\n\tat\nsun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:133)\n\tat java.net.URL.openStream(URL.java:798)\n\tat\norg.eclipse.update.internal.core.FeatureExecutableFactory.createFeature(FeatureExecutableFactory.java:43)\n\tat org.eclipse.update.core.FeatureReference.createFeature(FeatureReference.java:152)\n\tat org.eclipse.update.core.FeatureReference.getFeature(FeatureReference.java:52)\n\tat\norg.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.addChildFeatures(ConfigurationView.java:292)\n\tat\norg.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getRootFeatures(ConfigurationView.java:271)\n\tat\norg.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getConfiguredFeatures(ConfigurationView.java:233)\n\tat\norg.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getChildren(ConfigurationView.java:205)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:571)\n\tat\norg.eclipse.jface.viewers.StructuredViewer.getFilteredChildren(StructuredViewer.java:346)\n\tat\norg.eclipse.jface.viewers.StructuredViewer.getSortedChildren(StructuredViewer.java:447)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:241)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:614)\n\tat\norg.eclipse.jface.viewers.AbstractTreeViewer$1.treeExpanded(AbstractTreeViewer.java:626)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:171)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)\n\tat org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:1715)\n\tat org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3597)\n\tat org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:571)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:2702)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1155)\n\tat org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:147)\n\tat org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java:1344)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:2685)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1222)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1287)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:176)\n\tat org.eclipse.core.launcher.Main.run(Main.java:614)\n\tat org.eclipse.core.launcher.Main.main(Main.java:451)",
    "I think we need to crisp this one up a bit. I think this should work as follows:\n\n(1) we should not be able to configure a broken feature. I am assuming \"Dialog\" \nmeans the delta processing wizard. Broken input should be marked as broken, and \nthe user should not be allowed to select and process the delta. The user should \nbe allowed to delete the broken delta. Since the feature was being detected as a \nchenge (delta), and we will not allow it tpo be processed (\"applied\"), the \nbroken feature will remain unconfigured\n\n(2) we should be flagging broken features as an error condition to the user, but \nshould not be throwing exceptions that result in log entries. Showing \"missing \nfeature\" children in the UI (child entries in the tree) seems like a reasonable \napproach, but not showing them at all and simply having error messages in the \n\"Show status...\" box saying we have missing children is OK as well. I\u0027ll let you \nmake the call on this one. The only input I have is that ending up with SAX \nparse errors in the log is not good.\n\n(3) sounds like this one is fixed in core\n\n(4) user needs to be allowed to update a broken feature. Since the feature is \nbroken (ie. is missing plugins, children), in this specific case we should allow \nupdate to a feature with the same version (ie. enable the install/update button \nif remote version \u003e\u003d local version)\n\n\n",
    "1) agree\n\n2) agree with dejan about Parser stuff.. hum.. Does core need to change \nsomething ?\n2 bis) What about if a root feature has only one child missing.. I belive we \nshould at least show childrn features that are OK (but I also believe we all \nknew that)\n2 ter) I vote for showing missing features\n\n3) yes\n\n4)agree, I believe throwing error in #2 prevented any update or reinstall",
    "I have tried this scenario with 20020528.\n\n* start eclipse and shutdown\n* drop alphabet soup feature into features (missing plugins, missing children)\n* start eclipse .... get told I have changes\n* changes wizard does not let me configure a broken feature ... GOOD\n* remove delta\n* open update manager\n* current configuration does not show the broken feature ... GOOD\n* click \"Show disabled features\"\n* get error dialog saying I could not parse feature.xml for a child .... BAD\n(the error makes no sense to user, is logged as well)\n* I click OK on error\n* the broken feature appears in the view, correctly marked with red X ... GOOD\n* it has a [+] beside it that does not expand to anything .... I can live with \nthat\n* when I show status, it tells me it has 1 missing plugin and 2 missing children \n... GOOD\n\nSo the only problem is the damn error dialog. It seems to be triggered when the \nUI is constructing the nested feature UI node. We should eat the error, and \neither construct a missing feature node, or just skip it. The parent will be \nmarked with red X anyways.\n",
    "Created an attachment (id\u003d1111)\nroot feature .jar -\u003e create directory for it in features/ and expand\n",
    "One more BAD thing ....\n\n* start eclipse\n* update one of its features (I did this with PDE) .... picked the 200205270931 \nwhich was the second latest .... update and shutdown\n* I deleted 2 of the updated plugins from the file system .... the pde docs and \nsource\n* started eclipse ... feature shows as broken\n* went to the eclipse update site\n* if I select the same version, its [Update] is not showing. This is OK if the \nfeature was not broken (because I already have it installed). But since the \nfeature is broken, we should allow the [Update] so the user can fix the feature \nup\n\n\n\nSo there seem to be 2 problems left \n(1) the error dialog (prior post)\n(2) ability to update broken feature to same version (this post)",
    "Specifically,\n\n* in searches (one-click, or other), if the base feature is broken, consider \ntarget feature with the same version number as one of the result candidates (add \nto list before sorting and constraint checking)\n\n* in feature preview, enable [Update] if the base feature is broken, and the \nselected feature version is \u003e\u003d  (ie. allow \u003d\u003d)",
    "Implemented."
  ],
  "commentCreationDates": [
    "2002-05-24T19:15:42+02:00",
    "2002-05-25T20:56:51+02:00",
    "2002-05-26T23:10:15+02:00",
    "2002-05-26T23:59:59+02:00",
    "2002-05-30T00:19:13+02:00",
    "2002-05-30T00:20:19+02:00",
    "2002-05-30T00:41:16+02:00",
    "2002-05-31T21:43:47+02:00",
    "2002-06-01T05:46:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "c:\\oti\\source-code\\features\\my.alphabet.round.letters_1.0.0.jar\\feature.xml (The system cannot find the path specified)",
      "elements": [
        {
          "method": "java.io.FileInputStream.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.FileInputStream.\u003cinit\u003e",
          "source": "FileInputStream.java:64"
        },
        {
          "method": "sun.net.www.protocol.file.FileURLConnection.connect",
          "source": "FileURLConnection.java:69"
        },
        {
          "method": "sun.net.www.protocol.file.FileURLConnection.getInputStream",
          "source": "FileURLConnection.java:133"
        },
        {
          "method": "java.net.URL.openStream",
          "source": "URL.java:798"
        },
        {
          "method": "org.eclipse.update.internal.core.FeatureExecutableFactory.createFeature",
          "source": "FeatureExecutableFactory.java:43"
        },
        {
          "method": "org.eclipse.update.core.FeatureReference.createFeature",
          "source": "FeatureReference.java:152"
        },
        {
          "method": "org.eclipse.update.core.FeatureReference.getFeature",
          "source": "FeatureReference.java:52"
        },
        {
          "method": "org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.addChildFeatures",
          "source": "ConfigurationView.java:292"
        },
        {
          "method": "org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getRootFeatures",
          "source": "ConfigurationView.java:271"
        },
        {
          "method": "org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getConfiguredFeatures",
          "source": "ConfigurationView.java:233"
        },
        {
          "method": "org.eclipse.update.internal.ui.views.ConfigurationView$LocalSiteProvider.getChildren",
          "source": "ConfigurationView.java:205"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren",
          "source": "AbstractTreeViewer.java:571"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren",
          "source": "StructuredViewer.java:346"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.getSortedChildren",
          "source": "StructuredViewer.java:447"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createChildren",
          "source": "AbstractTreeViewer.java:241"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand",
          "source": "AbstractTreeViewer.java:614"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$1.treeExpanded",
          "source": "AbstractTreeViewer.java:626"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:171"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:75"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:841"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.wmNotifyChild",
          "source": "Tree.java:1715"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_NOTIFY",
          "source": "Control.java:3597"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_NOTIFY",
          "source": "Composite.java:571"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:2702"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:1984"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProc",
          "source": "OS.java:1155"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.callWindowProc",
          "source": "Tree.java:147"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN",
          "source": "Tree.java:1344"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:2685"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:1984"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1222"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1287"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1085"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1068"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:739"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:176"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:614"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:451"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "17756",
      "date": "2002-05-25T20:56:51+02:00",
      "product": "Platform",
      "component": "Update",
      "severity": "major"
    }
  ],
  "groupId": "17756",
  "bugId": "17756",
  "date": "2002-05-24T19:15:42+02:00",
  "product": "Platform",
  "component": "Update",
  "severity": "major"
}