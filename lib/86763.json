{
  "comments": [
    "Severity\tDescription\tResource\tIn Folder\tLocation\n\tCreation Time\n2\tInternal compiler error\njava.lang.NullPointerException\n\tat org.aspectj.asm.internal.ProgramElement.genHandleIdentifier\n(ProgramElement.java:474)\n\tat \norg.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.addUsesPointcutRelat\nionsForNode(AsmHierarchyBuilder.java:372)\n\tat org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit\n(AsmHierarchyBuilder.java:343)\n\tat \norg.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse\n(MethodDeclaration.java:167)\n\tat \norg.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse\n(TypeDeclaration.java:1133)\n\tat \norg.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.tr\naverse(CompilationUnitDeclaration.java:314)\n\tat \norg.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild\n(AsmHierarchyBuilder.java:141)\n\tat \norg.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCom\npilationUnit(AsmHierarchyBuilder.java:81)\n\tat \norg.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUni\nt(EclipseFactory.java:354)\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing\n(AjCompilerAdapter.java:139)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:373)\n\tat \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation\n(AjBuildManager.java:682)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:191)\n\tat \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild\n(AjBuildManager.java:109)\n\tat org.aspectj.ajde.internal.CompilerAdapter.compile\n(CompilerAdapter.java:117)\n\tat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:165)\n\tObserverBillingPolicy.aj\tObserverDemo/src/songplayobserver\n\t\tFebruary 26, 2005 2:41:51 PM\n\nsource code that generates:\npackage observer;\n\nimport aspectmodel.*;\nimport songplayobserver.*;\nimport designpatterns.*;\n\npublic aspect ObserverBillingPolicy extends ObserverProtocol {\n\n\tdeclare parents : Playable extends Subject;\t\n\tdeclare parents : BillingService implements Observer;\n\n\tpointcut titleUse(Playable playable) :\n\t\tthis(playable)\n\t\t\u0026\u0026 ( \n\t\texecution(public void Playable+.play()) ||\n\t\texecution(public void Song.showLyrics())\n\t\t);\n\t\t\n\tpointcut topLevelTitleUse(Playable playable) :\n\t\ttitleUse(playable) \u0026\u0026 ! cflowbelow(titleUse(Playable));\n\n\tpublic pointcut subjectChange(Subject subject) : \n\t\ttopLevelTitleUse(Playable) \u0026\u0026 this(subject);\n\t\n\tpublic void updateObserver(Subject s, Observer o){\n\t\tBillingService service \u003d (BillingService)o;\n\t\tservice.generateChargeFor((Playable)s);\n\t}\n\t\n\tafter(Application currentApp) returning (Playable title): \n\t\tTitleUsePolicy.titleEntersUse(currentApp)\n\t{\n\t\tBillingService usersBillingService \u003d currentApp.getUser\n().getBillingService();\n\t\taddObserver(title, usersBillingService);\n\t\tSystem.out.println(\"observed \"+title);\n\t}\n\n\t//default wiring...boring but good for simple tests\n//\tprivate BillingService defaultBillingService \u003d new BillingService();\n//\n//\t\n//\tafter() returning(Playable p) :\n//\t\tcall(public Playable+.new(..)){\n//\t\taddObserver((Subject)p, (Observer)defaultBillingService);\n//\t}\n}",
    "Created an attachment (id\u003d18338)\nSample AJDT project that shows the problem\n",
    "for investigation in aj5m3",
    "Fixed under bug 90806.\n\nBUILD COMPLETE -  build.471\nDate of build: 04/20/2005 20:56:23\nTime to build: 147 minutes 56 seconds\nLast changed: 04/20/2005 20:24:33"
  ],
  "commentCreationDates": [
    "2005-02-26T22:42:58+01:00",
    "2005-02-26T22:51:00+01:00",
    "2005-03-23T14:50:06+01:00",
    "2005-04-21T09:55:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.asm.internal.ProgramElement.genHandleIdentifier",
          "source": "ProgramElement.java:474"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.addUsesPointcutRelationsForNode",
          "source": "AsmHierarchyBuilder.java:372"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit",
          "source": "AsmHierarchyBuilder.java:343"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse",
          "source": "MethodDeclaration.java:167"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse",
          "source": "TypeDeclaration.java:1133"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse",
          "source": "CompilationUnitDeclaration.java:314"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild",
          "source": "AsmHierarchyBuilder.java:141"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCompilationUnit",
          "source": "AsmHierarchyBuilder.java:81"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit",
          "source": "EclipseFactory.java:354"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing",
          "source": "AjCompilerAdapter.java:139"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:373"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:682"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:191"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:109"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:165"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "86763",
      "date": "2005-02-26T22:42:58+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "86763",
  "bugId": "86763",
  "date": "2005-02-26T22:42:58+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}