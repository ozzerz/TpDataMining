{
  "comments": [
    "An NullPointerException occurs when a semantic element is dropped on a diagram, and the drop operation is performed from a non-UI thread.  The dropped element is not shown on the diagram.\n\nThis is a problem for clients that wish to display a cancelable progress dialog during the drag and drop operation, because it may take some time to complete.\n\n\nHere is the exception stack trace:\n\njava.lang.NullPointerException\n\tat org.eclipse.draw2d.DeferredUpdateManager.queueWork(DeferredUpdateManager.java:210)\n\tat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramGraphicalViewer$ToggleUpdateManager.queueWork(DiagramGraphicalViewer.java:111)\n\tat org.eclipse.draw2d.DeferredUpdateManager.addInvalidFigure(DeferredUpdateManager.java:118)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1347)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1349)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1349)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1349)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1349)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1349)\n\tat org.eclipse.draw2d.Figure.revalidate(Figure.java:1349)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.setVisibility(GraphicalEditPart.java:898)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refreshVisibility(GraphicalEditPart.java:789)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refreshVisuals(GraphicalEditPart.java:795)\n\tat org.eclipse.gef.editparts.AbstractEditPart.refresh(AbstractEditPart.java:676)\n\tat org.eclipse.gef.editparts.AbstractGraphicalEditPart.refresh(AbstractGraphicalEditPart.java:554)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.access$3(GraphicalEditPart.java:1)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart$3.run(GraphicalEditPart.java:730)\n\tat org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive(TransactionalEditingDomainImpl.java:246)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refresh(GraphicalEditPart.java:720)\n\tat org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand.doExecuteWithResult(DeferredLayoutCommand.java:122)\n\tat org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand.doExecute(AbstractTransactionalCommand.java:235)\n\tat org.eclipse.emf.workspace.AbstractEMFOperation.execute(AbstractEMFOperation.java:112)\n\tat org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand.execute(EtoolsProxyCommand.java:64)\n\tat org.eclipse.gef.commands.CompoundCommand.execute(CompoundCommand.java:107)\n\tat org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy.doExecuteWithResult(CommandProxy.java:49)\n\tat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:134)\n\tat org.eclipse.core.commands.operations.DefaultOperationHistory.execute(DefaultOperationHistory.java:506)\n\t... 2 more",
    "Created an attachment (id\u003d36368)\nNew unit test to demonstrate the bug\n\nThe unit test simulates a drag and drop of an AND gate onto a logic diagram from a modal context thread.",
    "I have code in the DiagramCommandStack that disables updates on the update manager if on another thread.  Since the JUnit is executed directly from the OperationHistory, the disableUpdate code is never executed.\n\nI think this can be fixed by adding a listener on the OperationHistory and disabling / reenabling updates based on the events.",
    "Created an attachment (id\u003d36775)\npatch fix for problem\n\nLinda - can you code review?  I moved the disable update code from the DiagramCommandStack to the IOperationListener in the DiagramEditor.",
    "One potential problem is that subclasses are encouraged to override DiagramEditor#createHistoryListener() to return their own listener or to return null if they have a different strategy for managing their undo history.  Such subclasses will now have to remember to implement the viewer update enablement themselves.  For their convenience, it might be better to implement the history listener for the viewer update enablement separately from the history listener for adding undo context.\n\nAlso, once this fix is made, the JUnit test exposes another issue. Both the TreeDiagramEditPart#notifyChanged and TreeEditPart#notifyChanged (used by the outline view) make a call to Display#syncExec(), which deadlocks with the SetViewMutabilityCommand (through the CanonicalEditPolicy#AsyncCommand).  If they can, TreeDiagramEditPart#notifyChanged and TreeEditPart#notifyChanged should use asyncExec() to handle the notification, but that might not be possible.",
    "Created an attachment (id\u003d36832)\nTreeEditPart#notifyChanged asyncExec patch\n\nPossible solution to the deadlock situation involving TreeEditPart#notifyChanged.",
    "Created an attachment (id\u003d36845)\nupdated patch\n\nAdded code to ensure update is re-enabled after command fails and ensured undo/redo cases are handled.",
    "(From update of attachment 36832)\nOpened Bug 133066 to track the problem with the TreeEditPart#notifyChanged.",
    "Created an attachment (id\u003d36851)\nUpdate patch fix\n\nUpdated patch fix to separate operation history listeners.  The disable update listener is private and can\u0027t be overridden.  This avoids problems if clients override the createHistoryListener method and don\u0027t call super.",
    "Purpose: \n- Fixed threading issues when clients use IOperationHistory directly instead of DiagramCommandStack.  Moved disable update code into a IOperationHistoryListener from the DiagramCommandStack.\n\nActivities: \nbugzilla 132032 gmf-head sshaw 060321 Can\u0027t drop a semantic element onto a diagram from non-UI thread\n\nCode Reviewed by: \nLinda\n\nHow tested: \n- scenario tested.\n- ran diagram JUnits\n- Linda created new JUnit to demonstrate problem (now passes).\n"
  ],
  "commentCreationDates": [
    "2006-03-15T21:05:56+01:00",
    "2006-03-15T21:16:18+01:00",
    "2006-03-22T21:05:02+01:00",
    "2006-03-22T21:47:34+01:00",
    "2006-03-23T17:03:53+01:00",
    "2006-03-23T19:04:19+01:00",
    "2006-03-23T20:45:11+01:00",
    "2006-03-23T20:59:56+01:00",
    "2006-03-23T21:57:47+01:00",
    "2006-03-23T23:44:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.draw2d.DeferredUpdateManager.queueWork",
          "source": "DeferredUpdateManager.java:210"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramGraphicalViewer$ToggleUpdateManager.queueWork",
          "source": "DiagramGraphicalViewer.java:111"
        },
        {
          "method": "org.eclipse.draw2d.DeferredUpdateManager.addInvalidFigure",
          "source": "DeferredUpdateManager.java:118"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1347"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1349"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1349"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1349"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1349"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1349"
        },
        {
          "method": "org.eclipse.draw2d.Figure.revalidate",
          "source": "Figure.java:1349"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.setVisibility",
          "source": "GraphicalEditPart.java:898"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refreshVisibility",
          "source": "GraphicalEditPart.java:789"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refreshVisuals",
          "source": "GraphicalEditPart.java:795"
        },
        {
          "method": "org.eclipse.gef.editparts.AbstractEditPart.refresh",
          "source": "AbstractEditPart.java:676"
        },
        {
          "method": "org.eclipse.gef.editparts.AbstractGraphicalEditPart.refresh",
          "source": "AbstractGraphicalEditPart.java:554"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.access$3",
          "source": "GraphicalEditPart.java:1"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart$3.run",
          "source": "GraphicalEditPart.java:730"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive",
          "source": "TransactionalEditingDomainImpl.java:246"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refresh",
          "source": "GraphicalEditPart.java:720"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand.doExecuteWithResult",
          "source": "DeferredLayoutCommand.java:122"
        },
        {
          "method": "org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand.doExecute",
          "source": "AbstractTransactionalCommand.java:235"
        },
        {
          "method": "org.eclipse.emf.workspace.AbstractEMFOperation.execute",
          "source": "AbstractEMFOperation.java:112"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.commands.EtoolsProxyCommand.execute",
          "source": "EtoolsProxyCommand.java:64"
        },
        {
          "method": "org.eclipse.gef.commands.CompoundCommand.execute",
          "source": "CompoundCommand.java:107"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy.doExecuteWithResult",
          "source": "CommandProxy.java:49"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
          "source": "AbstractCommand.java:134"
        },
        {
          "method": "org.eclipse.core.commands.operations.DefaultOperationHistory.execute",
          "source": "DefaultOperationHistory.java:506"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "132032",
      "date": "2006-03-15T21:05:56+01:00",
      "product": "GMF",
      "component": "Runtime Diagram",
      "severity": "major"
    }
  ],
  "groupId": "132032",
  "bugId": "132032",
  "date": "2006-03-15T21:05:56+01:00",
  "product": "GMF",
  "component": "Runtime Diagram",
  "severity": "major"
}