{
  "comments": [
    "Pressing CTRL+A in an embedded JTextComponent causes an exception.  The\nexpected behaviour is for all text to be selected (Select All).\n\nThis defect is related to Bug 63235\n\nAfter inspecting the code in a debugger it was apparent that SelectAllHandler\nhas found the appropriate method to call (JTextComponent.selectAll) however\nSelectAllHandler is attempting to invoke the method on an SWT composite (the\nfocus control).\n\nThe stack trace is as follows:\n\njava.lang.IllegalArgumentException: object is not an instance of declaring\nclass\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:589)\n        at\norg.eclipse.ui.internal.handlers.SelectAllHandler.execute(SelectAllHandler.java:50)\n        at\norg.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:151)\n        at\norg.eclipse.core.commands.Command.executeWithChecks(Command.java:460)\n        at\norg.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:421)\n        at\norg.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160)\n        at\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466)\n        at\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:798)\n        at\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:845)\n        at\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:563)\n        at\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506)\n        at\norg.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122)\n        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:978)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:924)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:949)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:934)\n        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:962)\n        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:958)\n        at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1272)\n        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3336)\n        at org.eclipse.swt.widgets.Control.windowProc(Control.java:3236)\n        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)\n        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1799)\n        at org.eclipse.swt.widgets.Display.messageProc(Display.java:2538)\n        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1799)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2905)\n        at org.eclipse.jface.window.Window.runEventLoop(Window.java:811)\n        at org.eclipse.jface.window.Window.open(Window.java:789)\n\nAfter inspecting the code for SelectAllHandler, it was also apparent that the\ncode will not handle embedded Swing components properly.  The SelectAllHandler\ncode should  be modified to work the same as WidgetMethodHandler (its super\nclass), which tests for the SWT.EMBEDDED style and invokes the method on the\nSwing event dispatch thread.",
    "Moving Dougs bugs",
    "Created an attachment (id\u003d40953)\ngracefully fail select all\n\nif we have an embedded swing component, we shouldn\u0027t class cast.\n\nPW\n",
    "Mike, this will gracefully fail on swing components.\n\nWe can look at fixing this in 3.2.1.\n\nPW\n",
    "+1",
    "Just testing for SWT.EMBEDDED seems a bit odd to me. It\u0027s only used for embedded Swing widgets, so that seems ok, but does this mean that we won\u0027t ever give ^A to *any* embedded Swing component?",
    "+1 to the \"gracefull failure\" fix for RC4.",
    "(In reply to comment #5)\n\u003e Just testing for SWT.EMBEDDED seems a bit odd to me. It\u0027s only used for\n\u003e embedded Swing widgets, so that seems ok, but does this mean that we won\u0027t ever\n\u003e give ^A to *any* embedded Swing component?\n\u003e \n\nWe don\u0027t perform that action currently.  We catch the ^A, and then try and call select all on the \"focusComponent\".  If it\u0027s an SWT embedded composite that contains swing components, getMethodToExecute() returns the swing method but we call it on the embedded SWT composite (that\u0027s what causes the IAE).\n\nPW\n",
    "McQ, is this a go?\n\nPW\n",
    "+1",
    "CCE fix released in I20060511-0800\n\nPW\n",
    "Created an attachment (id\u003d47848)\nselect all v01\n\nThis is the unoptimized patch I\u0027m considering for 3.2.1 (i.e. it makes too many reflection calls :-)\n\nFor the embedded swing case it implements calls similar to WidgetMethodHandler.  It only handles the selectAll(*) case (no parameter case).\n\nDoes swing support setSelection(Point) on some of its components?\n\nPW\n",
    "Created an attachment (id\u003d47923)\nselect all swing v02\n\nThis uses the same methods within SelectAllHandler that are currently used within WidgetMethodHandler.  For an embedded swing component, it will find selectAll() and execute it in the swing EDT.\n\nPW\n",
    "Released into 3.2.1 \u003e20060815\n\nDavid, could you please confirm that this works with your usecase when tomorrows M build comes out, M20060816-0800\n\nThanx\nPW\n",
    "Will do, and thanks for your work on this issue.",
    "Paul please mark FIXED if you are done.",
    "Fixed (barring any accidents :-)\n\nPW\n",
    "(In reply to comment #14)\n\u003e Will do, and thanks for your work on this issue.\n\n\u003e Pressing CTRL+A in an embedded JTextComponent causes an exception.  \n\u003e The expected behaviour is for all text to be selected (Select All).\n\nCan you confirm that the text is selected?\n\nPW\n\n\n",
    "Works for me with build 3.2 M20060816",
    "Thanx, David\n\nPW\n",
    "verified M20060816\n\nPW\n"
  ],
  "commentCreationDates": [
    "2006-03-16T18:22:29+01:00",
    "2006-04-21T19:14:44+02:00",
    "2006-05-10T17:41:02+02:00",
    "2006-05-10T17:41:50+02:00",
    "2006-05-10T19:43:07+02:00",
    "2006-05-10T20:51:59+02:00",
    "2006-05-10T21:19:10+02:00",
    "2006-05-10T22:07:47+02:00",
    "2006-05-11T01:29:28+02:00",
    "2006-05-11T04:51:27+02:00",
    "2006-05-11T12:50:43+02:00",
    "2006-08-14T19:17:00+02:00",
    "2006-08-15T17:33:27+02:00",
    "2006-08-15T19:01:20+02:00",
    "2006-08-15T19:06:58+02:00",
    "2006-08-16T18:57:42+02:00",
    "2006-08-16T21:37:42+02:00",
    "2006-08-22T19:03:11+02:00",
    "2006-08-22T21:14:57+02:00",
    "2006-08-22T21:54:10+02:00",
    "2006-08-31T15:01:30+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "object is not an instance of declaring class",
      "elements": [
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:589"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.SelectAllHandler.execute",
          "source": "SelectAllHandler.java:50"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.HandlerProxy.execute",
          "source": "HandlerProxy.java:151"
        },
        {
          "method": "org.eclipse.core.commands.Command.executeWithChecks",
          "source": "Command.java:460"
        },
        {
          "method": "org.eclipse.core.commands.ParameterizedCommand.executeWithChecks",
          "source": "ParameterizedCommand.java:421"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.HandlerService.executeCommand",
          "source": "HandlerService.java:160"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:466"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:798"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:845"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:563"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3",
          "source": "WorkbenchKeyboard.java:506"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent",
          "source": "WorkbenchKeyboard.java:122"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java:978"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:924"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:949"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:934"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:962"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:958"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmChar",
          "source": "Widget.java:1272"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_CHAR",
          "source": "Control.java:3336"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3236"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3965"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1799"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.messageProc",
          "source": "Display.java:2538"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1799"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2905"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:811"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:789"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "132215",
      "date": "2006-03-16T18:22:29+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "132215",
  "bugId": "132215",
  "date": "2006-03-16T18:22:29+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}