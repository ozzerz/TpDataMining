{
  "comments": [
    "org.aspectj.weaver.BCException\nat org.aspectj.weaver.AjAttribute.read(AjAttribute.java:127)\nat org.aspectj.weaver.asm.AjASMAttribute.unpack(AjASMAttribute.java:60)\nat org.aspectj.weaver.asm.AsmDelegate.getWeaverState(AsmDelegate.java:304)\nat org.aspectj.weaver.ReferenceType.getWeaverState(ReferenceType.java:368)\nat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:536)\nat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:519)\nat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1058)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:480)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:190)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:137)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:178)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:413)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:466)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:331)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:400)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:512)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nBCException thrown: malformed org.aspectj.weaver.WeaverState attribute java.io.EOFException\nwhen weaving intertype declarations ExtensionOwner\nwhen processing compilation unit C:\\CVSDir\\CF_Umbrella\\Code\\source\\com\\crum\\policyAdmin\\business\\KYTaxRateCalculator.java\nwhen batch building BuildConfig[C:\\Documents and Settings\\vmataxt\\workspace\\.metadata\\.plugins\\org.eclipse.ajdt.core\\Umbrella.generated.lst] #Files\u003d578",
    "this bug suggests you are building an aspect with one level of aspectj then processing it with another sometime later?  Can you tell me - are you using an aspect library?  Definetly using the same level of AspectJ throughout your process?  ",
    "\n(In reply to comment #1)\n\u003e this bug suggests you are building an aspect with one level of aspectj then\n\u003e processing it with another sometime later?  Can you tell me - are you using an\n\u003e aspect library?  Definetly using the same level of AspectJ throughout your\n\u003e process?  \n\nAndy,\n\nI have used the following AJDT for Eclipse:\nUpdate Site URL: http://download.eclipse.org/tools/ajdt/32/update \nZip file: ajdt_1.4.1_for_eclipse_3.2.zip \n\nI have a set of framework classes that might have been compiled using a previous version. If that\u0027s the case, what should be my next step? Are AJDT versions not backword compatible?\n\n-Vishal",
    "sorry. taken me ages to reply on this.\n\nAJDT is backwards compatible.  Compilation of an aspect with version X will be consumed correctly by version X+1, X+2, etc.  What won\u0027t work is compilation of an aspect with version X and then weaving with version X-1.  When that happens we get exceptions like the one shown here.\n\nBecause it has been open so long, I imagine you\u0027ve gotten past this by now so am going to close the bug.  if you still want me to get to the bottom of it, please feel free to reopen it."
  ],
  "commentCreationDates": [
    "2007-02-23T22:26:38+01:00",
    "2007-02-26T09:12:51+01:00",
    "2007-02-26T16:16:55+01:00",
    "2007-10-26T12:38:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "elements": [
        {
          "method": "org.aspectj.weaver.AjAttribute.read",
          "source": "AjAttribute.java:127"
        },
        {
          "method": "org.aspectj.weaver.asm.AjASMAttribute.unpack",
          "source": "AjASMAttribute.java:60"
        },
        {
          "method": "org.aspectj.weaver.asm.AsmDelegate.getWeaverState",
          "source": "AsmDelegate.java:304"
        },
        {
          "method": "org.aspectj.weaver.ReferenceType.getWeaverState",
          "source": "ReferenceType.java:368"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations",
          "source": "AjLookupEnvironment.java:536"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations",
          "source": "AjLookupEnvironment.java:519"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom",
          "source": "AjLookupEnvironment.java:1058"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:480"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept",
          "source": "Compiler.java:190"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:137"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage",
          "source": "PackageBinding.java:178"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport",
          "source": "CompilationUnitScope.java:413"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport",
          "source": "CompilationUnitScope.java:466"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports",
          "source": "CompilationUnitScope.java:331"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes",
          "source": "CompilationUnitScope.java:400"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:512"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:329"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:887"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:244"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:163"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:122"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "175387",
      "date": "2007-02-23T22:26:38+01:00",
      "product": "AspectJ",
      "component": "Build",
      "severity": "major"
    }
  ],
  "groupId": "175387",
  "bugId": "175387",
  "date": "2007-02-23T22:26:38+01:00",
  "product": "AspectJ",
  "component": "Build",
  "severity": "major"
}