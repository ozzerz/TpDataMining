{
  "comments": [
    "Build 20050509\n\nIn an editor for file X.java, paste following code:\npublic class X {\n\tboolean run(X x) {\n\t\treturn false;\n\t}\n\t\u003cT\u003e void run(Class\u003cT\u003e ct) {\n\t}\n\tpublic static void main(String[] args) {\n\t\tboolean b \u003d new X().run(new X(){});\n\t}\n}\n\nThis will cause an exception in compiler (bug 94928) in build 20050509.\nHowever, the consequence is that no action can be performed any longer once this\noccurs in reconciler, as dialogs keep opening.\n\nEither we should:\n- catch these properly in reconcile operation (like the builder/batch does) and\nconvert into IProblem\n- improve UI handling to stop looping",
    "Dani - wasn\u0027t the editor supposed to be more robust ?",
    "!ENTRY org.eclipse.core.runtime 4 2 2005-05-12 14:46:58.118\n!MESSAGE An internal error occurred during: \"Requesting Java AST from selection\".\n!STACK 0\njava.lang.NullPointerException\n        at\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:86)\n        at\norg.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:361)\n        at\norg.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1153)\n        at org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(Scope.java:2156)\n        at\norg.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:314)\n        at\norg.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:201)\n        at\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:415)\n        at\norg.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:169)\n        at\norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:393)\n        at\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1063)\n        at\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1112)\n        at\norg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:305)\n        at\norg.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:826)\n        at\norg.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:503)\n        at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:761)\n        at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:570)\n        at\norg.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:556)\n        at\norg.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:487)\n        at\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:\n165)\n        at\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run(SelectionListenerWithASTManager.java:142)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)",
    "When this occurs, I cannot get rid of the dialog, and further save or exit.\nOnly solution is ctrl-C.\n\n",
    "\u003eDani - wasn\u0027t the editor supposed to be more robust ?\nNo, at no places in JDT UI we catch RuntimeException.",
    "Note that the exception is not surfaced to the user during building because the\nBuild Manager (Platform Core) runs the Java Builder in an ISafeRunnable. So the\nexception is simply logged.",
    "For RC1 I will do the same for\n- reconciling\n- ast creation",
    "Thanks Dani. Since you\u0027re going to fix bug 94951, no action is planned on this one.\n\nClosing.",
    "Yes, Philippe urged me sooo much (;-) and comment 5 gave the final go for it.\nAnd of course I want the editor to look good!",
    "*** Bug 105067 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-05-12T14:53:02+02:00",
    "2005-05-12T14:53:53+02:00",
    "2005-05-12T14:56:48+02:00",
    "2005-05-12T15:00:20+02:00",
    "2005-05-12T15:29:35+02:00",
    "2005-05-12T15:33:13+02:00",
    "2005-05-12T15:36:29+02:00",
    "2005-05-12T23:01:49+02:00",
    "2005-05-12T23:06:19+02:00",
    "2005-08-03T22:35:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod",
          "source": "ParameterizedGenericMethodBinding.java:86"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod",
          "source": "Scope.java:361"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod",
          "source": "Scope.java:1153"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod",
          "source": "Scope.java:2156"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType",
          "source": "MessageSend.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve",
          "source": "LocalDeclaration.java:201"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:415"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:169"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:393"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1063"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1112"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:305"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:826"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:503"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.internalCreateAST",
          "source": "ASTParser.java:761"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createAST",
          "source": "ASTParser.java:570"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST",
          "source": "ASTProvider.java:556"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST",
          "source": "ASTProvider.java:487"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java: 165"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run",
          "source": "SelectionListenerWithASTManager.java:142"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "94945",
      "date": "2005-05-12T14:56:48+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "94945",
  "bugId": "94945",
  "date": "2005-05-12T14:53:02+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}