{
  "comments": [
    "When using AspectJ from Maven if there is a missing dependency (here \nJAXRPC-SPI) The AspectJ compiler crash when compiling an aspect. \n \nAspect : \n \npublic aspect KernelPerformanceLogger { \n \n private static Log log \u003d \nLogFactory.getLog( \"KernelPerformanceLoggerAspect\" ); \n private static long startTime \u003d 0; \n  \n pointcut myClass(): target(com.XXX.Kernel) \u0026\u0026 call(public * *(..)); \n  \n    Object around() : myClass() {  \n        long start \u003d System.currentTimeMillis(); \n        try { \n            return proceed(); \n        } finally { \n            long end \u003d System.currentTimeMillis(); \n            recordTime(start, end, thisJoinPointStaticPart.getSignature()); \n        } \n    }  \n \n    private void recordTime( long start, long end, Signature sig ) { \n      \n  long duration \u003d end - start; \n   \n  // Only apply if debug is enabled. \n  if ( log.isDebugEnabled() ) { \n    \n   StringBuffer buffer \u003d new StringBuffer( 50 ); \n   buffer.append( sig.toString() ) \n    .append( \" took \" ) \n    .append( duration ) \n    .append( \" ms.\" ); \n   log.debug( buffer ); \n  } \n } \n \n} \n \nStack trace when compiler crash : \n \n __  __ \n|  \\/  |__ _Apache__ ___ \n| |\\/| / _` \\ V / -_) \u0027 \\  ~ intelligent projects ~ \n|_|  |_\\__,_|\\_/\\___|_||_|  v. 1.0 \n \nbuild:start: \n \nclean:clean: \n    [delete] Deleting directory XXX \n \nclean: \n \nwar:init: \n \njava:prepare-filesystem: \n    [mkdir] Created dir: XXX/target/classes \nWeaving into: XXX-kernel \nWeaving into: XXX-shared \nWeaving into: XXX-ws-client \nwarning couldn\u0027t find aspectjrt.jar on classpath, checked: \n \ntrouble in: \nABORT \n \nException thrown from AspectJ 1.2 \n \nThis might be logged as a bug already -- find current bugs at \n  http://bugs.eclipse.org/bugs/buglist.cgi?product\u003dAspectJ\u0026component\u003dCompiler \n \nBugs for exceptions thrown have titles File:line from the top stack, \ne.g., \"SomeFile.java:243\" \n \nIf you don\u0027t find the exception below in a bug, please add a new bug \nat http://bugs.eclipse.org/bugs/enter_bug.cgi?product\u003dAspectJ \nTo make the bug a priority, please include a test program \nthat can reproduce this exception. \nInvalid method signature: \u003cmissing\u003e \nInvalid method signature: \u003cmissing\u003e \norg.apache.bcel.classfile.ClassFormatException: Invalid method signature: \n\u003cmissing\u003e \n        at org.apache.bcel.classfile.Utility.typeOfSignature(Utility.java:1024) \n        at org.apache.bcel.generic.Type.getType(Type.java:158) \n        at org.aspectj.weaver.bcel.BcelWorld.makeBcelType(BcelWorld.java:155) \n        at org.aspectj.weaver.bcel.BcelVar.createStore(BcelVar.java:47) \n        at \norg.aspectj.weaver.bcel.BcelShadow.initializeArgVars(BcelShadow.java:1082) \n        at \norg.aspectj.weaver.bcel.BcelShadow.initializeForAroundClosure(BcelShadow.java:1107) \n        at org.aspectj.weaver.bcel.BcelAdvice.specializeOn(BcelAdvice.java:74) \n        at \norg.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:257) \n        at org.aspectj.weaver.Shadow.implement(Shadow.java:324) \n        at \norg.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1145) \n        at \norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:357) \n        at \norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:80) \n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:724) \n        at \norg.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:689) \n        at \norg.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:615) \n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:563) \n        at \norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:239) \n        at \norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:114) \n        at \norg.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:376) \n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:601) \n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:160) \n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:94) \n        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:102) \n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53) \n        at org.aspectj.tools.ajc.Main.run(Main.java:280) \n        at org.aspectj.tools.ajc.Main.runMain(Main.java:217) \n        at \norg.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1157) \n        at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:954) \n        at org.apache.tools.ant.Task.perform(Task.java:341) \n        at org.apache.commons.jelly.tags.ant.AntTag.doTag(AntTag.java:232) \n        at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:279) \n        at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:135) \n        at org.apache.commons.jelly.impl.DynamicTag.doTag(DynamicTag.java:125) \n        at \norg.apache.commons.jelly.impl.StaticTagScript.run(StaticTagScript.java:145) \n        at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:135) \n        at org.apache.commons.jelly.TagSupport.invokeBody(TagSupport.java:233) \n        at org.apache.commons.jelly.tags.core.IfTag.doTag(IfTag.java:88) \n        at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:279) \n        at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:135) \n        at \norg.apache.maven.jelly.tags.werkz.MavenGoalTag.runBodyTag(MavenGoalTag.java:79) \n        at \norg.apache.maven.jelly.tags.werkz.MavenGoalTag$MavenGoalAction.performAction(MavenGoalTag.java:110) \n        at com.werken.werkz.Goal.fire(Goal.java:639) \n        at com.werken.werkz.Goal.attain(Goal.java:575) \n        at com.werken.werkz.Goal.attainPrecursors(Goal.java:488) \n        at com.werken.werkz.Goal.attain(Goal.java:573) \n        at com.werken.werkz.Goal.attainPrecursors(Goal.java:488) \n        at com.werken.werkz.Goal.attain(Goal.java:573) \n        at com.werken.werkz.WerkzProject.attainGoal(WerkzProject.java:193) \n        at \norg.apache.maven.jelly.tags.werkz.MavenAttainGoalTag.doTag(MavenAttainGoalTag.java:127) \n        at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:279) \n        at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:135) \n        at org.apache.commons.jelly.TagSupport.invokeBody(TagSupport.java:233) \n        at com.werken.werkz.jelly.PreGoalTag$1.firePreGoal(PreGoalTag.java:87) \n        at com.werken.werkz.Goal.firePreGoalCallbacks(Goal.java:691) \n        at com.werken.werkz.Goal.fire(Goal.java:616) \n        at com.werken.werkz.Goal.attain(Goal.java:575) \n        at com.werken.werkz.Goal.attainPrecursors(Goal.java:488) \n        at com.werken.werkz.Goal.attain(Goal.java:573) \n        at com.werken.werkz.Goal.attainPrecursors(Goal.java:488) \n        at com.werken.werkz.Goal.attain(Goal.java:573) \n        at com.werken.werkz.Goal.attainPrecursors(Goal.java:488) \n        at com.werken.werkz.Goal.attain(Goal.java:573) \n        at com.werken.werkz.Goal.attainPrecursors(Goal.java:488) \n        at com.werken.werkz.Goal.attain(Goal.java:573) \n        at com.werken.werkz.WerkzProject.attainGoal(WerkzProject.java:193) \n        at \norg.apache.maven.plugin.PluginManager.attainGoals(PluginManager.java:634) \n        at org.apache.maven.MavenSession.attainGoals(MavenSession.java:266) \n        at org.apache.maven.cli.App.doMain(App.java:486) \n        at org.apache.maven.cli.App.main(App.java:1215) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:324) \n        at com.werken.forehead.Forehead.run(Forehead.java:551) \n        at com.werken.forehead.Forehead.main(Forehead.java:581) \n \n \njava:compile: \naspectj:init: \n \naspectj:compile: \n    [iajc] Copied 1 empty directory to XXX/target/classes \n \nBUILD FAILED \nFile...... XXX/.maven/cache/maven-aspectj-plugin-3.1.1/plugin.jelly \nElement... ant:iajc \nLine...... 58 \nColumn.... 46 \nfail due to ClassFormatException \"Invalid method signature: \n\u003cmissing\u003e\"\"ABORT\" (1 exceptions) \nTotal time: 13 seconds \nFinished at: Fri Oct 15 15:41:31 CEST 2004 \n \nIf we remove the aspect the error is : \n \n \n  \\/  |__ _Apache__ ___ \n| |\\/| / _` \\ V / -_) \u0027 \\  ~ intelligent projects ~ \n|_|  |_\\__,_|\\_/\\___|_||_|  v. 1.0 \n \nbuild:start: \n \nclean:clean: \n    [delete] Deleting directory XXX/target \n \nclean: \n \nwar:init: \n \njava:prepare-filesystem: \n    [mkdir] Created dir: XXX/target/classes \nWeaving into: XXX-kernel \nWeaving into: XXX-shared \nWeaving into: XXX-ws-client \nwarning couldn\u0027t find aspectjrt.jar on classpath, checked: \n \nXXX/.maven/repository/XXX/jars/XXX-ws-client-0.1.jar error can\u0027t find type \ncom.sun.xml.rpc.spi.runtime.StubBase \n(no source information available) \n \n \njava:compile: \naspectj:init: \n \naspectj:compile: \n    [iajc] Copied 1 empty directory to XXX/target/classes \nMessageHolder:  (1 warning)  (1 error) \n[error   0]: error at (no source information available) \nXXX/.maven/repository/XXX/jars/XXX-ws-client-0.1.jar:0 can\u0027t find type \ncom.sun.xml.rpc.spi.runtime.StubBase \n \nBUILD FAILED \nFile...... XXX/.maven/cache/maven-aspectj-plugin-3.1.1/plugin.jelly \nElement... ant:iajc \nLine...... 58 \nColumn.... 46 \n1 errors \nTotal time: 10 seconds \nFinished at: Fri Oct 15 15:40:30 CEST 2004 \n \nIf we add the dependency the build finish successfully.",
    "In fact it seems that it\u0027s when i uncomment the following part of the aspect : \n \n    Object around() : myClass() {  \n        long start \u003d System.currentTimeMillis(); \n        try { \n            return proceed(); \n        } finally { \n            long end \u003d System.currentTimeMillis(); \n            //recordTime(start, end, thisJoinPointStaticPart.getSignature()); \n        } \n    }  \n \nEven with the dependency added the problem is still present. I use this aspect \nin another project but not to wave libraries. ",
    "OK, there were some other libraries that were missing. My understanding of the \nproblem is that if we try to wave libraries that have dependencies whitout \nadding these dependencies to Maven project.xml that crash the compiler. Now \nthat i\u0027ve added all the dependencies the aspect is being compiled correctly.  ",
    "Hi.  I hope to get to this bug soon (early next week?) - you shouldn\u0027t be able\nto make the compiler crash.  Is there any way you can keep around the setup you\nhave that causes it to appear so I can try and fix it and let you see if my fix\nworks? (I imagine I\u0027ll have trouble trying to recreate it here).\n\nlet me know, thanks,\nAndy.",
    "I\u0027ve made a backup to be able to test your patch if needed. It seems (not sure) \nto appear when weaving a webservice client library made with JSWDP 1.4 \n(JAX-RPC) ... I\u0027am on holiday next week so i won\u0027t be able to check my mail \nuntil October 25. \n \nHave a nice WE. \n ",
    "I\u0027ll do something about this before 1.5.0M3 !",
    "not sure where Andy got to on this, but we shouldn\u0027t lose sight of it in the\nrun-up to M4",
    "This is the same issue as bug 73504, for which I committed a fix this morning. The compiler is now much \nmore tolerant of missing types (and the \u003cmissing\u003e signature scenario should not be possible any more).\n\nFix will be available in next published AspectJ dev build (later on today).\n\n*** This bug has been marked as a duplicate of 73504 ***"
  ],
  "commentCreationDates": [
    "2004-10-15T16:07:16+02:00",
    "2004-10-15T16:24:47+02:00",
    "2004-10-15T16:35:08+02:00",
    "2004-10-15T17:21:35+02:00",
    "2004-10-15T17:48:22+02:00",
    "2005-03-23T13:51:09+01:00",
    "2005-08-26T17:13:22+02:00",
    "2005-09-24T11:57:44+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.apache.bcel.classfile.ClassFormatException",
      "message": "Invalid method signature:  \u003cmissing\u003e",
      "elements": [
        {
          "method": "org.apache.bcel.classfile.Utility.typeOfSignature",
          "source": "Utility.java:1024"
        },
        {
          "method": "org.apache.bcel.generic.Type.getType",
          "source": "Type.java:158"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWorld.makeBcelType",
          "source": "BcelWorld.java:155"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelVar.createStore",
          "source": "BcelVar.java:47"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.initializeArgVars",
          "source": "BcelShadow.java:1082"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.initializeForAroundClosure",
          "source": "BcelShadow.java:1107"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.specializeOn",
          "source": "BcelAdvice.java:74"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.prepareForMungers",
          "source": "BcelShadow.java:257"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:324"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:1145"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:357"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:80"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:724"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:689"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:615"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:563"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:239"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:114"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:376"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:601"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:160"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:94"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:102"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:53"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:280"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:217"
        },
        {
          "method": "org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM",
          "source": "AjcTask.java:1157"
        },
        {
          "method": "org.aspectj.tools.ant.taskdefs.AjcTask.execute",
          "source": "AjcTask.java:954"
        },
        {
          "method": "org.apache.tools.ant.Task.perform",
          "source": "Task.java:341"
        },
        {
          "method": "org.apache.commons.jelly.tags.ant.AntTag.doTag",
          "source": "AntTag.java:232"
        },
        {
          "method": "org.apache.commons.jelly.impl.TagScript.run",
          "source": "TagScript.java:279"
        },
        {
          "method": "org.apache.commons.jelly.impl.ScriptBlock.run",
          "source": "ScriptBlock.java:135"
        },
        {
          "method": "org.apache.commons.jelly.impl.DynamicTag.doTag",
          "source": "DynamicTag.java:125"
        },
        {
          "method": "org.apache.commons.jelly.impl.StaticTagScript.run",
          "source": "StaticTagScript.java:145"
        },
        {
          "method": "org.apache.commons.jelly.impl.ScriptBlock.run",
          "source": "ScriptBlock.java:135"
        },
        {
          "method": "org.apache.commons.jelly.TagSupport.invokeBody",
          "source": "TagSupport.java:233"
        },
        {
          "method": "org.apache.commons.jelly.tags.core.IfTag.doTag",
          "source": "IfTag.java:88"
        },
        {
          "method": "org.apache.commons.jelly.impl.TagScript.run",
          "source": "TagScript.java:279"
        },
        {
          "method": "org.apache.commons.jelly.impl.ScriptBlock.run",
          "source": "ScriptBlock.java:135"
        },
        {
          "method": "org.apache.maven.jelly.tags.werkz.MavenGoalTag.runBodyTag",
          "source": "MavenGoalTag.java:79"
        },
        {
          "method": "org.apache.maven.jelly.tags.werkz.MavenGoalTag$MavenGoalAction.performAction",
          "source": "MavenGoalTag.java:110"
        },
        {
          "method": "com.werken.werkz.Goal.fire",
          "source": "Goal.java:639"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:575"
        },
        {
          "method": "com.werken.werkz.Goal.attainPrecursors",
          "source": "Goal.java:488"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:573"
        },
        {
          "method": "com.werken.werkz.Goal.attainPrecursors",
          "source": "Goal.java:488"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:573"
        },
        {
          "method": "com.werken.werkz.WerkzProject.attainGoal",
          "source": "WerkzProject.java:193"
        },
        {
          "method": "org.apache.maven.jelly.tags.werkz.MavenAttainGoalTag.doTag",
          "source": "MavenAttainGoalTag.java:127"
        },
        {
          "method": "org.apache.commons.jelly.impl.TagScript.run",
          "source": "TagScript.java:279"
        },
        {
          "method": "org.apache.commons.jelly.impl.ScriptBlock.run",
          "source": "ScriptBlock.java:135"
        },
        {
          "method": "org.apache.commons.jelly.TagSupport.invokeBody",
          "source": "TagSupport.java:233"
        },
        {
          "method": "com.werken.werkz.jelly.PreGoalTag$1.firePreGoal",
          "source": "PreGoalTag.java:87"
        },
        {
          "method": "com.werken.werkz.Goal.firePreGoalCallbacks",
          "source": "Goal.java:691"
        },
        {
          "method": "com.werken.werkz.Goal.fire",
          "source": "Goal.java:616"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:575"
        },
        {
          "method": "com.werken.werkz.Goal.attainPrecursors",
          "source": "Goal.java:488"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:573"
        },
        {
          "method": "com.werken.werkz.Goal.attainPrecursors",
          "source": "Goal.java:488"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:573"
        },
        {
          "method": "com.werken.werkz.Goal.attainPrecursors",
          "source": "Goal.java:488"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:573"
        },
        {
          "method": "com.werken.werkz.Goal.attainPrecursors",
          "source": "Goal.java:488"
        },
        {
          "method": "com.werken.werkz.Goal.attain",
          "source": "Goal.java:573"
        },
        {
          "method": "com.werken.werkz.WerkzProject.attainGoal",
          "source": "WerkzProject.java:193"
        },
        {
          "method": "org.apache.maven.plugin.PluginManager.attainGoals",
          "source": "PluginManager.java:634"
        },
        {
          "method": "org.apache.maven.MavenSession.attainGoals",
          "source": "MavenSession.java:266"
        },
        {
          "method": "org.apache.maven.cli.App.doMain",
          "source": "App.java:486"
        },
        {
          "method": "org.apache.maven.cli.App.main",
          "source": "App.java:1215"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "com.werken.forehead.Forehead.run",
          "source": "Forehead.java:551"
        },
        {
          "method": "com.werken.forehead.Forehead.main",
          "source": "Forehead.java:581"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "76355",
      "duplicateId": "73504",
      "date": "2004-10-15T16:07:16+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "73504",
  "bugId": "76355",
  "duplicateId": "73504",
  "date": "2004-10-15T16:07:16+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}