{
  "comments": [
    "Eclipse build 200312110800\nOS X 10.3.1\n\nIn this build, everytime I quit eclipse I get the stack below and a dialog saying \"Problems occurred \nwhile trying to save the state of the workbench\". \n\n!ENTRY org.eclipse.core.resources 4 566 Dec 14, 2003 00:32:46.495\n!MESSAGE An error occurred while traversing resources.\n!STACK 0\njava.lang.IllegalArgumentException: Attempted to endRule: P/DemoData, does not match most \nrecent begin: R/.  See log for trace information if rule tracing is enabled.\n        at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)\n        at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPop(ImplicitJobs.java:69)\n        at org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.pop(ImplicitJobs.java:147)\n        at org.eclipse.core.internal.jobs.ImplicitJobs.end(ImplicitJobs.java:274)\n        at org.eclipse.core.internal.jobs.JobManager.endRule(JobManager.java:284)\n        at org.eclipse.core.internal.resources.WorkManager.checkOut(WorkManager.java:139)\n        at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:859)\n        at org.eclipse.core.internal.resources.Synchronizer.setSyncInfo(Synchronizer.java:242)\n        at \norg.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache$1.visit(SessionPropert\nySyncInfoCache.java:458)\n        at org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)\n        at org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:53)\n        at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:\n76)\n        at org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:82)\n        at \norg.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache.saving(SessionProperty\nSyncInfoCache.java:447)\n        at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:299)\n        at org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:128)\n        at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:809)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:447)\n        at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:139)\n        at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1271)\n        at org.eclipse.core.internal.resources.Workspace.save(Workspace.java:1594)\n        at org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor$8.run(IDEWorkbenchAdvisor.java:608)\n        at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)\n        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)\n        at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:394)\n        at \norg.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.disconnectFromWorkspace(IDEWorkbenchAdvisor.j\nava:615)\n        at org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.postShutdown(IDEWorkbenchAdvisor.java:\n275)\n        at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:1771)\n        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1486)\n        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)\n        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)\n        at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:242)\n        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:84)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.eclipse.core.internal.boot.OSGiBootLoader.basicRun(OSGiBootLoader.java:239)\n        at org.eclipse.core.internal.boot.OSGiBootLoader.run(OSGiBootLoader.java:665)\n        at org.eclipse.core.internal.boot.OSGiBootLoader.run(OSGiBootLoader.java:652)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:299)\n        at org.eclipse.core.launcher.Main.run(Main.java:767)\n        at org.eclipse.core.launcher.Main.main(Main.java:601)",
    "Yes, I see the same here.\nAt least the \"lock the Toolbars\" state is lost.",
    "I see this bug, too. Mac OS X 10.2.8. \n\nThis bug is new for me with M6. M5 worked fine for me.\n\nThe exception is thrown for each of my projects in Eclipse.\n\nGerd",
    "*** Bug 49270 has been marked as a duplicate of this bug. ***",
    "This is becoming a major pain. I get it every time.\nRaising severity.",
    "Is it possible that this problem has something to do with old projects associated with builders that \nare no longer available?",
    "I got the problem by just taking a new drop, starting from a new workspace, and loading in the \nSWT projects, then exiting the workspace, so I don\u0027t think it\u0027s related to old builders.\n\nJohn, do you know what is happening here?",
    "No, it only seems to happen on Mac.  Someone with a mac could help me diagnose\nit by adding the following to their .options file and running in debug mode:\n\norg.eclipse.core.runtime/debug\u003dtrue\norg.eclipse.core.runtime/jobs/beginend\u003dtrue",
    "John, I have done as you suggest but I get no extra information in the stack (I\u0027ll attach one anyway). \n\nHowever, I have noticed that this bug does not occur if you quit eclipse by using the window\u0027s close \nbutton (the red one), or use the File menu\u0027s Exit.\nCommand+q, Eclipse menu\u0027s quit and quitting from the dock results in error.\nI verified this on another mac so it seems quite consistent.\n\nChanning",
    "Created an attachment (id\u003d7335)\nStack with debug enabled as per comment 7\n",
    "Created an attachment (id\u003d7336)\nConsole log with debug info from error\n\nI found the log info - missed it earlier when I looked. Hope this is useful.\n\nChanning",
    "Re: comment #8\nthis reminds me of comment #14 of bug #46624:\n\nOne important  difference between the \"Quit\" and \"File/Exit\" is that in the former case the \ndisplay is disposed while in the latter it is not. ",
    "Well, the information about the display is a valuable clue.  Since it\u0027s only\nhappening on the Mac I thought there had to be some different code path being\nhit. Channing, I realized there was one debug flag missing from the flags I gave\nyou.  Here are the necessary flags:\n\norg.eclipse.core.runtime/debug\u003dtrue\norg.eclipse.core.runtime/jobs\u003dtrue\norg.eclipse.core.runtime/jobs/beginend\u003dtrue\n\nThis will dump lots of extra information on System.out, but the interesting\ninformation I\u0027m looking for will be in the log.  Essentially it will record the\nstack trace of the start of the operation that failed to finish properly. The\ncurrent stack we are seeing is a side-effect of a different operation failing to\ncomplete.  Thanks for your time.",
    "Created an attachment (id\u003d7340)\nLog with org.eclipse.core.runtime/jobs\u003dtrue\n\nLog for comment 12.\n\nHows this?",
    "John, the extra flag doesn\u0027t seem to have added any more info to the logs. Just to be sure that I\u0027m \nnot editing the wrong thing: I have edited the .options file in plugins/\norg.eclipse.core.runtime_3.0.0\n\nChang",
    "Sorry, I didn\u0027t describe all the steps.  The .options file has to be in the\neclipse install directory (so it is a sibling of the plugins directory).  The\nusual practice is to copy the .options file from the plugin you are debugging\ndown to the install directory and then edit it.  You can think of the .options\nfile in plugins/org.eclipse.core.runtime/.options as a template file.  Finally,\nyou need to run eclipse with the \"-debug\" command line argument.  I don\u0027t know\nhow you specify command line args on the Mac...",
    "OK, sorry about that.\n\nRunning it again I get the same stack :-(  \n\nThe -debug command line arg appears to be correct, the logs session info says:\nCommand-line arguments: -os macosx -ws carbon -arch ppc -debug -showlocation\nI set this in the apps Info.plist\n\nChanning",
    "Commenting the call to dispose() in Display.close() fixes the problem for me.\n\npublic void close () {\n\tcheckDevice ();\n\tEvent event \u003d new Event ();\n\tsendEvent (SWT.Close, event);\n\t//if (event.doit) dispose ();\n}\n\nAfter bug #47039 has been fixed I suggest to always veto the SWT.Close event in Workbench.runUI \n(so that the display isn\u0027t diposed of immediately).\nPlease note, this issue doesn\u0027t seem to be Mac specific: it could happen on Windows too.\n",
    "Moving to platform.ui",
    "To give more details from a core view - the unmatched rule exception is caused\nby an incorrectly paired beginRule/endRule set.  Since this is API it can be\ncoming from anywhere (current users are in resources, team/cvs, and UI), I can\u0027t\npoint the finger at anyone in particular.  My suspicion is that the early\nDisplay disposal is causing an endRule to be lost (for example if it isn\u0027t in a\nfinally block, or if previous code in the finally block throws an exception). \nI\u0027d like to track this down when I can lay my hands on a Mac.  I suspect this\nendRule failure is masking some other exception that is being propagated as a\nresult of the disposed Display.   So, there is probably a UI bug (Display being\ndisposed too early) and a core or team/cvs bug (endRule not being in a finally\nblock) in here.",
    "John, I\u0027d like to help if I can, but I seem to be having difficulty with the debug options. \n\nWhilst they appear on the command line according to the logs,  they don\u0027t have any effect on the \nlogging to help us. Is there an option I could add to verify that the options are being picked up \nfrom the .options file?\n\nChanning",
    "Channing, sorry to have wasted your time.  It turns out there was a bug in the debug tracing \nfacility in M6 (see bug 49850) that was preventing the tracing from working.  I\u0027m on a Mac now so I \nshould be able to track it down without further help.  Thanks anyway!",
    "(comment #21 was written by me... I guess Nick was the last one using the Mac and he didn\u0027t log \nout of bugzilla)",
    "No worries John.",
    "Ok, here\u0027s what\u0027s going on. In pseudo-code, Workbench.runUI does this:\n\ntry {\n   init();\n   runEventLoop();\n   shutdown();\n} finally {\n   display.dispose();\n}\nWorkbench.instance \u003d null;\n\nSo, in normal execution, the display is not disposed until after shutdown.  In\nthe abnormal Mac shutdown (see bug 46624 for more details), the display is\ndisposed prior to shutdown().  Several pieces of code during shutdown try to\nlock/modify the workspace.  Anyone doing this without a progress monitor\ninstance gets a \"free\" default progress monitor from the UI (provided by\nProgressManager.getDefaultMonitor()).  The method getDefaultMonitor looks like this:\n\n Display display;\n if(PlatformUI.isWorkbenchRunning()){\n   display \u003d PlatformUI.getWorkbench().getDisplay();\n   if (display.getThread() \u003d\u003d Thread.currentThread())\n     return new DefaultMonitor();\n }\n\nThe method PlatformUI.isWorkbenchRunning() checks if Workbench.instance is null,\nbut this is not cleared until AFTER shutdown is complete.  The invocation of\ndisplay.getThread() throws an SWT exception because the display is disposed.\nThus getDefaultMonitor throws an exception, and this is called from\nIJobManager.beginRule.  When endRule is reached (always in a finally block), it\nthrows an exception because the corresponding beginRule never happened.\n\nI suggest the following improvements:\n\n1) display should not be disposed until after shutdown (this is covered by bug\n46624)\n2) core should shield itself from exceptions when calling\nProgressProvider.getDefaultMonitor\n3) Workbench.instance should be nulled in the finally block in case of\nexceptions during shutdown (otherwise PlatformUI.isWorkbenchRunning() will\nreturn true even after the workbench has exited).\n4) ProgressManager.getDefaultInstance should protect itself from a disposed\ndisplay in addition to calling PlatformUI.isWorkbenchRunning()",
    "I have released a fix for tomorrow\u0027s build that addresses 2) in my list.\n\nAlso, while submitting a patch for a different bug (bug 48450), I fixed 4)\n(check for null display in ProgressManager.getDefaultMonitor). This has been\nreleased to HEAD.\n\nMy last suggestion (nulling Workbench.instance in a finally block) is no longer\nreally needed, but UI team may want to do it anyway for safety.",
    "*** Bug 50217 has been marked as a duplicate of this bug. ***",
    "The Workbench no longer nulls out the singleton instance on shutdown.  See bug\n56749 for details.\nAlso, all shutdown is now done before the event loop terminates.  See bug 46624.\n\nIt looks like all the issues in this PR were addressed for M8 (see bug 56749 for\nrelated changes made in M9).\n\nClosing.\n"
  ],
  "commentCreationDates": [
    "2003-12-14T09:42:38+01:00",
    "2003-12-14T22:39:35+01:00",
    "2003-12-21T19:04:47+01:00",
    "2003-12-23T13:20:44+01:00",
    "2003-12-23T13:22:19+01:00",
    "2004-01-06T13:49:58+01:00",
    "2004-01-06T14:08:15+01:00",
    "2004-01-06T16:42:43+01:00",
    "2004-01-06T23:45:57+01:00",
    "2004-01-06T23:47:33+01:00",
    "2004-01-07T00:08:36+01:00",
    "2004-01-07T09:51:56+01:00",
    "2004-01-07T15:32:02+01:00",
    "2004-01-07T15:48:59+01:00",
    "2004-01-07T15:57:50+01:00",
    "2004-01-07T16:01:14+01:00",
    "2004-01-07T16:12:09+01:00",
    "2004-01-08T11:12:47+01:00",
    "2004-01-12T12:07:23+01:00",
    "2004-01-12T15:21:41+01:00",
    "2004-01-12T15:27:59+01:00",
    "2004-01-12T17:08:42+01:00",
    "2004-01-12T17:13:20+01:00",
    "2004-01-12T17:15:36+01:00",
    "2004-01-12T22:48:29+01:00",
    "2004-01-19T18:48:19+01:00",
    "2004-01-20T15:57:39+01:00",
    "2004-04-01T23:06:02+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Attempted to endRule: P/DemoData, does not match most  recent begin: R/.  See log for trace information if rule tracing is enabled.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
          "source": "Assert.java:56"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.illegalPop",
          "source": "ImplicitJobs.java:69"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.pop",
          "source": "ImplicitJobs.java:147"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs.end",
          "source": "ImplicitJobs.java:274"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.endRule",
          "source": "JobManager.java:284"
        },
        {
          "method": "org.eclipse.core.internal.resources.WorkManager.checkOut",
          "source": "WorkManager.java:139"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:859"
        },
        {
          "method": "org.eclipse.core.internal.resources.Synchronizer.setSyncInfo",
          "source": "Synchronizer.java:242"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache$1.visit",
          "source": "SessionPropert ySyncInfoCache.java:458"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$2.visit",
          "source": "Resource.java:103"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$1.visitElement",
          "source": "Resource.java:53"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java: 76"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.iterate",
          "source": "ElementTreeIterator.java:119"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:63"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:101"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:82"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache.saving",
          "source": "SessionProperty SyncInfoCache.java:447"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.executeLifecycle",
          "source": "SaveManager.java:299"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager$1.run",
          "source": "SaveManager.java:128"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:809"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:447"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle",
          "source": "SaveManager.java:139"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.save",
          "source": "SaveManager.java:1271"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.save",
          "source": "Workspace.java:1594"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor$8.run",
          "source": "IDEWorkbenchAdvisor.java:608"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:302"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:252"
        },
        {
          "method": "org.eclipse.jface.dialogs.ProgressMonitorDialog.run",
          "source": "ProgressMonitorDialog.java:394"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.disconnectFromWorkspace",
          "source": "IDEWorkbenchAdvisor.j ava:615"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.postShutdown",
          "source": "IDEWorkbenchAdvisor.java: 275"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.shutdown",
          "source": "Workbench.java:1771"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1486"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:246"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:47"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:242"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:84"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.internal.boot.OSGiBootLoader.basicRun",
          "source": "OSGiBootLoader.java:239"
        },
        {
          "method": "org.eclipse.core.internal.boot.OSGiBootLoader.run",
          "source": "OSGiBootLoader.java:665"
        },
        {
          "method": "org.eclipse.core.internal.boot.OSGiBootLoader.run",
          "source": "OSGiBootLoader.java:652"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:299"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:767"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:601"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "48702",
      "date": "2003-12-14T09:42:38+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "critical"
    }
  ],
  "groupId": "48702",
  "bugId": "48702",
  "date": "2003-12-14T09:42:38+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "critical"
}