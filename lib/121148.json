{
  "comments": [
    "The following stacktrace will occur if the persistent state cache becomes currupted:\n\njava.lang.NullPointerException\n     at\norg.eclipse.osgi.framework.internal.core.BundleLoader.getLoaderProxy(BundleLoader.java:237)\n     at\norg.eclipse.osgi.framework.internal.core.BundleLoader.createExportPackageSource(BundleLoader.java:209)\n     at\norg.eclipse.osgi.framework.internal.core.BundleLoader.addImportedPackages(BundleLoader.java:200)\n     at\norg.eclipse.osgi.framework.internal.core.BundleLoader.findImportedSource(BundleLoader.java:857)\n     at\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:374)\n     at\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)\n     at\norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)\n     at java.lang.ClassLoader.loadClass(ClassLoader.java:517)\n     at org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:275)\n     at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\n     at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivat\n\nThis can result from unloading the in-memory cache and then reloading the data from disk later.  In some cases data for ExportPackageDescriptions is not being fully flushed from memory.  This may cause an importer to reference an ExportPackageDescription object which is different from the ExportPackageDescription object referenced by the exporter.  Under normal circumstances this does not actually cause a problem because both instances of the ExportPackageDescription actually reference the same BundleDescription as the exporter.\n\nThe time when this does cause a problem is when the state changes after the in-memory cache has gotten into this state.  The state may change as a result of install new bundles or even from resolving a dynamic import (which is the more likely cause of this problem).  On shutdown the state must be persisted because it has changed, but the in-memory data is \u0027corrupted\u0027 and the duplicate ExportPackageDescription objects do not get persisted correctly.  This causes the NPE on the subsequent restarts.  The only way to get out of this situation is the clear the persistent state cache and run with the following property set in the config.ini.\n\n-Dosgi.noLazyStateLoading\u003dtrue\n\nThe root cause is the algorithm used to calculate when the lazy loaded data may be flushed from memory.  This algorithm attempts to keep timestamps of the lazyloaded data and only flushes the data if the timestamp has expired.  The problem with this approach is that bundles on the bottom of the stack (like org.eclipse.osgi) may get flushed but bundles dependent on the flushed data will not get flushed until their data expires.\n\nThe algorithm should be greatly simplified to not keep track of individual lazy data timestamps.  Instead it should just keep a single accessed flag which gets set each time any lazy data is accessed and this flag is queried each time an attempt to flush data is made (at a particular interval of time).  If data has been access since the last attempt to unload lazy data then do not unload and reset the access flag; otherwise unload all lazy data.",
    "Released a fix to HEAD for 3.2.  I will attach a patch for 3.1.2.",
    "Created an attachment (id\u003d31848)\npatch for 3.1.2\n\nJeff I need approval to release this patch to 3.1.2.  Thanks.",
    "The workaround from the opening comment should be to add the following to your config.ini:\n\nosgi.noLazyStateLoading\u003dtrue\n\nnot \"-Dosgi.noLazyStateLoading\u003dtrue\" which could be used to set the property using vm args with a -D option.",
    "+1 for 3.1.2",
    "Good to go.",
    "done. fixed for 3.1.2"
  ],
  "commentCreationDates": [
    "2005-12-15T23:45:34+01:00",
    "2005-12-15T23:55:21+01:00",
    "2005-12-15T23:56:49+01:00",
    "2005-12-16T14:16:49+01:00",
    "2006-01-05T01:04:24+01:00",
    "2006-01-06T19:57:53+01:00",
    "2006-01-06T20:28:08+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.getLoaderProxy",
          "source": "BundleLoader.java:237"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.createExportPackageSource",
          "source": "BundleLoader.java:209"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.addImportedPackages",
          "source": "BundleLoader.java:200"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findImportedSource",
          "source": "BundleLoader.java:857"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:374"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:78"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:517"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:275"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "121148",
      "date": "2005-12-15T23:45:34+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "121148",
  "bugId": "121148",
  "date": "2005-12-15T23:45:34+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}