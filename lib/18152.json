{
  "comments": [
    "When running a project with F1 I get an OutOfMemoryError. This happens after \nthe project is loaded, and then I try to open one of the java projects files in \nthe editor. \n\nThis does not happen when using M5.\n\nlog lines\n********************\n!SESSION maj 29, 2002 14:32:11.324 ---------------------------------------------\njava.version\u003d1.3.1_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dda_DK\nCommand-line arguments: -os win32 -ws win32 -arch x86 -feature \norg.eclipse.platform -install file:C:/download/eclipse/eclipse-SDK-20020528-\nwin32/eclipse/\n!ENTRY org.eclipse.core.runtime 2 1 maj 29, 2002 14:32:11.334\n!MESSAGE Problems encountered loading the plug-in registry.\n!SUBENTRY 1 org.eclipse.core.runtime 2 1 maj 29, 2002 14:32:11.334\n!MESSAGE Unknown extension point \norg.eclipse.debug.ui.launchConfigurationShortcuts specified in plug-in \norg.eclipse.pde.ui.\n!SESSION maj 29, 2002 14:32:30.932 ---------------------------------------------\njava.version\u003d1.3.1_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dda_DK\nCommand-line arguments: -os win32 -ws win32 -arch x86 -feature \norg.eclipse.platform -install file:C:/download/eclipse/eclipse-SDK-20020528-\nwin32/eclipse/\n!ENTRY org.eclipse.core.resources 1 4 maj 29, 2002 14:32:30.932\n!MESSAGE Unable to find Action Set: org.eclipse.jdt.debug.ui.JDTLaunchActionSet\n!ENTRY org.eclipse.core.resources 1 4 maj 29, 2002 14:32:30.962\n!MESSAGE Unable to find Action Set: org.eclipse.jdt.junit.JUnitLaunchActionSet\n!ENTRY org.eclipse.core.resources 1 4 maj 29, 2002 14:33:07.716\n!MESSAGE Reference action not found: additions\n!ENTRY org.eclipse.core.resources 1 4 maj 29, 2002 14:35:35.912\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 maj 29, 2002 14:35:35.922\n!MESSAGE java.lang.OutOfMemoryError\n!STACK 0\njava.lang.OutOfMemoryError\n\t\u003c\u003cno stack trace available\u003e\u003e\n!ENTRY org.eclipse.ui 4 2 maj 29, 2002 14:35:54.219\n!MESSAGE Problems occurred when invoking code from plug-in: org.eclipse.ui.\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.jface.text.contentassist.ContentAssistant.uninstall\n(ContentAssistant.java:924)\n\tat org.eclipse.jface.text.source.SourceViewer.handleDispose\n(SourceViewer.java:309)\n\tat \norg.eclipse.jdt.internal.ui.text.correction.JavaCorrectionSourceViewer.handleDis\npose(JavaCorrectionSourceViewer.java:80)\n\tat org.eclipse.jface.text.TextViewer$1.widgetDisposed\n(TextViewer.java:847)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent\n(TypedListener.java:96)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)\n\tat org.eclipse.swt.widgets.Widget.releaseWidget(Widget.java:735)\n\tat org.eclipse.swt.widgets.Control.releaseWidget(Control.java:1383)\n\tat org.eclipse.swt.widgets.Scrollable.releaseWidget(Scrollable.java:187)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:322)\n\tat org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:112)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:112)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:314)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:321)\n\tat org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:112)\n\tat org.eclipse.swt.widgets.Decorations.releaseWidget\n(Decorations.java:644)\n\tat org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:629)\n\tat org.eclipse.swt.widgets.Widget.dispose(Widget.java:355)\n\tat org.eclipse.swt.widgets.Shell.dispose(Shell.java:407)\n\tat org.eclipse.jface.window.Window.close(Window.java:220)\n\tat org.eclipse.jface.window.ApplicationWindow.close\n(ApplicationWindow.java:188)\n\tat org.eclipse.ui.internal.WorkbenchWindow.hardClose\n(WorkbenchWindow.java:849)\n\tat org.eclipse.ui.internal.WorkbenchWindow.busyClose\n(WorkbenchWindow.java:320)\n\tat org.eclipse.ui.internal.WorkbenchWindow.access$3\n(WorkbenchWindow.java:309)\n\tat org.eclipse.ui.internal.WorkbenchWindow$2.run\n(WorkbenchWindow.java:365)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)\n\tat org.eclipse.ui.internal.WorkbenchWindow.close\n(WorkbenchWindow.java:363)\n\tat org.eclipse.jface.window.WindowManager.close(WindowManager.java:103)\n\tat org.eclipse.ui.internal.Workbench$2.run(Workbench.java:199)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:802)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:416)\n\tat org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:170)\n\tat org.eclipse.ui.internal.Workbench.access$5(Workbench.java:148)\n\tat org.eclipse.ui.internal.Workbench$3.run(Workbench.java:288)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)\n\tat org.eclipse.ui.internal.Workbench.close(Workbench.java:286)\n\tat org.eclipse.ui.internal.ExceptionHandler.closeWorkbench\n(ExceptionHandler.java:109)\n\tat org.eclipse.ui.internal.ExceptionHandler.handleException\n(ExceptionHandler.java:94)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1088)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:739)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:200)\n\tat org.eclipse.core.launcher.Main.run(Main.java:643)\n\tat org.eclipse.core.launcher.Main.main(Main.java:476)",
    "Moving to UI, as this error occurred opening an editor.  The other stack trace \nalso hints that the editor was in an invalid state.  Henrik, please add as much \ndetail as possible:\n\n1) How much RAM does your computer have?\n2) How big was the project that you loaded?\n3) What type of file did you try to open when the error happened?\n4) Is this problem reproducible?\n5) Does it happen when you try to open any file, or just one particular file?  \nIf it\u0027s one particular file, it would be nice to attach a copy to the bug \nreport.\n6) What editor-related preferences, if any, did you change?\n",
    "Reassigning to Kai for the NPE.\nNote that the NPE occurred only 20 seconds after the OutOfMemoryError, so this \nmight have left the editor in an unexpected state.\n\nWe will be doing further leak testing on today\u0027s build.\n",
    "1) How much RAM does your computer have?\nI got the error on more computers, one having 256 MB RAM and two others having \n512 MB Ram\n\n2) How big was the project that you loaded?\n\nThe project have 651 source files in 111 folders. This size of the source files \nis 2 MB\n3) What type of file did you try to open when the error happened?\nI opened a *.java file, it happens with any of the *.java files. I am not sure \nit is directly connected to an open of a file. \n4) Is this problem reproducible?\nyes, on more PC with either 256 MB or 512 MB RAM. I have seen it for both the \nF1 and the 28may integration build.\n5) Does it happen when you try to open any file, or just one particular file?  \nany file\nIf it\u0027s one particular file, it would be nice to attach a copy to the bug \nreport.\n6) What editor-related preferences, if any, did you change?\nI did not change any preferences when changing from M5 to F1.\n",
    "fixed NPE \u003e\u003d 20020530.\n\nPassing back to Nick.",
    "Need to leak check again.",
    "Closing since the original bug has been fixed.\nShould still do further leak checking.",
    "I tried the project in F3, and I got the same behaviour. \n\nlog lines*******************\n\n!SESSION jun 14, 2002 14:44:36.472 ---------------------------------------------\njava.version\u003d1.3.1_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dda_DK\nCommand-line arguments: -os win32 -ws win32 -arch x86 -install \nfile:C:/download/eclipse/eclipse-SDK-20020612-win32/eclipse/\n!ENTRY org.eclipse.jdt.ui 4 1 jun 14, 2002 14:44:36.472\n!MESSAGE Internal Error\n!STACK 0\njava.lang.reflect.InvocationTargetException: java.lang.OutOfMemoryError\n\t\u003c\u003cno stack trace available\u003e\u003e\n!SESSION jun 14, 2002 14:47:43.58 ----------------------------------------------\njava.version\u003d1.3.1_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dda_DK\nCommand-line arguments: -os win32 -ws win32 -arch x86 -install \nfile:C:/download/eclipse/eclipse-SDK-20020612-win32/eclipse/\n!ENTRY org.eclipse.ui 4 4 jun 14, 2002 14:47:43.58\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 jun 14, 2002 14:47:43.68\n!MESSAGE java.lang.OutOfMemoryError\n!STACK 0\njava.lang.OutOfMemoryError\n\t\u003c\u003cno stack trace available\u003e\u003e\n",
    "What kind of editor are you opening?\nCan you provide steps to reproduce this?\n\n",
    "Can you supply a workspace which exhibits this problem?",
    "Can\u0027t commit this for F4 until we have reproduceable steps and a proposed fix.",
    "I can reproduce the error the following way:\n\nStart from scratch, by setting up the project, see this defect for project size \n(point to location, include external jars (40),) click finish and the project \nis scrubbing output folder, compiling and it is still OK. In the project there \nis a compile warning, ( a method is deprecated)I click on the entry in the task \nwindow, and after 20 second the editor is showing the class with the deprecated \nmethod. The next time I ask for an action ex. clicking on another java file in \nthe package view, the out of memory error happens. It really does not matter \nwhat I do after compiling, the out of memory error will occur anyway.\nI have a reproduced on 256 and 512 MB RAM Windows PC\u0027s\n\nI am sorry I cannot give a workspace for this, as I regard the project as being \nconfidential.\n",
    "To be clear, you have:\n- one project\n- 651 source files in 111 folders\n- project classpath has 40 external jars\n\nDoes the file that you are opening refer to many types in these external jars?\nDoes it make a difference if you turn off all settings under Workbench \u003e \nPreferences \u003e Java / Editor / Problem Indication?\n",
    "Please investigate with a similar setup using a memory profiling tool.\n",
    "I also get the error in a smaller project. Another project has 135 files, but \nis still using the 40 external jars. \nIf I turn of the \"all settings under Workbench \u003e \nPreferences \u003e Java / Editor / Problem Indication\" it in way does make a \ndifference. I do not get the OutOfMemory at once, but I get a responce time of \nevery click of about 5 sec, and after say 5 click opening java files in the \neditor I get the same OutOfMemory error. (I have checked the log file). I do \nnot get the error using the M5. \n",
    "I have installed a profiler tool. It requires me to start eclipse by the jar \nfile. I have tried to start eclipse by entering \n\nC:\\download\\eclipse\\eclipse-SDK-20020612-win32\\eclipse\u003ejava org.eclipse.core.lau\nncher.Main \n\nbut it does not work. So the question is: How can I start eclipse by pointing \nto a jar file, and also have the right classpath. \n",
    "You can start it with the following command line:\n\njava -ms30M -mx200M -verify -cp startup.jar org.eclipse.core.launcher.Main \n-data \u003cyour workspace\u003e\n\nThis also tells you how to set up the profiler.",
    "Henrik:\n\nRespecting the confidentiality of your workspace, I constructed a single \nproject of similar size: 71 jars, 50 source files (each 2000 lines long). I \ncreated these source files automatically with Test.java (attached). As such, \nthey don\u0027t represent any sort of real world application. The intention was only \nto tax Eclipse\u0027s parser/editor a bit.\n\n1. Windows 2000, PIII 866, 512 MB, IBM JVM, Clean 20020620 integration build \n(in C:\\eclipse-SDK-20020620-win32\\eclipse), Start Eclipse with no command line \nparameters\n\n2. Window|Preferences -\u003e Turn off \"Perform build automatically..\"\n\n3. Open Java perspective and create a new project \"Test\"\n\n4. To get a large number of useful jars into the project, I took the complete \nset of Eclipse jars. (In explorer, C:\\eclipse-SDK-20020620-win32\n\\eclipse\\plugins, F3 to search for *.jar. Select All \u0026 Copy to C:\\eclipse-SDK-\n20020620-win32\\eclipse\\workspace\\Test. Overwrite any duplicates. You should end \nup with 71 unique jars.\n\n5. Select project Test, Right click Properties, Java build path, External jars, \nAdd external jars.\n\n6. Copy Test.java to C:\\eclipse-SDK-20020620-win32\\eclipse\\workspace\\Test.\n(When run, this application will open all 71 jars in the Test project, and \nproduce the complete set of 7814 outer class names across all jars. It then \nproduces 50 Java source files (Output0.java - Output49.java), each containing \n2000 declarations to random outer classes within that list.)\n\n7. Select project Test, right click Refresh. Run Test as a new Java \napplication. Refresh again to add Output??.java to the project.\n\n8. Start opening Output0.java - Output49.java in order.\n\nI opened them all successfully, though my system was virtually unresponsive.\nThen I started to click between a number of these open editors and voila:\n\n!SESSION Jun 21, 2002 14:08:52.554 ---------------------------------------------\njava.fullversion\u003dJ2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT enabled: \njitc)\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/eclipse-\nSDK-20020620-win32/eclipse/\n!ENTRY org.eclipse.ui 4 4 Jun 21, 2002 14:08:52.554\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Jun 21, 2002 14:08:52.554\n!MESSAGE java.lang.OutOfMemoryError\n!STACK 0\njava.lang.OutOfMemoryError\n\nThe javaw process had peak mem usage of 331,816K and it page faulted an \noutstanding ~2.481M times.\n\nI\u0027m actually showing you the last test first - I did a number of others before \nrunning out of memory. In fact, the test above was the only one that ever \ncaused the VM to run out of memory. Usually, the VM becomes so unresponsive \nthat it is hard to continue driving it toward overflow. I suppose this is a \nform of self-preservation.\n\nI was unable to produce the OutOfMemoryException upon opening a file \nspecifically, but I certainly think that it is possible. Perhaps it would be \nhelpful to know the number of lines in the source file you are trying to open. \nFor instance, is it very high.. \u003e 10,000?\n\nIn another test I tried 10 files, each 8000 lines long. Opening Output0.java, \nOutput1.java, and Output2.java took about 30 seconds. At this point, the javaw \nprocess memory usage has jumped up to about 190,000 K. Opening Output3.java \ncauses the javaw process memory usage to leap by nearly 100MB - now a 287,000K.\nOpen Output4.java. javaw mem usage about 306,000K. At this point, things are \nnearly unresponsive, but eventually all 10 open without an OutOfMemoryException.\n\nDuring these tests I did encounter a few odd exceptions over the course of a \nfew runs: see e1.txt and e2.txt attached.\n\nI\u0027ve tried to get more information by profiling (in OptimizeIt) with the \nfollowing config:\n\tworking dir: C:\\eclipse-SDK-20020620-win32\\eclipse\n\tmain class: org.eclipse.core.launcher.Main\n\tjava parameters: -ms30M -mx200M -verify\n\tclasspath: C:\\eclipse-SDK-20020620-win32\\eclipse\\startup.jar;.\n\nIt is impossibly slow to do this. (It takes 5-10 min just to open Output0.java, \nthe 8000 line version). After it opened and Eclipse settled, I had a look at \nwhere all the memory was gone.\n\nOf the single largest number of instances, char[], I looked at the allocation \nbacktrace to get an idea where they were coming from:\n\nOf the 100934 instances at the time of the snapshot,\neight methods allocate more than 1% of these instances each,\ncombined these methods total more than 92.4% of all char[] allocations\nthese eight methods are:\n\nString.String() \t\t\t[~28460]\nScanner.getCurrentIdentifierSource(); \t[~22320]\nCharOperation.concatWith(); \t\t[~15450]\nScanner.optimizedCurrentTokenSource5(); [~13640]\nStringBuffer.StringBuffer()\t\t[~9210]\nScanner.optimizedCurrentTokenSource4()  [~1890]\nClassLoader.defineClass()\t\t[~1230]\nStringBuffer.expandCapacity()\t\t[~1070]\n\nThe Scanner methods, at least, originate in Parser, from methods such as \nParser.pushIdentifier().\n\nI clicked on the Eclipse desktop to bring it to the foreground and after \nwaiting for about 5 minutes for a response, the allocated instances of char[] \njumped up to nearly 1M. I got control of the profiler when the char[] dropped to\nabout 400K, and found on allocation backtrace that SearchableEnvironment.find() \nand SearchableEnvironment.findType() combined to allocate approximately 40% of \nthese.\n\nI can\u0027t draw a lot of conclusions from this. The memory problems I have seem to \noccur \u0027naturally\u0027 in the sense I am demanding a lot of Eclipse in a controlled \nmanner. \n\nI\u0027m not sure where to go from here, if anywhere. Any suggestions?",
    "Created an attachment (id\u003d1563)\nTest.java\n",
    "Created an attachment (id\u003d1564)\ne1.txt\n",
    "Created an attachment (id\u003d1565)\ne2.txt\n",
    "I have run my project with Optimizeit using the 0416 version and F3. I have \nattached the results. I am still able to run the 0416 version without the \nOutOfMemory error. Then I run the F3 version the OutOfMemory error shows up \nduring compilation of the project. (When I set up the project and then compile) \nI have also seen a difference in starting the F3 with the Eclipse.exe and the \ncommand line:\n\njava -ms30M -mx200M -verify -cp startup.jar org.eclipse.core.launcher.Main \n-data \u003cyour workspace\u003e\n\nI do not get the OutOFMemory error when I start with the java command line. \nDoes it allocate more memory and is this the solution, or maybe a coincidence\n\nChris: it seems like the same error you are getting, and even though you write \nthis is expected with aproject at that size I still think the size of my \nproject is not that big, (it is a real world example) so I think other users \nwill run into this problem also.\n",
    "Created an attachment (id\u003d1569)\nreport from Optimizeit version 04162002\n",
    "Created an attachment (id\u003d1570)\nreport from Optimizeit version F3\n",
    "I will out of office the next 3 weeks, and will not be able to repoond to\nquestions. Do you have any news about this defect, it is preventing us from\nusing the F1 to F3 builds. Thanks",
    "The high number of WordEntry and related objects needs to be investigated \nfurther.\nI don\u0027t see a big difference in the shape of the heap dumps provided by Henrik \nbetween 20020416 and F3.  The F3 dump just has higher counts.  This could occur \nif the 20020416 dump was using an older workspace where some files had already \nbeen indexed.\n",
    "Moving to JDT Core.  The Indexer should merge the index periodically when \nindexing a large jar.\n",
    "Henrik, it would help to know the sizes of the jars you\u0027re dealing with.",
    "Hi \nThe size of the jars: 27 MB in 48 files.\n\nJust to make sure: I start from \"zero\" both when using april 16. version and \nthe F3 version. I do not get the NPE in the april 16 version.  ",
    "This might narrow it down...\nI downloaded the R2 (eclipse-SDK-2.0-win32.zip) version. I tried it on 2 \nprojests. The projects differ in size. One project has 127 files (913 KB) in 15 \nfolders, the other project has 287 files (971 KB) in 51 folders. Both project \nhar using the same external jars. The size of the jars is 27 MB in 49 files. \nThe R2 version works well on the project with the 127 files, but I get the \nreported NPE when running on the project with the 287 files.\n ",
    "Henrik, what does your normal command line look like?\n\nMine is:\nc:\\aR2.0\\eclipse\\eclipse.exe -data c:\\aR2.0\\workspace\\plugins -vm c:\\jdk1.3.1_01\n\\bin\\javaw.exe -vmargs -Xmx150mb\n\nSun\u0027s VM has a couple startup options which you can configure:\n-Xms\u003csize\u003e        set initial Java heap size\n-Xmx\u003csize\u003e        set maximum Java heap size\n\nThe VM defaults are usually not sufficient to run Eclipse.",
    "hi\n\nI start eclipse by creating a shortcut to eclipse.exe. I have seen this\nrecomended on the Eclipse web site. In the properties for the shortcup I specify\na working directory. And thats it. I will try to use the command line you\nspecified, and report back. \n\nShould\u0027t the eclipse.exe specify parameters sufficient for even bigger projects?\n\nthanks",
    "hi \n\nI have specified the -vm arguments as you proposed, and it seem to have solved \nthe problem :-)\n\nthanks\nHenrik.\n\n",
    "Just to clarify, when you were getting this before increasing the heap size, \nwas it an NPE or an OutOfMemoryError?\nIf it was an NPE, there\u0027s still another problem besides the heap being too \nsmall.\n",
    "Henrik, I believe eclipse.exe doesn\u0027t alter the default VM args but I\u0027ll check. \nIt could get tricky considering the number of possible VMs and platforms.\n\nMost users are specifying where their VM lives and as a result increase the \ndefaults.",
    "Hi\n\nThe question about OutOfMemory or NPE:\nAt the time this defect was entered on F1 ( may 29, 2002 ) I had both a NPE and\nOutOfMemory error. (See log in the defect) But it seems like the NPE has been\nsolved, so now on R2 only a OutOfMemory error occurs. And the specified vm args\nhas solved this. \n\nNow that the solution is so obvious (Allowing more memory) I think it would be a\ngood idea to make this more clear in on Readme doc. Now I can see it is there\nbut I think it would be good to say like: If you are working on projects larger\nthan (XXX) you should specify (-vmargs more memory) otherwise you can get an\nOutOfMemmory error. \n\nI also think this should be added to the FAQ list. \n\nBut thanks for your help. I\u0027m pleased that I am now able to run R2 :-)\n\nHenrik.\n",
    "Forwarding to RelEng to see if they can provide config options/pointers on the \ndownload page.",
    "Closing this bug since the actual error was fixed long ago.  Opening a new \nissue with regards to documenting eclipse arguments somewhere useful like the \nreadmes"
  ],
  "commentCreationDates": [
    "2002-05-29T14:42:43+02:00",
    "2002-05-29T16:41:27+02:00",
    "2002-05-29T17:14:45+02:00",
    "2002-05-30T09:14:25+02:00",
    "2002-05-31T18:31:20+02:00",
    "2002-06-01T01:51:49+02:00",
    "2002-06-07T03:13:27+02:00",
    "2002-06-14T14:49:23+02:00",
    "2002-06-14T15:35:37+02:00",
    "2002-06-14T22:13:23+02:00",
    "2002-06-14T23:09:58+02:00",
    "2002-06-17T08:52:54+02:00",
    "2002-06-17T15:07:34+02:00",
    "2002-06-17T22:03:23+02:00",
    "2002-06-18T14:34:35+02:00",
    "2002-06-20T13:41:19+02:00",
    "2002-06-20T13:49:27+02:00",
    "2002-06-24T05:22:04+02:00",
    "2002-06-24T05:23:11+02:00",
    "2002-06-24T05:23:31+02:00",
    "2002-06-24T05:23:42+02:00",
    "2002-06-24T13:28:27+02:00",
    "2002-06-24T13:29:35+02:00",
    "2002-06-24T13:30:04+02:00",
    "2002-06-27T10:21:32+02:00",
    "2002-07-03T17:50:13+02:00",
    "2002-07-03T17:51:47+02:00",
    "2002-07-03T17:52:18+02:00",
    "2002-07-22T10:32:00+02:00",
    "2002-07-31T08:51:54+02:00",
    "2002-07-31T17:43:25+02:00",
    "2002-07-31T22:11:00+02:00",
    "2002-08-01T10:12:29+02:00",
    "2002-08-01T16:11:27+02:00",
    "2002-08-01T18:14:32+02:00",
    "2002-08-02T09:00:22+02:00",
    "2002-09-03T20:01:25+02:00",
    "2002-11-18T16:11:49+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jface.text.contentassist.ContentAssistant.uninstall",
          "source": "ContentAssistant.java:924"
        },
        {
          "method": "org.eclipse.jface.text.source.SourceViewer.handleDispose",
          "source": "SourceViewer.java:309"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionSourceViewer.handleDispose",
          "source": "JavaCorrectionSourceViewer.java:80"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer$1.widgetDisposed",
          "source": "TextViewer.java:847"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:96"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:75"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:841"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:846"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseWidget",
          "source": "Widget.java:735"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.releaseWidget",
          "source": "Control.java:1383"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.releaseWidget",
          "source": "Scrollable.java:187"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:322"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.releaseWidget",
          "source": "Canvas.java:112"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.releaseWidget",
          "source": "Canvas.java:112"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:314"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:321"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.releaseWidget",
          "source": "Canvas.java:112"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.releaseWidget",
          "source": "Decorations.java:644"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.releaseWidget",
          "source": "Shell.java:629"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.dispose",
          "source": "Widget.java:355"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.dispose",
          "source": "Shell.java:407"
        },
        {
          "method": "org.eclipse.jface.window.Window.close",
          "source": "Window.java:220"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow.close",
          "source": "ApplicationWindow.java:188"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.hardClose",
          "source": "WorkbenchWindow.java:849"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.busyClose",
          "source": "WorkbenchWindow.java:320"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.access$3",
          "source": "WorkbenchWindow.java:309"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$2.run",
          "source": "WorkbenchWindow.java:365"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:56"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.close",
          "source": "WorkbenchWindow.java:363"
        },
        {
          "method": "org.eclipse.jface.window.WindowManager.close",
          "source": "WindowManager.java:103"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$2.run",
          "source": "Workbench.java:199"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:802"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:416"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.busyClose",
          "source": "Workbench.java:170"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$5",
          "source": "Workbench.java:148"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$3.run",
          "source": "Workbench.java:288"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:56"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.close",
          "source": "Workbench.java:286"
        },
        {
          "method": "org.eclipse.ui.internal.ExceptionHandler.closeWorkbench",
          "source": "ExceptionHandler.java:109"
        },
        {
          "method": "org.eclipse.ui.internal.ExceptionHandler.handleException",
          "source": "ExceptionHandler.java:94"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1088"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1068"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:739"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:200"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:643"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:476"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "18152",
      "date": "2002-05-29T14:42:43+02:00",
      "product": "Platform",
      "component": "Releng",
      "severity": "critical"
    }
  ],
  "groupId": "18152",
  "bugId": "18152",
  "date": "2002-05-29T14:42:43+02:00",
  "product": "Platform",
  "component": "Releng",
  "severity": "critical"
}