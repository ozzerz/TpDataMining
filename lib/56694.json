{
  "comments": [
    "since 3.0M8 typing is terribly slow, for example if I want to add\na new line, and I type \u003cEnter\u003e then the effect is that the line on which\nthe cursor was, is duplicated, then a few seconds later the new duplicated\nline will become gray (to indicate that it is selected), and then after a\nsecond the cursor will return and I can continue typing.",
    "Moving to Platform/SWT for comment. Perhaps related to changes in StyledText?\n\nRuth, were you using a Java Editor or a regular Text Editor?",
    "Try turning off all Java Editor options - I mean EVERYTHING.  Is it still \nslow?  Is typing slow in the StyledText tab of the CustomControlExample?",
    "This happens both in the java-editor and also in the regular text editor.",
    "about the StyledText tab of the CustomControlExample, I don\u0027t know where to find\nthat.",
    "CAR, can you help this guy run the CustomControlExample?",
    "Hi, Ruth.\n\nI am also curious which Linux platform you are running on.\n\nTo run the CustomControlExample, please go to this link, and follow the \ninstructions in the \"SWT Examples\" section.\nhttp://dev.eclipse.org/viewcvs/index.cgi/~checkout~/platform-swt-\nhome/SWT_Resources.html\n\nCustomControlExample is a plug-in example (it can also run stand-alone, but \nthe easiest thing for you to do is to follow the plug-in example instructions).\nAfter launching the CustomControlExample, go to the StyledText tab. This is \nthe eclipse java editor widget, without all of the java editing \"extras\". To \nmake the StyledText in this example have a few more lines, just type in \nseveral more lines, and then change the size to \"100 x 100\" and back \nto \"Preferred\". Please let us know if this widget has the same slowness that \nyou are experiencing in the java editor.",
    "NOTE:  Do not run it as a plug in.  This will defeat the purpose of the \nexperiment (ie. is typing slow in stand alone SWT or in Eclipse).",
    "Actually, both standalone and plug-in will tell us something.\n\nIf StyledText runs fast when running CustomControlExample as a plug-in, then \nit is the java editor goo that is making StyledText slow.\n\nIf StyledText runs fast when running CustomControlExample standalone, then it \nis the hooking of global accelerators for all of eclipse that is making \nStyledText slow.\n\nIf StyledText is still slow when running CustomControlExample standalone, then \nit is our changes to StyledText that are the culprit.\n\nI have just talked to the guys that made the StyledText changes, and they say \nthey have made some performance improvements since M8. They also ask if it is \nreally long lines of text that are very slow when you hit \u003cEnter\u003e.\n\nThey have not seen this kind of terribly slow behavior, but they are on fast \nmachines, running Linux Red Hat 9.\n\nReassigning this bug to FH at the request of SSQ.",
    "Ruth, are you running GTK or Motif ?\nGTK is faster than used to be, so I suppose you are running motif.\nYou also could download this week integration build (which will be build \ntomorrow morning) and give it a try, it is much faster than M8.\n\n",
    "1. the problem occurs on both gtk and eclipse.\n\n2. I have tried the custom control example as plugin, and that is much faster.\n\n3. I also tried to run this as stand-alone, but I must have done something wrong, \nfor I get: java.util.MissingResourceException: Can\u0027t find bundle for base name\nexamples_control, locale en_US\n\n4. I don\u0027t think it has to do with long lines.\n\n5. Also I must add,that it is not *always* slow, I have tried to figure out when\nexactly it is slow, but I have not yet seen a pattern.\n\n6. my linux platform: gentoo linux \nLinux i686 Intel(R) Pentium(R) 4 CPU 2.80GHz GenuineIntel GNU/Linux \n\n7. I run eclipse on a remote computer (with ssh). the information at point 6 is\nabout this remote computer.",
    "at point 1 in my previous comment I meant gtk and motif of course (not gtk and\neclipse)",
    "Did you try the new integration build (Integration Build: I20040407\n)?",
    "FH, this has nothing to do with SWT (typing in ControlExample plug-in was not \nslow).  Please move this out of SWT and reassign bug ownership (unless you \ndisagree of course).  Thanks.",
    "Tom, did you notice this (degradation also on Text editor)?\n\nRuth,\n\u003e5. Also I must add,that it is not *always* slow, I have tried to figure out when\n\u003eexactly it is slow, but I have not yet seen a pattern.\nmight it be when you have lots of stuff highlighted in text (e.g. when having\nsearch results)?",
    "No, I haven\u0027t seen any degradation in M8 or after. \n\n\u003e 7. I run eclipse on a remote computer (with ssh). the information at point 6 is\n\u003e about this remote computer.\n\nCould this make a difference? I am not sure about how good we are running on a\nremote X server - even with good bandwidth frequent updates might cause\nproblems. This could also explain why it\u0027s sometimes slow and sometimes isn\u0027t:\nthat may well depend on the delay experienced on the network.\n\nCarolyn, do we have any measurings of running eclipse remotely.",
    "Steve, please read comment 15 - does anyone run eclipse over ssh?",
    "Ask Felipe or SSQ.  They have done this in the past.",
    "I done this on the past (like one time 6 months ago), I really don\u0027t remember \nhow fast/slow it was.\nI asked to Ruth (reporter) to retested this problem with a newer version of \nEclipse (see comment12). \n\nWe disabled double buffered for gtk/carbon and we started to cache \nglyphs/metrics for the visible content of the StyledText. StyledText \nperformance is much better now (uses more memory though).\n\nIs anti-aliasing enabled ? Does it make any difference ?",
    "FH, please try again.  Be sure to distinguish between typing in a stand alone \nSWT example and Eclipse.  Thanks.",
    "I\u0027d like to add that I\u0027m seeing the same. I\u0027m running on Gentoo with 3.0M8 and\nJDK 1.4.2.04 from Sun.\n\nI\u0027ve noticed that I can type for a while with no problems then all of a sudden,\nthings will start bogging down tremendously. I will type a line and the text\nwill appear 5-7 seconds later. It usually occurs after a few minutes of usage\n(maybe 60).\n\nL",
    "Re: comment 16:\n\n\u003e\u003eSteve, please read comment 15 - does anyone run eclipse over ssh?\u003c\u003c\n\nI\u0027ve run in the cartesian product of all of the following configurations:\n\n(Eclipse, Standalone SWT)(Naked X protocol, X tunnled through SSH)\n\nInformally, here\u0027s what I\u0027ve observed:\n\n- Lightweight SWT controls tend to perform badly over X--both pure X and tunnled\nover SSH.\n\n- GC.drawText() performs terribly if antialiasing is on.  Turning antialiasing\noff using the XFT environment variable makes GC.drawText() perform beautifully.  \n\nWhen using an X terminal, you can see a huge amount of network traffic when\ndoing GC.drawText() with antialiasing on simply by watching the activity LEDs on\nthe network card.  I\u0027ve traced the code down to the Pango calls used by\n#drawText() and it seems that Pango is rendering the text into a pixmap in the X\nclient, and then sending the pixmap to the X server.  This is obviously very\ninefficient.  I have no idea if there is a way to make GTK/GDK do antialiasing\nin the X server if that is available, but this would greatly improve performance.\n\n- On my 10MBPS LAN, Eclipse 2.x and 3.0 up to M4 (haven\u0027t tried later than that)\nperforms miserably on X terminals.  By \"miserably\", I mean that typing in the\nJava editor refreshes approximately every *second*.  Other actions--picking menu\nchoices, running dialog boxes, using list boxes, etc--perform acceptably.\n\n- Occasionally I forget to commit changes I\u0027ve been working on at home (under\nLinux) to CVS at work.  In that situation, I SSH from my work machine (running\nCygwin/X on Windows 2000) back to my home machine.  At work, we have a T1.  At\nhome, I have a decent-sized ADSL connection with slightly less bandwidth than a T1.\n\nWhen I do this, Eclipse is almost entirely unusable.  Everything--menus, native\nGTK controls--everything can be seen drawing.  Similarly, SWT standalone apps\nare unusable.  However, Emacs runs fine once it starts up--which takes awhile.\n\nHowever, if i run the DXPC X protocol compressor, then both Eclipse and SWT\napplications run reasonably--except for the Java editor or my custom control\nthat uses #drawText() when antialiasing is turned on.\n\nI wish I could provide more detail, but I hope this helps.\n",
    "David, when you say you are using X terminals, what hardware specifically or\nwhat version of the X server?  When you notice Pango rendering its antialiased\ntext to a pixmap, it is likely because the X server you are talking to does not\nsupport the RENDER extension for server-side compositing, and so this is its\nonly fallback.\n\nI\u0027m specifically curious about your 10Mbps LAN cases.  What is the hardware in\nquestion there?",
    "\u003e\u003eWhen I do this, Eclipse is almost entirely unusable.  Everything--menus, native\nGTK controls--everything can be seen drawing.  Similarly, SWT standalone apps\nare unusable.  However, Emacs runs fine once it starts up--which takes awhile.\u003c\u003c\n\nI should clarify this.  The only standalone SWT application I\u0027ve tried over this\nconnection is one that heavily uses lightweight controls using #drawText().  So\nI\u0027m not saying that all of SWT performs miserably in this situation.",
    "\u003e\u003eDavid, when you say you are using X terminals, what hardware specifically or\nwhat version of the X server?\u003c\u003c\n\nI have an older machine running Mandrake Linux and XFree86 3.3.6 in a thin\nclient configuration for my main workstation/server.  (Yeah, it boots from the\nhard drive, not over the network.)\n\n\u003e\u003eWhen you notice Pango rendering its antialiased text to a pixmap, it is likely\nbecause the X server you are talking to does not support the RENDER extension\nfor server-side compositing, and so this is its only fallback.\u003c\u003c\n\nCertainly this is a possibility.  I have no idea what versions of XFree added\nsupport for XRender...\n\n\u003e\u003eI\u0027m specifically curious about your 10Mbps LAN cases.  What is the hardware in\nquestion there?\u003c\u003c\n\nMy 10Mbps LAN has 3 machines on it--the main server, the Mandrake box, and a\ncustom MP3 stereo that I built from spare parts.  All of my tests have been run\nwhen the MP3 stereo box was *not* streaming any music over the LAN, so there was\neffectively a dedicated 10MBPS connection between the server and the Mandrake box.\n\nThe two machines are connected via a hub, not a switch.\n\n(Although I have several switches--for example, built into my firewall--I\u0027ve\nnoticed that connection setup/teardown is *much* slower through a switch than\nthrough the hub.  Since the next/prev buttons my MP3 stereo client rely on low\nlatencies during TCP connection setup/teardown, I\u0027ve stuck with the hub.)\n\nThe server is using an Intel EtherExpress Pro card.\n\nThe Mandrake box is a Pentium 2 266Mhz laptop and is using an Apollo 10/100\nPCMCIA card.\n\nI have no idea what brand the hub is, but it seems to perform decently.\n\n",
    "\u003e\u003eI have an older machine running Mandrake Linux and XFree86 3.3.6 in a thin\nclient configuration for my main workstation/server.\u003c\u003c\n\nThe older box is the thin client, not the server.  ;-)",
    "RENDER support was added in X 4.0.2, so for any X 3.3.6 client you will have to\nrender text to a pixmap.  Also, remember that the X server does actually do\nwork, so having such a slow machine as your client won\u0027t help. :)",
    "\u003e\u003eso having such a slow machine as your client won\u0027t help.\u003c\u003c\n\nHey!  In its day, *that* machine rendered 3d scene graphs using Mesa!  (Simple\nones, at only a few frames per second).  ;-)\n\nSeriously though, that machine has always had decent accelerated 2d graphics,\nespecially under Linux.  And OpenOffice and Mozilla currently perform fine on it\nin X terminal mode (haven\u0027t tried the local configuration).\n\n",
    "looks more like a general platform ui/swt than an editor problem",
    "I don\u0027t think this is a general gtk or ssh problem, for I have returned to using\neclipse3.0M7 which doesn\u0027t have any of these problems at all.",
    "I ran I20040420 over ssh to a remote machine.  The X client was a P3-733mhz and\nthe appliaction was launched from a P4-2.5ghz over a fast LAN.  Performance\nseemed fine and I did not notice any major slowdowns.  Definitely not as bad as\nwhat Ruth describes.\n\nI did see the behavior of hit enter, see line doubled, then see line cleared. \nThis occured only on the first time I hit enter, the rest were snappy.  It was\nabout a second before the line was cleared.  Maybe this might be a worthwhile\ntest case to watch the X traffic of and see if we\u0027re making too many requests ?",
    "I attempted to measure the amount of X traffic between M7 and M8.  The goal was\nto determine if there was a significant increase in X calls between the two\nversions, and also to look at the amount of data.  I did not look at the\ndifference in the types of requests being made, simply how many events and\nrequests occured, and how large they were.  I used the X protocol monitor \u0027xmon\u0027\nwith patches from Debian.  The test was performed on a RH9 machine, Gtk+ 2.2.1.\n\nTest case:\n\nOn both eclipse M7 and M8:\n1. Create a fresh workspace.\n2. Create a new Java project.\n3. Create a new Java class, it is initialized to default text.\n\nThen I ran each in \u0027xmon\u0027, enabling viewing of requests, events, and errors.  In\neach I did the following:\n\n1. Start eclipse.\n2. The editor for our new java class is active, scroll down to the line with the\nclass declaration.\n3. Hit \u0027END\u0027 to go to the end of the line.\n4. Hit enter to start a new line.\n5. Go to file -\u003e quit.\n6. Hit deselect all and OK when the \u0027save changed files\u0027 dialog appears.\n7. Eclipse exits.\n\nEach test took about 30 seconds to run.  Here are the request and event counts:\n\n1. X requests: 20751 with M7, 19894 with M8\n2. X events: 2965 with M7, 2993 with M8\n\nSo I don\u0027t think we\u0027re seeing a large increase in the number of requests made. \nI think this implies that there is not a signifiacnt increase in the number of X\nrequests between the two versions.\n\nHere is the byte counts:\n\n1. Client -\u003e Server:  1509476 bytes with M7, 4845348 with M8\n2. Server -\u003e Client:  214500 bytes with M7, 224744 with M8\n\nSo we\u0027re sending more than 3 times as much data to the X server.  This is likely\nwhere the problem is.  We\u0027re seemingly not doing a lot more work, just sending a\nlot more data.  To move forward, I will try and look at which X requests are\nsending a lot of data, and see where they are from.  Note that I\u0027m also not\ndistinguishing between startup cost and cost of running, these numbers all\ninclude the startup time when we have to upload our gradient images and all\nthat.  It may be worthwhile to look at X traffic just from the middle of an\nactive session.",
    "Created an attachment (id\u003d10066)\nxmon log from Eclipse M7\n",
    "Created an attachment (id\u003d10067)\nxmon log from Eclipse M8\n",
    "Created an attachment (id\u003d10367)\nWire images from M7, M7+newlook jars, and M8\n\nI extracted the raw images being sent over the wire between M7, M7+newlook jar\nfiles, and M8.\tAttached is a set of images over about 10k from each run.  With\nboth M8 and M7 with the new look jar files, we\u0027re uploading some really large\ngradient images.  All of the gradient images for the tabs in M7 were much\nsmaller.  M8 sends almost twice as much image data over M7 using my (admittedly\nover-simplistic) test.\n\nIf there is a way to cut back on the number of gradient images sent to the\nserver, or just make them smaller, it may be worth it for remote users of\neclipse.",
    "BB to build a patch that disables gradient in Eclipse.  Once this patch is \ninstalled, we can then determine whether too much data over the wire is \nresponsible for the slow down you are seeing.",
    "Created an attachment (id\u003d10370)\nPatch to disable gradients\n\nRuth, can you try this patch and see if it solves your speed problems?\n\nThis one-line patch simply disables gradients and decreases eclipse\u0027s X traffic\na lot.\tIt makes some text difficult to read but if this solves your speed\nissue it would help clarify where the problem is.",
    "I don\u0027t know how to apply this patch, I suppose I would need the source-code from\neclipse for that. Would it be possible for you to compile this and send me the\njar-file, so that I put that in the plugins-directory (I suppose that\u0027s where \nit should go in the end)?",
    "Created an attachment (id\u003d10394)\nswt.jar with all gradients disabled\n\nHere is a copy of swt.jar for eclipse-M8 which has gradients disabled.\tPut\nthis file in the plugins/org.eclipse.swt.gtk_3.0.0/ws/gtk directory, first\nmaking a backup of the swt.jar file that\u0027s already there.  I think this jar\nfile will only work with M8.",
    "Created an attachment (id\u003d10437)\nerror log\n\nerror log when I use the swt.jar",
    "When I use this swt.jar I get an error, I\u0027ve attached the errorlog.\nBefore I tested this jar, I installed 3.0M8 again, and I looked if the typing was\nstill this slow, I noticed that it is particularly bad if I type in a file that\nI just opened. \nSo for instance, if I have two tabs, one for foo.java and one for bar.java\nI type in foo.java, first it is slow, but after one line it gets better. Then I \nclick on the tab for bar.java, and again the first line is slow, but it gets better.\nI don\u0027t know if this information helps, nor if this is *always* like I just\ndescribed.\n",
    "The error indicates that the jar file cannot be opened.  Is there a permissions\nproblem, or was the download somehow corrupted?  I downloaded it here and it\nseems to be OK...",
    "with this no-gradient swt.jar eclipse is _lighting_ fast :-) even over remote\nX11 sessions. I hope there will be also a way to get this kind of swt.jar for\nfuther versions of eclipse :-) [maybe separate download for it on main download\npage?]",
    "Indeed I got a corrupt swt.jar when I downloaded it with mozilla. I\u0027ve now got the\nswt.jar with wget, and this worked.\nAlso it does indeed solve the problem. It works perfect now. ",
    "Moving this bug to SWT.  The question is whether we are sending more data than \nis necessary?  Or are there some other ways to optimize this scenario.",
    "Interesting that gradient should affect typing.  Are we drawing it more than \nwe should?  VI to investigate with SSQ and SN as necessary.  Both Ruth and \nAdam confirm that Eclipse is faster.\n\nRuth and/or Adam - Is typing really faster or does Eclipse just feel faster?",
    "Yes it\u0027s really much faster. Please see the first description: it really took\nseconds for the screen to update itself after I hit enter to create a new line.\nAnd this behaviour is probably worse when I just opened a new file (see\ncomment 40)",
    "I replaced the swt.jar file and after working a few minutes with it, eclipse\ncrashed. Ater I tried to restart it, I kept getting this error:\n\n!SESSION May 11, 2004 09:41:23.115 ---------------------------------------------\njava.version\u003d1.4.2_04\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\n!ENTRY org.eclipse.osgi May 11, 2004 09:41:23.116\n!MESSAGE Bundle\nreference:file:/usr/local/eclipse/plugins/org.eclipse.jdt.debug_3.0.0/ [29] was\nnot resolved\n!ENTRY org.eclipse.osgi May 11, 2004 09:41:23.119\n!MESSAGE Bundle\nreference:file:/usr/local/eclipse/plugins/org.eclipse.debug.ui_3.0.0/ [57] was\nnot resolved\n!ENTRY org.eclipse.osgi May 11, 2004 09:41:28.644\n!MESSAGE Application error\n!STACK 1\njava.lang.NoClassDefFoundError\n\tat\norg.eclipse.ui.internal.WorkbenchConfigurer.declareImage(WorkbenchConfigurer.java:92)\n\tat\norg.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.declareWorkbenchImage(IDEWorkbenchAdvisor.java:942)\n\tat\norg.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.declareWorkbenchImages(IDEWorkbenchAdvisor.java:860)\n\tat\norg.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.initialize(IDEWorkbenchAdvisor.java:182)\n\tat\norg.eclipse.ui.application.WorkbenchAdvisor.basicInitialize(WorkbenchAdvisor.java:156)\n\tat org.eclipse.ui.internal.Workbench.init(Workbench.java:787)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1513)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:277)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:239)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:267)\n\tat org.eclipse.core.launcher.Main.run(Main.java:692)\n\tat org.eclipse.core.launcher.Main.main(Main.java:676)\n\n\nNow Eclipse is unusable. I suppose deleting the workspace should fix it but if\nsomeone has a better idea befor I do this, please speak up! :-)\n\nL",
    "I need to understand this better.  When you type a key it is not causing the \ngradient to be drawn.  What we believe is happening is that when you first \nopen an editor (or you first switch the focus to an editor from either a view \nor another application) this causes the gradient to be drawn.  If you start \ntyping while the gradient is still being drawn, the keys typed will not \nactually be processed by the OS until after the painting of the screen has \ncompleted.\n\nTo confirm that this theory is correct, Ruth can you please do the following.\n\n1) Go back to the original swt.jar that was included in 3.0 M8\n2) Open an editor and give it focus by clicking in it but do not type any keys\n3) Wait for 5 minutes without doing anything on that machine\n4) Start typing in the editor\n\nWhen you type in the editor in step 4, is typing slow or fast?\n\n5) Now click on a view and click back on the editor (this causes a gradient \ncolour change)\n6) Immediately start typing in the editor\n\nIs typing now slow or fast?",
    "*** Bug 59014 has been marked as a duplicate of this bug. ***",
    "okay, I\u0027ve done these tests with the original swt.jar\nFirst of all: it matters a lot if these files have been saved before or not. For\nif they have pending changes a * is drawn in the tabheader and I think that that\nalso causes the gradient to repaint.\n\nSo I open a view files, type something in each of them, and then start the \nsequence of test as proposed.\nAt point 4: it still takes quite a while before you actually see where you\nclicked, and the cursor starts blinking, but then after that the typing is fast.\nAt point 6: the same behaviour as at point 4.\n\nIf I do the same tests with files that aren\u0027t edited yet, then both 4 and 6 \ntake as slow as described earlier. \nI noticed in the meantime that there is also some flickering in the \npackage explorer if I save a file (the cvs-attributes disappear and appear again)\n",
    "Another data-point:\n\nUsing a 768/1.5M connection, the DXPC X protocol compressor, and the CygWin X\nserver (which is a recent version of X), Eclipse is *almost* usable using the\nno-gradient version of SWT.jar.\n\nI can still easily out-type Eclipse in the Java editor, but everything else is\nnow fast enough to be barely usable in this configuration.\n\nBy comparison, OpenOffice.org nearly keeps up with my keyboard autorepeat, which\nis set as fast as possible, and *easily* keeps up with my typing speed.\n\nOf course, both applications take forever to come up, but once up,\nOpenOffice.org is very usable for anything I want to do in it, but Eclipse (with\nthe gradient-free SWT) is only usable for things that don\u0027t involve typing Java\ncode.\n",
    "David, see comment #10.  Can you try the StyledText in the \nCustomControlExample?  It was \"much faster\" for Ruth.  Next try turning off \nall of the JavaEditor features in Eclipse.  Does typing get faster?",
    "Ruth,\n\nIn the latest integration build (I20040512) I have reduced the number of times \nthe gradient is drawn to the bare minimum.  A gradient is still being drawn \nbut much less frequently and the size of the area being filled in is much \nsmaller.  Can you please try this latest integration build and see if the \nperformance is acceptable?  Thanks.",
    "Steve,\n\nI didn\u0027t get to the StyledText test you suggested last night (had a honey-do\nlist that kept me up until almost midnight), but one thing I notice when using\nEclipse running at home, but displaying here is that every character in the Java\neditor that is not drawn black is drawn at least twice.  ie: I can see it appear\nin black, and then its color changes to the keyword color, quoted string color,\netc.  The black characters might be doing the same thing too, but I couldn\u0027t\nverify that visually.\n\nI\u0027ll definitely try to do some testing with StyledText today or tomorrow and see\nif I can pinpoint any issues with it or with how it is being used in the Java\neditor.\n",
    "I tested I20040506 versus I200405111600 in terms of image data sent using the\nsteps I described in comment #31.  I recorded a decrease of 33% in the amount of\nimage data sent: 3844k down to 2604k.  This decrease is especially significant\nconsidering that this includes the splash logo, all icons, and Gtk+\u0027s fancy\nanimated cursors.",
    "I tested I200405111600, and it is indeed much better. Great!",
    "I have got this problem on Eclipse 3.0M8 for Windows.\nI am using Windows XP SP1 but I think it is the same origin in source code.\n\nIs there already a patch for Windows (like this for Linux)?\n\nThanx in advance.\n\np.s.: I have made an update for this linux bug because I have not found it for\nWindows. If there is already a bug report for Windows please excuse me.",
    "Ruth, can we close this bug report?",
    "PhoenixBB, the fix is X specific.  Sorry.",
    "yes, and thanks for all the good work.",
    "Fixed \u003e 20040513"
  ],
  "commentCreationDates": [
    "2004-03-30T07:51:27+02:00",
    "2004-04-02T20:49:12+02:00",
    "2004-04-02T23:57:07+02:00",
    "2004-04-05T08:45:10+02:00",
    "2004-04-05T08:48:36+02:00",
    "2004-04-05T17:06:10+02:00",
    "2004-04-05T17:49:21+02:00",
    "2004-04-05T18:59:51+02:00",
    "2004-04-05T21:25:07+02:00",
    "2004-04-05T22:46:42+02:00",
    "2004-04-06T08:55:35+02:00",
    "2004-04-07T08:59:00+02:00",
    "2004-04-07T17:16:40+02:00",
    "2004-04-14T19:26:38+02:00",
    "2004-04-15T09:41:52+02:00",
    "2004-04-15T10:08:45+02:00",
    "2004-04-15T20:10:10+02:00",
    "2004-04-15T22:44:29+02:00",
    "2004-04-16T17:53:43+02:00",
    "2004-04-16T18:29:09+02:00",
    "2004-04-20T16:05:01+02:00",
    "2004-04-20T20:49:25+02:00",
    "2004-04-20T20:57:39+02:00",
    "2004-04-20T20:58:49+02:00",
    "2004-04-20T21:25:27+02:00",
    "2004-04-20T21:27:07+02:00",
    "2004-04-20T21:48:02+02:00",
    "2004-04-20T22:07:05+02:00",
    "2004-04-21T09:55:26+02:00",
    "2004-04-21T10:00:11+02:00",
    "2004-04-21T17:06:26+02:00",
    "2004-04-28T18:21:09+02:00",
    "2004-04-28T18:21:50+02:00",
    "2004-04-28T18:22:10+02:00",
    "2004-05-06T22:14:17+02:00",
    "2004-05-06T22:40:10+02:00",
    "2004-05-06T22:55:43+02:00",
    "2004-05-07T09:01:43+02:00",
    "2004-05-07T16:54:37+02:00",
    "2004-05-10T09:14:50+02:00",
    "2004-05-10T09:19:45+02:00",
    "2004-05-10T16:52:06+02:00",
    "2004-05-11T07:54:33+02:00",
    "2004-05-11T09:02:01+02:00",
    "2004-05-11T15:11:11+02:00",
    "2004-05-11T15:30:13+02:00",
    "2004-05-11T15:36:46+02:00",
    "2004-05-11T16:00:27+02:00",
    "2004-05-11T16:21:36+02:00",
    "2004-05-11T16:34:21+02:00",
    "2004-05-11T16:56:43+02:00",
    "2004-05-11T17:47:22+02:00",
    "2004-05-11T18:06:52+02:00",
    "2004-05-12T15:51:19+02:00",
    "2004-05-12T16:42:10+02:00",
    "2004-05-12T23:24:15+02:00",
    "2004-05-13T09:13:58+02:00",
    "2004-05-13T14:29:59+02:00",
    "2004-05-13T15:22:50+02:00",
    "2004-05-13T15:24:05+02:00",
    "2004-05-13T15:25:14+02:00",
    "2004-05-13T15:33:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.declareImage",
          "source": "WorkbenchConfigurer.java:92"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.declareWorkbenchImage",
          "source": "IDEWorkbenchAdvisor.java:942"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.declareWorkbenchImages",
          "source": "IDEWorkbenchAdvisor.java:860"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.initialize",
          "source": "IDEWorkbenchAdvisor.java:182"
        },
        {
          "method": "org.eclipse.ui.application.WorkbenchAdvisor.basicInitialize",
          "source": "WorkbenchAdvisor.java:156"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:787"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1513"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:257"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:277"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:239"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:267"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:692"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:676"
        }
      ],
      "number": 0,
      "commentIndex": 47,
      "bugId": "56694",
      "date": "2004-05-11T16:00:27+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "56694",
  "bugId": "56694",
  "date": "2004-03-30T07:51:27+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}