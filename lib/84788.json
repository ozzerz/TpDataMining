{
  "comments": [
    "I\u0027m using the RemoteComponentSkeleton to send tracing data (locally) to the\nworkbench. When my agent calls RCS.deregister() or RCS.finalize() it produces\nfollowing exception in the Workbench:\n\norg.xml.sax.SAXParseException: Document root element is missing.\n\tat org.apache.crimson.parser.Parser2.fatal(Parser2.java:3376)\n\tat org.apache.crimson.parser.Parser2.fatal(Parser2.java:3364)\n\tat org.apache.crimson.parser.Parser2.parseInternal(Parser2.java:668)\n\tat org.apache.crimson.parser.Parser2.parse(Parser2.java:337)\n\tat org.apache.crimson.parser.XMLReaderImpl.parse(XMLReaderImpl.java:448)\n\tat javax.xml.parsers.SAXParser.parse(SAXParser.java:345)\n\tat\norg.eclipse.hyades.loaders.util.SAXFragmentHandler.parse(SAXFragmentHandler.java)\n\tat\norg.eclipse.hyades.loaders.util.SAXFragmentHandler$1.run(SAXFragmentHandler.java)\n\n\n\nSorry, but i\u0027m in a hurry, so if you have any questions, please ask me.\n\nHolger",
    "Holger, would you please provide the trace data you are collecting.  I am\nwondering if the data is valid with respect to Trace XML format.",
    "Another suggestion is to try using Xerces XML parser instead.  It seems from the\nexception that you used the Crimson XML parser.  See if the error still occurs\nafter the switch to Xerces.  Please let us know.",
    "Holger,\n\nAre you sending the \u003cTRACE\u003e element as the first event ? \nIf you send trace event they have to be encapsulated in a \u003cTRACE\u003e\u003c/TRACE\u003e root\nelement.\nDo you get any data in the model, is there any event handled correctly or it\nfails on the first one ?",
    "Created an attachment (id\u003d17950)\nA log file with messages send by two processes generating the described\nexception in xml parser.\n\nThe message log for question #1.",
    "(From update of attachment 17950)\nAs the log file shows, i do not send a \u003cTRACE\u003e fragment. I don\u0027t know, if the\nRemoteComponentSkelton JNI-Implementatin does!? \n",
    "I don\u0027t know how to change the parser used by the hyades plug-in.",
    "You are right, only in import profile file case you need to have \u003cTRACE\u003e as the\nroot event. For live profiling and logging agents and also for import log files\ncase we send the root element (\u003cTRACE\u003e, \u003cCommonBaseEvents\u003e) from the wizard or\nXMLTraceDataProcessor.\n\nIf I understand correctly you have a logging agent that sends trace events, I\u0027m\nnot sure how do you connect to the logging agent, are you using the profile\nattach lauch configuration, can you provide more info in this area ?\n\n\n\n\n\n\n",
    "Yes, i\u0027m using the dialog \"profile.. --\u003e attach java process\" to connect to the\nagent.\n",
    "Please could you provide a simple testcase that we can debug and see where the\nactual problem is ?\n\nBasically I want to see what is the call stack when XMLLoader.loadEvent() is\nhit, so please add the following lines:\n\nLoadersUtils.log(\"\u003e\u003e\u003e\\n\"+LoadersUtils.makeString(buffer,0,length));\nLoadersUtils.log(new Throwable());\nLoadersUtils.log(\"\u003c\u003c\u003c\");\n\nat the top of XMLLoader.loadEvent(byte[] buffer, int length, boolean\nloadToModel) method and attach the Console output.\n",
    "Assigning to a valid iteration\nAll defects should be addressed in the 3.3 timeframe",
    "Created an attachment (id\u003d19935)\nExample application, which produces this error.\n\nHi,\n\nsorry about my late reply.\nI attached an example, which produces this error.\nJust run it, \nattach to java process for profiling, \nactivate monitoring\nand wait 5 seconds.\n\nI hope this will help you.\n\nHolger",
    "Holger,\n\nI tried with the latest code from TPTP 3.3 and your testcase seems to work fine.\n\nIf this happens only in Hyades 3.2, currently we don\u0027t have any vehicle to\ncheckin any fix in 3.2 (3.3 is the fix pack for 3.2) so please upgrade to the\nHyades 3.3 (TPPT 3.3) or TPTP 4.0.\n\nI will tag this as worksforme, as it actually works in 3.3."
  ],
  "commentCreationDates": [
    "2005-02-09T15:44:29+01:00",
    "2005-02-11T20:27:36+01:00",
    "2005-02-11T20:43:51+01:00",
    "2005-02-14T20:06:09+01:00",
    "2005-02-15T15:56:53+01:00",
    "2005-02-15T16:00:37+01:00",
    "2005-02-15T16:04:24+01:00",
    "2005-02-21T16:49:17+01:00",
    "2005-02-22T07:56:47+01:00",
    "2005-03-09T17:00:01+01:00",
    "2005-04-06T04:35:45+02:00",
    "2005-04-15T13:57:43+02:00",
    "2005-04-22T22:23:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.xml.sax.SAXParseException",
      "message": "Document root element is missing.",
      "elements": [
        {
          "method": "org.apache.crimson.parser.Parser2.fatal",
          "source": "Parser2.java:3376"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.fatal",
          "source": "Parser2.java:3364"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.parseInternal",
          "source": "Parser2.java:668"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.parse",
          "source": "Parser2.java:337"
        },
        {
          "method": "org.apache.crimson.parser.XMLReaderImpl.parse",
          "source": "XMLReaderImpl.java:448"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "SAXParser.java:345"
        },
        {
          "method": "org.eclipse.hyades.loaders.util.SAXFragmentHandler.parse",
          "source": "SAXFragmentHandler.java"
        },
        {
          "method": "org.eclipse.hyades.loaders.util.SAXFragmentHandler$1.run",
          "source": "SAXFragmentHandler.java"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "84788",
      "date": "2005-02-09T15:44:29+01:00",
      "product": "Hyades",
      "component": "DataCollection\u0026Control",
      "severity": "normal"
    }
  ],
  "groupId": "84788",
  "bugId": "84788",
  "date": "2005-02-09T15:44:29+01:00",
  "product": "Hyades",
  "component": "DataCollection\u0026Control",
  "severity": "normal"
}