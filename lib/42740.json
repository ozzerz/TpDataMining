{
  "comments": [
    "This error occurs in both 1.1.0 and in the head of CVS as of 9/8/03. The \ncompiler crash output from the CVS head version is at the end. It may be \nrelated to 42739, but they may be distinct problems.\n\nSample source:\n/*\n * Created on Sep 8, 2003\n *\n * Copyright (c) 2003 New Aspects of Security. All Rights Reserved.\n */\naspect Library {\n    public pointcut executionsThrowingChecked() : \n        execution(* *(..) throws (Exception+ \u0026\u0026 !RuntimeException));\n}\n\npublic aspect SampleExceptionHandling {\n    public pointcut scope() : within(org.atrack.model..*);\n    \n    public pointcut executionsThrowingChecked() : \n        Library.executionsThrowingChecked() \u0026\u0026 scope();\n\n    declare error : executionsThrowingChecked(): \n        \"no checked exceptions\";\n}\n\nsample compile:\nC:\\eclipse\\workspace\\atrack\u003eajc src\\SampleExceptionHandling.java\njava.lang.Exception: Stack trace\n        at java.lang.Thread.dumpStack(Thread.java:1071)\n        at org.aspectj.weaver.patterns.ReferencePointcut.concretize1\n(ReferencePo\nintcut.java:215)\n        at org.aspectj.weaver.patterns.AndPointcut.concretize1\n(AndPointcut.java:\n88)\n        at org.aspectj.weaver.patterns.ReferencePointcut.concretize1\n(ReferencePo\nintcut.java:272)\n        at org.aspectj.weaver.patterns.AndPointcut.concretize1\n(AndPointcut.java:\n88)\n        at org.aspectj.weaver.patterns.ReferencePointcut.concretize1\n(ReferencePo\nintcut.java:272)\n        at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:127)\n        at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:120)\n        at org.aspectj.weaver.Checker.concretize(Checker.java:37)\n        at org.aspectj.weaver.CrosscuttingMembers.addShadowMunger\n(CrosscuttingMe\nmbers.java:78)\n        at org.aspectj.weaver.CrosscuttingMembers.addDeclare\n(CrosscuttingMembers\n.java:102)\n        at org.aspectj.weaver.CrosscuttingMembers.addDeclares\n(CrosscuttingMember\ns.java:92)\n        at org.aspectj.weaver.ResolvedTypeX.collectCrosscuttingMembers\n(ResolvedT\nypeX.java:332)\n        at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect\n(Crosscut\ntingMembersSet.java:50)\n        at \norg.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.buildInterTy\npeAndPerClause(AspectDeclaration.java:754)\n        at \norg.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.buildIn\nterTypeAndPerClause(AjLookupEnvironment.java:124)\n        at \norg.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet\neTypeBindings(AjLookupEnvironment.java:91)\n        at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile\n(Compiler.ja\nva:310)\n        at org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:324)\n\n        at \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat\nion(AjBuildManager.java:373)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuild\nManager.java:125)\n        at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBu\nildManager.java:70)\n        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)\n        at org.aspectj.tools.ajc.Main.run(Main.java:217)\n        at org.aspectj.tools.ajc.Main.runMain(Main.java:155)\n        at org.aspectj.tools.ajc.Main.main(Main.java:72)\nC:\\eclipse\\workspace\\atrack\\src\\SampleExceptionHandling.java:15 circular \npointcu\nt declaration involving: executionsThrowingChecked()\n\n1 error",
    "If you change the pointcut in the library aspect to have a different name, \nthen the compiler fails to see that pointcut at all:\n\nC:\\eclipse\\workspace\\atrack\u003eajc src\\SampleExceptionHandling.java\nC:\\eclipse\\workspace\\atrack\\src\\SampleExceptionHandling.java:15 can\u0027t find \npoint\ncut \u0027execs\u0027 on SampleExceptionHandling\n\n1 error\n\n/*\n * Created on Sep 8, 2003\n *\n * Copyright (c) 2003 New Aspects of Security. All Rights Reserved.\n */\naspect Library {\n    public pointcut execs() : \n        execution(* *(..) throws (Exception+ \u0026\u0026 !RuntimeException));\n}\n\npublic aspect SampleExceptionHandling {\n    public pointcut scope() : within(org.atrack.model..*);\n    \n    public pointcut executionsThrowingChecked() : \n        Library.execs() \u0026\u0026 scope();\n\n    declare error : executionsThrowingChecked(): \n        \"no checked exceptions\";\n}",
    "An even more minimal test case:\n\n/*\n * Created on Sep 8, 2003\n *\n * Copyright (c) 2003 New Aspects of Security. All Rights Reserved.\n */\naspect Library {\n    public pointcut execs(): within(*);\n}\n\npublic aspect SampleExceptionHandling {\n    public pointcut executionsThrowingChecked() : Library.execs();\n\n    declare error : executionsThrowingChecked(): \n        \"no checked exceptions\";\n}\n\noutput:\nC:\\eclipse\\workspace\\atrack\u003eajc src\\SampleExceptionHandling.java\nC:\\eclipse\\workspace\\atrack\\src\\SampleExceptionHandling.java:11 can\u0027t find \npoint\ncut \u0027execs\u0027 on SampleExceptionHandling\n\n1 error",
    "Hi Ron.  I\u0027d like to include the test cases you\u0027ve submitted here and for other\nbug reports in the AspectJ test suite; however, I\u0027m uncomfortable doing that\nwith the copyright all rights reserved notice that you\u0027ve put on them.  Can you\nplease resubmit your test cases either with no copyright or with the full\neclipse CPL header?  Thanks.",
    "Contributing the sources per the CPL:\n\n/** @author Ron Bodkin */\naspect Library {\n    public pointcut executionsThrowingChecked() : \n        execution(* *(..) throws (Exception+ \u0026\u0026 !RuntimeException));\n}\n\n/** @author Ron Bodkin */\npublic aspect SampleExceptionHandling {\n    public pointcut scope() : within(org.atrack.model..*);\n    \n    public pointcut executionsThrowingChecked() : \n        Library.executionsThrowingChecked() \u0026\u0026 scope();\n\n    declare error : executionsThrowingChecked(): \n        \"no checked exceptions\";\n}\n\n---\n\n/** @author Ron Bodkin */\naspect Library {\n    public pointcut execs(): within(*);\n}\n\n/** @author Ron Bodkin */\npublic aspect SampleExceptionHandling {\n    public pointcut executionsThrowingChecked() : Library.execs();\n\n    declare error : executionsThrowingChecked(): \n        \"no checked exceptions\";\n}\n\n",
    "the test provided below is now in the tree under bugs/declareBinding\nthis bug is also fixed in cvs head",
    "fixing target milestone"
  ],
  "commentCreationDates": [
    "2003-09-09T04:47:35+02:00",
    "2003-09-09T04:50:57+02:00",
    "2003-09-09T04:54:24+02:00",
    "2003-09-09T19:05:15+02:00",
    "2003-09-09T19:10:17+02:00",
    "2003-09-10T02:36:31+02:00",
    "2003-09-10T02:39:45+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "Stack trace",
      "elements": [
        {
          "method": "java.lang.Thread.dumpStack",
          "source": "Thread.java:1071"
        },
        {
          "method": "org.aspectj.weaver.patterns.ReferencePointcut.concretize1",
          "source": "ReferencePo intcut.java:215"
        },
        {
          "method": "org.aspectj.weaver.patterns.AndPointcut.concretize1",
          "source": "AndPointcut.java: 88"
        },
        {
          "method": "org.aspectj.weaver.patterns.ReferencePointcut.concretize1",
          "source": "ReferencePo intcut.java:272"
        },
        {
          "method": "org.aspectj.weaver.patterns.AndPointcut.concretize1",
          "source": "AndPointcut.java: 88"
        },
        {
          "method": "org.aspectj.weaver.patterns.ReferencePointcut.concretize1",
          "source": "ReferencePo intcut.java:272"
        },
        {
          "method": "org.aspectj.weaver.patterns.Pointcut.concretize",
          "source": "Pointcut.java:127"
        },
        {
          "method": "org.aspectj.weaver.patterns.Pointcut.concretize",
          "source": "Pointcut.java:120"
        },
        {
          "method": "org.aspectj.weaver.Checker.concretize",
          "source": "Checker.java:37"
        },
        {
          "method": "org.aspectj.weaver.CrosscuttingMembers.addShadowMunger",
          "source": "CrosscuttingMe mbers.java:78"
        },
        {
          "method": "org.aspectj.weaver.CrosscuttingMembers.addDeclare",
          "source": "CrosscuttingMembers .java:102"
        },
        {
          "method": "org.aspectj.weaver.CrosscuttingMembers.addDeclares",
          "source": "CrosscuttingMember s.java:92"
        },
        {
          "method": "org.aspectj.weaver.ResolvedTypeX.collectCrosscuttingMembers",
          "source": "ResolvedT ypeX.java:332"
        },
        {
          "method": "org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect",
          "source": "Crosscut tingMembersSet.java:50"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.buildInterTypeAndPerClause",
          "source": "AspectDeclaration.java:754"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.buildInterTypeAndPerClause",
          "source": "AjLookupEnvironment.java:124"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings",
          "source": "AjLookupEnvironment.java:91"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.beginToCompile",
          "source": "Compiler.ja va:310"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:324"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:373"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuild Manager.java:125"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBu ildManager.java:70"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:99"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:53"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:217"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:155"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:72"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "42740",
      "date": "2003-09-09T04:47:35+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "42740",
  "bugId": "42740",
  "date": "2003-09-09T04:47:35+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}