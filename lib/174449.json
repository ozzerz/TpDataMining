{
  "comments": [
    "Hi,\n\nMaybe my title is wrong... but i don\u0027t know very well how to say it...\n\nBelow is the problem reported by the form emails in the aspectj list:\n\nI\u0027m having the following error in something that i hadnt before, this is\nhappening for the broadcast pointcut. What means that error?\n\n\nException in thread \"main\" java.lang.VerifyError: (class:\nsection3/raytracer/JGFRayTracerBench, method:\nsetScene_aroundBody1$advice signature:\n(Lsection3/raytracer/JGFRayTracerBench;Lsection3/raytracer/JGFRayTracerBench;Lsection3/raytracer/Scene;Lsection3/raytracer/Replicate;Ljava/lang/Object;Lorg/aspect\nat\nsection3.JGFRayTracerBenchSizeA.init$_aroundBody0(JGFRayTracerBenchSizeA.java)\nat\nsection3.JGFRayTracerBenchSizeA.init$_aroundBody1$advice(JGFRayTracerBenchSizeA.java:128)\nat\nsection3.JGFRayTracerBenchSizeA.main(JGFRayTracerBenchSizeA.java:30)\n\npublic abstract aspect Replicate\u003cT\u003e {\n\nprotected pointcut broadcast(T servant);\n\nvoid around(T servant): broadcast(servant) {\n\nproceed(servant);\n}\n}\n\npublic aspect ReplicateConcrete extends Replicate\u003cJGFRayTracerBench\u003e {\n\n\nprotected pointcut broadcast(JGFRayTracerBench servant) : call(*\n*.setScene(..)) \u0026\u0026 target(servant);\n\n}\n\n\nAnswer from the list:\n\nVerify Errors are typically bugs in the AspectJ weaver - please try\ncompiling with -XnoInline to see if that helps your situation?\n\nMy answer:\n\nIt seems even worst:\n\nException in thread \"main\" java.lang.VerifyError: (class:\nsection3/JGFRayTracerBenchSizeA, method: main signature:\n([Ljava/lang/String;)V) Incompatible object argument for function call\n\nAnother answer:\n\nIt is definetly an AspectJ bug that you should raise.  In my copy of\nyour scenario I was able to work around it with -XnoInline, but I\nguess that doesnt seem to work for you.  The problem is a missing cast\nin the generated code that needs to be included because the erasure of\nyour type variable is Object for the generic aspect.",
    "Self contained test program:\n---8\u003c-----\nabstract aspect Replicate\u003cT\u003e {\n  protected pointcut broadcast(T servant);\n\n  void around(T servant): broadcast(servant) {\n    proceed(servant);\n  }\n}\n\naspect ReplicateConcrete extends Replicate\u003cFoo\u003e {\n  protected pointcut broadcast(Foo servant) : call(* *.setScene(..)) \u0026\u0026 target(servant);\n}\n\npublic class Foo {\n  public static void main(String []argv) {\n    new Foo().setScene();\n  }\n  public void setScene() {}\n}\n---8\u003c-----\n\nThe advice is applied at the call to setScene() - at that point the call is on something of type Foo. The generic aspect talks in terms of T but that is substituted with Foo in the concrete aspect.\n\nIn the bytecode, the Foo.main() method:\n\n   0:   new     #2; //class Foo\n   3:   dup\n   4:   invokespecial   #17; //Method \"\u003cinit\u003e\":()V\n   7:   astore_1\n   8:   aload_1\n   9:   invokestatic    #39; //Method ReplicateConcrete.aspectOf:()LReplicateConcrete;\n   12:  aload_1\n   13:  aconst_null\n   14:  invokestatic    #43; //Method setScene_aroundBody1$advice:\n\n(LFoo;LReplicate;Ljava/lang/Object;Lorg/aspectj/runtime/internal/AroundClosure;)V\n   17:  return\n\nParameters loaded: \n  #8 loads the Foo instance, \n  #9 loads the aspect instance\n  #10 loads the Foo instance again\n  #13 loads the closure \nthen\n  setScene_aroundBody1$advice(Foo,Replicate,Object,AroundClosure)\n\nvoid setScene_aroundBody1$advice(Foo, Replicate, Object, AroundClosure )\n  Code:\n   Stack\u003d2, Locals\u003d6, Args_size\u003d4\n   0:   aload_2\n   1:   aload_3\n   2:   astore  4\n   4:   astore  5\n   6:   aload   5\n   8:   invokestatic    #45; //Method setScene_aroundBody0:(LFoo;)V\n   11:  return\n\nand heres the problem, we aload_2, astore_5, then aload_5 - at this time the element on the stack is an OBJECT and then we call setScene_aroundBody0() and get an incompatible argument error.  We missed the cast - or rather lost the fact that it was a Foo along the way.\n\nSolutions: if the setScene_aroundBody1$advice() had been correctl typed in its parameters, we\u0027d be fine.  3rd param should be Foo and not Object - so where did that come from?\n\nFix is in BcelShadow - we do know the munger has been parameterized through the subaspect and so the signature is now Foo and not \u0027T\u0027 (erases to Object) - so just use the right signature.\n\nTest and fix committed.\n\nI have fixed this for inlining of around advice - I remember when we looked at it on the list there was also a problem with non-inlined advice but I can\u0027t seem to recreate it and so can\u0027t fix it.\n\n  \n",
    "fix for inlined advice available in latest dev build from eclipse.org/aspectj",
    "Changing OS from Mac OS to Mac OS X as per bug 185991"
  ],
  "commentCreationDates": [
    "2007-02-16T15:29:00+01:00",
    "2007-02-27T13:38:18+01:00",
    "2007-02-28T14:17:36+01:00",
    "2007-07-29T15:21:46+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: section3/raytracer/JGFRayTracerBench, method: setScene_aroundBody1$advice signature: (Lsection3/raytracer/JGFRayTracerBench;Lsection3/raytracer/JGFRayTracerBench;Lsection3/raytracer/Scene;Lsection3/raytracer/Replicate;Ljava/lang/Object;Lorg/aspect",
      "elements": [
        {
          "method": "section3.JGFRayTracerBenchSizeA.init$_aroundBody0",
          "source": "JGFRayTracerBenchSizeA.java"
        },
        {
          "method": "section3.JGFRayTracerBenchSizeA.init$_aroundBody1$advice",
          "source": "JGFRayTracerBenchSizeA.java:128"
        },
        {
          "method": "section3.JGFRayTracerBenchSizeA.main",
          "source": "JGFRayTracerBenchSizeA.java:30"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "174449",
      "date": "2007-02-16T15:29:00+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "critical"
    }
  ],
  "groupId": "174449",
  "bugId": "174449",
  "date": "2007-02-16T15:29:00+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "critical"
}