{
  "comments": [
    "SWT 3.2rc1, Windows XP sp2.\n\nIn one of my applications, I\u0027m creating and disposing ExpandItems as the app receives various (application-specific) messages, and I\u0027m getting exceptions such as the following raised sporadically:\n\nException in thread \"main\" java.lang.NullPointerException\n\tat org.eclipse.swt.widgets.ExpandBar.WM_LBUTTONDOWN(ExpandBar.java:536)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3279)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:4023)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1920)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2964)\n\nI get other NPEs in ExpandBar, depending on what I\u0027m doing, but they all seem have the same cause.  What seems to be happening is that the ExpandItems are getting focus, and when I dispose some of them the ExpandBar is not keeping its focusIndex variable in sync - when it subsequently tries to reference the currently focused ExpandItem from its internal array, that index (which was pointing to an ExpandItem before the disposal) is now pointing to a null element.\n\nAfter much messing around, I\u0027ve managed to produce a (slightly contrived) test case with which I can reliably reproduce this:\n\n\npublic class ExpandBarNPE {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tfinal Display display \u003d new Display();\n\t\t\n\t\tShell shell \u003d new Shell(display);\n\t\tshell.setLayout(new FillLayout());\n\t\t\n\t\tExpandBar expandBar \u003d new ExpandBar(shell, SWT.NONE);\n\t\t\n\t\tfinal ExpandItem expandItem1 \u003d new ExpandItem(expandBar, SWT.NONE);\n\t\texpandItem1.setText(\"ExpandItem 1\");\n\t\t\n\t\tExpandItem expandItem2 \u003d new ExpandItem(expandBar, SWT.NONE);\n\t\texpandItem2.setText(\"ExpandItem 2\");\n\t\t\n\t\tdisplay.addFilter(SWT.KeyDown, new Listener() {\n\n\t\t\tpublic void handleEvent(Event event) {\n\t\t\t\tif (event.character \u003d\u003d \u0027d\u0027) {\n\t\t\t\t\texpandItem1.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tshell.setSize(300, 300);\n\t\tshell.open();\n\t\t\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch()) {\n\t\t\t\tdisplay.sleep();\n\t\t\t}\n\t\t}\n\t\t\n\t\tdisplay.dispose();\n\t}\n}\n\n\nThis example creates two ExpandItems and disposes the first when you hit the \u0027d\u0027 key (that\u0027s the convoluted bit - I\u0027m doing it that way to avoid the focus changes you\u0027d get with a Button etc).  To cause the exception, the 2nd ExpandItem needs to have focus when the 1st is disposed, and then you need to interact with the ExpandBar in some way that causes it to try to manipulate what it thinks is the focused item.  Clicking on the remaining ExpandItem will give you the exception I quoted above.\n\nThe exact steps which work for me on XP are:\n* run the example\n* click on ExpandItem 2 (giving it focus)\n* hit \u0027d\u0027 (disposes ExpandItem 1)\n* click on ExpandItem 2 again",
    "Thanks for the snippet.\nI\u0027ve fixed (and released) windows and carbon, still need to fix this for gtk 2.2.4 (i do it tomorrow).\n\n",
    "I have the fix for GTK ready.\n\nSteve, do I need approval for this ?\n",
    "Yes.",
    "fixed in GTK too. closing."
  ],
  "commentCreationDates": [
    "2006-04-29T01:53:49+02:00",
    "2006-05-01T23:58:20+02:00",
    "2006-05-02T18:13:21+02:00",
    "2006-05-02T19:46:12+02:00",
    "2006-06-06T21:08:10+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.ExpandBar.WM_LBUTTONDOWN",
          "source": "ExpandBar.java:536"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3279"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4023"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1920"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2964"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "139329",
      "date": "2006-04-29T01:53:49+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "139329",
  "bugId": "139329",
  "date": "2006-04-29T01:53:49+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}