{
  "comments": [
    "I20051101-1204\n(setup)\n- launch a runtime workspace\n- in that workspace, create a plug-in project called \"Scratch\".  Accept all \nthe defaults of the wizard and choose \"Custom plug-in wizard\" as the template\n- when the project has been created, quit the runtime workspace\n\n(bug)\n- now from the host workspace, choose import/export \u003e import \u003e existing \nprojects into workspace\n- select the folder the contains the runtime workspace\n- you\u0027ll see \"Scratch\" in the list of projects\n- check the checkbox for \"copy into workspace\" \n- the project appears in the workspace as a java project, but it has no \ncontents at all.",
    "This works for me on Win2K using FAT32 file system for both source and \ndestination workspaces.  I used I20051101-0010 but nothing changed in this code \nbetween then and the noon build.  Can you check if there is anything suspect in \nyour .log file?  ",
    "hmmm... there is something suspicious in the log from around the time I first \nentered this bug:\n\n!ENTRY org.eclipse.jdt.core 4 4 2005-11-01 14:13:17.880\n!MESSAGE JavaBuilder handling ImageBuilderInternalException while building: \nscratch\n!STACK 1\norg.eclipse.core.internal.resources.ResourceException: Resource already exists \non disk: /scratch/bin/.project.\n\tat org.eclipse.core.internal.localstore.FileSystemResourceManager.copy\n(FileSystemResourceManager.java:146)\n\tat org.eclipse.core.internal.resources.Resource.copy(Resource.java:542)\n\tat org.eclipse.jdt.internal.core.builder.BatchImageBuilder$4.visit\n(BatchImageBuilder.java:228)\n\tat org.eclipse.core.internal.resources.Resource$1.visitElement\n(Resource.java:55)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration\n(ElementTreeIterator.java:81)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration\n(ElementTreeIterator.java:85)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.iterate\n(ElementTreeIterator.java:126)\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:65)\n\tat \norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack\n(BatchImageBuilder.java:198)\n\tat \norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders\n(BatchImageBuilder.java:131)\n\tat org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build\n(BatchImageBuilder.java:36)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll\n(JavaBuilder.java:213)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build\n(JavaBuilder.java:136)\n\tat org.eclipse.core.internal.events.BuildManager$2.run\n(BuildManager.java:593)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:168)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:202)\n\tat org.eclipse.core.internal.events.BuildManager$1.run\n(BuildManager.java:231)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:234)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuildLoop\n(BuildManager.java:253)\n\tat org.eclipse.core.internal.events.BuildManager.build\n(BuildManager.java:282)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild\n(AutoBuildJob.java:139)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run\n(AutoBuildJob.java:200)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n!SUBENTRY 1 org.eclipse.core.resources 4 272 2005-11-01 14:13:17.880\n!MESSAGE Resource already exists on disk: /scratch/bin/.project.\n\n\nBut I just tried the scenario again, and checked first that there was \nno \"scratch\" directory on disk in my host workspace.  It still fails as \noriginally described, but there was nothing new in the log.  I did the scenario \nagain with a new project name, \"Test\" and had the same problem, but nothing in \nthe log...\n",
    "When I reported \"no contents\" in the project, I was looking from the Java \nperspective.  If I switch to the resource navigator, I can see the following \nwere imported:\n\nscratch/bin/.project\nscratch/.project\n\nbut none of the other files were imported.  If I go back to disk and look at \nthe runtime workspace from where everything was imported, I can see that there \nare many more files/folders that should have been copied.\n\n",
    "Created an attachment (id\u003d29130)\nzip file containing runtime workspace\n\nThis is a zip file containing the runtime workspace I\u0027m trying to import from. \nExpand it into the file system and then select the top level folder of the\nworkspace to try to import the projects.",
    "Interesting...I can successfully import the projects using [copy into \nworkspace] if I import from the attached zip.  But if I expand the zip and try \nto import from the file system, I cannot successfully import.  \n\nI think I saw a bug earlier (that had been fixed) involving a difference in \nthe separators used for archive files vs. the file system...could it be \nrelated to that one?  I can troll around for the bug number if you don\u0027t know \nwhat I\u0027m talking about...",
    "the bug that sounds similar (though reversed) is bug #95613.\nIn that bug, the problem was importing from the zip, not the file system.\nSymptoms seem similar, though.",
    "I just expanded the zip and was able to import both projects (from directory) \nand there are lots of files.  Maybe I should get someone using XP to try?",
    "It sounds to me like the import of the files isn\u0027t even being attempted.  What \nhappens is the project is created and then the import operation (to import all \nthe project\u0027s files) is setup and run.",
    "yes, might be worthwhile.\nI\u0027m running Windows XP Pro Version 2002, Service Pack 1.\nHow can I check what file system I\u0027m running, in case that matters....",
    "even more interesting:\n\n- I can successfully import (as you did) if I expand the zip file somewhere \nelse and import from it.  I just can\u0027t import from the original directory (the \none I compressed to create the zip file!)  ",
    "That is strange indeed.  So it sounds like the file system is not a factor.  I \njust get that info by selecting the drive in file explorer and bringing up the \nproperties - there should be a file system field.",
    "What would happen if you tried a different setup?  Say, create the plugin \nproject but don\u0027t get the new plugin wizard to create all the extra stuff and \ninstead just import some files from somewhere or create some files/directories.",
    "Even a simple project (non-Java), with just a few text files imported from \nelsewhere exhibits the same problem.  Importing without copying works as \nexpected.  Importing with copying does seem to abort the operation, because you \nnever even see the progress indicator.\nfyi, I\u0027m running NTFS.\nI\u0027ll try debugging this scenario and report back.",
    "I just debugged it down to FileSystemStructureProvider.getChildren.\nFor some reason, the File.list() method is returning null, even though the \nfolder does have children.  I tried substituting File.listFiles() to see if \nanything different happened, but it also returns null.  So the wizard believes \nthere are no files to copy. \n\nHere is what the file (folder) in question looks like:\n\nelement\u003d File  (id\u003d1241)\n\tpath\u003d \"C:\\\\Documents%20and%\n20Settings\\\\Administrator\\\\workspace\\\\scritch\"\n\tprefixLength\u003d 3\n\n",
    "Just checked the javadoc.  java.io.File.list() only returns null  \"if this \nabstract pathname does not denote a directory, or if an I/O error occurs.\"\nSo at a minimum we should catch the null case and report that some unknown \nerror occurred.\n\nI tried importing from this same directory using a simple file system import \nand it worked.  Could the problem be that the folder was left open or \nsomething in this code path that causes the problem?\n\ncc\u0027ing John in case he has any insight. ",
    "I just tried importing using the Documents and Settings directory and was able \nto replicate.  I wonder if it\u0027s because the directory path has spaces in it?  I \ncan investigate further now.\n\n",
    "The spaces in the file path are incorrectly being unicode escaped as %20.",
    "I found the problem.  I get the source path from the project\u0027s description (an \nIProjectDescription), calling description.getLocationURI().  Then call \ngetRawPath() on the URI instead of getPath() which is why the path is messed up \nwhen File.listFiles() is called.  ",
    "cc\u0027ing mvm.  Do we want to fix this for M3?  I think it\u0027s worth considering \nbecause:\n- \"copy files to workspace\" is a new feature \n- it\u0027s common to import a project from another workspace\n- the default workspace location on windows has a pathname that will exhibit \nthe problem.\n",
    "Created an attachment (id\u003d29225)\napply patch to WizardProjectsImportPage.java\n",
    "do we have tests for import project?  maybe we could also put in a test for a\ndirectory with spaces (on all platforms)as well.\n\nYes we should consider for M3 assuming you feel there is no risk in the fix.",
    "Both the existing code and patch seem to be vulnerable to \nNullPointerExceptions.  IProjectDescription.getLocationURI() can return null. ",
    "According to the javadoc, the method only returns null if the location of the \nproject is the default location.  Since this wizard always imports from another \nlocation then this should never return null.  In the wizard, if you select the \nworkspace\u0027s location, no projects appear in the list (we should probably show \nan error message in that case, but that\u0027s a separate issue).",
    "I guess I was just confused by the presence of this line: \n\tif (Platform.getLocation().isPrefixOf(locationPath))  \n\t\trecord.description.setLocation(null);  ",
    "In build I20051102-1600, if I import an existing project that is already in the\nworkspace location, and select to copy the contents, I get a\nNullPointerException.  Having said that, it makes no sense to copy the contents\nif the project is already in the workspace directory. I would suggest something\nlike:\n\nif (copyFiles){\n\t// import project from location copying files - use default project location\nfor this workspace\n\tURI location \u003d record.description.getLocationURI();\n\t//only copy the project if it is outside the workspace directory\n\tif (location !\u003d null) {\n\t\timportSource \u003d new File(location);\n\t\t... etc ...\n\n",
    "Doug, the code you pointed out is only run in an error case.  I need to try to \nrecreate that case to see what happens when the copy files option is checked.\n\nJohn, did you get the NPE by creating a project with name Foo, deleting the \nproject but not the contents (so it still exists on the file system) then \nimporting a project named Foo from a directory with the copy files option \nchecked?  ",
    "Yes, that\u0027s exactly what I did.",
    "Created an attachment (id\u003d29273)\napply patch to WizardProjectsImportPage.java\n",
    "Note: from comment #26, when you import Foo select the direcotry that is the \nworkspace in which you deleted the Foo project but not the contents.",
    "Created an attachment (id\u003d29352)\napply patch to ImportExistingTest.java\n\nAdded a test for this case.",
    "Michael, can you check this patch (and the patch for the added test, too).",
    "Created an attachment (id\u003d29359)\napply patch to ImportExistingTest.java\n\nOriginal patch no longer valid after change to WizardProjectsImportPage (for\nbug 80833) was released.",
    "Karice, that last patch to the tests doesn\u0027t seem to apply even after updating from head.",
    "I think this is because another patch to the same class was released earlier \ntoday.  ",
    "I\u0027ll hold off on submitting the fix until a new test patch can be provided.",
    "Created an attachment (id\u003d29445)\napply patch to ImportExistingTest.java\n\nUpdated test patch.  ",
    "Patches submitted.",
    "*** Bug 116452 has been marked as a duplicate of this bug. ***",
    "Verified in I20051213-0010"
  ],
  "commentCreationDates": [
    "2005-11-01T22:17:46+01:00",
    "2005-11-01T23:20:12+01:00",
    "2005-11-01T23:44:21+01:00",
    "2005-11-01T23:49:38+01:00",
    "2005-11-01T23:55:37+01:00",
    "2005-11-01T23:59:08+01:00",
    "2005-11-02T00:02:13+01:00",
    "2005-11-02T00:03:31+01:00",
    "2005-11-02T00:04:43+01:00",
    "2005-11-02T00:06:52+01:00",
    "2005-11-02T00:10:57+01:00",
    "2005-11-02T00:15:45+01:00",
    "2005-11-02T00:19:01+01:00",
    "2005-11-02T17:20:10+01:00",
    "2005-11-02T17:55:41+01:00",
    "2005-11-02T18:04:10+01:00",
    "2005-11-02T18:12:35+01:00",
    "2005-11-02T18:19:14+01:00",
    "2005-11-02T18:27:20+01:00",
    "2005-11-02T20:38:01+01:00",
    "2005-11-02T20:55:48+01:00",
    "2005-11-03T13:56:43+01:00",
    "2005-11-03T14:39:18+01:00",
    "2005-11-03T15:01:56+01:00",
    "2005-11-03T15:15:48+01:00",
    "2005-11-03T15:33:23+01:00",
    "2005-11-03T15:49:36+01:00",
    "2005-11-03T16:07:00+01:00",
    "2005-11-03T16:30:06+01:00",
    "2005-11-03T16:38:11+01:00",
    "2005-11-04T18:56:31+01:00",
    "2005-11-04T19:29:01+01:00",
    "2005-11-04T20:02:14+01:00",
    "2005-11-04T20:36:41+01:00",
    "2005-11-04T21:21:57+01:00",
    "2005-11-07T13:38:23+01:00",
    "2005-11-07T17:07:45+01:00",
    "2005-11-07T17:21:06+01:00",
    "2005-11-15T22:14:20+01:00",
    "2005-12-13T16:18:39+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Resource already exists  on disk: /scratch/bin/.project.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.copy",
          "source": "FileSystemResourceManager.java:146"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.copy",
          "source": "Resource.java:542"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder$4.visit",
          "source": "BatchImageBuilder.java:228"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$1.visitElement",
          "source": "Resource.java:55"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:81"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:85"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.iterate",
          "source": "ElementTreeIterator.java:126"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:65"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack",
          "source": "BatchImageBuilder.java:198"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders",
          "source": "BatchImageBuilder.java:131"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:36"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:213"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:136"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:593"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:202"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:231"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:234"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:253"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:282"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:139"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:200"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "114665",
      "date": "2005-11-01T23:44:21+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "114665",
  "bugId": "114665",
  "date": "2005-11-01T22:17:46+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}