{
  "comments": [
    "In simple cases, stepover works fine. In a complex build file I have (I\u0027m\nsharing the test case with Darin privately), the stepover either hangs or leads\nto a NullPointerException.\n\nIf I run in the same JRE, then the stepover appears to work, but the current\nsource link isn\u0027t updated. So I clicked the top stack frame thinking this would\nupdate it, and I got error dialogs and this log:\n\n!ENTRY org.eclipse.debug.core 4 2 2005-05-10 15:27:13.751\n!MESSAGE Problems occurred when invoking code from plug-in:\n\"org.eclipse.debug.core\".\n!STACK 0\njava.lang.NullPointerException\n\tat\norg.eclipse.ant.internal.ui.antsupport.logger.util.AntDebugState.marshalStack(AntDebugState.java:333)\n\tat\norg.eclipse.ant.internal.ui.antsupport.logger.AntProcessDebugBuildLogger.getStackFrames(AntProcessDebugBuildLogger.java:189)\n\tat\norg.eclipse.ant.internal.ui.debug.model.AntDebugTarget.getStackFrames(AntDebugTarget.java:419)\n\tat\norg.eclipse.ant.internal.ui.debug.model.AntThread.getStackFrames0(AntThread.java:95)\n\tat\norg.eclipse.ant.internal.ui.debug.model.AntThread.getTopStackFrame(AntThread.java:126)\n\tat\norg.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doPreprocessEvents(LaunchViewEventHandler.java:611)\n\tat\norg.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.handleDebugEvents(AbstractDebugEventHandler.java:149)\n\tat org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1080)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1029)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:775)\n\tat org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1112)\n\tat org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:342)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)\n\n\n\nIf I run in a separate JRE, then the stepover occurs (I can see the output in\nthe console indicating the stepover happened) but then the workbench hangs with\n\"Fetching children from debug target\" in the progress bar (although sometimes it\njust says \"debug event dispatch\").",
    "investigate for M7",
    "The problem here was the incorrect assumption that \ntargetStarted/targetFinished calls would match up for any given target before \nother targets started/finished.\nThis is not true for ant or antcalls: multiple targets can be started before \nany are finished.\n\nChanged the AntDebugState to track targetExecuting using a Stack. On each \ntargetStarted that target is pushed onto the stack. On a targetFinished, the \ntop of the stack is popped.\nThis way the target executing is always current and not null (which was \ncausing the NPE or the hang).",
    "Please verify Ryan.",
    "Verified in Build id: N20050523-0010",
    "Thanks. Build notes updated."
  ],
  "commentCreationDates": [
    "2005-05-11T01:00:39+02:00",
    "2005-05-11T16:22:59+02:00",
    "2005-05-19T00:20:10+02:00",
    "2005-05-19T00:20:37+02:00",
    "2005-05-23T22:53:29+02:00",
    "2005-05-23T23:21:56+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ant.internal.ui.antsupport.logger.util.AntDebugState.marshalStack",
          "source": "AntDebugState.java:333"
        },
        {
          "method": "org.eclipse.ant.internal.ui.antsupport.logger.AntProcessDebugBuildLogger.getStackFrames",
          "source": "AntProcessDebugBuildLogger.java:189"
        },
        {
          "method": "org.eclipse.ant.internal.ui.debug.model.AntDebugTarget.getStackFrames",
          "source": "AntDebugTarget.java:419"
        },
        {
          "method": "org.eclipse.ant.internal.ui.debug.model.AntThread.getStackFrames0",
          "source": "AntThread.java:95"
        },
        {
          "method": "org.eclipse.ant.internal.ui.debug.model.AntThread.getTopStackFrame",
          "source": "AntThread.java:126"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doPreprocessEvents",
          "source": "LaunchViewEventHandler.java:611"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.handleDebugEvents",
          "source": "AbstractDebugEventHandler.java:149"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventNotifier.run",
          "source": "DebugPlugin.java:1080"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1029"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:775"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch",
          "source": "DebugPlugin.java:1112"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run",
          "source": "DebugPlugin.java:342"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "94573",
      "date": "2005-05-11T01:00:39+02:00",
      "product": "Platform",
      "component": "Ant",
      "severity": "normal"
    }
  ],
  "groupId": "94573",
  "bugId": "94573",
  "date": "2005-05-11T01:00:39+02:00",
  "product": "Platform",
  "component": "Ant",
  "severity": "normal"
}