{
  "comments": [
    "This was reported using an early access version of JAX-WS\n(https://jax-rpc.dev.java.net/). \n\nRepro as follows:\n\n1.) Download the JAX-WS binaries\n2.) Create a Java project with the jax-ws libraries on your build path and in\nyour APT factory path\n3.) In the distro, there are sample files in\nsamples\\annotations\\src\\annotations\\server. Add them to your source path\n\nRather than generating the correct files, the following error occurs:\n\nUnexpected failure running APT\njava.lang.reflect.UndeclaredThrowableException\n\tat $Proxy1.style(Unknown Source)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.pushSOAPBinding(WebServiceVisitor.java:169)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.preProcessWebService(WebServiceVisitor.java:161)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitInterfaceDeclaration(WebServiceVisitor.java:102)\n\tat\norg.eclipse.jdt.apt.core.internal.declaration.InterfaceDeclarationImpl.accept(InterfaceDeclarationImpl.java:35)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.inspectEndpointInterface(WebServiceVisitor.java:294)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitClassDeclaration(WebServiceVisitor.java:119)\n\tat\norg.eclipse.jdt.apt.core.internal.declaration.ClassDeclarationImpl.accept(ClassDeclarationImpl.java:43)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceAP.completeModel(WebServiceAP.java:387)\n\tat\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceAP.process(WebServiceAP.java:240)\n\tat\norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT(APTDispatchRunnable.java:187)\n\tat\norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run(APTDispatchRunnable.java:138)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)\n\tat org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT(APTDispatch.java:79)\n\tat\norg.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringBuild(APTDispatch.java:43)\n\tat\norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.preBuildNotify(AptCompilationParticipant.java:121)\n\tat\norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify(AptCompilationParticipant.java:83)\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.notifyCompilationParticipants(AbstractImageBuilder.java:258)\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:475)\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:199)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:52)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:215)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:138)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)\n\tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:139)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:200)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\nCaused by: java.lang.ClassNotFoundException: javax.jws.soap.SOAPBinding$Style\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:403)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)\n\tat\norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat\norg.eclipse.jdt.apt.core.internal.declaration.AnnotationMirrorImpl.getReflectionValue(AnnotationMirrorImpl.java:265)\n\tat\norg.eclipse.jdt.apt.core.internal.declaration.AnnotationMirrorImpl.getReflectionValue(AnnotationMirrorImpl.java:242)\n\tat\norg.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.invoke(AnnotationInvocationHandler.java:92)\n\t... 37 more",
    "Assigning to Dan, who submitted a patch for the classloader problem in jars.\nHe\u0027s verifying the fix with plugins as well.\n\nDan, once you\u0027re getting past the classloader problem(s), could you assign this\nto Theodora with the new error(s) you see?",
    "Stack trace is as follows now:\n\nThis one has both exceptions that I have been seeing:\n\n \n\nUnexpected failure running APT\n\njava.lang.IllegalArgumentException\n\n      at com.sun.tools.xjc.api.Reference.\u003cinit\u003e(Reference.java:65)\n\n      at com.sun.tools.xjc.api.Reference.\u003cinit\u003e(Reference.java:57)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.AnnotationProcessorContext$SEIContext.addReference(AnnotationProcessorContext.java:262)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceReferenceCollector.collectExceptionBeans(WebServiceReferenceCollector.java:112)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceReferenceCollector.processMethod(WebServiceReferenceCollector.java:94)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitMethodDeclaration(WebServiceVisitor.java:300)\n\n      at\norg.eclipse.jdt.apt.core.internal.declaration.MethodDeclarationImpl.accept(MethodDeclarationImpl.java:46)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.processMethods(WebServiceVisitor.java:268)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.postProcessWebService(WebServiceVisitor.java:249)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitInterfaceDeclaration(WebServiceVisitor.java:104)\n\n      at\norg.eclipse.jdt.apt.core.internal.declaration.InterfaceDeclarationImpl.accept(InterfaceDeclarationImpl.java:35)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.inspectEndpointInterface(WebServiceVisitor.java:294)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitClassDeclaration(WebServiceVisitor.java:119)\n\n      at\norg.eclipse.jdt.apt.core.internal.declaration.ClassDeclarationImpl.accept(ClassDeclarationImpl.java:43)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceAP.completeModel(WebServiceAP.java:387)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceAP.process(WebServiceAP.java:240)\n\n      at\norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT(APTDispatchRunnable.java:188)\n\n      at\norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run(APTDispatchRunnable.java:138)\n\n      at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)\n\n      at org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT(APTDispatch.java:79)\n\n      at\norg.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringBuild(APTDispatch.java:43)\n\n      at\norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.preBuildNotify(AptCompilationParticipant.java:126)\n\n      at\norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify(AptCompilationParticipant.java:85)\n\n      at\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.notifyCompilationParticipants(AbstractImageBuilder.java:258)\n\n      at\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:475)\n\n      at\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:199)\n\n      at\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:52)\n\n      at\norg.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:215)\n\n      at\norg.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:138)\n\n      at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n\n      at\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\n      at org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\n      at\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n\n      at\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n\n      at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n\n      at\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\n      at org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\n      at\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)\n\n      at\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)\n\n      at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)\n\n      at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:211)\n\n      at\norg.eclipse.jdt.internal.ui.util.CoreUtility$BuildJob.run(CoreUtility.java:146)\n\n      at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n\n \n\n \n\n----------------------------------------------------------\n\n \n\nUnexpected failure running APT\n\njava.lang.IllegalArgumentException: type, public final class java.lang.Class\n\n      extends java.lang.Object\n\n      implements : java.io.Serializable, Unresolved type\njava.lang.reflect.GenericDeclaration, Unresolved type java.lang.reflect.Type,\nUnresolved type java.lang.reflect.AnnotatedElement\n\n/*   fields   */\n\nint ANNOTATION\n\nint ENUM\n\nint SYNTHETIC\n\nConstructor\u003cT\u003e cachedConstructor\n\nClass#RAW newInstanceCallerCache\n\njava.lang.String name\n\nUnresolved type java.security.ProtectionDomain allPermDomain\n\nboolean useCaches\n\nUnresolved type java.lang.ref.SoftReference declaredFields\n\nUnresolved type java.lang.ref.SoftReference publicFields\n\nUnresolved type java.lang.ref.SoftReference declaredMethods\n\nUnresolved type java.lang.ref.SoftReference publicMethods\n\nUnresolved type java.lang.ref.SoftReference declaredConstructors\n\nUnresolved type java.lang.ref.SoftReference publicConstructors\n\nUnresolved type java.lang.ref.SoftReference declaredPublicFields\n\nUnresolved type java.lang.ref.SoftReference declaredPublicMethods\n\nUnresolved type sun.reflect.generics.repository.ClassRepository genericInfo\n\nlong serialVersionUID\n\nUnresolved type java.io.ObjectStreamField[] serialPersistentFields\n\nUnresolved type sun.reflect.ReflectionFactory reflectionFactory\n\nboolean initted\n\nT[] enumConstants\n\nMap\u003cjava.lang.String,T\u003e enumConstantDirectory\n\nUnresolved type java.lang.annotation.Annotation[] EMPTY_ANNOTATIONS_ARRAY\n\nMap\u003cClass#RAW,Unresolved type java.lang.annotation.Annotation\u003e annotations\n\nMap\u003cClass#RAW,Unresolved type java.lang.annotation.Annotation\u003e declaredAnnotations\n\nUnresolved type sun.reflect.annotation.AnnotationType annotationType\n\n/*   methods   */\n\nvoid registerNatives() \n\nvoid \u003cinit\u003e() \n\njava.lang.String toString() \n\nClass\u003c?\u003e forName(java.lang.String) throws Unresolved type\njava.lang.ClassNotFoundException\n\nClass\u003c?\u003e forName(java.lang.String, boolean, Unresolved type\njava.lang.ClassLoader) throws Unresolved type java.lang.ClassNotFoundException\n\nClass#RAW forName0(java.lang.String, boolean, Unresolved type\njava.lang.ClassLoader) throws Unresolved type java.lang.ClassNotFoundException\n\nT newInstance() throws Unresolved type java.lang.InstantiationException,\nUnresolved type java.lang.IllegalAccessException\n\nT newInstance0() throws Unresolved type java.lang.InstantiationException,\nUnresolved type java.lang.IllegalAccessException\n\nboolean isInstance(java.lang.Object) \n\nboolean isAssignableFrom(Class\u003c?\u003e) \n\nboolean isInterface() \n\nboolean isArray() \n\nboolean isPrimitive() \n\nboolean isAnnotation() \n\nboolean isSynthetic() \n\njava.lang.String getName() \n\njava.lang.String getName0() \n\nUnresolved type java.lang.ClassLoader getClassLoader() \n\nUnresolved type java.lang.ClassLoader getClassLoader0() \n\nTypeVariable\u003cClass\u003cT\u003e\u003e[] getTypeParameters() \n\nClass\u003c? super T\u003e getSuperclass() \n\nUnresolved type java.lang.reflect.Type getGenericSuperclass() \n\nUnresolved type java.lang.Package getPackage() \n\nClass#RAW[] getInterfaces() \n\nUnresolved type java.lang.reflect.Type[] getGenericInterfaces() \n\nClass\u003c?\u003e getComponentType() \n\nint getModifiers() \n\njava.lang.Object[] getSigners() \n\nvoid setSigners(java.lang.Object[]) \n\nUnresolved type java.lang.reflect.Method getEnclosingMethod() \n\njava.lang.Object[] getEnclosingMethod0() \n\nUnresolved type java.lang.Class$EnclosingMethodInfo getEnclosingMethodInfo() \n\nClass#RAW toClass(Unresolved type java.lang.reflect.Type) \n\nConstructor\u003c?\u003e getEnclosingConstructor() \n\nClass\u003c?\u003e getDeclaringClass() \n\nClass\u003c?\u003e getEnclosingClass() \n\njava.lang.String getSimpleName() \n\nboolean isAsciiDigit(char) \n\njava.lang.String getCanonicalName() \n\nboolean isAnonymousClass() \n\nboolean isLocalClass() \n\nboolean isMemberClass() \n\njava.lang.String getSimpleBinaryName() \n\nboolean isLocalOrAnonymousClass() \n\nClass#RAW[] getClasses() \n\nUnresolved type java.lang.reflect.Field[] getFields() throws Unresolved type\njava.lang.SecurityException\n\nUnresolved type java.lang.reflect.Method[] getMethods() throws Unresolved type\njava.lang.SecurityException\n\nUnresolved type java.lang.reflect.Constructor[] getConstructors() throws\nUnresolved type java.lang.SecurityException\n\nUnresolved type java.lang.reflect.Field getField(java.lang.String) throws\nUnresolved type java.lang.NoSuchFieldException, Unresolved type\njava.lang.SecurityException\n\nUnresolved type java.lang.reflect.Method getMethod(java.lang.String,\nClass#RAW[]) throws Unresolved type java.lang.NoSuchMethodException, Unresolved\ntype java.lang.SecurityException\n\nConstructor\u003cT\u003e getConstructor(Class#RAW[]) throws Unresolved type\njava.lang.NoSuchMethodException, Unresolved type java.lang.SecurityException\n\nClass#RAW[] getDeclaredClasses() throws Unresolved type java.lang.SecurityException\n\nUnresolved type java.lang.reflect.Field[] getDeclaredFields() throws Unresolved\ntype java.lang.SecurityException\n\nUnresolved type java.lang.reflect.Method[] getDeclaredMethods() throws\nUnresolved type java.lang.SecurityException\n\nUnresolved type java.lang.reflect.Constructor[] getDeclaredConstructors() throws\nUnresolved type java.lang.SecurityException\n\nUnresolved type java.lang.reflect.Field getDeclaredField(java.lang.String)\nthrows Unresolved type java.lang.NoSuchFieldException, Unresolved type\njava.lang.SecurityException\n\nUnresolved type java.lang.reflect.Method getDeclaredMethod(java.lang.String,\nClass#RAW[]) throws Unresolved type java.lang.NoSuchMethodException, Unresolved\ntype java.lang.SecurityException\n\nConstructor\u003cT\u003e getDeclaredConstructor(Class#RAW[]) throws Unresolved type\njava.lang.NoSuchMethodException, Unresolved type java.lang.SecurityException\n\nUnresolved type java.io.InputStream getResourceAsStream(java.lang.String) \n\nUnresolved type java.net.URL getResource(java.lang.String) \n\nUnresolved type java.security.ProtectionDomain getProtectionDomain() \n\nUnresolved type java.security.ProtectionDomain getProtectionDomain0() \n\nvoid setProtectionDomain0(Unresolved type java.security.ProtectionDomain) \n\nClass#RAW getPrimitiveClass(java.lang.String) \n\nvoid checkMemberAccess(int, Unresolved type java.lang.ClassLoader) \n\njava.lang.String resolveName(java.lang.String) \n\njava.lang.String getGenericSignature() \n\nUnresolved type sun.reflect.generics.factory.GenericsFactory getFactory() \n\nUnresolved type sun.reflect.generics.repository.ClassRepository getGenericInfo() \n\nbyte[] getRawAnnotations() \n\nUnresolved type sun.reflect.ConstantPool getConstantPool() \n\nUnresolved type java.lang.reflect.Field[] privateGetDeclaredFields(boolean) \n\nUnresolved type java.lang.reflect.Field[] privateGetPublicFields(Unresolved type\njava.util.Set) \n\nvoid addAll(Unresolved type java.util.Collection, Unresolved type\njava.lang.reflect.Field[]) \n\nUnresolved type java.lang.reflect.Constructor[]\nprivateGetDeclaredConstructors(boolean) \n\nUnresolved type java.lang.reflect.Method[] privateGetDeclaredMethods(boolean) \n\nUnresolved type java.lang.reflect.Method[] privateGetPublicMethods() \n\nUnresolved type java.lang.reflect.Field searchFields(Unresolved type\njava.lang.reflect.Field[], java.lang.String) \n\nUnresolved type java.lang.reflect.Field getField0(java.lang.String) throws\nUnresolved type java.lang.NoSuchFieldException\n\nUnresolved type java.lang.reflect.Method searchMethods(Unresolved type\njava.lang.reflect.Method[], java.lang.String, Class#RAW[]) \n\nUnresolved type java.lang.reflect.Method getMethod0(java.lang.String, Class#RAW[]) \n\nConstructor\u003cT\u003e getConstructor0(Class#RAW[], int) throws Unresolved type\njava.lang.NoSuchMethodException\n\nboolean arrayContentsEq(java.lang.Object[], java.lang.Object[]) \n\nUnresolved type java.lang.reflect.Field[] copyFields(Unresolved type\njava.lang.reflect.Field[]) \n\nUnresolved type java.lang.reflect.Method[] copyMethods(Unresolved type\njava.lang.reflect.Method[]) \n\nUnresolved type java.lang.reflect.Constructor[] copyConstructors(Unresolved type\njava.lang.reflect.Constructor[]) \n\nUnresolved type java.lang.reflect.Field[] getDeclaredFields0(boolean) \n\nUnresolved type java.lang.reflect.Method[] getDeclaredMethods0(boolean) \n\nUnresolved type java.lang.reflect.Constructor[] getDeclaredConstructors0(boolean) \n\nClass#RAW[] getDeclaredClasses0() \n\njava.lang.String argumentTypesToString(Class#RAW[]) \n\nboolean desiredAssertionStatus() \n\nboolean desiredAssertionStatus0(Class#RAW) \n\nboolean isEnum() \n\nUnresolved type sun.reflect.ReflectionFactory getReflectionFactory() \n\nvoid checkInitted() \n\nT[] getEnumConstants() \n\nMap\u003cjava.lang.String,T\u003e enumConstantDirectory() \n\nT cast(java.lang.Object) \n\nClass\u003c? extends U\u003e asSubclass(Class\u003cU\u003e) \n\nA getAnnotation(Class\u003cA\u003e) \n\nboolean isAnnotationPresent(Class\u003c? extends Unresolved type\njava.lang.annotation.Annotation\u003e) \n\nUnresolved type java.lang.annotation.Annotation[] getAnnotations() \n\nUnresolved type java.lang.annotation.Annotation[] getDeclaredAnnotations() \n\nvoid initAnnotationsIfNecessary() \n\nvoid setAnnotationType(Unresolved type sun.reflect.annotation.AnnotationType) \n\nUnresolved type sun.reflect.annotation.AnnotationType getAnnotationType() \n\n/*   members   */\n\nUnresolved type java.lang.Class$EnclosingMethodInfo\n\nUnresolved type java.lang.Class$MethodArray\n\n \n\n \n\n, require 1 type arguments but found 0\n\n      at\norg.eclipse.jdt.apt.core.internal.util.TypesUtil.getDeclaredType(TypesUtil.java:165)\n\n      at\norg.eclipse.jdt.apt.core.internal.util.TypesUtil.getDeclaredType(TypesUtil.java:182)\n\n      at com.sun.tools.jxc.model.nav.APTNavigator.ref(APTNavigator.java:181)\n\n      at com.sun.tools.jxc.model.nav.APTNavigator.ref(APTNavigator.java:45)\n\n      at\ncom.sun.xml.bind.v2.model.impl.BuiltinLeafInfoImpl.createLeaves(BuiltinLeafInfoImpl.java:47)\n\n      at\ncom.sun.xml.bind.v2.model.impl.ModelBuilder.createTypeInfoSet(ModelBuilder.java:86)\n\n      at com.sun.xml.bind.v2.model.impl.ModelBuilder.\u003cinit\u003e(ModelBuilder.java:82)\n\n      at\ncom.sun.tools.xjc.api.impl.j2s.JavaCompilerImpl.bind(JavaCompilerImpl.java:39)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceAP.completeModel(WebServiceAP.java:402)\n\n      at\ncom.sun.tools.ws.processor.modeler.annotation.WebServiceAP.process(WebServiceAP.java:240)\n\n      at\norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT(APTDispatchRunnable.java:188)\n\n      at\norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run(APTDispatchRunnable.java:138)\n\n      at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)\n\n      at org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT(APTDispatch.java:79)\n\n      at\norg.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringReconcile(APTDispatch.java:55)\n\n      at\norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.postReconcileNotify(AptCompilationParticipant.java:188)\n\n      at\norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify(AptCompilationParticipant.java:88)\n\n      at\norg.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.notifyCompilationParticipants(ReconcileWorkingCopyOperation.java:144)\n\n      at\norg.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:58)\n\n      at\norg.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)\n\n      at\norg.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:777)\n\n      at\norg.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1081)\n\n      at\norg.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:98)\n\n      at\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\n      at org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\n      at\norg.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:82)\n\n      at\norg.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:147)\n\n      at\norg.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)\n\n      at\norg.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:94)\n\n      at\norg.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:75)\n\n      at\norg.eclipse.jdt.internal.ui.text.JavaReconciler.process(JavaReconciler.java:339)\n\n      at\norg.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:204)\n\n \n",
    "We have fixes for most of the problems with JAX-WS. Unfortunately, there is a\nremaining difficulty, which is that the JAX-WS annotation processor stores and\nreads static data that prevents it from being used incrementally.\n\nWe\u0027re considering creating a compatibility mode inside our implementation\nallowing processors that are written in this way to function as a batch\nprocessor once per clean build.\n\nIan, if you could only use the JAX-WS annotation processor in Eclipse during a\nclean build, would that still be useful to you?",
    "Yes I believe so, that would be similar to the way I currently weave in the ant\nscripts to run APT directly. How would the configuration work? I assume the\nbatch mode would need to be selected for particular generators only, rather than\nas a global setting?",
    "Yes, we\u0027ll need to modify the UI so that it\u0027s possible to make a particular\nprocessor or processors run only in batch mode. It won\u0027t be a global setting.",
    "Status update:\nAPT batch dispatch support is in place. Reconcile dispatch is disabled for \nbatch processors. \n\nRemaining items:\n1) Need UI \n2) Need to bounce class loaders after clean\n3) Need to generated IMarker instead of IProblem during batch dispatch. \n\nIn short, the jax-ws samples/annotations/src/annotation/server test case \nshould work properly in eclipse at the first clean build. \n",
    "I am having problems compiling at the moment, should I still be using the APT\nbranches of the jdt.core projects?\n\nin AptCompilationParticipant.java \n\nimport org.eclipse.jdt.core.compiler.PreReconcileCompilationEvent;\nimport org.eclipse.jdt.core.compiler.PreReconcileCompilationResult;\n\nare reported as \"cannot be resolved\".\n\nI think I have \u0027uptodated\u0027 everything I needed previously?",
    "Ah, sorry about that. I made a change to both jdt.core and jdt.apt, but I don\u0027t\nhave permissions on the jdt.core branch, so they\u0027re out of synch at the moment.\nWaiting for some jdt folks to check in the change I submitted. I\u0027ll add a\ncomment to this bug once that happens.",
    "Okay, the jdt.core patch has been applied in CVS. You should be able to sync up\nand build without errors.",
    "The classloader issues should be completely solved at this point, and the UI\nfeatures an advanced dialog for setting certain processors (factory path\nentries, really) into batch mode.\n\nHowever, our rounding model is not quite right. The JAX-WS processors don\u0027t seem\nto get a chance to participate in processing the generated files during a batch\nbuild. Assigning to Theodora to investigate.",
    "Ian-\nThis may sound silly but does samples/annotations works under Sun\u0027s APT? \nI tried running it with Sun\u0027s APT from JDK 1.5.0_04, and got 5 errors. It \nappears that  AddNumbersIFService, AddNumbers an AddNumbersException_Exception \ndidn\u0027t get generated. Thanks.\n\nFactory com.sun.istack.ws.AnnotationProcessorFactoryImpl matches nothing.\nwarning: Annotation types without processors: \n[javax.xml.bind.annotation.XmlRootElement, javax.xml.b\nind.annotation.XmlAccessorType, javax.xml.bind.annotation.XmlType]\n1 warning\nsamples\\annotations\\src\\annotations\\client\\AddNumbersClient.java:15: cannot \nfind symbol\nsymbol  : class AddNumbersIFService\nlocation: class annotations.client.AddNumbersClient\n            AddNumbersIFService service \u003d (AddNumbersIFService)\nserviceFactory.createService((java.ne\nt.URL)null, AddNumbersIFService.class);\n            ^\nsamples\\annotations\\src\\annotations\\client\\AddNumbersClient.java:15: cannot \nfind symbol\nsymbol  : class AddNumbersIFService\nlocation: class annotations.client.AddNumbersClient\n            AddNumbersIFService service \u003d (AddNumbersIFService)\nserviceFactory.createService((java.ne\nt.URL)null, AddNumbersIFService.class);\n                                           ^\nsamples\\annotations\\src\\annotations\\client\\AddNumbersClient.java:15: cannot \nfind symbol\nsymbol  : class AddNumbersIFService\nlocation: class annotations.client.AddNumbersClient\n            AddNumbersIFService service \u003d (AddNumbersIFService)\nserviceFactory.createService((java.ne\nt.URL)null, AddNumbersIFService.class);\n\n            ^\nsamples\\annotations\\src\\annotations\\client\\AddNumbersClient.java:16: cannot \nfind symbol\nsymbol  : class AddNumbers\nlocation: class annotations.client.AddNumbersClient\n            AddNumbers port \u003d service.getAddNumbers();\n            ^\nsamples\\annotations\\src\\annotations\\client\\AddNumbersClient.java:32: cannot \nfind symbol\nsymbol  : class AddNumbersException_Exception\nlocation: class annotations.client.AddNumbersClient\n                } catch (AddNumbersException_Exception ex) {\n                         ^\n5 errors",
    "Hi Theodora,\n   I am using the sun 1.5.0_04 tooling (including APT), I have chopped the\nsample around a bit, creating two separate eclipse projects, client and server,\nbuilding using the com.sun.tools.ws.ant tasks to do the build.\n\nThe classes you mention exist in my generated output for the client. Do I\nremember that you have to do something special in the original sample build to\ngenerate the client components?\n\nI have successfully built and deployed using this setup.\n\nHope this helps",
    "Ian-\nWhat are the exact ant targets you ran? I ran the \"server\" target from \nsamples/annotations/build.xml which basically did a \"clean\", \"build-server-\njar\", \"create_war\" and \"deploy\". The build-server only ran APT over java file \nunder server. \n\nIt would be helpful to know which ant target resulted in the creation of \nAddNumbersIFService, AddNumbers an AddNumbersException_Exception. \n\nthanks",
    "\nI finally get the samples/annotation example to build properly. No compile \ntime error and generated 4 files. \nThe 3 client java files (that i was having trouble with) are generated by the \nwsimport ant task that comes with the jax-ws bundle. \nI have not tried to figure out what the wsimport ant task does but the fact \nthat it requires an App Server _with_ jax-ws installed to run simply put this \noutside the boundary of APT.\n\nIf there is a repro that involve only commandline APT, I would love to know \nabout it and fix any problems that our implementation may have. \n\nCurrently, our implementation\u0027s behavior matches exactly what Sun\u0027s \nimplementation does. The 3 client files do not get generated and resulted in \ncompile time error on samples/annotations/client/AddNumbersClient.java.\n\nThe apt command used is as follow.\n\napt \"-And\u003dC:\\perforce\\runtime\\jax-ws annotations\\samples\\annotations\\bin\" -\nsourcepath samples\\annotations\\src -s samples\\annotations\\genSrc -d \nsamples\\annotations\\bin -\nclasspath \"samples\\annotations\\bin;lib\\activation.jar;lib\\FastInfoset.jar;lib\\j\naxb-api.jar;lib\\jaxb-impl.jar;lib\\jaxb-libs.jar;lib\\jaxb-xjc.jar;lib\\jaxws-\napi.jar;lib\\jaxws-rt.jar;lib\\jaxws-tools.jar;lib\\jsr173_api.jar;lib\\jsr181-\napi.jar;lib\\relaxngDatatype.jar;lib\\saaj-api.jar;lib\\saaj-\nimpl.jar;lib\\sjsxp.jar\" -\nfactorypath \"samples\\annotations\\bin;lib\\activation.jar;lib\\FastInfoset.jar;lib\n\\jaxb-api.jar;lib\\jaxb-impl.jar;lib\\jaxb-libs.jar;lib\\jaxb-xjc.jar;lib\\jaxws-\napi.jar;lib\\jaxws-rt.jar;lib\\jaxws-tools.jar;lib\\jsr173_api.jar;lib\\jsr181-\napi.jar;lib\\relaxngDatatype.jar;lib\\saaj-api.jar;lib\\saaj-\nimpl.jar;lib\\sjsxp.jar\" samples\\annotations\\src\\annotations\\server\\*.java \nsamples\\annotations\\src\\annotations\\client\\*.java\n\n\nAgain, if there is a repro that involves only APT, I would love to know about \nit. (Don\u0027t know why i managed to not get any errors before.)\nWill be closing this bug after i check in a few changes. ",
    "Fixed any problem with APT itself but the project will not build in Eclipse as \nit requires a running AppServer with jax-ws installed.\n\n"
  ],
  "commentCreationDates": [
    "2005-08-09T20:54:34+02:00",
    "2005-08-10T20:16:25+02:00",
    "2005-08-12T00:06:37+02:00",
    "2005-08-16T02:51:39+02:00",
    "2005-08-16T12:31:52+02:00",
    "2005-08-17T02:22:25+02:00",
    "2005-08-23T00:42:50+02:00",
    "2005-08-23T13:01:57+02:00",
    "2005-08-23T18:03:31+02:00",
    "2005-08-23T22:50:14+02:00",
    "2005-10-26T00:42:42+02:00",
    "2005-10-27T04:27:56+02:00",
    "2005-10-27T10:49:44+02:00",
    "2005-10-27T22:47:48+02:00",
    "2005-10-28T00:36:28+02:00",
    "2005-10-29T03:30:31+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "javax.jws.soap.SOAPBinding$Style",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:403"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:78"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.declaration.AnnotationMirrorImpl.getReflectionValue",
          "source": "AnnotationMirrorImpl.java:265"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.declaration.AnnotationMirrorImpl.getReflectionValue",
          "source": "AnnotationMirrorImpl.java:242"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.invoke",
          "source": "AnnotationInvocationHandler.java:92"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "106541",
      "date": "2005-08-09T20:54:34+02:00",
      "product": "JDT",
      "component": "APT",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "com.sun.tools.xjc.api.Reference.\u003cinit\u003e",
          "source": "Reference.java:65"
        },
        {
          "method": "com.sun.tools.xjc.api.Reference.\u003cinit\u003e",
          "source": "Reference.java:57"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.AnnotationProcessorContext$SEIContext.addReference",
          "source": "AnnotationProcessorContext.java:262"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceReferenceCollector.collectExceptionBeans",
          "source": "WebServiceReferenceCollector.java:112"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceReferenceCollector.processMethod",
          "source": "WebServiceReferenceCollector.java:94"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitMethodDeclaration",
          "source": "WebServiceVisitor.java:300"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.declaration.MethodDeclarationImpl.accept",
          "source": "MethodDeclarationImpl.java:46"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.processMethods",
          "source": "WebServiceVisitor.java:268"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.postProcessWebService",
          "source": "WebServiceVisitor.java:249"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitInterfaceDeclaration",
          "source": "WebServiceVisitor.java:104"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.declaration.InterfaceDeclarationImpl.accept",
          "source": "InterfaceDeclarationImpl.java:35"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.inspectEndpointInterface",
          "source": "WebServiceVisitor.java:294"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceVisitor.visitClassDeclaration",
          "source": "WebServiceVisitor.java:119"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.declaration.ClassDeclarationImpl.accept",
          "source": "ClassDeclarationImpl.java:43"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceAP.completeModel",
          "source": "WebServiceAP.java:387"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceAP.process",
          "source": "WebServiceAP.java:240"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT",
          "source": "APTDispatchRunnable.java:188"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run",
          "source": "APTDispatchRunnable.java:138"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1719"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT",
          "source": "APTDispatch.java:79"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringBuild",
          "source": "APTDispatch.java:43"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.preBuildNotify",
          "source": "AptCompilationParticipant.java:126"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify",
          "source": "AptCompilationParticipant.java:85"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.notifyCompilationParticipants",
          "source": "AbstractImageBuilder.java:258"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:475"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:199"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:52"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:215"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:138"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:593"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:202"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:231"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:234"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:253"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:282"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.build",
          "source": "Workspace.java:211"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.util.CoreUtility$BuildJob.run",
          "source": "CoreUtility.java:146"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "106541",
      "date": "2005-08-12T00:06:37+02:00",
      "product": "JDT",
      "component": "APT",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "type, public final class java.lang.Class        extends java.lang.Object        implements : java.io.Serializable, Unresolved type java.lang.reflect.GenericDeclaration, Unresolved type java.lang.reflect.Type, Unresolved type java.lang.reflect.AnnotatedElement  /*   fields   */  int ANNOTATION  int ENUM  int SYNTHETIC  Constructor\u003cT\u003e cachedConstructor  Class#RAW newInstanceCallerCache  java.lang.String name  Unresolved type java.security.ProtectionDomain allPermDomain  boolean useCaches  Unresolved type java.lang.ref.SoftReference declaredFields  Unresolved type java.lang.ref.SoftReference publicFields  Unresolved type java.lang.ref.SoftReference declaredMethods  Unresolved type java.lang.ref.SoftReference publicMethods  Unresolved type java.lang.ref.SoftReference declaredConstructors  Unresolved type java.lang.ref.SoftReference publicConstructors  Unresolved type java.lang.ref.SoftReference declaredPublicFields  Unresolved type java.lang.ref.SoftReference declaredPublicMethods  Unresolved type sun.reflect.generics.repository.ClassRepository genericInfo  long serialVersionUID  Unresolved type java.io.ObjectStreamField[] serialPersistentFields  Unresolved type sun.reflect.ReflectionFactory reflectionFactory  boolean initted  T[] enumConstants  Map\u003cjava.lang.String,T\u003e enumConstantDirectory  Unresolved type java.lang.annotation.Annotation[] EMPTY_ANNOTATIONS_ARRAY  Map\u003cClass#RAW,Unresolved type java.lang.annotation.Annotation\u003e annotations  Map\u003cClass#RAW,Unresolved type java.lang.annotation.Annotation\u003e declaredAnnotations  Unresolved type sun.reflect.annotation.AnnotationType annotationType  /*   methods   */  void registerNatives()   void \u003cinit\u003e()   java.lang.String toString()   Class\u003c?\u003e forName(java.lang.String) throws Unresolved type java.lang.ClassNotFoundException  Class\u003c?\u003e forName(java.lang.String, boolean, Unresolved type java.lang.ClassLoader) throws Unresolved type java.lang.ClassNotFoundException  Class#RAW forName0(java.lang.String, boolean, Unresolved type java.lang.ClassLoader) throws Unresolved type java.lang.ClassNotFoundException  T newInstance() throws Unresolved type java.lang.InstantiationException, Unresolved type java.lang.IllegalAccessException  T newInstance0() throws Unresolved type java.lang.InstantiationException, Unresolved type java.lang.IllegalAccessException  boolean isInstance(java.lang.Object)   boolean isAssignableFrom(Class\u003c?\u003e)   boolean isInterface()   boolean isArray()   boolean isPrimitive()   boolean isAnnotation()   boolean isSynthetic()   java.lang.String getName()   java.lang.String getName0()   Unresolved type java.lang.ClassLoader getClassLoader()   Unresolved type java.lang.ClassLoader getClassLoader0()   TypeVariable\u003cClass\u003cT\u003e\u003e[] getTypeParameters()   Class\u003c? super T\u003e getSuperclass()   Unresolved type java.lang.reflect.Type getGenericSuperclass()   Unresolved type java.lang.Package getPackage()   Class#RAW[] getInterfaces()   Unresolved type java.lang.reflect.Type[] getGenericInterfaces()   Class\u003c?\u003e getComponentType()   int getModifiers()   java.lang.Object[] getSigners()   void setSigners(java.lang.Object[])   Unresolved type java.lang.reflect.Method getEnclosingMethod()   java.lang.Object[] getEnclosingMethod0()   Unresolved type java.lang.Class$EnclosingMethodInfo getEnclosingMethodInfo()   Class#RAW toClass(Unresolved type java.lang.reflect.Type)   Constructor\u003c?\u003e getEnclosingConstructor()   Class\u003c?\u003e getDeclaringClass()   Class\u003c?\u003e getEnclosingClass()   java.lang.String getSimpleName()   boolean isAsciiDigit(char)   java.lang.String getCanonicalName()   boolean isAnonymousClass()   boolean isLocalClass()   boolean isMemberClass()   java.lang.String getSimpleBinaryName()   boolean isLocalOrAnonymousClass()   Class#RAW[] getClasses()   Unresolved type java.lang.reflect.Field[] getFields() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Method[] getMethods() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Constructor[] getConstructors() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Field getField(java.lang.String) throws Unresolved type java.lang.NoSuchFieldException, Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Method getMethod(java.lang.String, Class#RAW[]) throws Unresolved type java.lang.NoSuchMethodException, Unresolved type java.lang.SecurityException  Constructor\u003cT\u003e getConstructor(Class#RAW[]) throws Unresolved type java.lang.NoSuchMethodException, Unresolved type java.lang.SecurityException  Class#RAW[] getDeclaredClasses() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Field[] getDeclaredFields() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Method[] getDeclaredMethods() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Constructor[] getDeclaredConstructors() throws Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Field getDeclaredField(java.lang.String) throws Unresolved type java.lang.NoSuchFieldException, Unresolved type java.lang.SecurityException  Unresolved type java.lang.reflect.Method getDeclaredMethod(java.lang.String, Class#RAW[]) throws Unresolved type java.lang.NoSuchMethodException, Unresolved type java.lang.SecurityException  Constructor\u003cT\u003e getDeclaredConstructor(Class#RAW[]) throws Unresolved type java.lang.NoSuchMethodException, Unresolved type java.lang.SecurityException  Unresolved type java.io.InputStream getResourceAsStream(java.lang.String)   Unresolved type java.net.URL getResource(java.lang.String)   Unresolved type java.security.ProtectionDomain getProtectionDomain()   Unresolved type java.security.ProtectionDomain getProtectionDomain0()   void setProtectionDomain0(Unresolved type java.security.ProtectionDomain)   Class#RAW getPrimitiveClass(java.lang.String)   void checkMemberAccess(int, Unresolved type java.lang.ClassLoader)   java.lang.String resolveName(java.lang.String)   java.lang.String getGenericSignature()   Unresolved type sun.reflect.generics.factory.GenericsFactory getFactory()   Unresolved type sun.reflect.generics.repository.ClassRepository getGenericInfo()   byte[] getRawAnnotations()   Unresolved type sun.reflect.ConstantPool getConstantPool()   Unresolved type java.lang.reflect.Field[] privateGetDeclaredFields(boolean)   Unresolved type java.lang.reflect.Field[] privateGetPublicFields(Unresolved type java.util.Set)   void addAll(Unresolved type java.util.Collection, Unresolved type java.lang.reflect.Field[])   Unresolved type java.lang.reflect.Constructor[] privateGetDeclaredConstructors(boolean)   Unresolved type java.lang.reflect.Method[] privateGetDeclaredMethods(boolean)   Unresolved type java.lang.reflect.Method[] privateGetPublicMethods()   Unresolved type java.lang.reflect.Field searchFields(Unresolved type java.lang.reflect.Field[], java.lang.String)   Unresolved type java.lang.reflect.Field getField0(java.lang.String) throws Unresolved type java.lang.NoSuchFieldException  Unresolved type java.lang.reflect.Method searchMethods(Unresolved type java.lang.reflect.Method[], java.lang.String, Class#RAW[])   Unresolved type java.lang.reflect.Method getMethod0(java.lang.String, Class#RAW[])   Constructor\u003cT\u003e getConstructor0(Class#RAW[], int) throws Unresolved type java.lang.NoSuchMethodException  boolean arrayContentsEq(java.lang.Object[], java.lang.Object[])   Unresolved type java.lang.reflect.Field[] copyFields(Unresolved type java.lang.reflect.Field[])   Unresolved type java.lang.reflect.Method[] copyMethods(Unresolved type java.lang.reflect.Method[])   Unresolved type java.lang.reflect.Constructor[] copyConstructors(Unresolved type java.lang.reflect.Constructor[])   Unresolved type java.lang.reflect.Field[] getDeclaredFields0(boolean)   Unresolved type java.lang.reflect.Method[] getDeclaredMethods0(boolean)   Unresolved type java.lang.reflect.Constructor[] getDeclaredConstructors0(boolean)   Class#RAW[] getDeclaredClasses0()   java.lang.String argumentTypesToString(Class#RAW[])   boolean desiredAssertionStatus()   boolean desiredAssertionStatus0(Class#RAW)   boolean isEnum()   Unresolved type sun.reflect.ReflectionFactory getReflectionFactory()   void checkInitted()   T[] getEnumConstants()   Map\u003cjava.lang.String,T\u003e enumConstantDirectory()   T cast(java.lang.Object)   Class\u003c? extends U\u003e asSubclass(Class\u003cU\u003e)   A getAnnotation(Class\u003cA\u003e)   boolean isAnnotationPresent(Class\u003c? extends Unresolved type java.lang.annotation.Annotation\u003e)   Unresolved type java.lang.annotation.Annotation[] getAnnotations()   Unresolved type java.lang.annotation.Annotation[] getDeclaredAnnotations()   void initAnnotationsIfNecessary()   void setAnnotationType(Unresolved type sun.reflect.annotation.AnnotationType)   Unresolved type sun.reflect.annotation.AnnotationType getAnnotationType()   /*   members   */  Unresolved type java.lang.Class$EnclosingMethodInfo  Unresolved type java.lang.Class$MethodArray        , require 1 type arguments but found 0",
      "elements": [
        {
          "method": "org.eclipse.jdt.apt.core.internal.util.TypesUtil.getDeclaredType",
          "source": "TypesUtil.java:165"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.util.TypesUtil.getDeclaredType",
          "source": "TypesUtil.java:182"
        },
        {
          "method": "com.sun.tools.jxc.model.nav.APTNavigator.ref",
          "source": "APTNavigator.java:181"
        },
        {
          "method": "com.sun.tools.jxc.model.nav.APTNavigator.ref",
          "source": "APTNavigator.java:45"
        },
        {
          "method": "com.sun.xml.bind.v2.model.impl.BuiltinLeafInfoImpl.createLeaves",
          "source": "BuiltinLeafInfoImpl.java:47"
        },
        {
          "method": "com.sun.xml.bind.v2.model.impl.ModelBuilder.createTypeInfoSet",
          "source": "ModelBuilder.java:86"
        },
        {
          "method": "com.sun.xml.bind.v2.model.impl.ModelBuilder.\u003cinit\u003e",
          "source": "ModelBuilder.java:82"
        },
        {
          "method": "com.sun.tools.xjc.api.impl.j2s.JavaCompilerImpl.bind",
          "source": "JavaCompilerImpl.java:39"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceAP.completeModel",
          "source": "WebServiceAP.java:402"
        },
        {
          "method": "com.sun.tools.ws.processor.modeler.annotation.WebServiceAP.process",
          "source": "WebServiceAP.java:240"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT",
          "source": "APTDispatchRunnable.java:188"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run",
          "source": "APTDispatchRunnable.java:138"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1719"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT",
          "source": "APTDispatch.java:79"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringReconcile",
          "source": "APTDispatch.java:55"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.postReconcileNotify",
          "source": "AptCompilationParticipant.java:188"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify",
          "source": "AptCompilationParticipant.java:88"
        },
        {
          "method": "org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.notifyCompilationParticipants",
          "source": "ReconcileWorkingCopyOperation.java:144"
        },
        {
          "method": "org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation",
          "source": "ReconcileWorkingCopyOperation.java:58"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:718"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:777"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.reconcile",
          "source": "CompilationUnit.java:1081"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run",
          "source": "JavaReconcilingStrategy.java:98"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile",
          "source": "JavaReconcilingStrategy.java:82"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile",
          "source": "JavaReconcilingStrategy.java:147"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile",
          "source": "CompositeReconcilingStrategy.java:86"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile",
          "source": "JavaCompositeReconcilingStrategy.java:94"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.MonoReconciler.process",
          "source": "MonoReconciler.java:75"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.JavaReconciler.process",
          "source": "JavaReconciler.java:339"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run",
          "source": "AbstractReconciler.java:204"
        }
      ],
      "number": 2,
      "commentIndex": 2,
      "bugId": "106541",
      "date": "2005-08-12T00:06:37+02:00",
      "product": "JDT",
      "component": "APT",
      "severity": "major"
    }
  ],
  "groupId": "106541",
  "bugId": "106541",
  "date": "2005-08-09T20:54:34+02:00",
  "product": "JDT",
  "component": "APT",
  "severity": "major"
}