{
  "comments": [
    "The following code doesn\u0027t work in Ajc 1.1.1, in Ajc built from CVS HEAD (as \nof yesterday), nor in Ajc 1.0.6:\n\nOutput:\nC:\\devel\\test\\excHandling\u003ejava AfterThrowingCtor\nException in thread \"main\" java.lang.IllegalStateException: crash\n        at Foo.initVal(AfterThrowingCtor.java:21)\n        at AfterThrowingCtor.ajc$interFieldInit$AfterThrowingCtor$Foo$val\n(AfterT\nhrowingCtor.java:9)\n        at Foo.\u003cinit\u003e(AfterThrowingCtor.java:13)\n        at AfterThrowingCtor.main(AfterThrowingCtor.java:6)\n\nCorrect Output:\nthrew java.lang.IllegalStateException: crash at execution(Foo())\nException in thread \"main\" java.lang.IllegalStateException: crash\n        at Foo.initVal(AfterThrowingCtor.java:21)\n        at AfterThrowingCtor.ajc$interFieldInit$AfterThrowingCtor$Foo$val\n(AfterT\nhrowingCtor.java:9)\n        at Foo.\u003cinit\u003e(AfterThrowingCtor.java:13)\n        at AfterThrowingCtor.main(AfterThrowingCtor.java:6)\n\nInput source:\npublic aspect AfterThrowingCtor {\n    after() throwing (Throwable t) : execution(Foo.new(..)) {\n\tSystem.err.println(\"threw \"+t+\" at \"+thisJoinPointStaticPart);\n    }\n    public static void main(String args[]) {\n\tnew Foo();\n    }\n\n    private Object Foo.val \u003d Foo.initVal();\n}\n\nclass Foo {\n    Foo() { \n    }\n\n    // if you uncomment this line and comment out the inter-type decl.\n    // the advice runs correctly\n    //private Object val \u003d initVal();\n\n    static Object initVal() {\n\tthrow new IllegalStateException(\"crash\"); \n    }\n}\n---\n\nAspectJ 1.1.1 runs the after throwing advice correctly if the field is \ndeclared normally (AspectJ 1.0.6 fails to do even this).",
    "This is a subtle problem.\n\nThe issue surrounds the treatment of field initialization with respect to the \nscope of execution and initialization join points. \n\nField initialization within a class was considered part of the constructor \nexecution join point with the change to 1.1 (see\nhttp://dev.eclipse.org/viewcvs/indextech.\ncgi/~checkout~/aspectj-home/doc/README-11.html#CONSTRUCTOR_EXECUTION_IS_BIGGER\n) as there was no principled way in bytecode to detect otherwise.\n\nField initialization outside of the class is not considered part of the \nconstructor execution join point (the field belongs to the aspect), so it is \ncorrect that the advice does not run. Changing the advice to initialization \nrather than execution will cause it to execute in both cases.\n\nSee the test case in tests/bugs/AfterThrowingCtor.java for an example that \nillustrates both of these cases."
  ],
  "commentCreationDates": [
    "2003-10-09T19:53:43+02:00",
    "2004-01-13T16:16:52+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "crash",
      "elements": [
        {
          "method": "Foo.initVal",
          "source": "AfterThrowingCtor.java:21"
        },
        {
          "method": "AfterThrowingCtor.ajc$interFieldInit$AfterThrowingCtor$Foo$val",
          "source": "AfterT hrowingCtor.java:9"
        },
        {
          "method": "Foo.\u003cinit\u003e",
          "source": "AfterThrowingCtor.java:13"
        },
        {
          "method": "AfterThrowingCtor.main",
          "source": "AfterThrowingCtor.java:6"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "44586",
      "date": "2003-10-09T19:53:43+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "crash",
      "elements": [
        {
          "method": "Foo.initVal",
          "source": "AfterThrowingCtor.java:21"
        },
        {
          "method": "AfterThrowingCtor.ajc$interFieldInit$AfterThrowingCtor$Foo$val",
          "source": "AfterT hrowingCtor.java:9"
        },
        {
          "method": "Foo.\u003cinit\u003e",
          "source": "AfterThrowingCtor.java:13"
        },
        {
          "method": "AfterThrowingCtor.main",
          "source": "AfterThrowingCtor.java:6"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "44586",
      "date": "2003-10-09T19:53:43+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "44586",
  "bugId": "44586",
  "date": "2003-10-09T19:53:43+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}