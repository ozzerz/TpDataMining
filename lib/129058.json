{
  "comments": [
    "This is related to\n\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d129055\n\nPlease look at that bug to understand how the environment is setup to reproduce this bug.\n\nThe framework stops coming DOWN when this situation is found.  We have a test runner that sets the start level to zero when the tests have completed.  In this case, the tests run to completion, but the framework never comes down, since it is stopped at the bundle advertising the factory component and the components derived from the factory.\n\nI have a println in the bundle Activator.deactivate call in the bundle where the two components are defined.  (The two components are the component created via the DS factory, and the \"manager\" component, that is used to call \"newInstance\" and \"instance.dispose()\".\n\nWhat I see is that the (?two?) component instances started have their \"deactivate\" called.  However, the factory never has deactivate called, nor does the bundle Activator.deactivate get called.  And even worse, the rest of the bundles further below the start level of this bundle never get stopped.  Hence, my test never finishes (we check the state of some things when the bundles are coming down in the test, but it never gets there).\n\nI have found a workaround.  In my test I never \"disposed\" of the component service.  If I modified the test to \"dispose\" of the instance *before* the framework started to come down (in other words, the \"manager\" component calls \"instance.dispose()\" on every instance it has created) then the framework comes down properly.\n\nStill, it seems like this should not be necessary...",
    "I am now seeing the following stack trace (because I installed an Equinox hook that printed out framework stack traces:)\n\njava.lang.NullPointerException\n\tat org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.releaseService(ServiceRegistrationImpl.java:431)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.close(BundleContextImpl.java:151)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:399)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend(AbstractBundle.java:502)\n\tat org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1067)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:619)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:283)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:256)\n\tat org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:190)\n\tat org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:537)\n\tat org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:171)\n\tat java.lang.Thread.run(Thread.java:595)",
    "This may be a framework issue.  Investigate for RC1.",
    "John, do you have an example bundle that uses DS and can reproduce this problem?  Are they the same as the ones attached to bug 129055?  It would help me to have a testcase and steps to reproduce this.",
    "Yes, the testcase attached to bug 129055 is the reproducer of this problem.  The trouble that since that bug has been fixed I haven\u0027t seen this bug either ;-)\n\nYou may need to revert back to the earlier version of DS in order to reproduce this problem (easily).",
    "I added a simple null check to avoid the NPE.  This situation can occur if the registrant bundle is listening for when users unget their service and then they endup unregistering their own service.  In this case it is DS that is doing the work for the factory and it ends up unregistering the service which nulls out the contextsUsing field."
  ],
  "commentCreationDates": [
    "2006-02-22T21:17:57+01:00",
    "2006-03-30T15:27:11+02:00",
    "2006-04-08T17:22:02+02:00",
    "2006-04-11T23:40:35+02:00",
    "2006-04-12T01:39:24+02:00",
    "2006-04-18T16:02:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.releaseService",
          "source": "ServiceRegistrationImpl.java:431"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.close",
          "source": "BundleContextImpl.java:151"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker",
          "source": "BundleHost.java:399"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend",
          "source": "AbstractBundle.java:502"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.suspendBundle",
          "source": "Framework.java:1067"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL",
          "source": "StartLevelManager.java:619"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel",
          "source": "StartLevelManager.java:283"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown",
          "source": "StartLevelManager.java:256"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle.suspend",
          "source": "SystemBundle.java:190"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.shutdown",
          "source": "Framework.java:537"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle$1.run",
          "source": "SystemBundle.java:171"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "129058",
      "date": "2006-03-30T15:27:11+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "129058",
  "bugId": "129058",
  "date": "2006-02-22T21:17:57+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}