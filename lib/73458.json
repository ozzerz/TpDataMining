{
  "comments": [
    "Using build M09080800, I got a problem trying to run my RCP application using\n-data @none on the command line.\nEclipse is crashing providing the following log in the configuration area. No\ndialog opens saying where to look for the log file.\nIt got no build id.\n\n!SESSION sept. 08, 2004 11:27:31.426 -------------------------------------------\neclipse.buildId\u003dunknown\njava.version\u003d1.4.2_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dfr_CA\n\n!ENTRY org.eclipse.ui 4 4 sept. 08, 2004 11:27:31.426\n!MESSAGE Unhandled event loop exception\n\n!ENTRY org.eclipse.ui 4 0 sept. 08, 2004 11:27:31.436\n!MESSAGE No instance data can be specified.\n!STACK 0\njava.lang.IllegalStateException: No instance data can be specified.\n\tat\norg.eclipse.core.internal.runtime.DataArea.assertLocationInitialized(DataArea.java:38)\n\tat org.eclipse.core.internal.runtime.DataArea.getStateLocation(DataArea.java:76)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.getStateLocation(InternalPlatform.java:1061)\n\tat org.eclipse.core.runtime.Plugin.getStateLocation(Plugin.java:290)\n\tat\norg.eclipse.ui.internal.registry.PerspectiveRegistry.loadCustom(PerspectiveRegistry.java:350)\n\tat\norg.eclipse.ui.internal.registry.PerspectiveRegistry.load(PerspectiveRegistry.java:299)\n\tat\norg.eclipse.ui.internal.WorkbenchPlugin.getPerspectiveRegistry(WorkbenchPlugin.java:384)\n\tat org.eclipse.ui.internal.Workbench.getPerspectiveRegistry(Workbench.java:671)\n\tat org.eclipse.ui.internal.Workbench.openFirstTimeWindow(Workbench.java:993)\n\tat\norg.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow(WorkbenchConfigurer.java:174)\n\tat\norg.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:658)\n\tat org.eclipse.ui.internal.Workbench.init(Workbench.java:819)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1325)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat\norg.formulachess.chess.puzzles.FormulachessApplication.run(FormulachessApplication.java:17)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)",
    "While it would be nice to be able to run an RCP app without a workspace, there\nare currently several assumptions in the workbench and in other plug-ins that\nthere is a workspace present (e.g. the preference store, dialog store, various\nother metadata).  To do this effectively would require a concerted pass across\nthe workbench and other optional RCP components.\n\nOlivier, what do you have a particular scenario for running without a workspace?\n",
    "Not really. I was wondering why a workspace was created when I don\u0027t need it.\nI wanted to test this, because it is documented to be supported.\n\nA user case could be to run a demo of a RCP application from a CD-ROM. Right now\nbecause this is read-only, it won\u0027t work. Using -data @none should solve the\nproblem.\n\nI think this is a pretty big constraint for a RCP application to require a\nwritable location to be available.",
    "RE comment 2\n\nMy understanding is that the proper way to do a shared install is to make the \ninstallation area read-only (which should, in effect, be the same as running \nfrom cd rom).  I think that causes the runtime to create the configuration area \nin a writeable location (user\u0027s home dir on linux or somewhere in Documents and \nSettings on win).  I think that the default workspace is then created relative \nto that area.",
    "A writable area should not be required. I\u0027d like to run from a CD-ROM without\npoluting the hard drive. This is documented as possible, but it doesn\u0027t work.\nThis should clearly be stated somewhere in the release notes.",
    "Can you point to the doc that says this is possible?\n",
    "See the bottom of the page:\n\nhttp://help.eclipse.org/help30/index.jsp?\ntopic\u003d/org.eclipse.platform.doc.isv/reference/misc/runtime-options.html",
    "\"@none\n    Indicates that the corresponding location should never be set either\nexplicitly or to its default value. For example, an RCP style application which\nhas no user data may use osgi.instance.area\u003d@none to prevent extraneous files\nbeing written to disk. @none must not be followed by any additional path segments.\"\n\nI think when this was written it was more in the hypothetical sense \u003cg\u003e.\nThe Workbench still assumes in several places that there is an instance area.\n\nAndrew is looking into this for the workbench for 3.1.  Should also look at\nother plugins that we advertise as being optional RCP components.\n",
    "*** Bug 69387 has been marked as a duplicate of this bug. ***",
    "I\u0027ve submitted a fix to HEAD that lets the rcp browser and rcp tutorial (all 3) \nrun with -data @none.\n\nThe text editor example fails because of a dependency in the resources plugin.  \nI\u0027ve raised bug 75495 to track that problem.",
    "Closed this one too soon.\n\nRunning the RCP tutorial (part 3) with -data @noDefault causes an exception in \nthe PerspectiveRegistry.\n\nDataArea.assertLocationInitialized() line: 42\nDataArea.getStateLocation(Bundle) line: 76\nInternalPlatform.getStateLocation(Bundle, boolean) line: 1061\nWorkbenchPlugin(Plugin).getStateLocation() line: 290\nPerspectiveRegistry.loadCustom() line: 396\nPerspectiveRegistry.load() line: 335\nWorkbenchPlugin.getPerspectiveRegistry() line: 408\nWorkbench.getPerspectiveRegistry() line: 706\nChangeToPerspectiveMenu(PerspectiveMenu).\u003cinit\u003e(IWorkbenchWindow, String) line: \n98\nChangeToPerspectiveMenu.\u003cinit\u003e(IWorkbenchWindow, String) line: 36\nContributionItemFactory$6.create(IWorkbenchWindow) line: 202\nRcpWorkbenchAdvisor.createWindowMenu(IWorkbenchWindow) line: 97\n",
    "*** Bug 75495 has been marked as a duplicate of this bug. ***",
    "Was not able to get to this for M3.  Deferring to M4.\n",
    "Created an attachment (id\u003d16305)\npatch to allow @noDefault to work with the workbench\n\nThis patch only fixes the assumptions about an instance location existing and\ndoesn\u0027t fix the problem described in bug 80024. This will at least allow RCP\napplication to run with @noDefault and @none with the workbench plug-in. The\nside effect is that the workbench won\u0027t persist it\u0027s settings.\n\nA longer term solution is described in bug 80024.",
    "Will review this early in M5.\nIt may be better to have more explicit control over whether it uses the config\narea or instance area, rather than automatically falling back on the config area\nif the instance area is not present.",
    "The patch defines getDataLocation() in AbstractUIPlugin, making this API\navailable to all other plugins using AbstractUIPlugin.  Was this intended, or\nshould it be internal to the workbench?\n",
    "Jean-Michel, please see last post.\n",
    "It seems wrong for the workbench (or other plugins) to automatically switch to\nwriting their state to the config area if there is no instance area.\nThese two areas are intended for different purposes.  \n\nIf -data @none is specified, I think that should mean that no data should be\nwritten, not that it should be written to the config area instead.\n\nI will fix up getDataLocation() accordingly.\nPlease shout if you disagree.\n",
    "Actually, the config area code in getDataLocation() had already been commented\nout, but the Javadoc still mentioned it.  I\u0027ve fixed up the Javadoc.\n\n    /**\n     * Returns the path to a location in the file system that can be used \n     * to persist/restore state between workbench invocations.\n     * If the location did not exist prior to this call it will  be created.\n     * Returns \u003ccode\u003enull\u003c/code\u003e if no such location is available.\n     * \n     * @return path to a location in the file system where this plug-in can\n     * persist data between sessions, or \u003ccode\u003enull\u003c/code\u003e if no such\n     * location is available.\n     * @since 3.1\n     */\n",
    "Patch released.  Need to do some more checking to ensure other places aren\u0027t\nusing the instance area.\n",
    "The patch included code to switch to the config area - this is bogus. If there\nis no instance location then the Workbench can\u0027t save any settings. I think the\npatch fixed many areas in the workbench to work when there an instance location\nwasn\u0027t available. There should also be a log message warning that settings\naren\u0027t being saved.",
    "getDataLocation() is really just a convenience now for:\n  try {\n    return getStateLocation();\n  } catch (IllegalStateException e) {\n    return null;\n  }\n\nSo I\u0027m not convinced it deserves to be API on AbstractUIPlugin.\n",
    "concur, less API is better API",
    "+1 on removing the method on the plug-in class. It was only in the patch because\nof my initial investigation into persisting into the config area.",
    "Fixed.  getDataLocation() is no longer API (though it still exists as a public\nconvenience method on WorkbenchPlugin, which is internal).\n\nThere are no further references to getStateLocation() or getInstanceLocation()\nfrom within the generic workbench.  All calls to getDataLocation() correctly\nhandle null.\n\n",
    "Oliier, would you be able to verify this in the M5 test candidate?\n",
    "I\u0027ll try to find some time to test my chess rcp application using M5 candidate\nand let you know if it is creating some data.\nI\u0027ll annotate this PR when the testing is done.",
    "Verified using Browser example in I20050217-1602.",
    "I could not verify it. My code is not working with latest changes in RCP. It\nused to work and this is not the case anymore.",
    "All of the RCP changes in 3.1 should be backwards compatible.\nPlease file bugs or come grab me to show me the problem.\n"
  ],
  "commentCreationDates": [
    "2004-09-08T17:36:42+02:00",
    "2004-09-08T23:00:54+02:00",
    "2004-09-08T23:04:21+02:00",
    "2004-09-09T14:59:55+02:00",
    "2004-09-09T17:49:13+02:00",
    "2004-09-09T18:08:15+02:00",
    "2004-09-09T19:16:44+02:00",
    "2004-09-09T19:31:10+02:00",
    "2004-09-29T16:05:30+02:00",
    "2004-10-01T21:54:36+02:00",
    "2004-10-01T22:00:09+02:00",
    "2004-11-01T15:23:22+01:00",
    "2004-11-01T15:25:01+01:00",
    "2004-12-02T15:53:40+01:00",
    "2004-12-14T18:06:57+01:00",
    "2005-02-07T18:25:36+01:00",
    "2005-02-07T18:26:06+01:00",
    "2005-02-07T18:34:14+01:00",
    "2005-02-07T18:41:21+01:00",
    "2005-02-07T22:26:31+01:00",
    "2005-02-08T00:41:06+01:00",
    "2005-02-08T00:58:19+01:00",
    "2005-02-08T05:06:58+01:00",
    "2005-02-08T17:09:46+01:00",
    "2005-02-11T23:55:34+01:00",
    "2005-02-16T20:52:28+01:00",
    "2005-02-16T20:56:14+01:00",
    "2005-02-18T15:18:09+01:00",
    "2005-02-18T16:00:05+01:00",
    "2005-02-18T16:18:52+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "No instance data can be specified.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.DataArea.assertLocationInitialized",
          "source": "DataArea.java:38"
        },
        {
          "method": "org.eclipse.core.internal.runtime.DataArea.getStateLocation",
          "source": "DataArea.java:76"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.getStateLocation",
          "source": "InternalPlatform.java:1061"
        },
        {
          "method": "org.eclipse.core.runtime.Plugin.getStateLocation",
          "source": "Plugin.java:290"
        },
        {
          "method": "org.eclipse.ui.internal.registry.PerspectiveRegistry.loadCustom",
          "source": "PerspectiveRegistry.java:350"
        },
        {
          "method": "org.eclipse.ui.internal.registry.PerspectiveRegistry.load",
          "source": "PerspectiveRegistry.java:299"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.getPerspectiveRegistry",
          "source": "WorkbenchPlugin.java:384"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.getPerspectiveRegistry",
          "source": "Workbench.java:671"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.openFirstTimeWindow",
          "source": "Workbench.java:993"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow",
          "source": "WorkbenchConfigurer.java:174"
        },
        {
          "method": "org.eclipse.ui.application.WorkbenchAdvisor.openWindows",
          "source": "WorkbenchAdvisor.java:658"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:819"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1325"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:254"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.formulachess.chess.puzzles.FormulachessApplication.run",
          "source": "FormulachessApplication.java:17"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "73458",
      "date": "2004-09-08T17:36:42+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "73458",
  "bugId": "73458",
  "date": "2004-09-08T17:36:42+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}