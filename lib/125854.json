{
  "comments": [
    "When I tried to open an exiting View class with the visual editor, I got an internal error with the following stack trace. Obviously it\u0027s an endless loop in the toString method of PTInstanceReferenceImpl:\n\njava.lang.StackOverflowError\n\tat org.eclipse.jem.java.impl.JavaPackageImpl.getPackageName(JavaPackageImpl.java:83)\n\tat org.eclipse.jem.java.impl.JavaClassImpl.primGetQualifiedName(JavaClassImpl.java:1044)\n\tat org.eclipse.jem.java.impl.JavaClassImpl.getQualifiedName(JavaClassImpl.java:761)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:113)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n\tat org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat org.eclipse.jem.internal.instantiation.base.JavaInstance.toString(JavaInstance.java:121)\n\tat java.lang.String.valueOf(String.java:2577)\n\tat java.lang.StringBuffer.append(StringBuffer.java:220)\n...\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nThe View class:\n\npackage com.ottogroup.ek.wms.client.rcp.view.impl;\n\nimport java.util.List;\n\nimport org.eclipse.jface.action.Action;\nimport org.eclipse.jface.action.IMenuListener;\nimport org.eclipse.jface.action.IMenuManager;\nimport org.eclipse.jface.action.IToolBarManager;\nimport org.eclipse.jface.action.MenuManager;\nimport org.eclipse.jface.action.Separator;\nimport org.eclipse.jface.dialogs.MessageDialog;\nimport org.eclipse.jface.viewers.DoubleClickEvent;\nimport org.eclipse.jface.viewers.IDoubleClickListener;\nimport org.eclipse.jface.viewers.ISelection;\nimport org.eclipse.jface.viewers.IStructuredContentProvider;\nimport org.eclipse.jface.viewers.IStructuredSelection;\nimport org.eclipse.jface.viewers.ITableLabelProvider;\nimport org.eclipse.jface.viewers.LabelProvider;\nimport org.eclipse.jface.viewers.TableViewer;\nimport org.eclipse.jface.viewers.Viewer;\nimport org.eclipse.jface.viewers.ViewerSorter;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.graphics.Image;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Menu;\nimport org.eclipse.swt.widgets.Table;\nimport org.eclipse.swt.widgets.TableColumn;\nimport org.eclipse.ui.IActionBars;\nimport org.eclipse.ui.ISharedImages;\nimport org.eclipse.ui.IWorkbenchActionConstants;\nimport org.eclipse.ui.PlatformUI;\nimport org.eclipse.ui.part.ViewPart;\n\nimport com.ottogroup.ek.wms.client.rcp.controller.CatalogueController;\nimport com.ottogroup.ek.wms.client.rcp.view.CatalogueMasterView;\nimport com.ottogroup.ek.wms.domainobjects.catalogue.Catalogue;\n\npublic class CatalogueMasterViewImpl extends ViewPart implements CatalogueMasterView {\n\n  private TableViewer viewer;\n  private Action action1;\n  private Action action2;\n  private Action doubleClickAction;\n  private CatalogueController catalogueController \u003d null;\n  private List\u003cCatalogue\u003e catalogues \u003d null;\n  private String[] columnName \u003d { \"KA\", \"SAI\", \"Bezeichnung\", \"Auflage\", \"Versand\", \"Start\",\n      \"Ende\" };\n  private int[] columnAlign \u003d { SWT.TRAIL, SWT.LEAD, SWT.LEAD, SWT.LEAD, SWT.LEAD, SWT.LEAD, SWT.LEAD };\n  private int[] columnWidth \u003d { 100, 100, 100, 100, 100, 100, 100 };\n\n  /*\n   * The content provider class is responsible for providing objects to the\n   * view. It can wrap existing objects in adapters or simply return objects\n   * as-is. These objects may be sensitive to the current input of the view, or\n   * ignore it and always show the same content (like Task List, for example).\n   */\n\n  class ViewContentProvider implements IStructuredContentProvider {\n    public void inputChanged(Viewer v, Object oldInput, Object newInput) {\n    }\n\n    public void dispose() {\n    }\n\n    public Object[] getElements(Object parent) {\n      if (parent \u003d\u003d catalogues) {\n        return catalogues.toArray();\n      }\n      return null;\n    }\n  }\n  class ViewLabelProvider extends LabelProvider implements ITableLabelProvider {\n    public String getColumnText(Object obj, int index) {\n      String result \u003d \"\";\n      if (obj instanceof Catalogue) {\n        Catalogue cat \u003d (Catalogue) obj;\n        switch (index) {\n        case 0:\n          result \u003d getText(cat.getType());\n          break;\n        case 1:\n          result \u003d getText(cat.getSeason());\n          break;\n        case 2:\n          result \u003d getText(cat.getName());\n          break;\n        case 3:\n          result \u003d getText(cat.getRun());\n          break;\n        case 4:\n          result \u003d getText(cat.getDispatch());\n          break;\n        case 5:\n          result \u003d getText(cat.getStart());\n          break;\n        case 6:\n          result \u003d getText(cat.getEnd());\n          break;\n        }\n      }\n      return result;\n    }\n\n    public Image getColumnImage(Object obj, int index) {\n      return null;\n    }\n  }\n  class NameSorter extends ViewerSorter {\n  }\n\n  /**\n   * The constructor.\n   */\n  public CatalogueMasterViewImpl() {\n  }\n\n  /**\n   * This is a callback that will allow us to create the viewer and initialize\n   * it.\n   */\n  public void createPartControl(Composite parent) {\n    viewer \u003d new TableViewer(parent, SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);\n    viewer.setColumnProperties(columnName);\n    initTable(viewer.getTable());\n    viewer.setContentProvider(new ViewContentProvider());\n    viewer.setLabelProvider(new ViewLabelProvider());\n    viewer.setSorter(new NameSorter());\n    viewer.setInput(catalogues);\n    makeActions();\n    hookContextMenu();\n    hookDoubleClickAction();\n    contributeToActionBars();\n  }\n\n  private void initTable(Table table) {\n    TableColumn column \u003d null;\n    for (int i \u003d 0; i \u003c columnName.length; i++) {\n      column \u003d new TableColumn(table, columnAlign[i]);\n      column.setText(columnName[i]);\n      column.setWidth(columnWidth[i]);\n      column.setMoveable(true);\n    }\n    table.setHeaderVisible(true);\n  }\n\n  private void hookContextMenu() {\n    MenuManager menuMgr \u003d new MenuManager(\"#PopupMenu\");\n    menuMgr.setRemoveAllWhenShown(true);\n    menuMgr.addMenuListener(new IMenuListener() {\n      public void menuAboutToShow(IMenuManager manager) {\n        CatalogueMasterViewImpl.this.fillContextMenu(manager);\n      }\n    });\n    Menu menu \u003d menuMgr.createContextMenu(viewer.getControl());\n    viewer.getControl().setMenu(menu);\n    getSite().registerContextMenu(menuMgr, viewer);\n  }\n\n  private void contributeToActionBars() {\n    IActionBars bars \u003d getViewSite().getActionBars();\n    fillLocalPullDown(bars.getMenuManager());\n    fillLocalToolBar(bars.getToolBarManager());\n  }\n\n  private void fillLocalPullDown(IMenuManager manager) {\n    manager.add(action1);\n    manager.add(new Separator());\n    manager.add(action2);\n  }\n\n  private void fillContextMenu(IMenuManager manager) {\n    manager.add(action1);\n    manager.add(action2);\n    // Other plug-ins can contribute there actions here\n    manager.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS));\n  }\n\n  private void fillLocalToolBar(IToolBarManager manager) {\n    manager.add(action1);\n    manager.add(action2);\n  }\n\n  private void makeActions() {\n    action1 \u003d new Action() {\n      public void run() {\n        showMessage(\"Action 1 executed\");\n      }\n    };\n    action1.setText(\"Action 1\");\n    action1.setToolTipText(\"Action 1 tooltip\");\n    action1.setImageDescriptor(PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(\n        ISharedImages.IMG_OBJS_INFO_TSK));\n\n    action2 \u003d new Action() {\n      public void run() {\n        showMessage(\"Action 2 executed\");\n      }\n    };\n    action2.setText(\"Action 2\");\n    action2.setToolTipText(\"Action 2 tooltip\");\n    action2.setImageDescriptor(PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(\n        ISharedImages.IMG_OBJS_INFO_TSK));\n    doubleClickAction \u003d new Action() {\n      public void run() {\n        ISelection selection \u003d viewer.getSelection();\n        Object obj \u003d ((IStructuredSelection) selection).getFirstElement();\n        showMessage(\"Double-click detected on \" + obj.toString());\n      }\n    };\n  }\n\n  private void hookDoubleClickAction() {\n    viewer.addDoubleClickListener(new IDoubleClickListener() {\n      public void doubleClick(DoubleClickEvent event) {\n        doubleClickAction.run();\n      }\n    });\n  }\n\n  private void showMessage(String message) {\n    MessageDialog.openInformation(viewer.getControl().getShell(), \"Catalogue Master View\", message);\n  }\n\n  /**\n   * Passing the focus request to the viewer\u0027s control.\n   */\n  public void setFocus() {\n    viewer.getControl().setFocus();\n  }\n\n  public String getViewId() {\n    return ID;\n  }\n\n  public void setCatalogueController(CatalogueController catalogueController) {\n    this.catalogueController \u003d catalogueController;\n    catalogueController.setCatalogueMasterView(this);\n  }\n\n  public void setModel(List\u003cCatalogue\u003e catalogues) {\n    this.catalogues \u003d catalogues;\n    if (viewer !\u003d null) {\n      viewer.setInput(catalogues);\n    }\n  }\n}",
    "What version of Eclipse, VE, Gef, and EMF are you using?",
    "(In reply to comment #1)\n\u003e What version of Eclipse, VE, Gef, and EMF are you using?\n\u003e \n\nEclipse 3.1.1\nVE 1.1.0\nGEF 3.1.1\nEMF 2.1.2\n\nThe error log shows the following:\n\nProblems occurred when invoking code from plug-in: \"org.eclipse.ve.java.core\".\nWrapped exception\njava.io.FileNotFoundException: /forms/palette.xmi\n\tat org.eclipse.osgi.framework.internal.protocol.bundleentry.Handler.findBundleEntry(Handler.java:42)\n...\n***********\nException thrown.\nWrapped exception\norg.xml.sax.SAXParseException: Premature end of file.\n\tat com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)\n...\n***********\nInvalid PropertyDecorator\n***********\n\n+++ Warning +++: Wed Feb 01 09:10:33 CET 2006    Skipping expression: Menu menu \u003d menuMgr.createContextMenu(viewer.getControl())\n***********\nAn internal error occurred during: \"Visual Editor reverse parser\".\n...",
    "Try using the update manager and step up to VE 1.1.0.1. There have been many fixes between 1.1.0 and 1.1.0.1.",
    "(In reply to comment #3)\n\u003e Try using the update manager and step up to VE 1.1.0.1. There have been many\n\u003e fixes between 1.1.0 and 1.1.0.1.\n\u003e \n\nOkay, thanks. Now it works!",
    "Reopening because we track resolved fixed only for where we make code changes. Customer resolved are closed differently.",
    "Closing due to customer resolved.",
    "Not works for me :-( See attachment for log after running Ctrl+N - Visual class.\n\nEclipse SDK\nVersion: 3.2.0\nBuild id: I20051215-1506\n\nVisual Editor\nVersion: 1.1.0.1\nBuild id: 200509071822\n\nEclipse Graphical Editing Framework\nVersion: 3.1\nBuild id: 200509301327\n\nEclipse Modeling Framework (EMF) \nVersion: 2.1.2\nBuild id: 200601191349",
    "I have some problems while upload file, my stack trace is here:\n\nError 2006-02-06 16:51:43.862 Problems occurred when invoking code from plug-in: \"org.eclipse.ve.java.core\".\nWrapped exception\njava.io.FileNotFoundException: /forms/palette.xmi\n\tat org.eclipse.osgi.framework.internal.protocol.bundleentry.Handler.findBundleEntry(Handler.java:42)\n\tat org.eclipse.osgi.framework.internal.core.BundleResourceHandler.openConnection(BundleResourceHandler.java:157)\n\tat java.net.URL.openConnection(Unknown Source)\n\tat org.eclipse.core.internal.boot.PlatformURLConnection.connect(PlatformURLConnection.java:105)\n\tat org.eclipse.core.internal.boot.PlatformURLConnection.connect(PlatformURLConnection.java:86)\n\tat org.eclipse.core.internal.boot.PlatformURLConnection.getInputStream(PlatformURLConnection.java:224)\n\tat org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream(URIConverterImpl.java:557)\n\tat org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createInputStream(URIConverterImpl.java:446)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:829)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:249)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad(ProjectResourceSetImpl.java:83)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:264)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:349)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n\tat org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$DefaultVEContributor.contributePalleteCats(JavaVisualEditorPart.java:1144)\n\tat org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$8.run(JavaVisualEditorPart.java:1620)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:785)\n\tat org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup$CreateRegistry.run(JavaVisualEditorPart.java:1611)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\nWrapped by\norg.eclipse.emf.common.util.WrappedException: /forms/palette.xmi\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:272)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:349)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n\tat org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$DefaultVEContributor.contributePalleteCats(JavaVisualEditorPart.java:1144)\n\tat org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$8.run(JavaVisualEditorPart.java:1620)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:785)\n\tat org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup$CreateRegistry.run(JavaVisualEditorPart.java:1611)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "closing"
  ],
  "commentCreationDates": [
    "2006-01-31T16:17:13+01:00",
    "2006-01-31T16:46:57+01:00",
    "2006-02-01T08:11:40+01:00",
    "2006-02-01T14:51:22+01:00",
    "2006-02-03T08:41:37+01:00",
    "2006-02-03T15:00:31+01:00",
    "2006-02-03T15:00:55+01:00",
    "2006-02-06T15:09:38+01:00",
    "2006-02-06T15:17:43+01:00",
    "2006-04-07T19:44:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.jem.java.impl.JavaPackageImpl.getPackageName",
          "source": "JavaPackageImpl.java:83"
        },
        {
          "method": "org.eclipse.jem.java.impl.JavaClassImpl.primGetQualifiedName",
          "source": "JavaClassImpl.java:1044"
        },
        {
          "method": "org.eclipse.jem.java.impl.JavaClassImpl.getQualifiedName",
          "source": "JavaClassImpl.java:761"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:113"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstance.toString",
          "source": "JavaInstance.java:121"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "String.java:2577"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:220"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "125854",
      "date": "2006-01-31T16:17:13+01:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    },
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "/forms/palette.xmi",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.protocol.bundleentry.Handler.findBundleEntry",
          "source": "Handler.java:42"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "125854",
      "date": "2006-02-01T08:11:40+01:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    },
    {
      "exceptionType": "org.xml.sax.SAXParseException",
      "message": "Premature end of file.",
      "elements": [
        {
          "method": "com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException",
          "source": "ErrorHandlerWrapper.java:236"
        }
      ],
      "number": 2,
      "commentIndex": 2,
      "bugId": "125854",
      "date": "2006-02-01T08:11:40+01:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    },
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "/forms/palette.xmi",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.protocol.bundleentry.Handler.findBundleEntry",
          "source": "Handler.java:42"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleResourceHandler.openConnection",
          "source": "BundleResourceHandler.java:157"
        },
        {
          "method": "java.net.URL.openConnection",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.boot.PlatformURLConnection.connect",
          "source": "PlatformURLConnection.java:105"
        },
        {
          "method": "org.eclipse.core.internal.boot.PlatformURLConnection.connect",
          "source": "PlatformURLConnection.java:86"
        },
        {
          "method": "org.eclipse.core.internal.boot.PlatformURLConnection.getInputStream",
          "source": "PlatformURLConnection.java:224"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createURLInputStream",
          "source": "URIConverterImpl.java:557"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.URIConverterImpl.createInputStream",
          "source": "URIConverterImpl.java:446"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:829"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:249"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad",
          "source": "ProjectResourceSetImpl.java:83"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:264"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:349"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource",
          "source": "ProjectResourceSetImpl.java:262"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$DefaultVEContributor.contributePalleteCats",
          "source": "JavaVisualEditorPart.java:1144"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$8.run",
          "source": "JavaVisualEditorPart.java:1620"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:785"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup$CreateRegistry.run",
          "source": "JavaVisualEditorPart.java:1611"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 3,
      "commentIndex": 8,
      "bugId": "125854",
      "date": "2006-02-06T15:17:43+01:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.emf.common.util.WrappedException",
      "message": "/forms/palette.xmi",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:272"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:349"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource",
          "source": "ProjectResourceSetImpl.java:262"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$DefaultVEContributor.contributePalleteCats",
          "source": "JavaVisualEditorPart.java:1144"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$8.run",
          "source": "JavaVisualEditorPart.java:1620"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:785"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup$CreateRegistry.run",
          "source": "JavaVisualEditorPart.java:1611"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 4,
      "commentIndex": 8,
      "bugId": "125854",
      "date": "2006-02-06T15:17:43+01:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    }
  ],
  "groupId": "125854",
  "bugId": "125854",
  "date": "2006-01-31T16:17:13+01:00",
  "product": "Web Tools",
  "component": "jst.jem",
  "severity": "major"
}