{
  "comments": [
    "I have:\n\npublic class MyClass extends ParentClass\u003cAnotherClass\u003e\n{\n\n  public MyClass(SomeClass someClass)\n  {\n    super(someClass, value1, value2, value3);\n  }\n}\n\nWhere ParentClass\u003cT\u003e has the following constructor:\n\npublic ParentClass(SomeClass someClass, ValueClass... values)\n\nI get:\n\nInternal compiler error java.lang.ArrayIndexOutOfBoundsException:\n2 at\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:98)\nat\norg.eclipse.jdt.internal.compiler.lookup.Scope.computerCompatibleMethod(Scope.java:231)\nat\netc.\n\nThis occurs on I20041101, and has occurred for quite a while. I can\u0027t build my\nproject, even though it builds fine on NetBeans.\n\nGarret",
    "Could you please provide a test case and the whole .log file?\nYou remove part of the stack trace that we would like to see.",
    "Created an attachment (id\u003d15530)\nlog entries for described error\n\nI\u0027m afraid I can\u0027t provide a test case right now, but I am attaching the\nrelevant log entries.",
    "We can reproduce a failure in the reconciler, but we don\u0027t get the stack trace.\nSo a test case would really help to get it fix.",
    "Likely a bug in SourceTypeConverter",
    "package p;\n\npublic class MyClass extends ParentClass {\n\n\tpublic MyClass(Exception someClass) {\n\t\tsuper(someClass, \"\", \"\", \"\");\n\t}\n}\n\npackage p;\n\npublic class ParentClass\u003cT\u003e {\n\tpublic ParentClass(T someClass, T... values) {\n\t\tSystem.out.println(\"Toto\");\n\t}\n}",
    "Olivier says: \"You won\u0027t get the crash anymore, but if you write a simple test\ncase you will see the red line under the method call\"",
    "To be exact, Olivier says that the calls to super(...) is underlied in red,\nwheras the compiler doesn\u0027t find a problem.",
    "Did this get into I20041102? Let me know, and I\u0027ll test it out.",
    "In I20041102, we still have a bug in the reconciler. But I cannot reproduce the\nstack trace you got. It would be nice if you could give it a try and let us know.\nAlso it would be nice to get your test case.\nThanks.",
    "Simpler test case:\n\npackage p;\npublic class ParentClass {\n\tpublic ParentClass(String... values) {\n\t}\n}\n\npackage p;\npublic class MyClass extends ParentClass {\n\tpublic MyClass() {\n\t\tsuper(\"\");\n\t}\n}",
    "SourceElementParser is not marking the constructor with AccVarargs",
    "Created an attachment (id\u003d15593)\nProposed fix\n",
    "Created an attachment (id\u003d15594)\nProposed regression test\n",
    "Patches are against I200411022000",
    "FYI I still get the stack trace in I20041102 from the internal compiler error.\n\nNote there is also an error (not an internal compiler error, but an inability to\nresolve the super method) on the following line:\n\nvoid foo(MyClass myClass)\n{\n  super.foo(myClass.getProperty(), myClass.getEnumProperty());\n}\n\nwhere super.foo() is defined as in an abstract base class:\n\nprotected void foo(Object... values);\n\nand MyClass.getEnumProperty() returns a value of type MyClass.MyEnum.\n\nEclipse seems to be having trouble with an enum being passed to a vararg method\nof an abstract base class. (I don\u0027t know if this is the ultimate source of the\ninternal compiler error.)\n\nI realize that a true test case would be helpful---I\u0027m trying to get the time to\nproduce one. (It\u0027s a busy week.)",
    "Ok for M3",
    "Released propoosed patch and regression test.",
    "Verified for 3.1 M3 with build I200411040010 + jdt.core HEAD\n\nI\u0027ve tested test similar to comment 0:\nMyClass.java:\n  package q;\n  import static q.ValueClass.*;\n\n  class AnotherClass {}\n  class SomeClass {}\n\n  public class MyClass extends ParentClass\u003cAnotherClass\u003e {\n\tpublic MyClass(SomeClass someClass) {\n\t\tsuper(someClass, VALUE1, VALUE2, VALUE3);\n\t}\n  }\nParentClass.java:\n  package q;\n  public class ParentClass\u003cT\u003e {\n\tpublic ParentClass(SomeClass someClass, ValueClass... values) {\n\t}\n  }\nValueClass.java:\n  package q;\n  public enum ValueClass {\n\tVALUE1, VALUE2, VALUE3\n  }\n\nand it compiles without any error nor exception.",
    "As I mentioned earlier, this bug still shows up---on 20041104, at least.\n\nOn the positive side, I\u0027ve managed to managed to produce a test case (see\nbelow). Note that this appears to be the same bug, even though it may in the end\nnot have to do with accessing a generic superclass.\n\n(I debated whether to consider this a new bug, but as my original complaint was\nnever fixed, I\u0027ll consider this the same bug, even if my original post allowed\nyou to fix some *other* bug which you found because of my post. :) )\n\npackage com.example;\n\nimport java.util.*;\n\npublic class TestClass\u003cT\u003e\n{\n\n\tpublic boolean test1()\n\t{\n\t\t\ttest2(\"test\", null, 0);\n\t}\n\n\tpublic \u003cF\u003e List\u003cF\u003e test2(final List\u003cF\u003e list, final String... strings)\n\t{\n\t\treturn null;\n\t}\n\n\n}\n",
    "Um, don\u0027t want to argue, but this seems to be more severe than \"normal\". On the\nother hand, I suppose it seems worse from my point of view because I\u0027ve been\nforced to use Net@#$Beans for weeks because my code won\u0027t compile on Eclipse. :)",
    "This is a bug in the compiler. It doesn\u0027t handle variable arguments inside\ngeneric method.\nWith a test case earlier in the week, this could probably be fixed for M3. I let\nPhilippe set the severity.\nCompiling your test case with the batch compiler also produces the same stack trace.",
    "*** Bug 78016 has been marked as a duplicate of this bug. ***",
    "Problem comes from the lack of support for varargs in generic methods.\nInference mechanism naively relies on same argument and parameter count.",
    "Support added. \nAdded regression tests: GenericTypeTest#test387-test392\nFixed",
    "In order to benefit from fix, you could take the next nightly/integration build,\nand copy org.eclipse.jdt.core plugin back into 3.1M3.",
    "This is some trivial code that causes the problem.\n%cat Test.java\nimport java.util.Arrays;\nimport java.util.Collection;\n\npublic class Test\n{\n    public static void main(String[] args)\n    {\n        final Collection\u003cString\u003e x \u003d Arrays.asList(\"A\", \"B\");\n    }\n}\n",
    "*** Bug 78467 has been marked as a duplicate of this bug. ***",
    "*** Bug 78467 has been marked as a duplicate of this bug. ***",
    "Verified in 200412140800",
    "*** Bug 78467 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-11-01T20:56:27+01:00",
    "2004-11-01T21:30:35+01:00",
    "2004-11-01T21:37:53+01:00",
    "2004-11-01T22:55:02+01:00",
    "2004-11-02T18:09:31+01:00",
    "2004-11-02T18:11:59+01:00",
    "2004-11-02T18:15:03+01:00",
    "2004-11-02T18:19:17+01:00",
    "2004-11-02T20:49:10+01:00",
    "2004-11-02T20:51:15+01:00",
    "2004-11-03T10:59:43+01:00",
    "2004-11-03T12:01:42+01:00",
    "2004-11-03T12:02:17+01:00",
    "2004-11-03T12:02:45+01:00",
    "2004-11-03T14:28:48+01:00",
    "2004-11-03T16:36:05+01:00",
    "2004-11-03T21:27:25+01:00",
    "2004-11-04T10:33:26+01:00",
    "2004-11-04T15:02:29+01:00",
    "2004-11-05T22:07:09+01:00",
    "2004-11-05T22:23:58+01:00",
    "2004-11-05T22:30:18+01:00",
    "2004-11-06T13:34:56+01:00",
    "2004-11-08T10:06:01+01:00",
    "2004-11-08T11:01:52+01:00",
    "2004-11-08T11:04:24+01:00",
    "2004-11-09T05:02:50+01:00",
    "2004-11-12T14:17:35+01:00",
    "2004-11-12T18:32:52+01:00",
    "2004-12-14T17:20:27+01:00",
    "2006-06-24T01:00:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "2",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod",
          "source": "ParameterizedGenericMethodBinding.java:98"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.computerCompatibleMethod",
          "source": "Scope.java:231"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "77422",
      "date": "2004-11-01T20:56:27+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "77422",
  "bugId": "77422",
  "date": "2004-11-01T20:56:27+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}