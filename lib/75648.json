{
  "comments": [
    "I200409300800\n\nEclipse silently drops plugins with missing required plugins. Steps:\n- Create new Plug-in Project with wizard using the \"Plug-in with a view\" template.\n- Add \u003cimport plugin\u003d\"org.eclipse.ui2\"/\u003e to the \u003crequires\u003e section (note: that\nplugin doesn\u0027t exist).\n- Run the plugin in a run-time eclipse.\n\n-\u003e There\u0027s no error in the log, but the declared view doesn\u0027t show up in the\n\"Window \u003e Show View \u003e Others...\" list. The runtime should write something to the\nlog when a required plugin could not be found. Currently, it seems to fail\nsilently, which makes it very hard to find the problem in a big plugin.",
    "\n\n*** This bug has been marked as a duplicate of 74663 ***",
    "This is a consequence of the fix for bug 62118.\n\nSee also bug 74663 comment 19 and bug 74663 comment 20.",
    "It would also be nice if it reported problems in bottom-up order.\n\nFor example, currently, if I remove org.eclipse.jface from the browser example\u0027s\nlaunch config, I get:\n\n!SESSION Oct 05, 2004 14:12:49.527 ---------------------------------------------\neclipse.buildId\u003dunknown\njava.fullversion\u003dJ2RE 1.4.2 IBM J9 2.2 Windows 2000 x86-32 j9n142-20040917 (JIT\nenabled)\nJ9VM - 20040916_0908_lHdSMR\nJIT  - r7_level20040915_1801\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -product org.eclipse.ui.examples.rcp.browser.product\n-pdelaunch -url d:\\web\\eclipsecon home.htm \n\n!ENTRY org.eclipse.core.runtime Oct 05, 2004 14:12:49.537\n!MESSAGE Product org.eclipse.ui.examples.rcp.browser.product could not be found.\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.557\n!MESSAGE Application error\n!STACK 1\njava.lang.RuntimeException: No application id has been found.\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:313)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.567\n!MESSAGE Bundle initial@reference:file:d:/eclipse-new/plugins/org.eclipse.ui/\n[6] was not resolved.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.567\n!MESSAGE Missing required bundle org.eclipse.jface_0.0.0.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.567\n!MESSAGE Missing required bundle org.eclipse.ui.workbench_0.0.0.\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.577\n!MESSAGE Bundle\ninitial@reference:file:d:/eclipse-new/plugins/org.eclipse.ui.examples.rcp.browser/\n[7] was not resolved.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.597\n!MESSAGE Missing required bundle org.eclipse.ui_0.0.0.\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.597\n!MESSAGE Bundle\ninitial@reference:file:d:/eclipse-new/plugins/org.eclipse.ui.workbench/ [8] was\nnot resolved.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.597\n!MESSAGE Missing required bundle org.eclipse.jface_0.0.0.\n\n\nIt would be easier to debug if prerequisite plug-ins were dumped first.\nIn the case above, it would be cleared if it dumped them in the following order:\n- org.eclipse.ui.workbench\n- org.eclipse.ui\n- org.eclipse.ui.examples.rcp.browser\n",
    "As mentioned in the referenced bugs, the workaround is to add -debug to the\ncommand line (as a program arg, not a VM arg).\n",
    "*** Bug 77642 has been marked as a duplicate of this bug. ***",
    "Rafael, how do you get more info on problems that hte resolver found?  Was it -\ndebug?  or with -dev?  I thought there was a mode where it reported on \nunresolved plugins in the console\n\nKim, if you are in doubt about a plugin\u0027s status, you can always run with -\nconsole and then query the plugin.  \"ss\" gives you the list of plugins.  \"diag \n#\" tells you about plugin # (e.g, why it is not resolved)",
    "-debug does the trick, as Nick verified (comment 4).",
    "*** Bug 77900 has been marked as a duplicate of this bug. ***",
    "Fixed. Released to HEAD.\n\nIn dev/debug mode, unresolved bundles are logged regardless we fail running the\napplication or not.",
    "Can this also be done when running standalone?  It\u0027s pretty confusing when\npeople make an error exporting their plugins for their RCP app, and fails to run\nwith no further details about why.",
    "Since the application fails to run, unresolved plug-ins are expected to be\nlogged. For completeness, these are the situations where unresolved plug-ins\nwill be logged:\n\na) before shutting down, when a startup error occurs\nb) before shutting down, when the application cannot be found/instantiated\nc) before shutting down, when the application exits with an exception\nd) during startup, when in debug mode (-debug [\u003coptions file\u003e] is specified)\ne) during startup, when in dev mode (-dev [\u003coptions file\u003e] is specified)\n\nSo if you are *not* running in debug or dev mode, and there are some unresolved\nplug-ins that do not prevent the application from running and terminating\nnormally (not throwing any exceptions), no unresolved plug-ins will be logged.",
    "Could we not just set a flag if any plugins were unresolved, and dump full\ndetails on shutdown?  What is the advantage to not providing full details in\ncertain cases?  Is it too costly?  I believe this was the justification for not\ndoing the full dependency check up front, but would it be possible to flag when\nplugin dependency problems are actually encountered?",
    "Please see bug 62118 for reasoning on this. Even though, I think it should be ok\nif we had a specific system property that can be turned on iby product providers\nwho don\u0027t care about the performance penalty of checking plug-in resolution.\nThis would be checked in addition to the -dev/-debug options. Nick, would that\nbe enough?\n\n",
    "The aim is to make it easy for RCP newbies to find out what happened when their\nplug-ins don\u0027t work, so I don\u0027t think an extra system property would be too\nhelpful (unless it defaults to true, but then that has a bad performance hit).\n\nThe bug report mentioned doesn\u0027t give any explanation for why it was so slow.  I\nwas naively assuming that we could do some simple optimization like: if the\nruntime was unable to resolve a plugin, it could set a flag saying that it could\nnot resolve some plugins, then check this on shutdown and do the expensive\nanalysis if true.\n\nIf such an optimization is not possible, then I\u0027ll be quiet ;-).\n",
    "Added Nick\u0027s comments to bug 62118 as his questions pertain the fix for that bug."
  ],
  "commentCreationDates": [
    "2004-10-05T17:20:47+02:00",
    "2004-10-05T17:36:37+02:00",
    "2004-10-05T20:05:57+02:00",
    "2004-10-05T20:32:23+02:00",
    "2004-10-05T20:50:21+02:00",
    "2004-11-03T21:16:06+01:00",
    "2004-11-03T21:53:39+01:00",
    "2004-11-03T21:58:56+01:00",
    "2004-11-04T21:27:23+01:00",
    "2005-01-06T22:53:30+01:00",
    "2005-01-07T15:11:14+01:00",
    "2005-01-07T15:58:02+01:00",
    "2005-01-10T20:19:17+01:00",
    "2005-01-10T23:10:19+01:00",
    "2005-01-11T03:15:26+01:00",
    "2005-02-16T19:59:58+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "No application id has been found.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:313"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "75648",
      "date": "2004-10-05T20:32:23+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "major"
    }
  ],
  "groupId": "75648",
  "bugId": "75648",
  "date": "2004-10-05T17:20:47+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "major"
}