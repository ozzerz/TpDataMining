{
  "comments": [
    "Currently, after exporting a plugin or feature, you must then quit eclipse and restart or select File:Switch Workspace:Other.. and OK to restart the same workspace. I suggest an option under export plugin options tab to automatically restart workspace on export.\n\nJustification:\n\nCurrent design is awkward for a very common usage, which is developing and testing / using a plugin within the same Eclipse install. While I understand that this approach is not really the blessed way of developing Plugins, I submit that many people develop plugins this way -- as the Eclipse Runtime launch approach is very often not consistent with actual deployment behavior and the runtime plugin configuration can be overly complex, resource and maintenance intensive, and in my experience inconsistent. There don\u0027t seem to be significant gains in launch speeds either -- to the contrary in fact depending on combined IDE and Runtime footprint one can easily approach memory limits on typical machines.\n\nAs Plugin development is a key part of Eclipse technology and reducing the edit, build, launch, test cycle time is critical to rapid development I think this relatvily small feature would be of real benefit to a significant number of developers.",
    "I have found myself using the \"Switch Workspace\" trick to restart the same workspace from time to time myself (though no reasons for wanting to restart spring to mind at the moment).\n\nIt might be worthwhile to add a \"Restart Workbench\" option to the File menu.",
    "Agreed..I was going to suggest this as an alternative / addition (with key binding supor, natch). The switch trick is actually mentioned somewhere in the PDE or SDK docs, but it isn\u0027t very intuitive, esp. as one\u0027s current workspace isn\u0027t listed as item.\n\nI am a bit unclear on \"no reasons spring to mind\", perhaps I really am the only person who uses the restart workbench approach to test changes in plugin UI -- I have found that this is the least exasperating way to deal with plugin development in many cases; say where one is using (other people\u0027s :D) plugin dependencies that are inconsistent / improperly configured, causing the eclipse runtime to fail to update them, or in the case where the combined memory footprint of current IDE and similar launched runtime workspace are very large. But as I say, I would be really happy with the \"restart\" item too!",
    "personaly I think it would misleading to have a restart associated with the export in any way.  People will be confused and think somehow that they have to or shoudl restart their IDE.  Honestly I think this is a very niche case.  People should use the target platforms and launch configs IMHO.\n",
    "Fair enough -- I\u0027ll accept that this is an edge case unless there are other users who also report the frequent need to restart their workspace after an export for plugin testing purposes. (If so then perhaps the restart option would only be provided in the case where the user is exporting to the current Eclipse install location.) I\u0027ve added a bug report bug 206268 for the more general \"Restart Workspace\" feature request from Adam\u0027s comment 1. Not sure if this one is an INVALID or WONTFIX so I\u0027ll leave that to others.\n\n(I guess my real issue should be \"Runtime Confirguration does not function consistently with export of plugins directly to install location\" but that is hardly specific enough for a bug report -- the amount of testing that would be required to track down the exact cause(s) is the reason I have resorted to this other solution. The basic issue seems to be that Eclipse Runtime cannot find some included resources while I have no such issues with my plugins when installed in an actual Eclipse install.)\n",
    "Hi Miles, I agree with Jeff that this might be confusing or misleading.  The stereotypical development process would be to develop and test your plug-in using the runtime workbench.  When you have finalized your development and are ready for deployment, the user would then go ahead and export the plug-in.  We understand this process does not work for everyone :) (though I believe it does work for most).\n\nI would be much more inclined to try to fix the problem you described in comment #4 so we could stream line your development process.  If you could post back to this bug report with the discrepancy between the runtime workbench and the running from the command line, we might be able to help figure out (or possibly already know) the problem.\n\nAs our slogan goes \"In PDE we do tooling, but our business is people!\"",
    ":D Thanks for the encouragement. Honestly it is quite possible that I have screwed something up on configuration and the runtime case is simply exposing a failure that my IDE setup is somehow masking. Sometimes its hard to know the sweet spot between \u0027suffer through\u0027 and \u0027investigate\u0027 given other priorities, especially as in this case when the range of possible issues crosses many different projects -- in this case so far EMF, oAW, PDE, OSGI and possibly JDT.\n\nBriefly ;), I have a dependency from an EMF model to another EMF resource that I am loading from an EMF URI mapping, and OSGI is reporting that it can\u0027t find the bundle entry. I get a FileNotFoundE in ..osgi.framework.internal.protocol.bundleentry.Handler.findBundleEntry [42]. (Unfortunatly I would have to post a gif of the actual error as I can\u0027t copy the error text from the EMF editor..)\n\nAs I start to isolate things I am finding that my assumptions about how the runtime Application works are simply wrong and now as I try to set things up in the \u0027right\u0027 way I am finding it difficult to figure out how I can even set up my runtime environment matches my installation. \n\nI had assumed that \"All workspace and enabled plugins\" would mean that my Eclipse install plus my Workspace plugins would be used. But I\u0027m realizing that _features_ are not being included. If or how this might affect resource loading I\u0027m not sure but it is the one major difference I see between the two configurations. I am finding that the warnings I get on startup are significantly different -- for example equinox reports version issues from trying to use an earlier version.\n\nMy guess it that the fundamental issue is that I have had to do manual installations of features and plugins because of incompatibilties between various milestone and interim features and plugins or because certain features do not have update sites for current builds. The runtime application is somehow trying to be cleaner about things and is reconfiguring / \u0027fixing\u0027 things such that Eclipse Install + My new features/plugins !\u003d Runtime + My new features/plugins. I do use -clean religiously and create new configuration areas and workspaces for testing. Don\u0027t know if that makes any sense and I continue to investigate as time allows, but pls let me know if there is anything in praticular that might help isolate issues further..\n\n\n",
    "I can understand why you would not want to spend too much time investigating that issue.\n\nMy first suggestion would be to post something to the EMF mailing list really quick to see if anyone else has seen anything similar.  If they have, they might have a solution for you.\n\nSecond, you can actually set up your runtime workbench to run with features.  Check out this link to PDE Tips and Tricks, it should be the 3rd one on the list http://help.eclipse.org/help33/index.jsp?topic\u003d/org.eclipse.pde.doc.user/tips/pde_tips.htm\n\nUnfortunately, I have not heard of anything like what you are describing, but if there is some other way we could help, please let us know.",
    "Thanks Brian..\n\nThe resource issue is a long going one that has a lot to do with (too obscure to go into here but can\u0027t quite lay it at EMF doorstep) runtime class-loading issues among other things...a few months ago I got things to the point where deployed features/plugins worked fine but the runtime launch didn\u0027t and so finally gave up.\n\nAnyway, thanks for the link about simulated startup with workspace features -- I had tried this at some point but was discouraged by the fact that it would require me to place all of the project related plugins in one giant workspace. (I have three sets of feature targets which are largely orthognal but overlap over 30+ projects when collaborators are included. My style is to keep these in seperate workspaces and create spanning workspaces with relevant subset of plugins imported.) If I could use plugins that I\u0027d imported without moving that would be great, but my understanding is that I have to actually copy them in. \n\nBut if I can\u0027t get this resolved some other way I think that is going to be the way I\u0027ll have to go.",
    "\nAs an update, I think I have isolated a pretty strong case. Please do let me know if this is more appropriatly addressed in a new report and/or newsgroup.\n\nI have done a clean install using update manager for all except my own plugins and have narrowed things down to just four of my PDE projects. I copied the four relevant plugins only into a new workspace and created new runtime application, new configuration areas and workspaces. So I have determined that the issue is not features -- as I export only the relevant plugins without enclosing features into my new eclipse install, regardless of wether I deploy as jars or not, the behavior works as expected, but still fails under the launched runtime. Also, I have tried launching with plugins and also set up an environment for launching with simulated features. I think I now have a potential candidate for the issue.\n\nFirst, are there any documents that describe the differences between an eclipse launch and a runtime launch?\n\nThis is the exception I\u0027m getting that seems relevant...this causes simulated startup to fail but allows plugin startup to continue. However, it also occurs on subsequent regular workspace launches and yet that case still works fine. Is it possible that the runtime launch somehow relies on this socket to deliver plugin resources?\n\norg.osgi.framework.BundleException: Exception in org.eclipse.equinox.jmx.internal.server.Activator.start() of bundle org.eclipse.equinox.jmx.server.\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:1018)\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)\nat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)\nat org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)\nat org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)\nat org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:408)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:289)\nat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\nat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1269)\nat org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:160)\nat org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)\nat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)\nat org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)\nat org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:252)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:49)\nat org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:248)\nat org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:117)\nat org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:66)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.ui.internal.Workbench$54.run(Workbench.java:2190)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\nCaused by: java.rmi.server.ExportException: Port already in use: 8118; nested exception is:\njava.net.BindException: Address already in use\nat sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:249)\nat sun.rmi.transport.tcp.TCPTransport.exportObject(TCPTransport.java:184)\nat sun.rmi.transport.tcp.TCPEndpoint.exportObject(TCPEndpoint.java:382)\nat sun.rmi.transport.LiveRef.exportObject(LiveRef.java:116)\nat sun.rmi.server.UnicastServerRef.exportObject(UnicastServerRef.java:180)\nat sun.rmi.registry.RegistryImpl.setup(RegistryImpl.java:92)\nat sun.rmi.registry.RegistryImpl.\u003cinit\u003e(RegistryImpl.java:78)\nat java.rmi.registry.LocateRegistry.createRegistry(LocateRegistry.java:186)\nat org.eclipse.equinox.jmx.internal.rmi.RMIServer.initialize(RMIServer.java:51)\nat org.eclipse.equinox.jmx.internal.rmi.RMIServer.newJMXConnectorServer(RMIServer.java:38)\nat org.eclipse.equinox.jmx.internal.server.JMXServerFactory.createJMXServer(JMXServerFactory.java:49)\nat org.eclipse.equinox.jmx.internal.server.Activator.createServer(Activator.java:94)\nat org.eclipse.equinox.jmx.internal.server.Activator.start(Activator.java:61)\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)\nat java.security.AccessController.doPrivileged(Native Method)\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)\n... 28 more\nCaused by: java.net.BindException: Address already in use\nat java.net.PlainSocketImpl.socketBind(Native Method)\nat java.net.PlainSocketImpl.bind(PlainSocketImpl.java:359)\nat java.net.ServerSocket.bind(ServerSocket.java:319)\nat java.net.ServerSocket.\u003cinit\u003e(ServerSocket.java:185)\nat java.net.ServerSocket.\u003cinit\u003e(ServerSocket.java:97)\nat sun.rmi.transport.proxy.RMIDirectSocketFactory.createServerSocket(RMIDirectSocketFactory.java:27)\nat sun.rmi.transport.proxy.RMIMasterSocketFactory.createServerSocket(RMIMasterSocketFactory.java:333)\nat sun.rmi.transport.tcp.TCPEndpoint.newServerSocket(TCPEndpoint.java:622)\nat sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:237)\n... 43 more\nRoot exception:\njava.rmi.server.ExportException: Port already in use: 8118; nested exception is:\njava.net.BindException: Address already in use\nat sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:249)\nat sun.rmi.transport.tcp.TCPTransport.exportObject(TCPTransport.java:184)\nat sun.rmi.transport.tcp.TCPEndpoint.exportObject(TCPEndpoint.java:382)\nat sun.rmi.transport.LiveRef.exportObject(LiveRef.java:116)\nat sun.rmi.server.UnicastServerRef.exportObject(UnicastServerRef.java:180)\nat sun.rmi.registry.RegistryImpl.setup(RegistryImpl.java:92)\nat sun.rmi.registry.RegistryImpl.\u003cinit\u003e(RegistryImpl.java:78)\nat java.rmi.registry.LocateRegistry.createRegistry(LocateRegistry.java:186)\nat org.eclipse.equinox.jmx.internal.rmi.RMIServer.initialize(RMIServer.java:51)\nat org.eclipse.equinox.jmx.internal.rmi.RMIServer.newJMXConnectorServer(RMIServer.java:38)\nat org.eclipse.equinox.jmx.internal.server.JMXServerFactory.createJMXServer(JMXServerFactory.java:49)\nat org.eclipse.equinox.jmx.internal.server.Activator.createServer(Activator.java:94)\nat org.eclipse.equinox.jmx.internal.server.Activator.start(Activator.java:61)\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)\nat java.security.AccessController.doPrivileged(Native Method)\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)\nat org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)\nat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)\nat org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)\nat org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)\nat org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:408)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:289)\nat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\nat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1269)\nat org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:160)\nat org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)\nat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)\nat org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)\nat org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:252)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:49)\nat org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:248)\nat org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:117)\nat org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:66)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.ui.internal.Workbench$54.run(Workbench.java:2190)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\nCaused by: java.net.BindException: Address already in use\nat java.net.PlainSocketImpl.socketBind(Native Method)\nat java.net.PlainSocketImpl.bind(PlainSocketImpl.java:359)\nat java.net.ServerSocket.bind(ServerSocket.java:319)\nat java.net.ServerSocket.\u003cinit\u003e(ServerSocket.java:185)\nat java.net.ServerSocket.\u003cinit\u003e(ServerSocket.java:97)\nat sun.rmi.transport.proxy.RMIDirectSocketFactory.createServerSocket(RMIDirectSocketFactory.java:27)\nat sun.rmi.transport.proxy.RMIMasterSocketFactory.createServerSocket(RMIMasterSocketFactory.java:333)\nat sun.rmi.transport.tcp.TCPEndpoint.newServerSocket(TCPEndpoint.java:622)\nat sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:237)\n... 43 more\n"
  ],
  "commentCreationDates": [
    "2007-10-13T20:00:55+02:00",
    "2007-10-13T20:18:24+02:00",
    "2007-10-13T20:29:45+02:00",
    "2007-10-14T17:27:41+02:00",
    "2007-10-14T19:23:20+02:00",
    "2007-10-15T17:17:40+02:00",
    "2007-10-15T22:31:51+02:00",
    "2007-10-16T00:56:16+02:00",
    "2007-10-16T01:27:45+02:00",
    "2007-10-16T18:43:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "Exception in org.eclipse.equinox.jmx.internal.server.Activator.start() of bundle org.eclipse.equinox.jmx.server.",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "BundleContextImpl.java:1018"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:974"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:346"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:260"
        },
        {
          "method": "org.eclipse.osgi.framework.util.SecureAction.start",
          "source": "SecureAction.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass",
          "source": "EclipseLazyStarter.java:111"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:417"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:340"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "BundleLoader.java:408"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:369"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:357"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:289"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1269"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "RegistryStrategyOSGI.java:160"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "ExtensionRegistry.java:788"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:243"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:51"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin$1.run",
          "source": "WorkbenchPlugin.java:252"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:49"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:248"
        },
        {
          "method": "org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension",
          "source": "EarlyStartupRunnable.java:117"
        },
        {
          "method": "org.eclipse.ui.internal.EarlyStartupRunnable.run",
          "source": "EarlyStartupRunnable.java:66"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$54.run",
          "source": "Workbench.java:2190"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "causedBy": {
        "exceptionType": "java.net.BindException",
        "message": "Address already in use",
        "elements": [
          {
            "method": "sun.rmi.transport.tcp.TCPTransport.listen",
            "source": "TCPTransport.java:249"
          },
          {
            "method": "sun.rmi.transport.tcp.TCPTransport.exportObject",
            "source": "TCPTransport.java:184"
          },
          {
            "method": "sun.rmi.transport.tcp.TCPEndpoint.exportObject",
            "source": "TCPEndpoint.java:382"
          },
          {
            "method": "sun.rmi.transport.LiveRef.exportObject",
            "source": "LiveRef.java:116"
          },
          {
            "method": "sun.rmi.server.UnicastServerRef.exportObject",
            "source": "UnicastServerRef.java:180"
          },
          {
            "method": "sun.rmi.registry.RegistryImpl.setup",
            "source": "RegistryImpl.java:92"
          },
          {
            "method": "sun.rmi.registry.RegistryImpl.\u003cinit\u003e",
            "source": "RegistryImpl.java:78"
          },
          {
            "method": "java.rmi.registry.LocateRegistry.createRegistry",
            "source": "LocateRegistry.java:186"
          },
          {
            "method": "org.eclipse.equinox.jmx.internal.rmi.RMIServer.initialize",
            "source": "RMIServer.java:51"
          },
          {
            "method": "org.eclipse.equinox.jmx.internal.rmi.RMIServer.newJMXConnectorServer",
            "source": "RMIServer.java:38"
          },
          {
            "method": "org.eclipse.equinox.jmx.internal.server.JMXServerFactory.createJMXServer",
            "source": "JMXServerFactory.java:49"
          },
          {
            "method": "org.eclipse.equinox.jmx.internal.server.Activator.createServer",
            "source": "Activator.java:94"
          },
          {
            "method": "org.eclipse.equinox.jmx.internal.server.Activator.start",
            "source": "Activator.java:61"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
            "source": "BundleContextImpl.java:999"
          },
          {
            "method": "java.security.AccessController.doPrivileged",
            "source": "Native Method"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
            "source": "BundleContextImpl.java:993"
          }
        ],
        "causedBy": {
          "exceptionType": "java.net.BindException",
          "message": "Address already in use",
          "elements": [
            {
              "method": "java.net.PlainSocketImpl.socketBind",
              "source": "Native Method"
            },
            {
              "method": "java.net.PlainSocketImpl.bind",
              "source": "PlainSocketImpl.java:359"
            },
            {
              "method": "java.net.ServerSocket.bind",
              "source": "ServerSocket.java:319"
            },
            {
              "method": "java.net.ServerSocket.\u003cinit\u003e",
              "source": "ServerSocket.java:185"
            },
            {
              "method": "java.net.ServerSocket.\u003cinit\u003e",
              "source": "ServerSocket.java:97"
            },
            {
              "method": "sun.rmi.transport.proxy.RMIDirectSocketFactory.createServerSocket",
              "source": "RMIDirectSocketFactory.java:27"
            },
            {
              "method": "sun.rmi.transport.proxy.RMIMasterSocketFactory.createServerSocket",
              "source": "RMIMasterSocketFactory.java:333"
            },
            {
              "method": "sun.rmi.transport.tcp.TCPEndpoint.newServerSocket",
              "source": "TCPEndpoint.java:622"
            },
            {
              "method": "sun.rmi.transport.tcp.TCPTransport.listen",
              "source": "TCPTransport.java:237"
            }
          ],
          "number": 0,
          "commentIndex": 0
        },
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 9,
      "bugId": "206234",
      "date": "2007-10-16T18:43:42+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.net.BindException",
      "message": "Address already in use",
      "elements": [
        {
          "method": "sun.rmi.transport.tcp.TCPTransport.listen",
          "source": "TCPTransport.java:249"
        },
        {
          "method": "sun.rmi.transport.tcp.TCPTransport.exportObject",
          "source": "TCPTransport.java:184"
        },
        {
          "method": "sun.rmi.transport.tcp.TCPEndpoint.exportObject",
          "source": "TCPEndpoint.java:382"
        },
        {
          "method": "sun.rmi.transport.LiveRef.exportObject",
          "source": "LiveRef.java:116"
        },
        {
          "method": "sun.rmi.server.UnicastServerRef.exportObject",
          "source": "UnicastServerRef.java:180"
        },
        {
          "method": "sun.rmi.registry.RegistryImpl.setup",
          "source": "RegistryImpl.java:92"
        },
        {
          "method": "sun.rmi.registry.RegistryImpl.\u003cinit\u003e",
          "source": "RegistryImpl.java:78"
        },
        {
          "method": "java.rmi.registry.LocateRegistry.createRegistry",
          "source": "LocateRegistry.java:186"
        },
        {
          "method": "org.eclipse.equinox.jmx.internal.rmi.RMIServer.initialize",
          "source": "RMIServer.java:51"
        },
        {
          "method": "org.eclipse.equinox.jmx.internal.rmi.RMIServer.newJMXConnectorServer",
          "source": "RMIServer.java:38"
        },
        {
          "method": "org.eclipse.equinox.jmx.internal.server.JMXServerFactory.createJMXServer",
          "source": "JMXServerFactory.java:49"
        },
        {
          "method": "org.eclipse.equinox.jmx.internal.server.Activator.createServer",
          "source": "Activator.java:94"
        },
        {
          "method": "org.eclipse.equinox.jmx.internal.server.Activator.start",
          "source": "Activator.java:61"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
          "source": "BundleContextImpl.java:999"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "BundleContextImpl.java:993"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:974"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:346"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:260"
        },
        {
          "method": "org.eclipse.osgi.framework.util.SecureAction.start",
          "source": "SecureAction.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass",
          "source": "EclipseLazyStarter.java:111"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:417"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:340"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "BundleLoader.java:408"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:369"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:357"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:289"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1269"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "RegistryStrategyOSGI.java:160"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "ExtensionRegistry.java:788"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:243"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:51"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin$1.run",
          "source": "WorkbenchPlugin.java:252"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:49"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:248"
        },
        {
          "method": "org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension",
          "source": "EarlyStartupRunnable.java:117"
        },
        {
          "method": "org.eclipse.ui.internal.EarlyStartupRunnable.run",
          "source": "EarlyStartupRunnable.java:66"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$54.run",
          "source": "Workbench.java:2190"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "causedBy": {
        "exceptionType": "java.net.BindException",
        "message": "Address already in use",
        "elements": [
          {
            "method": "java.net.PlainSocketImpl.socketBind",
            "source": "Native Method"
          },
          {
            "method": "java.net.PlainSocketImpl.bind",
            "source": "PlainSocketImpl.java:359"
          },
          {
            "method": "java.net.ServerSocket.bind",
            "source": "ServerSocket.java:319"
          },
          {
            "method": "java.net.ServerSocket.\u003cinit\u003e",
            "source": "ServerSocket.java:185"
          },
          {
            "method": "java.net.ServerSocket.\u003cinit\u003e",
            "source": "ServerSocket.java:97"
          },
          {
            "method": "sun.rmi.transport.proxy.RMIDirectSocketFactory.createServerSocket",
            "source": "RMIDirectSocketFactory.java:27"
          },
          {
            "method": "sun.rmi.transport.proxy.RMIMasterSocketFactory.createServerSocket",
            "source": "RMIMasterSocketFactory.java:333"
          },
          {
            "method": "sun.rmi.transport.tcp.TCPEndpoint.newServerSocket",
            "source": "TCPEndpoint.java:622"
          },
          {
            "method": "sun.rmi.transport.tcp.TCPTransport.listen",
            "source": "TCPTransport.java:237"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 1,
      "commentIndex": 9,
      "bugId": "206234",
      "date": "2007-10-16T18:43:42+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "206234",
  "bugId": "206234",
  "date": "2007-10-13T20:00:55+02:00",
  "product": "PDE",
  "component": "UI",
  "severity": "enhancement"
}