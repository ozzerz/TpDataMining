{
  "comments": [
    "Release 2.0.1\n\nJ2RE 1.3.0 IBM build cn130-20010502\n\nI have some code that is consistently failing when I try to use conditional\nbreakpoints.  I have reduced it to a simple test case as follows:\n\nA.java:\n\npackage testing;\npublic class A { \n\tpublic void run(int count) {\n\t}\n\tpublic void run() {\n\t\tfor (int i \u003d 0; i \u003c 10; i++) {\n\t\t\trun(i);\n\t\t}\n\t}\n}\n\nB.java:\n\npackage testing;\npublic class B {\n\tpublic void run() {\n\t\tnew A() {\n\t\t\tpublic void run(int count) {\n\t\t\t\tsuper.run(count);//breakpoint this line\n\t\t\t}\n\t\t}.run();\n\t}\n\tpublic static void main(String[] arguments) {\n\t\tnew B().run();\n\t}\t\t\n}\n\nI then add a breakpoint (where the // comment is), with condition \"count \u003d\u003d 2\".\nWhen I run it has an error:\n\nAn exception occurred while evaluating the condition for breakpoint: B [line: 7]\n[conditional] - B\n\nThe log file shows the following stack trace:\n\n!ENTRY org.eclipse.jdt.debug 4 120 Sep 16, 2002 12:12:27.613\n!MESSAGE Internal error logged from JDI Debug: \n!STACK 0\njava.lang.ClassCastException: org.eclipse.jdt.internal.debug.core.model.JDINullValue\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.instructions.EqualEqualOperator.getBooleanResult(EqualEqualOperator.java:35)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.instructions.BinaryOperator.executeBinary(BinaryOperator.java:95)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.instructions.BinaryOperator.execute(BinaryOperator.java:32)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:34)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$2.run(EvaluationThread.java:148)\n\tat\norg.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:562)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:159)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:132)\n\tat\norg.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:106)\n\tat java.lang.Thread.run(Thread.java:498)",
    "Reproduced in 2.0.1 with IBM 1.3.0 vm\n\nI get the indicated error or some other error like \"VM disconnected\" and \"Cannot\nperformed evaluation\". The consistently part, is that every time I get an error,\nthe VM dies.\n\nI get also the same type of error, in my target (20020911+).\n\nThe strange part is it looks like the VM doesn\u0027t stay suspended when we try to\nevaluate the condition, it seems resumed.\n\nWork fine with Sun 1.4.1b14 vm. Look like a VM problem. Need further investigation.",
    "Moving to M5",
    "We\u0027ve had a lot of problems debugging on IBM 1.3.0. Does this problem happen\non 1.3.1?",
    "It\u0027s IBM 1.3.0 problem only. Works fine on 1.3.1.",
    "Appears to be a VM issue. Do not intend to fix."
  ],
  "commentCreationDates": [
    "2002-09-16T18:03:29+02:00",
    "2002-09-17T02:16:35+02:00",
    "2002-12-05T14:22:19+01:00",
    "2003-02-21T16:39:54+01:00",
    "2003-02-21T16:49:00+01:00",
    "2003-02-25T01:24:19+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.debug.core.model.JDINullValue",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.instructions.EqualEqualOperator.getBooleanResult",
          "source": "EqualEqualOperator.java:35"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.instructions.BinaryOperator.executeBinary",
          "source": "BinaryOperator.java:95"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.instructions.BinaryOperator.execute",
          "source": "BinaryOperator.java:32"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute",
          "source": "Interpreter.java:34"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$2.run",
          "source": "EvaluationThread.java:148"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation",
          "source": "JDIThread.java:562"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation",
          "source": "EvaluationThread.java:159"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2",
          "source": "EvaluationThread.java:132"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run",
          "source": "EvaluationThread.java:106"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:498"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "23611",
      "date": "2002-09-16T18:03:29+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "23611",
  "bugId": "23611",
  "date": "2002-09-16T18:03:29+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}