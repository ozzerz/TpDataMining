{
  "comments": [
    "I have a need to determine the mapping from resolved to raw classpath entries and am currently obtaining that information via the internal field JavaModelManager.PerProjectInfo.rootPathToRawEntries.\n\nIf an acceptable public API currently exists that I can leverage to access these mappings, that would be ideal, otherwise, I would like to request that this information be exposed via the JDT API.",
    "IPackageFragmentRoot#getRawClasspathEntry() provides you with this information, assuming you have root in your hands.\n\nI suspect we could have a more flexible API which would only consider a root path, and thus could be used with path from roots or CP entries.",
    "Sthg like:\n\nIJavaProject#getRawClasspathEntry(IPath)\nIJavaProject#getResolvedClasspathEntry(IPath)\n\nmay need the kind as well.",
    "thanks for the info; that more flexible API would be great - I\u0027ll try out the IPackageFragmentRoot#getRawClasspathEntry() route now",
    "I was able to get things working using IPackageFragmentRoot but it was a bit awkward and involved calls that bypass the resolved cp cache: I made calls to IJavaProject.findPackageFragmentRoots() for desired raw IClasspathEntry objects (findPackageFragmentRoots() like it skips the PerProjectInfo cache when resolving entries); since I ultimately need resolved IClasspathEntry objects, I then then had to map the paths contained in the resolved IPackageFragmentRoots back to resolved IClasspathEntry objects.\n\nLet me explain my use case and you can may be able to suggest a better public API approach (that leverages the resolved cp cache):\n\n-I want to retrieve all resolved IClasspathEntry objects whose corresponding raw entries have a specific attribute\n\nI had been doing this as follows:\n\n-get the raw classpath and find all raw entries that have the attribute (return if no raw entries have the attribute)\n-call IJavaProject.getResolvedClasspath() (which will use the cache if possible)\n-iterate through the resolved entries:\n  -use PerProjectInfo.rootPathToRawEntries to find the associated raw entry (looks like this is exactly how IPackageFragmentRoot.getRawClasspathEntry() locates the raw cp entry)\n  -if the associated raw cp entry had the attribute, then add the resolved cp entry to the list to return (some other checks are done as well) ",
    "ignore the resolved cp cache issue; still have the issue with mapping back from resolved IPackageFragmentRoots to resolved IClasspathEntries so would be nice to eventually have an API like you suggested:\n\nIJavaProject#getRawClasspathEntry(IPath) ",
    "Targeting for 3.4",
    "Not sure if this is related, or the best place for the comment, but this is the only ticket matching \"resolvedPathToRawEntries\" I can find, and the comments seem relevant.\n\nUsing 3.3RC1 with WST, I\u0027m getting the following error with libraries added to the \"J2EE Module Dependency\" project properties panel.\n\n!ENTRY org.eclipse.wst.validation 4 0 2007-05-21 17:15:23.825\n!MESSAGE \n!STACK 0\njava.lang.NoSuchFieldError: resolvedPathToRawEntries\n        at org.eclipse.jst.j2ee.classpathdep.ClasspathDependencyUtil.getComponentClasspathDependencies(ClasspathDependencyUtil.java:187)\n        at org.eclipse.jst.j2ee.classpathdep.ClasspathDependencyUtil.getComponentClasspathDependencies(ClasspathDependencyUtil.java:146)\n        at org.eclipse.jst.j2ee.internal.classpathdep.ClasspathDependencyValidator.validateInJob(ClasspathDependencyValidator.java:133)\n        at org.eclipse.wst.validation.internal.operations.ValidatorJob.run(ValidatorJob.java:65)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n\nI\u0027ve determined this is caused when a library is added to the build path, and the checkbox next to the library, in the J2EE panel, is ticked (to export to the server). Unchecking the library stops the error. My testing to determine the behaviour was using JUnit4. \n\nUI issues created as a result of this include the \"Add/Remove Projects\" dialog not appearing when the error-ing state is in place.\n\nAdding an external jar to the J2EE dependency panel appears to be OK.\n\nMac OSX 10.4.9\nEclipse 3.3RC1\nApache Tomcat 6.0.10",
    "Hi Paul, you must have an old WTP build and incompatible platform version (we never had an official build with that break since that set of components won\u0027t compile); the bug you were looking for is WTP bugzilla https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d183894\n\nIf you grab any of the official WTP builds (with the corresponding Eclipse platform version), you\u0027ll be OK: e.g. WTP RC0: \n\nhttp://download.eclipse.org/webtools/downloads/drops/R2.0/S-2.0RC0-200705171455/"
  ],
  "commentCreationDates": [
    "2007-04-25T15:17:05+02:00",
    "2007-04-25T15:25:18+02:00",
    "2007-04-25T15:26:25+02:00",
    "2007-04-25T15:32:55+02:00",
    "2007-04-25T17:29:44+02:00",
    "2007-04-25T23:12:19+02:00",
    "2007-04-26T10:50:04+02:00",
    "2007-05-21T17:43:49+02:00",
    "2007-05-21T18:11:21+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "resolvedPathToRawEntries",
      "elements": [
        {
          "method": "org.eclipse.jst.j2ee.classpathdep.ClasspathDependencyUtil.getComponentClasspathDependencies",
          "source": "ClasspathDependencyUtil.java:187"
        },
        {
          "method": "org.eclipse.jst.j2ee.classpathdep.ClasspathDependencyUtil.getComponentClasspathDependencies",
          "source": "ClasspathDependencyUtil.java:146"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.classpathdep.ClasspathDependencyValidator.validateInJob",
          "source": "ClasspathDependencyValidator.java:133"
        },
        {
          "method": "org.eclipse.wst.validation.internal.operations.ValidatorJob.run",
          "source": "ValidatorJob.java:65"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "183995",
      "date": "2007-05-21T17:43:49+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "enhancement"
    }
  ],
  "groupId": "183995",
  "bugId": "183995",
  "date": "2007-04-25T15:17:05+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "enhancement"
}