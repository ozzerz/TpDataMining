{
  "comments": [
    "Testpass on  20030716 + I20030716.from20030717_1019\n\n1. Have this code\npublic class NewTest {\n\tpublic int foo() {\n\t\treturn 0;\n\t}\n}\nclass Tester {\n\tD one;\n\tNewTest two;\n}\n\n2. Note the reference to D which cannot be resolved, resulting in a compile error\n3. Select NewTest\n4. Choose Extract Interface\n- if you press OK, the refactoring takes place in spite of the compile error\n- if you press Preview, a NPE happens:\n\n\njava.lang.reflect.InvocationTargetException: java.lang.NullPointerException\nat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\nat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\nat java.lang.NullPointerException.\u003cinit\u003e(NullPointerException.java:63)\nat\norg.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding(FullConstraintCreator.java:375)\nat\norg.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding(FullConstraintCreator.java:367)\nat\norg.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.create(FullConstraintCreator.java:149)\nat\norg.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCollector.visit(ConstraintCollector.java:292)\nat org.eclipse.jdt.core.dom.FieldDeclaration.accept0(FieldDeclaration.java:116)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java)\nat org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java)\nat org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:159)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)\nat\norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getConstraints(ExtractInterfaceUtil.java:317)\nat\norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getUpdatableVariables(ExtractInterfaceUtil.java:134)\nat\norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.updateReferences(ExtractInterfaceUtil.java:161)\nat\norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createChangeManager(ExtractInterfaceRefactoring.java:285)\nat\norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.checkInput(ExtractInterfaceRefactoring.java:190)\nat\norg.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)\nat\norg.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)\nat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)",
    "Adam, please investigate.",
    "fixed - because the refactoring heavily depends on bindings i will disallow \nperforming it when there are errors in code\n\nthat\u0027s a solution for M2\nfor M3 we should come up with something better"
  ],
  "commentCreationDates": [
    "2003-07-17T16:14:51+02:00",
    "2003-07-17T16:20:16+02:00",
    "2003-07-17T18:45:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.NullPointerException.\u003cinit\u003e",
          "source": "NullPointerException.java:63"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding",
          "source": "FullConstraintCreator.java:375"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding",
          "source": "FullConstraintCreator.java:367"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.create",
          "source": "FullConstraintCreator.java:149"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCollector.visit",
          "source": "ConstraintCollector.java:292"
        },
        {
          "method": "org.eclipse.jdt.core.dom.FieldDeclaration.accept0",
          "source": "FieldDeclaration.java:116"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:159"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getConstraints",
          "source": "ExtractInterfaceUtil.java:317"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getUpdatableVariables",
          "source": "ExtractInterfaceUtil.java:134"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.updateReferences",
          "source": "ExtractInterfaceUtil.java:161"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createChangeManager",
          "source": "ExtractInterfaceRefactoring.java:285"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.checkInput",
          "source": "ExtractInterfaceRefactoring.java:190"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:65"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:100"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "40370",
      "date": "2003-07-17T16:14:51+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "40370",
  "bugId": "40370",
  "date": "2003-07-17T16:14:51+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}