{
  "comments": [
    "I got a TableViewer component with several columns. I register an ICellModifier \nobject, and create several cell editors. For two of the columns I use a \nComboBoxCellEditor and a TextCellEditor. When I select de column the viewer \nshows correctly the combo control. Then I click the column of the TextEditor.\n\nThis works properly only if the call to the CellModifier::canModify returns \ntrue for the second column. If it returns false, I get a call to \nCellModifier::modify for the second column, but the value is the one of the \nfirst.\n\nLets see if I can explain, when I set the second column as editable, I get the \nnext secuence of calls to ICellEditor\n-getValue on Combo column (getting an Integer value)\n-canModify on text column (now I return true)\n-getValue on text column (getting an String value)\n-modify on text column with value got in last call.(with the String value)\n\nIn case of canModify returning false\n-getValue on Combo column (getting an Integer value)\n-canModify on text column (now I return false)\n-modify on text column with the Integer value got in the first call.\n\nThanks in advance",
    "Ok, so in my case, when I follow the steps that you indicated, 2 things can \nhappen:\n- If I select an item in the combo box, press the enter key, the combo box \ncell is deactivated. When I move on to the next cell to edit, everything \nbehaves correctly.\n- If I select an item in the combo box, without pressing the enter key, the \ncombo box cell stays activated. When I move on to the next cell, I get the \nfollowing exception:\njava.lang.ClassCastException\n\tat com.opnworks.tableviewer.example.ExampleCellModifier.modify\n(ExampleCellModifier.java:100) \n\nThis is caused by some changes made in SWT for the WidgetSelect events (see \nbug# 54989). Before 3.0, the widgetDefaultSelected event would be thrown on \nmouse selection, and the cell editor would be disabled. After 3.0, SWT changes \nare causing behavioral problems for the TextCellEditor. Since the \nwidgetDefaultSelected event is not thrown, the cell stays activated, and there \nis an attempt to modify the cell that should not be modified.",
    "I have vefiried this bug, and it is now fixed. I think the created patch for \nBug# 34819 helped fix this one as well.",
    "\n\n*** This bug has been marked as a duplicate of 34819 ***",
    "*** Bug 55275 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-03-21T22:40:07+01:00",
    "2004-04-07T21:21:43+02:00",
    "2004-04-14T21:21:14+02:00",
    "2004-04-14T21:34:25+02:00",
    "2004-04-14T21:41:35+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "elements": [
        {
          "method": "com.opnworks.tableviewer.example.ExampleCellModifier.modify",
          "source": "ExampleCellModifier.java:100"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "55485",
      "duplicateId": "34819",
      "date": "2004-04-07T21:21:43+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "34819",
  "bugId": "55485",
  "duplicateId": "34819",
  "date": "2004-03-21T22:40:07+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}