{
  "comments": [
    "Mular 0.3.4 can\u0027t query bugzilla integrated into CollabNet groupware used on\nsites like tigris.org, java.net, dev2dev.bea.com. E.g. http://subclipse.tigris.org/issues/\n\n\nQuery screen has all list boxes empty after update.",
    "Eugene: in the Bugzilla preferneces try to set the version to 2.16 since they\nmay be using that.\n\nShawn: if that doesn\u0027t resolve it let\u0027s make sure to look into it this week.",
    "(In reply to comment #1)\n\u003e Eugene: in the Bugzilla preferneces try to set the version to 2.16 since they\n\u003e may be using that.\n\u003e \n\u003e Shawn: if that doesn\u0027t resolve it let\u0027s make sure to look into it this week.\n\nDoesn\u0027t work with 2.16 either. Query fields are still empty.\n\nErrors in the log:\n\nFailed to execute runnable (java.lang.IllegalArgumentException: )\norg.eclipse.swt.SWTException: Failed to execute runnable\n(java.lang.IllegalArgumentException: )\n\tat org.eclipse.swt.SWT.error(SWT.java:2942)\n\tat org.eclipse.swt.SWT.error(SWT.java:2865)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3057)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2716)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:153)\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:303)\n\tat\norg.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)\n\tat\norg.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:261)\n\tat org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:1066)\n\tat\norg.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction.runWithProgressBar(RefreshBugzillaReportsAction.java:129)\n\tat\norg.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction.run(RefreshBugzillaReportsAction.java:69)\n\tat\norg.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction.run(RefreshBugzillaReportsAction.java:193)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:246)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)\n\tat\norg.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:441)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\nCaused by: java.lang.IllegalArgumentException: \n\tat org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:58)\n\tat org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:42)\n\tat org.eclipse.core.runtime.Status.setMessage(Status.java:174)\n\tat org.eclipse.core.runtime.Status.\u003cinit\u003e(Status.java:81)\n\tat\norg.eclipse.mylar.bugzilla.core.search.BugzillaSearchEngine.search(BugzillaSearchEngine.java:283)\n\tat\norg.eclipse.mylar.bugzilla.ui.tasklist.BugzillaCategorySearchOperation.search(BugzillaCategorySearchOperation.java:93)\n\tat\norg.eclipse.mylar.bugzilla.ui.tasklist.BugzillaCategorySearchOperation.execute(BugzillaCategorySearchOperation.java:71)\n\tat\norg.eclipse.mylar.bugzilla.ui.tasklist.BugzillaQueryCategory.refreshBugs(BugzillaQueryCategory.java:114)\n\tat\norg.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction$2.run(RefreshBugzillaReportsAction.java:168)\n\tat org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:150)\n\tat org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:36)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\t... 34 more\n\n\nTask details update failed\njava.lang.NullPointerException\nat\norg.eclipse.mylar.bugzilla.ui.tasklist.BugzillaTask.updateTaskDetails(BugzillaTask.java:354)\nat\norg.eclipse.mylar.bugzilla.ui.tasklist.BugzillaTask$GetBugReportJob.run(BugzillaTask.java:340)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n\n\n",
    "The problem here is that Collabnet is a customized version of bugzilla which\nwe are currently unable to support unless we add a new parser for it so that\nwe can properly do the screen scraping.\n",
    "Could you add proper error handling for that, and pop up a dialog saying\nsomething like \"The Bugzilla version you are using is either not supported, or\nyou need to change the Bugzilla preferences to us the correct version number.\" \nThe fileds showing up blank is confusing.  Also, under \"Known Limitations\" could\nyou add that customized versions of bugzilla are not supported?",
    "We\u0027ll have to make sure to closely support anyone interested in extending the \nBugzilla client to customized versions.  But once you\u0027ve done the extra error\nchecking we\u0027ll have to mark down the priority because we don\u0027t have the\nresources to do it ourselves for 0.3.x.\n\nPerhaps the work-around for people using this version is to have them create a\n\"custom query\" via HTMl and use the internal browser for viewing reports?",
    "I will add a dialog that informs the user that we were unable to get any data \nfrom the bugzilla server and it may be becuase there are problems with the \nserver or the server being used is not supported due to being customized.",
    "(In reply to comment #5)\n\u003e We\u0027ll have to make sure to closely support anyone interested in extending the \n\u003e Bugzilla client to customized versions.  But once you\u0027ve done the extra error\n\u003e checking we\u0027ll have to mark down the priority because we don\u0027t have the\n\u003e resources to do it ourselves for 0.3.x.\n\nHow difficult it is to support a customized bugzilla version? Is there are an\ninfrastructure for this? \n\nI guess \"bugzilla version\" property should be configured per repository. See my\nsummary at http://dev.eclipse.org/mhonarc/lists/mylar-dev/msg00037.html\n\n\u003e Perhaps the work-around for people using this version is to have them create a\n\u003e \"custom query\" via HTMl and use the internal browser for viewing reports?\n\nThis is quite usless because you can\u0027t create mylar\u0027s context for query results.\n",
    "Yup Eugene, this sort of customization support will be a part of the longer-term\nrepository support strategy that you outlined.  Fyi I\u0027ll answer your message\ntoday or tomorrow, still thinking about the best appraoch..\n\nYou should definitely be able to create a context for a query hit just by\nhitting the glasses.  Then you\u0027ll notice that the big bug icon turns into a\nlittle bug over a clipboard, indicating that it\u0027s not just a hit anymore, but a\nreport and context stored locally.  Please report a new bug if this doesn\u0027t work.",
    "(In reply to comment #8)\n\u003e You should definitely be able to create a context for a query hit just by\n\u003e hitting the glasses.  Then you\u0027ll notice that the big bug icon turns into a\n\u003e little bug over a clipboard, indicating that it\u0027s not just a hit anymore, but a\n\u003e report and context stored locally.  Please report a new bug if this doesn\u0027t work.\n\nWhat I\u0027ve tried to say is that it won\u0027t work on a list of bugs shown in web page\nas you\u0027ve suggested for nonstandard repositories. :-)",
    "Ah.  Yes, that\u0027s right, we would need at least the support for gathering query\nresults.  But that\u0027s a lot simpler then all the suff needed for the bug editor\nand for the Query UI.\n\nShawn: could you comment on bug #107062 about how hard the custom query thing\nwould be to implement?",
    "(In reply to comment #10)\n\u003e Ah.  Yes, that\u0027s right, we would need at least the support for gathering query\n\u003e results.  But that\u0027s a lot simpler then all the suff needed for the bug editor\n\u003e and for the Query UI.\n\nI believe it would be fine to have custom parser for the results anf everything\nelse in the UI (query editor, bug details, etc.). This was the approach taken by\nBuglist plugin.\n\n\u003e Shawn: could you comment on bug #107062 about how hard the custom query thing\n\u003e would be to implement?\n\nI can try to get some support from Collabnet to help with the parser.",
    "That would be fantastic.  The only thing we should be careful about is to figure\nout whether our Bugzilla plug-in should be parsing XML in some places where it\ncurrently isn\u0027t, in case this helps insulate it from customizations.\n\nI guess the first thing to do is to have us try and make the custom query stuff\nwork since it is possible for them to work for CollabNet, and then see what else\nneeds doing.  I\u0027m changing the priorities of these two bugs accordingly.",
    "We don\u0027t have the resources for it right now, but will try to involve \nCollabNet or other developers to help out.",
    "can i help you to develop this parser for CollabNet? i can make it in my \nthesis, please contact me at: marco.sferra@virgilio.it",
    "Marco: contributing CollabNet support would be a very useful contribution, and\nwould help make the current Bugzilla support generic enough to handle customized\nBugzilla implementations.  Let\u0027s start out by discussing what\u0027s involved on this\nreport.  The main thing will likely be adapting the fragile screen scraping that\nwe do.  What would be great is if you could try it with a common CollabNet\ninstallation (e.g. the http://subclipse.tigris.org/issues/ Eugene suggests) and\nOutline what breaks and what the failures are.  To start I would ignore making\nthe Bug Editor work, since we can always fall back to the web editor.  But what\nwe really do need is query results to be populated.  So I suggest starting by\nadding a new \"Custom Query\" for Tigris (see top of New Bugzilla Query box) and\nsee what works/fails in getting the query results.",
    "Ok, i will begin and i hope to have understood what i have to do...i will send \nto you what breaks and what the failures are. if you need me you can send \neverything at marco.sferra@virgilio.it\n",
    "I tried to submit a query in Tigris and it reports to me everything...it \ndoesn\u0027t show to me bugs in the editor. now i will tried to see more",
    "Good to hear that query results are showing up.  What is the failure in the Bug\nEditor?  I would like it to fail softly and fall back on using the Web Browser.\n If you could paste in the query string that you are using that would be useful too.",
    "if you try to see some bug it reports this error\n\njava.lang.NullPointerException\n\tat org.eclipse.mylar.bugzilla.ui.editor.ExistingBugEditor.getTitleString(ExistingBugEditor.java:307)\n\tat org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createAttributeLayout(AbstractBugEditor.java:521)\n\tat org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createLayouts(AbstractBugEditor.java:509)\n\tat org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createInfoArea(AbstractBugEditor.java:452)\n\tat org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createPartControl(AbstractBugEditor.java:352)\n\tat org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:609)\n\tat org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:384)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552)\n\tat org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:283)\n\tat org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:126)\n\tat org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268)\n\tat org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)\n\tat org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:391)\n\tat org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1102)\n\tat org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1051)\n\tat org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1256)\n\tat org.eclipse.ui.internal.PartStack.add(PartStack.java:442)\n\tat org.eclipse.ui.internal.EditorStack.add(EditorStack.java:109)\n\tat org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:60)\n\tat org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:212)\n\tat org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:202)\n\tat org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:758)\n\tat org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:665)\n\tat org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:628)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2360)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2295)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:2287)\n\tat org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2273)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2268)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2241)\n\tat org.eclipse.mylar.bugzilla.ui.ViewBugzillaAction.runInUIThread(ViewBugzillaAction.java:72)\n\tat org.eclipse.ui.progress.UIJob$1.run(UIJob.java:93)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3057)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2716)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\n\nand in query result there is only ONE bug while on the site there are 250 bugs...\n",
    "Marco: is it possible for you to give me a link to the CollabNet repository?  What I could do is make the Bug Editor display the report in a web page if it fails to render it.\n\nGetting a single query result means that the query parser is not working correctly.  The problem will be in the BugzillaSearchEngine.search(..) method, which is failing to match regular expressions.  Note how I made it work for Bugzilla 2.20, and you may be able to create a patch that does something similar for CollabNet.  That will need to be done in a test-driven way because this messy and old code is very brittle.  So I suggest looking at the related Bugzilla tests, writing a new search test that works for a public Bugzilla 2.20 server (e.g. eclipse.org), then adding one for CollabNet and regular expressions for making it pass.  Note RegularExpressionMatch test, sine you may want to start with something like that.  Let me know how it goes.",
    "Here are few repositories based on CollabNet Bugzilla:\n\nSubclipse traker at tigris.org\nhttp://subclipse.tigris.org/issues/buglist.cgi?Submit+query\u003dSubmit+query\u0026issue_status\u003dNEW\u0026issue_status\u003dSTARTED\u0026issue_status\u003dREOPENED\u0026email1\u003d\u0026emailtype1\u003dexact\u0026emailassigned_to1\u003d1\u0026email2\u003d\u0026emailtype2\u003dexact\u0026emailreporter2\u003d1\u0026issueidtype\u003dinclude\u0026issue_id\u003d\u0026changedin\u003d\u0026votes\u003d\u0026chfieldfrom\u003d\u0026chfieldto\u003dNow\u0026chfieldvalue\u003d\u0026short_desc\u003d\u0026short_desc_type\u003dsubstring\u0026long_desc\u003d\u0026long_desc_type\u003dsubstring\u0026issue_file_loc\u003d\u0026issue_file_loc_type\u003dsubstring\u0026status_whiteboard\u003d\u0026status_whiteboard_type\u003dsubstring\u0026field0-0-0\u003dnoop\u0026type0-0-0\u003dnoop\u0026value0-0-0\u003d\u0026cmdtype\u003ddoit\u0026newqueryname\u003d\u0026order\u003dReuse+same+sort+as+last+time\n\nSome project ad BEA dev2dev\nhttps://xcommonj-work.projects.dev2dev.bea.com/issues/buglist.cgi?Submit+query\u003dSubmit+query\u0026component\u003dxcommonj-work\u0026subcomponent\u003dwww\u0026issue_status\u003dNEW\u0026issue_status\u003dSTARTED\u0026issue_status\u003dREOPENED\u0026version\u003dcurrent\u0026email1\u003d\u0026emailtype1\u003dexact\u0026emailassigned_to1\u003d1\u0026email2\u003d\u0026emailtype2\u003dexact\u0026emailreporter2\u003d1\u0026issueidtype\u003dinclude\u0026issue_id\u003d\u0026changedin\u003d\u0026votes\u003d\u0026chfieldfrom\u003d\u0026chfieldto\u003dNow\u0026chfieldvalue\u003d\u0026short_desc\u003d\u0026short_desc_type\u003dsubstring\u0026long_desc\u003d\u0026long_desc_type\u003dsubstring\u0026issue_file_loc\u003d\u0026issue_file_loc_type\u003dsubstring\u0026status_whiteboard\u003d\u0026status_whiteboard_type\u003dsubstring\u0026field0-0-0\u003dnoop\u0026type0-0-0\u003dnoop\u0026value0-0-0\u003d\u0026cmdtype\u003ddoit\u0026order\u003dIssue+Number\n\nGlassfish project at java.net\nhttps://glassfish.dev.java.net/issues/buglist.cgi?Submit+query\u003dSubmit+query\u0026component\u003dglassfish\u0026issue_status\u003dNEW\u0026issue_status\u003dSTARTED\u0026issue_status\u003dREOPENED\u0026version\u003d9.0pe\u0026email1\u003d\u0026emailtype1\u003dexact\u0026emailassigned_to1\u003d1\u0026email2\u003d\u0026emailtype2\u003dexact\u0026emailreporter2\u003d1\u0026issueidtype\u003dinclude\u0026issue_id\u003d\u0026changedin\u003d\u0026votes\u003d\u0026chfieldfrom\u003d\u0026chfieldto\u003dNow\u0026chfieldvalue\u003d\u0026short_desc\u003d\u0026short_desc_type\u003dsubstring\u0026long_desc\u003d\u0026long_desc_type\u003dsubstring\u0026issue_file_loc\u003d\u0026issue_file_loc_type\u003dsubstring\u0026status_whiteboard\u003d\u0026status_whiteboard_type\u003dsubstring\u0026field0-0-0\u003dnoop\u0026type0-0-0\u003dnoop\u0026value0-0-0\u003d\u0026cmdtype\u003ddoit\u0026namedcmd\u003dglassfish_bugs\u0026newqueryname\u003d\u0026order\u003dReuse+same+sort+as+last+time",
    "ok, i will see to create a method to send a regular expression to collabnet server.\n\nthanks eugene",
    "i can write regular expression for collabnet but i did\u0027t find regular expression library...please post link else i can\u0027t try and post my code",
    "i have the code but now there are two way to insert this in the class:\none is easy but in that class will be very hard change something..\nsecond is very long to do because i have to rewrite a lot of methods, but in the future we can add a lot of regular expression in easy way\nwhat do you think?",
    "Since the Bugzilla Client has very insufficient test coverage minimizing changes to the code is key.  What would be great is if you could put most of the code into a unit test that demonstrates how it works (including parsing from a server), and then we could iterate on generalizing the bugzilla stuff to support additional regular expressions, etc.  Would that work?",
    "ok, see this test and tell me what do you think.\ndownload code from: http://www.kekkko86.altervista.org/file/test.rar",
    "That\u0027s a great start Marco.  The next step is to make this run as a unit test, and to contribute it as a patch by attaching the patch to this report.  See instructions on http://eclipse.org/mylar/dev.php on patches.\n\nMake the test similar to org.eclipse.mylar.bugzilla.tests.RegularExpressionMatchTest.  However, you should make the patch go into org.eclipse.mylar.sandbox/testsrc since it won\u0027t be run as a part of the regular test suite.  ",
    "try this and tell me more\nhttp://kekkko86.altervista.org/file/Mylar%20Patch.rar",
    "The patch needs to be attached to the Bugzilla report in order to make it possible to check into CVS (due licensing details).  Could you please add it as an attachment via the \"Create a New Attachment\" link visible in the web UI?",
    "Created an attachment (id\u003d31935)\nCollabNet support\n\n",
    "what i have to do now?",
    "Sorry for the slow reply Marco.  Please read comment#27 for what should be created\nfor the patch--this will need to be done in a test-driven way, and should not\nmodify bugzilla.core.  You could extend the search engine class if that helps\nwrite the test.",
    "sorry mik, i did patch for bugzilla.search and i did test for this patch...now i don\u0027t understand what i have to change. have you seen my patch?",
    "mik, i build a new patch for mylar 4.7. Tell me what do you think about this.",
    "Created an attachment (id\u003d33757)\nCollabNet support\n\n",
    "Marco, this is the comment I thought I had posted to the bug last week but just noticed it didn\u0027t go through.  Will look at your patch today or tomorrow.\n\n---\nThe patch can not be made to the org.eclipse.mylar.bugzilla.core project because that could break existing support.  The patch needs to go in as a test case to org.eclipse.mylar.sandbox.  To make this easier I have crated the following class for you: org.eclipse.mylar.sandbox.tests.CollabNetRegularExpressionTest\n\nNow, I realize that BugzillaSearchEngine.createHit(..) won\u0027t do the right thing for you.  So either create your own method in the test case that will, or let me know and I can make BugzillaSearchEngine extensible so that your test case can create a subclass and override createHit(..).  Either way all of your changes should be localized to the test case for the time being.  Happy hacking :)",
    "ok, look this and tell me more :)",
    "Created an attachment (id\u003d34145)\ncollabnet -sandbox\n\n",
    "Several problems:\n- Patches need to be created using the patching mechanism, see \n  http://www.eclipse.org/mylar/doc/contributing.php for more info\n- Note the above instructions on formatting\n- Patch didn\u0027t compile, but organizing imports and a fixing a variable reference fixed that.\n\nOther than that, the patch looks promising and I have committed it.  So you\nshould synch up to make sure that you are using the latest one, and base\nfuture patches off that.  \n\nNow the thing to do is to give your testMatchV220 method a more accurate name, and \nadd an assertion for every read method that you have, to ensure that they all behave\nas expected.  ",
    "Created an attachment (id\u003d34502)\ncollabnet-sandbox\n\n",
    "Mik, i did it. look this and tell me more :D",
    "Sorry for the slowness Marco, this has had to get scheduled behind refactorings \nto the task list to better support multiple repository providers.  I plan on looking\nover your patch tomorrow or next day.",
    "Marco, I tried to apply the patch, but the test fails with the following:\n\njunit.framework.ComparisonFailure: expected:\u003cnor\u003e but was:\u003c\u003ctd class\u003d\"red\"\u003e\u003cspan class\u003d\"issue_type\"\u003enor\u003c/span\u003e\u003e\n\tat junit.framework.Assert.assertEquals(Assert.java:81)\n\nAlso, please generate patches for the project, not just for the file (see http://www.eclipse.org/mylar/doc/devref.php#contributing-patches).\n",
    "Created an attachment (id\u003d35718)\nsupport CollabNet\n\n",
    "Marco, this patch is still not created correctly (it\u0027s a patch for 2 files,\nwhich makes it hard to apply, not for a project).  Please re-read the instructions\nat: http://www.eclipse.org/mylar/doc/devref.php#contributing-patches\n(and create the patch by right-clicking the project or change set).",
    "Created an attachment (id\u003d36052)\ncollab support\n\nsorry mik for this loss of time and my errors",
    "We\u0027ve had our hands full with 0.4.10 and EclipseCon, will plan to review this next week.",
    "Created an attachment (id\u003d36551)\nCollabNET support\n\n",
    "Marco: it is now looking promising for the solution discussed on bug 136219 to provide a robust solution to this.  Before continuing further on making the HTML parsing work for CollabNet we need to investigate that in case it removes the need for HTML parsing entirely.  Will keep you posted on this and the corresponding report.",
    "Mylar 0.5.2, released today, no longer relies on HTML parsing and interoperates with customized repositories such as RedHat.  As such CollabNet integration should be considerably easier.  \n\nRob, you did a bit of exploration here, what did you learn?",
    "(In reply to comment #50)\n\u003e Mylar 0.5.2, released today, no longer relies on HTML parsing and interoperates\n\u003e with customized repositories such as RedHat.  As such CollabNet integration\n\u003e should be considerably easier.  \n\nI guess it will still require something for detecting and handling base repository url, since it could be moved around quite a bit...",
    "Looking at http://subclipse.tigris.org/issues/ , I couldn\u0027t get access to reports in xml format (ctype\u003dxml) nor could I get to a config.cgi. Both of these are required for the bugzilla connector to work.",
    "(In reply to comment #52)\n\u003e Looking at http://subclipse.tigris.org/issues/ , I couldn\u0027t get access to\n\u003e reports in xml format (ctype\u003dxml) nor could I get to a config.cgi. Both of\n\u003e these are required for the bugzilla connector to work.\n\nTry this: http://subclipse.tigris.org/issues/xml.cgi?output_configured\u003dtrue\u0026id\u003d103:117:131:135:215:268:306:321:351:378:385:386:394:397:401:412:414:418:421:422:423:437:440:442:449:450:456:463:464:469:471:472:473:474:476:479:481:482:484:485:491:493:494:495:496:497\u0026include_attachments\u003dtrue\u0026download_type\u003dbrowser\n\nApparently you need to get list of id\u0027s from somewhere. Not sure how to get that list other then html. I can try to ask CollabNet folks...",
    "Perfect, this will get us bug reports, now we just need the configuration (products, milestones, components, status values, etc as rdf), oh and can we get query results in rdf (I guess this would be the list of ids you mentioned)? ",
    "Required data from Collabnet:\n\n1) Query results in RDF format. Example: https://bugs.eclipse.org/bugs/buglist.cgi?query_format\u003dadvanced\u0026short_desc_type\u003dallwordssubstr\u0026short_desc\u003d\u0026product\u003dMylar\u0026component\u003dBugzilla\u0026long_desc_type\u003dallwordssubstr\u0026long_desc\u003d\u0026bug_file_loc_type\u003dallwordssubstr\u0026bug_file_loc\u003d\u0026status_whiteboard_type\u003dallwordssubstr\u0026status_whiteboard\u003d\u0026keywords_type\u003dallwords\u0026keywords\u003d\u0026bug_status\u003dRESOLVED\u0026emailtype1\u003dsubstring\u0026email1\u003d\u0026emailtype2\u003dsubstring\u0026email2\u003d\u0026bugidtype\u003dinclude\u0026bug_id\u003d\u0026votes\u003d\u0026chfieldfrom\u003d\u0026chfieldto\u003dNow\u0026chfieldvalue\u003d\u0026cmdtype\u003ddoit\u0026order\u003dReuse+same+sort+as+last+time\u0026field0-0-0\u003dnoop\u0026type0-0-0\u003dnoop\u0026value0-0-0\u003d\u0026ctype\u003drdf\n\nNote: We also use the query facility to reduce the amount of synchronizing by querying for reports that have changed since a given date/time (accurate to second).\n\n2) Issues/reports in XML format. Example:\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d106990\u0026ctype\u003dxml\n\nContent needs to include issue attributes, comments, and attachments.\n\n3) Repository configuration in RDF. Example:\nhttps://bugs.eclipse.org/bugs/config.cgi?ctype\u003drdf\n\nProducts, components, valid status values, mappings between products, components, and target milestones, etc.\n\nNote that this link may display an error in your browser. The source is okay but we have been forced to clean it up ourselves. Ideally the product and component names etc would be properly escaped so as to avoid this problem.",
    "(In reply to comment #55)\n\nRob, this is for ideal situation. However I believe that there should be some support for existing installations.\n\n\u003e Required data from Collabnet:\n\u003e \n\u003e 1) Query results in RDF format. Example:\n\u003e https://bugs.eclipse.org/bugs/buglist.cgi?query_format\u003dadvanced\u0026short_desc_type\u003dallwordssubstr\u0026short_desc\u003d\u0026product\u003dMylar\u0026component\u003dBugzilla\u0026long_desc_type\u003dallwordssubstr\u0026long_desc\u003d\u0026bug_file_loc_type\u003dallwordssubstr\u0026bug_file_loc\u003d\u0026status_whiteboard_type\u003dallwordssubstr\u0026status_whiteboard\u003d\u0026keywords_type\u003dallwords\u0026keywords\u003d\u0026bug_status\u003dRESOLVED\u0026emailtype1\u003dsubstring\u0026email1\u003d\u0026emailtype2\u003dsubstring\u0026email2\u003d\u0026bugidtype\u003dinclude\u0026bug_id\u003d\u0026votes\u003d\u0026chfieldfrom\u003d\u0026chfieldto\u003dNow\u0026chfieldvalue\u003d\u0026cmdtype\u003ddoit\u0026order\u003dReuse+same+sort+as+last+time\u0026field0-0-0\u003dnoop\u0026type0-0-0\u003dnoop\u0026value0-0-0\u003d\u0026ctype\u003drdf\n\u003e \n\u003e Note: We also use the query facility to reduce the amount of synchronizing by\n\u003e querying for reports that have changed since a given date/time (accurate to\n\u003e second).\n\nAs I suggested before you can get list of id\u0027s with minimum html parsing even for queries with date/time. Then second query can be used to retrieve all details for those id\u0027s.\n\nBesides, it sounds like repository-specific optimization and may not be generally avaialable on XYZ repository provider.\n\n\u003e 2) Issues/reports in XML format. Example:\n\u003e https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d106990\u0026ctype\u003dxml\n\u003e Content needs to include issue attributes, comments, and attachments.\n\nhttp://subclipse.tigris.org/issues/xml.cgi?id\u003d497\n\nAttachments are encoded in base64.\n\n\u003e 3) Repository configuration in RDF. Example:\n\u003e https://bugs.eclipse.org/bugs/config.cgi?ctype\u003drdf\n\u003e \n\u003e Products, components, valid status values, mappings between products,\n\u003e components, and target milestones, etc.\n\u003e \n\u003e Note that this link may display an error in your browser. The source is okay\n\u003e but we have been forced to clean it up ourselves. Ideally the product and\n\u003e component names etc would be properly escaped so as to avoid this problem.\n\nThis one is still unclear know how to get. As a fall back, maybe it can be just manually configured in repository provider preferences with some defaults.",
    "Free Mylyn connector for CollabNet IssueZilla/IssueTracker is available from http://eclipse.open.collab.net/"
  ],
  "commentCreationDates": [
    "2005-08-15T05:52:42+02:00",
    "2005-08-15T20:32:16+02:00",
    "2005-08-15T21:27:13+02:00",
    "2005-08-17T19:21:56+02:00",
    "2005-08-17T19:44:06+02:00",
    "2005-08-17T19:48:01+02:00",
    "2005-08-17T19:53:57+02:00",
    "2005-08-17T20:10:19+02:00",
    "2005-08-17T20:18:36+02:00",
    "2005-08-17T20:37:01+02:00",
    "2005-08-17T20:46:34+02:00",
    "2005-08-17T21:10:16+02:00",
    "2005-08-17T21:14:25+02:00",
    "2005-08-29T19:38:04+02:00",
    "2005-11-15T16:01:46+01:00",
    "2005-11-15T18:25:48+01:00",
    "2005-11-16T17:03:37+01:00",
    "2005-11-18T09:39:44+01:00",
    "2005-11-18T14:58:19+01:00",
    "2005-11-21T16:04:22+01:00",
    "2005-11-25T19:32:15+01:00",
    "2005-11-25T21:00:39+01:00",
    "2005-11-26T18:37:25+01:00",
    "2005-12-04T14:49:07+01:00",
    "2005-12-04T20:30:35+01:00",
    "2005-12-09T18:51:40+01:00",
    "2005-12-10T10:06:06+01:00",
    "2005-12-14T21:06:43+01:00",
    "2005-12-18T17:56:15+01:00",
    "2005-12-19T00:04:10+01:00",
    "2005-12-19T09:47:38+01:00",
    "2006-01-10T09:46:56+01:00",
    "2006-01-18T03:30:18+01:00",
    "2006-01-27T15:57:40+01:00",
    "2006-01-28T22:13:18+01:00",
    "2006-01-28T22:14:37+01:00",
    "2006-01-30T18:29:21+01:00",
    "2006-02-04T15:36:46+01:00",
    "2006-02-04T15:39:02+01:00",
    "2006-02-07T03:13:49+01:00",
    "2006-02-10T16:01:44+01:00",
    "2006-02-10T16:04:26+01:00",
    "2006-02-20T19:55:03+01:00",
    "2006-02-28T03:14:14+01:00",
    "2006-03-04T13:59:48+01:00",
    "2006-03-08T04:42:04+01:00",
    "2006-03-10T12:52:11+01:00",
    "2006-03-17T16:58:23+01:00",
    "2006-03-18T13:49:26+01:00",
    "2006-04-12T20:30:40+02:00",
    "2006-05-23T01:38:50+02:00",
    "2006-05-23T01:41:46+02:00",
    "2006-05-23T21:49:36+02:00",
    "2006-05-23T22:16:11+02:00",
    "2006-05-23T23:02:52+02:00",
    "2006-06-02T23:26:37+02:00",
    "2006-06-03T00:02:39+02:00",
    "2007-09-11T00:58:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": ")",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2942"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2865"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3057"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2716"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.block",
          "source": "ModalContext.java:153"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:303"
        },
        {
          "method": "org.eclipse.jface.dialogs.ProgressMonitorDialog.run",
          "source": "ProgressMonitorDialog.java:447"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run",
          "source": "ProgressMonitorJobsDialog.java:261"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressManager.run",
          "source": "ProgressManager.java:1066"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction.runWithProgressBar",
          "source": "RefreshBugzillaReportsAction.java:129"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction.run",
          "source": "RefreshBugzillaReportsAction.java:69"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction.run",
          "source": "RefreshBugzillaReportsAction.java:193"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:246"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:538"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:488"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$6.handleEvent",
          "source": "ActionContributionItem.java:441"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:843"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3080"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2713"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1699"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:367"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IllegalArgumentException",
        "message": "",
        "elements": [
          {
            "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
            "source": "Assert.java:58"
          },
          {
            "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
            "source": "Assert.java:42"
          },
          {
            "method": "org.eclipse.core.runtime.Status.setMessage",
            "source": "Status.java:174"
          },
          {
            "method": "org.eclipse.core.runtime.Status.\u003cinit\u003e",
            "source": "Status.java:81"
          },
          {
            "method": "org.eclipse.mylar.bugzilla.core.search.BugzillaSearchEngine.search",
            "source": "BugzillaSearchEngine.java:283"
          },
          {
            "method": "org.eclipse.mylar.bugzilla.ui.tasklist.BugzillaCategorySearchOperation.search",
            "source": "BugzillaCategorySearchOperation.java:93"
          },
          {
            "method": "org.eclipse.mylar.bugzilla.ui.tasklist.BugzillaCategorySearchOperation.execute",
            "source": "BugzillaCategorySearchOperation.java:71"
          },
          {
            "method": "org.eclipse.mylar.bugzilla.ui.tasklist.BugzillaQueryCategory.refreshBugs",
            "source": "BugzillaQueryCategory.java:114"
          },
          {
            "method": "org.eclipse.mylar.bugzilla.ui.actions.RefreshBugzillaReportsAction$2.run",
            "source": "RefreshBugzillaReportsAction.java:168"
          },
          {
            "method": "org.eclipse.ui.internal.UILockListener.doPendingWork",
            "source": "UILockListener.java:150"
          },
          {
            "method": "org.eclipse.ui.internal.UISynchronizer$1.run",
            "source": "UISynchronizer.java:36"
          },
          {
            "method": "org.eclipse.swt.widgets.RunnableLock.run",
            "source": "RunnableLock.java:35"
          },
          {
            "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
            "source": "Synchronizer.java:123"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 2,
      "bugId": "106990",
      "date": "2005-08-15T21:27:13+02:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylar.bugzilla.ui.tasklist.BugzillaTask.updateTaskDetails",
          "source": "BugzillaTask.java:354"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.tasklist.BugzillaTask$GetBugReportJob.run",
          "source": "BugzillaTask.java:340"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "106990",
      "date": "2005-08-15T21:27:13+02:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylar.bugzilla.ui.editor.ExistingBugEditor.getTitleString",
          "source": "ExistingBugEditor.java:307"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createAttributeLayout",
          "source": "AbstractBugEditor.java:521"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createLayouts",
          "source": "AbstractBugEditor.java:509"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createInfoArea",
          "source": "AbstractBugEditor.java:452"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.editor.AbstractBugEditor.createPartControl",
          "source": "AbstractBugEditor.java:352"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPartHelper",
          "source": "EditorReference.java:609"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPart",
          "source": "EditorReference.java:384"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:552"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.setVisible",
          "source": "PartPane.java:283"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PresentablePart.setVisible",
          "source": "PresentablePart.java:126"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select",
          "source": "PresentablePartFolder.java:268"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select",
          "source": "LeftToRightTabOrder.java:65"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart",
          "source": "TabbedStackPresentation.java:391"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.refreshPresentationSelection",
          "source": "PartStack.java:1102"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.setSelection",
          "source": "PartStack.java:1051"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.showPart",
          "source": "PartStack.java:1256"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.add",
          "source": "PartStack.java:442"
        },
        {
          "method": "org.eclipse.ui.internal.EditorStack.add",
          "source": "EditorStack.java:109"
        },
        {
          "method": "org.eclipse.ui.internal.EditorSashContainer.addEditor",
          "source": "EditorSashContainer.java:60"
        },
        {
          "method": "org.eclipse.ui.internal.EditorAreaHelper.addToLayout",
          "source": "EditorAreaHelper.java:212"
        },
        {
          "method": "org.eclipse.ui.internal.EditorAreaHelper.addEditor",
          "source": "EditorAreaHelper.java:202"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.createEditorTab",
          "source": "EditorManager.java:758"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor",
          "source": "EditorManager.java:665"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openEditor",
          "source": "EditorManager.java:628"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched",
          "source": "WorkbenchPage.java:2360"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor",
          "source": "WorkbenchPage.java:2295"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$9",
          "source": "WorkbenchPage.java:2287"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$9.run",
          "source": "WorkbenchPage.java:2273"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2268"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2241"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.ui.ViewBugzillaAction.runInUIThread",
          "source": "ViewBugzillaAction.java:72"
        },
        {
          "method": "org.eclipse.ui.progress.UIJob$1.run",
          "source": "UIJob.java:93"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3057"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2716"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1699"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:367"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 2,
      "commentIndex": 19,
      "bugId": "106990",
      "date": "2005-11-21T16:04:22+01:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    }
  ],
  "groupId": "106990",
  "bugId": "106990",
  "date": "2005-08-15T05:52:42+02:00",
  "product": "Mylyn",
  "component": "Bugzilla",
  "severity": "enhancement"
}