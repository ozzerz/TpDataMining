{
  "comments": [
    "Build ID: I20070625-1500\n\nSteps To Reproduce:\nMy metamodel looks like this:\n- abstract NamedElement\n- abstract Classifier extends NamedElement\n- Class extends Classifier\n- DataType extends Classifier\n- abstract ExternalType extends Classifier\n- ExternalDataType extends DataType, ExternalType\n- Enumeration extends DataType\n\nI\u0027ve generated a diagram editor with the nodes Class, DataType, ExternalDataType, Enumeration.\nCreation of the nodes Class and DataType works well. Each time i try to create an ExternalDataType or Enumeration the following exception occurs.\nThe elements are not on the diagram, but they are stored in the model file when i save the file.\n\n\nStack Trace:\n\norg.eclipse.core.commands.ExecutionException: While executing the operation, an exception occurred\nat org.eclipse.core.commands.operations.DefaultOperationHistory.execute(DefaultOperationHistory.java:519)\nat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute(DiagramCommandStack.java:205)\nat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute(DiagramCommandStack.java:168)\nat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute(DiagramCommandStack.java:155)\nat org.eclipse.gef.tools.AbstractTool.executeCommand(AbstractTool.java:388)\nat org.eclipse.gef.tools.AbstractTool.executeCurrentCommand(AbstractTool.java:400)\nat org.eclipse.gmf.runtime.diagram.ui.tools.CreationTool.performCreation(CreationTool.java:133)\nat org.eclipse.gef.tools.CreationTool.handleButtonUp(CreationTool.java:178)\nat org.eclipse.gef.tools.AbstractTool.mouseUp(AbstractTool.java:1053)\nat org.eclipse.gef.EditDomain.mouseUp(EditDomain.java:259)\nat org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMouseReleased(DomainEventDispatcher.java:374)\nat org.eclipse.draw2d.LightweightSystem$EventHandler.mouseUp(LightweightSystem.java:538)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:206)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nat java.lang.reflect.Method.invoke(Unknown Source)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1144)\nCaused by: org.eclipse.jface.util.Assert$AssertionFailedException: null argument;failed to create a view\nat org.eclipse.jface.util.Assert.isNotNull(Assert.java:153)\nat org.eclipse.gmf.runtime.diagram.ui.commands.CreateCommand.doExecuteWithResult(CreateCommand.java:99)\nat org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand.doExecute(AbstractTransactionalCommand.java:246)\nat org.eclipse.emf.workspace.AbstractEMFOperation.execute(AbstractEMFOperation.java:137)\nat org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult(CompositeCommand.java:406)\nat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:134)\nat org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult(CompositeCommand.java:406)\nat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:134)\nat org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult(CompositeCommand.java:406)\nat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:134)\nat org.eclipse.core.commands.operations.DefaultOperationHistory.execute(DefaultOperationHistory.java:511)\n... 37 more",
    "By the way. The editor with the same metamodel has worked in earlier GMF versions (2.0M5 - 2.0M7). I think its a problem since 2.0RC2 or RC3.",
    "Created an attachment (id\u003d73192)\nsimple gmf demo of the bug\n\nI\u0027ve created a simple demo to demonstrate the bug.\nPlease have a look at it. It\u0027s really a serious bug.",
    "After debugging into the code we\u0027ve identified the problem.\nIt\u0027s located in the generated class ???VisualIDRegistry.\nThe method getNodeVisualID is looking for the supertype of a requesting domain element. It returns the first available supertype in the inheritance hierarchy, whether there is a more specialized type.\nThe simplest way to fix this is just to switch the sequence of \"switch\" and \"if\" operations.",
    "Created an attachment (id\u003d74252)\nsimple gmf demo of the bug\n\nI have the same behavior. I have an ecore file containing a root file and one class. The root element contains to references on the other class. It all works fine but my diagram editor only displays the element which is mentioned first in the gmfmap file. Each time i try to create the second one i got the same exception as shown above. If i save the file my model also contains both entries.\n\n\nThe method getNodeVisualID in the TestVisualIDRegistry file always returns the visual id for the first element. \n\npublic static int getNodeVisualID(View containerView, EObject domainElement) {\n\t\tif (domainElement \u003d\u003d null\n\t\t\t\t|| !RootEditPart.MODEL_ID\n\t\t\t\t\t\t.equals(test.diagram.part.TestVisualIDRegistry\n\t\t\t\t\t\t\t\t.getModelID(containerView))) {\n\t\t\treturn -1;\n\t\t}\n\t\tswitch (test.diagram.part.TestVisualIDRegistry\n\t\t\t\t.getVisualID(containerView)) {\n\t\tcase RootEditPart.VISUAL_ID:\n\t\t\tif (TestPackage.eINSTANCE.getElem1().isSuperTypeOf(\n\t\t\t\t\tdomainElement.eClass())) {\n\t\t\t\treturn Elem1EditPart.VISUAL_ID;\n\t\t\t}\n\t\t\tif (TestPackage.eINSTANCE.getElem1().isSuperTypeOf(\n\t\t\t\t\tdomainElement.eClass())) {\n\t\t\t\treturn Elem2EditPart.VISUAL_ID;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn -1;\n\t}\n\n",
    "Changing component",
    "To solve this problem I suggest adding appropriate constraints to corresponding NodeMappings helping GMF to clearly distinguish between these two types of NodeMappings based on domain model element only. \n\nIn particular If you have:\n-\tEClass \u003cClass1\u003e\n-\tEClass \u003cClass2\u003e extends \u003cClass1\u003e\n-\tTwo node mappings ? NodeMapping \u003cNodeMapping1\u003e for \u003cClass1\u003e and \u003cNodeMapping2\u003e for \u003cClass2\u003e\nThen this information is not enough for GMF to generate correctly working code. In particular, it is not clear which diagram node should be created for an instance of \u003cClass2\u003e (both existing NodeMappings are able to map this domain model element to the diagram node).\n\nTo resolve this conflict I suggest adding OCL constraint into the mapping model. You can add the following constraint to the \u003cNodeMapping1\u003e: ?not oclIsKindOf(\u003cyourPackage\u003e::\u003cClass2\u003e)? or ?oclIsTypeOf(\u003cyourPackage\u003e::\u003cClass1\u003e)?. The difference between these two OCL constraints is obvious: in first case you ?exclude? only \u003cClass2\u003e from \u003cNodeMapping1\u003e (possibly added/existing EClass \u003cClass3\u003e extends \u003cClass1\u003e will still be mapped as \u003cNodeMapping1\u003e) while in the second case you are explicitly mapping only \u003cClass1\u003e instances using \u003cNodeMapping1\u003e.\n\nIn prev. versions of GMF generated diagrams update procedure was not so strict and you were able to create apparently correct diagram nodes, but the following diagram reopening will probably break the picture and in any case the original diagram description (mapping model) contain errors which should be corrected in a way suggested above.\n\nSame problem could be faced with LinkMappings and can be resolved in a similar way.\n\nAs an example of the diagram describing similar node structure with corresponding constraints specified you can take org.eclipse.gmf.ecore.editor plugin with all necessary model files inside. This plugin could be helpful as en example of class-like diagrams you are developing AFAIU. ;-)\n",
    "Concerning exception attached to the request - if you think this is not a good way to show that mapping model contains errors or if exception appear again after specifying correct constraints in a mapping please reopen the request and we will suppress it.",
    "hi alex,\n\nyour advice works perfectly.\nbut in deed it\u0027s not a good way to show that the mapping model contains some errors. in my case i didn\u0027t suppose that the mapping model was wrong.\nin general i think that this kind of model inheritance is wide spread and many users could have the same problem. so i would prefer a direct feedback when validating the mapping model.",
    "(In reply to comment #8)\nThen let\u0027s say that this is a request concerning the validation - GMF should provide warning message in this situation and probably suppress an exception you\u0027ve reported in the original description.\n\n",
    "(In reply to comment #9)\nI think this would be a good solution.\n\n",
    "Moving to 2.1 timeframe.  Is this really critical?"
  ],
  "commentCreationDates": [
    "2007-07-03T16:25:49+02:00",
    "2007-07-03T16:37:48+02:00",
    "2007-07-06T14:39:41+02:00",
    "2007-07-11T16:02:38+02:00",
    "2007-07-20T13:24:00+02:00",
    "2007-07-25T12:37:04+02:00",
    "2007-07-25T13:06:13+02:00",
    "2007-07-25T13:12:36+02:00",
    "2007-07-25T14:00:12+02:00",
    "2007-07-25T14:05:56+02:00",
    "2007-07-25T14:12:46+02:00",
    "2007-10-23T15:51:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.commands.ExecutionException",
      "message": "While executing the operation, an exception occurred",
      "elements": [
        {
          "method": "org.eclipse.core.commands.operations.DefaultOperationHistory.execute",
          "source": "DefaultOperationHistory.java:519"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute",
          "source": "DiagramCommandStack.java:205"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute",
          "source": "DiagramCommandStack.java:168"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute",
          "source": "DiagramCommandStack.java:155"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.executeCommand",
          "source": "AbstractTool.java:388"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.executeCurrentCommand",
          "source": "AbstractTool.java:400"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.tools.CreationTool.performCreation",
          "source": "CreationTool.java:133"
        },
        {
          "method": "org.eclipse.gef.tools.CreationTool.handleButtonUp",
          "source": "CreationTool.java:178"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.mouseUp",
          "source": "AbstractTool.java:1053"
        },
        {
          "method": "org.eclipse.gef.EditDomain.mouseUp",
          "source": "EditDomain.java:259"
        },
        {
          "method": "org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMouseReleased",
          "source": "DomainEventDispatcher.java:374"
        },
        {
          "method": "org.eclipse.draw2d.LightweightSystem$EventHandler.mouseUp",
          "source": "LightweightSystem.java:538"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:206"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3682"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3293"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "causedBy": {
        "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
        "message": "null argument;failed to create a view",
        "elements": [
          {
            "method": "org.eclipse.jface.util.Assert.isNotNull",
            "source": "Assert.java:153"
          },
          {
            "method": "org.eclipse.gmf.runtime.diagram.ui.commands.CreateCommand.doExecuteWithResult",
            "source": "CreateCommand.java:99"
          },
          {
            "method": "org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand.doExecute",
            "source": "AbstractTransactionalCommand.java:246"
          },
          {
            "method": "org.eclipse.emf.workspace.AbstractEMFOperation.execute",
            "source": "AbstractEMFOperation.java:137"
          },
          {
            "method": "org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult",
            "source": "CompositeCommand.java:406"
          },
          {
            "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
            "source": "AbstractCommand.java:134"
          },
          {
            "method": "org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult",
            "source": "CompositeCommand.java:406"
          },
          {
            "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
            "source": "AbstractCommand.java:134"
          },
          {
            "method": "org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult",
            "source": "CompositeCommand.java:406"
          },
          {
            "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
            "source": "AbstractCommand.java:134"
          },
          {
            "method": "org.eclipse.core.commands.operations.DefaultOperationHistory.execute",
            "source": "DefaultOperationHistory.java:511"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "195272",
      "date": "2007-07-03T16:25:49+02:00",
      "product": "GMF",
      "component": "Generation",
      "severity": "critical"
    }
  ],
  "groupId": "195272",
  "bugId": "195272",
  "date": "2007-07-03T16:25:49+02:00",
  "product": "GMF",
  "component": "Generation",
  "severity": "critical"
}