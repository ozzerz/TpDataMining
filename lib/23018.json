{
  "comments": [
    "I \u0027ve got a wizard, in performFinish() it has:\n\ngetContainer().run(false, true, operation1);\n\nthen operation1 (inner class of my wizard) has inside it call to\n\ngetContainer().run(false, true, operation2);\n\nAfter finishing execution I\u0027ve got:\nUnhandled exception caught in event loop.\nReason:\njava.lang.NullPointerException\njava.lang.NullPointerException\n\tat org.eclipse.jface.wizard.WizardDialog.stopped(WizardDialog.java:938)\n\tat org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:723)\n\tat \ncom.exigen.studio.templates.defaultwizard.DefaultNewProjectFromTemplateWizard.pe\nrformFinish(DefaultNewProjectFromTemplateWizard.java:76)\n\tat org.eclipse.jface.wizard.WizardDialog.finishPressed\n(WizardDialog.java:577)\n\tat org.eclipse.jface.wizard.WizardDialog.buttonPressed\n(WizardDialog.java:312)\n.....\n\nThe reason is that when operation1 executor disposes resources at the and they \nare already disposed by operation2 execution finish.",
    "Denis,\n\n   From the description this appears to be a defect in your operation where it \nisn\u0027t disposing resources at the right time. ",
    "No. It is the bug in WizardDialog class which tries to dispose resources \n(namely cursors) twice: at the end of operation1 and at the and of operation2. \n\nPS. both getContainer() return the same WizardDialog instance",
    "I am not sure how you nest these without getting an InvalidThreadAccess. Are \nyou creating a runnable and invoking it from another one?\n\nHere is my example - let me know what you are doing differently when you run \nyours\n\npackage org.eclipse.ui.nestedwizardstest.wizards;\n\nimport org.eclipse.jface.viewers.IStructuredSelection;\nimport org.eclipse.jface.wizard.Wizard;\nimport org.eclipse.ui.INewWizard;\nimport org.eclipse.ui.IWorkbench;\nimport org.eclipse.core.runtime.*;\nimport org.eclipse.jface.operation.*;\nimport java.lang.reflect.InvocationTargetException;\nimport org.eclipse.jface.dialogs.MessageDialog;\nimport org.eclipse.jface.viewers.ISelection;\nimport org.eclipse.core.resources.*;\nimport org.eclipse.core.runtime.CoreException;\nimport java.io.*;\nimport org.eclipse.ui.*;\n\n/**\n * This is a sample new wizard. Its role is to create a new file \n * resource in the provided container. If the container resource\n * (a folder or a project) is selected in the workspace \n * when the wizard is opened, it will accept it as the target\n * container. The wizard creates one file with the extension\n * \"mpe\". If a sample multi-page editor (also available\n * as a template) is registered for the same extension, it will\n * be able to open it.\n */\n\npublic class NestedNewWizard extends Wizard implements INewWizard {\n\tprivate NestedNewWizardPage page;\n\tprivate ISelection selection;\n\n\t/**\n\t * Constructor for Nested NewWizard.\n\t */\n\tpublic NestedNewWizard() {\n\t\tsuper();\n\t\tsetNeedsProgressMonitor(true);\n\t}\n\n\t/**\n\t * Adding the page to the wizard.\n\t */\n\n\tpublic void addPages() {\n\t\tpage \u003d new NestedNewWizardPage(selection);\n\t\taddPage(page);\n\t}\n\n\t/**\n\t * This method is called when \u0027Finish\u0027 button is pressed in\n\t * the wizard. We will create an operation and run it\n\t * using wizard as execution context.\n\t */\n\tpublic boolean performFinish() {\n\t\tfinal String containerName \u003d page.getContainerName();\n\t\tfinal String fileName \u003d page.getFileName();\n\t\tfinal IRunnableWithProgress op \u003d new IRunnableWithProgress() {\n\t\t\tpublic void run(IProgressMonitor monitor)\n\t\t\t\tthrows InvocationTargetException {\n\t\t\t\ttry {\n\t\t\t\t\tdoFinish(containerName, fileName, \nmonitor);\n\t\t\t\t} catch (CoreException e) {\n\t\t\t\t\tthrow new InvocationTargetException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tmonitor.done();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tIRunnableWithProgress op2 \u003d new IRunnableWithProgress() {\n\t\t\tpublic void run(IProgressMonitor monitor)\n\t\t\t\tthrows InvocationTargetException {\n\t\t\t\ttry {\n\t\t\t\t\tgetContainer().run(true, false, op);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\n\t\t\t\t} catch (InvocationTargetException e) {\n\t\t\t\t\tThrowable realException \u003d \ne.getTargetException();\n\t\t\t\t\tMessageDialog.openError(\n\t\t\t\t\t\tgetShell(),\n\t\t\t\t\t\t\"Error\",\n\t\t\t\t\t\trealException.getMessage());\n\t\t\t\t} finally {\n\t\t\t\t\tmonitor.done();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tgetContainer().run(true, false, op2);\n\t\t} catch (InterruptedException e) {\n\t\t\treturn false;\n\t\t} catch (InvocationTargetException e) {\n\t\t\tThrowable realException \u003d e.getTargetException();\n\t\t\tMessageDialog.openError(\n\t\t\t\tgetShell(),\n\t\t\t\t\"Error\",\n\t\t\t\trealException.getMessage());\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * The worker method. It will find the container, create the\n\t * file if missing or just replace its contents, and open\n\t * the editor on the newly created file.\n\t */\n\n\tprivate void doFinish(\n\t\tString containerName,\n\t\tString fileName,\n\t\tIProgressMonitor monitor)\n\t\tthrows CoreException {\n\t\t// create a sample file\n\t\tmonitor.beginTask(\"Creating \" + fileName, 2);\n\t\tIWorkspaceRoot root \u003d ResourcesPlugin.getWorkspace().getRoot();\n\t\tIResource resource \u003d root.findMember(new Path(containerName));\n\t\tif (!resource.exists() || !(resource instanceof IContainer)) {\n\t\t\tthrowCoreException(\n\t\t\t\t\"Container \\\"\" + containerName + \"\\\" does not \nexist.\");\n\t\t}\n\t\tIContainer container \u003d (IContainer) resource;\n\t\tfinal IFile file \u003d container.getFile(new Path(fileName));\n\t\ttry {\n\t\t\tInputStream stream \u003d openContentStream();\n\t\t\tif (file.exists()) {\n\t\t\t\tfile.setContents(stream, true, true, monitor);\n\t\t\t} else {\n\t\t\t\tfile.create(stream, true, monitor);\n\t\t\t}\n\t\t\tstream.close();\n\t\t} catch (IOException e) {\n\t\t}\n\t\tmonitor.worked(1);\n\t\tmonitor.setTaskName(\"Opening file for editing...\");\n\t\tgetShell().getDisplay().asyncExec(new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\tIWorkbenchPage page \u003d\n\t\t\t\t\tPlatformUI\n\t\t\t\t\t\t.getWorkbench()\n\t\t\t\t\t\t.getActiveWorkbenchWindow()\n\t\t\t\t\t\t.getActivePage();\n\t\t\t\ttry {\n\t\t\t\t\tpage.openEditor(file);\n\t\t\t\t} catch (PartInitException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tmonitor.worked(1);\n\t}\n\n\t/**\n\t * We will initialize file contents with a sample text.\n\t */\n\n\tprivate InputStream openContentStream() {\n\t\tString contents \u003d\n\t\t\t\"This is the initial file contents for *.mpe file that \nshould be word-sorted in the Preview page of the multi-page editor\";\n\t\treturn new ByteArrayInputStream(contents.getBytes());\n\t}\n\n\tprivate void throwCoreException(String message) throws CoreException {\n\t\tIStatus status \u003d\n\t\t\tnew Status(\n\t\t\t\tIStatus.ERROR,\n\t\t\t\t\"org.eclipse.ui.nestedwizardstest\",\n\t\t\t\tIStatus.OK,\n\t\t\t\tmessage,\n\t\t\t\tnull);\n\t\tthrow new CoreException(status);\n\t}\n\n\t/**\n\t * We will accept the selection in the workbench to see if\n\t * we can initialize from it.\n\t * @see IWorkbenchWizard#init(IWorkbench, IStructuredSelection)\n\t */\n\tpublic void init(IWorkbench workbench, IStructuredSelection selection) \n{\n\t\tthis.selection \u003d selection;\n\t}\n}",
    "You run operations with fork  - that leads to thread access exception. Run \nwithout fork. [getContainer.run(false,...)].\n\nSecond, you placed setProgressMonitor(true) - it leads to another exception \n(AssertionFailed) but the nature is the same - bugs in WizardDialog.\n\nHere is my example which leads to \"propper\" exception:\n\npackage nestedtest;\n\nimport org.eclipse.jface.viewers.IStructuredSelection;\nimport org.eclipse.jface.wizard.Wizard;\nimport org.eclipse.ui.INewWizard;\nimport org.eclipse.ui.IWorkbench;\nimport org.eclipse.ui.dialogs.WizardNewProjectCreationPage;\nimport org.eclipse.core.runtime.*;\nimport org.eclipse.jface.operation.*;\nimport java.lang.reflect.InvocationTargetException;\nimport org.eclipse.jface.dialogs.MessageDialog;\nimport org.eclipse.jface.viewers.ISelection;\nimport org.eclipse.core.resources.*;\nimport org.eclipse.core.runtime.CoreException;\nimport java.io.*;\nimport org.eclipse.ui.*;\n\npublic class NewWizard1 extends Wizard implements INewWizard {\n\tprivate WizardNewProjectCreationPage page;\n\tprivate ISelection selection;\n\n\tpublic NewWizard1() {\n\t\tsuper();\n\t}\n\n\tpublic void addPages() {\n\t\tpage \u003d new WizardNewProjectCreationPage(\"test\");\n\t\taddPage(page);\n\t}\n\n\tpublic boolean performFinish() {\n\t\t\n\t\ttry {\n\t\t\tgetContainer().run(false, true, getRunnable2());\n\t\t} catch (InterruptedException e) {\n\t\t\treturn false;\n\t\t} catch (InvocationTargetException e) {\n\t\t\tThrowable realException \u003d e.getTargetException();\n\t\t\tMessageDialog.openError(\n\t\t\t\tgetShell(),\n\t\t\t\t\"Error\",\n\t\t\t\trealException.getMessage());\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tIRunnableWithProgress getRunnable1() {\n\t\treturn new IRunnableWithProgress() {\n\t\t\tpublic void run(IProgressMonitor monitor)\n\t\t\t\tthrows InvocationTargetException {\n\t\t\t\t\tif (monitor\u003d\u003dnull) monitor \u003d new \nNullProgressMonitor();\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"operation1\");\n\t\t\t\t\tmonitor.worked(1);\n\t\t\t}\n\t\t};\t\t\n\t}\n\n\tIRunnableWithProgress getRunnable2() {\n\t\treturn new IRunnableWithProgress() {\n\t\t\tpublic void run(IProgressMonitor monitor)\n\t\t\t\tthrows InvocationTargetException {\n\t\t\t\t\tif (monitor\u003d\u003dnull) monitor \u003d new \nNullProgressMonitor();\n\t\t\t\ttry {\n\t\t\t\t\tSystem.out.println(\"operation2\");\t\n\t\t\t\t\n\t\t\t\t\tgetContainer().run(false, true, \ngetRunnable1());\n\t\t\t\t\tmonitor.worked(1);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\n\t\t\t\t} catch (InvocationTargetException e) {\n\t\t\t\t\tThrowable realException \u003d \ne.getTargetException();\n\t\t\t\t\tMessageDialog.openError(\n\t\t\t\t\t\tgetShell(),\n\t\t\t\t\t\t\"Error\",\n\t\t\t\t\t\trealException.getMessage());\n\t\t\t\t} finally {\n\t\t\t\t\tmonitor.done();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * We will accept the selection in the workbench to see if\n\t * we can initialize from it.\n\t * @see IWorkbenchWizard#init(IWorkbench, IStructuredSelection)\n\t */\n\tpublic void init(IWorkbench workbench, IStructuredSelection selection) \n{\n\t\tthis.selection \u003d selection;\n\t}\n}",
    "Denis\n\nMy apologies -the response you sent this morning must have been to my personal \nmail and not to the PR - I thought it was in the PR and deleted it. If you \ncould post your responses here that would be much easier to track.\n\nI tried setting fork to false as you suggested and got an assertion failed \nbecause of the exception below which is not what you got. Please let me know \nwhat you are doing differently with ProgressMonitors to get your NPE.\n\nAre you using the 2.0 release or a later version?\n\nlipse.jface.util.Assert$AssertionFailedException: Assertion failed: \n\tat org.eclipse.jface.util.Assert.isTrue(Assert.java:162)\n\tat org.eclipse.jface.util.Assert.isTrue(Assert.java:148)\n\tat \norg.eclipse.jface.wizard.ProgressMonitorPart.removeFromCancelComponent\n(ProgressMonitorPart.java:164)\n\tat org.eclipse.jface.wizard.WizardDialog.stopped(WizardDialog.java:933)\n\tat org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:720)\n\tat \norg.eclipse.ui.nestedwizardstest.wizards.NestedNewWizard.performFinish\n(NestedNewWizard.java:90)",
    "Tod,\nI can\u0027t get what the problem with mail\n\nAs I said, to get my Exception remove setNeedsProgressMonitor() from  \nconstructor. Try my code.\n\nHowever, this AssertionFailed is the same bug about twice disposing resources.\n\nPS. I\u0027m using Eclipse 2.0\n",
    "Denis\n\nThe code you sent is not part of this PR. Please add it and then I can check \nit out.\n\nI\u0027ll try your example.",
    "Conversation has gone to email",
    "Attaching example from reporter - best to keep discussions within the problem \nreport to avoid lost information.",
    "Created an attachment (id\u003d2029)\nExample wizard\n",
    "Fixed in build \u003e 20020920",
    "Marking closed"
  ],
  "commentCreationDates": [
    "2002-08-30T10:35:00+02:00",
    "2002-08-30T18:13:04+02:00",
    "2002-09-02T07:56:17+02:00",
    "2002-09-18T22:32:33+02:00",
    "2002-09-19T08:09:38+02:00",
    "2002-09-19T14:46:46+02:00",
    "2002-09-20T07:37:40+02:00",
    "2002-09-20T14:02:36+02:00",
    "2002-09-20T14:17:12+02:00",
    "2002-09-20T14:25:27+02:00",
    "2002-09-20T14:26:30+02:00",
    "2002-09-20T20:55:15+02:00",
    "2005-05-10T20:56:35+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.stopped",
          "source": "WizardDialog.java:938"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.run",
          "source": "WizardDialog.java:723"
        },
        {
          "method": "com.exigen.studio.templates.defaultwizard.DefaultNewProjectFromTemplateWizard.performFinish",
          "source": "DefaultNewProjectFromTemplateWizard.java:76"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.finishPressed",
          "source": "WizardDialog.java:577"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:312"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "23018",
      "date": "2002-08-30T10:35:00+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    },
    {
      "exceptionType": "lipse.jface.util.Assert$AssertionFailedException",
      "message": "Assertion failed:",
      "elements": [
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:162"
        },
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:148"
        },
        {
          "method": "org.eclipse.jface.wizard.ProgressMonitorPart.removeFromCancelComponent",
          "source": "ProgressMonitorPart.java:164"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.stopped",
          "source": "WizardDialog.java:933"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.run",
          "source": "WizardDialog.java:720"
        },
        {
          "method": "org.eclipse.ui.nestedwizardstest.wizards.NestedNewWizard.performFinish",
          "source": "NestedNewWizard.java:90"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "23018",
      "date": "2002-09-19T14:46:46+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "23018",
  "bugId": "23018",
  "date": "2002-08-30T10:35:00+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}