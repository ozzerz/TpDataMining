{
  "comments": [
    "This is my code:\n\n@Aspect\npublic class TestBeanAdvice {\n\n    public static class ApplicationContextAwareImpl implements ApplicationContextAware {\n        public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n\n        }\n    }\n\n    @DeclareParents(value\u003d\"org.springframework.beans.TestBean\", defaultImpl\u003dTestBeanAdvice.ApplicationContextAwareImpl.class)\n    private ApplicationContextAware implementationInterface;\n}\n\nIf I use this advice with the load-time weaver I get this exception:\n\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name \u0027testBean\u0027 defined in class path resource [org/springframework/context/support/testbean-context.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: BeansException\nCaused by: java.lang.NoClassDefFoundError: BeansException\n\tat java.lang.Class.getDeclaredMethods0(Native Method)\n\tat java.lang.Class.privateGetDeclaredMethods(Class.java:2365)\n\tat java.lang.Class.getDeclaredMethods(Class.java:1763)\n\tat java.beans.Introspector$1.run(Introspector.java:1265)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.beans.Introspector.getPublicDeclaredMethods(Introspector.java:1263)\n\tat java.beans.Introspector.getTargetMethodInfo(Introspector.java:1129)\n\tat java.beans.Introspector.getBeanInfo(Introspector.java:387)\n\tat java.beans.Introspector.getBeanInfo(Introspector.java:159)\n\tat org.springframework.beans.CachedIntrospectionResults.\u003cinit\u003e(CachedIntrospectionResults.java:142)\n\tat org.springframework.beans.CachedIntrospectionResults.forClass(CachedIntrospectionResults.java:83)\n\tat org.springframework.beans.BeanWrapperImpl.setIntrospectionClass(BeanWrapperImpl.java:238)\n\tat org.springframework.beans.BeanWrapperImpl.setWrappedInstance(BeanWrapperImpl.java:196)\n\tat org.springframework.beans.BeanWrapperImpl.setWrappedInstance(BeanWrapperImpl.java:179)\n\tat org.springframework.beans.BeanWrapperImpl.\u003cinit\u003e(BeanWrapperImpl.java:132)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:502)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:356)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:256)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:253)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:332)\n\tat org.springframework.context.support.AspectJClassLoaderWithGenericApplicationContextTests.testCreateApplicationContextWithBeanFactoryAndAspectJClassLoader(AspectJClassLoaderWithGenericApplicationContextTests.java:63)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat com.intellij.rt.execution.junit2.JUnitStarter.main(JUnitStarter.java:32)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)\n\n(wrapped in a Spring exception, I\u0027m using the container)\n\nAfter doing some debugging I found the exception appears when loading the dependencies of the TestBean class, so I guess there\u0027s a problem with the way the parent is declared in the bytecode of TestBean.\n\nYou can find the TestBean class here:\n\nhttp://fisheye1.cenqua.com/browse/~raw,r\u003d1.28/springframework/spring/test/org/springframework/beans/TestBean.java\n\nSteven",
    "Problem was someone calling getClassName() rather than getName() - the latter includes the package name in what it returns, the former does not.  I also fixed a bug that occurs if you fail to declare that the Impl class implements the interface - it was failing at runtime with an IncompatibleClassChangeError, it now gives an error at compile time.\n\nFix committed - waiting on build.",
    "fix available in latest dev build."
  ],
  "commentCreationDates": [
    "2006-06-19T11:48:49+02:00",
    "2006-06-20T09:48:43+02:00",
    "2006-06-20T12:57:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "BeansException",
      "elements": [
        {
          "method": "java.lang.Class.getDeclaredMethods0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.privateGetDeclaredMethods",
          "source": "Class.java:2365"
        },
        {
          "method": "java.lang.Class.getDeclaredMethods",
          "source": "Class.java:1763"
        },
        {
          "method": "java.beans.Introspector$1.run",
          "source": "Introspector.java:1265"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.beans.Introspector.getPublicDeclaredMethods",
          "source": "Introspector.java:1263"
        },
        {
          "method": "java.beans.Introspector.getTargetMethodInfo",
          "source": "Introspector.java:1129"
        },
        {
          "method": "java.beans.Introspector.getBeanInfo",
          "source": "Introspector.java:387"
        },
        {
          "method": "java.beans.Introspector.getBeanInfo",
          "source": "Introspector.java:159"
        },
        {
          "method": "org.springframework.beans.CachedIntrospectionResults.\u003cinit\u003e",
          "source": "CachedIntrospectionResults.java:142"
        },
        {
          "method": "org.springframework.beans.CachedIntrospectionResults.forClass",
          "source": "CachedIntrospectionResults.java:83"
        },
        {
          "method": "org.springframework.beans.BeanWrapperImpl.setIntrospectionClass",
          "source": "BeanWrapperImpl.java:238"
        },
        {
          "method": "org.springframework.beans.BeanWrapperImpl.setWrappedInstance",
          "source": "BeanWrapperImpl.java:196"
        },
        {
          "method": "org.springframework.beans.BeanWrapperImpl.setWrappedInstance",
          "source": "BeanWrapperImpl.java:179"
        },
        {
          "method": "org.springframework.beans.BeanWrapperImpl.\u003cinit\u003e",
          "source": "BeanWrapperImpl.java:132"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean",
          "source": "AbstractAutowireCapableBeanFactory.java:502"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean",
          "source": "AbstractAutowireCapableBeanFactory.java:356"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractBeanFactory.getBean",
          "source": "AbstractBeanFactory.java:256"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractBeanFactory.getBean",
          "source": "AbstractBeanFactory.java:167"
        },
        {
          "method": "org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons",
          "source": "DefaultListableBeanFactory.java:253"
        },
        {
          "method": "org.springframework.context.support.AbstractApplicationContext.refresh",
          "source": "AbstractApplicationContext.java:332"
        },
        {
          "method": "org.springframework.context.support.AspectJClassLoaderWithGenericApplicationContextTests.testCreateApplicationContextWithBeanFactoryAndAspectJClassLoader",
          "source": "AspectJClassLoaderWithGenericApplicationContextTests.java:63"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "com.intellij.rt.execution.junit2.JUnitStarter.main",
          "source": "JUnitStarter.java:32"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "com.intellij.rt.execution.application.AppMain.main",
          "source": "AppMain.java:90"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "147701",
      "date": "2006-06-19T11:48:49+02:00",
      "product": "AspectJ",
      "component": "LTWeaving",
      "severity": "normal"
    }
  ],
  "groupId": "147701",
  "bugId": "147701",
  "date": "2006-06-19T11:48:49+02:00",
  "product": "AspectJ",
  "component": "LTWeaving",
  "severity": "normal"
}