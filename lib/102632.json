{
  "comments": [
    "Hello,\n\nI\u0027m probably very fast with entering this feature request, but with JUnit 4 in\nthe works, I would like to verify that JUnit 4 will get integrated into Eclipse\nvery soon.\n\nJUnit 4, requiring Java 5, uses Java annotations to mark test methods, setup and\nteardown methods and test decorators. This will probably have an influence on\nhow Eclipse should collect all test methods as well as on the integrated Eclipse\nJUnit test runner.\n\nRingo",
    "Eclipse 3.1 can already execute JUnit 4 tests. Have you tried it ;-). All you\nhave to do is to use the test execution adapter provided by JUnit 4 inside the\nsuite method.",
    "The adapter based integration is imperfect. It works for whole classes but not\nindiivdual methods. That is,  the tests in \norg.junit.samples.ListTest by selecting the class in Package Explorer \nand choosing Run As JUnit test from the context menu. The tests pass. Cool!\n\nHowever, if instead of selecting the entire test I just select one test \nmethod; e.g. contains(); then the test fails like so:\n\njunit.framework.AssertionFailedError: Could not create test \u0027contains\u0027\n\tat junit.framework.Assert.fail(Assert.java:51)\n\tat \norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner$2.runTest(RemoteTestRunner.java:557)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:110)\n\tat junit.framework.TestResult.runProtected(TestResult.java:128)\n\tat junit.framework.TestResult.run(TestResult.java:113)\n\tat junit.framework.TestCase.run(TestCase.java:120)\n\tat \norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)\n\tat \norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)\n\tat \norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\nI don\u0027t suggest working on this until JUnit 4 is released, but once it is this\nis worth addressing. ",
    "We are working on a full JUnit4 integration for 3.2.",
    "Created an attachment (id\u003d27534)\nProposed patches and tests for JUnit 4 support in Eclipse\n\nThis is an interim post of the patches I\u0027m proposing to introduce full JUnit 4\nsupport into Eclipse, with the option of running against a JUnit 3 / Java 1.4\nruntime as well.  The current status:\n\nCurrently the following work for both JUnit 3 and 4:\n\n1) Run tests by manually creating a test configuration\n2) Navigate to failure method\n3) Rerun failing test from failure or hierarchy tabs\n4) Run all tests in a container by manually creating a test configuration\n5) Run plug-in tests\n\nThis is half done, but currently broken:\n\n6) Run As \u003e JUnit test correctly runs either JUnit 3 or 4 tests\n\nThese work in JUnit 3, but not yet JUnit 4:\n\n7) Rerun button from JUnit view\n9) Stop button from JUnit view\n10) Compare values in a comparison failure\n\nI\u0027ve broken this in JUnit 3, and it doesn\u0027t work yet in JUnit 4:\n\n8) Rerun failures first\n\nThis doesn\u0027t work yet:\n\n11) Automatically run all JUnit 3 and JUnit 4 tests in a project simultaneously\n\n\nAnd I know exactly the refactoring that has to happen for this, but haven\u0027t\ndone it yet:\n\n12) Do not require 1.5 JVM when running only JUnit 3 tests.\n\nI\u0027ve been planning all along with the assumption that there will be some users\nthat have only a 1.4 JVM, and therefore can only use JUnit 3.8.  This will\nrequire splitting up the junit.runtime plug-in, which makes patching more\ncomplicated, so I\u0027ve been putting it off for now.\n\nTo get started trying this out, unzip the attached file, and look at\neclipse-junit4-root/README.  This is not for the faint of heart--these are big\npatches against CVS, with some legwork to get them working.  However, feedback\nis appreciated.  I\u0027ll try to keep further updates coming every couple days as\nitems get checked off the list above.  Unfortunately, the JMock binaries I\u0027ve\nbeen using are too big to post, so you\u0027ll have to get them from subversion, as\ndescribed in the README file.  I\u0027ll post the tests as a different attachment.",
    "Created an attachment (id\u003d27535)\nThe tests for JUnit, which go with the previous patch\n",
    "Created an attachment (id\u003d28100)\nUpdated patches and tests for JUnit 4 in Eclipse\n\nNew status:\n\nCurrently the following work for both JUnit 3 and 4:\n\n1) Run tests by manually creating a test configuration\n2) Navigate to failure method\n3) Rerun failing test from failure or hierarchy tabs\n4) Run all tests in a container by manually creating a test configuration\n5) Run plug-in tests\n6) Run As \u003e JUnit test correctly runs either JUnit 3 or 4 tests\n\nThese work, but do not have tests in JUnit 4:\n\n7) Rerun button from JUnit view\n10) Compare values in a comparison failure\n\nThis partially works:\n\n9) Stop button from JUnit view (only stops between classes, not between\nmethods)\n\nI\u0027ve broken this in JUnit 3, and it doesn\u0027t work yet in JUnit 4:\n\n8) Rerun failures first\n\nThis doesn\u0027t work yet:\n\n11) Automatically run all JUnit 3 and JUnit 4 tests in a project simultaneously\n\n\nAnd I know exactly the refactoring that has to happen for this, but haven\u0027t\ndone it yet:\n\n12) Do not require 1.5 JVM when running only JUnit 3 tests.",
    "Created an attachment (id\u003d28101)\nUpdated tests for JUnit\n",
    "Hi David, thanks a lot for the patches. \n\nUnfortunatelly we didn\u0027t find any time to look at them in the M3 time frame\n(lots of us were on vacation). \n\nMarkus Keller will be our new man for JUnit. Our idea is to have JUnit4\nintegration and some sort of test model for Eclips itself. I have asked Markus\nto look at this during the M4 time frame and he will look at the patches you\nhave provided so far.\n\nMarkus, a small tip: the patches are zips which contain a lot of unneccessary\nstuff. The interesting file are the patch files in the root of \u0027eclipse-junit4-root\u0027",
    "Dirk,\n\nSorry, I thought I had added myself to the CC list when I posted the patches.  I\u0027m happy to devote more time to this, and I look forward to feedback from Markus soon.",
    "David: I\u0027m currently reorganizing the jdt.junit plugin to create a model for test sessions. I had a look at your patches and I think it\u0027s easier for me to make the model first and then adapt to JUnit 4.\nAs soon as I\u0027m done with the model, I\u0027ll integrate JUnit 4 support from your patches.",
    "Markus,\n\nI\u0027d be happy to refit my patches to the new JUnit-with-model.  Would that be useful?",
    "Created an attachment (id\u003d33736)\nPatches for existing JUnit-facing Eclipse plug-ins\n\n",
    "Created an attachment (id\u003d33737)\nNew plug-ins for handling junit 4\n\n",
    "I\u0027ve attached the latest patches.  The chief advances are:\n\n1) The patches are clean, without svn or CVS junk\n2) The patches are against Markus\u0027 JUnit w/ Model patch, sent to me in mid-December\n3) They work with (and contain) the CVS version of JUnit 4 from this morning, which has changed rather drastically from before.\n4) Classes annotated with @RunWith are recognized as JUnit 4 test classes\n\nKnown problems:\n1) Run with failed first has not yet been fixed\n2) Does not automatically run all JUnit 3 and JUnit 4 tests from a project simultaneously\n3) Still requires JRE 1.5 even for JUnit 3 tests.\n\nFixes for these are coming soon.  Please provide feedback--it would be great to have Eclipse support JUnit 4 at the same time that JUnit 4 goes final.",
    "Created an attachment (id\u003d34180)\nPatches for existing plug-ins, version 2006 Feb 06\n\n",
    "Created an attachment (id\u003d34181)\nNew plug-ins for handling junit 4, version 2006 Feb 06\n\n",
    "This latest version has a couple fixes.  It runs with the updated JUnit 4 API.  Most importantly, each test kind can now specify its own runtime classpath, meaning that JUnit 3 tests can run on top of old JRE\u0027s, and not require the JUnit 4 jars.",
    "Created an attachment (id\u003d34258)\nPatches for existing plug-ins, version 2006 Feb 06b\n\nAgainst HEAD, with proper copyright headers",
    "Created an attachment (id\u003d34259)\nNew plug-ins for handling junit 4, version 2006 Feb 06b\n\nWith proper headers, compiles against HEAD",
    "*** Bug 128376 has been marked as a duplicate of this bug. ***",
    "A note to Juergen, who posted bug 128376:\n\nIf you use JUnit 4\u0027s backwards compatibility, you can run your JUnit 4 tests in Eclipse.  Add to your suite or test class:\n\npublic static Test suite() {\n   return new JUnit4Adapter(ThisClass.class);\n}\n\nLet me know if this works for you.  Thanks.",
    "\u003e Add to your suite or test class:\n\u003e public static Test suite() {\n\u003e    return new JUnit4Adapter(ThisClass.class);\n\u003e }\n\u003e Let me know if this works for you.\n\nYes, this works fine.\n",
    "This is great stuff.  Are we looking at 3.2 M6 as a timeframe for expecting this?",
    "\u003e Are we looking at 3.2 M6 as a timeframe for expecting this?\n\nYes, that\u0027s the plan. Sorry that I forgot to set the milestone. We\u0027re sorting out some last legal and technical issues before this can be released.",
    "We now got legal approvement for adding JUnit4, but it\u0027s unfortunately too late for M6. Moving to RC1.",
    "It was my understanding that M6 marked \u0027feature freeze\u0027 for the 3.2 release.  Is it really possible that Junit4 support will be rolled into RC1?  Wouldn\u0027t that constitute a new feature?",
    "As stated in the end game plan, new features for RC1 need PMC approval. I\u0027ll do that request as soon as we ready.",
    "Sorry for asking questions within this bug, but is there a short description on how to use JUnit 4 within Eclipse 3.2. I\u0027ve just tried Eclipse 3.2RC1 and I still have to extend my class from TestCase and need to provide a suite() method that returns a new JUnit4TestAdapter. Otherwise I cannot run my test class as JUnit test.",
    "(In reply to comment #27)\n\u003e As stated in the end game plan, new features for RC1 need PMC approval. I\u0027ll do\n\u003e that request as soon as we ready.\n\u003e \ngetting JUnit4 support into the RC has PMC approval",
    "released updated JUnit 4 wizard, new JUnit classpath container, updated quick fixes \u003e 20060421",
    "(Various API additions in org.eclipse.jdt.junit.wizards.NewTestCaseWizardPageOne)",
    "Released support for JUnit4 \u003e 20060426. Launch Configurations can now specify a JUnit4 Test Loader.\n\nPlease open new bug reports if you find problems with the solution in the upcoming builds.",
    "Grrr... sorry for the spam. Setting to FIXED."
  ],
  "commentCreationDates": [
    "2005-07-04T11:23:47+02:00",
    "2005-07-04T15:55:03+02:00",
    "2005-08-23T17:31:24+02:00",
    "2005-08-23T17:46:55+02:00",
    "2005-09-26T21:50:44+02:00",
    "2005-09-26T21:51:15+02:00",
    "2005-10-11T04:08:43+02:00",
    "2005-10-11T04:10:56+02:00",
    "2005-11-04T15:26:01+01:00",
    "2005-11-21T20:50:28+01:00",
    "2005-11-23T11:46:18+01:00",
    "2005-11-30T01:48:37+01:00",
    "2006-01-27T21:08:02+01:00",
    "2006-01-27T21:08:34+01:00",
    "2006-01-27T21:14:51+01:00",
    "2006-02-06T08:08:24+01:00",
    "2006-02-06T08:09:50+01:00",
    "2006-02-06T08:11:56+01:00",
    "2006-02-07T04:41:43+01:00",
    "2006-02-07T04:42:42+01:00",
    "2006-02-17T13:54:59+01:00",
    "2006-02-17T15:47:36+01:00",
    "2006-02-18T07:16:58+01:00",
    "2006-03-02T21:07:15+01:00",
    "2006-03-03T09:21:08+01:00",
    "2006-03-28T11:32:49+02:00",
    "2006-04-09T21:06:10+02:00",
    "2006-04-10T11:03:39+02:00",
    "2006-04-16T23:02:24+02:00",
    "2006-04-21T10:53:02+02:00",
    "2006-04-21T19:02:55+02:00",
    "2006-04-24T20:52:38+02:00",
    "2006-04-26T16:37:03+02:00",
    "2006-04-26T16:38:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Could not create test \u0027contains\u0027",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:51"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner$2.runTest",
          "source": "RemoteTestRunner.java:557"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:130"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:110"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:128"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:113"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:120"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:478"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:344"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main",
          "source": "RemoteTestRunner.java:196"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "102632",
      "date": "2005-08-23T17:31:24+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "102632",
  "bugId": "102632",
  "date": "2005-07-04T11:23:47+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "enhancement"
}