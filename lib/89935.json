{
  "comments": [
    "When running a java application from Eclipse with Debug or Run, then code\nrequesting a Cipher object through Cipher.getInstance will fail. This only\nhappens if the JRE used is not configured (Window, Preferences, Java, Installed\nJREs, ${jre}, Edit) to \"Use default system libraries \".\n\nExample code to produce the error:\n---\npublic static void main(String[] args) {\n  Cipher cp;\n  try {\n    cp\u003dCipher.getInstance(\"DES/ECB/NoPadding\", \"SunJCE\");\n    cp\u003dCipher.getInstance(\"DES/ECB/NoPadding\");\n    System.out.println(\"JCE OK\");\n  } catch (NoSuchAlgorithmException e) {\n    e.printStackTrace();\n  } catch (NoSuchProviderException e) {\n    e.printStackTrace();\n  } catch (NoSuchPaddingException e) {\n    e.printStackTrace();\n  }\n}\n---\nWith \"Use default system libraries\" it works without problems.\nWith default configuration for JRE and \"Use default system libraries\" switched off,\nit produces following stack dump:\n---\nException in thread \"main\" java.lang.SecurityException: JCE cannot authenticate\nthe provider SunJCE\n\tat javax.crypto.Cipher.getInstance(DashoA12275)\n\tat javax.crypto.Cipher.getInstance(DashoA12275)\n\tat TestCaseJCE.main(TestCaseJCE.java:22)\nCaused by: java.util.jar.JarException: Class is on the bootclasspath\n\tat javax.crypto.SunJCE_d.a(DashoA12275)\n\tat javax.crypto.SunJCE_b.b(DashoA12275)\n\tat javax.crypto.SunJCE_b.a(DashoA12275)\n\t... 3 more\n---\nAs far as I have discovered this is caused by JRE default setting, placing all\njar files from lib/ext directory into bootclasspath when \"Use default system\nlibraries\" is switched off. This includes the SUN JCE provider\n\"sunjce_provider.jar\". Obviously the verification of the JCE provider fails if\nit is located in bootclasspath. The problem can be easily solved by removing\nsunjce_provider.jar from list of JRE jar files. Then again the above code runs\nwithout problems.\nIn my opinion the default settings when importing a JRE into Eclipse should be\nchanged not to include sunjce_provider.jar.\nOne may argue that switching off \"Use default system libraries\" is typically not\nthe case, but if source code is attached to one of the JRE jar files (including\nthe lib/ext files), then this is done automatically by Eclipse.\n\nPS: I have discovered the problem running Windows XP on PC platform. Anyway I\nexpect the problem to be platform and OS independent. I may have assigned the\nproblem to the wrong component, please correct this if there is a better\ncomponent fitting this problem.",
    "Verified that changing a source attachment on a system lib does cause the \nbootpath to be specified explcitly on the launch commad line. Chaing a source \nattachment or javadoc location should not require the boot path to be \nspecified by the launcher - only a change in libs or ordering of them.",
    "Fixed in JRERuntimeClasspathEntryResolver and \nAbstractJavaLaunchConfigurationDelegate. When comparing the default libaries \nto the user specified libraries, the comparison only considers the archive \nlocations (ignores source attachment, javadoc, etc). At runtime, only the \nbinaries matter.",
    "Please verify, Luc.",
    "Very related bug Bug 95898",
    "*** Bug 95898 has been marked as a duplicate of this bug. ***",
    "Verified.",
    "Hi guys,  \n  \ncan someone explain/verify that this bug is fixed in Eclipse 3.1 final with  \nSun JDK 1.5.0_04? Could there have been a regression?  \n  \nI still get the error when trying to establish a connection to an SSL Endpoint  \nvia Apache Axis Client code from my JUnit Test cases.  \n  \nWhen I activate \"Use default system libraries\" in the JRE properties, it  \nworks, when I deactivate it, and add JDK\u0027s src.zip, I get the error.  \n  \nWhen I run the JUnit Testcase from the command line against the same JDK (with  \nthe same set of options) everything works fine... \n \nScratching my head, waiting for enlightenment, \nFlexx ",
    "I cannot reproduce the problem with the test case from this bug report.\nIt is possible there\u0027s still a problem when launching a JUnit test case (it\u0027s\nnot the same code).\nPlease file an new bug report, with a simple test case if possible.",
    "*** Bug 46510 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-04-01T12:07:05+02:00",
    "2005-04-01T17:33:38+02:00",
    "2005-05-16T21:57:49+02:00",
    "2005-05-16T21:58:06+02:00",
    "2005-05-19T18:21:36+02:00",
    "2005-05-19T18:45:49+02:00",
    "2005-05-23T20:30:50+02:00",
    "2005-06-30T14:58:49+02:00",
    "2005-06-30T19:56:11+02:00",
    "2005-07-06T22:18:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.SecurityException",
      "message": "JCE cannot authenticate the provider SunJCE",
      "elements": [
        {
          "method": "javax.crypto.Cipher.getInstance",
          "source": "DashoA12275"
        },
        {
          "method": "javax.crypto.Cipher.getInstance",
          "source": "DashoA12275"
        },
        {
          "method": "TestCaseJCE.main",
          "source": "TestCaseJCE.java:22"
        }
      ],
      "causedBy": {
        "exceptionType": "java.util.jar.JarException",
        "message": "Class is on the bootclasspath",
        "elements": [
          {
            "method": "javax.crypto.SunJCE_d.a",
            "source": "DashoA12275"
          },
          {
            "method": "javax.crypto.SunJCE_b.b",
            "source": "DashoA12275"
          },
          {
            "method": "javax.crypto.SunJCE_b.a",
            "source": "DashoA12275"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "89935",
      "date": "2005-04-01T12:07:05+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "major"
    }
  ],
  "groupId": "89935",
  "bugId": "89935",
  "date": "2005-04-01T12:07:05+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "major"
}