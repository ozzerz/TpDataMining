{
  "comments": [
    "I have an aspect that declares an annotation on a method based on a complex condition :\n\ndeclare @method : !@(Write || Read) public !static * (@MarkMyMethods *).*(..) : @Write;\n\nBasically that means that every type that is annotated with @MarkMyMethods should have all of its public non static methods be annotated with either @Read or @Write. If neither of @Read nor @Write is present on such a method, @Write is added by default.\n\nI have another aspect that makes every type annotated with @InjectName implement  the Named interface :\n\npublic Interface Named { public String getName(); }\n\npublic aspect NameAspect {\n  declare parents: @InjectName * implements Named;\n  \n  private String Named.name;\t\n  public  String Named.getName() { return name; }\n}\n\nAs soon as I annotate a class with both @MarkMyMethods and @InjectName, I get an internal null pointer exception at weave time.\n\nHowever if I change the first aspect to say :\n\n  declare @method : !@(Read) public !static * (@MarkMyMethods *).*(..) : @Write;\n  or\n  declare @method : !@(Write) public !static * (@MarkMyMethods *).*(..) : @Write;\n\ninstead of the !@(Read || Write) one, everything compiles fine.\n\nHere is a link to a small application that exhibits the bug. :\n  \nhttp://www.cs.mcgill.ca/~jlegar/src_jslegare.zip\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nHere is the error output :\n\njava.lang.NullPointerException\nat org.aspectj.weaver.patterns.WildAnnotationTypePattern.matches(WildAnnotationTypePattern.java:61)\nat org.aspectj.weaver.patterns.NotAnnotationTypePattern.matches(NotAnnotationTypePattern.java:35)\nat org.aspectj.weaver.patterns.SignaturePattern.matchesAnnotations(SignaturePattern.java:488)\nat org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:331)\nat org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:288)\nat org.aspectj.weaver.patterns.DeclareAnnotation.matches(DeclareAnnotation.java:247)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weaveAtMethodOnITDSRepeatedly(BcelClassWeaver.java:995)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weaveDeclareAtMethodCtor(BcelClassWeaver.java:730)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:430)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1078)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:156)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\ntrouble in: \npublic class NameAspect extends java.lang.Object:\n  TypeMungers: [(BcelTypeMunger ResolvedTypeMunger(Method, java.lang.String Named.getName())), (BcelTypeMunger ResolvedTypeMunger(Field, java.lang.String Named.name))]\n     declares: [declare parents: @InjectName * extends (Named);]\n  private static Throwable ajc$initFailureCause\n  public static final NameAspect ajc$perSingletonInstance\n  static void \u003cclinit\u003e():\n    catch java.lang.Throwable -\u003e E0\n    |               INVOKESTATIC NameAspect.ajc$postClinit ()V   (line 2)\n    catch java.lang.Throwable -\u003e E0\n                    GOTO L0\n                E0: ASTORE_0\n                    ALOAD_0\n                    PUTSTATIC NameAspect.ajc$initFailureCause Ljava/lang/Throwable;\n                L0: RETURN\n  end static void \u003cclinit\u003e()\n\n  public void \u003cinit\u003e():\n                    ALOAD_0     // NameAspect this   (line 2)\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n                    RETURN\n  end public void \u003cinit\u003e()\n\n  void ajc$declare_parents_1()    org.aspectj.weaver.MethodDeclarationLineNumber: 5:40\n:\n                    RETURN   (line 5)\n  end void ajc$declare_parents_1()\n\n  public static String ajc$interMethod$NameAspect$Named$getName(Named)    EffectiveSignatureAttribute(java.lang.String Named.getName(), method-execution)\n:\n                    ALOAD_0     // Named ajc$this_   (line 11)\n                    INVOKESTATIC NameAspect.ajc$interFieldGetDispatch$NameAspect$Named$name (LNamed;)Ljava/lang/String;\n                    ARETURN\n  end public static String ajc$interMethod$NameAspect$Named$getName(Named)\n\n  public static String ajc$interMethodDispatch1$NameAspect$Named$getName(Named)    EffectiveSignatureAttribute(java.lang.String Named.getName(), method-call)\n:\n                    ALOAD_0\n                    INVOKEINTERFACE Named.getName ()Ljava/lang/String;\n                    ARETURN\n  end public static String ajc$interMethodDispatch1$NameAspect$Named$getName(Named)\n\n  public static void ajc$interFieldInit$NameAspect$Named$name(Named)    org.aspectj.weaver.MethodDeclarationLineNumber: 12:279\n:\n                    RETURN   (line 12)\n  end public static void ajc$interFieldInit$NameAspect$Named$name(Named)\n\n  public static String ajc$interFieldGetDispatch$NameAspect$Named$name(Named)    EffectiveSignatureAttribute(java.lang.String Named.name, field-get)\n:\n                    ALOAD_0\n                    INVOKEINTERFACE Named.ajc$interFieldGet$NameAspect$Named$name ()Ljava/lang/String;\n                    ARETURN\n  end public static String ajc$interFieldGetDispatch$NameAspect$Named$name(Named)\n\n  public static void ajc$interFieldSetDispatch$NameAspect$Named$name(Named, String)    EffectiveSignatureAttribute(java.lang.String Named.name, field-set)\n:\n                    ALOAD_0\n                    ALOAD_1\n                    INVOKEINTERFACE Named.ajc$interFieldSet$NameAspect$Named$name (Ljava/lang/String;)V\n                    RETURN\n  end public static void ajc$interFieldSetDispatch$NameAspect$Named$name(Named, String)\n\n  public void ajc$after$NameAspect$1$dd96786a(Named)    AdviceAttribute(after, (execution(Named+.new(..)) \u0026\u0026 target(BindingTypePattern(Named, 0))), 0, 296)\n:\n                    GETSTATIC java.lang.System.out Ljava/io/PrintStream;   (line 15)\n                    LDC \"A new name was created\"\n                    INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V\n                    ALOAD_1     // Named newinstance   (line 16)\n                    LDC \"TikaTikaSlimShady\"\n                    INVOKESTATIC NameAspect.ajc$interFieldSetDispatch$NameAspect$Named$name (LNamed;Ljava/lang/String;)V\n                    RETURN   (line 17)\n  end public void ajc$after$NameAspect$1$dd96786a(Named)\n\n  public static NameAspect aspectOf()    org.aspectj.weaver.AjAttribute$AjSynthetic@14d92f0\n:\n                    GETSTATIC NameAspect.ajc$perSingletonInstance LNameAspect;\n                    IFNONNULL L0\n                    NEW org.aspectj.lang.NoAspectBoundException\n                    DUP\n                    LDC \"NameAspect\"\n                    GETSTATIC NameAspect.ajc$initFailureCause Ljava/lang/Throwable;\n                    INVOKESPECIAL org.aspectj.lang.NoAspectBoundException.\u003cinit\u003e (Ljava/lang/String;Ljava/lang/Throwable;)V\n                    ATHROW\n                L0: GETSTATIC NameAspect.ajc$perSingletonInstance LNameAspect;\n                    ARETURN\n  end public static NameAspect aspectOf()\n\n  public static boolean hasAspect()    org.aspectj.weaver.AjAttribute$AjSynthetic@12e2f2e\n:\n                    GETSTATIC NameAspect.ajc$perSingletonInstance LNameAspect;\n                    IFNULL L0\n                    ICONST_1\n                    IRETURN\n                L0: ICONST_0\n                    IRETURN\n  end public static boolean hasAspect()\n\n  private static void ajc$postClinit()    org.aspectj.weaver.AjAttribute$AjSynthetic@1f0523b\n:\n                    NEW NameAspect\n                    DUP\n                    INVOKESPECIAL NameAspect.\u003cinit\u003e ()V\n                    PUTSTATIC NameAspect.ajc$perSingletonInstance LNameAspect;\n                    RETURN\n  end private static void ajc$postClinit()\nend public class NameAspect\n\nwhen weaving type NameAspect\nwhen weaving aspects \nwhen weaving \nwhen batch building BuildConfig[D:\\workspace\\.metadata\\.plugins\\org.eclipse.ajdt.core\\AspectSandBox.generated.lst] #Files\u003d8",
    "Created an attachment (id\u003d32946)\nContains 8 files (2 aspects, 4 annotations, 1 interface, 1 class) in one package (default package). Smallest application I could create that exhibits the bug. Everything is weaved on class Main. \n\nSame thing as the one cited in the bug\u0027s text (the URL).",
    "I\u0027ve just checked the fix for this into AspectJ.  The NPE can no longer occur *but* that doesn\u0027t mean your program works as I\u0027ve not spent time digging into whether it behaves as expected - but removing the NPE at least gets it compiling.",
    "fix for NPE is available in latest AspectJ dev build.  Will be in AJDT in a few days."
  ],
  "commentCreationDates": [
    "2006-01-13T00:59:45+01:00",
    "2006-01-13T01:03:59+01:00",
    "2006-01-17T13:45:55+01:00",
    "2006-01-17T16:52:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.patterns.WildAnnotationTypePattern.matches",
          "source": "WildAnnotationTypePattern.java:61"
        },
        {
          "method": "org.aspectj.weaver.patterns.NotAnnotationTypePattern.matches",
          "source": "NotAnnotationTypePattern.java:35"
        },
        {
          "method": "org.aspectj.weaver.patterns.SignaturePattern.matchesAnnotations",
          "source": "SignaturePattern.java:488"
        },
        {
          "method": "org.aspectj.weaver.patterns.SignaturePattern.matchesExactly",
          "source": "SignaturePattern.java:331"
        },
        {
          "method": "org.aspectj.weaver.patterns.SignaturePattern.matches",
          "source": "SignaturePattern.java:288"
        },
        {
          "method": "org.aspectj.weaver.patterns.DeclareAnnotation.matches",
          "source": "DeclareAnnotation.java:247"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weaveAtMethodOnITDSRepeatedly",
          "source": "BcelClassWeaver.java:995"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weaveDeclareAtMethodCtor",
          "source": "BcelClassWeaver.java:730"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:430"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:102"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1543"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1494"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:1275"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1078"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:811"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:230"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:156"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:122"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "123695",
      "date": "2006-01-13T00:59:45+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "123695",
  "bugId": "123695",
  "date": "2006-01-13T00:59:45+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}