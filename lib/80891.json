{
  "comments": [
    "I have an abstract class (which I will attach) with a static member that is\ndefined with an anonymous class of the same type as the enclosing class. \nAttempting to Refactor-\u003eMove Member Type to New File results in an error, null\nargument.  \n\nHere is the relevant snippet.  I\u0027m trying to extract the class assigned to\nLastDay to a separate file. I have my cursor on the second instance of the word\nRelative DateRange on that line:\n\npublic abstract class RelativeDateRange\n{\n    public static final RelativeDateRange LastDay \u003d new RelativeDateRange()  //\n\u003c- This is the inner class I want to extract to its own file. \n    {\n\n        public Date getStartTime()\n        {\n            Calendar cal \u003d todayMidnight();\n\n            // back one day \n            cal.add(Calendar.DAY_OF_YEAR, -1);\n            return cal.getTime();\n        }\n\n        public Date getEndTime()\n        {\n            Calendar cal \u003d todayMidnight();\n            \n            return cal.getTime();\n        }\n\n        public String getValue()\n        {\n            return \"LastDay\";\n        }\n        \n        public String getLabelKey()\n        {\n            return \"dateRange.lastDay\";\n        }\n        \n    };\n\n   .... // snip\n\n}\n\n\n\n\nThe trace from the log follows:\n\nCaused by: org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null\nargument;\n\n\tat org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:105)\n\n\tat org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:83)\n\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(MoveInnerToTopRefactoring.java:493)\n\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(MoveInnerToTopRefactoring.java:431)\n\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(MoveInnerToTopRefactoring.java:250)\n\n\tat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)\n\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)\n\n\tat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)\n\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)\n\nRoot exception:\n\norg.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null argument;\n\n\tat org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:105)\n\n\tat org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:83)\n\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(MoveInnerToTopRefactoring.java:493)\n\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(MoveInnerToTopRefactoring.java:431)\n\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(MoveInnerToTopRefactoring.java:250)\n\n\tat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)\n\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)\n\n\tat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)\n\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)",
    "Move to JDT/UI",
    "Fixed \u003e 20041214\n\nBy the way: The snippet shows an anonymous class, which is correctly \nrefactored using \"Convert Anonymous Class To Nested\". The resulting nested \ntype can then be extracted using \"Move Member Type To New File\".\n\nThe bug report however is justified, since the second refactoring should not \nbe enabled in this case."
  ],
  "commentCreationDates": [
    "2004-12-14T00:06:47+01:00",
    "2004-12-14T00:25:45+01:00",
    "2004-12-14T14:06:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdt.internal.corext.Assert$AssertionFailedException",
      "message": "null argument;",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.Assert.isNotNull",
          "source": "Assert.java:105"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.Assert.isNotNull",
          "source": "Assert.java:83"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration",
          "source": "MoveInnerToTopRefactoring.java:493"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory",
          "source": "MoveInnerToTopRefactoring.java:431"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions",
          "source": "MoveInnerToTopRefactoring.java:250"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:82"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1673"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:58"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "80891",
      "date": "2004-12-14T00:06:47+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "minor"
    },
    {
      "exceptionType": "org.eclipse.jdt.internal.corext.Assert$AssertionFailedException",
      "message": "null argument;",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.Assert.isNotNull",
          "source": "Assert.java:105"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.Assert.isNotNull",
          "source": "Assert.java:83"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration",
          "source": "MoveInnerToTopRefactoring.java:493"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory",
          "source": "MoveInnerToTopRefactoring.java:431"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions",
          "source": "MoveInnerToTopRefactoring.java:250"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:82"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1673"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:58"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "80891",
      "date": "2004-12-14T00:06:47+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "minor"
    }
  ],
  "groupId": "80891",
  "bugId": "80891",
  "date": "2004-12-14T00:06:47+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "minor"
}