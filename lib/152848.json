{
  "comments": [
    "I get the exception below when I enable AspectJ on my Java project:\n\njava.lang.IllegalStateException\nat org.aspectj.weaver.TypeFactory.createParameterizedType(TypeFactory.java:42)\nat org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:82)\nat org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:42)\nat org.aspectj.weaver.asm.AsmDelegate.ensureSignatureUnpacked(AsmDelegate.java:410)\nat org.aspectj.weaver.asm.AsmDelegate.getDeclaredInterfaces(AsmDelegate.java:538)\nat org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:426)\nat org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:64)\nat org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1155)\nat org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers(ResolvedType.java:1134)\nat org.aspectj.weaver.ResolvedType.checkInterTypeMungers(ResolvedType.java:1201)\nat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:643)\nat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:519)\nat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1058)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:480)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:190)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:111)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:43)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:53)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:167)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:413)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:466)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:331)\nat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:400)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:512)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nIllegalStateException thrown: Expecting raw type",
    "Once this problem has occurred, all *.aj files are opened with the Java editor instead of the AspectJ editor.",
    "we\u0027ve fixed a few cases of this ... guess this is another one....",
    "I\u0027ve reproduced this failure - not sure if its via the route the raiser is using but I\u0027m going to fix the case I\u0027ve found.\n\nI have a Java5 type with a member:\n\nPair\u003cString,String\u003e foo;\n\nWhere Pair is:\n\nclass Pair\u003cA,B\u003e {}\n\nAll fine....  the problem I see is because after initial compilation, in an LTW environment, we reuse the type containing the member \u0027foo\u0027 in an situation where Pair is not-generic (ie. probably a back level of the library containing Pair).\n\nThe code that unpacks the signature for the member is expecting Pair to be in its \u0027raw\u0027 form (ie. it is actually a generic type underneath) - when we discover it isnt, we go bang.\n\nIn these situations where we cannot parameterize the non-generic type, we\u0027ll continue with the simple type that has been found.  I can\u0027t immediately think of a situation where this will get us into trouble.  I am adding trace entries for this situation so that it is logged in future and we can more easily diagnose what is going wrong.\n\n\n\n",
    "i think this has now been resolved - we allow the type that was discovered to be non-generic and continue with the simple type.  please reopen if it still happens for you."
  ],
  "commentCreationDates": [
    "2006-08-04T17:15:12+02:00",
    "2006-08-04T17:44:35+02:00",
    "2006-08-23T16:50:31+02:00",
    "2006-08-25T11:41:03+02:00",
    "2006-09-25T15:53:12+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "elements": [
        {
          "method": "org.aspectj.weaver.TypeFactory.createParameterizedType",
          "source": "TypeFactory.java:42"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX",
          "source": "BcelGenericSignatureToTypeXConverter.java:82"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX",
          "source": "BcelGenericSignatureToTypeXConverter.java:42"
        },
        {
          "method": "org.aspectj.weaver.asm.AsmDelegate.ensureSignatureUnpacked",
          "source": "AsmDelegate.java:410"
        },
        {
          "method": "org.aspectj.weaver.asm.AsmDelegate.getDeclaredInterfaces",
          "source": "AsmDelegate.java:538"
        },
        {
          "method": "org.aspectj.weaver.ReferenceType.getDeclaredInterfaces",
          "source": "ReferenceType.java:426"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.getDirectSupertypes",
          "source": "ResolvedType.java:64"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.collectInterTypeMungers",
          "source": "ResolvedType.java:1155"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers",
          "source": "ResolvedType.java:1134"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.checkInterTypeMungers",
          "source": "ResolvedType.java:1201"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations",
          "source": "AjLookupEnvironment.java:643"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations",
          "source": "AjLookupEnvironment.java:519"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom",
          "source": "AjLookupEnvironment.java:1058"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:480"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept",
          "source": "Compiler.java:190"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:111"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve",
          "source": "UnresolvedReferenceBinding.java:43"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType",
          "source": "BinaryTypeBinding.java:53"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage",
          "source": "PackageBinding.java:167"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport",
          "source": "CompilationUnitScope.java:413"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport",
          "source": "CompilationUnitScope.java:466"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports",
          "source": "CompilationUnitScope.java:331"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes",
          "source": "CompilationUnitScope.java:400"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:512"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:329"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:887"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:244"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:163"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:122"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "152848",
      "date": "2006-08-04T17:15:12+02:00",
      "product": "AspectJ",
      "component": "IDE",
      "severity": "normal"
    }
  ],
  "groupId": "152848",
  "bugId": "152848",
  "date": "2006-08-04T17:15:12+02:00",
  "product": "AspectJ",
  "component": "IDE",
  "severity": "normal"
}