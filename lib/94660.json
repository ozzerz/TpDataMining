{
  "comments": [
    "By overriding the getName() method on TestCase, it is possible to create a\nTestCase that does not report the name of the method run as a response to\ngetName().  When this happens, the JUnit view cannot find the source that\ncorresponds to the test.  The user should be simply notified in this case, but\ninstead it silently fails with an error in the log:\n\norg.eclipse.jdt.internal.core.Assert$AssertionFailedException: Assertion failed; \n\tat org.eclipse.jdt.internal.core.Assert.isTrue(Assert.java:89)\n\tat org.eclipse.jdt.internal.core.Assert.isTrue(Assert.java:76)\n\tat org.eclipse.jdt.internal.core.SourceMethod.\u003cinit\u003e(SourceMethod.java:38)\n\tat org.eclipse.jdt.internal.core.SourceType.getMethod(SourceType.java:349)\n\tat\norg.eclipse.jdt.internal.junit.ui.OpenTestAction.findMethod(OpenTestAction.java:82)\n\tat\norg.eclipse.jdt.internal.junit.ui.OpenTestAction.findElement(OpenTestAction.java:61)\n\tat org.eclipse.jdt.internal.junit.ui.OpenEditorAction.run(OpenEditorAction.java:56)\n\tat\norg.eclipse.jdt.internal.junit.ui.TestHierarchyTab.handleDoubleClick(TestHierarchyTab.java:451)\n\tat\norg.eclipse.jdt.internal.junit.ui.TestHierarchyTab$4.mouseDoubleClick(TestHierarchyTab.java:431)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:140)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2901)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2534)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1601)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1565)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:315)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:230)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:345)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:158)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:328)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:272)\n\tat org.eclipse.core.launcher.Main.run(Main.java:974)\n\tat org.eclipse.core.launcher.Main.main(Main.java:950)",
    "that makes sense",
    "Created an attachment (id\u003d21837)\nPatch\n\nI couldn\u0027t reproduce the silent fail in N20050526-0010.  Instead, I saw not one\nmessage dialog, but two.  This patch gets us back down to one, at which point\nI\u0027ll call this closed. ",
    "IMO not critical for 3.1 either. I think it is not very likely that clients\noverride getName(). Comments ?",
    "Dirk,\n\nI mentioned to you that I had once written a test that overloaded getName. \nTurns out I had done so to bring it inline with what Eclipse expects, not to\nserve some other nefarious purpose.  So I cannot provide an example of a useful\nreason to override getName.  Easy fix for 3.2.",
    "Actually we have a bug in the code that is causing this behaviour. Fixing the\ncause is an easy fix.\n\nOKed by Dirk to include in 3.1",
    "Erich,\n\nThere were actually two bugs related to overriding getName().  The first was the\nUI/model discrepancy fixed in my patch last night, which never had a PR# that\nI\u0027m aware of (we were lucky).  This is a different issue: if getName is\noverridden to return something meaningless to Eclipse, the user should get a\nsimple, single error message and nothing more.  At one point, this situation\ngenerated an error log entry, and now it generates two identical dialogs. \nReopening for 3.2",
    "Reviewed and released patch by David\n\nFixed \u003e 20050630"
  ],
  "commentCreationDates": [
    "2005-05-11T13:28:16+02:00",
    "2005-05-11T15:07:01+02:00",
    "2005-05-26T18:10:54+02:00",
    "2005-06-02T11:52:58+02:00",
    "2005-06-03T10:22:19+02:00",
    "2005-06-09T14:13:29+02:00",
    "2005-06-09T15:37:02+02:00",
    "2005-06-30T11:18:24+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdt.internal.core.Assert$AssertionFailedException",
      "message": "Assertion failed;",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.Assert.isTrue",
          "source": "Assert.java:89"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Assert.isTrue",
          "source": "Assert.java:76"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.\u003cinit\u003e",
          "source": "SourceMethod.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceType.getMethod",
          "source": "SourceType.java:349"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.OpenTestAction.findMethod",
          "source": "OpenTestAction.java:82"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.OpenTestAction.findElement",
          "source": "OpenTestAction.java:61"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.OpenEditorAction.run",
          "source": "OpenEditorAction.java:56"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.TestHierarchyTab.handleDoubleClick",
          "source": "TestHierarchyTab.java:451"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.TestHierarchyTab$4.mouseDoubleClick",
          "source": "TestHierarchyTab.java:431"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:140"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2901"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2534"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1601"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1565"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:315"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:230"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:345"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:158"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:328"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:272"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:974"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:950"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "94660",
      "date": "2005-05-11T13:28:16+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "94660",
  "bugId": "94660",
  "date": "2005-05-11T13:28:16+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}