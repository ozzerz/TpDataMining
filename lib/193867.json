{
  "comments": [
    "Build ID: Eclipse 3.3 RC3\n\nSteps To Reproduce:\nUsing 3.3rc3 code, org.eclipse.swt.browser.Browser.MozillaDelegate.findBrowser() is using:\n\nstatic Browser findBrowser (int /*long*/ handle) {\n\tDisplay display \u003d Display.getCurrent ();\n\treturn (Browser)display.findWidget (handle);\n}\n\nWhich directly cascade returned Widget type to Browser, this causes a crash and terminates the JVM because of java.lang.ClassCastException if the return type is not a org.eclipse.swt.browser.Browser. \n\nThe reason is our application implements our own DOMBrowser widget and it doesn\u0027t subclass swt.Browser, so when in javaScript Window.Open call, it crashes. This happens if SWT.Browser is created after DOMBrowser, it will override our WindowCreator factory(another known problem), and call SWT.browser code, this lead to a crash in 3.3\n\nIt would be more robust if SWT code put an \"instanceof\" check before cascading it. After the fix, it will return null, and our application will be not able to handle the open window listener, but it won\u0027t cause crash\n\nstatic Browser findBrowser (int /*long*/ handle) {\n\tDisplay display \u003d Display.getCurrent ();\n\tWidget browserWidget\u003ddisplay.findWidget (handle);\n\tif(browserWidget instanceof Browser){\n\t\treturn (Browser)browserWidget;\n\t}\n\treturn null;\n}\n\n\n\nMore information:\nPlease consider a fix in 3.3 for all platforms if possible, I think the change is safe and simple, but critical for our product.",
    "\torg.eclipse.swt.SWTError: No more callbacks\n\tat org.eclipse.swt.SWT.error(SWT.java:3573)\n\tat org.eclipse.swt.SWT.error(SWT.java:3465)\n\tat org.eclipse.swt.SWT.error(SWT.java:3436)\n\tat org.eclipse.swt.internal.mozilla.XPCOMObject.\u003cinit\u003e(XPCOMObject.java:34)\n\tat org.eclipse.swt.browser.Mozilla$7.\u003cinit\u003e(Mozilla.java:1043)\n\tat org.eclipse.swt.browser.Mozilla.createCOMInterfaces(Mozilla.java:1043)\n\tat org.eclipse.swt.browser.Mozilla.create(Mozilla.java:887)\n\tat org.eclipse.swt.browser.Browser.\u003cinit\u003e(Browser.java:109)\n\tat com.ibm.rcp.samples.internal.dombrowser.SWTMOZILLAView.createPartControl(SWTMOZILLAView.java:65)\n\n\n\tjava.lang.ClassCastException: com.ibm.rcp.dombrowser.browser.SWTXULRunnerBrowser incompatible with org.eclipse.swt.browser.Browser\n\tat org.eclipse.swt.browser.MozillaDelegate.findBrowser(MozillaDelegate.java:17)\n\tat org.eclipse.swt.browser.Mozilla.findBrowser(Mozilla.java:1207)\n\tat org.eclipse.swt.browser.WindowCreator2.CreateChromeWindow2(WindowCreator2.java:145)\n\tat org.eclipse.swt.browser.WindowCreator2$3.method4(WindowCreator2.java:55)\n\tat org.eclipse.swt.internal.mozilla.XPCOMObject.callback4(XPCOMObject.java:358)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2264)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3291)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat com.ibm.rcp.personality.framework.internal.RCPApplication.run(RCPApplication.java:72)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)",
    "There is no context in this bug report.  For example, how can the HWND associated with our Browser find yours?\n\nTalking to Grant, he tells me there is contention for the factory that creates new windows for Mozilla.  There is a single instance of the factory that is either the SWT one or the DOMBrowser one.  None of this information is captured by this bug report. It should be easy enough to work around for you by creating an instance of Browser and then hammering our factory with yours.\n\nSo, the title of this bug report should be changed to capture the issue and we should work to fix it ... but not for 3.3.  The Eclipse 3.3 boat has sailed.\n",
    "Steve N.: The problem will occurs withi this sequence:\n1. Create a DOMBrowser instance.\n2. Create a SWT browser instance, then the swt.browser factory will override dombrowser one.\n3. Visit a webpage with window.open, exception occurs. \n\nThe DOMBrowser class is no longer inherit from SWT.browser, so the ClassCastException exception is thrown, the reason swt.browser can find it is: SWT.browser code is using display.findWidget (handle) to find a widget by given HWND handle, the handle value is given by Mozilla, so the Display returns the associated Widget object, but swt.browser factory should not cast into SWT.browser without class type checking. ",
    "Like I said, there is contention for the factory that gets installed for Mozilla to create Browsers.  The last one wins.  \n\nHere is a theory: If you create an SWTBrowser before you create a DOMBrowser, then your factory will be installed.  Since DOMBrowser is not SWT, we can\u0027t know that you are in contention for the Mozilla factory but your code can know that both browsers exist and can behave accordingly.\n\nThis is just a theory.  Since you own and maintain DOMBrowser, you will have to work it out.  Hiding the problem by doing an instanceof test doesn\u0027t appeal.",
    "Though there has not been a follow up, I\u0027m quite sure that SN\u0027s suggestion in comment 4 would work.  There is an example of replacing the Browser\u0027s registered DownloadFactory via JavaXPCOM at http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet277.java?view\u003dco .  The DOMBrowser would just have to create-and-dispose a Browser instance the first time it was started, to ensure that its factory would not be overwritten later.\n\nThe bigger issue of mozilla-based browser implementations having to share a set of registered factories does not seem resolvable because that\u0027s just how Mozilla is.  I agree that it\u0027s strange that a user could (for example) see swt-provided prompters for a while, and then suddenly have these prompters start to come from the DOMBrowser as a side effect of touching a plug-in that used the DOMBrowser, but I don\u0027t think there\u0027s anything that can be done about this.\n\nThe ultimate answer would be for the DOMBrowser to extend or wrap swt\u0027s implementation.  The ATF browser changed for 3.3 to do this, and as a result has none of the problems that come with having multiple co-existing Mozilla-based browser implementations.  I don\u0027t know if this is desirable/possible for the DOMBrowser or not.\n\nMarking as won\u0027t fix, because the instanceof check isn\u0027t the right fix, and the underlying issue of having to share registered factories does not seem resolvable (suggestions still welcome).\n"
  ],
  "commentCreationDates": [
    "2007-06-22T05:58:23+02:00",
    "2007-06-22T07:08:40+02:00",
    "2007-06-22T16:41:06+02:00",
    "2007-06-23T00:02:40+02:00",
    "2007-06-23T00:24:22+02:00",
    "2007-11-22T17:08:47+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTError",
      "message": "No more callbacks",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3573"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3465"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3436"
        },
        {
          "method": "org.eclipse.swt.internal.mozilla.XPCOMObject.\u003cinit\u003e",
          "source": "XPCOMObject.java:34"
        },
        {
          "method": "org.eclipse.swt.browser.Mozilla$7.\u003cinit\u003e",
          "source": "Mozilla.java:1043"
        },
        {
          "method": "org.eclipse.swt.browser.Mozilla.createCOMInterfaces",
          "source": "Mozilla.java:1043"
        },
        {
          "method": "org.eclipse.swt.browser.Mozilla.create",
          "source": "Mozilla.java:887"
        },
        {
          "method": "org.eclipse.swt.browser.Browser.\u003cinit\u003e",
          "source": "Browser.java:109"
        },
        {
          "method": "com.ibm.rcp.samples.internal.dombrowser.SWTMOZILLAView.createPartControl",
          "source": "SWTMOZILLAView.java:65"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "193867",
      "date": "2007-06-22T07:08:40+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "com.ibm.rcp.dombrowser.browser.SWTXULRunnerBrowser incompatible with org.eclipse.swt.browser.Browser",
      "elements": [
        {
          "method": "org.eclipse.swt.browser.MozillaDelegate.findBrowser",
          "source": "MozillaDelegate.java:17"
        },
        {
          "method": "org.eclipse.swt.browser.Mozilla.findBrowser",
          "source": "Mozilla.java:1207"
        },
        {
          "method": "org.eclipse.swt.browser.WindowCreator2.CreateChromeWindow2",
          "source": "WindowCreator2.java:145"
        },
        {
          "method": "org.eclipse.swt.browser.WindowCreator2$3.method4",
          "source": "WindowCreator2.java:55"
        },
        {
          "method": "org.eclipse.swt.internal.mozilla.XPCOMObject.callback4",
          "source": "XPCOMObject.java:358"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:2264"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3291"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1930"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1894"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:422"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "com.ibm.rcp.personality.framework.internal.RCPApplication.run",
          "source": "RCPApplication.java:72"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        }
      ],
      "number": 1,
      "commentIndex": 1,
      "bugId": "193867",
      "date": "2007-06-22T07:08:40+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "critical"
    }
  ],
  "groupId": "193867",
  "bugId": "193867",
  "date": "2007-06-22T05:58:23+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "critical"
}