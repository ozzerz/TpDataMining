{
  "comments": [
    "Steps:\n- Import \"org.eclipse.ui.workbench\".\n- Add a print statement to\n\"WorkbenchPage#ActivationList#setActive(IWorkbenchPart part)\".\n- Run as run-time workbench.\n- Switch to Java perspective.\n- Import a project.\n- Open a Java file.\n- Select the \"Hierarchy\" view, then the \"Package Explorer\" (give focus).\n- Notice that switching to the \"Package Explorer\" view calls setActive() on the\nopen file before calling setActive() on that view.\n\nThis behavior is affecting the \"Ctrl+F7\" behavior by altering the ordering of\nthe items in that list.\n\nI am using:\nEclipse Platform\nVersion: 3.0.0\nBuild id: 200405040800\n\nI also tried this in 2.1 and M8, and everything worked fine. No unnecessary\n?setActive()? calls were being made.",
    "This problem is caused by hiding the control with focus and then calling \nControl.fixFocus().  The algorithm to select the next control to gain focus is \ncausing the editor to gain focus since its the first focusable child from the \nsame parent.\n",
    "Michael\u0027s analysis is correct.  \nThe new focus handling is causing grief for workbench part activation.\nYou can see this if you add the following to WorkbenchPage.setActivePart, after\nthe initial \u003d\u003d check:\n    System.err.println(\"activating \" + (newPart \u003d\u003d null ? null :\nnewPart.getTitle()));\n    Thread.dumpStack();\n\nConcrete steps are:\n- in new Java perspective,\n- open some editor\n- activate Package Explorer\n- click on Hierarchy view tab\n- workbench hides the Package Explorer\u0027s control\n- fixFocus gives focus to the editor\n- workbench picks this up as an editor part activation  \n  *** previous 2 steps did not happen before\n- workbench activates Hierarchy\n\nThe stack trace for the editor activation is:\n\nactivating .classpath\njava.lang.Exception: Stack trace\n\tat java.lang.Thread.dumpStack(Thread.java:1064)\n\tat org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:2569)\n\tat org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:2307)\n\tat org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:246)\n\tat org.eclipse.ui.internal.EditorPane.requestActivation(EditorPane.java:150)\n\tat org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:226)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:801)\n\tat org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java:913)\n\tat org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:1756)\n\tat org.eclipse.swt.widgets.Control.WM_SETFOCUS(Control.java:4120)\n\tat org.eclipse.swt.widgets.Canvas.WM_SETFOCUS(Canvas.java:239)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3012)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3160)\n\tat org.eclipse.swt.internal.win32.OS.SetFocus(Native Method)\n\tat org.eclipse.swt.widgets.Control.forceFocus(Control.java:599)\n\tat org.eclipse.swt.widgets.Control.setFocus(Control.java:2037)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:447)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Composite.setFocus(Composite.java:445)\n\tat org.eclipse.swt.widgets.Control.fixFocus(Control.java:560)\n\tat org.eclipse.swt.widgets.Control.setVisible(Control.java:2402)\n\tat org.eclipse.ui.internal.LayoutPart.setVisible(LayoutPart.java:240)\n\tat org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:259)\n\tat org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:630)\n\tat\norg.eclipse.ui.internal.PresentableViewPart.setVisible(PresentableViewPart.java:112)\n\tat\norg.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart(BasicStackPresentation.java:790)\n\tat\norg.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:666)\n\tat org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:649)\n\tat org.eclipse.ui.internal.PartTabFolder.setSelection(PartTabFolder.java:108)\n\tat\norg.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:457)\n\tat org.eclipse.ui.internal.PartStack.access$0(PartStack.java:447)\n\tat org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:77)\n\tat\norg.eclipse.ui.internal.presentations.BasicStackPresentation$4.handleEvent(BasicStackPresentation.java:148)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:613)\n\tat org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:2966)\n\tat org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1855)\n\tat org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:288)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2594)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2272)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1351)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1322)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:241)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:269)\n\tat org.eclipse.core.launcher.Main.run(Main.java:700)\n\tat org.eclipse.core.launcher.Main.main(Main.java:684)",
    "Where should focus be assigned when a control is hidden?  Originally (way back \nwhen before 2.0?), we did not attempt to fix the focus.  Some platforms fixed \nfocus and others did not, causing portablility problems.  Not sure how to \nproceed but I am open to suggestions.",
    "I think keeping focus unchanged is preferable.  If the app is hiding/showing\ncontrols, it will need to adjust focus itself, but should not get free focus\nchanges.  Not sure what algorithm the other platforms follow.\n",
    "This is where AWT struggled for years and ended up with some \ncomplicated/\"corrective\" solution in JDK 1.4 and further in 1.5.  They have \nwritten a lot of info around this whole focus management issue.  What is \ninteresting is that SWT is relying on the OS to have the correct order whereas \nAWT relies on its own hierarchy and policy.  This isn\u0027t going to be an easy \nproblem to solve in the short term.  Just my $0.02.",
    "The fact that we \"fix focus\" is relied upon in Eclipse so we can\u0027t take the \ncode out.  Originally, I was against doing this but there were just too many \nproblems and the code went in (keys going nowhere etc.).\n\nIf the application knows where focus is supposed to go, can it set focus \nbefore hiding the control?",
    "Does a programmatic change to focus fire focus changed or activation listeners?\nIf so, then we\u0027d have to remove such listeners, otherwise the workbench would\nissue part activation callbacks before part deactivation.\n",
    "*** Bug 61289 has been marked as a duplicate of this bug. ***",
    "Steve, we need to sit down and sort this out.",
    "A programatic change of focus fires the listeners.\n\nSomething to think about: Is the problem specific to Eclipse (and SWT) or is \nit a general UI problem.  For example, Motif will \"fix focus\" for you when you \nhide a widget.  How are Motif C programs supposed to work around this?  Talk \nto you tomorrow. ",
    "I\u0027m also wondering why this is only showing up now.\nIf the fixFocus change was made prior to M8, then this must be due to a\nworkbench change.  Or were there changes in this area in SWT in the last couple\nof weeks?\n",
    "The fixFocus() behaviour in SWT existed even in 2.1.\n\nWe did not encounter the problem in 2.1 because when clicking on a view\u0027s tab,\nCTabFolder\u0027s mouse down handler would force focus to the CTabFolder before\nfiring the selection event.  So when the workbench hid the previously selected\npart, it was not the focus control.\n\nTesting on 2.1, there were cases where the problem was hit even there, e.g. when\nopening or closing a view, we just didn\u0027t notice because views are opened/closed\nmuch less frequently than switching between them.  I did notice a flicker of the\neditor tab when closing a view though (when the previously activated part was\nalso a view).\n\nI\u0027ve looked into whether we can avoid fixFocus() by changing the order of\nsetVisible calls, but it\u0027s trickier than that since the order would have to be:\n- setVisible(true) on new control\n- setFocus() on new control\n- setVisible(false) on old control\n\nThis is not only difficult to achieve given the way the responsibilities are\nsplit between presentation and workbench, it would also affect when workbench\npart lifecycle notifications are fired (see IPartListener2).\n\nInstead, I\u0027ve put in a workaround in LayoutPart.setVisible.  If the argument is\nfalse, it first forces focus on the shell.  This seems safer than forcing focus\non the container\u0027s control since the container may be going away too.\n\nThis fixes the editor activation problem for all 3 cases: switching between\nviews in the same folder, showing a view in the same folder as the active one,\nand closing a view when the previous active part was in the same folder.\nThis also reduces flicker.\n\n\n",
    "*** Bug 56361 has been marked as a duplicate of this bug. ***",
    "This looks like the right code:\n\n- setVisible(true) on new control\n- setFocus() on new control\n- setVisible(false) on old control\n\nVeronika, was this changed for accessibility?  I thought that CTabFolder was \nsupposed to forceFocus() to its tabs when it got a mouse down.  Please don\u0027t \nchange the code back without consulting Nick.  Thanks.\n",
    "I was able to workaround my problems with the following change in selectPart in \nmy stackPresentation class.  It\u0027s not the best solution but it works for now.\n\n\n\tpublic void selectPart(IPresentablePart toSelect) {\n\t\tif (toSelect \u003d\u003d current) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\ttabFolder.setFocus();\n\t\tfinal IPresentablePart old \u003d current;\n\t\tDisplay.getDefault().asyncExec(new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\tif (old !\u003d null) {\n\t\t\t\t\told.setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tcurrent \u003d toSelect;\n\t\t\n\t\tif (current !\u003d null) {\n\t\t\ttabFolder.setSelection(indexOf(current));\n\t\t\tsetControlSize();\n\t\t\tcurrent.setVisible(true);\n\t\t\ttabFolder.setFocus();\n\t\t}\n\t}",
    "For accessibility, the following changed in CTabFolder:\n\nOn mouse down, a Selection event is sent.  This used to be followed by a call \nto setFocus().  For accessibility, the setFocus call was removed.  \n\nNote that mouse down automatically gives focus to the CTabFolder.  If the \ncontent of the CTabItems are set, the CTabFolder makes the content of the \nselected tab visible and then hides the content of the previously selected \ntab.  When setVisible(false) is called on the previously selected content, \nfocus automatically goes to the newly selected content (due to behaviour of \nsetVisible(false)).\n\nIn addition, for accessibility, on page traversal and arrow traversal, a \nforceFocus is called to keep the focus in the tabs of the CTabFolder.",
    "How does the mouse down automatically give focus to the CTabFolder?\nIn the 2.1 code, there was an explicit forceFocus before the selection event\nnotification.  I don\u0027t see this in the 3.0 code.\n",
    "Matt, in your patch, doing the setFocus or forceFocus before setVisible(false)\nshould work.  You shouldn\u0027t need the asyncExec.\n",
    "The asyncExec may have bad side effects on the order of workbench part\nvisibility notifications as well.  It\u0027s also possible for the part to have been\ndisposed by the time the asyncExec gets to run, which may cause widget is\ndisposed exceptions.\n",
    "LRESULT WM_LBUTTONDOWN (int wParam, int lParam) {\n\tLRESULT result \u003d super.WM_LBUTTONDOWN (wParam, lParam);\n\n\t/* Set focus for a canvas with no children */\n\tif ((state \u0026 CANVAS) !\u003d 0) {\n\t\tif ((style \u0026 SWT.NO_FOCUS) \u003d\u003d 0 \u0026\u0026 hooksKeys ()) {\n\t\t\tif (OS.GetWindow (handle, OS.GW_CHILD) \u003d\u003d 0) setFocus \n();\n\t\t}\n\t}\n\treturn result;\n}\n\nIn 2.1, the UI did not create children of the CTabFolder.  In recent 3.0 \nbuilds, it appears that a child is being created (ViewForm).",
    "Just realized the asyncExec was left overs from some trial and error.  Thanks \nfor the heads up.",
    "I\u0027ve changed the workaround in LayoutPart.setVisible from:\n\t\t    if (!makeVisible) {\n\t\t        ctrl.getShell().forceFocus();\nto:\n\t\t    if (!makeVisible \u0026\u0026 isFocusAncestor(ctrl)) {\n\t\t        ctrl.getShell().forceFocus();\n\nsince there were cases where non-active stack was changing the visible part, and\nwarping focus to the shell due to the workaround.\n\nMatt, you should also add this check.\n",
    "I have verified that \"WorkbenchPage#ActivationList#setActive(IWorkbenchPart\npart)\" does not get called on editors when navigating through views.\n\nI am using Build id: 200405181200 on Mac OS X and Windows XP.",
    "Verified using Build id: 200405190010 on Windows XP and Mac OS X.",
    "Reopening since I had to back out of the change in comment #22 since it was\ncausing failures in the DnD test suite\u0027s calls to testInvariants.\nBut we now believe the change is OK, so I\u0027ve re-released it and commented out\nthe check in PartStack.testInvariants.\n",
    "Closing.\nThe isFocusAncestor check will be in I20040520-0010.\n",
    "Without the isFocusAncestor check, it was causing unwanted activations when\nopenEditor with activate\u003dfalse was called, such as when selecting different\nstack frames in the debugger when the editor could not be reused, e.g. when\ncrossing between .java and .class files.\n\n",
    "*** Bug 63060 has been marked as a duplicate of this bug. ***",
    "I have verified that \"setActive\" gets called once per view/editor, with Build\nid: 200405210800.  Verified on Windows XP and Mac OS 10.3.3."
  ],
  "commentCreationDates": [
    "2004-05-04T23:35:38+02:00",
    "2004-05-05T05:40:42+02:00",
    "2004-05-05T15:52:10+02:00",
    "2004-05-05T16:04:26+02:00",
    "2004-05-05T16:13:22+02:00",
    "2004-05-05T16:21:46+02:00",
    "2004-05-05T17:09:39+02:00",
    "2004-05-05T17:57:38+02:00",
    "2004-05-06T22:07:27+02:00",
    "2004-05-06T22:08:47+02:00",
    "2004-05-06T22:20:04+02:00",
    "2004-05-07T17:25:20+02:00",
    "2004-05-11T23:00:35+02:00",
    "2004-05-11T23:05:20+02:00",
    "2004-05-11T23:08:25+02:00",
    "2004-05-12T00:27:36+02:00",
    "2004-05-12T15:06:26+02:00",
    "2004-05-12T17:50:47+02:00",
    "2004-05-12T17:53:26+02:00",
    "2004-05-12T17:55:10+02:00",
    "2004-05-12T17:59:20+02:00",
    "2004-05-12T18:03:25+02:00",
    "2004-05-17T22:48:35+02:00",
    "2004-05-18T22:44:53+02:00",
    "2004-05-19T17:27:58+02:00",
    "2004-05-20T06:05:47+02:00",
    "2004-05-20T06:06:46+02:00",
    "2004-05-20T06:08:41+02:00",
    "2004-05-20T19:39:48+02:00",
    "2004-05-21T15:55:09+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "Stack trace",
      "elements": [
        {
          "method": "java.lang.Thread.dumpStack",
          "source": "Thread.java:1064"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.setActivePart",
          "source": "WorkbenchPage.java:2569"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.requestActivation",
          "source": "WorkbenchPage.java:2307"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.requestActivation",
          "source": "PartPane.java:246"
        },
        {
          "method": "org.eclipse.ui.internal.EditorPane.requestActivation",
          "source": "EditorPane.java:150"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.handleEvent",
          "source": "PartPane.java:226"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:820"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:801"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.setActiveControl",
          "source": "Shell.java:913"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.sendFocusEvent",
          "source": "Control.java:1756"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_SETFOCUS",
          "source": "Control.java:4120"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.WM_SETFOCUS",
          "source": "Canvas.java:239"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3012"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3160"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.SetFocus",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.forceFocus",
          "source": "Control.java:599"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setFocus",
          "source": "Control.java:2037"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:447"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.setFocus",
          "source": "Composite.java:445"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.fixFocus",
          "source": "Control.java:560"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setVisible",
          "source": "Control.java:2402"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPart.setVisible",
          "source": "LayoutPart.java:240"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.setVisible",
          "source": "PartPane.java:259"
        },
        {
          "method": "org.eclipse.ui.internal.ViewPane.setVisible",
          "source": "ViewPane.java:630"
        },
        {
          "method": "org.eclipse.ui.internal.PresentableViewPart.setVisible",
          "source": "PresentableViewPart.java:112"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.BasicStackPresentation.selectPart",
          "source": "BasicStackPresentation.java:790"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.refreshPresentationSelection",
          "source": "PartStack.java:666"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.setSelection",
          "source": "PartStack.java:649"
        },
        {
          "method": "org.eclipse.ui.internal.PartTabFolder.setSelection",
          "source": "PartTabFolder.java:108"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.presentationSelectionChanged",
          "source": "PartStack.java:457"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.access$0",
          "source": "PartStack.java:447"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack$1.selectPart",
          "source": "PartStack.java:77"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.BasicStackPresentation$4.handleEvent",
          "source": "BasicStackPresentation.java:148"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:820"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:805"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java:613"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder.setSelection",
          "source": "CTabFolder.java:2966"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder.onMouse",
          "source": "CTabFolder.java:1855"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder$1.handleEvent",
          "source": "CTabFolder.java:288"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2594"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2272"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1351"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1322"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:241"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:283"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:242"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:119"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:700"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:684"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "60970",
      "date": "2004-05-05T15:52:10+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "60970",
  "bugId": "60970",
  "date": "2004-05-04T23:35:38+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}