{
  "comments": [
    "Build ID: I20070123-1715\n\nSteps To Reproduce:\nRun For the XPath expression shown below /org.eclipse.hyades.use.cases/src/org/eclipse/hyades/use/cases/junit/models/test/FastXPathTest.java and it fails with the exception:\njava.lang.StringIndexOutOfBoundsException\nat java.lang.StringBuffer.substring(StringBuffer.java:900)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops(CompilerPostProcessor.java:384)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.createLoop(CompilerPostProcessor.java:478)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops(CompilerPostProcessor.java:389)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.postCompileProcess(CompilerPostProcessor.java:80)\nat org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource(FastXPathEngine.java:194)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource(FastXPathTest.java:179)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run(FastXPathTest.java:90)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main(FastXPathTest.java:191)\nException in thread \"main\" junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:47)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource(FastXPathTest.java:185)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run(FastXPathTest.java:90)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main(FastXPathTest.java:191)\n \nThe query is valid we have provided is valid but it seems like the fastxpath engine fails. Seems like the large number of sub-queries and the AND\u0027s/OR\u0027s create a problem.\n\nXPath Expression:\n\n/CommonBaseEvent[(contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM509_LIST_VAL\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM506_CAPSCRRUN\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM504_ASSESSVAL\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM306_CONT_CTGRY\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM305_ACCT_CTGRY\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM304_PROG_CAMP\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM303_CAMP_CONT\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM302_ACCT_OPTY\u0027))  and (contains(@msg, \u0027SQL0911N  The current transaction has been rolled back because of a deadlock\u0027)) and (contains(@msg,\u0027or timeout.\u0027)) and (@severity \u003e\u003d \u002750\u0027) and (sourceComponentId/@component \u003d \u0027CRM Load\u0027)]\n\nMore information:",
    "Dave,\nCan you please assign it to the correct component, Im opening this defect against the TPTP Fast Xpath on Marius\u0027s request.",
    "Created an attachment (id\u003d59288)\nLogs to try with the xpath\n\n",
    "For the record my communication with Marius:\n\nHi Rohit,\n\nJust to clarify, those expressions work in interpreted mode ( FastXPathAPI.getFastXPathEngine().eval()), they don\u0027t work in compiled mode in 4.3/4.2.2.\n\nIn 4.4. we don\u0027t have yet the compiled mode (I had to remove it in 4.4i1 because it used internal JDT code), also there are several problems with the 4.3/4.2.2 compiled mode which I will try to fix in 4.4 when I\u0027ll start to provide the new compiled mode.\n\nPlease open defects and attach all the expressions that you found that didn\u0027t work in compiled mode and/or interpreted mode (use FastXPathAPI.getFastXPathEngine().eval() directly to run in interpreted mode) in 4.3, would be also good to compare the FastXPath results with those from JavaXPathTest.java.\n\nThanks !\n\nMarius Slavescu\nIBM Toronto Laboratory, Canada\nPhone: 905-413-3610\n\n\n\n\n\nRohit Shetty/India/IBM@IBMIN\n02/14/2007 07:56 AM\t\n\tTo\n\tMarius Slavescu/Toronto/IBM@IBMCA@IBMUS@IBMAU\n\tcc\n\tAbdi Salahshour/Raleigh/IBM@IBMUS, Ajay G Rengasayee/India/IBM@IBMIN, Alex Nan/Toronto/IBM@IBMCA, Arun Ramakrishnan/India/IBM@IBMIN, Eric Labadie/Toronto/IBM@IBMCA, Harm Sluiman/Toronto/IBM@IBMCA, Yochana S Honnavar/India/IBM@IBMIN\n\tSubject\n\tRe: Fw: SSAT: Couple of Observations\n\t\n\t\n\t\n\t\n\nHi Marius,\n We verified your findings using /org.eclipse.hyades.use.cases/src/org/eclipse/hyades/use/cases/junit/models/test/FastXPathTest.java from 4.2.2, 4.3 and 4.4 and the xpath expression 1) works fine on all three branches. So it does mean that the TPTP XPath engine is able to handle such nested queries. This is Great!!!\n\nBut, i tried running my initial xpath query 2) with /org.eclipse.hyades.use.cases/src/org/eclipse/hyades/use/cases/junit/models/test/FastXPathTest.java and it fails with the exception:\njava.lang.StringIndexOutOfBoundsException\nat java.lang.StringBuffer.substring(StringBuffer.java:900)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops(CompilerPostProcessor.java:384)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.createLoop(CompilerPostProcessor.java:478)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops(CompilerPostProcessor.java:389)\nat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.postCompileProcess(CompilerPostProcessor.java:80)\nat org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource(FastXPathEngine.java:194)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource(FastXPathTest.java:179)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run(FastXPathTest.java:90)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main(FastXPathTest.java:191)\nException in thread \"main\" junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:47)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource(FastXPathTest.java:185)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run(FastXPathTest.java:90)\nat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main(FastXPathTest.java:191)\n \nThe query is valid we have provided is valid but it seems like the fastxpath engine fails. Seems like the large number of sub-queries and the AND\u0027s/OR\u0027s create a problem.\n\nI did not bother with running the query 3) since this is a simple query and it should work fine. The \u0027@\u0027 you saw with the query was something SSAT added when it converted my queries 1) and 2) to a form it can understand (It also removed some logic from the query i had provided to it). \n\nXpath Expressions:\n\n1)   /CommonBaseEvent[(contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM506_CAPSCRRUN\u0027))]\n\n2)  /CommonBaseEvent[(contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM509_LIST_VAL\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM506_CAPSCRRUN\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM504_ASSESSVAL\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM306_CONT_CTGRY\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM305_ACCT_CTGRY\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM304_PROG_CAMP\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM303_CAMP_CONT\u0027) or contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM302_ACCT_OPTY\u0027))  and (contains(@msg, \u0027SQL0911N  The current transaction has been rolled back because of a deadlock\u0027)) and (contains(@msg,\u0027or timeout.\u0027)) and (@severity \u003e\u003d \u002750\u0027) and (sourceComponentId/@component \u003d \u0027CRM Load\u0027)]\n\n3) /CommonBaseEvent[(contains(extendedDataElements/values,\u0027CRM506_CAPSCRRUN\u0027))]\n\nRegards \n\nRohit Shetty \n--------------------------------------------------------\n\nTivoli, Autonomic Computing\nIndia Software Labs, Bangalore\nEmbassy Golf Links Business Park,Block B\nPhone: ++91-80-41055478, mailto: rohit.shetty@in.ibm.com\n\n\n\nMarius Slavescu/Toronto/IBM@IBMCA\n14/02/2007 04:08\t\n\tTo\n\tRohit Shetty/India/IBM@IBMIN@IBMAU@IBMUS\n\tcc\n\tHarm Sluiman/Toronto/IBM@IBMCA, Alex Nan/Toronto/IBM@IBMCA, Eric Labadie/Toronto/IBM@IBMCA, Abdi Salahshour/Raleigh/IBM@IBMUS, Arun Ramakrishnan/India/IBM@IBMIN, Yochana S Honnavar/India/IBM@IBMIN, Ajay G Rengasayee/India/IBM@IBMIN\n\tSubject\n\tRe: Fw: SSAT: Couple of Observations\n\t\n\t\n\t\n\t\n\nHi Rohit,\n\nI tried both of your last expressions (modified to match your sample files, those from the Desktop.zip) with /org.eclipse.hyades.use.cases/src/org/eclipse/hyades/use/cases/junit/models/test/FastXPathTest.java (uses FastXPath interpreted eval method from 4.4) and /org.eclipse.hyades.use.cases/src/org/eclipse/hyades/use/cases/junit/models/test/utils/JavaXPathTest.java (uses javax XPath support)\n\nHere is the result for this expression \"/CommonBaseEvent[(contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM506_CAPSCRRUN\u0027))]\"\n\nFastXPathTest.testEval() res[0]\u003d org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl@6a8bc58b (creationTime: 2007-02-02T00:00:00.000-07:00, globalInstanceId: A1DBB28CD419AE60E1A8A2D4B4067D99, elapsedTime: \u003cunset\u003e, extensionName: null, localInstanceId: null, msg: SQL0911N  The current transaction has been rolled back because of a deadlock\nor timeout., priority: \u003cunset\u003e, repeatCount: \u003cunset\u003e, sequenceNumber: \u003cunset\u003e, severity: 50, version: 1.0.1, any: null, situation: org.eclipse.hyades.logging.events.cbe.impl.SituationImpl@9860588 (categoryName: ReportSituation, situationType: org.eclipse.hyades.logging.events.cbe.impl.ReportSituationImpl@286fc588 (reasoningScope: INTERNAL) (reportCategory: LOG)), associatedEvents: null, contextDataElements: null, extendedDataElements: [org.eclipse.hyades.logging.events.cbe.impl.ExtendedDataElementImpl@5445858b (hexValue: null, name: Details, type: string, values: [or timeout.], children: null), org.eclipse.hyades.logging.events.cbe.impl.ExtendedDataElementImpl@6dbd058b (hexValue: null, name: LOG_FILE, type: string, values: [/cie/ops/ods/crm/20070131/ods_load_crm.log.20070131000000.CRM506_CAPSCRRUN], children: null)], msgDataElement: org.eclipse.hyades.logging.events.cbe.impl.MsgDataElementImpl@ee04588 (msgIdType: IBM3.4.1, msgCatalogType: null, msgCatalog: null, msgCatalogId: null, msgId: SQL0911N, msgLocale: null, msgCatalogTokens: null), reporterComponentId: null, sourceComponentId: org.eclipse.hyades.logging.events.cbe.impl.ComponentIdentificationImpl@6c02c58b (application: ADB, component: CRM Load, componentType: RelationalDatabase_Application, componentIdType: Process, executionEnvironment: null, instanceId: null, location: 9.17.203.217, locationType: IPV4, processId: null, subComponent: None, threadId: null))\n\nFastXPathTest.testGetExpressionJavaBody() expressionJavaBody \u003d \n//**********************\n\npublic class Compiled1161426125 {\n public boolean isMatch(java.lang.Object object, org.eclipse.tptp.platform.provisional.fastxpath.IFastXPathEngine fastXPathEngine ) {\n  org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl obj \u003d (org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl)object;\n  for (java.util.Iterator iter0 \u003d obj.getExtendedDataElements().iterator(); iter0.hasNext();)\n{\n org.eclipse.hyades.logging.events.cbe.ExtendedDataElement element0 \u003d (org.eclipse.hyades.logging.events.cbe.ExtendedDataElement)iter0.next();\n        if  (  (  (  element0.getName() .equals( \"LOG_FILE\") )  \u0026\u0026  element0.getValues().indexOf(\"CRM506_CAPSCRRUN\") \u003e -1 )  ) \n return true;\n}\nreturn false;\n\n }\n}\n\nThe second expression \"/CommonBaseEvent[(contains(extendedDataElements/values,\u0027CRM506_CAPSCRRUN\u0027))]\" (your version is using @ where it shouldn\u0027t) doesn\u0027t return anything when evaluated in both test classes:\n\nFastXPathTest.testEval() res[0]\u003d null\nFastXPathTest.testGetExpressionJavaBody() expressionJavaBody \u003d \n//**********************\n\npublic class Compiled893045551 {\n public boolean isMatch(java.lang.Object object, org.eclipse.tptp.platform.provisional.fastxpath.IFastXPathEngine fastXPathEngine ) {\n  org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl obj \u003d (org.eclipse.hyades.logging.events.cbe.impl.CommonBaseEventImpl)object;\n  for (java.util.Iterator iter0 \u003d obj.getExtendedDataElements().iterator(); iter0.hasNext();)\n{\n org.eclipse.hyades.logging.events.cbe.ExtendedDataElement element0 \u003d (org.eclipse.hyades.logging.events.cbe.ExtendedDataElement)iter0.next();\n for (java.util.Iterator iter1 \u003d element0.getValues().iterator(); iter1.hasNext();)\n{\n java.lang.String element1 \u003d (java.lang.String)iter1.next();\n       if  (  (  element1.indexOf(\"CRM506_CAPSCRRUN\") \u003e -1 )  ) \n return true;\n}\n}return false;\n\n }\n}\n\nPlease note the difference in the generated code (which should be the same as in TPTP 4.3) for the two expressions (although in my run it didn\u0027t used that code as in TPTP 4.4i1 we removed the EclipseCompiler class).\n\nThe second java code seems to be the correct one although the interpreted eval return\u0027s null.\n\nTry to run the modified expressions in TPTP 4.3 using /org.eclipse.hyades.use.cases/src/org/eclipse/hyades/use/cases/junit/models/test/FastXPathTest.java (from HEAD) and see if you get different results.\n\nOf course the two expressions are not equivalent, the first one is filtering also by extendedDataElements.name.\n\nThanks !\n\nMarius Slavescu\nIBM Toronto Laboratory, Canada\nPhone: 905-413-3610\n\n\n\n\n\nRohit Shetty/India/IBM@IBMIN\n02/13/2007 04:37 PM\t\n\tTo\n\tAlex Nan/Toronto/IBM@IBMCA\n\tcc\n\tEric Labadie/Toronto/IBM@IBMCA, Marius Slavescu/Toronto/IBM@IBMCA\n\tSubject\n\tRe: Fw: SSAT: Couple of Observations\n\t\n\t\n\t\n\t\n\nHi Alex,\n The query Eric is talking about is in the initial note i sent in this chain. The particular aspect of the query that isnt supported is the kind of expression shown below.\n\n/CommonBaseEvent[(contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027CRM509_LIST_VAL\u0027))]\n\nHere we are trying to select an extendedDataElement called LOG_FILE and then check inside that EDE to see if it has the required values.\n\n\nFor this SSAT creates a rule that looks like the one below, but both these rules are not logically equivalent.\n\n/CommonBaseEvent[ ( contains (extendedDataElements/@values, \u0027CRM509_LIST_VAL\u0027) ) ]\n\nRegards \n\nRohit Shetty \n--------------------------------------------------------\n\nTivoli, Autonomic Computing\nIndia Software Labs, Bangalore\nEmbassy Golf Links Business Park,Block B\nPhone: ++91-80-41055478, mailto: rohit.shetty@in.ibm.com\n\n\n\nAlex Nan/Toronto/IBM@IBMCA\n14/02/2007 02:05\t\n\tTo\n\tEric Labadie/Toronto/IBM@IBMCA\n\tcc\n\tMarius Slavescu/Toronto/IBM@IBMCA, Rohit Shetty/India/IBM@IBMIN\n\tSubject\n\tRe: Fw: SSAT: Couple of Observations\n\t\n\t\n\t\n\t\n\nHi,\n\nTPTP is indeed generating the same expression for extendedDataElements.values as SSAT. It should probably be extendedDataElements/@values[1] by default. This problem can be easily fixed in the editor.\n\n\nAlexandru Nan - Software Developer\nphone:  905-413-6029\ne-mail: apnan@ca.ibm.com\nIBM Lab,\n8200 Warden Ave. \nMarkham, Ontario, Canada\nL6G 1C7\n\n\n\nEric Labadie/Toronto/IBM \n02/13/2007 08:55 AM\t\n\tTo\n\tAlex Nan/Toronto/IBM@IBMCA, Marius Slavescu/Toronto/IBM@IBMCA\n\tcc\n\tRohit Shetty/India/IBM@IBMIN\n\tSubject\n\tFw: SSAT: Couple of Observations\n\t\n\t\n\t\n\t\n\nAlex, there seem to have a problem  with the TPTP XPATH editor for the query below.  Is this supported?\n\nMarius, if we hardcoded the XPATH rule in the catalog, the TPTP XPATH engine doesn\u0027t work with it.  Is it supported?\n\nRegards! \nEric Labadie labadie@ca.ibm.com \nAutonomic Computing, Tivoli \nLog Analyzer Assembly Architect \nSenior Advisory Analyst \nIBM Toronto Lab, Canada \nhttps://web.cs.opensource.ibm.com/www/ac-tech/index.html \nPhone: 905-413-3699 T/L:969 \nFax: 905-413-4920 T/L:969 \n",
    "Changing to Platform.Models component where Fast XPath Engine is contained. Also reassigning to component owner.",
    "not triaged",
    "priority reset since defect not triaged",
    "Created an attachment (id\u003d65034)\nPatch for the problem. \n\nThis patch contains the aggregated fixes for batch compile error handling and 179107 and 174661.\n\nOn this defect the fix corrects a problem with the loop generation problems (code generation) xpath expression evaluation .i.e. for the expression /CommonBaseEvent[(contains(extendedDataElements/values,\u0027CRM506_CAPSCRRUN\u0027))]\n\nand\n\n/CommonBaseEvent[ ( contains (@msg, \u0027sample\u0027) )  or (contains(extendedDataElements[@name \u003d \u0027LOG_FILE\u0027]/values,\u0027XXXX\u0027))]\n\nThe second issue fixed is the String index out of bounds error described in the defect.\n\n",
    "Marius,\nCan you please review the patch.",
    "Thanks Rohit.\n\nFix in CVS.",
    "Fixed"
  ],
  "commentCreationDates": [
    "2007-02-19T17:44:47+01:00",
    "2007-02-19T17:46:02+01:00",
    "2007-02-19T17:47:22+01:00",
    "2007-02-19T17:52:02+01:00",
    "2007-02-19T18:04:46+01:00",
    "2007-03-29T19:58:11+02:00",
    "2007-04-04T03:50:04+02:00",
    "2007-04-26T15:37:57+02:00",
    "2007-04-26T15:39:55+02:00",
    "2007-05-07T08:37:13+02:00",
    "2007-05-07T15:38:18+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "elements": [
        {
          "method": "java.lang.StringBuffer.substring",
          "source": "StringBuffer.java:900"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops",
          "source": "CompilerPostProcessor.java:384"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.createLoop",
          "source": "CompilerPostProcessor.java:478"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops",
          "source": "CompilerPostProcessor.java:389"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.postCompileProcess",
          "source": "CompilerPostProcessor.java:80"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource",
          "source": "FastXPathEngine.java:194"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource",
          "source": "FastXPathTest.java:179"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run",
          "source": "FastXPathTest.java:90"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main",
          "source": "FastXPathTest.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "174661",
      "date": "2007-02-19T17:44:47+01:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource",
          "source": "FastXPathTest.java:185"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run",
          "source": "FastXPathTest.java:90"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main",
          "source": "FastXPathTest.java:191"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "174661",
      "date": "2007-02-19T17:44:47+01:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "elements": [
        {
          "method": "java.lang.StringBuffer.substring",
          "source": "StringBuffer.java:900"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops",
          "source": "CompilerPostProcessor.java:384"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.createLoop",
          "source": "CompilerPostProcessor.java:478"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.processLoops",
          "source": "CompilerPostProcessor.java:389"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerPostProcessor.postCompileProcess",
          "source": "CompilerPostProcessor.java:80"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource",
          "source": "FastXPathEngine.java:194"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource",
          "source": "FastXPathTest.java:179"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run",
          "source": "FastXPathTest.java:90"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main",
          "source": "FastXPathTest.java:191"
        }
      ],
      "number": 2,
      "commentIndex": 3,
      "bugId": "174661",
      "date": "2007-02-19T17:52:02+01:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource",
          "source": "FastXPathTest.java:185"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.run",
          "source": "FastXPathTest.java:90"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.main",
          "source": "FastXPathTest.java:191"
        }
      ],
      "number": 3,
      "commentIndex": 3,
      "bugId": "174661",
      "date": "2007-02-19T17:52:02+01:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "normal"
    }
  ],
  "groupId": "174661",
  "bugId": "174661",
  "date": "2007-02-19T17:44:47+01:00",
  "product": "TPTP Profiling",
  "component": "Platform.Model",
  "severity": "normal"
}