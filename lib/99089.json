{
  "comments": [
    "This is on AspectJ 1.5.0.20050525133001 as the AJDT dev build hasn\u0027t been\nupdated since then.  Eclipse 3.1M7, AJDT 1.2.0.20050525133001.\n\nThe problem seems to be caused by accessing a private method returning a\nparameterized type from inside a privileged aspect.  (Bug 96111 seems to be\nsimilar but for private fields.  I can\u0027t easily see if that fix fixes this one\ntoo but the exception is quite different.)  Sample follows.\n\n\nStack trace:\n\njava.lang.ArrayIndexOutOfBoundsException: 0\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute(ParameterizedTypeBinding.java:646)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.substitute(Scope.java:85)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute(ParameterizedTypeBinding.java:667)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superclass(ParameterizedTypeBinding.java:731)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSuperclassOf(ReferenceBinding.java:743)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(ReferenceBinding.java:674)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:207)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:415)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:160)\n\tat\norg.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:130)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:393)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1026)\n\tat\norg.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:110)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1075)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:280)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:546)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:365)\n\tat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:727)\n\tat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:229)\n\tat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:147)\n\tat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:116)\n\tat\norg.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\n\n\n\nDataClass.java:\n\nimport java.util.Vector;\npublic class DataClass {\n\tprivate Vector\u003cObject\u003e v \u003d new Vector\u003cObject\u003e();\n\tprivate Vector\u003cObject\u003e getV() { return v; }\n}\n\n\nTracingAspect.java:\n\nimport java.util.Vector;\nprivileged aspect TracingAspect {\n\tbefore(DataClass dc): execution(* DataClass.doit()) \u0026\u0026 this(dc) {\n\t\tVector\u003cObject\u003e myV \u003d dc.getV();\n\t}\n}\n\n\nThanks.",
    "Fails on the latest compiler like this:\n\nUnexpected error messages:\n\terror at Vector\u003cObject\u003e myV \u003d dc.getV();\n               \nTracingAspect.java:5:0::0 Type mismatch: cannot convert from Vector\u003cE\u003e to\nVector\u003cObject\u003e\n\n",
    "Test created in Ajc150Tests.java but commented out for now ...",
    "The problem here is that AjcMemberMaker.privilegedAccessForMethod() is losing\nthe information about the parameterized type Vector\u003cObject\u003e and defaulting to\nthe generic type Vector\u003cE\u003e.  Fundamentally, creation of a TypeX from a generic\nsignature isn\u0027t working - it will let a signature through but ignore the\ngenerics information, rather than storing it as part of the TypeX object.  I\u0027ve\nfixed the TypeX processing to actually process generic information.  So now, if\nyou call:\n\nTypeX.forSignature(Ljava/util/Map\u003cLjava/util/List\u003cLjava/lang/String;\u003e;Ljava/lang/String;\u003e;\"\n\nyou will get this kind of structure to your returned TypeX:\n\n TypeX:\nsig\u003dLjava/util/Map\u003cLjava/util/List\u003cLjava/lang/String;\u003e;Ljava/lang/String;\u003e;\nparameterized\u003dtrue #params\u003d2\n  param1: TypeX:  sig\u003dLjava/util/List\u003cLjava/lang/String;\u003e; parameterized\u003dtrue\n#params\u003d1\n    param1: TypeX:  sig\u003dLjava/lang/String; parameterized\u003dfalse #params\u003d0\n  param2: TypeX:  sig\u003dLjava/lang/String; parameterized\u003dfalse #params\u003d0\n\nthis *may* help other generics tests to start working !",
    "Fix checked in, waiting on build before closing.",
    "Fix available, see aspectj download page: aspectj-DEVELOPMENT-20050614164300.jar"
  ],
  "commentCreationDates": [
    "2005-06-09T01:49:29+02:00",
    "2005-06-09T15:55:10+02:00",
    "2005-06-09T15:59:00+02:00",
    "2005-06-14T11:29:18+02:00",
    "2005-06-14T16:57:53+02:00",
    "2005-06-14T18:05:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "0",
      "elements": [
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute",
          "source": "ParameterizedTypeBinding.java:646"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.substitute",
          "source": "Scope.java:85"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substitute",
          "source": "ParameterizedTypeBinding.java:667"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.superclass",
          "source": "ParameterizedTypeBinding.java:731"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isSuperclassOf",
          "source": "ReferenceBinding.java:743"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith",
          "source": "ReferenceBinding.java:674"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve",
          "source": "LocalDeclaration.java:207"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:415"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:160"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements",
          "source": "AdviceDeclaration.java:130"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:393"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1026"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve",
          "source": "AspectDeclaration.java:110"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1075"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:280"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:546"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:365"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:727"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:229"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:147"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:116"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "99089",
      "date": "2005-06-09T01:49:29+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "99089",
  "bugId": "99089",
  "date": "2005-06-09T01:49:29+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}