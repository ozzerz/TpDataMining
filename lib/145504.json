{
  "comments": [
    "Origonally found when trying to run an application I created using 3.1.1 that had been working before upgrading to 3.2 RC2 as described here:\nhttp://www.eclipse.org/newsportal/article.php?id\u003d55270\u0026group\u003declipse.platform#55270\n\nI now have a much smaller and reproducable example.  The trouble seems to occur when creating a Status object.\n\nIn my simple application (which I will attach) the line of code in my command handler:\n    IStatus status \u003d new Status (Status.ERROR, \"TestApp\", 1, \"Test Error Status\", null);\n\ncauses the following stack trace:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: org/eclipse/osgi/util/NLS\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat org.eclipse.core.runtime.Status.\u003cclinit\u003e(Status.java:30)\n\tat com.lesliesoftware.jfaceexceptiontest.TestSWTApp$1.widgetSelected(TestSWTApp.java:136)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3348)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2968)\n\tat com.lesliesoftware.jfaceexceptiontest.TestSWTApp.main(TestSWTApp.java:61)",
    "Created an attachment (id\u003d43578)\nSimple SWT / JFace application that reprouces the problem\n\nI have attached a simple SWT / JFace application that reproduces the problem.  This is based on a stripped down version of my template application so it has more than the bare mimimum but not much.  Run it and execute the command \"File | Execute Command\" to see the application crash.",
    "Paul Webster and I discovered that OK_Status uses CommonMessages in its constructor which creates a dependency on org.eclipse.osgi_version_build.jar.  I added that as a dependency on my project and then it worked.",
    "Marking as WORKSFORME",
    "Reopening. Sounds like a bug in equinox.common.",
    "CommonMessages is in equinox.common, but it extends NLS, which is in org.eclipse.osgi.",
    "The analysis in comment #2 is correct. I think this usecase must have slipped through the test ran to verify bug #49497.\nFor now the workaround I have for you is to get the org.eclipse.equinox.supplement bundle from the equinox download page (http://www.eclipse.org/equinox) and add it to your classpath, however please don\u0027t refer explicitly to any class from it as this bundle is in fact made to run on osgi.\n\nWe need to see if there is a better story than this and also if there is other places where we are lying about the fact that you don\u0027t need to run osgi.\n\nLowering the severity to major.",
    "this belongs in the bundles component.",
    "Created an attachment (id\u003d48916)\nPatch\n\nThe patch removes dependency of Status on the CommonMessages.\n\nIan, thanks for finding the the cause of the problem!\n",
    "Patch released into CVS head.\n",
    "Oleg, is that patch really correct? Now the string \"OK\" cannot be externalized. I\u0027m not convinced this is what we want to do. Either way, I would consider it an API change.\n\nAlso, a milestone needs to be set on all bugs with a FIXED resolution. Thanks.",
    "While it is possible that this string is shown to a user, this is typically not the case. The expected usage pattern is that OK_STATUS would be passed as a result of method invocation if, well, everything is OK :-).\n\nI checked about 20 random cases in the SDK and did not come across a case there this string would be visible to the user.\n\nThis, of course, does not mean that somebody somewhere would not just show the message from OK_STATUS to the user. However, to me, the immediate benefit (removal of dependency on OSGi) far outweighs potential drawback (the OK_Status message displayed to a user being not localized).\n\nIf this still looks like too much of a challenge, I would remove the message string from OK_Status altogether and replace it with an empty string (we don\u0027t have a message string for the CANCEL_STATUS supplied in the next line).\n\nIn a more general sense, is changing a message text an API change? I would think that this is an API change only if it is documented somewhere - like Javadoc saying \"This produces message ABC as the result of actions ...\".\n",
    "The only reason that I thought it might be an API change was because the field is public and now it won\u0027t be translated. (it is included in the Eclipse 3.2 tranlation pack)\n\nBoris? You\u0027re one of the API police...\n",
    "Re-opened as the original fix is deemed an API change.\n",
    "Created an attachment (id\u003d48969)\nPatch\n\nThis is the different patch that keeps localization of the \"OK\" message used by the Status.OK_STATUS only.\n\nThe localization is kept if NLS is accessible to the classloader and localization environemnt variables are set. If NLS is not available, the \"ok\" is used as a message text for the Status.OK_STATUS message.\n",
    "Patch committed into CVS head.\n"
  ],
  "commentCreationDates": [
    "2006-06-06T12:29:57+02:00",
    "2006-06-06T12:32:32+02:00",
    "2006-06-06T14:14:32+02:00",
    "2006-06-06T15:02:09+02:00",
    "2006-06-08T18:45:31+02:00",
    "2006-06-08T18:47:29+02:00",
    "2006-06-08T19:14:09+02:00",
    "2006-07-26T21:34:36+02:00",
    "2006-08-28T21:03:12+02:00",
    "2006-08-28T21:05:02+02:00",
    "2006-08-29T14:54:50+02:00",
    "2006-08-29T15:37:13+02:00",
    "2006-08-29T15:45:32+02:00",
    "2006-08-29T17:30:47+02:00",
    "2006-08-29T17:33:16+02:00",
    "2006-08-29T21:10:24+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org/eclipse/osgi/util/NLS",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:620"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:124"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:260"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "URLClassLoader.java:56"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:195"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:188"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:306"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:268"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        },
        {
          "method": "org.eclipse.core.runtime.Status.\u003cclinit\u003e",
          "source": "Status.java:30"
        },
        {
          "method": "com.lesliesoftware.jfaceexceptiontest.TestSWTApp$1.widgetSelected",
          "source": "TestSWTApp.java:136"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:90"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:928"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3348"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2968"
        },
        {
          "method": "com.lesliesoftware.jfaceexceptiontest.TestSWTApp.main",
          "source": "TestSWTApp.java:61"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "145504",
      "date": "2006-06-06T12:29:57+02:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "major"
    }
  ],
  "groupId": "145504",
  "bugId": "145504",
  "date": "2006-06-06T12:29:57+02:00",
  "product": "Equinox",
  "component": "Bundles",
  "severity": "major"
}