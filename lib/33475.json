{
  "comments": [
    "Eclipse 2.1 RC1\n\nEvery time I restart Eclipse it seems that some projects have their build path \nbroken. Even though the correct JARs are on the classpath if I try code assist \nor reorganize imports, things do not work. For code assist it does not find \nany completions and organize imports removes valid import statements from the \nfile.\nIf I rebuild all, everything goes back to normal but if I exit and restart \nEclipse things are broken again.\n\nHave you experienced anything similar before? What could be wrong? I can \nprovide the workspace upon request.",
    "Olivier - please investigate with Rodrigo",
    "This was an issue with the editor and the positions inside the editor.\nSeems to be fixed using latest 0227 integration build.\nClosed as WORKSFORME.",
    "It happened again this morning with I20030227.",
    "This problem is due to the resolution of classpath variables when the workspace\nstarts. Rodrigo uses a lot of variables in his project\u0027s classpath like:\nECLIPSE_HOME/...../jdtcore.jar ....\nWhen the workspace starts, no type in jdtcore.jar can be found. A search to\nreferences of IJavaElement returned no matches. Editing the project\u0027s\nproperties\u003eJava build path and simply click OK without changing anything fixes\nthe problem.\nThese variables in the java browsing perspective are not shown till the build\npath is recomputed. I am trying to isolate a simple test case without much\nsuccess so far.",
    "Its project .classpath looks like this:\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cclasspath\u003e\n    \u003cclasspathentry kind\u003d\"src\" path\u003d\"src/\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n       \npath\u003d\"ECLIPSE_HOME/plugins/org.eclipse.core.resources_2.1.0/resources.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.core.resources_2.1.0/resourcessrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.ui_2.1.0/ui.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.ui_2.1.0/uisrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.swt.win32_2.1.0/ws/win32/swt.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_WIN32_SOURCE_SRC/org.eclipse.swt.win32_2.1.0/ws/win32/swtsrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.text_2.1.0/text.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.text_2.1.0/textsrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.jface_2.1.0/jface.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.jface_2.1.0/jfacesrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.jface.text_2.1.0/jfacetext.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.jface.text_2.1.0/jfacetextsrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.ui.views_2.1.0/views.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.ui.views_2.1.0/viewssrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"src\" path\u003d\"/org.eclipse.ui.workbench\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n       \npath\u003d\"ECLIPSE_HOME/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/texteditor.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.ui.workbench.texteditor_2.1.0/texteditorsrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.ui.editors_2.1.0/editors.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.ui.editors_2.1.0/editorssrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.jdt.core_2.1.0/jdtcore.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_JDT_SOURCE_SRC/org.eclipse.jdt.core_2.1.0/jdtcoresrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.jdt.ui_2.1.0/jdt.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_JDT_SOURCE_SRC/org.eclipse.jdt.ui_2.1.0/jdtsrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.core.boot_2.1.0/boot.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.core.boot_2.1.0/bootsrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"ECLIPSE_HOME/plugins/org.eclipse.core.runtime_2.1.0/runtime.jar\"\nsourcepath\u003d\"ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.core.runtime_2.1.0/runtimesrc.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"con\" path\u003d\"org.eclipse.jdt.launching.JRE_CONTAINER\"/\u003e\n    \u003cclasspathentry kind\u003d\"output\" path\u003d\"bin\"/\u003e\n\u003c/classpath\u003e\n\nI tried to reproduce it, but the classpath gets resolved properly all the time.\nSo I don\u0027t know what is specific to Rodrigo\u0027s workspace to have its classpath\nvariable not initialized on startup.",
    "If PDE\u0027s variable initializer didn\u0027t do its job, then it would definitely cause \nthe trouble Rodrigo is seeing. Cc\u0027ing Dejan for comment on this.\n\nAlso, Olivier/Rodrigo, can you enable the JDT/Core debug traces to see what\u0027s \ngoing on during startup ?\n\norg.eclipse.jdt.core/debug\u003dtrue\norg.eclipse.jdt.core/debug/cpresolution\u003dtrue\n",
    "We have a variable initializer registered, and it should be used by JDT Core.",
    "I will try in debug mode and let you know what I get.",
    "The problem is related to the classpath variable initialization in conjunction \nwith the usage of links files. If Rodrigo doesn\u0027t use any links file anymore, \nthe problem disappear.\nI will provide the debug trace as soon as the mail system is back in order.\n",
    "Here is the first part of the trace:\nCPContainer INIT - reentering access to project container:\n[org.eclipse.ui.examples.tileeditor] org.eclipse.jdt.launching.JRE_CONTAINER\nduring its initialization, will see previous value: Persisted co\nntainer [org.eclipse.jdt.launching.JRE_CONTAINER for project\n[org.eclipse.ui.examples.tileeditor]\nCPContainer INIT - after resolution: [org.eclipse.ui.examples.tileeditor]\norg.eclipse.jdt.launching.JRE_CONTAINER --\u003e container: JRE System Library\n[ibmjdk131] {D:/IBMJDK131/jre/lib/rt.jar[CPE_LIBRARY\n][K_BINARY][sourcePath:d:/ibmjdk131/src.jar][rootPath:src][isExported:false]\n,\nD:/IBMJDK131/jre/lib/i18n.jar[CPE_LIBRARY][K_BINARY][sourcePath:d:/ibmjdk131/src.jar][rootPath:src][isExported:false]\n,\nD:/IBMJDK131/jre/lib/ext/ibmjcaprovider.jar[CPE_LIBRARY][K_BINARY][sourcePath:][rootPath:][isExported:false]\n,\nD:/IBMJDK131/jre/lib/ext/indicim.jar[CPE_LIBRARY][K_BINARY][sourcePath:][rootPath:][isExported:false]\n,\nD:/IBMJDK131/jre/lib/ext/JawBridge.jar[CPE_LIBRARY][K_BINARY][sourcePath:][rootPath:][isExported:false]\n}\nCPVariable INIT - no initializer found for: ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK\nCPVariable INIT - no initializer found for: ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK\nCPVariable INIT - reentering access to variable: ECLIPSE_HOME during its\ninitialization, will see previous value: D:/eclipse/runtimes/I20030227/eclipse\nCPVariable INIT - no initializer found for: ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK\nCPVariable INIT - no initializer found for: ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK\nCPVariable INIT - no initializer found for: ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK\nCPVariable INIT - after initialization: ECLIPSE_HOME --\u003e\nD:/eclipse/runtimes/I20030227/eclipse",
    "Then we also got these exceptions (quite a lot). They are not in the .log file:\njava.lang.Exception: FAKE exception for dumping current CPContainer\n([org.eclipse.ui.examples.tileeditor]\norg.eclipse.jdt.launching.JRE_CONTAINER)INIT invocation stack trace\n        at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:885)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1532)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1469)\n        at\norg.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:238)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1066)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1053)\n        at\norg.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects(SetClasspathOperation.java:606)\n        at\norg.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDeltas(SetClasspathOperation.java:472)\n        at\norg.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath(SetClasspathOperation.java:575)\n        at\norg.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:243)\n        at\norg.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:365)\n        at\norg.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:681)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588)\n        at\norg.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:544)\n        at\norg.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2172)\n        at org.eclipse.jdt.core.JavaCore$4.run(JavaCore.java:3146)\n        at\norg.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)\n        at\norg.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:365)\n        at\norg.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:681)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588)\n        at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2699)\n        at org.eclipse.jdt.core.JavaCore.updateVariableValues(JavaCore.java:3134)\n        at org.eclipse.jdt.core.JavaCore.removeClasspathVariable(JavaCore.java:2651)\n        at\norg.eclipse.pde.internal.core.EclipseHomeInitializer.resetEclipseHomeVariables(EclipseHomeInitializer.java:43)\n        at\norg.eclipse.pde.internal.core.EclipseHomeInitializer.initialize(EclipseHomeInitializer.java:35)\n        at org.eclipse.jdt.core.JavaCore$2.run(JavaCore.java:1016)\n        at\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:867)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:413)\n        at org.eclipse.jdt.core.JavaCore.getClasspathVariable(JavaCore.java:1011)\n        at org.eclipse.jdt.core.JavaCore.getResolvedVariablePath(JavaCore.java:1754)\n        at\norg.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry(JavaCore.java:1671)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1522)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1469)\n        at\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1445)\n        at\norg.eclipse.jdt.internal.core.DeltaProcessor.initializeRoots(DeltaProcessor.java:1099)\n        at\norg.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:362)\n        at\norg.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:681)\n        at\norg.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:541)\n        at\norg.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy(CompilationUnit.java:582)\n        at\norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createElementInfo(CompilationUnitDocumentProvider.java:852)\n        at\norg.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvider.java:302)\n        at\norg.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:2287)\n        at\norg.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:160)\n        at\norg.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:1558)\n        at\norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:909)\n        at\norg.eclipse.ui.texteditor.AbstractTextEditor$8.run(AbstractTextEditor.java:1788)\n        at\norg.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:296)\n        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)\n        at\norg.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:431)\n        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)\n        at\norg.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:428)\n        at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1362)\n        at\norg.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:1803)\n        at\norg.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:1820)\n        at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:598)\n        at\norg.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:660)\n        at org.eclipse.ui.internal.EditorManager.access$7(EditorManager.java:649)\n        at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:913)\n        at\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:867)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:413)\n        at\norg.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:858)\n        at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:851)\n        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)\n        at\norg.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:847)\n        at\norg.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:750)\n        at\norg.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2232)\n        at\norg.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1302)\n        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1132)\n        at org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1092)\n        at org.eclipse.ui.internal.Workbench$10.run(Workbench.java:1010)\n        at\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:867)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:413)\n        at\norg.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:962)\n        at org.eclipse.ui.internal.Workbench.init(Workbench.java:742)\n        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1242)\n        at\norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)\n        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n        at org.eclipse.core.launcher.Main.run(Main.java:703)\n        at org.eclipse.core.launcher.Main.main(Main.java:539)",
    "Wassim, take a look at the comment 10 from Olivier. It looks like classpath \nintializer cannot be found for the variables created from link files in the \ntarget platform. How do we initialize these (can we at all)?",
    "Rodrigo is using two links files. One for GEF and another one for another \nproject. This prevents him from loading lot of plugins in his workspace.",
    "PDE has a classpath variable initializer registered for ECLIPSE_HOME.\nIn the presence of links however (as in Rodrigo\u0027s case), PDE also reads the \ncontents of the link files and assigns an ECLIPSE_HOME_* variable to account \nfor the additional plug-in locations.\nDue to the dynamic nature of these link variables, we cannot register classpath \nvariable initializers for them, so what we do is piggy-back on the original \nECLIPSE_HOME initializer.  When that initializer is called, PDE computes the \nnew value of ECLIPSE_HOME, then removes all the link ECLIPSE_HOME_* variables \n(if any) and computes the new ones (if any) from the link files.  Removal and \nrecomputation is necessary as these links could vary in number and location \nfrom one startup to the next.\nThis seems to be causing a problem for JDT Core\u0027s resolution of the classpath.\nDo you have a suggestion for a better approach to address this issue?",
    "Variable initializers do not support dynamic variable name resolution. The \nresolved variable must be statically registered.\nContainers would however allow you to address this issue. A container path is \nformed of a first container ID segment, and then a few hint segments. The \ncontainer ID identifies a container initializer (i.e. it is the only static \nportion of the piece to resolve which must have a statically registered \ninitializer), the rest of the container path is dynamically resolved by the \ninitializer.\n\nOlivier - the exception traces are fake exception used to trace who\u0027s \ntriggering initializer activations.",
    "Moving to PDE/UI, leaving milestone set to drag attention.",
    "Philippe, what we have here are variables for external JARs that we use to \navoid having absolute paths in the shared repository. In contrast, classpath \ncontainers require that you provide the \u0027real\u0027 classpath entires instead (we \nuse them elsewhere in PDE, so we are familiar). Can you explain in more detail \nhow can classpath containers help us in this situation? ",
    "Classpath containers are the way to go in general, and are much more powerful \nthan classpath variables. They allow a few more things:\n- same container can denote a set of JARs (or projects), where a classpath \nvariable was allowing you to point at one JAR exactly.\n- containers have a readable description,\n- container paths is a combination of a static ID and a trailing portion \ntreated as an hint.\n\nThis being said, I don\u0027t know if you still need to use 3 container references \nto denote 3 JARs, or have them all grouped in one macro entity. But if you want \nto keep the same granularity, here is how to do it:\n\ne.g. instead of using a variable entry:\nORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.core.resources_2.1.0/resourcessrc.zi\np\n\nyou would use a container entry with path:\nECLIPSE_HOME/ORG_ECLIPSE_PLATFORM_SOURCE_SRC/org.eclipse.core.resources_2.1.0/re\nsourcessrc.zip\n\nwith your container initializer registered for ID \u0027ECLIPSE_HOME\u0027.\nWhen invoked for all container paths prefixed with \u0027ECLIPSE_HOME\u0027, it would get \nthe entire path, and transform is into whatever it wants. I suspect that it \nwould simply substitue ORG_ECLIPSE_PLATFORM_SOURCE_SRC with the appropriate \npath, and append the trailing path portion to it:\n\nd:/eclipse/src/org.eclipse.core.resources_2.1.0/resourcessrc.zip\n\nThis way you can have as many references as you need, and only one registered \ninitializer, which can dynamically decide how to resolve them.\n\nNote that the container entry doesn\u0027t need to have some actual path information \ninto it (I mean for the trailing container hint portion), it is up to you to \nspecify the hint portion in a way which your initializer can decode and expand \ninto actual classpath entries.\n\nFor instance the JRE initializer is using some generic container ID (let \nsay \"JRE\", and hints to denote JDK flavors \"1.2.2\", \"1.3\", or whatever matches \nthe installed JREs information).\n\nAm I making any sense ?\n",
    "Rodrigo, before I start making major changes this late in the 2.1 cycle, I \nwould like to be able to reproduce the problem.  Could you please give me steps \nto reproduce it?",
    "I haven\u0027t tried this in an workspace other than my own so here is a \ndescription of my workspace:\n\nEclipse is installed at:\nD:\\eclipse\\runtimes\\I20030227\n\nGEF is installed at:\nD:\\GEF\\I20030220\n\nI have a link file at:\nD:\\eclipse\\runtimes\\I20030227\\eclipse\\links\\org.eclipse.gef.link\nwith the contents:\npath\u003dD:/GEF/I20030220\n\nI have an empty file at:\nD:\\GEF\\I20030220\\eclipse\\.eclipseextension\n\nIn Eclipse, go to File-\u003eImport-\u003eExternal Plug-ins and Fragments. Check \nthe \"Extract source archieves...\", choose org.eclipse.gef and \norg.eclipse.ui.workbench.\n\nIn Eclipse, go to Window-\u003ePreferences-\u003ePlug-in Development-\u003eTarget Platform \nand choose \"this application\" click \"reload\" and \"not in workspace\". OK.\n\nThe GEF plug-in will be broken (no source folder defined) so you have to go to \nthe project properties and choose the existing src-gef as the source folder. \nThere might be still an error on GEF related to references to an internal \nconstant from the Eclipse UI (just disconsider that).\n\nMy workspace has a few plug-in projects and most of them rely on various \nEclipse plug-ins (UI, JDT, ...). The classpath is calculated using the \"Update \nclasspath\" menu which makes them relative to ECLIPSE_HOME.\n\nThere is only one plug-in that requires GEF and the classpath is also \ncalculated using the \"Update classpath\" menu.\n\nHope this is enough for you to reproduce the problem. Let me know how it goes.\n",
    "thanks Rodrigo, I\u0027ll give it a try.\nOne more thing:  where do I get gef from?",
    "http://download.eclipse.org/tools/gef/downloads/\n\nI am using version I20030220 but maybe a newer version has fixed those errors \nI\u0027ve mentioned above.",
    "I\u0027m going to re-assign it back to JDT Core for the following reason:\nWhen you shut down and restart Eclipse on a workspace such as Rodrigo\u0027s, go \ndirectly to the classpath variables preference page, you will see that \nECLIPSE_HOME and ECLIPSE_HOME_COM_ECLIPSE_GEF_LINK are correctly initialized.\nThis is all PDE is required to do and it is doing it.\nThe .classpath files for all projects in the workspace are all accurate and \nrefer to external JARS using the correctly initialized variables. \nBut for some reason, JDT Core needs a rebuild of the projects to recognize the \nexternal jars.",
    "As you can see on Olivier\u0027s stack traces, there are times where variables are \nnot initializable, and eventually they will get some value.\n\nWe may have an update issue, since assigning a variable value should refresh \nall associated markers (providing it occurs in a context where the resource \ntree isn\u0027t locked - is it true?).\n\nHowever the basic issue is that you have no initializer registered for some of \nyour variables, which isn\u0027t an expected situation.\n\n\n",
    "Olivier, can you replay the trace and see why when/if offending variable is \nassigned in the end, it doesn\u0027t update the affected projects (debug from \nJavaCore.setClasspathVariable).\n\nUnclear we are going to change this situation that late in the game, as I said \nearlier, the lazy variable initialization may simply invoked in a context where \nwe are denied the right to create markers (i.e. next build action should clear \nthe unnecessary ones). If this is the case, no action is to be taken for 2.1.\n\nThis is still a PDE bug, exposing a JDT bug (maybe).",
    "I am not sure I saw anything about the resolution of this variable. I will do it\nagain on Rodrigo\u0027s machine and update the PR.",
    "Created an attachment (id\u003d3828)\nDebug trace\n\nThis is what I got in debug mode. The problem looks like a refresh problem,\nbecause there is nothing in the trace when I edit the build path and then OK.\nAfter this works. A rebuild is not necessary. Editing the java build path is\nenough.",
    "Wassim - from Olivier\u0027s trace, it does not seem you are ever setting the value \nfor ECLIPSE_HOME_COM_ECLIPSE_GEF_LINK, since it is requested in vain until the \nend of the trace.\n\nNeed to add more info to the trace to see more details.\n\nOlivier - could you post Rodrigo\u0027s workspace on snz1f ?",
    "Created an attachment (id\u003d3837)\nEclipseHomeInitializer\n",
    "In the initializer registered for ECLIPSE_HOME, I initialize ECLIPSE_HOME, and \nloop through all the links and create a variable for each link.\n\nNote that prior to initializing ECLIPSE_HOME, I delete all ECLIPSE_HOME_* \nvariables corresponding to links (so that we don\u0027t end up with stale variables \ncorresponding to links from previous configurations that no longer exist in the \ncurrent configuration).\nThen after initializing ECLIPSE_HOME, I go through all the links and create a \nvariable for each link.\n\nDo you think the removal of the ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK variable then \nits recreation is confusing JDT Core?\n\nAttached is the initializer class for ECLIPSE_HOME in which all the \ninitializing/removal/recreation is taking place.\nPlease take a look at it.",
    "Note: the PDE initialization code should perform all these operations inside a \nJavaCore.run batch operation, so as to avoid unnecessary intermediate \nupdates/notifications.",
    "*** Bug 33695 has been marked as a duplicate of this bug. ***",
    "When reentering JavaCore.updateVariableValues(...), now set the oldPath to null \nso that projects using this variables are updated as well (and the incomplete \nresolved classpath is removed from the cache).\n\nSimilar change was made to JavaCore.setClasspathContainer(...)",
    "At my end, I will put all the initialization operations in a JavaCore.run batch \noperation, as suggested by Philippe.",
    "*** Bug 33918 has been marked as a duplicate of this bug. ***",
    "There is still a problem in RC2.\nAfter you restart your workspace, you will see an error in the tasks view:\n\"Unbound classpath \nvariable: \u0027ECLIPSE_HOME_ORG_ECLIPSE_GEF_LINK/org.eclipse.draw2d_2.1.0/runtime/dr\naw2d.jar\u0027\n\nIf you then open the .classpath file, add a space or something and resave.  \nEverything is fine.\n\nI suggest re-opening this bug for further investigation.",
    "We haven\u0027t been able to reproduce extra error when testing, all was fine in the \nend.",
    "Your new problem is bug 34286.\nThis bug can be marked as verified. Verified by Rodrigo.",
    "I\u0027ve got the message Wassim reports on comment 36 when I\u0027ve updated my link \nfile to point to a newer version of GEF. Doing \"Update classpath\" solved that."
  ],
  "commentCreationDates": [
    "2003-02-27T19:10:34+01:00",
    "2003-02-27T19:54:40+01:00",
    "2003-02-27T20:56:26+01:00",
    "2003-02-28T15:40:46+01:00",
    "2003-02-28T19:13:24+01:00",
    "2003-02-28T20:10:26+01:00",
    "2003-03-03T10:59:53+01:00",
    "2003-03-03T15:03:12+01:00",
    "2003-03-03T15:09:31+01:00",
    "2003-03-03T15:41:48+01:00",
    "2003-03-03T16:09:42+01:00",
    "2003-03-03T16:11:40+01:00",
    "2003-03-03T16:15:16+01:00",
    "2003-03-03T16:22:55+01:00",
    "2003-03-03T16:42:22+01:00",
    "2003-03-03T16:50:13+01:00",
    "2003-03-03T16:52:29+01:00",
    "2003-03-03T17:09:13+01:00",
    "2003-03-03T17:37:48+01:00",
    "2003-03-03T21:02:58+01:00",
    "2003-03-03T22:20:13+01:00",
    "2003-03-03T22:34:30+01:00",
    "2003-03-03T22:42:34+01:00",
    "2003-03-04T00:56:23+01:00",
    "2003-03-04T10:28:04+01:00",
    "2003-03-04T10:31:29+01:00",
    "2003-03-04T15:09:40+01:00",
    "2003-03-04T15:27:20+01:00",
    "2003-03-04T23:10:44+01:00",
    "2003-03-04T23:43:27+01:00",
    "2003-03-04T23:44:13+01:00",
    "2003-03-05T11:01:19+01:00",
    "2003-03-05T17:45:33+01:00",
    "2003-03-05T17:49:58+01:00",
    "2003-03-05T17:57:14+01:00",
    "2003-03-06T14:29:24+01:00",
    "2003-03-07T19:18:24+01:00",
    "2003-03-07T23:00:25+01:00",
    "2003-03-10T17:30:05+01:00",
    "2003-03-10T22:12:48+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "FAKE exception for dumping current CPContainer ([org.eclipse.ui.examples.tileeditor] org.eclipse.jdt.launching.JRE_CONTAINER)INIT invocation stack trace",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:885"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1532"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1469"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath",
          "source": "JavaProject.java:238"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath",
          "source": "JavaProject.java:1066"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath",
          "source": "JavaProject.java:1053"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SetClasspathOperation.updateAffectedProjects",
          "source": "SetClasspathOperation.java:606"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SetClasspathOperation.generateClasspathChangeDeltas",
          "source": "SetClasspathOperation.java:472"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SetClasspathOperation.updateClasspath",
          "source": "SetClasspathOperation.java:575"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation",
          "source": "SetClasspathOperation.java:243"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.execute",
          "source": "JavaModelOperation.java:365"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:681"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1588"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.runOperation",
          "source": "JavaElement.java:544"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.setRawClasspath",
          "source": "JavaProject.java:2172"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$4.run",
          "source": "JavaCore.java:3146"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BatchOperation.executeOperation",
          "source": "BatchOperation.java:34"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.execute",
          "source": "JavaModelOperation.java:365"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:681"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1588"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.run",
          "source": "JavaCore.java:2699"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.updateVariableValues",
          "source": "JavaCore.java:3134"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.removeClasspathVariable",
          "source": "JavaCore.java:2651"
        },
        {
          "method": "org.eclipse.pde.internal.core.EclipseHomeInitializer.resetEclipseHomeVariables",
          "source": "EclipseHomeInitializer.java:43"
        },
        {
          "method": "org.eclipse.pde.internal.core.EclipseHomeInitializer.initialize",
          "source": "EclipseHomeInitializer.java:35"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$2.run",
          "source": "JavaCore.java:1016"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:867"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathVariable",
          "source": "JavaCore.java:1011"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getResolvedVariablePath",
          "source": "JavaCore.java:1754"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry",
          "source": "JavaCore.java:1671"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1522"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1469"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1445"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessor.initializeRoots",
          "source": "DeltaProcessor.java:1099"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.execute",
          "source": "JavaModelOperation.java:362"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:681"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.runOperation",
          "source": "JavaElement.java:541"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy",
          "source": "CompilationUnit.java:582"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createElementInfo",
          "source": "CompilationUnitDocumentProvider.java:852"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractDocumentProvider.connect",
          "source": "AbstractDocumentProvider.java:302"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput",
          "source": "AbstractTextEditor.java:2287"
        },
        {
          "method": "org.eclipse.ui.texteditor.StatusTextEditor.doSetInput",
          "source": "StatusTextEditor.java:160"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput",
          "source": "JavaEditor.java:1558"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput",
          "source": "CompilationUnitEditor.java:909"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$8.run",
          "source": "AbstractTextEditor.java:1788"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:296"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:246"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow$1.run",
          "source": "ApplicationWindow.java:431"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:65"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow.run",
          "source": "ApplicationWindow.java:428"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.run",
          "source": "WorkbenchWindow.java:1362"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.internalInit",
          "source": "AbstractTextEditor.java:1803"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.init",
          "source": "AbstractTextEditor.java:1820"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.createSite",
          "source": "EditorManager.java:598"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openInternalEditor",
          "source": "EditorManager.java:660"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.access$7",
          "source": "EditorManager.java:649"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager$7.run",
          "source": "EditorManager.java:913"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:867"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.busyRestoreEditor",
          "source": "EditorManager.java:858"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager$6.run",
          "source": "EditorManager.java:851"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:65"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.restoreEditor",
          "source": "EditorManager.java:847"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.restoreState",
          "source": "EditorManager.java:750"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.restoreState",
          "source": "WorkbenchPage.java:2232"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.restoreState",
          "source": "WorkbenchWindow.java:1302"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.restoreState",
          "source": "Workbench.java:1132"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$9",
          "source": "Workbench.java:1092"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$10.run",
          "source": "Workbench.java:1010"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:867"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState",
          "source": "Workbench.java:962"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:742"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1242"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 11,
      "bugId": "33475",
      "date": "2003-03-03T16:11:40+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "33475",
  "bugId": "33475",
  "date": "2003-02-27T19:10:34+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}