{
  "comments": [
    "When I move a peer aspect (aspect in some other class\u0027 source file) to its own source, AJDT throws an exception during incremental compilation.\n\n1. Start with a project with just the following source file:\npackage test;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tnew Main().foo();\n\t}\n\t\n\t@PerformenceMonitor(expected\u003d1000)\n\tpublic void foo() {\n\t\t\n\t}\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\n@interface PerformenceMonitor {\n\tpublic int expected();\n}\n\n@Aspect\nclass Monitor {\n\t@Pointcut(\"execution(@PerformenceMonitor * *(..)) \u0026\u0026 @annotation(monitoringAnnot)\")\n\tpublic void monitored(PerformenceMonitor monitoringAnnot) {}\n\t\n\t@Around(\"monitored(monitoringAnnot)\")\n\tpublic Object flagExpectationMismatch(ProceedingJoinPoint pjp, PerformenceMonitor monitoringAnnot) {\n\t\tlong start \u003d System.nanoTime();\n\t\tObject ret \u003d pjp.proceed();\n\t\tlong end \u003d System.nanoTime();\n\t\t\n\t\tif(end - start \u003e monitoringAnnot.expected()) {\n\t\t\tSystem.out.println(\"Method \" + pjp.getSignature().toShortString() + \" took longer than expected\\n\\t\"\n\t\t\t\t\t+ \"Max expected \u003d \" + monitoringAnnot.expected() + \", actual \u003d \" + (end-start));\n\t\t}\n\t\treturn ret;\n\t}\n\t\n}\n\n2. Create a new class -- Monitor (the same name as the aspect)\n3. Cut and paste the Monitor aspect from Main.java to Monitor.java (keep the \"package test;\" statement).\n4. Save All\n\nThe following exception is thrown:\njava.lang.ClassCastException\nat org.aspectj.ajdt.internal.core.builder.AjState.recordClassFile(AjState.java:783)\nat org.aspectj.ajdt.internal.core.builder.AjState.noteResult(AjState.java:636)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager$3.acceptResult(AjBuildManager.java:884)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:206)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:90)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:528)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:269)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:168)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nClassCastException thrown: org.aspectj.weaver.MissingResolvedTypeWithKnownSignature\n\nI tried it a few times. Definitely reproducable.",
    "When I tried to reproduce this on Eclipse 3.2 + AJDT 1.4-latest, I got a different exception:\n\njava.lang.ArrayIndexOutOfBoundsException\nat org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranchRecursion(BcelWeaver.java:693)\nat org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranchRecursion(BcelWeaver.java:676)\nat org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranchRecursion(BcelWeaver.java:675)\nat org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranch(BcelWeaver.java:645)\nat org.aspectj.weaver.bcel.BcelWeaver.validateBindings(BcelWeaver.java:596)\nat org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts(BcelWeaver.java:531)\nat org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:460)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:299)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:192)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:271)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:170)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nArrayIndexOutOfBoundsException thrown: 1\n\n\nAnyway, both exceptions are coming from down in the compiler/weaver so I\u0027m going to pass this over the fence :)",
    "i\u0027ve added a test and it reproduces Ramnivas\u0027 original exception - although he must be on an older version of AJ because we tidied it up to produce a more meaningful error than ClassCastException.  We now get:\n\njava.lang.IllegalStateException: Type \u0027Ltest/Monitor;\u0027 not found in world!\n\tat org.aspectj.ajdt.internal.core.builder.AjState.recordWhetherCompilationUnitDefinedAspect(AjState.java:737)\n\tat org.aspectj.ajdt.internal.core.builder.AjState.noteResult(AjState.java:640)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager$2.acceptResult(AjBuildManager.java:909)\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:215)\n\tat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:91)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:271)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:170)\n\tat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\n\tat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)",
    "testcase committed to MultiProjectIncremental but commented out.",
    "I\u0027m getting the same, or similar stack trace under 3.1 (I can\u0027t upgrade to 3.2 because of plugin dependencies).\n\nAfter commenting out most of my aspect I get the following:\n\npublic abstract aspect OneShotChecks extends AbstractClassTargetting\n// perthis(annotatedClasses())\n{\n   pointcut annotatedClasses(): @within(OneShot) \u0026\u0026 targetClasses();\n}\n\n(Plus another \"targetting\" aspect):\n\npublic aspect InternalOneShotChecks extends OneShotChecks\n{\n    pointcut targetClasses()  :\n        within(org.apache.tapestry..*);\n}\n\n\nWhen I uncomment out the perthis() line, I get the popup exception dialog.\n\n\nI\u0027ve actually been able to uncomment the rest of my aspect, except perthis(),\nwithout errors, but the perthis() triggers this exception:\n\njava.lang.ClassCastException\nat org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut(PerThisOrTargetPointcutVisitor.java:41)\nat org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.visit(PerThisOrTargetPointcutVisitor.java:108)\nat org.aspectj.weaver.patterns.AndPointcut.accept(AndPointcut.java:119)\nat org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut(PerThisOrTargetPointcutVisitor.java:41)\nat org.aspectj.weaver.PerObjectInterfaceTypeMunger.getTestTypePattern(PerObjectInterfaceTypeMunger.java:64)\nat org.aspectj.weaver.PerObjectInterfaceTypeMunger.matches(PerObjectInterfaceTypeMunger.java:85)\nat org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java:65)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:508)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1560)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1511)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1291)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1089)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:242)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:278)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:168)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\ntrouble in: \npublic abstract class org.apache.tapestry.internal.aspects.AbstractClassTargetting extends java.lang.Object:\n  public void \u003cinit\u003e():\n                    ALOAD_0     // Lorg/apache/tapestry/internal/aspects/AbstractClassTargetting; this   (line 24)\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n    constructor-execution(void org.apache.tapestry.internal.aspects.AbstractClassTargetting.\u003cinit\u003e())\n    |               RETURN\n    constructor-execution(void org.apache.tapestry.internal.aspects.AbstractClassTargetting.\u003cinit\u003e())\n  end public void \u003cinit\u003e()\n\n  abstract void ajc$pointcut$$targetClasses$4e2()    org.aspectj.weaver.MethodDeclarationLineNumber: 30:1250\n;\n\nend public abstract class org.apache.tapestry.internal.aspects.AbstractClassTargetting\n\nwhen weaving type org.apache.tapestry.internal.aspects.AbstractClassTargetting\nwhen weaving aspects \nwhen weaving \nwhen batch building BuildConfig[C:\\workspace\\.metadata\\.plugins\\org.eclipse.ajdt.core\\tapestry-core.generated.lst] #Files\u003d208\n\nHere\u0027s the aspect I\u0027m trying to write:\n\npublic abstract aspect OneShotChecks extends AbstractClassTargetting\nperthis(annotatedClasses())\n{\n    private boolean _oneShotLock;\n\n    pointcut annotatedClasses(): targetClasses() \u0026\u0026 @within(OneShot);\n\n    /** Method inherited from java.lang.Object are never locked. */\n    pointcut excludedMethods() :\n        execution(public int hashCode()) ||\n        execution(public boolean equals(Object)) ||\n        execution(public String toString());\n\n    /** Locked methods are within annotated classes, aren\u0027t excluded, and are public. */\n    pointcut lockedMethods() :\n        annotatedClasses() \u0026\u0026 ! excludedMethods() \u0026\u0026 execution(public * *(..));\n\n    /** Methods with the OneShot.Lockdown annotation will set the lock. */\n    pointcut lockingMethods() : lockedMethods() \u0026\u0026 execution(@OneShot.Lockdown * *(..));\n\n    // I\u0027m a little shakey on the order of execution for this pair of advice.\n    // For a locking method, we should do the check first, then set the lock.\n\n    before() : lockingMethods()\n    {\n        _oneShotLock \u003d true;\n    }\n\n    before() : lockedMethods()\n    {\n        if (_oneShotLock)\n            throw new IllegalStateException(\"Method \" + thisJoinPointStaticPart.getSignature()\n                    + \" may no longer be invoked.\");\n    }\n\n}",
    "Getting better results using:\n\npublic abstract aspect OneShotChecks extends AbstractClassTargetting\nperthis(annotatedClasses())\n{\n    private boolean _oneShotLock;\n\n    pointcut annotatedClasses(): targetClasses() \u0026\u0026 within(@OneShot Object+);",
    "the test I created in comment #3 is now passing - not quite sure what that means, but thought I\u0027d say... ;)",
    "Created an attachment (id\u003d50809)\nfailing testcase\n\nApply this patch to the tests project.\n\nI\u0027ve recreated the stacktrace in comment #2 (java.lang.IllegalStateException: Type \u0027LC;\u0027 not found in world!) with HEAD and a simplified testcase. The recreate steps are:\n\n1. Create an aspect that has some advice (A.aj)\n2. Within the same file (A.aj) create a class C that is affected by the advice\n3. Create a new file for this class (C.java) and copy contents \n4. Save and get a \"The type C is already defined\" error\n5. Comment out/delete class C from A.aj and save"
  ],
  "commentCreationDates": [
    "2006-06-22T21:29:05+02:00",
    "2006-06-23T12:04:07+02:00",
    "2006-06-23T13:12:06+02:00",
    "2006-06-23T14:19:16+02:00",
    "2006-07-20T21:34:00+02:00",
    "2006-07-20T21:37:12+02:00",
    "2006-08-23T15:06:17+02:00",
    "2006-09-25T12:33:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "elements": [
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjState.recordClassFile",
          "source": "AjState.java:783"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjState.noteResult",
          "source": "AjState.java:636"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager$3.acceptResult",
          "source": "AjBuildManager.java:884"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing",
          "source": "AjCompilerAdapter.java:206"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184",
          "source": "CompilerAdapter.aj:90"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:528"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:329"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:862"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:269"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:168"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "148285",
      "date": "2006-06-22T21:29:05+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranchRecursion",
          "source": "BcelWeaver.java:693"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranchRecursion",
          "source": "BcelWeaver.java:676"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranchRecursion",
          "source": "BcelWeaver.java:675"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranch",
          "source": "BcelWeaver.java:645"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateBindings",
          "source": "BcelWeaver.java:596"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts",
          "source": "BcelWeaver.java:531"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave",
          "source": "BcelWeaver.java:460"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:299"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:192"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:887"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:271"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:170"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 1,
      "commentIndex": 1,
      "bugId": "148285",
      "date": "2006-06-23T12:04:07+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Type \u0027Ltest/Monitor;\u0027 not found in world!",
      "elements": [
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjState.recordWhetherCompilationUnitDefinedAspect",
          "source": "AjState.java:737"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjState.noteResult",
          "source": "AjState.java:640"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager$2.acceptResult",
          "source": "AjBuildManager.java:909"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing",
          "source": "AjCompilerAdapter.java:215"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184",
          "source": "CompilerAdapter.aj:91"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:533"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:329"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:887"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:271"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:170"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 2,
      "commentIndex": 2,
      "bugId": "148285",
      "date": "2006-06-23T13:12:06+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "elements": [
        {
          "method": "org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut",
          "source": "PerThisOrTargetPointcutVisitor.java:41"
        },
        {
          "method": "org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.visit",
          "source": "PerThisOrTargetPointcutVisitor.java:108"
        },
        {
          "method": "org.aspectj.weaver.patterns.AndPointcut.accept",
          "source": "AndPointcut.java:119"
        },
        {
          "method": "org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut",
          "source": "PerThisOrTargetPointcutVisitor.java:41"
        },
        {
          "method": "org.aspectj.weaver.PerObjectInterfaceTypeMunger.getTestTypePattern",
          "source": "PerObjectInterfaceTypeMunger.java:64"
        },
        {
          "method": "org.aspectj.weaver.PerObjectInterfaceTypeMunger.matches",
          "source": "PerObjectInterfaceTypeMunger.java:85"
        },
        {
          "method": "org.aspectj.weaver.ConcreteTypeMunger.matches",
          "source": "ConcreteTypeMunger.java:65"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:508"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:109"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1560"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1511"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:1291"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1089"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:311"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:183"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:862"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:242"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:161"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:278"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:168"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 3,
      "commentIndex": 4,
      "bugId": "148285",
      "date": "2006-07-20T21:34:00+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "148285",
  "bugId": "148285",
  "date": "2006-06-22T21:29:05+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}