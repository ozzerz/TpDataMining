{
  "comments": [
    "I am running the packaging tool in a large, headless build environment\nIn the \"packager.properties\" featurelist, I specify a feature (A) which \nincludes several other features (B and C)\nThese features include several plugins in turn (b1 b2, c1 c2, all version 1.0.0)\nI have now recieved a feature patch, which patches one of the features, and \nprovides a new version of one of the plugins. (Feature Patch D, contains plugin \nb2 version 1.0.0.002)\nI am not adding D to the featurelist, although I have tried this, both directly \nand by creating an feature to include the feature patch and adding that.\nThe behaviour I would hope for would be for the packager to produce\nfeatures/A\nfeatures/B\nfeatures/C\nplugins/b1_1.0.0\nplugins/b2_1.0.0.002\nplugins/c1_1.0.0\nplugins/c2_1.0.0\nInstead, what I get is:\nfeatures/A\nfeatures/C\nplugins/b1_1.0.0\nplugins/c1_1.0.0\nplugins/c2_1.0.0\nIt seems to get confused somewhere and \"forget\" to package the feature as well \nas any version of the \"patched\" plugin.\nNothing in the build output or workspace even with debug turned on (and on in \npde.build and ant.core)\n...\nFurther experimentation:\nIf I add B directly to the featurelist, at least I get an error message.\nIn this case, \"B\" is a debug.javascript feature which includes a doc plugin.\nIt is the doc plugin which is being updated\nThis is the start of the error message:\n!ENTRY org.eclipse.osgi Feb 03, 2005 12:33:34.187\n!MESSAGE Application error\n!STACK 1\njava.lang.reflect.InvocationTargetException\nCaused by: /astk/images/WAS601-\ndms0505.03/tmp/AST/ws/code/ast/bb/eclipse/plugins/org.eclipse.pde.build_3.0.1/sc\nripts/package.xml:59: The following error occurred while executing this line:\n/astk/images/WAS601-\ndms0505.03/tmp/AST/ws/code/ast/bb/eclipse/plugins/org.eclipse.pde.build_3.0.1/sc\nripts/package.xml:41: org.eclipse.core.runtime.CoreException: Unable to find \nplug-in: com.ibm.debug.javascript.doc_6.0.0. Please check the error log for \nmore details.\n\tat org.apache.tools.ant.ProjectHelper.addLocationToBuildException\n(ProjectHelper.java:539)\n\tat org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:388)\n\tat org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:106)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n\tat org.apache.tools.ant.Task.perform(Task.java:364)\n\tat org.apache.tools.ant.Target.execute(Target.java:341)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:369)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1214)\n\tat org.eclipse.ant.internal.core.ant.InternalAntRunner.run\n(InternalAntRunner.java:635)\n\tat org.eclipse.ant.internal.core.ant.InternalAntRunner.run\n(InternalAntRunner.java:539)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.ant.core.AntRunner.run(AntRunner.java:488)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\nBut, both versions of the plugin seem to be present and correct:\n[deboer2@deboer2 pack.ast.rad.bin]$ head packager/temp/eclipse/plugins/com.ibm.\ndebug.javascript.doc_6.0.0/plugin.xml\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003c?eclipse version\u003d\"3.0\"?\u003e\n\u003cplugin\n   id\u003d\"com.ibm.debug.javascript.doc\"\n   name\u003d\"%plugin_name\"\n   version\u003d\"6.0.0\"\n   provider-name\u003d\"IBM\"\u003e\n\n   \u003cruntime\u003e\n   \u003c/runtime\u003e\n[deboer2@deboer2 pack.ast.rad.bin]$ head packager/temp/eclipse/plugins/com.ibm.\ndebug.javascript.doc_6.0.0.002/plugin.xml\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003c?eclipse version\u003d\"3.0\"?\u003e\n\u003cplugin\n   id\u003d\"com.ibm.debug.javascript.doc\"\n   name\u003d\"%plugin_name\"\n   version\u003d\"6.0.0.002\"\n   provider-name\u003d\"IBM\"\u003e\n\n   \u003cruntime\u003e\n   \u003c/runtime\u003e\n[deboer2@deboer2 pack.ast.rad.bin]$\n...\nI have been working this for several days and I am totally stumped.\nAny help appreciated.",
    "Ted, could you provide a small test case (with files) we can run here to\nreproduce the problem?",
    "Created an attachment (id\u003d18476)\npackaging test case\n\nThis is a simple test case.\nThis is modified from part of my build environment, so has a little extra\nstuff.\nIt looks for a jdk and eclipse instance a couple dirs over.\nJust look in the build.xml and modify as required, should be pretty obvious.\nthe packager/packager.properties file has three different \"featurelists\" along\nwith descriptions of what to expect.\nSend a note if you have any questions about the test case or the problem as I\nsee it.",
    "I tried all packaging scenarios described in the packager.properties and they \nall work for me (running on Windows, build N20050223-0010).  Which build and \nos are you running with?",
    "Packager seems to mostly work with newer build.\nI am running on linux.\nHowever...\nthe packager is still buggy in its handling of require statements.\nPlease try inserting this require stanza in various plugins:\n\u003crequires\u003e\n        \u003cimport plugin\u003d\"com.ibm.nonexistant\"/\u003e\n\u003c/requires\u003e\nIf this stanza is put into com.ibm.a1_1.0.0/plugin.xml, it will cause the build \nto fail with the following error:\n[pack-test/exec] BUILD FAILED\n[pack-test/exec] /sandbox/601/AST/ws/code/prereq.pdebuilder/pdebuilder/plugins/o\nrg.eclipse.pde.build_3.1.0/scripts/package.xml:60: The following error occurred\nwhile executing this line:\n[pack-test/exec] /sandbox/601/AST/ws/code/prereq.pdebuilder/pdebuilder/plugins/o\nrg.eclipse.pde.build_3.1.0/scripts/package.xml:42: org.eclipse.core.runtime.Core\nException: Unable to find plug-in: com.ibm.a1_1.0.0. Please check the error log\nfor more details.\n[pack-test/exec]\n[pack-test/exec] Total time: 3 seconds\nThis is as expected, if not a very useful error for diagnostic purposes.\nIf, however, you add the stanza to plugins/com.ibm.c1_1.0.0/plugin.xml,\nthe build does not fail, and goes to completion with no apparent errors.\nHowever, the c feature and all the c plugins are missing.\nThis is a very dangerous error, as it is very bad and can slip by unnoticed.\n\n",
    "Here is an explanation of why we have the problem:\n\nFeature A provides plugin a1 v 1.0.0\nFeature APatch (path of A) provides plugin a1 v 1.0.1\n\nWhen the packager runs, it collects all the plugins in the system, builds a\nstate, and resolves it. If the plugin a1 is a singleton, then the resolution\nalgorithm will discard v 1.0.0 leading to an error when we will try to gather\nthe content of the feature A.\n\nThere are three solutions to this:\n1) do not resolve the state. Therefore the two version of a1 will still be in\nthe state. However with this, some configuration problems could be missed.\n\n2) when the state is built and a plugin from a patch feature is added, remove\nthe singleton tag on all versions of the plugin.\n\n3) when the lookup of a plugin fails (normally the smallest version), check if\nanother feature provides the same plugin and if it is a patch feature for this\nfeature, then find the plugin and go on.\n",
    "Initial investigations reveal that nothing can be done in a 3.1 timeframe.",
    "From the history above, it looks like the original defect has been fixed and \nwhat remains is an enhancement request.\n\nIf this is correct we should either enter a new bugzilla to capture the \nenhancement request or change the priority and severity of this one. ",
    "As per Kevin\u0027s request, moving to an feature enhancement and updating bug title.",
    "This is actually two problems\nthe first one is that you cannot package a feature and its patch\n(or even the feature itself, if a patch is present)\nThe second problem is that the packager behaves oddly when it encounters and \nunmet dependancy.\nIf the feature it is trying to pack is near the top of a stack, then it fails \nwith a message.\nBut if the dependancy is in an included feature, then the included feature is \nsimply not packed, but the build/pack runs to completion with no error essage.\nThe first problem is serious, since it means that the tool is useless when \ntrying to pack a product when patches are present (currently I have to use a \nperl script to clean the tree beforehand)\nThe second problem is critical, since it means that I have no assurance that \nwhat the packager produces is correct.\ni.e. if I tell it to pack feature A, it may or may not pack the complete \nfeature A, and will do nothing to tell me if it has a problem.\nIf it must fail, then it should fail loudly.",
    "This problem resurfaced again in my product build when we want to package output with Feature patches.\nWith Eclipse 3.2 support multiple version of the same plugins can this be problem be resolved using Eclipse 3.2 plugin loader?\nDoes Eclipse 3.2 plugin loader load more then 1 version of the plugin when that plugin has singleton defined?",
    "Created an attachment (id\u003d55425)\norg.eclipse.pde.build patch\n\nThese are my changes for this problem based on org.eclipse.pde.build r321_v20060823.\nMy change begin with comment // CONAN. \nPlease review.",
    "*** Bug 102807 has been marked as a duplicate of this bug. ***",
    "*** Bug 168881 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d64905)\npdebuild.jar  for people who would like to try the patch\n\nto set it up please replace pdebuild.jar in org.eclipse.pde.build plugin.\nmake sure you back up the original one.\n\nNote: this patched jar is based on r32x_vM20061206-0800 pdebuilder.",
    "*** Bug 185438 has been marked as a duplicate of this bug. ***",
    "*** Bug 169991 has been marked as a duplicate of this bug. ***",
    "I think that not resolving is dangerous. Instead I would rather see an approach where PDE Build would only complain if the unresolved plug-in was being put on the classpath of a plug-in being compiled. Therefore this would solve this problem here since we are not compiling, and it would also solve the case described in bug 169991."
  ],
  "commentCreationDates": [
    "2005-02-03T17:43:17+01:00",
    "2005-02-25T15:38:24+01:00",
    "2005-03-06T02:00:07+01:00",
    "2005-03-14T15:09:08+01:00",
    "2005-03-16T18:08:15+01:00",
    "2005-04-27T21:33:25+02:00",
    "2005-05-05T20:04:27+02:00",
    "2005-05-21T03:51:05+02:00",
    "2005-05-21T04:37:46+02:00",
    "2005-05-22T00:40:36+02:00",
    "2006-12-06T16:30:21+01:00",
    "2006-12-11T19:30:09+01:00",
    "2007-03-30T15:53:54+02:00",
    "2007-04-22T20:03:51+02:00",
    "2007-04-25T20:22:22+02:00",
    "2007-05-04T03:04:16+02:00",
    "2007-05-04T03:05:32+02:00",
    "2007-05-04T03:08:04+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Unable to find  plug-in: com.ibm.debug.javascript.doc_6.0.0. Please check the error log for  more details.",
      "elements": [
        {
          "method": "org.apache.tools.ant.ProjectHelper.addLocationToBuildException",
          "source": "ProjectHelper.java:539"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.Ant.execute",
          "source": "Ant.java:388"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.CallTarget.execute",
          "source": "CallTarget.java:106"
        },
        {
          "method": "org.apache.tools.ant.UnknownElement.execute",
          "source": "UnknownElement.java:275"
        },
        {
          "method": "org.apache.tools.ant.Task.perform",
          "source": "Task.java:364"
        },
        {
          "method": "org.apache.tools.ant.Target.execute",
          "source": "Target.java:341"
        },
        {
          "method": "org.apache.tools.ant.Target.performTasks",
          "source": "Target.java:369"
        },
        {
          "method": "org.apache.tools.ant.Project.executeTarget",
          "source": "Project.java:1214"
        },
        {
          "method": "org.eclipse.ant.internal.core.ant.InternalAntRunner.run",
          "source": "InternalAntRunner.java:635"
        },
        {
          "method": "org.eclipse.ant.internal.core.ant.InternalAntRunner.run",
          "source": "InternalAntRunner.java:539"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.ant.core.AntRunner.run",
          "source": "AntRunner.java:488"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "84351",
      "date": "2005-02-03T17:43:17+01:00",
      "product": "PDE",
      "component": "Build",
      "severity": "critical"
    }
  ],
  "groupId": "84351",
  "bugId": "84351",
  "date": "2005-02-03T17:43:17+01:00",
  "product": "PDE",
  "component": "Build",
  "severity": "critical"
}