{
  "comments": [
    "If there is an error in an expression embedded the workflow file, such as \n    \u003cexpression value\u003d\"model.eAllContents.unio( {model})\"/\u003e\n(the \"n\" in \"union\" is missing!) then this error is not reported. It just quietly does not work.",
    "currently expressions must be checked inside the respective component, because expressions are passed as strings.\nAdditionally we just can check, if the parser is lucky with the expression. \nAnalyzation needs static type information about the contents of the workfow context. We don\u0027t have that :-(",
    "Checking at runtime is perfectly ok. The problem with the bug I \nsubmitted was that if the runtime check failed, there was no error\nmessage to the developer.\n\nSo it was very hard to fix the bug, because it simply didn\u0027t work and\nno report was given. Seems like the AnalyzerIssues are not reported back\nto the developer.",
    "in generator and checkccomponent the analyuer issues should\nbe reported to the user if there is a problem. These two components\nuse expressions specified in the workflow file.",
    "verify...",
    "Estimated Effort:\n  Verification if this problem is still current: 20 min",
    "ok, I have verified it: If, for example, in the \u003cexpand...\u003e tag of a GeneratorComponent I use a slot name that is not defined (or empty), then\nI get the following message:\n\n2563 ERROR AbstractExpressionsUsingWorkflowComponent - EvaluationException : Couldn\u0027t find type or property \u0027models\u0027\n\t[64,6] on line 1 \u0027models\u0027\n\nIt does not specify which .oaw file or which component or tag it is.\n\nThe same is true if I invoke a non-existing template:\n\n2468 INFO  CompositeComponent - Generator(gen): generating \u0027templates::statemachine::rootds FOR model\u0027 \u003d\u003e directory \u0027src-gen/\u0027\n2515 ERROR AbstractExpressionsUsingWorkflowComponent - EvaluationException : No Definition \u0027templates::statemachine::rootds for statem::StateMachine\u0027 found!\n\t[23,48] on line 1 \u0027EXPAND templates::statemachine::rootds FOR model\u0027\n\nIf I create a syntax error, for example by writing \n\n  \u003cexpand value\u003d\"someTemplate FOREEEE xyz\"\u003e\n\nthen I get an exception stack trace:\n\n0    INFO  WorkflowRunner     - --------------------------------------------------------------------------------------\n297  INFO  WorkflowRunner     - openArchitectureWare 4.2.0, Build 200707312226NGT\n297  INFO  WorkflowRunner     - (c) 2005-2007 openarchitectureware.org and contributors\n297  INFO  WorkflowRunner     - --------------------------------------------------------------------------------------\n297  INFO  WorkflowRunner     - running workflow: example.oaw\n297  INFO  WorkflowRunner     - \nException in thread \"main\" org.openarchitectureware.xtend.parser.ParseException: mismatched input \u0027FOREE\u0027 expecting TEXT on line 1\n\tat org.openarchitectureware.xpand2.parser.XpandParseFacade$3.handleError(XpandParseFacade.java:68)\n\tat org.openarchitectureware.xpand2.parser.XpandParseFacade$2.reportError(XpandParseFacade.java:56)\n\tat org.antlr.runtime.BaseRecognizer.recoverFromMismatchedElement(BaseRecognizer.java:556)\n        ....\n\nIn all those cases I would like to see the .oaw file and the line or the component.",
    "The component does not know in which *.oaw file it has been configured.",
    "Added information about the component (id and type) to the error loggings."
  ],
  "commentCreationDates": [
    "2006-02-25T21:24:37+01:00",
    "2006-02-26T11:39:43+01:00",
    "2006-02-26T11:42:07+01:00",
    "2006-03-30T11:17:29+02:00",
    "2007-07-30T22:49:29+02:00",
    "2007-08-01T08:38:13+02:00",
    "2007-08-01T11:56:06+02:00",
    "2007-08-02T10:40:03+02:00",
    "2007-08-02T11:34:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.openarchitectureware.xtend.parser.ParseException",
      "message": "mismatched input \u0027FOREE\u0027 expecting TEXT on line 1",
      "elements": [
        {
          "method": "org.openarchitectureware.xpand2.parser.XpandParseFacade$3.handleError",
          "source": "XpandParseFacade.java:68"
        },
        {
          "method": "org.openarchitectureware.xpand2.parser.XpandParseFacade$2.reportError",
          "source": "XpandParseFacade.java:56"
        },
        {
          "method": "org.antlr.runtime.BaseRecognizer.recoverFromMismatchedElement",
          "source": "BaseRecognizer.java:556"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "129465",
      "date": "2007-08-01T11:56:06+02:00",
      "product": "GMT",
      "component": "oAW-workflow",
      "severity": "normal"
    }
  ],
  "groupId": "129465",
  "bugId": "129465",
  "date": "2006-02-25T21:24:37+01:00",
  "product": "GMT",
  "component": "oAW-workflow",
  "severity": "normal"
}