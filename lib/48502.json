{
  "comments": [
    "I20031209, and also with jdt.core from HEAD:\n\npublic class Example\n{\n\tpublic Example() {\t}\n\t// \u003c- insert \u0027{\u0027 before comment\n\tpublic static void main(String[] args) { }\n}\n\nAfter inserting the opening brace, the log fills with:\n\nError Dec 11, 2003 17:42:24.253 An internal error occurred during: \"Java AST\ncreation\".\njava.lang.IllegalArgumentException\nat org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:1486)\nat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1779)\nat\norg.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:257)\nat\norg.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:237)\nat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:182)\nat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:80)\nat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:354)\nat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:247)\nat\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.computeAST(SelectionListenerWithASTManager.java:106)\nat\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:116)\nat\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run(SelectionListenerWithASTManager.java:92)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",
    "The bug is in the recovery.\nThe source positions for the initializer are wrong. It ends before it starts!\nTherefore the positions of the DOM/AST initializer are invalid. And this leads\nto the exception seen in the stack trace.\n\nSee:\nIn RecoveredInitializer:\n/*\n * Update the declarationSourceEnd of the corresponding parse node\n */\npublic void updateSourceEndIfNecessary(int braceStart, int braceEnd){\n\tif (this.fieldDeclaration.declarationSourceEnd \u003d\u003d 0) {\n\t\tInitializer initializer \u003d (Initializer)fieldDeclaration;\n\t\tif(parser().rBraceSuccessorStart \u003e\u003d braceEnd) {\n\t\t\tinitializer.declarationSourceEnd \u003d parser().rBraceEnd;\n\t\t\tinitializer.bodyEnd \u003d parser().rBraceStart;\n\t\t} else {\n\t\t\tinitializer.declarationSourceEnd \u003d braceEnd;\n\t\t\tinitializer.bodyEnd  \u003d braceStart - 1;\n\t\t}\n\t\tif(initializer.block !\u003d null) {\n\t\t\tinitializer.block.sourceEnd \u003d initializer.declarationSourceEnd;\n\t\t}\n\t}\n}\n\nThe sender is calling this method with:\nupdateSourceEndIfNecessary(sourceEnd + 1, sourceEnd).\n\nThis means we have a start after the end.\n\nDavid, could you please comment?\n\nThanks.",
    "Eclipse 3.0M7 (XP):\n\npublic class Something\n{\n    public void broken(}\n{}\n\n    public void thereMustSomethingHere()\n    {}\n}\n\nIf I save after the \"{}\"\u0027s after \"broken(}\" (notice that that\u0027s not a right \nparen) then I get:\n\n!ENTRY org.eclipse.core.runtime 4 2 Feb 23, 2004 13:02:55.250\n!MESSAGE An internal error occurred during: \"Java AST creation\".\n!STACK 0\njava.lang.IllegalArgumentException\n\tat org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:1542)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1889)\n\tat \norg.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration\n(ASTConverter.java:357)\n\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations\n(ASTConverter.java:334)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:278)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:142)\n\tat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:965)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartList\nenerGroup.computeAST(SelectionListenerWithASTManager.java:125)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartList\nenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:144)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run\n(SelectionListenerWithASTManager.java:99)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)\n\nIf \"broken(}\" is the last element in the file then this will not occur.",
    "linux gtk+\nVersion: 3.0.0\nBuild id: 200403100800\n\nI\u0027ve seen this a couple times now.  Seems easy to recreate:\n1. format a large file 500+ lines\n2. undo",
    "Looking for a fix for bug 60581, I patch this problem.\nCould you please double-check it?\n\nChange in:\nRecoveredInitializer#updateSourceEndIfNecessary(int, int)\n\nI check that the bodyStart is not greater than the value we want to set for the\ndeclarationSourceEnd and declarationEnd.\n",
    "David, I added regression tests in ASTConverterTest2.",
    "Fix seems good for me\n\nFixed.",
    "Verified in I20040506-0200",
    "Verified in 200405180816"
  ],
  "commentCreationDates": [
    "2003-12-11T16:49:30+01:00",
    "2004-01-05T17:22:15+01:00",
    "2004-02-23T21:22:14+01:00",
    "2004-03-15T18:02:56+01:00",
    "2004-04-30T21:55:33+02:00",
    "2004-04-30T21:58:30+02:00",
    "2004-05-04T11:36:28+02:00",
    "2004-05-07T21:17:42+02:00",
    "2004-05-18T17:15:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.setSourceRange",
          "source": "ASTNode.java:1486"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1779"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration",
          "source": "ASTConverter.java:257"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations",
          "source": "ASTConverter.java:237"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:182"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:80"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:354"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:247"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.computeAST",
          "source": "SelectionListenerWithASTManager.java:106"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java:116"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run",
          "source": "SelectionListenerWithASTManager.java:92"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "48502",
      "date": "2003-12-11T16:49:30+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.setSourceRange",
          "source": "ASTNode.java:1542"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1889"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration",
          "source": "ASTConverter.java:357"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations",
          "source": "ASTConverter.java:334"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:278"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:142"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:965"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.computeAST",
          "source": "SelectionListenerWithASTManager.java:125"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java:144"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run",
          "source": "SelectionListenerWithASTManager.java:99"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "48502",
      "date": "2004-02-23T21:22:14+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "48502",
  "bugId": "48502",
  "date": "2003-12-11T16:49:30+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}