{
  "comments": [
    "v20030115 + HEAD of (jdt.launching, jdt.launching.macosx):\n\nCannot launch from within Eclipse; cannot open JRE pref pag:\n\n\n!ENTRY org.eclipse.ui 4 0 Jan 20, 2003 11:46:07.774\n!MESSAGE null argument:\n!STACK 0\norg.eclipse.core.internal.runtime.AssertionFailedException: null argument:\n        at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:78)\n        at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:66)\n        at org.eclipse.core.runtime.Path.initialize(Path.java:470)\n        at org.eclipse.core.runtime.Path.\u003cinit\u003e(Path.java:98)\n        at \norg.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.getConatinerId(Launchi\nngPlugin.java:132)\n        at \norg.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.vmChanged(Launching\nPlugin.java:157)\n        at \norg.eclipse.jdt.internal.launching.LaunchingPlugin.vmChanged(LaunchingPlugin.java:6\n86)\n        at org.eclipse.jdt.launching.JavaRuntime.fireVMChanged(JavaRuntime.java:1680)\n        at \norg.eclipse.jdt.launching.AbstractVMInstall.setInstallLocation(AbstractVMInstall.java:94)\n        at \norg.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.doCreateVMInstall(Mac\nOSXVMInstallType.java:55)\n        at \norg.eclipse.jdt.launching.AbstractVMInstallType.createVMInstall(AbstractVMInstallType.j\nava:92)\n        at \norg.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.detectInstallLocation(M\nacOSXVMInstallType.java:108)\n        at \norg.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime(JavaRuntime.java:1341)\n        at org.eclipse.jdt.launching.JavaRuntime.detectDefaultVM(JavaRuntime.java:1375)\n        at \norg.eclipse.jdt.launching.JavaRuntime.detectAndSaveVMDefinitions(JavaRuntime.java:\n1442)\n        at \norg.eclipse.jdt.launching.JavaRuntime.initializeVMConfiguration(JavaRuntime.java:1260\n)\n        at org.eclipse.jdt.launching.JavaRuntime.initializeVMTypes(JavaRuntime.java:240)\n        at org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes(JavaRuntime.java:404)\n        at \norg.eclipse.jdt.internal.debug.ui.launcher.VMPreferencePage.createContents(VMPrefere\nncePage.java:162)\n        at \norg.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:209)\n        at \norg.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:963)\n        at org.eclipse.jface.preference.PreferenceDialog$7.run(PreferenceDialog.java:456)\n        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)\n        at \norg.eclipse.jface.preference.PreferenceDialog$6.widgetSelected(PreferenceDialog.java:\n449)\n        at \norg.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:192)\n        at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:187)\n        at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:327)\n        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)\n        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)\n        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1137)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1027)\n        at org.eclipse.jface.window.Window.runEventLoop(Window.java:561)\n        at org.eclipse.jface.window.Window.open(Window.java:541)\n        at \norg.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47)\n        at org.eclipse.jface.action.Action.runWithEvent(Action.java:804)\n        at \norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributio\nnItem.java:422)\n        at \norg.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionIte\nm.java:374)\n        at \norg.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:36\n8)\n        at \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContri\nbutionItem.java:69)\n        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)\n        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634)\n        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1252)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1009)\n        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)\n        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)\n        at \norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)\n        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n        at org.eclipse.core.launcher.Main.run(Main.java:703)\n        at org.eclipse.core.launcher.Main.main(Main.java:539)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at apple.launcher.LaunchRunner.run(LaunchRunner.java:88)\n        at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)\n        at \napple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)",
    "[BTW: there seems to be a typo in \"VMChanges.getConatinerId\"]",
    "From the trace, I gather that you are creating new VM installs at startup. \nAlthough launching should protect against this bug, I also believe there is a \nbetter way for you to create VM installs (I admit this is not well documented).\n\nThe launching plug-in fires VM change events as properties of VM installs \nchange. You are in the process of creating a VM, which does not have all of its \nrequired attributes set yet (in this case, it does not yet have a name). To \navoid this \"chicken and egg problem\" (i.e. firing change events for a VM that \nhas not been completely created yet), you could use a VM standin.\n\nThat is, create an instance of a VMStandin, set its properties, and then \ncall \"convertToRealVM\". This will ensure that change events are not fired, and \nthat an \"add\" event is fired for the VM after all of its attributes have been \nset.\n\n",
    "Fixed. Added null checks for #getContainerId (and fixed typo).",
    "Please verify, Darin S.",
    "Verified the code.",
    "Hmmm, thanks for you suggestions, but they won\u0027t work.\nNow I\u0027m getting StackOverflows.\n\nSo let me recap, here is  what I\u0027m trying to achieve:\n\nI want to detect all available JVMs on MacOS X.\nFor this I\u0027m locating all the \"java.io.File\"s in \ndetectInstallLocation().\nSince there is no way to add more than one installLocation,\nI have to call createVMInstall(id) for every JVM I find.\ncreateVMInstall(id) calls doCreateVMInstall(id) and then adds\nthe newly created IVMInstall to the list of VMs.\n\nin doCreateVMInstall(id) I\u0027ve created a MacOSXVMInstall\nand initialized various fields. Since this fires property change events,\nI\u0027m now creating VMStandins. At the end of doCreateVMInstall I call\nconvertToRealVM and return the real VM.\n\nThis results in a stackoverflow because convertToRealVM calls again \ndoCreateVMInstall.\n\nIf I\u0027m not calling convertToRealVM in doCreateVMInstall I\u0027m crashing\nwith a NPE if I try to set the default VM later in detectInstallLocation.\n\nSo what should I do?\n\n(BTW: everything worked fine last week, and I didn\u0027t change my code) \n\nHere is what I would love to do:\nJust implement public File detectInstallLocation() like this:\n\npublic File detectInstallLocation() {\n\tFile[] allLocations;\n\t// determine all locations\n allLocations\u003d ....\n\n\tfor (int i\u003d 0; i \u003c allLocations; i++) {\n\t\tvm\u003d ... // create a VMStandin or a VMInstall from file\n\t\tif (vm is default vm)\n\t\t\tsetDefaultVM(vm);\n\t\telse\n\t\t\taddVM(vm);\n\t}\nreturn null;\n}\n",
    "We changed our code to handle VM property changes more effrectively (i.e. do \nnot re-build when a source attachment changes, etc). It is unfortunate that we \nbroke you.\n\nBut why do you call \"createVMInstall(id)\". Why not just create a VMStandin with \nVMStanding(IVMInstallType, Id) (where Id is the Id that it will have). Then, \ndoCreateVMInstall should only be called once by #convertToRealVM?\n\nThe abstract impl of createVMInstall checks for duplicate IDs? do you?\n\npublic IVMInstall createVMInstall(String id) throws IllegalArgumentException {\n\tif (findVMInstall(id) !\u003d null) {\n\t\tString format\u003d LaunchingMessages.getString\n(\"vmInstallType.duplicateVM\"); //$NON-NLS-1$\n\t\tthrow new IllegalArgumentException(MessageFormat.format(format, \nnew String[] { id }));\n\t}\n\tIVMInstall vm\u003d doCreateVMInstall(id);\n\tfVMs.add(vm);\n\treturn vm;\n}",
    "You asked:\n     But why do you call \"createVMInstall(id)\".\n\nBecause I see no other way to add the VMStandins to the system.\nOr do I miss something? \n\n",
    "Just use the constructor of VMStandin to create. And then the \"convert\" call \nwhich will add it or update it (dynamically, depending on whether it already \nexists)\n\nVMStandin standin \u003d new VMStandin(type, id);\n...\nstandin.convertToRealVM();\n\n...\n\n(Or do I misunderstand?)",
    "Aha, that\u0027s better! (I was not assuming that convertToRealVM() does not only return aVM but adds one).The only problem is now setDefaultVMInstall. With this code in detectInstallLocation:\tIVMInstall vm\u003d vm.convertToRealVM();\tif (vm is default) {\t\ttry {\t\t\tJavaRuntime.setDefaultVMInstall(vm, null);",
    "[oops, ignore my last comment. I was using the wrong tool...]\n\nAha, now I understand... \nI was not assuming that convertToRealVM() does not only return a VM but adds one too.\n\nThe only problem is now setDefaultVMInstall.\nWith this code in detectInstallLocation:\n\n\tIVMInstall vm\u003d vm.convertToRealVM();\n\tif (vm is default) \n\t\t\tJavaRuntime.setDefaultVMInstall(vm, null);\n\nI get a NPE here:\n\nThread [main] (Suspended)\n\tLaunchingPlugin$VMChanges.getContainerId(IVMInstall) line: 137\n\tLaunchingPlugin$VMChanges.defaultVMInstallChanged(IVMInstall, IVMInstall) line: \n152\n\tLaunchingPlugin.defaultVMInstallChanged(IVMInstall, IVMInstall) line: 682\n\tJavaRuntime.notifyDefaultVMChanged(IVMInstall, IVMInstall) line: 1665\n\tJavaRuntime.setDefaultVMInstall(IVMInstall, IProgressMonitor, boolean) line: 335\n\tJavaRuntime.setDefaultVMInstall(IVMInstall, IProgressMonitor) line: 307\n\tMacOSXVMInstallType.detectInstallLocation() line: 115\n\tJavaRuntime.detectEclipseRuntime() line: 1341\n\tJavaRuntime.detectDefaultVM() line: 1375\n\tJavaRuntime.detectAndSaveVMDefinitions() line: 1442\n\tJavaRuntime.initializeVMConfiguration() line: 1260\n\tJavaRuntime.initializeVMTypes() line: 240\n\tJavaRuntime.getVMInstallTypes() line: 404\n\tVMPreferencePage.createContents(Composite) line: 162\n\tVMPreferencePage(PreferencePage).createControl(Composite) line: 209\n\tWorkbenchPreferenceDialog(PreferenceDialog).showPage(IPreferenceNode) line: 963\n\tPreferenceDialog$7.run() line: 456\n\tBusyIndicator.showWhile(Display, Runnable) line: 65\n\tPreferenceDialog$6.widgetSelected(SelectionEvent) line: 449\n\tOpenStrategy.firePostSelectionEvent(SelectionEvent) line: 192\n\tOpenStrategy.access$4(OpenStrategy, SelectionEvent) line: 187\n\tOpenStrategy$3.run() line: 327\n\tRunnableLock.run() line: 31\n\tUISynchronizer(Synchronizer).runAsyncMessages() line: 94\n\tDisplay.runAsyncMessages() line: 1137\n\tDisplay.readAndDispatch() line: 1027\n\tWorkbenchPreferenceDialog(Window).runEventLoop(Shell) line: 561\n\tWorkbenchPreferenceDialog(Window).open() line: 541\n\tOpenPreferencesAction.run() line: 47\n\tOpenPreferencesAction(Action).runWithEvent(Event) line: 804\n\tActionContributionItem.handleWidgetSelection(Event) line: 422\n\tActionContributionItem.handleWidgetEvent(Event) line: 374\n\tActionContributionItem.access$0(ActionContributionItem, Event) line: 368\n\tActionContributionItem$ActionListener.handleEvent(Event) line: 69\n\tEventTable.sendEvent(Event) line: 77\n\tMenuItem(Widget).notifyListeners(int, Event) line: 634\n\tDisplay.runDeferredEvents() line: 1252\n\tDisplay.readAndDispatch() line: 1009\n\tWorkbench.runEventLoop() line: 1467\n\tWorkbench.run(Object) line: 1450\n\tInternalBootLoader.run(String, URL, String, String[], Runnable) line: 845\n\tBootLoader.run(String, URL, String, String[], Runnable) line: 462\n\tMethod.invoke(Object, Object[]) line: not available [native method]\n\tMain.basicRun(String[]) line: 247\n\tMain.run(String[]) line: 703\n\tMain.main(String[]) line: 539\n\tMethod.invoke(Object, Object[]) line: not available [native method]\n\tLaunchPList(LaunchRunner).run() line: 88\n\tLaunchPList(LaunchRunner).callMain() line: 50\n\tJavaApplicationLauncher.launch(int, int, boolean) line: 52\n\n\nThe problem is that in LaunchingPlugin$VMChanges.defaultVMInstallChanged\n\u0027previous\u0027 is null and VMChanges.getContainerId calls getName without checking.\n\n[BTW: another case of fOldDefaultConatinerId in VMChanges.LaunchingPlugin]\n",
    "That has been fixed in HEAD. It was the original reason for this bug report.",
    "OOPS. I see - a different NPE in the same method.",
    "Fixed again.. and released to HEAD. (We\u0027ll get this yet).",
    "Please verify, Darin S.",
    "\"Its getting better all the time...\"\n\nNo more crashing, and I can set the default VM!\nHowever, now an alert appears twice (for every VM?),\nbut it disappears so fast that I\u0027m not able to read it...",
    "Hey I didn\u0027t even get a chance to check it out that time...isn\u0027t it your \nbedtime Andre :-)",
    "And you? Shouldn\u0027t you observe Martin Luther King day :-?",
    "Wonderful. I missed working on this bug.\n\nWhat do you mean by an \"alert\"? Do you mean a progress dialog?",
    "A progress dialog was being shown with each VM change. We added support to show \nprogress as projects are re-built due to VM changes. However, the \"build\" was \neven done for zero affected projects - we like to let the client know what our \ncode is doing :-)\n\nI added a simple \"isEmpty\" check to LaunchingPlugin.buildProjects(Set).\n\nI hope this fixes the problem. But, I\u0027m not even going to mark this bug(ger) as \nfixed. I will drop the severity, as there are no longer any crashes.",
    "I couldn\u0027t find out whether the dialogs are alerts or progress monitors.\nHowever, they are gone with your latest changes.\n\nCool, I\u0027m happy now!\nThanks everbody for your help.",
    "Marking as fixed.",
    "\u0026 verified "
  ],
  "commentCreationDates": [
    "2003-01-20T10:28:12+01:00",
    "2003-01-20T10:29:12+01:00",
    "2003-01-20T14:40:53+01:00",
    "2003-01-20T14:56:38+01:00",
    "2003-01-20T14:56:49+01:00",
    "2003-01-20T15:52:52+01:00",
    "2003-01-20T17:54:09+01:00",
    "2003-01-20T18:27:07+01:00",
    "2003-01-20T18:53:22+01:00",
    "2003-01-20T19:17:00+01:00",
    "2003-01-20T21:08:42+01:00",
    "2003-01-20T21:10:51+01:00",
    "2003-01-20T21:55:47+01:00",
    "2003-01-20T21:58:59+01:00",
    "2003-01-20T22:00:50+01:00",
    "2003-01-20T22:01:05+01:00",
    "2003-01-20T22:46:57+01:00",
    "2003-01-20T22:48:56+01:00",
    "2003-01-20T22:52:57+01:00",
    "2003-01-21T00:57:14+01:00",
    "2003-01-21T01:34:04+01:00",
    "2003-01-21T10:27:25+01:00",
    "2003-01-21T13:51:17+01:00",
    "2003-01-21T13:51:55+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.runtime.AssertionFailedException",
      "message": "null argument:",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isNotNull",
          "source": "Assert.java:78"
        },
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isNotNull",
          "source": "Assert.java:66"
        },
        {
          "method": "org.eclipse.core.runtime.Path.initialize",
          "source": "Path.java:470"
        },
        {
          "method": "org.eclipse.core.runtime.Path.\u003cinit\u003e",
          "source": "Path.java:98"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.getConatinerId",
          "source": "Launchi ngPlugin.java:132"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.vmChanged",
          "source": "Launching Plugin.java:157"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.LaunchingPlugin.vmChanged",
          "source": "LaunchingPlugin.java:6 86"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.fireVMChanged",
          "source": "JavaRuntime.java:1680"
        },
        {
          "method": "org.eclipse.jdt.launching.AbstractVMInstall.setInstallLocation",
          "source": "AbstractVMInstall.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.doCreateVMInstall",
          "source": "Mac OSXVMInstallType.java:55"
        },
        {
          "method": "org.eclipse.jdt.launching.AbstractVMInstallType.createVMInstall",
          "source": "AbstractVMInstallType.j ava:92"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.detectInstallLocation",
          "source": "M acOSXVMInstallType.java:108"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime",
          "source": "JavaRuntime.java:1341"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.detectDefaultVM",
          "source": "JavaRuntime.java:1375"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.detectAndSaveVMDefinitions",
          "source": "JavaRuntime.java: 1442"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.initializeVMConfiguration",
          "source": "JavaRuntime.java:1260 "
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.initializeVMTypes",
          "source": "JavaRuntime.java:240"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes",
          "source": "JavaRuntime.java:404"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.launcher.VMPreferencePage.createContents",
          "source": "VMPrefere ncePage.java:162"
        },
        {
          "method": "org.eclipse.jface.preference.PreferencePage.createControl",
          "source": "PreferencePage.java:209"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog.showPage",
          "source": "PreferenceDialog.java:963"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog$7.run",
          "source": "PreferenceDialog.java:456"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:65"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog$6.widgetSelected",
          "source": "PreferenceDialog.java: 449"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent",
          "source": "OpenStrategy.java:192"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$4",
          "source": "OpenStrategy.java:187"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$3.run",
          "source": "OpenStrategy.java:327"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:31"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1137"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1027"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:561"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:541"
        },
        {
          "method": "org.eclipse.ui.internal.OpenPreferencesAction.run",
          "source": "OpenPreferencesAction.java:47"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:804"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributio nItem.java:422"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent",
          "source": "ActionContributionIte m.java:374"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$0",
          "source": "ActionContributionItem.java:36 8"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContri butionItem.java:69"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:77"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java:634"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:1252"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1009"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1467"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1450"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "apple.launcher.LaunchRunner.run",
          "source": "LaunchRunner.java:88"
        },
        {
          "method": "apple.launcher.LaunchRunner.callMain",
          "source": "LaunchRunner.java:50"
        },
        {
          "method": "apple.launcher.JavaApplicationLauncher.launch",
          "source": "JavaApplicationLauncher.java:52"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "29780",
      "date": "2003-01-20T10:28:12+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "29780",
  "bugId": "29780",
  "date": "2003-01-20T10:28:12+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}