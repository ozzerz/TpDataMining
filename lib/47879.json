{
  "comments": [
    "This is the first excerpt today from my .log file (in\nC:\\Program Files\\eclipse\\workspace\\.metadata\\.log to be precise)\n\nThere are a lot of more problems today too.\n\n!SESSION Dec 02, 2003 09:53:58.70 ----------------------------------------------\njava.version\u003d1.4.2_02\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -os win32 -ws win32 -arch x86 -Xms128m -Xmx512m -\ninstall file:C:/Program Files/eclipse/\n!ENTRY org.eclipse.ant.core 4 1 Dec 02, 2003 09:53:58.70\n!MESSAGE BUILD FAILED\n!STACK 0\njava.lang.OutOfMemoryError\n!ENTRY org.eclipse.ant.core 4 1 !ENTRY org.eclipse.ui.workbench 4 2 Dec 02, \n2003 10:14:44.07\n!MESSAGE Problems occurred when invoking code from plug-\nin: \"org.eclipse.ui.workbench\".\n!STACK 0\njava.lang.NullPointerException\n\tat java.lang.System.arraycopy(Native Method)\n\tat org.eclipse.swt.widgets.Table.getItems(Table.java:859)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefresh\n(TableViewer.java:448)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefresh\n(TableViewer.java:431)",
    "Do you have any idea which steps led to this exception occurring?\n",
    "OutOfMemoryError exceptions occur because the default amount of virtual memory \nallocated by the java VM is typically not enough for an all-out, intensive \neclipse session. When an OutOfMemory error happens, random additional \nerrors/exceptions can occur (like NullPointer inside a native). In this case, \nlooking at Table.getItems, the most likely thing that happened is that this \nline of code failed:\n\tTableItem [] result \u003d new TableItem [count];\nAnd this is something that can\u0027t really be protected against, other than \ncatching the error way up in eclipse somewhere, and getting the user to help \nget more memory somehow.\n\nEclipse is not (currently) very good at helping the user figure out what to do \nin this situation. Sometimes, an OutOfMemory dialog is brought up, and \nsometimes, an OutOfMemory error is just silently logged and some other strange \nerror/exception halts the session.\n\nSearching for \"OutOfMemory\" in the Bugzilla database, it looks like there are \nseveral open bug reports requesting that eclipse handle this better somehow:\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d22026\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d23633\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d33972\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d30807\n\nPlease read these bug reports to see how to increase the virtual memory in \nyour java vm when running eclipse. I will mark this bug report as a duplicate \nof those others. Feel free to add a comment to any of those bug reports if you \nwould like to.\n\n*** This bug has been marked as a duplicate of 33972 ***"
  ],
  "commentCreationDates": [
    "2003-12-02T12:58:53+01:00",
    "2003-12-02T14:47:25+01:00",
    "2003-12-02T17:28:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.lang.System.arraycopy",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.getItems",
          "source": "Table.java:859"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefresh",
          "source": "TableViewer.java:448"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefresh",
          "source": "TableViewer.java:431"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "47879",
      "duplicateId": "33972",
      "date": "2003-12-02T12:58:53+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "33972",
  "bugId": "47879",
  "duplicateId": "33972",
  "date": "2003-12-02T12:58:53+01:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}