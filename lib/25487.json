{
  "comments": [
    "I\u0027m using Version: 2.0\nBuild id: 200210181211\n\n\nI have a TextCellEditor in a TableViewer that have a ICellEditorValidator that return an \nerror message if the input value is \"Joseph\"\n\n    nameEditor.setValidator(new ICellEditorValidator()\n    {\n      public String isValid(Object value)\n      {\n\tif(value!\u003dnull)\n\t  if(value.equals(\"Joseph\"))\n\t    return \"Don\u0027t call me joseph\";\n\n\treturn null;\n      }\n    });\n\nso when i edit the cell and enter Joseph and press Enter the cell become empty and the \nfocus is out of it ,, then if i click the cell again to edit it , the program crashes in\nTextCellEditor class in its doSetValue method:\n\nprotected void doSetValue(Object value) {\n\tAssert.isTrue(text !\u003d null \u0026\u0026 (value instanceof String));\n..................\n}\nguess because the value become null which is not an instance of String\n\nhere is the assertion exception\n\n*** Stack trace of contained exception ***\n\norg.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: \n\n\tat org.eclipse.jface.util.Assert.isTrue(Assert.java:162)\n\n\tat org.eclipse.jface.util.Assert.isTrue(Assert.java:148)\n\n\tat org.eclipse.jface.viewers.TextCellEditor.doSetValue(TextCellEditor.java:157)\n\n\tat org.eclipse.jface.viewers.CellEditor.setValue(CellEditor.java:653)\n\n\tat org.eclipse.jface.viewers.TableViewerImpl.activateCellEditor\n(TableViewerImpl.java:47)\n\n\tat org.eclipse.jface.viewers.TableViewerImpl.activateCellEditor\n(TableViewerImpl.java:100)\n\n\tat org.eclipse.jface.viewers.TableViewerImpl.access$1(TableViewerImpl.java:73)\n\n\tat org.eclipse.jface.viewers.TableViewerImpl$4.run(TableViewerImpl.java:249)\n\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)\n\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)\n\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1599)\n\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1372)\n\n\tat com.holosofx.eclipse.swt.example1.EmpForm1.\u003cinit\u003e(EmpForm1.java:164)\n\n\tat com.holosofx.eclipse.swt.example1.EmpForm1.main(EmpForm1.java:1356)\n\nException in thread \"main\"",
    "I\u0027m sorry..\nit was a programing problem not a bug\nit\u0027s just the ICellModifier.modify() was with value \u003d null\nso i set null to the model , and the model fires that the value changed , so i updated the \ntable that\u0027s why the cell become empty..\nand when i tried to edit it again the ICellModifier.getValue() returned null as it was \nstored previously in the model , and null is not instanceof Text that\u0027s why \nTextCellEditor.doSetValue crashed....\nBut i think it\u0027s better that TextCellEditor.doSetValue should not break if it\u0027s null and \nconsider it as a String with value \u003d null",
    "While I agree in principle that we could check for null and then treat it like \nan empty string this would go against the API which states the method is \nexpecting a text string, not null.  The method is behaving correctly."
  ],
  "commentCreationDates": [
    "2002-10-29T14:15:48+01:00",
    "2002-10-30T07:48:32+01:00",
    "2002-11-22T21:31:37+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
      "message": "Assertion failed:",
      "elements": [
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:162"
        },
        {
          "method": "org.eclipse.jface.util.Assert.isTrue",
          "source": "Assert.java:148"
        },
        {
          "method": "org.eclipse.jface.viewers.TextCellEditor.doSetValue",
          "source": "TextCellEditor.java:157"
        },
        {
          "method": "org.eclipse.jface.viewers.CellEditor.setValue",
          "source": "CellEditor.java:653"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewerImpl.activateCellEditor",
          "source": "TableViewerImpl.java:47"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewerImpl.activateCellEditor",
          "source": "TableViewerImpl.java:100"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewerImpl.access$1",
          "source": "TableViewerImpl.java:73"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewerImpl$4.run",
          "source": "TableViewerImpl.java:249"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:31"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1599"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1372"
        },
        {
          "method": "com.holosofx.eclipse.swt.example1.EmpForm1.\u003cinit\u003e",
          "source": "EmpForm1.java:164"
        },
        {
          "method": "com.holosofx.eclipse.swt.example1.EmpForm1.main",
          "source": "EmpForm1.java:1356"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "25487",
      "date": "2002-10-29T14:15:48+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "25487",
  "bugId": "25487",
  "date": "2002-10-29T14:15:48+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "enhancement"
}