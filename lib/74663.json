{
  "comments": [
    "build I20040921-2000\n\n- UI and UI tests loaded from repository\n- ran one of our test suites, but with the launch config changed to use the PDE\nTarget\u0027s plugins instead of the workspace\u0027s, except for org.eclipse.ui.tests\n- got the following in the console:\n\"Error:  \" java.lang.IllegalArgumentException: No ClassLoader found for\ntestplugin: org.eclipse.ui.tests\n\nI assume this was due to me missing a prerequisite in the set of chosen plugins: \norg.eclipse.test.performance.\n\nHowever, there was nothing in the target workspace\u0027s log, nor in the PDE\nmetadata area for the config, to help me track this down further.",
    "Note: I sometimes run tests in this way in order to test against the build\nrather than the code loaded from CVS.\n\nAdding org.eclipse.test.performance to the set of plugins fixed up the problem.\n",
    "At startup, all we (the test runner) know is that the plugin containing the \ntests is not found in the registry.  We can\u0027t provide any analysis, so all we \ncan do here is improve the message to tell you that \"the plugin containing the \ntests is either misssing or has been disabled due to a missing dependency.\"\n\nIncidentally, I hope you used the \"Validate Plug-in Set\" button on the Plugins \ntab of the launcher to figure out that org.eclipse.test.performance was \nmissing ;-)\n\n",
    "Should this be moved to runtime, then?  I was just wondering if there was\nsomewhere else I should look for a log file.\n\nThe Validate button is nice.  But since the set of plugins in a launch config\ncan change by adding/removing projects from the workspace, would it not be\nbetter to check when launching?\n",
    "Upon re-reading your report, I am surprised that you did not find anything in \nthe log.  I think, once upon a time, disabled plug-ins used to be reported in \nthe log.  In any event, I will improve the message on the PDE side, but this \nis really a runtime issue, since by the time the PDE/JUnit applications gets \ninvoked, the registry had been built.",
    "\u003eBut since the set of plugins in a launch configcan change by adding/removing \n\u003eprojects from the workspace, would it not be better to check when launching?\n\nThe button will just give you a preview of any imminent disaster.  It is a \nrelatively costly operation and thus is only done on demand.\n\nIf we were to do a gratuitous check at the time of the launch, it will be \nduplicating what the runtime is doing.\n",
    "As long as the log is visible ;-).",
    "We only check and log unresolved plug-ins if in debug mode (see bug 62118).",
    "And since the instance location does not get set (we fail too early), the log\nwould be in the configuration area (inside org.eclipse.pde.core\u0027s state location).",
    "I was running it under the debugger, and did not see anything in the PDE core\nmetadata area either.\n",
    "Sorry, I meant running with -debug or tracing enabled (and this is an exclusive or).",
    "OK, I added -debug to the command line.\nThe log now (in the workspace dir, not the PDE metadata area) has:\n\n!SESSION Sep 23, 2004 14:58:26.866 ---------------------------------------------\neclipse.buildId\u003dunknown\njava.fullversion\u003dJ2RE 1.4.2 IBM Windows 32 build cn142-20040917 (JIT disabled)\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -version 3 -application\norg.eclipse.pde.junit.runtime.uitestapplication -pdelaunch -port 3337\n-testpluginname org.eclipse.ui.tests -classnames\norg.eclipse.ui.tests.multipageeditor.MultiPageEditorTestSuite\n\n!ENTRY org.eclipse.osgi Sep 23, 2004 14:58:26.876\n!MESSAGE Bundle update@/d:/eclipse-new/plugins/org.eclipse.ui.tests/ [88] was\nnot resolved.\n!SUBENTRY 1 org.eclipse.osgi Sep 23, 2004 14:58:26.876\n!MESSAGE Missing required bundle org.eclipse.test.performance_0.0.0.\n\n\nSo this is more helpful.  However, I thought PDE tried to tell the user about\nany log file created.  It didn\u0027t in this case.  Or is that only if there\u0027s a\ncertain exit code?  If so, then it looks like uitestapplication is not returning\nthe right error code.\n\n\n",
    "The PDE launcher listener prompts you to see the log (if available) when the \nexit code of the launch is abnormal.\n\nuitestapplication is certainly guilty of not returning an appropriate exit \ncode, but even if it did, the runtime, as I just read, does not log \nunsatisfied dependencies unless in -debug mode, so the log file would not be \nthere in normal circumstances, and PDE could not let you know anything.",
    "That means you are going to move this bug to your bucket and change the\napplications provided by PDE Junit to return a non-zero exit code when no tests\nare run? \u003cg\u003e",
    "I\u0027ll move to my bucket, but I don\u0027t know how Nick would be better off in any \nway, if he doesn\u0027t use -debug and hence no log would be found.",
    "Maybe your error message could suggest running with -debug \u003cg\u003e.\n",
    "With what I know now, your idea from comment 3 to do automatic validation upon \nlaunching (as an option perhaps) is starting to look a lot more attractive now.",
    "Regardless you add validation to the launch configuration UI, I think that\ninstead of just returning an arbitrary exit code, org.eclipse.pde.junit.runtime\nshould throw an exception to the caller (instead of writing to the console. \n\nThen Core could take care of logging any unresolved bundles (if it has not done\nthat yet) in case that happens.",
    "*** Bug 75648 has been marked as a duplicate of this bug. ***",
    "Rafael, although it\u0027s along the same theme, I don\u0027t think bug 75618 is a \nduplicate of this bug, since whatever I do here will not help Markus.\n\nThe problem is that the runtime does not log error messages as to why plugins \nare disabled unless you pass the -debug flag.  Errors of such nature are \nserious enough to be logged by the runtime whether or not you\u0027re not in debug \nmode; otherwise, the user (includig this seasoned Swiss user) is left puzzled \nas to why his plugins are not showing up.\n\nIn his case, the runtime Eclipse came up (i.e. the launch did not abort with \nsome error code). He is therefore left wondering why oh why his plugin did not \nshow up.\n\nI therefore suggest the runtime team reexamine their position on when to log \nunsatisfied dependencies.",
    "I would have to agree.  Judging by posts in the eclipse.platform.rcp newsgroup,\nalmost everybody hits this problem when first trying to deploy their RCP app\n(they generally have less problems when running from PDE).  \n\nWhile Wassimm\u0027s much-anticipated RCP app deployment wizard will help with this\n(not to mention the Validate Plugins button in the PDE launcher), it would be\nnice if runtime was more self-explanatory when something went wrong.  \n\nIf the cost of doing the dependency analysis is expensive, would it be possible\nto just set a flag if any plug-ins get disabled due to unresolved prerequisites,\nand then only do the full dump if the flag is set?\n",
    "I reopened bug 75618.",
    "Wassim, when I launch an Eclipse Application, I am getting any problems with\ndependencies dumped to the log even though I don\u0027t have -debug on the command\nline.  For example, if I uncheck org.eclipse.jface from the browser example\u0027s\nlaunch config, I get:\n\n!SESSION Oct 05, 2004 14:12:49.527 ---------------------------------------------\neclipse.buildId\u003dunknown\njava.fullversion\u003dJ2RE 1.4.2 IBM J9 2.2 Windows 2000 x86-32 j9n142-20040917 (JIT\nenabled)\nJ9VM - 20040916_0908_lHdSMR\nJIT  - r7_level20040915_1801\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -product org.eclipse.ui.examples.rcp.browser.product\n-pdelaunch -url d:\\web\\eclipsecon home.htm \n\n!ENTRY org.eclipse.core.runtime Oct 05, 2004 14:12:49.537\n!MESSAGE Product org.eclipse.ui.examples.rcp.browser.product could not be found.\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.557\n!MESSAGE Application error\n!STACK 1\njava.lang.RuntimeException: No application id has been found.\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:313)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.567\n!MESSAGE Bundle initial@reference:file:d:/eclipse-new/plugins/org.eclipse.ui/\n[6] was not resolved.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.567\n!MESSAGE Missing required bundle org.eclipse.jface_0.0.0.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.567\n!MESSAGE Missing required bundle org.eclipse.ui.workbench_0.0.0.\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.577\n!MESSAGE Bundle\ninitial@reference:file:d:/eclipse-new/plugins/org.eclipse.ui.examples.rcp.browser/\n[7] was not resolved.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.597\n!MESSAGE Missing required bundle org.eclipse.ui_0.0.0.\n\n!ENTRY org.eclipse.osgi Oct 05, 2004 14:12:49.597\n!MESSAGE Bundle\ninitial@reference:file:d:/eclipse-new/plugins/org.eclipse.ui.workbench/ [8] was\nnot resolved.\n!SUBENTRY 1 org.eclipse.osgi Oct 05, 2004 14:12:49.597\n!MESSAGE Missing required bundle org.eclipse.jface_0.0.0.\n\n\nHow is this happening?  Does -pdelaunch imply -debug?\n",
    "Interesting.  You have to ask the runtime guys about that.\n\n-pdelaunch is unrelated though.  the -pdelaunch arg is an internal arg only \nused by PDE to distinguish between a dev app and a runtime app.  It affects \nthe way we read the target platform.",
    "Rafael, can you comment on comment #22?",
    "Are you sure you haven\u0027t enabled tracing in the launch configuration?",
    "Yes.  Tracing is not on.\n",
    "Ok, this goes back to the point I made before (comment 17). If something really\nbad happens (the application cannot start, or exits with an exception), we log\nany unresolved bundles (bug 63858).",
    "OK, thanks, that explains it.  I actually get the same behaviour when running a\ndeployed example (not via PDE).\n",
    "\u003eI actually get the same behaviour when running adeployed example (not via \n\u003ePDE).\nMission accomplished for PDE :-)\n",
    "PDE now gives you the option (a checkbox) on the Plugins tab of the launch \nconfig to do an automatic plugin dependency analysis prior to launching."
  ],
  "commentCreationDates": [
    "2004-09-22T20:09:30+02:00",
    "2004-09-22T20:12:46+02:00",
    "2004-09-23T05:27:04+02:00",
    "2004-09-23T15:46:21+02:00",
    "2004-09-23T15:50:42+02:00",
    "2004-09-23T16:04:53+02:00",
    "2004-09-23T16:12:45+02:00",
    "2004-09-23T16:17:12+02:00",
    "2004-09-23T16:22:56+02:00",
    "2004-09-23T16:49:20+02:00",
    "2004-09-23T17:42:40+02:00",
    "2004-09-23T21:10:59+02:00",
    "2004-09-23T21:32:28+02:00",
    "2004-09-23T21:50:02+02:00",
    "2004-09-23T21:52:41+02:00",
    "2004-09-23T22:00:28+02:00",
    "2004-09-23T22:05:07+02:00",
    "2004-09-23T22:06:07+02:00",
    "2004-10-05T17:36:38+02:00",
    "2004-10-05T19:34:40+02:00",
    "2004-10-05T19:46:52+02:00",
    "2004-10-05T20:07:13+02:00",
    "2004-10-05T20:28:06+02:00",
    "2004-10-05T22:24:24+02:00",
    "2004-10-05T22:40:36+02:00",
    "2004-10-05T22:42:35+02:00",
    "2004-10-05T22:43:23+02:00",
    "2004-10-05T22:49:08+02:00",
    "2004-10-05T23:09:10+02:00",
    "2004-10-05T23:11:41+02:00",
    "2005-10-30T06:11:51+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "No application id has been found.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:313"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 22,
      "bugId": "74663",
      "date": "2004-10-05T20:28:06+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "74663",
  "bugId": "74663",
  "date": "2004-09-22T20:09:30+02:00",
  "product": "PDE",
  "component": "UI",
  "severity": "normal"
}