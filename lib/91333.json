{
  "comments": [
    "Run a generic server (JBoss in my case) once. Then edit the created launcher by\nstoring it in a shared file. From that moment on, an internal error is reported\nwhen starting the server without the launcher - from the server view.\n\n\njava.lang.IllegalArgumentException: Attempted to beginRule:\nMultiRule[L/jpi-jboss-iv-conf/jboss/eclipse-launchers/JBoss 4.0\n(Generic).launch], does not match outer scope rule: Server scheduling rule for\nJBoss 4.0 (Generic)\n\tat org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:58)\n\tat org.eclipse.core.internal.jobs.ThreadJob.illegalPush(ThreadJob.java:106)\n\tat org.eclipse.core.internal.jobs.ThreadJob.push(ThreadJob.java:200)\n\tat org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:80)\n\tat org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:186)\n\tat org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:96)\n\tat\norg.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1657)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1697)\n\tat\norg.eclipse.debug.internal.core.LaunchConfigurationWorkingCopy.doSave(LaunchConfigurationWorkingCopy.java:171)\n\tat\norg.eclipse.wst.server.core.internal.Server.getLaunchConfiguration(Server.java:1188)\n\tat org.eclipse.wst.server.core.internal.Server.start(Server.java:1230)\n\tat org.eclipse.wst.server.core.internal.Server.synchronousStart(Server.java:1458)\n\tat org.eclipse.wst.server.ui.internal.StartServerJob.run(StartServerJob.java:43)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)",
    "Reproduced myself on 3.1M6. Tried similar code on 3.0 and could not reproduce.\n\nThis looks like an Eclipse bug, so I\u0027m transferring to the Platform debug \ncomponent. The code that\u0027s having the problem is as follows:\n\n  launchConfigs \u003d launchManager.getLaunchConfigurations(launchConfigType);\n\n  // find a particular launch config \"i\"\n\n  ILaunchConfigurationWorkingCopy wc \u003d launchConfigs[i].getWorkingCopy();\n\n  // make changes to wc\n\n  if (wc.isDirty())\n     return wc.doSave();",
    "Tim, it looks like the rule used to schedule the starting of the server is \nconflicting with the rule used to modify a shared launch config. What sort of \nrule is used on the server start job? The rule on the launch config is that \nto \"modify/create\" a file and perform a \"validate edit\" edit on the file.",
    "Hi Darin,\n\nI\u0027ve pasted the Server scheduling rule below. This rule is only used to make\nsure that two of my jobs don\u0027t run on the same server at the same time. IServer\nis one of my API interfaces, and it does not derive from IFile and shouldn\u0027t be\nadaptable to it. I see the ThreadJob code that you\u0027re looking at, but I can\u0027t\nsee how the two rules conflict - see anything I\u0027m missing?\n\npublic class ServerSchedulingRule implements ISchedulingRule {\n\tprotected IServer server;\n\n\tpublic ServerSchedulingRule(IServer server) {\n\t\tthis.server \u003d server;\n\t}\n\n\tpublic boolean contains(ISchedulingRule rule) {\n\t\tif (!(rule instanceof ServerSchedulingRule))\n\t\t\treturn false;\n\t\t\n\t\treturn true;\n\t}\n\n\tpublic boolean isConflicting(ISchedulingRule rule) {\n\t\tif (!(rule instanceof ServerSchedulingRule))\n\t\t\treturn false;\n\t\t\n\t\tServerSchedulingRule ssrule \u003d (ServerSchedulingRule) rule;\n\t\treturn ssrule.server.equals(server);\n\t}\n}",
    "CC\u0027ing John Arthorne for assitance.\n\nThe problem is that the server rule does not contain the resource rule (see \nIJobManager.beginRule(..)). John how can we solve this? The server rule is to \nensure two server jobs don\u0027t run at once, and the resource rule is to ensure \nthat we update the resource with proper validate/edit locks. However, the \nrules know nothing about eachother.",
    "I assume a running job\u0027s rule must contain any begin rules called from that \njob, since the job is already running and thus the rule cannot conflict/be in \na larger scope.\n\nPerhaps the server rule should contain any resource rule?",
    "The assumption in comment #5 is correct.  A thread that owns a scheduling rule\ncannot acquire other rules while it is running.  ILaunchConfigurationWorkingCopy\nshould really be saying in its API what scheduling rules it will need (like\nIResourceRuleFactory), and then the server job would need to include that rule\nin its MultiRule to prevent this problem.\n\nThere is a good description of how this works and the implications for clients here:\n\nhttp://www.eclipse.org/articles/Article-Concurrency/jobs-api.html#SchedulingRules",
    "John, do you mean ILaunchConfigurationWorkingCopy should have a method called \n#getSaveRule()? \n\nThe rule would change based on the current settings of the config - i.e. local \nvs. shared file vs. move, etc. The client would have to modify the working \ncopy to the desired state before computing the rule (because it could change).",
    "The API should either say in the javadoc what the scheduling rule is (such as\n\"this method requires a scheduling rule on file X\").  If the rule being used\nmight vary, or if you want to avoid promising the exact rule to the client (thus\ngiving you some flexibility to change in the future), the separate rule method\nis better.\n\nAnother approach is to avoid getting a rule at all in that thread by forking a\njob and letting it complete separately. We use this approach quite often in core\nwhen the side-effects of the work to be done don\u0027t affect the API in question. \nFor example, we used to perform workspace snapshot when a project was created,\nbut since snapshot requires locking the entire workspace, we just fork a job to\ndo the snapshot from within the project creation method.  I don\u0027t know if this\napproach will work in your question.",
    "Tim, could the sever job fork/schedule a job to modify/save the config \nseperately? The \"doSave()\" of the config itself can\u0027t be asynchronous.\n\nWe should add the rule API in 3.2, but I\u0027m not sure it will help you (since \nI\u0027m not sure if you know how to modify the config before the server launch is \nstarted - which effects what rule is created).",
    "Deferred enhancement request to provide scheduling rule on launch config for \ndoSave(). For 3.1, clients will need to modify in non-nested manner.",
    "Hi Darin,\nSorry for the slow response. I tried running the doSave() on a separate Job with\nno rules and used a join() so that things run in the same order. This appears to\ndo the trick and I\u0027m no longer blocked by this problem.\nI\u0027ll stay cc\u0027d on this bug to remove the extra 10-15 lines of code in case we\nfind a better solution to this later.",
    "Re-open to mark as \u0027resolved - later\u0027 so we don\u0027t lose this one.",
    "Later",
    "Closing - see bug 104573. We no longer obtain locks for shared configs - we \nlet the underlying file operations get the locks. The debug platform will no \nlonger be responsible for lock conflicts (if any)."
  ],
  "commentCreationDates": [
    "2005-04-13T20:46:38+02:00",
    "2005-04-15T17:45:42+02:00",
    "2005-05-20T18:04:53+02:00",
    "2005-05-26T01:32:26+02:00",
    "2005-05-26T22:07:57+02:00",
    "2005-05-26T22:09:38+02:00",
    "2005-05-26T22:52:13+02:00",
    "2005-05-26T23:31:43+02:00",
    "2005-05-27T18:05:11+02:00",
    "2005-05-27T18:26:54+02:00",
    "2005-06-08T14:59:17+02:00",
    "2005-06-08T16:20:01+02:00",
    "2005-07-12T15:25:00+02:00",
    "2005-07-12T15:25:14+02:00",
    "2005-08-05T17:17:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Attempted to beginRule: MultiRule[L/jpi-jboss-iv-conf/jboss/eclipse-launchers/JBoss 4.0 (Generic).launch], does not match outer scope rule: Server scheduling rule for JBoss 4.0 (Generic)",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
          "source": "Assert.java:58"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ThreadJob.illegalPush",
          "source": "ThreadJob.java:106"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ThreadJob.push",
          "source": "ThreadJob.java:200"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs.begin",
          "source": "ImplicitJobs.java:80"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.beginRule",
          "source": "JobManager.java:186"
        },
        {
          "method": "org.eclipse.core.internal.resources.WorkManager.checkIn",
          "source": "WorkManager.java:96"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.prepareOperation",
          "source": "Workspace.java:1657"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1697"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfigurationWorkingCopy.doSave",
          "source": "LaunchConfigurationWorkingCopy.java:171"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.Server.getLaunchConfiguration",
          "source": "Server.java:1188"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.Server.start",
          "source": "Server.java:1230"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.Server.synchronousStart",
          "source": "Server.java:1458"
        },
        {
          "method": "org.eclipse.wst.server.ui.internal.StartServerJob.run",
          "source": "StartServerJob.java:43"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "91333",
      "date": "2005-04-13T20:46:38+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "enhancement"
    }
  ],
  "groupId": "91333",
  "bugId": "91333",
  "date": "2005-04-13T20:46:38+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "enhancement"
}