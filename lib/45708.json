{
  "comments": [
    "build I20031023\n\nWhile shutting down Eclipse, saw the following in the console.\nI was working on editor management, so it\u0027s quite possible there was a shell \nlying around with a table in it.\n\nLine 1143 of Table is:\n\tif (columnCount \u003d\u003d 1 \u0026\u0026 columns [0] \u003d\u003d null) columnCount \u003d 0;\nso columns must be null.\n\njava.lang.NullPointerException\n\tat org.eclipse.swt.widgets.Table.releaseWidget(Table.java:1143)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:724)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:366)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:371)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:724)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:366)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:371)\n\tat org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:118)\n\tat org.eclipse.swt.widgets.Decorations.releaseWidget\n(Decorations.java:665)\n\tat org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:772)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:724)\n\tat org.eclipse.swt.widgets.Shell.releaseShells(Shell.java:766)\n\tat org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:771)\n\tat org.eclipse.swt.widgets.Widget.dispose(Widget.java:375)\n\tat org.eclipse.swt.widgets.Decorations.dispose(Decorations.java:365)\n\tat org.eclipse.swt.widgets.Shell.dispose(Shell.java:485)\n\tat org.eclipse.swt.widgets.Display.release(Display.java:1912)\n\tat org.eclipse.swt.graphics.Device.dispose(Device.java:212)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1571)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:858)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:299)\n\tat org.eclipse.core.launcher.Main.run(Main.java:765)\n\tat org.eclipse.core.launcher.Main.main(Main.java:599)",
    "I saw another NPE where the Table\u0027s items field was null.\nIn both these cases, the Table\u0027s handle was non-zero.\nThere had been an earlier attempt to dispose the Table, but it failed due to an \nexception in a dispose listener, so the Table was left in this inconsistent, \nhalf-disposed state.\n",
    "*** Bug 50726 has been marked as a duplicate of this bug. ***",
    "Comment from dup report:\n\"\nCreate a TreeViewer with headervisible true but dont add any columns. At \ndispose time you get this ...\n\"\n",
    "I just got this one in 20040518\n\n!ENTRY org.eclipse.osgi May 19, 2004 16:45:16.618\n!MESSAGE Application error\n!STACK 1\njava.lang.NullPointerException\n\tat org.eclipse.swt.widgets.Table.releaseWidget(Table.java:1512)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:673)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren\n(Composite.java:367)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:372)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:673)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren\n(Composite.java:367)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:372)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:673)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren\n(Composite.java:367)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:372)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:673)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren\n(Composite.java:367)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:372)\n\tat org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:673)\n\tat org.eclipse.swt.widgets.Composite.releaseChildren\n(Composite.java:367)\n\tat org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:372)\n\tat org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:118)\n\tat org.eclipse.swt.widgets.Decorations.releaseWidget\n(Decorations.java:702)\n\tat org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:786)\n\tat org.eclipse.swt.widgets.Widget.dispose(Widget.java:368)\n\tat org.eclipse.swt.widgets.Decorations.dispose(Decorations.java:371)\n\tat org.eclipse.swt.widgets.Shell.dispose(Shell.java:487)\n\tat org.eclipse.swt.widgets.Display.release(Display.java:2430)\n\tat org.eclipse.swt.graphics.Device.dispose(Device.java:216)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:113)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:305)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:256)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:127)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:184)",
    "*** Bug 72446 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d14148)\nEclipse 3.0 RCP mini-project\n\nReproduces NPE reliably. Open XML View and then exit the app, either with file\n- exit or by closing the window.",
    "SUMMARY: Similar bug in Menu on shell/display.dispose() for Win32 3.0.1\n\nSYMPTOMS: NPE is caused if I include a System.out.println(\"\"); in \ndisposeListener.widgetDisposed(..);\n\nTRACE: For Win32 on window close SWT\u0027s display.readAndDispatch() calls \nOS-related dispose() [a large call stack], but then any later shell/display.\ndispose() calls get to Menu.releaseWidget() and the menu still has the array, \nbut all objects are now null.  Breakpoint in Menu.java@1048 or on NPE.\n\nFIX:  Menu.java@1049 / 4th line of releaseWidget() should be changed from\n    if (!item.isDisposed ()) {\nto\n    if (item !\u003d null \u0026\u0026 !item.isDisposed ()) {",
    "(In reply to comment #0)\nUsing Eclipse 3.1 GA, I\u0027m still seeing this bug, I believe. I debugged into it a\nbit, and it turns out that Table.releaseWidget() is called twice after a single\ncall to Workbench.close(). In Table.releaseWidget(), the items field is first\naccessed and then nulled out, so on the second call an NPE will be thrown.\n\nIf you compare the two stack traces that I\u0027ll attach in a minute in Eclipse,\nyou\u0027ll see that WorkbenchWindow.hardClose() first closes all pages and then\ncloses the window. Both calls result in Table.releaseWidget() being called,\nwhich seems not to be guarded from running twice. \n\nMaybe there is a more thorough solution to this problem, but my proposal would\nbe to simply guard Table.releaseWidget() from running twice.",
    "Created an attachment (id\u003d25171)\nfirst call to Table.releaseWidget()\n",
    "Created an attachment (id\u003d25172)\nSecond call to Table.releaseWidget()\n",
    "Maybe someone can change the version to 3.1? Just in case 3.0 bugs are flying\nunder the radar. Or is it because Carolyn is on a surely deserved holiday that\nnothing happens here?\n\n3.1 is GA, and I haven\u0027t found a way of getting rid of this NPE when my client\nwants to close the application. Not so nice. Makes a bad impression.\n\n",
    "As it first appeared in 3.0 we should leave the tag as it is. The fact that it\nstill occurs in 3.1 is worth noting here but we need to know how long the bug\nhas been around for.",
    "Fixed \u003e 20050726 in CoolBar, Menu, MenuItem, TabFolder, Table, TableColumn,  \nToolBar, Tree and TreeColumn releaseWidget methods.\n\nYes, I am just back yesterday from a 1 month vacation. \u003cg\u003e\nBut I apologize that this easy fix somehow slipped under the radar for 3.1.\nIt\u0027s in now...",
    "Alright, thanks! Hope you had a nice holiday :)\n\nOne little question remains for me: will this fix be in the 3.1.1 maintenance\nbranch or HEAD or both?",
    "Right now it\u0027s in HEAD. I\u0027ll talk to Steve about putting it in the 3.1.1 \nbranch. We\u0027re just having a look at it now. Will get back to you.",
    "(In reply to comment #15)\n\u003e Right now it\u0027s in HEAD. I\u0027ll talk to Steve about putting it in the 3.1.1 \n\u003e branch. We\u0027re just having a look at it now. Will get back to you.\n\nOK thanks for telling. That seems to be a long discussion whether or not to put\nit in the maintenance branch ;)\n\nI\u0027d really welcome it in the maintenance branch, as I was hoping to get away\nfrom delivering an application based to on integration builds, and only because\nof this fix I\u0027d be back to doing so, DUH!",
    "Ok, I\u0027m not sure that this is the final pattern we will be using to fix this \nbug.   In any case, CAR only fixed Windows.  In the mean time, I\u0027ve restored \nthe old (broken) code so this bug is no longer fixed.  It may be that the same \ncode goes back in (if we can\u0027t do a better job of disposing).\n\nSSQ, SN and CAR to work on a better dispose story.",
    "(In reply to comment #17)\n\u003e Ok, I\u0027m not sure that this is the final pattern we will be using to fix this \n\u003e bug.   In any case, CAR only fixed Windows.  In the mean time, I\u0027ve restored \n\u003e the old (broken) code so this bug is no longer fixed.  It may be that the same \n\u003e code goes back in (if we can\u0027t do a better job of disposing).\n\u003e \n\u003e SSQ, SN and CAR to work on a better dispose story.\n\nWould it be possible to leave the fix in until a better \"dispose story\" is\nimplemented? That would give people (and in particular: me) a chance to pick up\na build for delivery where it is fixed, without nasty workarounds. When there is\na better approach implemented, the fix could still be taken back (it\u0027s just two\nlines anyway).\n\nI\u0027d think that making some kind of cleanup-method reentrant doesn\u0027t harm at all,\nbut you probably have reasons for not wanting to see that.",
    "We have come up with a general solution, which we will add to the 3.2 release.\n\nHowever, this still leaves Jorg with an NPE in Table in 3.1 because someone is \ncalling releaseWidget twice. So we will put the null check back in Table \n(only) for 3.1.1.\n\nFor testing the general solution: The simplest test is to call dispose from \ninside a dispose listener. Here\u0027s a snippet for Table. To see the (3.1) \nfailure described in comment 8, run it, and close the window. To see the \nfailure described in comment 0, change MAX_COL to 1, run, close window. Our \n3.1.1 \"null-check\" fix will cover both of these cases.\n\n\nimport org.eclipse.swt.*;\nimport org.eclipse.swt.widgets.*;\nimport org.eclipse.swt.layout.*;\nimport org.eclipse.swt.events.*;\n\npublic class TableDisposeTest {\n\tstatic Display display;\n\tstatic Shell shell;\n\tstatic Table table;\n\tstatic int MAX_COL \u003d 3;\n\t\n\tpublic static void main(String[] args) {\n\t\tdisplay \u003d new Display();\n\t\tshell \u003d new Shell(display);\n\t\tshell.setLayout(new GridLayout());\n\t\tshell.setText(\"Table Dispose\");\n\t\t\n\t\ttable \u003d new Table(shell, SWT.MULTI | SWT.FULL_SELECTION);\n\t\ttable.setLayoutData(new GridData(GridData.FILL_BOTH));\n\t\ttable.setHeaderVisible(true);\n\t\tfor (int col \u003d 0; col \u003c MAX_COL; col++) {\n\t\t\tTableColumn column \u003d new TableColumn(table, SWT.NONE);\n\t\t\tcolumn.setText(\"Column \" + col);\n\t\t\tcolumn.setWidth(100);\n\t\t}\n\t\tfor (int row \u003d 0; row \u003c 5; row++) {\n\t\t\tTableItem item \u003d new TableItem(table, SWT.NONE);\n\t\t\tfor (int col \u003d 0; col \u003c MAX_COL; col++) {\n\t\t\t\titem.setText(col, \"item\" + col + row);\n\t\t\t}\n\t\t}\n\n\t\ttable.addDisposeListener(new DisposeListener() {\n\t\t\tpublic void widgetDisposed(DisposeEvent e) {\n\t\t\t\ttable.dispose();\n\t\t\t}\n\t\t});\n\n\t\tshell.pack();\n\t\tshell.open();\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t}\n}",
    "Fixed \u003e 20050803 (in HEAD)\n\nNOTE:  There are too many changes to release this for 3.1.1.  We should \nconsider either fixing only the one that Jorg is seeing or helping him rewrite \nhis code to avoid the problem.  Jorg?",
    "A more realistic snippet for testing (more like what happens in eclipse).\nUser closes shell twice to call Table.releaseWidget twice.\n\nimport org.eclipse.swt.*;\nimport org.eclipse.swt.widgets.*;\nimport org.eclipse.swt.layout.*;\nimport org.eclipse.swt.events.*;\n\npublic class TableDisposeTest {\n\tstatic Display display;\n\tstatic Shell shell;\n\tstatic Table table;\n\tstatic int MAX_COL \u003d 3;\n\t\n\tpublic static void main(String[] args) {\n\t\tdisplay \u003d new Display();\n\t\tshell \u003d new Shell(display);\n\t\tshell.setLayout(new GridLayout());\n\t\tshell.setText(\"Table Dispose\");\n\t\t\n\t\ttable \u003d new Table(shell, SWT.MULTI | SWT.FULL_SELECTION);\n\t\ttable.setLayoutData(new GridData(GridData.FILL_BOTH));\n\t\ttable.setHeaderVisible(true);\n\t\tfor (int col \u003d 0; col \u003c MAX_COL; col++) {\n\t\t\tTableColumn column \u003d new TableColumn(table, SWT.NONE);\n\t\t\tcolumn.setText(\"Column \" + col);\n\t\t\tcolumn.setWidth(100);\n\t\t}\n\t\tfor (int row \u003d 0; row \u003c 5; row++) {\n\t\t\tTableItem item \u003d new TableItem(table, SWT.NONE);\n\t\t\tfor (int col \u003d 0; col \u003c MAX_COL; col++) {\n\t\t\t\titem.setText(col, \"item\" + col + row);\n\t\t\t}\n\t\t}\n\n\t\ttable.addDisposeListener(new DisposeListener() {\n\t\t\tpublic void widgetDisposed(DisposeEvent e) {\n\t\t\t\tint i \u003d 1/0; // force an exception\n\t\t\t}\n\t\t});\n\n\t\tshell.pack();\n\t\tshell.open();\n\t\t\n\t\twhile (!shell.isDisposed()) {\n\t\t\t// the big \"catch-all\", like in eclipse\n\t\t\ttry {\n\t\t\t\tif (!display.readAndDispatch()) display.sleep\n();\n\t\t\t} catch (Exception ex) {\n\t\t\t}\n\t\t}\n\t}\n}",
    "(In reply to comment #20)\n\u003e Fixed \u003e 20050803 (in HEAD)\n\u003e \n\u003e NOTE:  There are too many changes to release this for 3.1.1.  We should \n\u003e consider either fixing only the one that Jorg is seeing or helping him rewrite \n\u003e his code to avoid the problem.  Jorg?\n\nFor the moment, I had to resort to a brutal System.exit(0) for shutdown,\npossibly losing user preferences for window sizes. I would absolutely welcome\nTable.releaseWidget() being reentrant in 3.1.1. If only Table is fixed in 3.1.1,\nI only hope that I won\u0027t be running into other classes\u0027 releaseWidget() failing\nonce that one passes :-/\n\nMaybe Carolyn\u0027s simple fixes are appropriate for a maintenance branch, with the\ngenerally fixed dispose story being in HEAD?\n\n",
    "\u003eMaybe Carolyn\u0027s simple fixes are appropriate for a maintenance branch,\n\u003ewith the generally fixed dispose story being in HEAD?\n\nYes.  We are strongly considering this but still investigating the problem and \nthis many affect the code that goes into the maintenance branch.  Hold tight!\n\n\u003eNOTE:  There are too many changes to release this for 3.1.1.  We should\n\u003econsider either fixing only the one that Jorg is seeing or helping him\n\u003erewrite his code to avoid the problem.  Jorg?\n\nWould it be possible to get the actual code that is failing for you?",
    "Jorg, I see from the stack traces in comment 9 and comment 10 that you are \nusing a LiveSashForm from Novocode. Out of curiosity, does the problem still \noccur if you switch to an SWT SashForm? (Assuming that both widgets are API-\ncompatible... I don\u0027t know). Probably a long shot... but if the problem goes \naway, then maybe you can mention it to the Novocode guys.",
    "(In reply to comment #24)\n\u003e Jorg, I see from the stack traces in comment 9 and comment 10 that you are \n\u003e using a LiveSashForm from Novocode. Out of curiosity, does the problem still \n\u003e occur if you switch to an SWT SashForm? \n\nI\u0027m sorry but I can\u0027t contribute much time at the moment. I hope I can try this\nout this week. The same goes for my code, I can\u0027t give out the whole application\nand I currently don\u0027t have time for creating a test case. I wish someone paid me\nfor doing stuff like that instead of what I have to do at the moment :-/\n\n",
    "A better dispose story has been released for 3.2 in HEAD.  There are far too \nmany changes to port back to 3.1.1.",
    "(In reply to comment #24)\n\u003e Jorg, I see from the stack traces in comment 9 and comment 10 that you are \n\u003e using a LiveSashForm from Novocode. Out of curiosity, does the problem still \n\u003e occur if you switch to an SWT SashForm? \n\nIt definitely isn\u0027t the LiveSashForm. I replaced it with SashForm and removed\nall references to it, but I still get the NPE in\norg.eclipse.swt.widgets.Table.releaseWidget(Table.java:1705).",
    "(In reply to comment #26)\n\u003e A better dispose story has been released for 3.2 in HEAD.  There are far too \n\u003e many changes to port back to 3.1.1.\n\nWhen I look in the CVS history for Table, it seems that Carolyn\u0027s simple change\nis not in 3.1.1. So this particular bug remains in 3.1.1? Or do you plan to make\nTable.releaseWidget() reentrant in 3.1.1?",
    "\u003eYes.  We are strongly considering this but still investigating the problem\n\u003eand this many affect the code that goes into the maintenance branch.  Hold\n\u003etight!\n",
    "You guys (and girls) did a good job making people not able to override\nreleaseWidget() etc., it\u0027s all package-protected... \nI\u0027m happy to have found a better workaround than System.exit() which only works\nfor the last window ;)\nActually I\u0027m so happy about it that I\u0027ll post it here in case anyone needs it as\nwell. Setting all Table\u0027s itemCount to 0 does the trick. So in my\nWorkbenchWindowAdvisor, I\u0027m doing this:\n\nprivate void setAnyTableItemCountToZero(Composite parent) {\n\tControl[] children \u003d parent.getChildren();\n\tfor (int i \u003d 0; i \u003c children.length; i++) {\n\t\tif (children[i] instanceof Table){\n\t\t\t((Table)children[i]).setItemCount(0);\n\t\t} else if (children[i] instanceof Composite) {\n\t\t\tsetAnyTableItemCountToZero((Composite)children[i]);\n\t\t} \n\t}\n}\n\npublic boolean preWindowShellClose() {\n\tif (super.preWindowShellClose()) {\n\t\tIWorkbenchPage[] pages \u003d window.getPages();\n\t\tfor (int i \u003d 0; i \u003c pages.length; i++) {\n\t\t\tIViewReference[] viewRefs \u003d pages[i].getViewReferences();\n\t\t\tfor (int j \u003d 0; j \u003c viewRefs.length; j++) {\n\t\t\t\tIViewPart viewPart \u003d viewRefs[j].getView(false);\n\t\t\t\tif (viewPart!\u003dnull \u0026\u0026 (viewPart instanceof EditableView)) {\n\t\t\t\t\tComposite composite \u003d ((EditableView)viewPart).getParentComposite();\n\t\t\t\t\tsetAnyTableItemCountToZero(composite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nEditableView is my ViewPart subclass that keeps track of its parent Composite.",
    "Methods such as releaseWidget() is part of the implementation of SWT and \nsubject to change.  If they were API (ie either protected or public), we \ncouldn\u0027t change them.\n\nWe are getting close to the real fix for 3.2.  In the meantime, CAR will \nrelease the simplest possible fix for 3.1.1 that will (hopefully) fix the \nproblem you are seeing and not cause more trouble.",
    "(In reply to comment #31)\n\u003e Methods such as releaseWidget() is part of the implementation of SWT and \n\u003e subject to change.  If they were API (ie either protected or public), we \n\u003e couldn\u0027t change them.\n\nCouldn\u0027t SWT just say look, when you override checkSubclass(), you enter\noverriding at your own risk. Maybe you could get such overrides marked by those\nEclipse-specific ways of notifying irregular uses of API. Anyway that would be\nnice as a less time-consuming self-help for bringing in temporary fixes. In\nsituations like e.g. having a serious problem with a GA release, and a simple\nremedy for the problem at hand being stuck for weeks somewhere between HEAD and\nmaintenance.\n\nExpecting people to build their own Eclipse release in situations like that\nwould be really bad for small companies, if I may add...",
    "The problem with that is binary compatibility.  Once something is API \n(protected or public) we cannot change it.  I feel your pain, however, the \nreal problem is somewhere in the application code, not SWT.  We believe that \nsomeone is calling dispose() on a child from within SWT.Dispose.  While SWT \nshouldn\u0027t NPE, it can also be fixed easily in application code by not doing \nthis.  Nothing will break.  The \"simple remedy\", isn\u0027t really the right code \nand just works around this one problem (we hope).\n\nSince you have been unable to provide a snippet or any sort of code that shows \nthe problem, we actually have no idea whether the \"simple remedy\" will work \nfor you.  It would be WAY BETTER for everyone if you provided some application \ncode and we fixed it rather than patching the toolkit in one place and hoping \nfor the best.  Normally, there is no way we would do the patch but the code is \nsimple and you indicated that you are shipping.",
    "(In reply to comment #33)\n\nI\u0027m really sorry I can\u0027t produce a test case at the moment, and thanks for\npatching without being able to test it.\n\nDoes releaseWidget() exist in classes that are intended to be subclassed? "
  ],
  "commentCreationDates": [
    "2003-10-29T04:17:51+01:00",
    "2003-10-29T04:58:22+01:00",
    "2004-01-28T14:37:50+01:00",
    "2004-01-28T14:38:29+01:00",
    "2004-05-19T23:00:57+02:00",
    "2004-08-24T17:55:23+02:00",
    "2004-08-24T18:45:50+02:00",
    "2005-03-12T17:51:54+01:00",
    "2005-07-22T12:17:46+02:00",
    "2005-07-22T12:19:03+02:00",
    "2005-07-22T12:19:34+02:00",
    "2005-07-26T14:36:36+02:00",
    "2005-07-26T14:57:05+02:00",
    "2005-07-26T23:51:52+02:00",
    "2005-07-27T10:18:17+02:00",
    "2005-07-27T20:05:50+02:00",
    "2005-07-28T15:20:31+02:00",
    "2005-07-29T00:42:12+02:00",
    "2005-07-29T17:00:38+02:00",
    "2005-08-03T19:30:16+02:00",
    "2005-08-03T22:07:17+02:00",
    "2005-08-04T00:15:42+02:00",
    "2005-08-04T12:04:04+02:00",
    "2005-08-04T17:01:35+02:00",
    "2005-08-08T23:20:47+02:00",
    "2005-08-09T10:51:31+02:00",
    "2005-08-10T00:34:31+02:00",
    "2005-08-10T15:37:22+02:00",
    "2005-08-10T17:29:05+02:00",
    "2005-08-10T18:24:21+02:00",
    "2005-08-10T19:11:19+02:00",
    "2005-08-10T20:37:59+02:00",
    "2005-08-11T02:21:15+02:00",
    "2005-08-11T15:56:15+02:00",
    "2005-08-11T17:22:05+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.Table.releaseWidget",
          "source": "Table.java:1143"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:724"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:366"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:371"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:724"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:366"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:371"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.releaseWidget",
          "source": "Canvas.java:118"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.releaseWidget",
          "source": "Decorations.java:665"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.releaseWidget",
          "source": "Shell.java:772"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:724"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.releaseShells",
          "source": "Shell.java:766"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.releaseWidget",
          "source": "Shell.java:771"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.dispose",
          "source": "Widget.java:375"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.dispose",
          "source": "Decorations.java:365"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.dispose",
          "source": "Shell.java:485"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.release",
          "source": "Display.java:1912"
        },
        {
          "method": "org.eclipse.swt.graphics.Device.dispose",
          "source": "Device.java:212"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1571"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:858"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:299"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:765"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:599"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "45708",
      "date": "2003-10-29T04:17:51+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.Table.releaseWidget",
          "source": "Table.java:1512"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:673"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:367"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:372"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:673"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:367"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:372"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:673"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:367"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:372"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:673"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:367"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:372"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.releaseResources",
          "source": "Widget.java:673"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseChildren",
          "source": "Composite.java:367"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.releaseWidget",
          "source": "Composite.java:372"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.releaseWidget",
          "source": "Canvas.java:118"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.releaseWidget",
          "source": "Decorations.java:702"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.releaseWidget",
          "source": "Shell.java:786"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.dispose",
          "source": "Widget.java:368"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.dispose",
          "source": "Decorations.java:371"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.dispose",
          "source": "Shell.java:487"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.release",
          "source": "Display.java:2430"
        },
        {
          "method": "org.eclipse.swt.graphics.Device.dispose",
          "source": "Device.java:216"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:113"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:305"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:256"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:127"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:184"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "45708",
      "date": "2004-05-19T23:00:57+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "45708",
  "bugId": "45708",
  "date": "2003-10-29T04:17:51+01:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}