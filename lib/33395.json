{
  "comments": [
    "After we install our plugins into an existing Eclipse install, Eclipse will \nfail to start up.\n\nAssumptions:\n   - WSAD is installed in the default directory on C: drive.\n   - although the test is written for WSAD install, it can easily be modified \nto install in Eclipse. Just copy the link file in the correct Eclipse install \nlocation.\n\nSTEPS:\n   - Install WSAD, launch it and exit\n   - Install the attached test plugin/feature\n   - Launch WSAD \n   - WSAD detects new updates and prompts you to open the Update Manager\n   - Select Yes.\n   - In the Configuration Changes dialog, check the new feature and press Finish\n   - You\u0027ll be prompted to restart WSAD. Press Yes.\n   - An error dialog appears which states \n     Problems during startup. Check the \".log\" file in the \".metadata\" \ndirectory of your workspace. \n   - see attached log.\n\nExpected:\n   - WSAD would restart without any errors.",
    "Created an attachment (id\u003d3742)\nTest Plugin for WSAD\n\nUnzip test-plugin.zip into c:\\ where WSAD is installed.",
    "Created an attachment (id\u003d3743)\nError log\n",
    "The problem has something to do with Update Manager and a fragment contain \nextensions to the import/export wizard.",
    "Please do not use priority setting - it is for us. In addition, do make a test \ncase for Eclipse.",
    "Sorry I was not clear in the bug report, the test also works for Eclipse. Just \nensure that the com.test.workbench.link file gets copied to the correct eclipse \ndirectory.",
    "Hi,\n1) check the following warning I see\n!MESSAGE Plug-in descriptor \"com.test.workbench\" not found for fragment\n\"com.test.fragment\".  Fragment ignored.\nmake sure the fragment is removed or valid\n2) Can you reproduce it with Eclipse 2.1 (RC1) ?",
    "Chris,\nWe are releasing a new version of the modeling product on the 2.0.x stream of \nEclipse - although we have 2.1 in-house in our UNIX test environment, we don\u0027t \nplan to migrate our products to that until the new WSAD release comes out for \nthe 2.1 base.\n\nIdeally, we would like a solution/workaround for this in the 2.0.x stream.\n\nThanks,\nSteve.",
    "The fragment is valid. This is part of the problem during an update.\n\nWhen a new feature is added and is detected by Eclipse, all of its associated \nplugins are ignored on start up until you select the component (step 6) and the \nUpdate Manager restarts Eclipse. However, it will still attempt to read the \nfragments for those plugins. This is why you see the warning. If you pause at \nstep 4 of the replication steps and look at the .log file, the warning is \nalready there. It should ignore the fragments if the associated plugins are \nbeing ignored. The stack trace that you see afterwards is written when Update \nManager restarts Eclipse. I\u0027m not sure why it would die at that point.\n\nNOTE: If you delete the entire workspace and start up Eclipse, there is no \nerror because there\u0027s no interaction with the Update Manager restarting \nEclipse. The problem only occurs when Eclipse detects that there are new \nUpdates.\n\n",
    "I just tested this using M4 and the problem is there too.",
    "Action Taken:\nThe ClassCastException occurs when shutting down platform with or without\nenabling new found feature.\n\nit seems the description in the fragment.xml is the cause\n\nthe following fragment works fine\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cfragment\n   id\u003d\"com.test.fragment\"\n   name\u003d\"Test Fragment\"\n   version\u003d\"1.0.0\"\n   plugin-id\u003d\"com.test.workbench\"\n   plugin-version\u003d\"1.0.0\"\u003e\n   \n \u003cextension point\u003d\"org.eclipse.ui.importWizards\"\u003e\n      \u003c!-- import wizard --\u003e\n      \u003cwizard\n            name\u003d\"Test import\"\n            icon\u003d\"test_icon.gif\"\n            class\u003d\"com.test.TestImportWizard\"\n            id\u003d\"com.test.TestImport\"\u003e\n         \u003cdescription\u003e\n            Import an Test File\u003c/description\u003e\n      \u003c/wizard\u003e\n   \u003c/extension\u003e\n\n\u003c/fragment\u003e\n\n\nthis one doesn\u0027t\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cfragment\n   id\u003d\"com.test.fragment\"\n   name\u003d\"Test Fragment\"\n   version\u003d\"1.0.0\"\n   plugin-id\u003d\"com.test.workbench\"\n   plugin-version\u003d\"1.0.0\"\u003e\n   \n \u003cextension point\u003d\"org.eclipse.ui.importWizards\"\u003e\n      \u003c!-- import wizard --\u003e\n      \u003cwizard\n            name\u003d\"Test import\"\n            icon\u003d\"test_icon.gif\"\n            class\u003d\"com.test.TestImportWizard\"\n            id\u003d\"com.test.TestImport\"\u003e\n         \u003cdescription\u003e\n            Import an Test File\n         \u003c/description\u003e\n      \u003c/wizard\u003e\n   \u003c/extension\u003e\n\n\u003c/fragment\u003e\n\n\nSee the difference in the description tag\n\nThe log I get is:\n\n!ENTRY org.eclipse.core.launcher 4 0 Feb 27, 2003 10:52:03.96\n!MESSAGE Exception launching the Eclipse Platform:\n!STACK\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat\norg.eclipse.core.internal.boot.InternalBootLoader.shutdown(InternalBootLoader.java:934)\n\tat\norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:836)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\t... 7 more\nCaused by: java.lang.ClassCastException:\norg.eclipse.core.internal.plugins.FragmentDescriptor\n\tat\norg.eclipse.core.runtime.model.ExtensionModel.getParentPluginDescriptor(ExtensionModel.java:72)\n\tat\norg.eclipse.core.internal.plugins.Extension.getDeclaringPluginDescriptor(Extension.java:34)\n\tat\norg.eclipse.core.internal.plugins.ConfigurationElement.getValue(ConfigurationElement.java:152)\n\tat\norg.eclipse.core.internal.plugins.RegistryCacheWriter.writeConfigurationElement(RegistryCacheWriter.java:98)\n\tat\norg.eclipse.core.internal.plugins.RegistryCacheWriter.writeConfigurationElement(RegistryCacheWriter.java:117)\n\tat\norg.eclipse.core.internal.plugins.RegistryCacheWriter.writeExtension(RegistryCacheWriter.java:206)\n\tat\norg.eclipse.core.internal.plugins.RegistryCacheWriter.writePluginFragment(RegistryCacheWriter.java:558)\n\tat\norg.eclipse.core.internal.plugins.RegistryCacheWriter.writePluginRegistry(RegistryCacheWriter.java:666)\n\tat\norg.eclipse.core.internal.plugins.PluginRegistry.saveRegistry(PluginRegistry.java:216)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown(InternalPlatform.java:519)\n\t... 14 more\n\n\nAction Taken:\nYou should have a workaround\nPass to Core for comments\n\nNone of this occurs if we just drop the file and start with a new workspace. Can\nyou tell us what Update may do wrong? Is that because we attempt to save a\ndisable fragment? Seems stange.",
    "I tried the fragment description that you provided (direct copy-paste) and the \nproblem still occurs. Did you recreate the workspace so that the Update Manager \ndialog would pop-up to reproduce the problem again? (eg. remove the test link; \nstartup Eclipse and shut it down; add the test link back; startup Eclipse again)\n\nI don\u0027t see how changing the description would prevent the problem.",
    "Christophe, please see Duong\u0027s comments above.\n",
    "Yes, I used 2.0.3 (2.0.2.1)\nI started eclipse, shut it down, then I copied plugins/fragments and feature,\nstarted up. I do not need to enable the new found features to recreate the issue.\nFrom what I can see, there is a classcast exception between a fragment class and\na plugin class.\nWhat version are you using ? Which platform ?\nDJ can you reprodcue it, does it ring a bell ?\nDuong did you change both description, did you try to remove the description\npart out of the fragment.xml ?",
    "Tfried again, this time i had to delete both description tag. Can you confirm\nyou can reproduce it without both description tag ?",
    "I\u0027m currently using Eclipse 2.0.2 on W2K.\n\nWhen I changed both descriptions as you suggested, the problem would still \noccur. However, when I deleted both descriptions, the problem goes away. \n\nI can\u0027t use this workaround. We have several import/export wizards. We can\u0027t \nship the product without the description for these wizards.",
    "DJ what is happening in core ? Um doesn\u0027t seem to do anything special and we\nrealized the problem comes from a tag in the fragment.xml ?",
    "I am able to reproduce this using Duong\u0027s steps. (I am also using Win2K)\n\n- download and install Eclipse v2.0.2\n- run it\n- create a couple of projects to populate the workspace\n- shut down\n- extract the zips to the appropriate location\n  - extract plugins to eclipse/plugins\n  - extract links to eclipse/links\n  - extract Test to /test (and update path var accordingly)\n- start Eclipse (get warning re: fragment)\n- am prompted by the update manager\n- view updates\n- select workbench and hit Finish\n- am prompted for a restart\n- hit OK for restart\n- get the above ClassCastException in the log file and am unable to start\n\nI will try and reproduce the problem in a debugger and see if I can figure out \nwhat is happening.",
    "Created an attachment (id\u003d3797)\nlog file\n\nLooking at it closer, I got a slightly different stack trace in my log file.\nHere it is.",
    "Note that using build i0227 using IBM JRE 1.3.1 SR2:\n- I get the same stack trace as Duong\n- I don\u0027t get prompted saying that there is an error in the log file\n",
    "Ok, here is what is happening. It looks like we have 2 problems here:\n\n1). When we resolve the registry all of the contributions of fragments are \nadded to their plug-in and then the fragments themselves are removed from the \nregistry. This is good. But if a fragment exists and its corresponding plug-in \ndoesn\u0027t, then the fragment isn\u0027t removed from the registry. This is a bug and \nleads to the ClassCastException that we are seeing when we try and persist this \ninfo to disk in the cache writer.\n\n2). Why is the plug-in not found in the first place? This is what is causing \nthe following message in the log file:\n!MESSAGE Plug-in descriptor \"com.test.workbench\" not found for \nfragment \"com.test.fragment\".  Fragment ignored.\n\nAfter further investigation, it looks like it might have to do with the plug-in \nenable/disable mechanism in correspondence with features. When we do the re-\nstart after extracting (but before installing) the test feature/plug-\nin/fragment, we recognize that the feature is not installed so we exclude its \nplug-in from the list of ones which we parse. But we still include the \nfragment. This is why the plug-in is not in the registry in the first place. \nThis looks like a duplicate of Bug 25557.\n",
    "Work around for number 1 is to run with -noRegistryCache command-line argument.\n",
    "Targeting milestone for 2.2 and recommending that we not deliver a patch for \n2.0.3.",
    "Unfortunately, the recommended work around (-noRegistryCache) will not work for \nus because we\u0027re installing our product on top WSAD. We can\u0027t change how WSAD \nis being launched from the Start menu.\n",
    "Potential fix: RegistryResolver.trimRegistry should be iterating over the \nfragments and removing them from the registry if the plug-in that they \ncontribute to doesn\u0027t exist.\n\nNeed to investigate further.",
    "We will need either a valid workaround or a fix in the 2.0.3 release if we are \nto offer integration with WSAD. We can not wait until early in 2004 for a fix.",
    "Steve: You will need to check with WSWB for any IBM Support and concern. We\nperfectly understand your demand though, but you should require formal support\nfrom the formal offering too as Eclipse is open source, and WSWB is IBM\nofferring. They may have to deliver an eFix that you may require to run.\nDJ: I see the issue. I will also investigate bug 25557 and see if it is faster\nto fix this one instead or 2.0.3. Otherwise we may provide an eFix.",
    "Found a workaround for Core bug, which actually is the proper way of creating a\nfeature.\n\nThe following feature.xml works fine on my 2.0.3\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cfeature\n      id\u003d\"com.test.workbench\"\n      label\u003d\"Test Workbench\"\n      version\u003d\"1.0.0\"\n      image\u003d \"test_update_120.gif\"\n      provider-name\u003d\"Test\"\n      primary\u003d\"true\"\n      application\u003d\"org.eclipse.ui.workbench\"\u003e\n      \n  \u003cdescription\u003e%description\u003c/description\u003e  \n\n  \u003clicense url\u003d\"%licenseURL\"\u003e%license\u003c/license\u003e \n    \n  \u003cplugin id\u003d\"com.test.workbench\" version\u003d\"1.0.0\"/\u003e\n  \u003cplugin id\u003d\"com.test.fragment\" version\u003d\"1.0.0\" fragment\u003d\"true\"/\u003e\n\u003c/feature\u003e",
    "Thanks for the work around. It looks good to us.\n\nSome of our nl fragments may not be listed in the feature.xml but they will not \ncause the problem described here.",
    "Actually this is not a workaround for update manager, this is the way it should\nwork. You have to declare your fragment you are installing in the feature.xml.\n\nI believe IBM products and other declare all the NL fragment in some separate\nfeature. Check with them. I cced Peter.",
    "All WSAD feautures with NL components are 2 features. For example\ncom.ibm.etools.feature\n   com.ibm.etools.feature.nl1\n\nThe nl1 feature is optionally included by the parent feature.\n\ncom.ibm.etoos.feature contains the line\n\n  \u003cincludes id\u003d\"com.ibm.etools.feature.nl1\" match\u003d\"equivalent\" version\u003d\"5.0.0\" \noptional\u003d\"true\"/\u003e\n\n",
    "Good info to know. We\u0027ll do the same. Thanks again.",
    "Closing as invalid.\nFeature declaration should include fragment list as well as plug-ins.\n\nBug 33911 to address the Platform/Core issue described above.\n"
  ],
  "commentCreationDates": [
    "2003-02-26T23:18:32+01:00",
    "2003-02-26T23:30:19+01:00",
    "2003-02-26T23:31:51+01:00",
    "2003-02-26T23:35:02+01:00",
    "2003-02-26T23:37:48+01:00",
    "2003-02-26T23:45:56+01:00",
    "2003-02-27T00:49:25+01:00",
    "2003-02-27T13:26:19+01:00",
    "2003-02-27T14:39:13+01:00",
    "2003-02-27T15:49:52+01:00",
    "2003-02-27T15:53:17+01:00",
    "2003-02-27T16:22:35+01:00",
    "2003-02-27T21:24:18+01:00",
    "2003-02-27T22:53:07+01:00",
    "2003-02-27T23:06:16+01:00",
    "2003-02-27T23:28:58+01:00",
    "2003-02-27T23:38:22+01:00",
    "2003-02-28T14:17:20+01:00",
    "2003-02-28T21:32:37+01:00",
    "2003-02-28T22:52:15+01:00",
    "2003-03-03T21:18:30+01:00",
    "2003-03-03T21:33:11+01:00",
    "2003-03-03T21:34:24+01:00",
    "2003-03-03T21:52:01+01:00",
    "2003-03-03T22:17:33+01:00",
    "2003-03-03T22:46:06+01:00",
    "2003-03-04T11:39:44+01:00",
    "2003-03-05T16:18:55+01:00",
    "2003-03-05T17:07:15+01:00",
    "2003-03-05T17:19:33+01:00",
    "2003-03-05T17:40:13+01:00",
    "2003-03-05T17:45:36+01:00",
    "2003-03-05T21:31:57+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.reflect.InvocationTargetException",
        "elements": [
          {
            "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
            "source": "Native Method"
          },
          {
            "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
            "source": "Unknown Source"
          },
          {
            "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
            "source": "Unknown Source"
          },
          {
            "method": "java.lang.reflect.Method.invoke",
            "source": "Unknown Source"
          },
          {
            "method": "org.eclipse.core.internal.boot.InternalBootLoader.shutdown",
            "source": "InternalBootLoader.java:934"
          },
          {
            "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
            "source": "InternalBootLoader.java:836"
          },
          {
            "method": "org.eclipse.core.boot.BootLoader.run",
            "source": "BootLoader.java:462"
          }
        ],
        "causedBy": {
          "exceptionType": "java.lang.ClassCastException",
          "message": "org.eclipse.core.internal.plugins.FragmentDescriptor",
          "elements": [
            {
              "method": "org.eclipse.core.runtime.model.ExtensionModel.getParentPluginDescriptor",
              "source": "ExtensionModel.java:72"
            },
            {
              "method": "org.eclipse.core.internal.plugins.Extension.getDeclaringPluginDescriptor",
              "source": "Extension.java:34"
            },
            {
              "method": "org.eclipse.core.internal.plugins.ConfigurationElement.getValue",
              "source": "ConfigurationElement.java:152"
            },
            {
              "method": "org.eclipse.core.internal.plugins.RegistryCacheWriter.writeConfigurationElement",
              "source": "RegistryCacheWriter.java:98"
            },
            {
              "method": "org.eclipse.core.internal.plugins.RegistryCacheWriter.writeConfigurationElement",
              "source": "RegistryCacheWriter.java:117"
            },
            {
              "method": "org.eclipse.core.internal.plugins.RegistryCacheWriter.writeExtension",
              "source": "RegistryCacheWriter.java:206"
            },
            {
              "method": "org.eclipse.core.internal.plugins.RegistryCacheWriter.writePluginFragment",
              "source": "RegistryCacheWriter.java:558"
            },
            {
              "method": "org.eclipse.core.internal.plugins.RegistryCacheWriter.writePluginRegistry",
              "source": "RegistryCacheWriter.java:666"
            },
            {
              "method": "org.eclipse.core.internal.plugins.PluginRegistry.saveRegistry",
              "source": "PluginRegistry.java:216"
            },
            {
              "method": "org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown",
              "source": "InternalPlatform.java:519"
            }
          ],
          "number": 0,
          "commentIndex": 0
        },
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 10,
      "bugId": "33395",
      "date": "2003-02-27T15:53:17+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "critical"
    }
  ],
  "groupId": "33395",
  "bugId": "33395",
  "date": "2003-02-26T23:18:32+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "critical"
}