{
  "comments": [
    "3.1M7\n\nWhen creating supertype hierarchy for a source class with target JDK1.5, and \nall the standard jars are present in the region, the following exception is \nthrown. A debug session showed that the class enclosingType() fails on is\njava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.\nThe jars list is this:\nrt.jar, jsse.jar, jce.jar, charsets.jar, dnsns.jar, localedata.jar, \nsunjce_provider.jar, sunpkcs11.jar\n\n\njava.lang.NullPointerException\n\tat \norg.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.enclosingType\n(ParameterizedTypeBinding.java:221)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createRawType\n(LookupEnvironment.java:497)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.swapUnresolved\n(ParameterizedTypeBinding.java:796)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.setResolvedT\nype(UnresolvedReferenceBinding.java:75)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom\n(LookupEnvironment.java:405)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType\n(LookupEnvironment.java:170)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType\n(LookupEnvironment.java:157)\n\tat org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve\n(HierarchyResolver.java:618)\n\tat \norg.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.createTypeHi\nerarchyBasedOnRegion(RegionBasedHierarchyBuilder.java:87)\n\tat \norg.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build\n(RegionBasedHierarchyBuilder.java:57)\n\tat \norg.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute\n(RegionBasedTypeHierarchy.java:74)\n\tat org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh\n(TypeHierarchy.java:1244)\n\tat \norg.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation\n(CreateTypeHierarchyOperation.java:90)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run\n(JavaModelOperation.java:718)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation\n(JavaModelOperation.java:777)\n\tat org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy\n(JavaProject.java:2510)\n\tat org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy\n(JavaProject.java:2488)\n...",
    "Maxime - pls try to reproduce in latest.",
    "Alexander, could you please tell me more about the conditions in which the\nexception was encountered? Naive tests show it neither on M7 nor on 3.1. (BTW,\nthe 3.1 source code cannot throw the same exception at the same point, but the\nsame circumstances could possibly yield another abnormal condition.)",
    "Sure. The code is this:\n\t\tITypeHierarchy result \u003d null;\n\t\ttry {\n\t\t\tIRegion region \u003d createSearchRegion(type, options);\n\t\t\tresult \u003d type.getJavaProject().newTypeHierarchy(type, \nregion, monitor);\t\n\t\t} catch (JavaModelException e){\n\t\t\te.printStackTrace();\n\t\t\tresult \u003d null;\t\n\t\t}\n\t\treturn result;\n\nwhere createSearchRegion collects all the package fragment roots available to \nthe project:\n\n\t\tIPackageFragmentRoot[] allRoots \u003d null;\n\t\ttry {\n\t\t\t allRoots \u003d project.getAllPackageFragmentRoots();\n\t\t} catch (JavaModelException e){\n\t\t\treturn;\n\t\t}\n\t\tif (allRoots \u003d\u003d null){\n\t\t\treturn;\t\n\t\t}\n\t\t\n\t\tfor (int i \u003d 0; i \u003c allRoots.length; i++){\n\t\t\tIPackageFragmentRoot nextRoot \u003d allRoots[i];\n\t\t\tif (pakkageName \u003d\u003d null){\n\t\t\t\tresult.add(nextRoot);\n\t\t\t} else {\n\t\t\t\tIPackageFragment nextFragment \u003d \nnextRoot.getPackageFragment(pakkageName);\n\t\t\t\tif (nextFragment.exists()){\n\t\t\t\t\tresult.add(nextFragment);\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\nso that the region contains the project source root and the jar libraries \nmentioned above.",
    "The bug is not repeatable on RC3 but if my code is helpful in diagnosing this \nor other ones, I\u0027d be glad.",
    "Closing as worksforme in 3.1.0"
  ],
  "commentCreationDates": [
    "2005-06-22T09:43:16+02:00",
    "2005-06-22T10:41:40+02:00",
    "2005-06-29T15:40:59+02:00",
    "2005-07-04T09:42:08+02:00",
    "2005-07-04T10:18:59+02:00",
    "2005-07-19T16:41:00+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.enclosingType",
          "source": "ParameterizedTypeBinding.java:221"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createRawType",
          "source": "LookupEnvironment.java:497"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.swapUnresolved",
          "source": "ParameterizedTypeBinding.java:796"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.setResolvedType",
          "source": "UnresolvedReferenceBinding.java:75"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:405"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType",
          "source": "LookupEnvironment.java:170"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType",
          "source": "LookupEnvironment.java:157"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve",
          "source": "HierarchyResolver.java:618"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.createTypeHierarchyBasedOnRegion",
          "source": "RegionBasedHierarchyBuilder.java:87"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build",
          "source": "RegionBasedHierarchyBuilder.java:57"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute",
          "source": "RegionBasedTypeHierarchy.java:74"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh",
          "source": "TypeHierarchy.java:1244"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation",
          "source": "CreateTypeHierarchyOperation.java:90"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:718"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:777"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy",
          "source": "JavaProject.java:2510"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy",
          "source": "JavaProject.java:2488"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "101200",
      "date": "2005-06-22T09:43:16+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "101200",
  "bugId": "101200",
  "date": "2005-06-22T09:43:16+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}