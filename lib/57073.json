{
  "comments": [
    "Parasoft Jtest 5.0 is a product built on top of Eclipse 2.1, but does not work \non Eclipse 3.0.  It gives a NoClassDefFoundError.\n\nI determined the cause of the error by building a simple plugin which mimicks \nthe same behavior: NoClassDefFoundError in Eclipse 3.0 M8, but works fine in \nEclipse 2.1.3.\n\nPlug-in \"playref\" is an otherwise empty plugin which has this as its \nplugin.xml:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cplugin\n   id\u003d\"playref\"\n   name\u003d\"Playref Plug-in\"\n   version\u003d\"1.0.0\"\n   provider-name\u003d\"\"\n   class\u003d\"play_ref.Play_refPlugin\"\u003e\n   \u003cruntime\u003e\n      \u003clibrary name\u003d\"play_ref.jar\"\u003e\n         \u003cexport name\u003d\"*\"/\u003e\n      \u003c/library\u003e\n      \u003clibrary name\u003d\"hello.jar\"\u003e\n         \u003cexport name\u003d\"*\"/\u003e\n      \u003c/library\u003e\n   \u003c/runtime\u003e\n   \u003crequires\u003e\n      \u003cimport plugin\u003d\"org.eclipse.ui\"/\u003e\n   \u003c/requires\u003e\n\u003c/plugin\u003e\n\nPlug-in fragment \"playreffrag\" has hello.jar in its root directory, and has \nthis as its fragment.xml:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cfragment\n   id\u003d\"playreffrag\"\n   name\u003d\"Playreffrag Fragment\"\n   version\u003d\"1.0.0\"\n   provider-name\u003d\"\"\n   plugin-id\u003d\"playref\"\n   plugin-version\u003d\"1.0.0\"\u003e\nruntime\u003e\n      \u003clibrary name\u003d\"play_ref_frag.jar\"\u003e\n         \u003cexport name\u003d\"*\"/\u003e\n      \u003c/library\u003e\n   \u003c/runtime\u003e\n\u003c/fragment\u003e\n\nhello.jar has one class Hello.class whose source is below:\n\npackage hello;\npublic class Hello {\n    public void hello() {\n        System.out.println(\"Hello, World!\");\n    }\n}\n\nPlug-in \"play\" was created using the \"Hello, World\" plug-in template.  I added \nthis code to the run(IAction) method:\n\n        new Hello().hello();\n\nand this to the plugin.xml:\n\n      \u003cimport plugin\u003d\"playref\"/\u003e\n\nWhen run in Eclipse 3.0 M8 with all three plugins checked, it gives this error:\n\njava.lang.NoClassDefFoundError: hello/Hello\n\tat play.actions.SampleAction.run(SampleAction.java:38)\n\nWhen the same thing is run in Eclipse 2.1.3, it behaves correctly and prints \nthis to the console:\n\nHello, World!\n\nThe work-around is to add this to the fragment.xml:\n\n      \u003clibrary name\u003d\"hello.jar\"\u003e\n         \u003cexport name\u003d\"*\"/\u003e\n      \u003c/library\u003e",
    "Moving to Equinox for comment.\n\nDid we used to give people certain behaviour for free when the library was\ndeclared in the plugin.xml but supplied by the fragment?",
    "this is a know issue with plugins which have classpath entries but do not \ncontain the code. (that\u0027s how I have interpreted the example).  SWT is a \nsimilar usecase.  The Elcipse runtime automatically generated manifest.mf files \nbased on the plugin.xml file for a *given* plugin.  That is, it works on a \nplugin at a time.  This generation needs to analyze the code jars to identify \nall packages being supplied in the pluing.\n\nIn this case the plugin declares a classpath entry but not the jar so there is \nnothing to analyze.  As a result, the generated manifest.mf does not expose any \npackages to the outside world.\n\nThere is nothing that can be done about this in the 3.0 time frame.  The work \naround for plugins/fragments experiencing this problem is to include the \nappropriate manifest.mf in the host and fragment plugins.\n\nLeaving this open to review/improve the porting guide to highlight this case.",
    "The porting guide has been updated accordingly."
  ],
  "commentCreationDates": [
    "2004-04-01T19:58:08+02:00",
    "2004-04-01T20:42:36+02:00",
    "2004-04-01T21:08:29+02:00",
    "2004-04-20T04:36:00+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "hello/Hello",
      "elements": [
        {
          "method": "play.actions.SampleAction.run",
          "source": "SampleAction.java:38"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "57073",
      "date": "2004-04-01T19:58:08+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "57073",
  "bugId": "57073",
  "date": "2004-04-01T19:58:08+02:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}