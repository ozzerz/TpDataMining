{
  "comments": [
    "Tried to refresh a bundle (bundle 3: org.eclipse.core.runtime.osgi). Got an\nArrayIndexOutOfBoundsException. Will attach a patch that intends to fix the problem.\n\njava.lang.ArrayIndexOutOfBoundsException: 70 \u003e\u003d 70\n\tat java.util.Vector.elementAt(Vector.java:431)\n\tat\norg.eclipse.osgi.framework.internal.core.ExportedBundle.getImportingBundles(ExportedBundle.java:140)\n\tat\norg.eclipse.osgi.framework.internal.core.PackageAdmin.computeAffectedBundles(PackageAdmin.java:793)\n\tat\norg.eclipse.osgi.framework.internal.core.PackageAdmin.refreshPackages(PackageAdmin.java:504)\n\tat\norg.eclipse.osgi.framework.internal.core.PackageAdmin$1.run(PackageAdmin.java:435)\n\tat java.lang.Thread.run(Thread.java:534)",
    "Created an attachment (id\u003d6496)\nFix for ExportedPackage\n",
    "What is the \norg.eclipse.osgi.framework.internal.core.PackageAdmin.computeAffectedBundles() \nmethod?  Is this from the resolver prototype?  The problem with the code is we \nhave two objects we are synchronizing on and we compute the size of our array \nbefore we synchronize on either of the two objects.\n\nA separate single lock object needs to be used in place of the other two \nobjects (boundFragments and boundLoaders) that are currently used to lock on.  \nThe \"this\" object is probably the best choice to lock on.\n\nWe may have a similar bug in ExportedPackage although that class only has one \nobject that it locks on but the size of the array is computed outside of the \nsync block which could cause an out of bounds exception.",
    "The other problem is an indexing problem that the patch addresses.  I will \nupdate the code accordingly.",
    "A fix has been integrated for ExportedBundle."
  ],
  "commentCreationDates": [
    "2003-10-20T19:27:32+02:00",
    "2003-10-20T19:28:16+02:00",
    "2003-10-20T19:55:08+02:00",
    "2003-10-20T20:05:04+02:00",
    "2003-10-20T20:43:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "70 \u003e\u003d 70",
      "elements": [
        {
          "method": "java.util.Vector.elementAt",
          "source": "Vector.java:431"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.ExportedBundle.getImportingBundles",
          "source": "ExportedBundle.java:140"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdmin.computeAffectedBundles",
          "source": "PackageAdmin.java:793"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdmin.refreshPackages",
          "source": "PackageAdmin.java:504"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdmin$1.run",
          "source": "PackageAdmin.java:435"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "45225",
      "date": "2003-10-20T19:27:32+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "45225",
  "bugId": "45225",
  "date": "2003-10-20T19:27:32+02:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}