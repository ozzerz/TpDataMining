{
  "comments": [
    "The problem is found by the example in Listing 5.15 from Laddad\u0027s AspectJ in\nAction book. It looks like an exception object in after() throwing(Throwable ex)\nadvice has a problem being converted to string in a _logger.logp() call.\n\nEnvironment\n-----------\nOS:\nSolaris 8 kernel patch level 108528-27 plus j2se recommended patches\n\nJava version:\njava -version\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2-b28)\nJava HotSpot(TM) Client VM (build 1.4.2-b28, mixed mode)\n\nThe problem has also been reproduced with AspectJ 1.1.1 on Windows 2000\n5.00.2195, SP 4.\n\nDescription\n-----------\najc aborts with the following output:\n\ntrouble in: \npublic class TestException extends java.lang.Object:\n  public static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0\n  public static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1\n  public void \u003cinit\u003e():\n                    ALOAD_0     // TestException this   (line 1)\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n    constructor-execution(void TestException.\u003cinit\u003e())\n    |               RETURN\n    constructor-execution(void TestException.\u003cinit\u003e())\n  end public void \u003cinit\u003e()\n\n  public static void main(String[]):\n    method-execution(void TestException.main(java.lang.String[]))\n    | method-call(void TestException.perform())\n    | | catch java.lang.Throwable -\u003e E0\n    | | |           INVOKESTATIC TestException.perform ()V   (line 4)\n    | | catch java.lang.Throwable -\u003e E0\n    | |             GOTO L0\n    | |         E0: ASTORE_1\n    | |             INVOKESTATIC ExceptionLoggerAspectV2.aspectOf\n()LExceptionLoggerAspectV2;\n    | |             ALOAD_1\n    | |             GETSTATIC TestException.ajc$tjp_0\nLorg/aspectj/lang/JoinPoint$StaticPart;\n    | |             INVOKEVIRTUAL\nExceptionLoggerAspectV2.ajc$after$ExceptionLoggerAspectV2$14a\n(Ljava/lang/Throwable;Lorg/aspectj/lang/JoinPoint$StaticPart;)V\n    | |             ALOAD_1\n    | |             ATHROW\n    | |         L0: NOP\n    | |             ACONST_NULL\n    | |             ASTORE_2\n    | |             INVOKESTATIC ExceptionLoggerAspectV2.aspectOf\n()LExceptionLoggerAspectV2;\n    | |             ALOAD_2\n    | |             CHECKCAST java.lang.Throwable\n    | |             GETSTATIC TestException.ajc$tjp_0\nLorg/aspectj/lang/JoinPoint$StaticPart;\n    | |             INVOKEVIRTUAL\nExceptionLoggerAspectV2.ajc$after$ExceptionLoggerAspectV2$14a\n(Ljava/lang/Throwable;Lorg/aspectj/lang/JoinPoint$StaticPart;)V\n    | |             NOP\n    | method-call(void TestException.perform())\n    |               RETURN   (line 5)\n    method-execution(void TestException.main(java.lang.String[]))\n  end public static void main(String[])\n\n  public static void perform():\n    method-execution(void TestException.perform())\n    |               ACONST_NULL   (line 8)\n    |               ASTORE_0\n    |               ALOAD_0     // java.lang.Object nullObj   (line 9)\n    | method-call(java.lang.String java.lang.Object.toString())\n    | | catch java.lang.Throwable -\u003e E0\n    | | |           INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;\n    | | catch java.lang.Throwable -\u003e E0\n    | |             GOTO L0\n    | |         E0: ASTORE_1\n    | |             INVOKESTATIC ExceptionLoggerAspectV2.aspectOf\n()LExceptionLoggerAspectV2;\n    | |             ALOAD_1\n    | |             GETSTATIC TestException.ajc$tjp_1\nLorg/aspectj/lang/JoinPoint$StaticPart;\n    | |             INVOKEVIRTUAL\nExceptionLoggerAspectV2.ajc$after$ExceptionLoggerAspectV2$14a\n(Ljava/lang/Throwable;Lorg/aspectj/lang/JoinPoint$StaticPart;)V\n    | |             ALOAD_1\n    | |             ATHROW\n    | |         L0: NOP\n    | method-call(java.lang.String java.lang.Object.toString())\n    |               POP\n    |               RETURN   (line 10)\n    method-execution(void TestException.perform())\n  end public static void perform()\nend public class TestException\nABORT\nException thrown from AspectJ 1.1.1\n\nThis might be logged as a bug already -- find current bugs at\n  http://bugs.eclipse.org/bugs/buglist.cgi?product\u003dAspectJ\u0026component\u003dCompiler\n\nBugs for exceptions thrown have titles File:line from the top stack, \ne.g., \"SomeFile.java:243\"\n\nIf you don\u0027t find the exception below in a bug, please add a new bug\nat http://bugs.eclipse.org/bugs/enter_bug.cgi?product\u003dAspectJ\nTo make the bug a priority, please include a test program\nthat can reproduce this exception.\ncan\u0027t convert from java.lang.String to java.lang.Throwable\ncan\u0027t convert from java.lang.String to java.lang.Throwable\norg.aspectj.weaver.BCException: can\u0027t convert from java.lang.String to\njava.lang.Throwable\n        at org.aspectj.weaver.bcel.Utility.appendConversion(Utility.java:203)\n        at org.aspectj.weaver.bcel.BcelVar.appendLoadAndConvert(BcelVar.java:57)\n        at org.aspectj.weaver.bcel.BcelAdvice.getAdviceArgSetup(BcelAdvice.java:287)\n        at\norg.aspectj.weaver.bcel.BcelAdvice.getAdviceInstructions(BcelAdvice.java:244)\n        at\norg.aspectj.weaver.bcel.BcelShadow.weaveAfterReturning(BcelShadow.java:986)\n        at org.aspectj.weaver.bcel.BcelShadow.weaveAfter(BcelShadow.java:941)\n        at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:126)\n        at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:341)\n        at org.aspectj.weaver.Shadow.implement(Shadow.java:313)\n        at\norg.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1006)\n        at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:299)\n        at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:77)\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:417)\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:390)\n        at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:327)\n        at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles(AjBuildManager.java:256)\n        at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:156)\n        at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:70)\n        at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)\n        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)\n        at org.aspectj.tools.ajc.Main.run(Main.java:217)\n        at org.aspectj.tools.ajc.Main.runMain(Main.java:155)\n        at org.aspectj.tools.ajc.Main.main(Main.java:72)\n\n\n1 fail|abort\n\nSample code is two files, TextException.java and ExceptionLoggerAspectV2.java\n(see below). To reproduce the problem, do\n\n$ ajc *.java\n\nFile 1  - TestException.java\n----------------------------\npublic class TestException \n{\n    public static void main(String[] args) {\n        perform();\n    }\n\n    public static void perform() {\n        Object nullObj \u003d null;\n        nullObj.toString();\n    }\n}\n\nFile 2 - ExceptionLoggerAspectV2.java\n-------------------------------------\nimport java.util.logging.*;\nimport org.aspectj.lang.*;\n\npublic aspect ExceptionLoggerAspectV2 \n{\n    Logger _logger \u003d Logger.getLogger(\"exceptions\");\n\n    ExceptionLoggerAspectV2() {\n        _logger.setLevel(Level.ALL);\n    }\n\n    pointcut exceptionLogMethods()\n        : call(* *.*(..)) \u0026\u0026 !within(ExceptionLoggerAspectV2);\n\n    after() thowing(Throwable ex) : exceptionLogMethods() {\n        if (_logger.isLoggable(Level.WARNING)) {\n            Signature sig \u003d thisJoinPointStaticPart.getSignature();\n            _logger.logp(Level.WARNING,\n                         sig.getDeclaringType().getName(),\n                         sig.getName(),\n                         \"Exception logger aspect\", ex);\n        }\n    }\n}",
    "The reason for the compiler failure is a transcription error in the program:\n\n    after() thowing(Throwable ex) : exceptionLogMethods() {\n\nshould be\n\n    after() throwing(Throwable ex) : exceptionLogMethods() {\n\n(there is an \u0027r\u0027 missing int throwing). However the compiler should issue a \nsyntax error rather than aborting.\n\n",
    "Fixed to produce nice parser error message based on patch from Matthew Webster."
  ],
  "commentCreationDates": [
    "2004-01-07T17:31:34+01:00",
    "2004-01-08T15:18:30+01:00",
    "2004-01-09T09:27:04+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "message": "can\u0027t convert from java.lang.String to java.lang.Throwable",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.Utility.appendConversion",
          "source": "Utility.java:203"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelVar.appendLoadAndConvert",
          "source": "BcelVar.java:57"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.getAdviceArgSetup",
          "source": "BcelAdvice.java:287"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.getAdviceInstructions",
          "source": "BcelAdvice.java:244"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAfterReturning",
          "source": "BcelShadow.java:986"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAfter",
          "source": "BcelShadow.java:941"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.implementOn",
          "source": "BcelAdvice.java:126"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implementMungers",
          "source": "Shadow.java:341"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:313"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:1006"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:299"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:77"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:417"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:390"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:327"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles",
          "source": "AjBuildManager.java:256"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:156"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:70"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:99"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:53"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:217"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:155"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:72"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "49638",
      "date": "2004-01-07T17:31:34+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "49638",
  "bugId": "49638",
  "date": "2004-01-07T17:31:34+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}