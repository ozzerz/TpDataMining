{
  "comments": [
    "When VerifyListener is added in org.eclipse.swt.widgets.Text, StringIndexOutOfBoundsException might be occurred by UNDO operation.\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: 10\n\tat java.lang.String.\u003cinit\u003e(String.java:220)\n\tat org.eclipse.swt.internal.win32.TCHAR.toString(TCHAR.java:115)\n\tat org.eclipse.swt.widgets.Text.wmClipboard(Text.java:2004)\n\tat org.eclipse.swt.widgets.Text.windowProc(Text.java:1772)\n\nWhen a new text is taken out, it processes it within the range of the selection of the previous state of UNDO.  \nTherefore, the exception is generated. \n\nif (length !\u003d 0 \u0026\u0026 start [0] !\u003d end [0]) {\n                   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\tTCHAR buffer \u003d new TCHAR (getCodePage (), length + 1);\n\tOS.GetWindowText (handle, buffer, length + 1);\n\tnewText \u003d buffer.toString (start [0], end [0] - start [0]);\n\t                           \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n} else {\n\tnewText \u003d \"\";\n}\n\nIt is necessary to keep the following. \n\nint [] newStart \u003d new int [1], newEnd \u003d new int [1];\nOS.SendMessage (handle, OS.EM_GETSEL, newStart, newEnd);\nif (length !\u003d 0 \u0026\u0026 newStart [0] !\u003d newEnd [0]) {\n                   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\tTCHAR buffer \u003d new TCHAR (getCodePage (), length + 1);\n\tOS.GetWindowText (handle, buffer, length + 1);\n\tnewText \u003d buffer.toString (newStart [0], newEnd [0] - newStart [0]);\n                                   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n} else {\n\tnewText \u003d \"\";\n}",
    "The same problem exists in Combo class and Spinner class. ",
    "Fixed \u003e 20060224\n\nGreat catch!  Thanks for reporting this bug."
  ],
  "commentCreationDates": [
    "2006-02-23T09:38:16+01:00",
    "2006-02-23T09:47:25+01:00",
    "2006-02-24T17:34:01+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: 10",
      "elements": [
        {
          "method": "java.lang.String.\u003cinit\u003e",
          "source": "String.java:220"
        },
        {
          "method": "org.eclipse.swt.internal.win32.TCHAR.toString",
          "source": "TCHAR.java:115"
        },
        {
          "method": "org.eclipse.swt.widgets.Text.wmClipboard",
          "source": "Text.java:2004"
        },
        {
          "method": "org.eclipse.swt.widgets.Text.windowProc",
          "source": "Text.java:1772"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "129126",
      "date": "2006-02-23T09:38:16+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "129126",
  "bugId": "129126",
  "date": "2006-02-23T09:38:16+01:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}