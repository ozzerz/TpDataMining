{
  "comments": [
    "I\u0027m using ajdt 1.1.4 with eclipse 2.1.2 on Win/XP + j2sdk1.4.2 + Turkish \nLocale.\nWhen I try to build project files I\u0027m, constantly, getting\n\"ClassGen exception: Illegal Opcode Detected\" error. I tried to use 1.1.3 \nversion but noavail.\nThis error is also reprodicable with command line compiler. \nYou can use the \"Hello world\" example from Laddad\u0027s books to reproduce the \nerror.\n\nPS. When I switch the locale of my machine to English everything is ok. \n\nPPS. Usually I encounter problems with locale if developer makes character \ncase conversion (esp i, I) without specifying Locale.US but assuming that is \nthe case. Because in turkish locale \"I\".toLowerCase() !\u003d \"i\" and \nalso \"i\".toUpperCase() !\u003d \"I\"\n\nbelow the error produced by command line compiler:\n\nIllegal opcode detected.\nIllegal opcode detected.\norg.apache.bcel.generic.ClassGenException: Illegal opcode detected.\n\tat org.apache.bcel.generic.Instruction.readInstruction\n(Instruction.java:189)\n\tat org.apache.bcel.generic.InstructionList.\u003cinit\u003e\n(InstructionList.java:193)\n\tat org.apache.bcel.generic.MethodGen.\u003cinit\u003e(MethodGen.java:165)\n\tat org.aspectj.weaver.bcel.LazyMethodGen.\u003cinit\u003e(LazyMethodGen.java:141)\n\tat org.aspectj.weaver.bcel.LazyClassGen.\u003cinit\u003e(LazyClassGen.java:110)\n\tat org.aspectj.weaver.bcel.BcelObjectType.getLazyClassGen\n(BcelObjectType.java:248)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:359)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:335)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:261)\n\tat \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFile\ns(AjBuildManager.java:256)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:164)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBuildManager.java:78)\n\tat org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:106)\n\tat org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)\n\tat org.aspectj.tools.ajc.Main.run(Main.java:217)\n\tat org.aspectj.tools.ajc.Main.runMain(Main.java:155)\n\tat org.aspectj.tools.ajc.Main.main(Main.java:72)\n\n\n1 fail|abort, 1 warning",
    "Moved to AspectJ project.",
    "Okay, this sure looks like a BCEL error.  Looking at \n\n    org.apache.bcel.generic.Instruction.className(short)\n\nthey definitely use toUpperCase(), which was very helpfully\nsuggested as a problem call in the Turkish locale.  \n\n(as a side note, BCEL is using _reflection_ to instantiate\nits bytecode operations!  What the hell happened to programmers\u0027\nbrains?  Because reflection is available they should use it\ninstead of a dispatch table with EXTREMELY well-specified\nentries?  It took _effort_ to be that lazy!  I wouldn\u0027t even\nuse eval to accomplish this task in Scheme!  Okay, rant over)\n\nWe may have to check in our own patched version of BCEL to\nhandle this problem.  I\u0027m investigating whether the BCEL\nfolks know about this problem.  Leaving as P2; we should\ndefinitely fix this before 1.2.\n\nThanks very much to Umit Vardar for the bug report.\n\n-erik",
    "Submitted the bug to BCEL folks yesterday, and a test case (for BCEL) today:\n\nimport java.io.IOException;\nimport java.util.Locale;\n\nimport org.apache.bcel.generic.Instruction;\nimport org.apache.bcel.util.ByteSequence;\n\npublic class LocaleTest {\n\tpublic static void main(String[] args) throws IOException {\n\t\tprintBipush();\n\t\tLocale.setDefault(new Locale(\"tr\"));\n\t\tprintBipush();  // this throws an exception!\n\t}\n\t\n\tstatic void printBipush() throws IOException {\n\t\tInstruction ix \u003d Instruction.readInstruction(\n\t\t\tnew ByteSequence(new byte[] { \n\t\t\t\t(byte)16, // bipush \n\t\t\t\t(byte) 3  // data for bipush\n\t\t\t\t}));\n\t\tSystem.err.println(ix);\n\t}\n}\n\nI\u0027m going to give the BCEL folks a week to address the issue\nbefore exploring whether we need to include a patched BCEL\nversion. \n\nI couldn\u0027t find a way to pass a locale specification to _our_\ncommand-line compiler, so I don\u0027t have a test case for this\nbug checked into our tree.  \n\nAs a side note, the workaround for this problem is to avoid\nwriting programs that use the bytecodes:\n\nbipush, sipush, iload*, istore*, iinc, if*, put/getstatic,\nput/getfield, invoke*, instanceof, multianewarray\n\nso as long as you\u0027re not using integers, bytes, shorts, or \nconditionals, fields, or methods, this problem won\u0027t affect \nyou at all. *grin*.",
    "Okay, this is now fixed, and we\u0027re now using a patched version of BCEL\nfor our project.  BCEL folks were no help, but I contributed\nthe fix I used as a patch to their bug system.  \nTest case also checked in.",
    "updating target flag to indicate inclusion in 1.2 release."
  ],
  "commentCreationDates": [
    "2003-09-27T16:31:28+02:00",
    "2003-09-30T06:00:01+02:00",
    "2003-11-17T23:10:04+01:00",
    "2003-11-19T21:39:09+01:00",
    "2004-01-29T12:33:19+01:00",
    "2004-03-19T14:48:09+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.apache.bcel.generic.ClassGenException",
      "message": "Illegal opcode detected.",
      "elements": [
        {
          "method": "org.apache.bcel.generic.Instruction.readInstruction",
          "source": "Instruction.java:189"
        },
        {
          "method": "org.apache.bcel.generic.InstructionList.\u003cinit\u003e",
          "source": "InstructionList.java:193"
        },
        {
          "method": "org.apache.bcel.generic.MethodGen.\u003cinit\u003e",
          "source": "MethodGen.java:165"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyMethodGen.\u003cinit\u003e",
          "source": "LazyMethodGen.java:141"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyClassGen.\u003cinit\u003e",
          "source": "LazyClassGen.java:110"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelObjectType.getLazyClassGen",
          "source": "BcelObjectType.java:248"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:359"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:335"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:261"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles",
          "source": "AjBuildManager.java:256"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:164"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:78"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:106"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:60"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:217"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:155"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:72"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "43792",
      "date": "2003-09-27T16:31:28+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    }
  ],
  "groupId": "43792",
  "bugId": "43792",
  "date": "2003-09-27T16:31:28+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "blocker"
}