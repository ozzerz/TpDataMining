{
  "comments": [
    "It used to happen only sporadically, but now it happens during every compile.  Every time I save a file or do a refresh or project-clean.\n\nI managed to get it to stop by changing the return type of an abstract method in the base class and the corresponding override in the class mentioned in the stacktrace.  The original return type was Table\u003c?,?\u003e[]  (an array of instances of a class with two type parameters).  The workaround type is List\u003cTable\u003c?,?\u003e\u003e.  The function I had to change is *not* the function that is mentioned in the stacktrace, btw.\n\nHappened on amd64 (java 1.6.0-rc-b100) and ia32 (java 1.6.0_03-b05).  Compiler compliance level is set to 5.0.\n\norg.aspectj.weaver.BCException\nat org.aspectj.weaver.UnresolvedType.signatureToName(UnresolvedType.java:729)\nat org.aspectj.weaver.UnresolvedType.getName(UnresolvedType.java:472)\nat org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.java:309)\nat org.aspectj.weaver.World.resolveToReferenceType(World.java:378)\nat org.aspectj.weaver.World.resolve(World.java:271)\nat org.aspectj.weaver.World.resolve(World.java:191)\nat org.aspectj.weaver. ...                     RETURN   (line 99)\n  end protected void stopPartitionBackup()\n\nend public class com.vulcan.everest.store.partition.Partitionstore",
    "passing over to compiler",
    "I am trying to recreate this so I can fix it - but my very very simple attempt at your scenario is working:\n\n\npublic class Tricky {\n  Table\u003c?,?\u003e[] m() { return null; }\n}\n\nclass SubTricky extends Tricky {\n  Table\u003c?,?\u003e[] m() { return null; }\n}\n\nclass Table\u003cA,B\u003e {}\n\naspect X {\n  before(): execution(* *(..)) {}\n}\n\nthat just compiles fine...  Is there something else you can mention about your scenario that is different to my test program?"
  ],
  "commentCreationDates": [
    "2007-11-01T22:17:22+01:00",
    "2007-11-02T15:21:49+01:00",
    "2007-11-08T08:54:10+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "elements": [
        {
          "method": "org.aspectj.weaver.UnresolvedType.signatureToName",
          "source": "UnresolvedType.java:729"
        },
        {
          "method": "org.aspectj.weaver.UnresolvedType.getName",
          "source": "UnresolvedType.java:472"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWorld.resolveDelegate",
          "source": "BcelWorld.java:309"
        },
        {
          "method": "org.aspectj.weaver.World.resolveToReferenceType",
          "source": "World.java:378"
        },
        {
          "method": "org.aspectj.weaver.World.resolve",
          "source": "World.java:271"
        },
        {
          "method": "org.aspectj.weaver.World.resolve",
          "source": "World.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "208486",
      "date": "2007-11-01T22:17:22+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "208486",
  "bugId": "208486",
  "date": "2007-11-01T22:17:22+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}