{
  "comments": [
    "Lower the debug timeout (I used 700-1000 ms) and try to debug the inner \nworkbench. Usually you see a timeout exception in the eclipse terminal window \nduring even before the inner workbench starts, but sometimes the timeout \nhappens when you hit a breakpoint. The result is always that the inner \nworkbench hangs, and the Java threads in the debug view can only be removed by \nselecting \"terminate and remove\" from the pop-up menu.\n\nThis is the stack trace you see in the terminal window for the timeout while \nstarting up:\n\norg.eclipse.jdi.TimeoutException\n\tat org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply\n(PacketReceiveManager.java:127)\n\tat org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply\n(PacketReceiveManager.java:137)\n\tat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:168)\n\tat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:186)\n\tat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:201)\n\tat org.eclipse.jdi.internal.ObjectReferenceImpl.isCollected\n(ObjectReferenceImpl.java:386)\n\tat \norg.eclipse.jdt.internal.debug.core.model.JDIDebugTarget$ThreadStartHandler.hand\nleEvent(JDIDebugTarget.java:1599)\n\tat org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch\n(EventDispatcher.java:129)\n\tat org.eclipse.jdt.internal.debug.core.EventDispatcher.run\n(EventDispatcher.java:202)\n\tat java.lang.Thread.run(Thread.java:498)",
    "If you lower the timeout such that the debugger cannot reliably communicate \nwith the VM, there\u0027s not much we can do for you.\n\nThe purpose of allowing the user to change those timeouts is really to allow \npeople to *increase* them. To properly enforce this, I suggest that we change \nthe text fields to not allow values lower than the defaults.",
    "The timeouts in the preference page can no longer be set lower than the \ndefault values.\n\nPlease verify.",
    "Limiting the debug timeout to the default value is fine with me, but for remote \ndebugging over a slow connection (which is not uncommon for embedded and \nwireless systems) the debug timeout needs to be higher.\n\nThe problem is that if a timeout occurs it is not handled correclt. The user \nends up with a hanging Java debug session and may have no clue what is wrong, \nunless he happens to run eclipse in a dos box/terminal window and notices the \nstack trace.\n\nThe TimeoutException should be caught in the PacketReceiveHandler, it should be \nreported to the user, and the state of the jdi debug session should change to \ndisconnected.",
    "marking as 2.1 candidate for investigation in conjunction with bug# 6211.",
    "Timouts are displayed in the UI:\n* elements display as \"\u003cnot responding\u003e\"\n* operations such as \"resume\", etc., will have error dialogs noting the timeout \nexception\n\nThe suggested workarounds in this case is to increase the timeout value. Fixing \nbug 6211, will fix the case of one connection breaking.\n\nMarking as wont fix, as we do not intend to auto-disconnect when there are \ntimeouts."
  ],
  "commentCreationDates": [
    "2002-07-04T10:35:03+02:00",
    "2002-07-08T17:27:43+02:00",
    "2002-07-08T18:39:51+02:00",
    "2002-07-08T20:21:53+02:00",
    "2002-07-30T22:39:11+02:00",
    "2002-10-07T17:46:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdi.TimeoutException",
      "elements": [
        {
          "method": "org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply",
          "source": "PacketReceiveManager.java:127"
        },
        {
          "method": "org.eclipse.jdi.internal.connect.PacketReceiveManager.getReply",
          "source": "PacketReceiveManager.java:137"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:168"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:186"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:201"
        },
        {
          "method": "org.eclipse.jdi.internal.ObjectReferenceImpl.isCollected",
          "source": "ObjectReferenceImpl.java:386"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget$ThreadStartHandler.handleEvent",
          "source": "JDIDebugTarget.java:1599"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch",
          "source": "EventDispatcher.java:129"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.EventDispatcher.run",
          "source": "EventDispatcher.java:202"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:498"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "21226",
      "date": "2002-07-04T10:35:03+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "21226",
  "bugId": "21226",
  "date": "2002-07-04T10:35:03+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}