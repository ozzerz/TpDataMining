{
  "comments": [
    "This is a regression caused by the patch to bug 62038",
    "Created an attachment (id\u003d11918)\nPatch against EditorSashContainer\n\nPatch that should add serialization of editor presentations.",
    "I tried this out, editors and views tab order seems to be being preserved.  \nthere is a case where I can get my workspace to restart in slightly different \nstate, I think it has to do with dragging the tab around.  will try more in \nthe morning.",
    "That patch was a work in progress.  As it turns out, you need to make quite a\nfew more changes.  Patch forthcoming.",
    "Created an attachment (id\u003d11966)\nPatch for org.eclipse.ui.workbench\n",
    "This one should do the trick although I\u0027m not sold on it yet.  We deviate from\nview handling in that we don\u0027t create placeholders for the editors.  The\nEditorStack can\u0027t seem to handle them.  I\u0027d like tosee if I can get the\nview/editor story more in sync.",
    "*** Bug 63523 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d12343)\nsame content, but against recent HEAD\n\nI couldn\u0027t get the patch in comment 4 to apply against the latest version of\nHEAD.  This attachment is the same content, but from the current version of\nHEAD.  I haven\u0027t even tried running it yet, so treat with caution.",
    "I\u0027ve encountered a problem running with this patch.  I\u0027m going to investigate \nbut wanted to put the error log here so it doesn\u0027t get lost.  I\u0027ve tried the \nfollowing steps both with HEAD (no problem) and with this patch on the latest \nfrom HEAD (problem).\n\n- open on a fresh workspace\n- close intro page\n- add Java perspective\n- add Debug perspective\n- resize perspective switch to smallest size (puts resource off screen, creates \na chevron)\n- use chevron to select resource perspective\n- use chevron to select java perspective\n\nHere\u0027s the error log:\n\n!ENTRY org.eclipse.ui 4 0 Jun 16, 2004 21:51:16.906\n!MESSAGE Index out of bounds\n!STACK 0\njava.lang.IllegalArgumentException: Index out of bounds\n\tat org.eclipse.swt.SWT.error(SWT.java:2677)\n\tat org.eclipse.swt.SWT.error(SWT.java:2616)\n\tat org.eclipse.swt.SWT.error(SWT.java:2587)\n\tat org.eclipse.swt.custom.CTabFolder.createItem(CTabFolder.java:573)\n\tat org.eclipse.swt.custom.CTabItem.\u003cinit\u003e(CTabItem.java:112)\n\tat org.eclipse.ui.internal.presentations.PaneFolder.createItem(PaneFolder.\njava:522)\n\tat org.eclipse.ui.internal.presentations.DefaultPartPresentation.\ncreatePartTab(DefaultPartPresentation.java:832)\n\tat org.eclipse.ui.internal.presentations.DefaultPartPresentation.\naddPart(DefaultPartPresentation.java:1022)\n\tat org.eclipse.ui.internal.presentations.DefaultPartPresentation.\nrestoreState(DefaultPartPresentation.java:390)\n\tat org.eclipse.ui.internal.presentations.PresentationFactoryUtil.\ncreatePresentation(PresentationFactoryUtil.java:52)\n\tat org.eclipse.ui.internal.PartStack.createControl(PartStack.java:364)\n\tat org.eclipse.ui.internal.PartSashContainer.\ncreateControl(PartSashContainer.java:432)\n\tat org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.\njava:155)\n\tat org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:722)\n\tat org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:\n2761)\n\tat org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.\njava:733)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:718)\n\tat org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2904)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\n\tat org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:\n2902)\n\tat org.eclipse.ui.internal.PerspectiveBarContributionItem.\nselect(PerspectiveBarContributionItem.java:106)\n\tat org.eclipse.ui.internal.PerspectiveBarManager$1.\nwidgetSelected(PerspectiveBarManager.java:134)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2732)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2398)\n\tat org.eclipse.ui.internal.PerspectiveBarManager.\nhandleChevron(PerspectiveBarManager.java:150)\n\tat org.eclipse.ui.internal.PerspectiveSwitcher$5.\nwidgetSelected(PerspectiveSwitcher.java:520)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2732)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2398)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1374)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1345)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:\n252)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.\nrun(PlatformActivator.java:334)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:\n272)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:\n128)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:638)\n\tat org.eclipse.core.launcher.Main.main(Main.java:622)\n",
    "I figured out the problem described comment 8.  In DefaultPartPresentation.\nrestoreState, there is code that puts the parts from the serializer into the \nStack.  For efficiency the original algorithm only did a remove/replace if the \nindex of the current part was different from the next insert index.  There \nshould be an extra step with the remove -- if the part is removed from before \nthe current value of insert, then insert needs to be decremented.\n\nThe code below is what I used to fix it, I\u0027ve attached it here since its easier \nto follow.  We should likely work out the more efficient algorithm before \nsubmitting though.\n\npublic void restoreState(IPresentationSerializer serializer, IMemento \nsavedState) {\n\tIMemento[] parts \u003d savedState.getChildren(IWorkbenchConstants.TAG_PART);\n\n    // otherwise remove the part and add it in the right place, reselecting \nif needed\n    IPresentablePart currentPart \u003d getCurrentPart();\n\n\t// remove all the parts that are in this serializer\n\tfor (int idx \u003d 0; idx \u003c parts.length; ++idx) {\n\t\tString id \u003d parts[idx].getString(IWorkbenchConstants.TAG_ID);\n\n\t\t// if the part is not around, then it doesn\u0027t get added  \n\t\tIPresentablePart part \u003d id \u003d\u003d null ? null : serializer.getPart(id);\n\t\tif (part !\u003d null)\n\t\t\tremovePart(part);\n\t}\n\n\t// add all the parts in the proper order\n\tint insertIndex \u003d getItemInsertionIndex();\n\tfor (int idx \u003d 0; idx \u003c parts.length; ++idx) {\n\t\tString id \u003d parts[idx].getString(IWorkbenchConstants.TAG_ID);\n\n\t\t// if the part is not around, then it doesn\u0027t get added  \n\t    IPresentablePart part \u003d id \u003d\u003d null ? null : serializer.getPart(id);\n\t    if (part !\u003d null)\n\t        addPart(part, insertIndex++);\n\t}\n\n\tif (currentPart !\u003d null)\n\t    selectPart(currentPart);\n}\n",
    "Created an attachment (id\u003d12358)\nsame as kim\u0027s patch, but with change described in comment 9\n\nThis patch is the same as kim\u0027s original, but with the efficient version of the\nfix described in comment 9.",
    "Thank you so much for your help Andrew, I really appreciate it.  I\u0027ve applied\nyour patch and I\u0027m giving it a shot now.  Unless any more problems are uncovered\nI\u0027d say we\u0027re good to go.  I dont think we need to worry /too/ much about\nefficency here - this method is only called on startup the one time (or it\nshould be, at any rate).  My only concern is that we don\u0027t activate any\nunnecessary editors.\n\nNow what I dread to think... how does this compare to the R21 presentation\nbehaviour?  The problems with bugs like this (including the fix I put in last\nnight for view ordering, Bug 65835) is that it only applies to the 3.0\npresentation... the problem may also exist for R21.",
    "As I feared, we\u0027re instantiating two editors on startup now - the first editor\nin the workbench list (the first editor opened) and the one that has focus.  I\nsuspect that this was an issue prior to this patch, however.",
    "Created an attachment (id\u003d12404)\nPatch for org.eclipse.ui.workbench\n\nAs above, but with additional comments.",
    "Whenever a perspective is activated, this code (DefaultPartPresentation.\nrestoreState) seems to be called for each view stack in the activating \nperspective.  Right now I just put a sysout at the start of the method but i\u0027ll \ninvestigate more.  I guess this is the \"strange interaction with view\" that we \ntalked about.",
    "Created an attachment (id\u003d12423)\nPatch for org.eclipse.ui.workbench\n\nPatch that fixes view ordering on perspective change.  This pushes the modified\nrestore logic into the Editor presentation and leaves the view presentation as\nit was.",
    "Fix in HEAD.",
    "Verified in 200406171600",
    "Closing to keep a tidy house.  Pardon the spam."
  ],
  "commentCreationDates": [
    "2004-05-14T07:29:19+02:00",
    "2004-06-11T00:57:30+02:00",
    "2004-06-11T03:32:28+02:00",
    "2004-06-11T21:25:01+02:00",
    "2004-06-11T21:26:07+02:00",
    "2004-06-11T21:27:14+02:00",
    "2004-06-14T19:40:58+02:00",
    "2004-06-17T01:34:11+02:00",
    "2004-06-17T03:59:47+02:00",
    "2004-06-17T04:52:39+02:00",
    "2004-06-17T05:17:05+02:00",
    "2004-06-17T15:59:39+02:00",
    "2004-06-17T16:13:58+02:00",
    "2004-06-17T19:34:49+02:00",
    "2004-06-17T20:16:32+02:00",
    "2004-06-17T21:56:26+02:00",
    "2004-06-17T21:57:35+02:00",
    "2004-06-18T00:30:38+02:00",
    "2004-07-06T15:29:44+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2677"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2616"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2587"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder.createItem",
          "source": "CTabFolder.java:573"
        },
        {
          "method": "org.eclipse.swt.custom.CTabItem.\u003cinit\u003e",
          "source": "CTabItem.java:112"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PaneFolder.createItem",
          "source": "PaneFolder. java:522"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.DefaultPartPresentation.createPartTab",
          "source": "DefaultPartPresentation.java:832"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.DefaultPartPresentation.addPart",
          "source": "DefaultPartPresentation.java:1022"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.DefaultPartPresentation.restoreState",
          "source": "DefaultPartPresentation.java:390"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PresentationFactoryUtil.createPresentation",
          "source": "PresentationFactoryUtil.java:52"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.createControl",
          "source": "PartStack.java:364"
        },
        {
          "method": "org.eclipse.ui.internal.PartSashContainer.createControl",
          "source": "PartSashContainer.java:432"
        },
        {
          "method": "org.eclipse.ui.internal.PerspectiveHelper.activate",
          "source": "PerspectiveHelper. java:155"
        },
        {
          "method": "org.eclipse.ui.internal.Perspective.onActivate",
          "source": "Perspective.java:722"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.setPerspective",
          "source": "WorkbenchPage.java: 2761"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busySetPerspective",
          "source": "WorkbenchPage. java:733"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$8",
          "source": "WorkbenchPage.java:718"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$12.run",
          "source": "WorkbenchPage.java:2904"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.setPerspective",
          "source": "WorkbenchPage.java: 2902"
        },
        {
          "method": "org.eclipse.ui.internal.PerspectiveBarContributionItem.select",
          "source": "PerspectiveBarContributionItem.java:106"
        },
        {
          "method": "org.eclipse.ui.internal.PerspectiveBarManager$1.widgetSelected",
          "source": "PerspectiveBarManager.java:134"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:89"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2732"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2398"
        },
        {
          "method": "org.eclipse.ui.internal.PerspectiveBarManager.handleChevron",
          "source": "PerspectiveBarManager.java:150"
        },
        {
          "method": "org.eclipse.ui.internal.PerspectiveSwitcher$5.widgetSelected",
          "source": "PerspectiveSwitcher.java:520"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:89"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2732"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2398"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1374"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1345"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java: 252"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:334"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java: 272"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java: 128"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:638"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:622"
        }
      ],
      "number": 0,
      "commentIndex": 8,
      "bugId": "62217",
      "date": "2004-06-17T03:59:47+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "62217",
  "bugId": "62217",
  "date": "2004-05-14T07:29:19+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}