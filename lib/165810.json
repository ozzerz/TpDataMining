{
  "comments": [
    "Hello,\n\nwhen having an advice for a pointcut expression like:\n  !execution(* *.Test.get*())\nthis leads to a strange exception when running the compiled program:\n\n\u003e java test.Test\nException in thread \"main\" java.lang.ExceptionInInitializerError\n        at test.Test.\u003cclinit\u003e(Test.java:1)\nCaused by: org.aspectj.lang.NoAspectBoundException: test_Aspect\n        at test.Aspect.aspectOf(Aspect.aj:1)\n        at test.Aspect.\u003cclinit\u003e(Aspect.aj)\n        ... 1 more\n\nIt took me a while, to figure out, that such a pointcut expression does not make sense. A sensible combination like\n  !execution(* *.Test.get*()) \u0026\u0026 execution(* *.*(..))\nworked fine.\nA compiler warning (or even an error) would be desirable when encountering advices for such pointcut expressions. The exception gave me no clue to what was causing the problem.\n\nTest case follows.\n\nRegards Ben",
    "Created an attachment (id\u003d54493)\nexample to reproduce the bug\n\nExample sources to reproduce the behaviour. Compile with \n  ajc test/*.{java,aj} \nrun with \n  java test/Test",
    "Did you try compiling it with \u0027-showWeaveInfo\u0027 - so it would tell you that it was advising many more places than you expected?",
    "\n\u003e Did you try compiling it with \u0027-showWeaveInfo\u0027 - so it would tell you that it\n\u003e was advising many more places than you expected?\nNo, this would have helped indeed.\nHowever, I consider the main issue to be, that this causes a crash when running the program. If the advice simply would have been executed a large number of times, I would have spotted the mistake much faster. \nEven now, I do not understand what caused the crash.\n\nRegards Ben"
  ],
  "commentCreationDates": [
    "2006-11-24T18:46:53+01:00",
    "2006-11-24T18:49:12+01:00",
    "2006-11-28T08:56:40+01:00",
    "2006-11-28T09:27:11+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ExceptionInInitializerError",
      "elements": [
        {
          "method": "test.Test.\u003cclinit\u003e",
          "source": "Test.java:1"
        }
      ],
      "causedBy": {
        "exceptionType": "org.aspectj.lang.NoAspectBoundException",
        "message": "test_Aspect",
        "elements": [
          {
            "method": "test.Aspect.aspectOf",
            "source": "Aspect.aj:1"
          },
          {
            "method": "test.Aspect.\u003cclinit\u003e",
            "source": "Aspect.aj"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "165810",
      "date": "2006-11-24T18:46:53+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "165810",
  "bugId": "165810",
  "date": "2006-11-24T18:46:53+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}