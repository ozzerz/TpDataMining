{
  "comments": [
    "Abort with compiler error. Could be reproduced when building project\nin AJDT as well wenn building via Ant and iajc-task.\n\nAJDT Version: 1.2.0\nBuild id: 20050217151031\nAspectJ version: 1.5.0M1\n\nEclipse 3.1M4\nBuild id: 200412162000\nstarted with -vmargs -Xmx900M\n\nProblem seems to be caused by a certain combination of\npointcuts. The order of this pointcuts seems to be important.\nThe problem first showed up in a rather large project\nbuilt with AJDT 1.2.0 and Eclipse 3.0\nSimplified testcase follows.",
    "Created an attachment (id\u003d18379)\nSimplified Testcase. Weave with BadWormhole.aj to reproduce the bug.\n\nThis Testcase was extracted out of a real world project.\nThe Advice on the concurrentUsage-pointcut in pack.BadWormhhole \ntriggers the error. (The body of the advice seems to be of no\nimportance).\nNote that concurrentUsage(Service s) uses the specific type,\nwheras the referenced pointcut isDynamicService(Main,GenericSerivce)\nuses a different type (here the supertype). Without this the crash\ndoesn\u0027t happen.\nIf there is another pointcut and advice refering to isDynamicService\n*before* concurrentUsage(Service) and this other pointcut/advice\nreferes to the original type (GenericService), then the crash\ndoesn\u0027t happen either. See GoodWormhole.aj as example.\n",
    "Sorry, forgot to post the Stack Trace:\n\nThe Exeption is:\n\n\n     [iajc] bad\n     [iajc] bad\n     [iajc] org.aspectj.weaver.BCException: bad\n     [iajc] at org.aspectj.weaver.bcel.BcelRenderer.visit(BcelRenderer.java:198)\n     [iajc] at org.aspectj.weaver.ast.Literal.accept(Literal.java:29)\n     [iajc] at org.aspectj.weaver.bcel.BcelRenderer.recur(BcelRenderer.java:145)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelRenderer.renderTest(BcelRenderer.java:111)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelAdvice.getTestInstructions(BcelAdvice.java:343)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:1605)\n     [iajc] at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:148)\n     [iajc] at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:443)\n     [iajc] at org.aspectj.weaver.Shadow.implement(Shadow.java:326)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1156)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:362)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:83)\n     [iajc] at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:740)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:705)\n     [iajc] at\norg.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:632)\n     [iajc] at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:575)\n     [iajc] at\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:239)\n     [iajc] at\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:114)\n     [iajc] at\norg.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:383)\n     [iajc] at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:671)\n     [iajc] at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:167)\n     [iajc] at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:101)\n     [iajc] at\norg.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:108)\n     [iajc] at\norg.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:59)\n     [iajc] at org.aspectj.tools.ajc.Main.run(Main.java:289)\n     [iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:226)\n     [iajc] at\norg.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1158)\n     [iajc] at\norg.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:955)\n     [iajc] at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n     [iajc] at org.apache.tools.ant.Task.perform(Task.java:364)\n     [iajc] at org.apache.tools.ant.Target.execute(Target.java:341)\n     [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369)\n     [iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1214)\n     [iajc] at\norg.eclipse.ant.internal.ui.antsupport.InternalAntRunner.run(InternalAntRunner.java:389)\n     [iajc] at\norg.eclipse.ant.internal.ui.antsupport.InternalAntRunner.main(InternalAntRunner.java:136)\nBUILD FAILED: C:\\work\\Arbeit\\BOA\\build.xml:130: fail due to BCException\n\"bad\"\"ABORT\" (1 exceptions)\n\n",
    "scheduled for investigation in aj5m3",
    "Nasty nasty one.  My simple case (based on the included example) which shows the\nproblem is:\n\n---\npackage pack;\n\naspect BadWormhole {\n\n  pointcut isDynamicService(Main mm,Service s):\n    cflowbelow(this(mm)) \u0026\u0026 if(true\u003d\u003dtrue) \u0026\u0026 this(s);\n\n  before(Service s): isDynamicService(*,s) {}\n}\n---\nif(true\u003d\u003dtrue) is there to ensure we have an if, if we used if(true) it would\nhave been optimized away.\n\nWe blow up because:\n1. cflowbelow refers to mm\n2. mm is the first parameter in the pointcut.\n3. the before advice refers to the isDynamicService() pointcut but discards\n   the first element, leaving the advice with a single parameter of type\n   \u0027Service\u0027.\n\nstill investigating...",
    "we will try to detect this situation and fail more gracefully at the least. the full solution to this requires \nchanging parameter binding which will disturb the codebase more than we really want to for 1.5.0 at this \nstage. Still with Andy...",
    "Hmmm, I must be getting smarter.  Just checked in the fix for this.  The problem\nis when trying to work out the type of the formal deep in the cflow pointcut, we\nask the advice - the advice doesnt use the first pointcut parameter (the one\nbound in the cflow) so we get the wrong type back.  (Service, when we should\nhave determined it was of type Main).  The fix is to first look at any suitable\nenclosing pointcuts and if there isn\u0027t one, *then* you ask the advice.  So in\nthis case we ask \"isDynamicService(*,s)\" for the type of its first parameter and\nit says \u0027Main\u0027.\n\nWaiting on build before closing.",
    "fix available."
  ],
  "commentCreationDates": [
    "2005-03-01T14:16:08+01:00",
    "2005-03-01T14:33:54+01:00",
    "2005-03-01T14:44:35+01:00",
    "2005-03-23T14:53:07+01:00",
    "2005-05-09T16:54:27+02:00",
    "2005-10-28T12:15:08+02:00",
    "2005-11-03T15:33:41+01:00",
    "2005-11-05T10:37:46+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "message": "bad      [iajc]",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.visit",
          "source": "BcelRenderer.java:198"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "86903",
      "date": "2005-03-01T14:44:35+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "86903",
  "bugId": "86903",
  "date": "2005-03-01T14:16:08+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}