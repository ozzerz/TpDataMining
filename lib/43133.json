{
  "comments": [
    "Not 100% sure if this pertains to aspectj or is ajdt specific, but here\u0027s the \ngist.\n\nI added some simple around() advice for an interface and, during the weave \nprocess, an NPE occurred (full trace is at the end of this report.)\n\nWhat seemed very odd is that, after trying all sorts of tweaks to the pointcut \nand method signatures to look for, it seemed to work perfectly fine when I \nchanged the around() method from this:\n\n    int around () : gameInfoStartResult() {\n        if (rand.nextInt(5) \u003d\u003d 0) {\n        \tint choice \u003d rand.nextInt(4);\n        \tSystem.out.println(\"ASPECT: Intercepted start game: \nreturning: \"+choice);\n        \tswitch (choice) {\n        \t\tcase 0: return Errors.COULD_NOT_INITIALIZE;\n        \t\tcase 1: return Errors.NOT_ENOUGH_CREDITS;\n        \t\tcase 2: return Errors.NO_FREEGAMES_LEFT;\n        \t\tcase 3: return Errors.OPPONENT_LEFT;\n        \t}\n        \treturn Errors.COULD_NOT_INITIALIZE;\n        }\n        System.out.println(\"ASPECT: Starting game normally.\");\n        return proceed();\n\n    }\n\nTo this:\n\n    int around () : gameInfoStartResult() {\n        if (rand.nextInt(5) \u003d\u003d 0) {\n            System.out.println(\"ASPECT: Simulating bad game start\");\n            return Errors.COULD_NOT_INITIALIZE;\n        }\n        System.out.println(\"ASPECT: Starting game normally.\");\n        return proceed();\n\n    }\n\nAll the statics referenced are simple ints and rand is initialized statically \nwithin the aspect.\n\nIs there something about switch() statements that aren\u0027t kosher in AspectJ?\n\nHere\u0027s the stacktrace in the log.\n\n!ENTRY org.eclipse.ajdt.ui 4 0 Sep 15, 2003 21:49:07.406\n!MESSAGE NullPointerException thrown: null\n!STACK 0\njava.lang.NullPointerException\n\tat org.aspectj.weaver.bcel.LazyMethodGen.remap(LazyMethodGen.java:892)\n\tat org.aspectj.weaver.bcel.LazyMethodGen.packBody\n(LazyMethodGen.java:800)\n\tat org.aspectj.weaver.bcel.LazyMethodGen.pack(LazyMethodGen.java:706)\n\tat org.aspectj.weaver.bcel.LazyMethodGen.getMethod\n(LazyMethodGen.java:284)\n\tat org.aspectj.weaver.bcel.LazyClassGen.writeBack\n(LazyClassGen.java:164)\n\tat org.aspectj.weaver.bcel.LazyClassGen.getJavaClass\n(LazyClassGen.java:169)\n\tat org.aspectj.weaver.bcel.BcelWeaver.dump(BcelWeaver.java:417)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:364)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:335)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:272)\n\tat \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFile\ns(AjBuildManager.java:256)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:164)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBuildManager.java:78)\n\tat org.aspectj.ajde.internal.CompilerAdapter.compile\n(CompilerAdapter.java:117)\n\tat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:164)\n\nAndy Langton",
    "This bug is due to a problem that used to exist in aspectj where any time \nadvice was inlined *and* that advice contained a switch statement, the \ncompiler would explode (around advice is inlined and contructor advice is also \ninlined).  I fixed it in aspectj a while ago, and I\u0027ve only just got round \n(sorry!) to looking at this bug.  I just tested it and it works for me.  It \nshould be working at 1.1.4 and above of AJDT."
  ],
  "commentCreationDates": [
    "2003-09-16T09:09:09+02:00",
    "2003-10-21T13:47:09+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.LazyMethodGen.remap",
          "source": "LazyMethodGen.java:892"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyMethodGen.packBody",
          "source": "LazyMethodGen.java:800"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyMethodGen.pack",
          "source": "LazyMethodGen.java:706"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyMethodGen.getMethod",
          "source": "LazyMethodGen.java:284"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyClassGen.writeBack",
          "source": "LazyClassGen.java:164"
        },
        {
          "method": "org.aspectj.weaver.bcel.LazyClassGen.getJavaClass",
          "source": "LazyClassGen.java:169"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.dump",
          "source": "BcelWeaver.java:417"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:364"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:335"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:272"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles",
          "source": "AjBuildManager.java:256"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:164"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:78"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:164"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "43133",
      "date": "2003-09-16T09:09:09+02:00",
      "product": "AJDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "43133",
  "bugId": "43133",
  "date": "2003-09-16T09:09:09+02:00",
  "product": "AJDT",
  "component": "Core",
  "severity": "normal"
}