{
  "comments": [
    "It shows them in a view instead.\nCould you please provide any capability for text mode, for example some default \nfile to hold the results (in plain text).\n\n Thank you in advance,\n    Boris.",
    "It depends on how you start the application. Give VectorTest from the JUnit \ndistribution as an example, the output \n\n- is presented in the console if you start VectorTest using the launcher for\n  a \"normal\" Java application\n- if presented in the JUnit view if you start VectorTest using the launcher for\n  JUnit test cases.\n\nOK to close PR ?\n",
    "Hi Dirk.\n\nThank you for answering.\n\nNo, I think that is not all that simple.\nI\u0027m talking of testing a plugin, thus of pde.junit. Therefore, as I understand, \na pde.junit project is needed to upload all the plugins, among the rest.\nIf a simple java project is launched, this will not happen, to my best \nknowledge.\n\nBest Regards,\n   Boris.\n\n------------------------------------------------------------------------\nBoris Litvak\nProgramming Languages and Environments\nIBM Haifa Research Lab, Israel\nE-mail: borisl@il.ibm.com, Tel: 972-4-8281074",
    "Erich, any comments how this can be achieved.",
    "Not clear what you are trying to do here. If you want to test a plugin then you \nshould use pde.junit. If you use pde.junit there is no need for \njunit.textui.TestRunner. pde.junit runs your tests  and shows the results of \nthe tests in the JUnit results view and the console output of the tests will \nshow up in the standard console. \nWhat else do you need?\n\n\n",
    "Hi Erich,\n Thank you for answering. I\u0027ll try to cover all the problems in this mail.\nHere are the facts:\n\n1. I use pde.junit.\n2. I was not aware of the fact that main should not be called in AllTests when \nusing pde.junit_2.0.0. // Note: The org.junit plugin version is org.junit_3.7.0 \n(This is FYI, I do not invoke it, but pde.junit probably relies on it). Eclipse \nversion is 2.0.1. \nWSAD build id is 200208291828.\n\nMy code now looks like:\n\npublic class AllTests {\n\n//\tpublic static void main(String[] args) {\n//\t\tjunit.textui.TestRunner.run(AllTests.class);\n\t//\tjunit.extensions.jfunc.textui.JFuncRunner.run(AllTests.class);\n//\t}\n\n\tpublic static Test suite() {\n\t\tJFuncSuite suite \u003d new JFuncSuite();\n\t\t//$JUnit-BEGIN$\n\t\tsuite.addTest(new ActionVerifyTest\n(\"testVerificationRecieverResultActionDescriptorRefObject\"));\n\t\t//$JUnit-END$\n\t\treturn suite;\n\t}\n}\n\n3. The project launch configuration is JUnit Test Plugin, coretestapplication.\n4. The JUnit GUI view shows the results correctly.\n5. The console includes ONLY the following:\n!ENTRY org.eclipse.core.runtime 2 1 Nov 19, 2002 13:49:21.934\n!MESSAGE Problems encountered loading the plug-in registry.\n!SUBENTRY 1 org.eclipse.core.runtime 2 1 Nov 19, 2002 13:49:21.934\n!MESSAGE Plug-in descriptor \"org.eclipse.emf.codegen.ui\" not found for \nfragment \"org.eclipse.emf.codegen.ui.nl1\".  Fragment ignored.\n!SUBENTRY 1 org.eclipse.core.runtime 2 1 Nov 19, 2002 13:49:21.934\n!MESSAGE Plug-in descriptor \"org.eclipse.emf.codegen\" not found for \nfragment \"org.eclipse.emf.codegen.nl1\".  Fragment ignored.\nIn RADPlugin startup.... // This is my Plugin\nIn RADPlugin startup after init.... // This is my Plugin\n6. We would like to receive a text view of the results, in the console or in\na file. We do NOT see the junit output in the console.\n\nI hope this clears things up.\n\nAppendix:\n1. pde.junit_2.1.0 bug:\nThe following exception is thrown on Eclipse 2.0.2, WSAD build 200211071448,\nwhen launching the similar application:\norg.eclipse.core.runtime.CoreException[5013]: java.lang.NoClassDefFoundError: \norg/eclipse/pde/internal/core/TargetPlatform\n\tat \norg.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.createVMRunn\ner(JUnitPdeLaunchConfiguration.java:81)\n\tat \norg.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch\n(JUnitBaseLaunchConfiguration.java:80)\n\tat org.eclipse.debug.internal.core.LaunchConfiguration.launch\n(LaunchConfiguration.java:136)\n\tat \norg.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$10.\nrun(LaunchConfigurationDialog.java:2299)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)\nThe Target Platform resides in ui, and not in core.\nThe pde.junit version is 2.1.0. in this run.\nRemember that the pde.junit site says that pde.junit_2.1.0 works for eclipse \n2.0 as well.\n\n2. http://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d26556 ([Bug 26556] PDE Junit \ndoes not read plugin info from the plugins directory.) - this was assigned to \nyou. Sorry that I supply so many bugs to you, Erich :-)\n\n3. JUnit extension (such as JFunc) integration in eclipse.pde.\nHow can it be done? Is it sufficient to use JFunc class names instead of JUnit \nclass names, and to put the jfunc jars into the pde.junit plugin, at the \n\u003cruntime\u003e ConfigurationElement? Or a new plugin is a must? How will the JUnit \nGUI handle this? Again, I mean pde.Junit only.\n\n  I know this is hard work :)\n\nThank you in advance,\n    Boris.\n\nP.S: Never though I would discuss anything with Erich Gamma :-)\n",
    "I think that the patch for bug 36352 would resolve the main complaint.  Can this\nbe marked as a duplicate?  The others should be logged as separate bugs,\npotentially.",
    "I agree it would resolve the main complaint. Another option would be to allows\nshow the junit test run output in a console tab with hyperlinks etc. This cannot\nhappen for 3.1. So as a workaround copying the tree to the clipboard would be OK\nby me. However, we should not attempt to duplicate the Ant formatting options.",
    "\n\n*** This bug has been marked as a duplicate of 36352 ***"
  ],
  "commentCreationDates": [
    "2002-11-17T07:23:16+01:00",
    "2002-11-18T18:12:51+01:00",
    "2002-11-19T07:07:08+01:00",
    "2002-11-19T10:37:30+01:00",
    "2002-11-19T11:05:24+01:00",
    "2002-11-19T12:28:45+01:00",
    "2005-05-26T18:21:11+02:00",
    "2005-05-26T21:51:08+02:00",
    "2005-05-27T10:09:31+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org/eclipse/pde/internal/core/TargetPlatform",
      "elements": [
        {
          "method": "org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.createVMRunner",
          "source": "JUnitPdeLaunchConfiguration.java:81"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch",
          "source": "JUnitBaseLaunchConfiguration.java:80"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfiguration.launch",
          "source": "LaunchConfiguration.java:136"
        },
        {
          "method": "org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$10.run",
          "source": "LaunchConfigurationDialog.java:2299"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "26557",
      "duplicateId": "36352",
      "date": "2002-11-19T12:28:45+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "36352",
  "bugId": "26557",
  "duplicateId": "36352",
  "date": "2002-11-17T07:23:16+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}