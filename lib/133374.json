{
  "comments": [
    "I am invoking eclipse headless applications multiple times within a maven build environment.  In 3.1.2 defect 107909 prevented me from shutting down the workbench after each invocation, and the workaroud was for me to set the noShutdown property to true.  (However even though this worked there were issues later on).  So with 107909 fixed I moved up to the 3.2.0 M5 build.  The first invocation to the headless application works fine, then immediatley during the build the headless app is invoked again but on the second call it fails with the following exception:\n\njava.lang.NullPointerException\n        at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.setResolved(PackageAdminImpl.java:282)\n        at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.applyDeltas(PackageAdminImpl.java:297)\n        at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.processDelta(PackageAdminImpl.java:370)\n        at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.doResolveBundles(PackageAdminImpl.java:191)\n        at org.eclipse.osgi.framework.internal.core.PackageAdminImpl$1.run(PackageAdminImpl.java:139)\n        at java.lang.Thread.run(Thread.java:552)",
    "Can you provide us steps to reproduce.  From the stacktrace it seems the state thinks there is a resolved host bundle for a fragment but the actual Bundle object for the host cannot be found in the framework.  This should not be possible.  Are you manipulating the system state of the framework somehow?",
    "My current workaround for 3.1.2 was to set PROP_NOSHUTDOWN to true and call EclipseStarter.run(args, null) on the first invocation and then EclipseStarter.run(args) there after.  In 3.1.2 between calls I was able to call different applications by setting the system property eclipse.application.  \n\nIn 3.2 this is no longer, as if I go back to using the workaround its always calling the same application and my scenario calls for calling different applications.  (Not sure if this is the intent or if this is a bug). So for 3.2 I am currently broken as I cannot startup the workbench multiple times within Maven due to the exception below nor can I use the workaround to keep the platform alive.",
    "I don\u0027t think I\u0027m modifying the state. This is happening in the context of Maven, so let me see if I can extract the code out into a standalone java app as a test case and see if the problem occurs.",
    "Created an attachment (id\u003d37089)\nTestCase showing exception\n\nAttached is the test case showing the NPE exception.  You can import the contents of the zip as a project in your workspace and launch it as a java app.  You will need to modify the ECIPSE_HOME var to point to Eclipse 3.2 M5 + WTP 1.0.1.  Also change WORKSPACE to your preference.\n\nThe test case shows the the first invocation to run() works fine as the usage is printed out for the given application.  Then immediately run() is invoked again but this time fails with the NPE. This mimics the behavior of how the code is invoked within the maven context.",
    "Thanks for the testcase.  This will greatly help us in solving the problem.  \n\nI want to confirm that you are using the same EclipseStarter class to relaunch the Equinox framework in maven.  As a workaround you may consider creating a new URLClassLoader for each launch of equinox.  With that said I\u0027m not satisfied with the workaround and we should look to solve this problem in 3.2.",
    "Thanks.  Yes I am using the EclipseStarter each time.  How do I go about creating a new URLClassLoader for each launch? Is there a snippit of code that you could provide?",
    "The project equinox-incubator/org.eclipse.equinox.servlet.bridge.launcher has a class FrameworkLauncher that creates a new URLClassLoader for the purpose of launching multiple frameworks in the same VM.\n\nYou should take a look at that example to see if you can reuse some of that work.\n",
    "The root of the problem is in a static initializer from the Class BaseStorage\n\nprivate static final BaseStorage INSTANCE \u003d new BaseStorage();\n\nWe need to make sure a new instance of BaseStorage is used for each instance of the framework.  I hope to get a patch ready in time for M6.",
    "Created an attachment (id\u003d37133)\npatch\n\nThis patch gets rid of the ugly static initializer in BaseStorage.  Instead the BaseStorageHook is responsible for constructing the instance of BaseStorage to be used by the framework instance.",
    "Pascal/DJ please review patch for M6.",
    "+1",
    "Thanks! I verified the patch and it resolves the issue.  I am running into another issue though regarding if a second invocation lauches a different application, the application from the previous launch runs, rather then the new one.  Currently I\u0027m just setting the system property for the application id, but let me pass the property via setInitialProperties() instead as well as using a different URLClassLoader as you suggested to see if this resolves it before I open a issue on this.",
    "Released patch for M6.\n\nI\u0027m not sure I understand why the previous app is being launched instead of the next one when you launch a second framework.  It would be interesting to investigate this issue (in another bug report of coarse ;-)",
    "Sorry :( I\u0027m going to have to re-open this.  The patch fixes the stand-alone test case, but the NPE still occurs when running within Maven.  I don\u0027t know why... the launch code is the same.  One difference is that Maven is putting the org.eclipse.osgi jar in the classpath (but the location is from the maven repository) but the osgi.framework property is set to point to the osgi jar in the eclipse/plugins, even though both jars are the same do you think this would cause a problem?",
    "Actually I think that was the problem :) If I take out the parent classloader (maven) it works :)",
    "Changing OS from Mac OS to Mac OS X as per bug 185991"
  ],
  "commentCreationDates": [
    "2006-03-27T16:44:47+02:00",
    "2006-03-27T17:38:40+02:00",
    "2006-03-27T18:44:57+02:00",
    "2006-03-27T20:06:05+02:00",
    "2006-03-28T16:55:52+02:00",
    "2006-03-28T18:19:57+02:00",
    "2006-03-28T18:24:36+02:00",
    "2006-03-28T18:46:29+02:00",
    "2006-03-28T19:12:36+02:00",
    "2006-03-28T21:11:18+02:00",
    "2006-03-28T21:12:15+02:00",
    "2006-03-28T21:37:28+02:00",
    "2006-03-28T22:36:28+02:00",
    "2006-03-29T00:54:12+02:00",
    "2006-03-29T16:54:48+02:00",
    "2006-03-29T17:08:10+02:00",
    "2007-07-29T15:19:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.setResolved",
          "source": "PackageAdminImpl.java:282"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.applyDeltas",
          "source": "PackageAdminImpl.java:297"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.processDelta",
          "source": "PackageAdminImpl.java:370"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl.doResolveBundles",
          "source": "PackageAdminImpl.java:191"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.PackageAdminImpl$1.run",
          "source": "PackageAdminImpl.java:139"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:552"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "133374",
      "date": "2006-03-27T16:44:47+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "critical"
    }
  ],
  "groupId": "133374",
  "bugId": "133374",
  "date": "2006-03-27T16:44:47+02:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "critical"
}