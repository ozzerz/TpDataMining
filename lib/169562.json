{
  "comments": [
    "Using the SWT_AWT bridge, modal Swing dialogs do not work as expected on Unix. The problem seems to be with the XEmbeddedFrame, which is the frame returned by the SWT_AWT bridge on Unix. When this frame is used as the parent of the JDialog, even if the dialog is set as modal, it always goes behind the parent window when the parent window is clicked. The dialog does not stay in front as expected (although mouse actions on the parent window do not invoke anything). This has been tried on Linux, Solaris and AIX with the same behavior.\n\nOn Windows, the SWT_AWT frame used is WEmbeddedFrame, and this works fine. The dialog stays in front in this case. I wrote a snippet that demonstrates the problem, which I will upload shortly.",
    "Created an attachment (id\u003d56400)\nSample program to create a modal swing dialog\n\nAttached a sample program that shows this problem. If the program is executed on any Unix platform as an SWT snippet, the problem can be seen.\n\nA breakpoint set after the creation of the JDialog will show the \"parent\" field of the dlg variable as \"XEmbeddedFrame\". On Windows, this is \"WEmbeddedFrame\".\n",
    "I found the following bug report in the SUN bug database that may be related to this problem: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d6507476.\n\nThe evaluation for that bug says:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nWhen SWT shell is activated, it sends us the client message XEMBED_WINDOW_ACTIVATE. Then, when AWT button is clicked with the mouse, embedded frame sends XEMBED_REQUEST_FOCUS client message to the SWT shell and receives a reply as XEMBED_FOCUS_IN. However, if the embedded frame is blocked (or is unfocusable because of some another reason), it shouldn\u0027t request focus from embedder.\n\nAlso, I haven\u0027t found any place in XEmbed specification that states that XEMBED_FOCUS_IN is only sent in reply to XEMBED_REQUEST_FOCUS. So we should not only prevent our embedded frames from requesting focus, but also filter all XEMBED_FOCUS_IN messages when the frame is unfocusable.\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nUsing this information, I had a thought that it may be possible to make the SWT Shell refrain from sending the XEMBED_FOCUS_IN to the XEmbeddedFrame when it knows that the frame is not focusable (as would be the case when there is a modal dialog on the frame). Is there a way to handle the event in the SWT Shell to do this, as a workaround? That way, I could at least temporarily implement such a workaround in our application code...",
    "Ok, this WORKSFORME on Windows, Linux GTK and Linux Motif running SWT from HEAD.  It is possible that it is failing on Solaris but I have no time to try it right now.  It is also possible that the problem is already fixed.\n\nCan you get SWT from HEAD and confirm that the problem happens for you on Linux Motif?\n\nTo be clear:\n\n0) Invoke the sample code\n1) Press the Swing button \u0027Click Here\u0027\n2) Move \u0027Sample Swing Modal dialog\u0027 to overlap \u0027SWT_AWT Modal Swing Test\u0027\n3) Click somewhere inside \u0027SWT_AWT Modal Swing Test\u0027\n4) \u0027SWT_AWT Modal Swing Test\u0027 should not come to the front",
    "Yipes ... I didn\u0027t see that you were running Solaris GTK.  I bet GTK has a bug in their XEMBED support in the version of GTK that is running on Solaris.  If so, there is nothing we can do.\n\nGrant, what version of GTK is running on Solaris?",
    "Actually, I had tested this on HP as well as AIX (using IBM\u0027s java), but it did not work there too. Of course, I used Eclipse 3.2. I will need to try the latest as you mention, to check. I will try that in a short while.",
    "Should I be checking out all of org.eclipse.swt ? (I am fairly new to CVS). If you have some steps on what to do, it would be helpful. I am currently trying this first on Linux GTK (where the test had failed earlier).",
    "I built the SWT jar from the build.xml under HEAD, and then used the libraries and the JAR to test it out on the Linux GTK platform (64-bit), but the test still failed. The dialog does not stay on top.\n\nJust wanted to mention that this will work fine on Windows, BTW. The problem only happens on Unix where the XEmbeddedFrame is used. The tests I did when I originally reported the issue were on the following platforms:\n\n- Linux GTK\n- Solaris GTK\n- AIX (motif)\n- HP (motif)\n",
    "Solaris 10 comes with gtk 2.4.9.\n\nRaajesh it looks like you\u0027ve figured out how to run your snippet with the swt from HEAD already, but in case you need to do this again in the future the best set of steps is described in http://www.eclipse.org/swt/cvs.php .\n",
    "Linux GTK is working for me (following the steps in comment #3).  We need to determine why this doesn\u0027t work for you.\n\n1) Can you check out SWT from CVS like Grant suggested and try it right now?  2) Which Linux distribution and JDK version are you running?",
    "I am using Suse Linux (64-bit), with JDK 1.5.0_06.\n\nHere is the output of \"uname -a\" on this machine:\nLinux cila6s03 2.6.5-7.191-smp #1 SMP Tue Jun 28 14:58:56 UTC 2005 x86_64 x86_64 x86_64 GNU/Linux\n\nI cleaned up everything and tried checking out the SWT project as mentioned by Grant in comment #8. For some reason, I have not been able to launch the test program after following those steps, although it built fine. I get the following error in the console:\n\nException in thread \"main\" java.lang.UnsatisfiedLinkError: memmove\n\tat org.eclipse.swt.internal.gtk.OS.memmove(Native Method)\n\tat org.eclipse.swt.internal.Converter.wcsToMbcs(Converter.java:67)\n\tat org.eclipse.swt.internal.Converter.wcsToMbcs(Converter.java:54)\n\tat org.eclipse.swt.widgets.Display.\u003cclinit\u003e(Display.java:128)\n\tat SimpleSwingModal.main(SimpleSwingModal.java:19)\n\nHere\u0027s what I did:\n\n- Checked out org.eclipse.swt\n- Checked out org.eclipse.swt.gtk.linux.x86_64\n- From the Resource perspective, I modified .classpath_gtk under org.eclipse.swt to have the attribute value as org.eclipse.swt.gtk.linux.x86_64 (it was org.eclipse.swt.gtk.linux.x86).\n- Renamed .classpath_gtk to .classpath, after which my sample program built fine, and no errors were displayed.\n- Launched the test program as SWT application or Java application - in both cases, I get the exceptions above.\n",
    "Sigh.  Can you use a 32-bit GTK?  The 64-bit version of GTK is generated from the 32-bit version.  Grant can give you the steps necessary to do this if you can\u0027t work on a 32-bit machine.",
    "Unfortunately, no. I only have this 64-bit machine available. I plan to try out Solaris GTK in a while with these same steps, if that will help in any way.",
    "I just tried the same set of steps - checking out org.eclipse.swt and org.eclipse.swt.gtk.solaris.sparc - on Solaris GTK, and was able to get the example to launch, but the dialog does not behave in a modal fashion, using the test case outlined in comment #3.\n\n\"uname -a\" on this machine:\nSunOS sunpd12 5.10 Generic sun4u sparc SUNW,Sun-Blade-1000\n",
    "Dumb question.  Can you confirm that dialogs work on your window manager?  Try starting Eclipse, getting the preferences dialogs and seeing whether it stays on top of the main Eclipse window.",
    "Yes, the preferences dialog does stay on top of Eclipse. Its only with the Swing dialogs I see that problem.",
    "I am also facing the same problem mentioned in the bug report. I tried the attached example on Linux GTK (32 bit) machine . I tried the test cases in Comment#3",
    "We have a product release coming up, where this is a major issue. Since we still have a margin of about a week left to get a workaround or fix into the product before the code freeze, I want to check if there is any further update on this.",
    "Rajendra, does the test in comment #3 fail for you on Linux GTk (32)?\n\nComment #10 suggests that Raajesh is running JDK 1.5.  We should all be testing with the same JDK version.  Is JDK 1.5 a good thing to use?\n\nRight now, I don\u0027t have a case that fails.  Bogdan, let\u0027s try and run the code on our Solaris GTK box and see whether we can make if fail.\n",
    "Steve JDK5.0 is good. I am using JDK 5.0.",
    "to be precise I am Using SUN\u0027s JDK1.5.0_10. ",
    "Ok, Bogdan can make it happen on our GTK Solaris box.  He\u0027s looking into it.  I finally looked at the code and found that the AWT dialog is being parented from an embedded frame (of course it is).  Wild.",
    "Yes, it parents from XEmbeddedFrame. In comment #2, I had thought of a possible workaround where maybe the SWT Shell can be made not to respond to the embedded frame\u0027s (incorrect) request.",
    "I was able to reproduce this failure on:\n\nSolaris (GTK)\nSolaris (motif)\nAIX (motif)\nLinux (motif)\n\nOn Linux GTK, it worked as expected (and I tried switching up GTK versions, going back to GTK 2.4.14).\n\nOn GTK the XEmbedSupport is implemented by GTK in gtksocket-x11.c. SWT creates a new socket and then lets GTK handle the details so there isn\u0027t anything we can hack for GTK.\n\nWe take care of the focus events on Motif and we tried commenting out all of the places that we send the XEMBED_FOCUS_IN message. Unfortunately, it didn\u0027t have any effect on the modality of the dialog.\n\nI\u0027m not sure if there\u0027s anything else we can do to help. If your main platform of concern is Solaris GTK (it\u0027s quite possible that they have their own version of GTK) maybe following the issue up with them might be a way to proceed.",
    "To me, this says their is a difference/bug in the X server, window manager or AWT\u0027s XEmbed implementation for those platforms because the same SWT XEmbed implemetation works on Linux.\n\nSorry but I\u0027m going to have to mark this WONTFIX.  Please reopen when you have more information, perhaps from Sun?",
    "I tested this with XServers like Exceed and Cygwin/X. The problem appears even with those XServers. So this does not appear to be related to the XServer. Also, in comment #16, Rajendra mentioned that it did not work on Linux GTK 32-bit. I had tried Linux GTK 64-bit, which did not work for me too...",
    "We were unable to make it fail on GTK Linux.  Bogdan, I am correct, right?",
    "You are right. Following the steps in Comment #3, Linux GTK 32-bit behaved as expected. I tried it with both the Sun (jdk1.5.0_11) and IBM JVMs (ibm-java2-i386-50) and with the following versions of GTK:\n\n2.4.14\n2.6.10\n2.8.20\n2.10.6"
  ],
  "commentCreationDates": [
    "2007-01-04T16:37:29+01:00",
    "2007-01-04T16:42:02+01:00",
    "2007-01-05T20:52:23+01:00",
    "2007-01-10T22:57:30+01:00",
    "2007-01-10T23:00:29+01:00",
    "2007-01-10T23:26:47+01:00",
    "2007-01-11T00:17:37+01:00",
    "2007-01-11T01:50:03+01:00",
    "2007-01-11T14:21:35+01:00",
    "2007-01-11T16:41:41+01:00",
    "2007-01-11T19:46:13+01:00",
    "2007-01-11T19:59:01+01:00",
    "2007-01-11T20:05:36+01:00",
    "2007-01-11T20:47:45+01:00",
    "2007-01-11T21:39:36+01:00",
    "2007-01-11T21:43:01+01:00",
    "2007-01-15T23:43:44+01:00",
    "2007-01-17T16:13:18+01:00",
    "2007-01-17T19:13:11+01:00",
    "2007-01-17T22:11:40+01:00",
    "2007-01-17T22:30:11+01:00",
    "2007-01-18T00:10:44+01:00",
    "2007-01-18T15:30:03+01:00",
    "2007-01-19T14:59:35+01:00",
    "2007-01-19T15:20:24+01:00",
    "2007-01-22T19:34:37+01:00",
    "2007-01-22T19:58:54+01:00",
    "2007-01-22T21:55:01+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsatisfiedLinkError",
      "message": "memmove",
      "elements": [
        {
          "method": "org.eclipse.swt.internal.gtk.OS.memmove",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.Converter.wcsToMbcs",
          "source": "Converter.java:67"
        },
        {
          "method": "org.eclipse.swt.internal.Converter.wcsToMbcs",
          "source": "Converter.java:54"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.\u003cclinit\u003e",
          "source": "Display.java:128"
        },
        {
          "method": "SimpleSwingModal.main",
          "source": "SimpleSwingModal.java:19"
        }
      ],
      "number": 0,
      "commentIndex": 10,
      "bugId": "169562",
      "date": "2007-01-11T19:46:13+01:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "critical"
    }
  ],
  "groupId": "169562",
  "bugId": "169562",
  "date": "2007-01-04T16:37:29+01:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "critical"
}