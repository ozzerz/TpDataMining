{
  "comments": [
    "See attached file.",
    "Created an attachment (id\u003d29686)\najcore\n",
    "Could you append some details about the source you were compiling at the time of the error please? Is it \npossible to narrow it down to a reproduceable test case that you can append?\n\nI can see from the trace that the error is occurring whilst compiling an \"if\" statement if that is any help...\n\nthanks, Adrian.",
    "Created an attachment (id\u003d29687)\nsource excerpt\n",
    "It\u0027s not easy to narrow it down, so I have attached a few sources related, \nmaybe it helps.",
    "Hi,\n\nI was trying to narrow down the source code available in this bug when a\nParserException occured.\nI created a simple test case about this problem.\nI don\u0027t know if the bugs are related...\nI\u0027m using ajde 1.5.0.20051014142856\n\n-------------------------------------------------\npackage a;\n\npublic aspect AAA perthis(this(Screen)){}   \n-------------------------------------------------\norg.aspectj.weaver.patterns.ParserException\nat\norg.aspectj.weaver.patterns.PatternParser.parseDottedNamePattern(PatternParser.java:897)\nat\norg.aspectj.weaver.patterns.PatternParser.parseSingleTypePattern(PatternParser.java:695)\nat\norg.aspectj.weaver.patterns.PatternParser.parseAtomicTypePattern(PatternParser.java:611)\nat\norg.aspectj.weaver.patterns.PatternParser.parseTypePattern(PatternParser.java:572)\nat\norg.aspectj.weaver.patterns.PatternParser.parseTypePattern(PatternParser.java:568)\nat\norg.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.visit(PerThisOrTargetPointcutVisitor.java:140)\nat\norg.aspectj.weaver.patterns.ThisOrTargetPointcut.accept(ThisOrTargetPointcut.java:218)\nat\norg.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut(PerThisOrTargetPointcutVisitor.java:41)\nat\norg.aspectj.weaver.PerObjectInterfaceTypeMunger.getTestTypePattern(PerObjectInterfaceTypeMunger.java:46)\nat\norg.aspectj.weaver.PerObjectInterfaceTypeMunger.matches(PerObjectInterfaceTypeMunger.java:65)\nat org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java:57)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:411)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:98)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1464)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1429)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1203)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1021)\nat\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300)\nat\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)\nat\norg.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:759)\nat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:225)\nat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:151)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122)\nat\norg.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\ntrouble in: \npublic class a.AAA extends java.lang.Object:\n  private static Throwable ajc$initFailureCause\n  public void \u003cinit\u003e():\n                    ALOAD_0     // a.AAA this   (line 3)\n                    INVOKESPECIAL java.lang.Object.\u003cinit\u003e ()V\n    constructor-execution(void a.AAA.\u003cinit\u003e())\n    |               RETURN\n    constructor-execution(void a.AAA.\u003cinit\u003e())\n  end public void \u003cinit\u003e()\n\n  public static a.AAA aspectOf(Object)   \norg.aspectj.weaver.AjAttribute$AjSynthetic@1a462b9\n:\n                    ALOAD_0\n                    INSTANCEOF a.AAA$ajcMightHaveAspect\n                    IFEQ L1\n                    ALOAD_0\n                    CHECKCAST a.AAA$ajcMightHaveAspect\n                    INVOKEINTERFACE\na.AAA$ajcMightHaveAspect.ajc$a_AAA$perObjectGet ()La/AAA;\n                    DUP\n                    IFNULL L0\n                    ARETURN\n                L0: POP\n                L1: NEW org.aspectj.lang.NoAspectBoundException\n                    DUP\n                    INVOKESPECIAL org.aspectj.lang.NoAspectBoundException.\u003cinit\u003e ()V\n                    ATHROW\n  end public static a.AAA aspectOf(Object)\n\n  public static boolean hasAspect(Object)   \norg.aspectj.weaver.AjAttribute$AjSynthetic@1cdf14c\n:\n                    ALOAD_0\n                    INSTANCEOF a.AAA$ajcMightHaveAspect\n                    IFEQ L0\n                    ALOAD_0\n                    CHECKCAST a.AAA$ajcMightHaveAspect\n                    INVOKEINTERFACE\na.AAA$ajcMightHaveAspect.ajc$a_AAA$perObjectGet ()La/AAA;\n                    IFNULL L0\n                    ICONST_1\n                    IRETURN\n                L0: ICONST_0\n                    IRETURN\n  end public static boolean hasAspect(Object)\n\n  public static void ajc$perObjectBind(Object)   \norg.aspectj.weaver.AjAttribute$AjSynthetic@17fbc00\n:\n                    ALOAD_0\n                    INSTANCEOF a.AAA$ajcMightHaveAspect\n                    IFEQ L0\n                    ALOAD_0\n                    CHECKCAST a.AAA$ajcMightHaveAspect\n                    INVOKEINTERFACE\na.AAA$ajcMightHaveAspect.ajc$a_AAA$perObjectGet ()La/AAA;\n                    IFNONNULL L0\n                    ALOAD_0\n                    CHECKCAST a.AAA$ajcMightHaveAspect\n                    NEW a.AAA\n                    DUP\n                    INVOKESPECIAL a.AAA.\u003cinit\u003e ()V\n                    INVOKEINTERFACE\na.AAA$ajcMightHaveAspect.ajc$a_AAA$perObjectSet (La/AAA;)V\n                L0: RETURN\n  end public static void ajc$perObjectBind(Object)\n\nend public class a.AAA\n\nwhen weaving type a.AAA\nwhen weaving aspects \nwhen weaving \nwhen batch building\nBuildConfig[D:\\piveta\\plugInWorkspace\\.metadata\\.plugins\\org.eclipse.ajdt.core\\BugsAspectj113066.generated.lst]\n#Files\u003d4",
    "I\u0027ve fixed the parser error that Eduardo demonstrated - I dont think it is\nrelated to the original problem.\n\nThe original problem is this exception:\n\njava.lang.NullPointerException\n  at oaoejic.codegen.CodeStream.invokestatic(CodeStream.java:3463)\n  at oaoejic.ast.MessageSend.generateCode(MessageSend.java:137)\n  at oaoejic.ast.EqualExpression.generateOptimizedNonBooleanEqual(Line 349)\n  at oaoejic.ast.EqualExpression.generateOptimizedBoolean(Line 182)\n  at oaoejic.ast.IfStatement.generateCode(IfStatement.java:148)\n  at oaoejic.ast.Block.generateCode(Block.java:58)\n  at oaoejic.ast.IfStatement.generateCode(IfStatement.java:160)\n  at oaoejic.ast.AbstractMethodDeclaration.generateCode(226)\n  at oaoejic.ast.AbstractMethodDeclaration.generateCode(173)\n  at oaoejic.ast.TypeDeclaration.generateCode(TypeDeclaration.java:568)\n  at oaoejic.ast.AspectDeclaration.generateCode(AspectDeclaration.java:279)\n\nLine 3463 in CodeStream is:\n\nif (((id \u003d methodBinding.returnType.id) \u003d\u003d T_double) || (id \u003d\u003d T_long))\n\ngiven that the methodbinding is used earlier in the CodeStream.invokestatic\nmethod then we know the methodbinding isnt null.  So, the returnType for the\nmethodbinding must be null.  When I\u0027ve seen badly formed methodbindings in the\ncode before, it has usually been a sign of syntax error in the code but the\ncompiler is crashing like this before it can be reported.\n\nFrom the stack trace, we can also see this happens whilst generating code for an\naspect - and we can see it happens whilst generating code for an if expression.\n\nWe can\u0027t tell if its whilst generating the body of an ITD or generating the body\nof a regular method because generateCode(ClassFile) isn\u0027t overridden in the ITD\nhierarchy (maybe thats the problem?)\n\nIs there any way you can build a subset of your application (take out a few of\nthe aspects) to try and narrow this problem down? Or are they too co-dependent?\n\nIf that doesnt work then the best we can do is probably a debug build that tells\nus which method it is crashing on whilst generating code - if I give you a patch\nfor AspectJ to turn on debug, can you apply it and retry creating the problem\nfor me?",
    "I can\u0027t narrow it down easily. Also, I forgot to say that it compiles and \nworks with AspectJ 1.2.1 which might be a very important note.\n\nIf you can send the debug AspectJ version we can try that and send the logs.\n\nAnother option is that we package that part of the application that does not \ncompile with AspectJ 1.5 and send it to you. Please note that there will be \nother errors (already seen before) too, despite of that the whole application \ncompiles with AspectJ 1.2.1. But first I have to talk my boss first.\n\nlevy",
    "I will create a patch to give us more diagnostics.  But if you could send me the\napplication source that fails with 1.5 and builds ok with 1.2.1 then that would\nbe a much faster way for me to work - you should probably mail it to me directly\nrather than attaching to bugzilla.",
    "Created an attachment (id\u003d29855)\nDebug patch\n\nThis zip contains 2 classes - you should go into your aspectj installation\n(possibly c:\\aspectj1.5\\lib) and create a backup of aspectjtools.jar, then\nunzip this patch in that directory, giving you an \u0027org\u0027 subfolder.  Then update\naspectjtools.jar with the two files from the patch, with a command like:\n\njar -uvf aspectjtools.jar org\n\nOnce patched, when a build occurs we will get a load of diagnostics about the\ncode generation that is occurring - hopefully the bit just before the NPE will\ntell us which class and which method is causing the problem.\n\nIf you are using AJDT rather than the command line, then the patch should be\napplied to ajde.jar in the org.aspectj.ajde plugin in your eclipse plugins\ndirectory (backup ajde.jar before patching it)",
    "Created an attachment (id\u003d29856)\nDebug log with patched compiler\n",
    "Debug log attached.",
    "thanks for doing that so quickly!!\n\nFails codegen for:\ninvokestatic:NULL TYPE\najc$interMethodDispatch1$com_netvisor_common_UserMessageMixin$\n    com_netvisor_common_UserMessage$getSeverity(com.netvisor.common.UserMessage) \n\nas we can see, the return type is null.\n\n\nThe invoke occurs in:\nactionPerformedExceptionHandler()\n\nwhich is in:\ncom/netvisor/web_framework/components/FormMessages$IFormMessages\n\n\nIn actionPerformedExceptionHandler:\n\u003e UserMessage e \u003d (UserMessage)exception;\n\u003e\n\u003e if (e.getSeverity() \u003d\u003d UserMessage.MESSAGE)\n\nwe are blowing up creating the code to invoke getSeverity() on the UserMessage.\n\nThe original attachment of source doesn\u0027t include \u0027UserMessage\u0027 - can you take a\nlook at the ITD that puts getSeverity() onto UserMessage and maybe attach the\nrelated source?\n",
    "There\u0027s no magic in there. Please note the can\u0027t find int message of your \ndebug log. I think the problem starts from there.\n\nAnyway, I have sent you a part of the project which compiles on its own. Try \nthat one if this doesn\u0027t help.\n\nThanks for your help,\nlevy\n\nps: BTW: I think the source I have sent is a good test case for the AspectJ \ncompiler.\n\npackage com.netvisor.common;\n\nimport java.lang.RuntimeException;\n\npublic interface UserMessage\n{\n\tpublic static final int MESSAGE \u003d 0;\n\tpublic static final int WARNING \u003d 1;\n\tpublic static final int ERROR \u003d 2;\n\t\n\tpublic Object[]\t\tgetParams();\n\tpublic void\t\t\tsetParams(Object[] params);\n\t\n\tpublic String\t\tgetUserMessage();\n\tpublic void\t\t\tsetUserMessage(String \nmessageKeyOrText);\n\t\n\tpublic int\t\t\tgetSeverity();\n\tpublic void\t\t\tsetSeverity(int severity);\n}\n\n\n\n\n\n\npackage com.netvisor.common;\n\nimport java.lang.RuntimeException;\n\npublic abstract aspect UserMessageMixin\n{\n\tdeclare precedence: UserMessageMixin;\n\t\n\tprivate Object[]\tUserMessage.params;\n\tprivate String\t\tUserMessage.message;\n\tprivate int\t\t\tUserMessage.severity;\n\t\n\tpublic Object[] UserMessage.getParams()\n\t{\n\t\treturn params;\n\t}\n\tpublic void UserMessage.setParams(Object[] params)\n\t{\n\t\tthis.params \u003d params;\n\t}\n\t\n\tpublic String UserMessage.getUserMessage()\n\t{\n\t\treturn message;\n\t}\n\tpublic void UserMessage.setUserMessage(String messageKeyOrText)\n\t{\n\t\tthis.message \u003d messageKeyOrText;\n\t}\n\t\n\tpublic int UserMessage.getSeverity()\n\t{\n\t\treturn severity;\n\t}\n\tpublic void UserMessage.setSeverity(int severity)\n\t{\n\t\tthis.severity \u003d severity;\n\t}\n}\n\n",
    "Yes, I agree with you, the \u0027cant find: int\u0027 is the initial problem we need to\nresolve - given that getSeverity() returns an int.  I can\u0027t recreate with those\ntwo files though.\n\nThere is only one place in the compiler that can put out that message - so I\u0027m\ngoing to attach one more class to patch into your AspectJ - this will give us a\nstack trace at the point where the type cannot be found.\n\nI\u0027ll also try recreating it with the code you sent me when it arrives - I assume\nyou sent it to my gmail ID:\n  andrew.clement@gmail.com",
    "Created an attachment (id\u003d29857)\nSecond patch - includes stack at point where type cant be found\n\nApply in the same way as the previous one.  With the \u0027cant find: int\u0027 messages\nthere should now be a stack trace indicating how we got into that situation.",
    "Created an attachment (id\u003d29862)\nDebug log\n\nSecond log for can\u0027t find int message",
    "Did you get my e-mail with the workspace included?",
    "Fix checked in - thanks to Levy I managed to recreate the problem locally.  It\nwas to do with our handling of primitives - in this particular case we were\n\u0027forgetting\u0027 in one case that \u0027I\u0027 was a primitive type and treating it as a\nreference type (like String or Object).\n\nfix will be in next dev build.",
    "Thanks for the fix, I\u0027ve checked it and it works with Java target version 1.4, \nbut not with 1.5.\n\nYou can try it by changing the value of \n\u003cproperty name\u003d\"target.java.version\" \t\tvalue\u003d\"1.5\"/\u003e\nin the file\nAA\\Workspace\\Repository\\common h3\\common-build-properties.xml\nof the package I sent to you.\n\nYou will receive the following errors (but only with 1.5 target version):\n\n   [mkdir] Created dir: C:\\AA\\Workspace\\Repository\\web-framework\\build\\web-\ncompiled\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\GridScreen.java:11 \n[error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class GridScreen extends Grid\n    [iajc]              ^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\GridScreen.java:11 \n[error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class GridScreen extends Grid\n    [iajc]              ^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\GroupBoxScreen.java:14\n [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class GroupBoxScreen extends GroupBox\n    [iajc]              ^^^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\GroupBoxScreen.java:14\n [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class GroupBoxScreen extends GroupBox\n    [iajc]              ^^^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\Screen.java:3 [error] \nDuplicate methods named actionPerformed with the parameters (ActionEvent) and \n(ActionEvent) are defined by the type HidingMessagesMixin.IHidingMessages\n    [iajc] public interface Screen extends MutableContent {};\n    [iajc]                  ^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\Screen.java:3 [error] \nDuplicate methods named actionPerformed with the parameters (ActionEvent) and \n(ActionEvent) are defined by the type HidingMessagesMixin.IHidingMessages\n    [iajc] public interface Screen extends MutableContent {};\n    [iajc]                  ^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\ScreenTitleMixin.java:\n26 [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] private interface ScreenTitle extends Screen {};\n    [iajc]                   ^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\ScreenTitleMixin.java:\n26 [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] private interface ScreenTitle extends Screen {};\n    [iajc]                   ^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\ScreenWithButtons.java\n:27 [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class ScreenWithButtons extends SimpleScreen\n    [iajc]              ^^^^^^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\ScreenWithButtons.java\n:27 [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class ScreenWithButtons extends SimpleScreen\n    [iajc]              ^^^^^^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\ScreenWithTitle.java:1\n2 [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class ScreenWithTitle extends Panel\n    [iajc]              ^^^^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\ScreenWithTitle.java:1\n2 [error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class ScreenWithTitle extends Panel\n    [iajc]              ^^^^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\SimpleScreen.java:11 \n[error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class SimpleScreen extends Panel\n    [iajc]              ^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\components\\SimpleScreen.java:11 \n[error] Duplicate methods named actionPerformed with the parameters \n(ActionEvent) and (ActionEvent) are defined by the type \nHidingMessagesMixin.IHidingMessages\n    [iajc] public class SimpleScreen extends Panel\n    [iajc]              ^^^^^^^^^^^\n    [iajc] C:\\AA\\Workspace\\Repository\\web-\nframework\\src\\java\\com\\netvisor\\web_framework\\wizard\\WizardAspect.java:65 \n[error] The method add(E) in the type List\u003cE\u003e is not applicable for the \narguments (WizardStage)\n    [iajc] this.stages.add(stage);",
    "Interesting!  This is exactly the same as bug 110948 which I couldnt reproduce\nbefore and so closed as WORKSFORME - I\u0027ll take a look at debugging it now I have\na test that should show the problem.",
    "Well, the guy who sent that bug just sits next to me... ;-)",
    "*** Bug 110948 has been marked as a duplicate of this bug. ***",
    "what a nightmare.  but I\u0027ve fixed it all now.  The duplicate methods stuff is due to an over eager method verifier not allowing for ITDs.  That then uncovered a very subtle problem where a ITD that used the raw type list ended up being interpreted later as a reference to the generic type.\n\nFixes all checked in. waiting on build.",
    "Well, thanks a lot. I will try it as soon as the next developer release is available on the web site.\n\nUnfortunately or (well I think rather luckily for testing purposes?!) we still have a couple of components to be compiled under Java 1.5 and AspectJ 1.5. These components have never compiled before successfully with 1.5 because they were dependent on the component for which you have just fixed this bug...\n\nlevy",
    "fixes available in latest dev build."
  ],
  "commentCreationDates": [
    "2005-11-10T10:09:55+01:00",
    "2005-11-10T10:10:51+01:00",
    "2005-11-10T10:21:15+01:00",
    "2005-11-10T10:29:14+01:00",
    "2005-11-10T10:31:30+01:00",
    "2005-11-10T13:32:04+01:00",
    "2005-11-14T09:48:38+01:00",
    "2005-11-14T10:06:29+01:00",
    "2005-11-14T10:27:23+01:00",
    "2005-11-14T10:50:23+01:00",
    "2005-11-14T11:02:11+01:00",
    "2005-11-14T11:02:24+01:00",
    "2005-11-14T11:25:39+01:00",
    "2005-11-14T11:51:31+01:00",
    "2005-11-14T12:16:27+01:00",
    "2005-11-14T12:17:52+01:00",
    "2005-11-14T13:19:16+01:00",
    "2005-11-14T13:20:04+01:00",
    "2005-11-14T16:08:56+01:00",
    "2005-11-15T09:42:17+01:00",
    "2005-11-15T10:24:50+01:00",
    "2005-11-15T12:16:55+01:00",
    "2005-11-18T16:21:47+01:00",
    "2005-11-23T09:20:50+01:00",
    "2005-11-23T10:02:35+01:00",
    "2005-11-23T11:15:04+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.patterns.ParserException",
      "elements": [
        {
          "method": "org.aspectj.weaver.patterns.PatternParser.parseDottedNamePattern",
          "source": "PatternParser.java:897"
        },
        {
          "method": "org.aspectj.weaver.patterns.PatternParser.parseSingleTypePattern",
          "source": "PatternParser.java:695"
        },
        {
          "method": "org.aspectj.weaver.patterns.PatternParser.parseAtomicTypePattern",
          "source": "PatternParser.java:611"
        },
        {
          "method": "org.aspectj.weaver.patterns.PatternParser.parseTypePattern",
          "source": "PatternParser.java:572"
        },
        {
          "method": "org.aspectj.weaver.patterns.PatternParser.parseTypePattern",
          "source": "PatternParser.java:568"
        },
        {
          "method": "org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.visit",
          "source": "PerThisOrTargetPointcutVisitor.java:140"
        },
        {
          "method": "org.aspectj.weaver.patterns.ThisOrTargetPointcut.accept",
          "source": "ThisOrTargetPointcut.java:218"
        },
        {
          "method": "org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut",
          "source": "PerThisOrTargetPointcutVisitor.java:41"
        },
        {
          "method": "org.aspectj.weaver.PerObjectInterfaceTypeMunger.getTestTypePattern",
          "source": "PerObjectInterfaceTypeMunger.java:46"
        },
        {
          "method": "org.aspectj.weaver.PerObjectInterfaceTypeMunger.matches",
          "source": "PerObjectInterfaceTypeMunger.java:65"
        },
        {
          "method": "org.aspectj.weaver.ConcreteTypeMunger.matches",
          "source": "ConcreteTypeMunger.java:57"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:411"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:98"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1464"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1429"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:1203"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1021"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:759"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:225"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:151"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:122"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "115788",
      "date": "2005-11-10T13:32:04+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "oaoejic.codegen.CodeStream.invokestatic",
          "source": "CodeStream.java:3463"
        },
        {
          "method": "oaoejic.ast.MessageSend.generateCode",
          "source": "MessageSend.java:137"
        },
        {
          "method": "oaoejic.ast.EqualExpression.generateOptimizedNonBooleanEqual",
          "source": "Line 349"
        },
        {
          "method": "oaoejic.ast.EqualExpression.generateOptimizedBoolean",
          "source": "Line 182"
        },
        {
          "method": "oaoejic.ast.IfStatement.generateCode",
          "source": "IfStatement.java:148"
        },
        {
          "method": "oaoejic.ast.Block.generateCode",
          "source": "Block.java:58"
        },
        {
          "method": "oaoejic.ast.IfStatement.generateCode",
          "source": "IfStatement.java:160"
        },
        {
          "method": "oaoejic.ast.AbstractMethodDeclaration.generateCode",
          "source": "226"
        },
        {
          "method": "oaoejic.ast.AbstractMethodDeclaration.generateCode",
          "source": "173"
        },
        {
          "method": "oaoejic.ast.TypeDeclaration.generateCode",
          "source": "TypeDeclaration.java:568"
        },
        {
          "method": "oaoejic.ast.AspectDeclaration.generateCode",
          "source": "AspectDeclaration.java:279"
        }
      ],
      "number": 1,
      "commentIndex": 6,
      "bugId": "115788",
      "date": "2005-11-14T09:48:38+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    }
  ],
  "groupId": "115788",
  "bugId": "115788",
  "date": "2005-11-10T10:09:55+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "blocker"
}