{
  "comments": [
    "I will attach a tar-file with some of our base classes. It also includes a \nlarge number of files from boost.org. If you remove the library Basic/Boost, \neverything works fine, but when you include it the (full) indexer will crash \nEclipse with a java-core. When running with the CTags indexer you get the \nfollowing stack:\njava.lang.ClassCastException: org.eclipse.core.internal.resources.Project\n        at \norg.eclipse.cdt.internal.core.index.ctagsindexer.CTagsFileReader.parse\n(CTagsFileReader.java(Compiled Code))\n        at \norg.eclipse.cdt.internal.core.index.ctagsindexer.CTagsIndexAll.execute\n(CTagsIndexAll.java:115)\n        at org.eclipse.cdt.internal.core.search.processing.JobManager.run\n(JobManager.java:466)\n        at java.lang.Thread.run(Thread.java:567)",
    "Created an attachment (id\u003d26398)\nCode producing the crash - part 1\n\nzip:ed tar file created with gtar cvfz",
    "Created an attachment (id\u003d26399)\nCode producing the crash - part 2\n",
    "I\u0027ve found a workaround... By setting an exclusion filter on the source code \n(under C/C++ Project Paths, tab \"Source\") that excludes \nOptimization/Basic/Boost/boost/** the indexer will never try to index the code \nfrom boost.org, and the crash is avoided.\n\nHowever, the original problem is of course there... During my experimenting it \nseems that the indexer always crashes when working with variant.hpp and \nvariant/**.\n\nBtw, my java -version says:\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2)\nClassic VM (build 1.4.2, J2RE 1.4.2 IBM build cxia321420-20040626 (JIT enabled: \njitc))\n",
    "What do you mean by \"crash Eclipse\"?  I\u0027m assuming that you mean that Eclipse \nfreezes or closes.  I can\u0027t reproduce this in Windows but I\u0027ll give Linux/GTK a \ntry.\n\nI get a ClassCastException with the CTags indexer that seems to halt the CTags \nindexer and prevents anything from going into the index.\njava.lang.ClassCastException: org.eclipse.core.internal.resources.Project\n\tat \norg.eclipse.cdt.internal.core.index.ctagsindexer.CTagsFileReader.parse\n(CTagsFileReader.java:85)\n\tat \norg.eclipse.cdt.internal.core.index.ctagsindexer.CTagsIndexAll.execute\n(CTagsIndexAll.java:115)\n\tat org.eclipse.cdt.internal.core.search.processing.JobManager.run\n(JobManager.java:466)\n\tat java.lang.Thread.run(Thread.java:534)\n\nI see several ClassCastExceptions with the boost source code with the full \nindexer (but no crash):\njava.lang.ClassCastException: \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPFunctionTemplate.takesVarArgs\n(CPPFunctionTemplate.java:369)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.IndexVisitorUtil.getParamet\ners(IndexVisitorUtil.java:231)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.CPPGenerateIndexVisitor.pro\ncessNameBinding(CPPGenerateIndexVisitor.java:316)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.CPPGenerateIndexVisitor.pro\ncessName(CPPGenerateIndexVisitor.java:169)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.CPPGenerateIndexVisitor.vis\nit(CPPGenerateIndexVisitor.java:112)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.accept\n(CPPASTName.java:90)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.accept\n(CPPASTQualifiedName.java:175)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTDeclarator.accept\n(CPPASTDeclarator.java:126)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTFunctionDefinition.accept\n(CPPASTFunctionDefinition.java:92)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTemplateDeclaration.accept\n(CPPASTTemplateDeclaration.java:95)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTNamespaceDefinition.accept\n(CPPASTNamespaceDefinition.java:87)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTNamespaceDefinition.accept\n(CPPASTNamespaceDefinition.java:87)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTranslationUnit.accept\n(CPPASTTranslationUnit.java:520)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.DOMSourceIndexerRunner.inde\nxFile(DOMSourceIndexerRunner.java:133)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.AbstractIndexerRunner.index\n(AbstractIndexerRunner.java:76)\n\tat org.eclipse.cdt.internal.core.index.cindexstorage.Index.add\n(Index.java:110)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddCompilationUnitToInde\nx.indexDocument(DOMAddCompilationUnitToIndex.java:29)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddFileToIndex.execute\n(DOMAddFileToIndex.java:60)\n\tat org.eclipse.cdt.internal.core.search.processing.JobManager.run\n(JobManager.java:466)\n\tat java.lang.Thread.run(Thread.java:534)",
    "Try running Eclipse with more virtual machine memory:\n./eclipse -vmargs -Xmx512M\n\nThis should fix your problem with the full indexer.  It\u0027s because you are \nworking with such a large project that you need to have more memory reserved \nfor the virtual machine than default.\n\n",
    "Created an attachment (id\u003d26418)\nbandaid for this PR (for CTags)\n\nI\u0027m not sure why the fileName is \"\" and this patch is probably just a bandaid\nto the problem.  When applied, the CTags index for the attached project goes\nfrom 0 IEntryResults and 0 files indexed to 55350 IEntryResults and 2862 files\nindexed with this patch for CTags.\nIt also fixes the ClassCastException.",
    "Sorry, increasing the memory does not help for me (I\u0027ve tried 1024M as well). \nThe full indexer still crashes (again the last file mentioned is variant.hh). \nBy \"crashing\" I mean that I get the following:\nUnrecoverable Stack Overflow: addr\u003db7351ddf, ee\u003db20aed10, er\u003db21e2b00\nJVMDG217: Dump Handler is Processing a Signal - Please Wait.\nJVMDG303: JVM Requesting Java core file\nJVMDG304: Java core file written \nto /users/liden/javacore.20050825.093552.11117.txt\nJVMDG215: Dump Handler has Processed Exception Signal 11.\n\nDo you want the core file?\n\nSometimes I also get a stack that starts with:\njava.lang.IllegalArgumentException:\n        at\norg.eclipse.core.internal.runtime.Assert.isLegal(Assert.java(Inlined\nCompiled Code))\n        at\norg.eclipse.core.internal.runtime.Assert.isLegal(Assert.java(Inlined\nCompiled Code))\n        at\norg.eclipse.core.runtime.Path.removeFirstSegments(Path.java(Compiled Code))\n        at\norg.eclipse.cdt.make.internal.core.scannerconfig.gnu.ScannerInfoConsoleParse\nrUtility.translateRelativePaths\n(ScannerInfoConsoleParserUtility.java:219)\n        at\norg.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCScannerInfoConsolePa\nrser.processSingleLine(GCCScannerInfoConsoleParser.java:138)\n        at\norg.eclipse.cdt.make.internal.core.scannerconfig.gnu.AbstractGCCBOPConsolePa\nrser.processLine(AbstractGCCBOPConsoleParser.java:118)\n        at\norg.eclipse.cdt.internal.core.ConsoleOutputSniffer.processLine(ConsoleOutput\nSniffer.java:178)\n...\n\n(Now I will try the CTags bandaid..)\n\n",
    "I gave up regarding the bandaid, since it requires me to get the source code, \npatch and rebuild the appropriate CDT parts - too much work for me...\n\nFor us this is a rather serious problem - hoping to hear more from you soon!",
    "I have started looking at this and have a couple of questions. First, what is \npart1 and what is part2 in the attachments. I tried running ctags on part1 and \nhad no problem. Am I doing something wrong?",
    "I had to upload all the code in two parts, since bugzilla has a limit on 2Mb \nfor attachments.\n\n(If you were able to run on part1, that might be another indication on \nsomething fishy about variant.hh (which is in part2)).",
    "I do get an StackOverflowError using the FullIndexer in 4.0, the FastIndexer works fine.\nI\u0027ll try to fix this.",
    "That\u0027s nice..\nBut due to this bug and the lack of support for local CVS I gave up on Eclipse and CDT long ago - now using good old Xemacs as the rest of the team..",
    "Fixed in 4.0 \u003e 20070619."
  ],
  "commentCreationDates": [
    "2005-08-24T11:15:04+02:00",
    "2005-08-24T11:48:31+02:00",
    "2005-08-24T11:49:51+02:00",
    "2005-08-24T15:35:18+02:00",
    "2005-08-24T16:47:08+02:00",
    "2005-08-24T20:47:51+02:00",
    "2005-08-24T21:02:53+02:00",
    "2005-08-25T09:51:44+02:00",
    "2005-09-01T09:54:49+02:00",
    "2005-09-01T16:32:10+02:00",
    "2005-09-01T16:42:33+02:00",
    "2007-06-18T17:05:02+02:00",
    "2007-06-19T08:41:22+02:00",
    "2007-06-19T09:21:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.core.internal.resources.Project",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.index.ctagsindexer.CTagsFileReader.parse",
          "source": "CTagsFileReader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.ctagsindexer.CTagsIndexAll.execute",
          "source": "CTagsIndexAll.java:115"
        },
        {
          "method": "org.eclipse.cdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:466"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:567"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "107821",
      "date": "2005-08-24T11:15:04+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.core.internal.resources.Project",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.index.ctagsindexer.CTagsFileReader.parse",
          "source": "CTagsFileReader.java:85"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.ctagsindexer.CTagsIndexAll.execute",
          "source": "CTagsIndexAll.java:115"
        },
        {
          "method": "org.eclipse.cdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:466"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "107821",
      "date": "2005-08-24T16:47:08+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPFunctionTemplate.takesVarArgs",
          "source": "CPPFunctionTemplate.java:369"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.IndexVisitorUtil.getParameters",
          "source": "IndexVisitorUtil.java:231"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.CPPGenerateIndexVisitor.processNameBinding",
          "source": "CPPGenerateIndexVisitor.java:316"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.CPPGenerateIndexVisitor.processName",
          "source": "CPPGenerateIndexVisitor.java:169"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.CPPGenerateIndexVisitor.visit",
          "source": "CPPGenerateIndexVisitor.java:112"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.accept",
          "source": "CPPASTName.java:90"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.accept",
          "source": "CPPASTQualifiedName.java:175"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTDeclarator.accept",
          "source": "CPPASTDeclarator.java:126"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTFunctionDefinition.accept",
          "source": "CPPASTFunctionDefinition.java:92"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTemplateDeclaration.accept",
          "source": "CPPASTTemplateDeclaration.java:95"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTNamespaceDefinition.accept",
          "source": "CPPASTNamespaceDefinition.java:87"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTNamespaceDefinition.accept",
          "source": "CPPASTNamespaceDefinition.java:87"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTranslationUnit.accept",
          "source": "CPPASTTranslationUnit.java:520"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.DOMSourceIndexerRunner.indexFile",
          "source": "DOMSourceIndexerRunner.java:133"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.AbstractIndexerRunner.index",
          "source": "AbstractIndexerRunner.java:76"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.cindexstorage.Index.add",
          "source": "Index.java:110"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddCompilationUnitToIndex.indexDocument",
          "source": "DOMAddCompilationUnitToIndex.java:29"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddFileToIndex.execute",
          "source": "DOMAddFileToIndex.java:60"
        },
        {
          "method": "org.eclipse.cdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:466"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 2,
      "commentIndex": 4,
      "bugId": "107821",
      "date": "2005-08-24T16:47:08+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
          "source": "Assert.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
          "source": "Assert.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.core.runtime.Path.removeFirstSegments",
          "source": "Path.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.cdt.make.internal.core.scannerconfig.gnu.ScannerInfoConsoleParserUtility.translateRelativePaths",
          "source": "ScannerInfoConsoleParserUtility.java:219"
        },
        {
          "method": "org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCScannerInfoConsoleParser.processSingleLine",
          "source": "GCCScannerInfoConsoleParser.java:138"
        },
        {
          "method": "org.eclipse.cdt.make.internal.core.scannerconfig.gnu.AbstractGCCBOPConsoleParser.processLine",
          "source": "AbstractGCCBOPConsoleParser.java:118"
        },
        {
          "method": "org.eclipse.cdt.internal.core.ConsoleOutputSniffer.processLine",
          "source": "ConsoleOutput Sniffer.java:178"
        }
      ],
      "number": 3,
      "commentIndex": 7,
      "bugId": "107821",
      "date": "2005-08-25T09:51:44+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "major"
    }
  ],
  "groupId": "107821",
  "bugId": "107821",
  "date": "2005-08-24T11:15:04+02:00",
  "product": "CDT",
  "component": "cdt-core",
  "severity": "major"
}