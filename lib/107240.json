{
  "comments": [
    "Eclipse Version: 3.0.1\nBuild id: 200409161125\n\nI have regular workspace being used to develop \"my IDE\" plugin, which is then \ntested in runtime-workspace. Running inside my IDE, I launch the user\u0027s \napplication in debug mode. I want the eclipse debugger to pick up the source \nfor my IDE (which is back in the regular workspace). So I use the \n\nmyLaunchCfg.setAttribute( ATTR_SOURCE_PATH, entries );\nmyLaunchCfg.setAttribute( ATTR_DEFAULT_SOURCE_PATH, false );\n\nsequence to add the source path of my IDE. I set \u0027entries\u0027 to an entry: \n\nString path \u003d \"c:\\\\ ... \\\\myIde\\\\src\"; // source folder in regular workspace\nIPath ipath \u003d new org.eclipse.core.runtime.Path( path );\nentry \u003d JavaRuntime.newStringVariableClasspathEntry( ipath );\n\nIt does not work. I get this:\n\norg.eclipse.core.runtime.CoreException: Source lookup error\n\tat \norg.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer.findSou\nrceElements(CompositeSourceContainer.java:104)\n\tat ...\nwith what appears to be a root exception:\n\n!MESSAGE Unable to access archive C:\\...\\myIde\\src\n!STACK 0\njava.util.zip.ZipException: Access is denied\n\tat java.util.zip.ZipFile.open(Native Method) ...\n\n*However*, if I jar up all the source files under src, and store the jar \nas \"c:\\\\...\\\\myIde\\\\src.jar\" and change the path given to \nJavaRuntime.newStringVariableClasspathEntry to this value, it works. \n\nThus, It seems to me that either: \n\nthe javadoc for newStringVariableClasspathEntry: \"Returns a new runtime \nclasspath entry for the given expression that may contain string substitution \nvariable references. The resulting expression refers to an archive (jar or \ndirectory) containing class files.\" is wrong (because you can\u0027t use a \ndirectory)\n\nOR\n\nCompositeSourceContainer.findSourceElements(CompositeSourceContainer.java:104) \nshould handle the util.ZipFile\u0027s exception that it cannot find the file (I \nassume this is what is happening based on a simple test of ZipFile, which \nthrows the Access is Denied exception when the jar file does not exist.) \n\nSame problem occurs if I use newArchiveRuntimeClasspathEntry or if I try to \nattach the source to the class path entry using setSourceAttachmentPath.",
    "It would be helpful to know if the same problem occurrs on 3.1 (there are \ncurrently no plans for more 3.0.x maintenance builds).",
    "Bug does not occur in   \nVersion: 3.1.0\nBuild id: I20050627-1435\n ",
    "reopening.",
    "resolving as workforme since no changes were made."
  ],
  "commentCreationDates": [
    "2005-08-17T19:18:29+02:00",
    "2005-08-17T19:53:07+02:00",
    "2005-08-18T17:43:29+02:00",
    "2005-08-18T17:51:20+02:00",
    "2005-08-18T17:52:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Source lookup error",
      "elements": [
        {
          "method": "org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer.findSourceElements",
          "source": "CompositeSourceContainer.java:104"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "107240",
      "date": "2005-08-17T19:18:29+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    },
    {
      "exceptionType": "java.util.zip.ZipException",
      "message": "Access is denied",
      "elements": [
        {
          "method": "java.util.zip.ZipFile.open",
          "source": "Native Method"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "107240",
      "date": "2005-08-17T19:18:29+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "107240",
  "bugId": "107240",
  "date": "2005-08-17T19:18:29+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}