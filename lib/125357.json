{
  "comments": [
    "I am trying to use DS for the first time.  We are using our own FrameworkAdaptor so the javax.xml.parsers.SAXParserFactory is not being registered by the System bundle.\n\nWhen that happens, I get the following:\n\nSEVERE: Bundle org.eclipse.equinox.ds: Error: java.lang.NullPointerException\njava.lang.NullPointerException\n        at org.eclipse.equinox.ds.parser.Parser.parseComponentDescription(Parser\n.java:106)\n\tat org.eclipse.equinox.ds.parser.Parser.getComponentDescriptions(Parser.java:59)\n\tat org.eclipse.equinox.ds.model.ComponentDescriptionCache.getComponentDescriptions(ComponentDescriptionCache.java:108)\n\tat org.eclipse.equinox.ds.Activator.addingBundle(Activator.java:142)\n\tat org.eclipse.equinox.ds.tracker.BundleTracker$Tracked.track(BundleTracker.java:294)\n\tat org.eclipse.equinox.ds.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:237)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1205)\n\tat org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:189)\n\tat org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:141)\n\tat org.eclipse.osgi.framework.internal.core.Framework.publishBundleEventPrivileged(Framework.java:1474)\n\tat org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1425)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:325)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.resume(AbstractBundle.java:328)\n\tat org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1030)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:573)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:495)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:275)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent(StartLevelManager.java:455)\n\tat org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:189)\n\tat org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:291)",
    "What should we do here?  I see 3 options:\n\n1) Report a more descriptive error message.\n2) Have DS wait until an XML parser is available.\n3) If no XML Parser service is available, try to get one directly from the VM (won\u0027t work with some JCLs).\n\nI\u0027m leaning towards option 2.  Opinions?",
    "I favor option 2 as well.  This would be a concern for the registry also.  Not sure if it waits for an XML parser service now or not.",
    "Waiting in this case is still problematic as the parser just is never going to show up.  So the net effect is that the user\u0027s app/system does not work and there is no notification as to why.\n\nto be clear, waiting is fine but there should still be some sort of notification or other way of finding out what is going on.",
    "Perhaps if DS does not immediately find an XML parser service it can log something to the effect of \"DS waiting for XML parser...\"",
    "sure.  Do you have that opportunity?  That is, not sure what the coding pattern would look like.  Try to lookup, fail, log, then wait?",
    "Before logging/waiting you could try to get the XML parser using \"normal\" JAXP lookup.  For example, from the PluginParser class in the framework.\n\npublic static SAXParserFactory acquireXMLParsing(BundleContext context) {\n  if (xmlTracker \u003d\u003d null) {\n    xmlTracker \u003d new ServiceTracker(context,\n         \"javax.xml.parsers.SAXParserFactory\", null); //$NON-NLS-1$\n    xmlTracker.open();\n  }\n  SAXParserFactory result \u003d (SAXParserFactory) xmlTracker.getService();\n  if (result !\u003d null)\n    return result;\n  // backup to using jaxp to create a new instance\n  return SAXParserFactory.newInstance();\n}",
    "I would prefer this solution too.  That way if a SAXParser service is available, gr8, use it.  If not, then if the JDK has one, gr8, use it.  If neither is there...  well, that is when it gets interesting, right?",
    "This may take a fair bit of refactoring.  We can\u0027t simply make DS do nothing until there is an XML Parser, because we want to support the use case where all of the XML is already cached, so the parser isn\u0027t needed.",
    "could you just make the parser discovery/initialization lazy?  that is, when you need a parser, call some method.  that method would do the lookup the first time and then cache.  On second start you don\u0027t need a parser so you don\u0027t call the method.",
    "After the initial startup we\u0027re probably not going to need the parser any more on the first run either, so I\u0027m not sure if we should cache it.",
    "even better!",
    "Created an attachment (id\u003d34277)\npatch to org.eclipse.equinox.ds\n\nOk, here\u0027s a patch to try.  It\u0027s not the most elegant thing but I think it will get the job done.",
    "John, please try this patch in your custom FrameworkAdaptor environment.",
    "Created an attachment (id\u003d34295)\nupdated patch to org.eclipse.equinox.ds\n\nwhoops!  Forgot to check if bundle was still active.  This patch should fix that.",
    "Jennifer, please review and release the patch for M6 if it is acceptable.  Thanks.",
    "The patch looks good.  Roy\u0027s patch has been checking into CVS HEAD.",
    "[contributed patch applied]",
    "adding \"contributed\" keyword to patches contributed by the community."
  ],
  "commentCreationDates": [
    "2006-01-26T17:02:57+01:00",
    "2006-01-26T17:10:39+01:00",
    "2006-01-26T17:22:22+01:00",
    "2006-01-26T20:21:33+01:00",
    "2006-01-26T20:31:13+01:00",
    "2006-01-26T20:40:21+01:00",
    "2006-01-26T20:51:29+01:00",
    "2006-01-26T20:54:24+01:00",
    "2006-01-26T20:55:45+01:00",
    "2006-01-27T02:24:43+01:00",
    "2006-01-27T16:57:37+01:00",
    "2006-01-28T14:31:27+01:00",
    "2006-02-07T17:38:08+01:00",
    "2006-02-07T17:39:04+01:00",
    "2006-02-07T21:02:14+01:00",
    "2006-02-23T18:17:11+01:00",
    "2006-02-23T20:13:33+01:00",
    "2006-04-18T20:51:12+02:00",
    "2006-08-23T21:20:26+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.equinox.ds.parser.Parser.parseComponentDescription",
          "source": "Parser .java:106"
        },
        {
          "method": "org.eclipse.equinox.ds.parser.Parser.getComponentDescriptions",
          "source": "Parser.java:59"
        },
        {
          "method": "org.eclipse.equinox.ds.model.ComponentDescriptionCache.getComponentDescriptions",
          "source": "ComponentDescriptionCache.java:108"
        },
        {
          "method": "org.eclipse.equinox.ds.Activator.addingBundle",
          "source": "Activator.java:142"
        },
        {
          "method": "org.eclipse.equinox.ds.tracker.BundleTracker$Tracked.track",
          "source": "BundleTracker.java:294"
        },
        {
          "method": "org.eclipse.equinox.ds.tracker.BundleTracker$Tracked.bundleChanged",
          "source": "BundleTracker.java:237"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent",
          "source": "BundleContextImpl.java:1205"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous",
          "source": "ListenerQueue.java:141"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.publishBundleEventPrivileged",
          "source": "Framework.java:1474"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent",
          "source": "Framework.java:1425"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:325"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.resume",
          "source": "AbstractBundle.java:328"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.resumeBundle",
          "source": "Framework.java:1030"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles",
          "source": "StartLevelManager.java:573"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL",
          "source": "StartLevelManager.java:495"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel",
          "source": "StartLevelManager.java:275"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent",
          "source": "StartLevelManager.java:455"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run",
          "source": "EventManager.java:291"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "125357",
      "date": "2006-01-26T17:02:57+01:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "normal"
    }
  ],
  "groupId": "125357",
  "bugId": "125357",
  "date": "2006-01-26T17:02:57+01:00",
  "product": "Equinox",
  "component": "Bundles",
  "severity": "normal"
}