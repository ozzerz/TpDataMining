{
  "comments": [
    "Paste this into stack trace console:\njava.io.IOException: Bad file descriptor\nat java.io.FileInputStream.available(Native Method)\nat java.io.BufferedInputStream.read(BufferedInputStream.java:279)\nat java.io.FilterInputStream.read(FilterInputStream.java:90)\nat org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:135)\nat org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:126)\nat org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:193)\nat java.lang.Thread.run(Thread.java:552)\n\nFollow the link to the Native Method -\u003e error: \"Source not found for java.io.Native Meth\"",
    "JavaStackTraceHyperLine#getTypeName() does not handle stack trace line in the \nform of \"\u003ctype name\u003e.method (Native Method)\".  This method gets the type name \nfrom strings between the brackets, expecting the string to be in the \nform \"\u003ctype name\u003e.method (FileName:Line Number)\".  ",
    "Created an attachment (id\u003d22461)\npatch to org.eclipse.jdt.debug.ui\n\n* Added #getTypeName method in JavaNativeStackTraceHyperLink.\n\nI copied this method from old JavaStackTraceHyperLink because it handles the\nstring pattern for native method.  #getTypeName from\nJavaNativeStackTraceHyperLink tries to get the type name from before the\nbrackets.\n",
    "Darin -\nPlease apply patch... thanks... \nSamantha",
    "Applied patch.",
    "Verified."
  ],
  "commentCreationDates": [
    "2005-05-31T23:11:28+02:00",
    "2005-06-07T00:01:53+02:00",
    "2005-06-07T00:16:05+02:00",
    "2005-06-07T00:18:34+02:00",
    "2005-06-07T03:51:27+02:00",
    "2005-06-07T03:54:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "Bad file descriptor",
      "elements": [
        {
          "method": "java.io.FileInputStream.available",
          "source": "Native Method"
        },
        {
          "method": "java.io.BufferedInputStream.read",
          "source": "BufferedInputStream.java:279"
        },
        {
          "method": "java.io.FilterInputStream.read",
          "source": "FilterInputStream.java:90"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.read",
          "source": "OutputStreamMonitor.java:135"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.access$1",
          "source": "OutputStreamMonitor.java:126"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor$1.run",
          "source": "OutputStreamMonitor.java:193"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:552"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "97738",
      "date": "2005-05-31T23:11:28+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "97738",
  "bugId": "97738",
  "date": "2005-05-31T23:11:28+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}