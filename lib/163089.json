{
  "comments": [
    "Program is started in Debug mode and stops at main() as ususal.\n\nClicking on \"STEP OVER\" once results\nin unexpected termination of the debugging session after a several seconds\nof delay. \n\nAny breakpoints set in program are also ignored.\n\nIn other programs I have noted that the program appears to run for\na while before it is terminated. (ie. I see some console console output\nbut program terminates (without visible error) prior to normal exit). \n\nPrograms RUN without error.\n\nSample Program, Exceptions logged, and debugger console output\nare included below\n\n***************** Environment\n\nSUSE 10.1 x86 (latest patches applied)\nAMD64 based hardware\n\nAlso tried Sun Java 1.4.2 - same results\n\n\n**************** The offending program\n\n#include \u003cstdio.h\u003e\n\nint main(argc, argv)\n    int argc;\n    char *argv[];\n{\n\tint x \u003d 1;\n\tprintf(\"hello world\");\n}\n\n*************** Eclipse tosses this one if the app is RUN in DEBUG mode\n\n!SESSION 2006-10-31 19:57:36.511 -----------------------------------------------\neclipse.buildId\u003dM20060921-0945\njava.version\u003d1.5.0_07\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\nCommand-line arguments:  -os linux -ws gtk -arch x86\n\n!ENTRY org.eclipse.debug.core 4 120 2006-10-31 19:58:09.970\n!MESSAGE Error logged from Debug Core: \n!STACK 0\njava.io.IOException: Pipe broken\n\tat java.io.PipedInputStream.read(PipedInputStream.java:255)\n\tat java.io.PipedInputStream.read(PipedInputStream.java:305)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:254)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:313)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:90)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:138)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:128)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:194)\n\tat java.lang.Thread.run(Thread.java:595)\n\n\n**************** Eclipse tosses this one if the app is RUN without debug\n\n!SESSION 2006-10-31 20:12:03.921 -----------------------------------------------\neclipse.buildId\u003dM20060921-0945\njava.version\u003d1.5.0_07\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\nCommand-line arguments:  -os linux -ws gtk -arch x86\n\n!ENTRY org.eclipse.debug.core 4 120 2006-10-31 20:12:22.970\n!MESSAGE Error logged from Debug Core: \n!STACK 0\njava.io.IOException: read error\n\tat org.eclipse.cdt.utils.spawner.SpawnerInputStream.read0(Native Method)\n\tat org.eclipse.cdt.utils.spawner.SpawnerInputStream.read(SpawnerInputStream.java:60)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:254)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:313)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:90)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:138)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:128)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:194)\n\tat java.lang.Thread.run(Thread.java:595)\n\n***************** Debug console verbosity when run in DEBUG MODE\n\n92-gdb-set confirm off\n92^done\n93-gdb-set width 0\n(gdb) \n93^done\n94-gdb-set height 0\n(gdb) \n94^done\n95-interpreter-exec console echo\n(gdb) \n95^done\n96-gdb-show prompt\n(gdb) \n96^done,value\u003d\"(gdb) \"\n97-gdb-set auto-solib-add on\n(gdb) \n97^done\n98-gdb-set stop-on-solib-events 0\n(gdb) \n98^done\n99-gdb-set stop-on-solib-events 1\n(gdb) \n99^done\n100-gdb-set new-console\n(gdb) \n\u0026\"No symbol \\\"new\\\" in current context.\\n\"\nNo symbol \"new\" in current context.\n100^error,msg\u003d\"No symbol \\\"new\\\" in current context.\"\n101-environment-cd /root/workspace/hello\n(gdb) \n101^done\n(gdb) \n102-environment-directory /root/workspace/hello /root/workspace/hello/.settings /root/workspace/hello/Debug\n102^done,source-path\u003d\"/root/workspace/hello:/root/workspace/hello/.settings:/root/workspace/hello/Debug:$cdir:$cwd\"\n103 info threads\n(gdb) \n\u0026\"info threads\\n\"\n\u0026\"No registers.\\n\"\n103^done\n104-data-list-register-names\n(gdb) \n104^done,register-names\u003d[\"eax\",\"ecx\",\"edx\",\"ebx\",\"esp\",\"ebp\",\"esi\",\"edi\",\"eip\",\"eflags\",\"cs\",\"ss\",\"ds\",\"es\",\"fs\",\"gs\",\"st0\",\"st1\",\"st2\",\"st3\",\"st4\",\"st5\",\"st6\",\"st7\",\"fctrl\",\"fstat\",\"ftag\",\"fiseg\",\"fioff\",\"foseg\",\"fooff\",\"fop\",\"xmm0\",\"xmm1\",\"xmm2\",\"xmm3\",\"xmm4\",\"xmm5\",\"xmm6\",\"xmm7\",\"mxcsr\",\"orig_eax\",\"mm0\",\"mm1\",\"mm2\",\"mm3\",\"mm4\",\"mm5\",\"mm6\",\"mm7\"]\n105-break-insert -t main\n(gdb) \n105^done,bkpt\u003d{number\u003d\"1\",type\u003d\"breakpoint\",disp\u003d\"del\",enabled\u003d\"y\",addr\u003d\"0x080483b4\",func\u003d\"main\",file\u003d\"../hello.c\",line\u003d\"7\",times\u003d\"0\"}\n106-exec-run\n(gdb) \n106^running\n(gdb) \n~\"Stopped due to shared library event\\n\"\nStopped due to shared library event\n106*stopped,thread-id\u003d\"0\"\n107 info program\n(gdb) \n\u0026\"info program\\n\"\n~\"\\tUsing the running image of child process 7965.\\n\"\n~\"Program stopped at 0xb7fa7ff0.\\n\"\n~\"It stopped at a breakpoint that has since been deleted.\\n\"\n~\"Type \\\"info stack\\\" or \\\"info registers\\\" for more information.\\n\"\n107^done\n108 info sharedlibrary\n(gdb) \n\u0026\"info sharedlibrary\\n\"\n~\"From        To          Syms Read   Shared Object Library\\n\"\n~\"0xb7f9a820  0xb7faf3bf  Yes         /lib/ld-linux.so.2\\n\"\n108^done\n109-exec-continue\n(gdb) \n109^running\n(gdb) \n~\"Stopped due to shared library event\\n\"\nStopped due to shared library event\n109*stopped,thread-id\u003d\"0\"\n110 info sharedlibrary\n(gdb) \n\u0026\"info sharedlibrary\\n\"\n~\"From        To          Syms Read   Shared Object Library\\n\"\n~\"0xb7f9a820  0xb7faf3bf  Yes         /lib/ld-linux.so.2\\n\"\n~\"0xb7e6a660  0xb7f4b8c0  Yes         /lib/libc.so.6\\n\"\n110^done\n111-exec-continue\n(gdb) \n111^running\n(gdb) \n111*stopped,thread-id\u003d\"0\",frame\u003d{addr\u003d\"0x080483b4\",func\u003d\"main\",args\u003d[],file\u003d\"../hello.c\",fullname\u003d\"/root/workspace/hello/hello.c\",line\u003d\"7\"}\n112 info threads\n(gdb) \n\u0026\"info threads\\n\"\n112^done\n113-stack-info-depth\n(gdb) \n113^done,depth\u003d\"1\"\n114-stack-list-frames 0 1\n(gdb) \n114^done,stack\u003d[frame\u003d{level\u003d\"0\",addr\u003d\"0x080483b4\",func\u003d\"main\",file\u003d\"../hello.c\",fullname\u003d\"/root/workspace/hello/hello.c\",line\u003d\"7\"}]\n115-data-list-changed-registers\n(gdb) \n115^done,changed-registers\u003d[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"15\",\"24\",\"26\",\"40\",\"41\"]\n116 info sharedlibrary\n(gdb) \n\u0026\"info sharedlibrary\\n\"\n~\"From        To          Syms Read   Shared Object Library\\n\"\n~\"0xb7f9a820  0xb7faf3bf  Yes         /lib/ld-linux.so.2\\n\"\n~\"0xb7e6a660  0xb7f4b8c0  Yes         /lib/libc.so.6\\n\"\n116^done\n(gdb) \n117-stack-list-arguments 0 0 0\n117^done,stack-args\u003d[frame\u003d{level\u003d\"0\",args\u003d[]}]\n118-stack-list-locals 0\n(gdb) \n118^done,locals\u003d[name\u003d\"argc\",name\u003d\"argv\",name\u003d\"x\"]\n(gdb) \n119-var-create - * x\n119^done,name\u003d\"var1\",numchild\u003d\"0\",type\u003d\"int\"\n120-var-evaluate-expression var1\n(gdb) \n120^done,value\u003d\"-1208267584\"\n121-var-create - * argc\n(gdb) \n121^done,name\u003d\"var2\",numchild\u003d\"0\",type\u003d\"int\"\n122-var-evaluate-expression var2\n(gdb) \n\u0026\"Cannot access memory at address 0x0\\n\"\n122^error,msg\u003d\"Cannot access memory at address 0x0\"\n123-var-create - * argv\n(gdb) \n123^done,name\u003d\"var3\",numchild\u003d\"1\",type\u003d\"char **\"\n124-var-evaluate-expression var3\n(gdb) \n\u0026\"Cannot access memory at address 0x0\\n\"\n124^error,msg\u003d\"Cannot access memory at address 0x0\"\n(gdb) \nCannot access memory at address 0x0\nCannot access memory at address 0x0\n125-exec-step 1\n125^running\n(gdb) \n125*stopped,reason\u003d\"end-stepping-range\",thread-id\u003d\"0\",frame\u003d{addr\u003d\"0x080483c5\",func\u003d\"main\",args\u003d[],file\u003d\"../hello.c\",fullname\u003d\"/root/workspace/hello/hello.c\",line\u003d\"8\"}\n(gdb) \n126 info threads\n\u0026\"info threads\\n\"\n126^done\n(gdb) \n127-stack-info-depth\n127^done,depth\u003d\"1\"\n(gdb) \n128-stack-list-frames 0 1\n128^done,stack\u003d[frame\u003d{level\u003d\"0\",addr\u003d\"0x080483c5\",func\u003d\"main\",file\u003d\"../hello.c\",fullname\u003d\"/root/workspace/hello/hello.c\",line\u003d\"8\"}]\n(gdb) \n129-var-update var1\n129^done,changelist\u003d[{name\u003d\"var1\",in_scope\u003d\"false\"}]\n(gdb) \n130-var-delete var1\n130^done,ndeleted\u003d\"1\"\n(gdb) \n131-var-update var2\n132-gdb-exit",
    "It seems that gdb crashes. I think there is something wrong with your executable or gdb, the \"Cannot access memory\" messages are not normal. The errors occur when gdb tries to evaluate the arguments - argc and argv.\nPlease, check if it works from the command line.",
    "I have a similar problem on my laptop.\nWhen stepping, the debugger complains about an error.\nThe console prints something like (dont have exact message since I dont have the laptop with me now):\n\nCannot insert breakpoint. Cannot access memory: Input/Output error.\n\nAfter hours of investigation, I could not find out any relation to gdb, gcc, kernel, etc. It runs fine on another machine with identical configuration. I suspect that it brokened after updating libc.\n\nRunning on the command line, the same error also happens.\n",
    "(In reply to comment #2)\nIt\u0027s not the same problem. Your case probably has something to do with the new libc. In the previous case gdb is crashing.",
    "I also see this problem. The folks at LinuxQuestions.org helped me make some progress... http://www.linuxquestions.org/questions/showthread.php?t\u003d518283\n\nIt appears that gcc 4.1.0 (ie. that in SUSE 10.1, 32-bit) has an optimization where if you don\u0027t use argc and argv in the body of main() those symbols are not present in the binary (even with -g and without any special optimization turned on). The 64-bit compiler doesn\u0027t do this incidentally.\n\nYou get the \"Cannot access memory at address 0x0\" from the gdb *command line* if you simply \"break main\" and print argc in a program that doesn\u0027t use argc/argv (and was compiled with gcc 4.1.0). I note your example doesn\u0027t use argc/argv.\n\nThis is true for C or C++ compilation.\n\nEclipse is presumably confused by this error in some way when it hits the first break. I was also getting the inability to stop at further breakpoints *until* I added code to reference argc/argv, or re-declare main (in C++) as \"int main(int, char *[])\" so that Eclipse wasn\u0027t expecting those symbols.\n\nThere is still an error in the gdb output window (no symbol \"new\" in the current context?), but breakpoints can be set.\n\nHTH,\n-nick",
    "(In reply to comment #4)\nThanks for information. But the original bug is created for a program that has argv and argc. And the behaiour is different.\nBTW, the \"no symbol \"new\" message is not a bug, just ignore it. ",
    "Just to be clear about what I meant, this program :-\n\nint main(int argc, char *argv[])\n{\n    int x \u003d 1;\n    printf(\"hello world\");\n}\n\ndeclares argc/argv, but doesn\u0027t use them. This will show the problem described by this bug (with gcc 4.1.0). If the program is changed to:-\n\nint main(int argc, char *argv[])\n{\n    printf(\"argc\u003d%d, argv[0]\u003d%s\", argc, argv[0]);\n}\n\nThen it both declares and uses both symbols, and (I think!) the problem described by this bug will not be present.\n",
    "Now I see. Thanks.",
    "One more detail (from the LinuxQuestions thread, to record it here in case it helps):\n\n\"[Adding use of argc/v to main] almost fixes the problem with Eclipse. It still reports errors when you break at main, but it will let you view the pair once you\u0027ve stepped into main.\"\n"
  ],
  "commentCreationDates": [
    "2006-11-01T16:19:35+01:00",
    "2006-11-01T17:39:02+01:00",
    "2006-11-21T02:03:02+01:00",
    "2006-11-21T09:44:11+01:00",
    "2007-01-15T13:10:24+01:00",
    "2007-01-15T13:44:37+01:00",
    "2007-01-15T13:52:03+01:00",
    "2007-01-15T14:06:08+01:00",
    "2007-01-15T14:17:23+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "Pipe broken",
      "elements": [
        {
          "method": "java.io.PipedInputStream.read",
          "source": "PipedInputStream.java:255"
        },
        {
          "method": "java.io.PipedInputStream.read",
          "source": "PipedInputStream.java:305"
        },
        {
          "method": "java.io.BufferedInputStream.read1",
          "source": "BufferedInputStream.java:254"
        },
        {
          "method": "java.io.BufferedInputStream.read",
          "source": "BufferedInputStream.java:313"
        },
        {
          "method": "java.io.FilterInputStream.read",
          "source": "FilterInputStream.java:90"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.read",
          "source": "OutputStreamMonitor.java:138"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.access$1",
          "source": "OutputStreamMonitor.java:128"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor$1.run",
          "source": "OutputStreamMonitor.java:194"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "163089",
      "date": "2006-11-01T16:19:35+01:00",
      "product": "CDT",
      "component": "cdt-debug",
      "severity": "major"
    },
    {
      "exceptionType": "java.io.IOException",
      "message": "read error",
      "elements": [
        {
          "method": "org.eclipse.cdt.utils.spawner.SpawnerInputStream.read0",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.cdt.utils.spawner.SpawnerInputStream.read",
          "source": "SpawnerInputStream.java:60"
        },
        {
          "method": "java.io.BufferedInputStream.read1",
          "source": "BufferedInputStream.java:254"
        },
        {
          "method": "java.io.BufferedInputStream.read",
          "source": "BufferedInputStream.java:313"
        },
        {
          "method": "java.io.FilterInputStream.read",
          "source": "FilterInputStream.java:90"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.read",
          "source": "OutputStreamMonitor.java:138"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.access$1",
          "source": "OutputStreamMonitor.java:128"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor$1.run",
          "source": "OutputStreamMonitor.java:194"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "163089",
      "date": "2006-11-01T16:19:35+01:00",
      "product": "CDT",
      "component": "cdt-debug",
      "severity": "major"
    }
  ],
  "groupId": "163089",
  "bugId": "163089",
  "date": "2006-11-01T16:19:35+01:00",
  "product": "CDT",
  "component": "cdt-debug",
  "severity": "major"
}