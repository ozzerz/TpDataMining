{
  "comments": [
    "I20061114-1636\n\nTextSearchVisitor.search(IFile[], IProgressMonitor) creates a new Job and notifies the progress monitor in another thread. This causes problems when the progress monitor expects to be called in the UI Thread.\n\nE.g. when I rename a type with the \"rename in editor\" feature and enable \"Update fully qualified names in non-java files\", I get an error dialog and the exception below. The problem is that RenameLinkedMode.doRename(..) starts the refactoring with the workbench window as context and the StatusLine apparently cannot handle progress updates from other threads.\n\n\n!ENTRY org.eclipse.core.jobs 4 2 2006-11-15 14:59:05.061\n!MESSAGE An internal error occurred during: \"Search progress polling\".\n!STACK 0\norg.eclipse.swt.SWTException: Invalid thread access\n\tat org.eclipse.swt.SWT.error(SWT.java:3407)\n\tat org.eclipse.swt.SWT.error(SWT.java:3330)\n\tat org.eclipse.swt.SWT.error(SWT.java:3301)\n\tat org.eclipse.swt.widgets.Display.error(Display.java:1001)\n\tat org.eclipse.swt.widgets.Display.checkDevice(Display.java:661)\n\tat org.eclipse.swt.widgets.Display.getSystemColor(Display.java:1991)\n\tat org.eclipse.jface.action.StatusLine.updateMessageLabel(StatusLine.java:640)\n\tat org.eclipse.jface.action.StatusLine.setMessage(StatusLine.java:530)\n\tat org.eclipse.jface.action.StatusLine.setMessage(StatusLine.java:518)\n\tat org.eclipse.jface.action.StatusLine.subTask(StatusLine.java:599)\n\tat org.eclipse.jface.action.StatusLineManager$1.subTask(StatusLineManager.java:207)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.subTask(ProgressMonitorWrapper.java:156)\n\tat org.eclipse.core.runtime.SubProgressMonitor.subTask(SubProgressMonitor.java:170)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.subTask(ProgressMonitorWrapper.java:156)\n\tat org.eclipse.core.runtime.SubProgressMonitor.subTask(SubProgressMonitor.java:170)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.subTask(ProgressMonitorWrapper.java:156)\n\tat org.eclipse.core.runtime.SubProgressMonitor.subTask(SubProgressMonitor.java:170)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.subTask(ProgressMonitorWrapper.java:156)\n\tat org.eclipse.core.runtime.SubProgressMonitor.subTask(SubProgressMonitor.java:170)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.subTask(ProgressMonitorWrapper.java:156)\n\tat org.eclipse.core.runtime.SubProgressMonitor.subTask(SubProgressMonitor.java:170)\n\tat org.eclipse.search.internal.core.text.TextSearchVisitor$1.run(TextSearchVisitor.java:148)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "The job has been introduced to fix bug 86963. I think to only way to solve both problems would be to invert the usage of the two threads, i.e. use the calling thread for progress notifications and do the actual search in the job.",
    "- I don\u0027t think one is forced to serve a progress monitor in the same thread. At least this isn\u0027t specified by the progress monitor\n- In your case, why do you execute the search operation in the UI thread? That\u0027s something that should be avoided in general",
    "\u003e - I don\u0027t think one is forced to serve a progress monitor in the same thread.\n\u003e At least this isn\u0027t specified by the progress monitor\n\nHard to tell, the section \"The workbench and threads\" in http://help.eclipse.org/help32/index.jsp?topic\u003d/org.eclipse.platform.doc.isv/guide/swt_threading.htm says that in general, Platform/UI APIs assume they\u0027re called in the UI thread unless noted otherwise.\n\n\u003e - In your case, why do you execute the search operation in the UI thread?\n\u003e That\u0027s something that should be avoided in general\n\nI\u0027m investigating; I guess I can indeed set fork\u003dtrue in my use case, which would solve this particular problem.",
    "IProgressMonitor is org.eclipse.core.runtime. Operations are typically implemented in core which doesn\u0027t know of the concept of the UI thread.\n\nI think we could also file this against platform UI. They normally already have progress monitors that forward calls with sync exec.",
    "\u003e I think we could also file this against platform UI. They normally already have\n\u003e progress monitors that forward calls with sync exec.\n\nHm, they already do, but it\u0027s not possible in this case: In ModalContext.run(..), if fork is false, the operation must be run in the current thread (which is the UI thread in our case). If they would wrapper the progress monitor into an AccumulatingProgressMonitor, then updates would only occur in an asyncExec, which is only executed when the whole refactoring operation returns (i.e. progress bar is not redrawn at all...)."
  ],
  "commentCreationDates": [
    "2006-11-15T14:16:07+01:00",
    "2006-11-15T14:36:38+01:00",
    "2006-11-15T14:41:32+01:00",
    "2006-11-15T15:33:20+01:00",
    "2006-11-15T17:17:55+01:00",
    "2006-11-15T23:19:05+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid thread access",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3407"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3330"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3301"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.error",
          "source": "Display.java:1001"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.checkDevice",
          "source": "Display.java:661"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.getSystemColor",
          "source": "Display.java:1991"
        },
        {
          "method": "org.eclipse.jface.action.StatusLine.updateMessageLabel",
          "source": "StatusLine.java:640"
        },
        {
          "method": "org.eclipse.jface.action.StatusLine.setMessage",
          "source": "StatusLine.java:530"
        },
        {
          "method": "org.eclipse.jface.action.StatusLine.setMessage",
          "source": "StatusLine.java:518"
        },
        {
          "method": "org.eclipse.jface.action.StatusLine.subTask",
          "source": "StatusLine.java:599"
        },
        {
          "method": "org.eclipse.jface.action.StatusLineManager$1.subTask",
          "source": "StatusLineManager.java:207"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.subTask",
          "source": "ProgressMonitorWrapper.java:156"
        },
        {
          "method": "org.eclipse.core.runtime.SubProgressMonitor.subTask",
          "source": "SubProgressMonitor.java:170"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.subTask",
          "source": "ProgressMonitorWrapper.java:156"
        },
        {
          "method": "org.eclipse.core.runtime.SubProgressMonitor.subTask",
          "source": "SubProgressMonitor.java:170"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.subTask",
          "source": "ProgressMonitorWrapper.java:156"
        },
        {
          "method": "org.eclipse.core.runtime.SubProgressMonitor.subTask",
          "source": "SubProgressMonitor.java:170"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.subTask",
          "source": "ProgressMonitorWrapper.java:156"
        },
        {
          "method": "org.eclipse.core.runtime.SubProgressMonitor.subTask",
          "source": "SubProgressMonitor.java:170"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.subTask",
          "source": "ProgressMonitorWrapper.java:156"
        },
        {
          "method": "org.eclipse.core.runtime.SubProgressMonitor.subTask",
          "source": "SubProgressMonitor.java:170"
        },
        {
          "method": "org.eclipse.search.internal.core.text.TextSearchVisitor$1.run",
          "source": "TextSearchVisitor.java:148"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "164643",
      "date": "2006-11-15T14:16:07+01:00",
      "product": "Platform",
      "component": "Search",
      "severity": "normal"
    }
  ],
  "groupId": "164643",
  "bugId": "164643",
  "date": "2006-11-15T14:16:07+01:00",
  "product": "Platform",
  "component": "Search",
  "severity": "normal"
}