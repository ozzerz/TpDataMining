{
  "comments": [
    "When invalid code is getting compiled, the stack map frame generation should not fail with NPE.\njava.lang.NullPointerException\tat org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.getfield(StackMapFrameCodeStream.java:799)\tat org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReadSequence(QualifiedNameReference.java:653)\tat org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCode(QualifiedNameReference.java:386)\tat org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateCode(ReturnStatement.java:126)\tat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:229)\tat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:176)\t\n\nIt should protect itself against this and the code should fail at runtime with a VerifyError since the code generation produced invalid bytecodes.",
    "Steps to reproduce:\nchange line 595 in QualifiedNameReference with:\nif ((needValue \u0026\u0026 !lastFieldBinding.isStatic())) {\n\nand execute GenericTypeTest#test1116 in 1.6 mode.",
    "Created an attachment (id\u003d61108)\nProposed fix\n\n",
    "Released for 3.3M6.",
    "Verified for 3.3 M6 using I20070319-1800.\n"
  ],
  "commentCreationDates": [
    "2007-03-15T19:58:31+01:00",
    "2007-03-15T19:59:17+01:00",
    "2007-03-16T16:03:05+01:00",
    "2007-03-16T16:03:44+01:00",
    "2007-03-20T16:40:55+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.getfield",
          "source": "StackMapFrameCodeStream.java:799"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateReadSequence",
          "source": "QualifiedNameReference.java:653"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateCode",
          "source": "QualifiedNameReference.java:386"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateCode",
          "source": "ReturnStatement.java:126"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode",
          "source": "AbstractMethodDeclaration.java:229"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode",
          "source": "AbstractMethodDeclaration.java:176"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "177623",
      "date": "2007-03-15T19:58:31+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "177623",
  "bugId": "177623",
  "date": "2007-03-15T19:58:31+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}