{
  "comments": [
    "Eclipse 3.2 RC4\nCDT 3.1 RC1 (HEAD)\n\nWhen trying to expand an executable below the \"Binary\" node, following exception is logged:\n\njava.lang.IllegalArgumentException: Path must include project and resource name: /main.C\n\tat org.eclipse.core.runtime.Assert.isLegal(Assert.java:62)\n\tat org.eclipse.core.internal.resources.Workspace.newResource(Workspace.java:1571)\n\tat org.eclipse.core.internal.resources.Container.getFile(Container.java:116)\n\tat org.eclipse.cdt.internal.core.model.Binary.addSourceFiles(Binary.java:303)\n\tat org.eclipse.cdt.internal.core.model.Binary.computeChildren(Binary.java:251)\n\tat org.eclipse.cdt.internal.core.model.Binary.buildStructure(Binary.java:239)\n\tat org.eclipse.cdt.internal.core.model.Openable.generateInfos(Openable.java:292)\n\tat org.eclipse.cdt.internal.core.model.CElement.openWhenClosed(CElement.java:399)\n\tat org.eclipse.cdt.internal.core.model.CElement.getElementInfo(CElement.java:279)\n\tat org.eclipse.cdt.internal.core.model.CElement.getElementInfo(CElement.java:269)\n\tat org.eclipse.cdt.internal.core.model.Parent.getChildren(Parent.java:54)\n\tat org.eclipse.cdt.internal.ui.BaseCElementContentProvider.getChildren(BaseCElementContentProvider.java:203)\n\tat org.eclipse.cdt.internal.ui.cview.CViewContentProvider.getChildren(CViewContentProvider.java:53)\n[...]",
    "I cannot reproduce this anymore. Either it was fixed by accident or it was just some temporary \"weakness\". Anyway, resolving to WORKSFORME.",
    "Reopened. It happens again with RC2 and HEAD (~RC3).",
    "Created an attachment (id\u003d44257)\nSample hello world project with cygwin binaries\n\nThe project can be imported as \"Existing Project into Workspace\".\nTrying to expand any binary of the project (hello_world.exe, main.o) in the C/C++ Projects view logs an IllegalArgumentException (see comment 0) and nothing is expanded.",
    "I\u0027m going to break the rules and keep this on the inbox and set the target milestone. If someone in cdt-core can take a look at this that would be great.",
    "Happens when the executable is built with relative paths, for example for managed make projects. The GNU Elf parser extracts relative file names (../hello.c). Attempt to append a relative file name to the project name (/hello) generates a non-existing path (/hello.c).\nCan be easily reproduced on Linux with any managed build project and GNU ELF parser.",
    "We now attempt to resolve relative path entries before checking to see if the file is already in the project. This avoids the IllegalArgumentException and will find the correct source file if it hasn\u0027t moved.",
    "Please note that C files (not headers !) are passed twice to \nBinary.addSourceFile() method: 1st time with full path, and\n2nd time with \"../*\". So when we normalize all relative paths,\nwe\u0027ll see duplicated file references.\n\nBelow is a list of \"filename\"\u0027s passed to this method for\nsimple project containing 2\".c\" and 2\".h\" files. (Gnu Elf).\nFor the same project on Win32, only full path refs passed.\n\n1\u003e\u003e/projects/eclipse/cdt/workspaces/runtime-New_configuration/test/m1.c\n1\u003e\u003e/usr/include/stdio.h\n1\u003e\u003e/usr/include/features.h\n1\u003e\u003e/usr/include/sys/cdefs.h\n1\u003e\u003e/usr/include/gnu/stubs.h\n1\u003e\u003e/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h\n1\u003e\u003e/usr/include/bits/types.h\n1\u003e\u003e/usr/include/bits/wordsize.h\n1\u003e\u003e/usr/include/bits/typesizes.h\n1\u003e\u003e/usr/include/libio.h\n1\u003e\u003e/usr/include/_G_config.h\n1\u003e\u003e/usr/include/wchar.h\n1\u003e\u003e/usr/include/bits/wchar.h\n1\u003e\u003e/usr/include/gconv.h\n1\u003e\u003e/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stdarg.h\n1\u003e\u003e/usr/include/bits/stdio_lim.h\n1\u003e\u003e/usr/include/bits/sys_errlist.h\n1\u003e\u003e../h1.h\n1\u003e\u003e../m2.h\n1\u003e\u003e../m1.c\n1\u003e\u003e/projects/eclipse/cdt/workspaces/runtime-New_configuration/test/m2.c\n1\u003e\u003e../m2.c\n",
    "Thanks, I noticed the duplicate entries but left them as I only wanted to make minimal changes at this point. I\u0027ll go back and remove the duplicates for 3.1.x.",
    "Created an attachment (id\u003d44810)\nAvoid files duplication while expanding binary node\n\nPatch applied to Head now.",
    "Trying the changed code on Linux I have found out that the source files list of a binary includes entries like \u003cproject directory\u003e\u003csystem source file\u003e. The creation of the translation units for these entries doesn\u0027t make sense. It can not be opened, because there is no file with that name in the local file system, not to mention that the name itself is misleading.\nThe attached patch ignores the source names that can\u0027t be associated with files in the file system.\nDave Inglis\u0027 suggestion to replace translation units by IBinaryModule objects needs too many changes and can\u0027t be done in the 3.1 release.  \n",
    "Created an attachment (id\u003d44864)\nIgnores nonexistent file names.\n\n",
    "Needs serious changes, moving to 4.0.",
    "Returning to the pool."
  ],
  "commentCreationDates": [
    "2006-05-18T13:31:18+02:00",
    "2006-05-30T09:32:20+02:00",
    "2006-06-13T13:52:45+02:00",
    "2006-06-13T14:02:36+02:00",
    "2006-06-14T17:22:30+02:00",
    "2006-06-14T23:33:17+02:00",
    "2006-06-15T17:41:20+02:00",
    "2006-06-16T14:23:41+02:00",
    "2006-06-16T16:32:42+02:00",
    "2006-06-19T13:21:52+02:00",
    "2006-06-19T21:52:53+02:00",
    "2006-06-19T21:59:47+02:00",
    "2006-08-22T10:44:34+02:00",
    "2007-06-18T16:38:34+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Path must include project and resource name: /main.C",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Assert.isLegal",
          "source": "Assert.java:62"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.newResource",
          "source": "Workspace.java:1571"
        },
        {
          "method": "org.eclipse.core.internal.resources.Container.getFile",
          "source": "Container.java:116"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.Binary.addSourceFiles",
          "source": "Binary.java:303"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.Binary.computeChildren",
          "source": "Binary.java:251"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.Binary.buildStructure",
          "source": "Binary.java:239"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.Openable.generateInfos",
          "source": "Openable.java:292"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CElement.openWhenClosed",
          "source": "CElement.java:399"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CElement.getElementInfo",
          "source": "CElement.java:279"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CElement.getElementInfo",
          "source": "CElement.java:269"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.Parent.getChildren",
          "source": "Parent.java:54"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.BaseCElementContentProvider.getChildren",
          "source": "BaseCElementContentProvider.java:203"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.cview.CViewContentProvider.getChildren",
          "source": "CViewContentProvider.java:53"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "142465",
      "date": "2006-05-18T13:31:18+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "normal"
    }
  ],
  "groupId": "142465",
  "bugId": "142465",
  "date": "2006-05-18T13:31:18+02:00",
  "product": "CDT",
  "component": "cdt-core",
  "severity": "normal"
}