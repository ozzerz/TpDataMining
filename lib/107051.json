{
  "comments": [
    "I was mirroring eclipse update site (all features), and it completed with \nerrors.  The eclipse/configuration.#############.log file contains tens of \nfollowing:\n\n!ENTRY org.eclipse.update.core 4 0 2005-08-15 12:57:06.596\n!MESSAGE  [Too many open files]\n!STACK 0\njava.util.zip.ZipException: Too many open files\n\tat java.util.zip.ZipFile.open(Native Method)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:204)\n\tat java.util.jar.JarFile.\u003cinit\u003e(JarFile.java:132)\n\tat java.util.jar.JarFile.\u003cinit\u003e(JarFile.java:97)\n\tat org.eclipse.update.core.JarContentReference.asJarFile\n(JarContentReference.java:142)\n\tat org.eclipse.update.core.JarContentReference.peek\n(JarContentReference.java:324)\n\tat \norg.eclipse.update.internal.mirror.MirrorSiteFactory.parseDownloadedPluginsAndF\nragments(MirrorSiteFactory.java:127)\n\tat org.eclipse.update.internal.mirror.MirrorSiteFactory.createSite\n(MirrorSiteFactory.java:79)\n\tat org.eclipse.update.internal.mirror.MirrorCommand.getMirrorSite\n(MirrorCommand.java:124)\n\tat org.eclipse.update.internal.mirror.MirrorCommand.run\n(MirrorCommand.java:56)\n\tat org.eclipse.update.standalone.ScriptedCommand.run\n(ScriptedCommand.java:64)\n\tat org.eclipse.update.standalone.StandaloneUpdateApplication.run\n(StandaloneUpdateApplication.java:47)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\n\nThis was for plug-ins contained in 200-300 features that are on the site.  I \nsuppose the problem may be hit for a given version it the product is \nsufficiently large.",
    "I repeated the mirroring process few more times, but it always hits this \nissue.  Hundreds of java.util.zip.ZipException are logged, so I am unable to \ncompletely mirror the eclipse updates site.  My local mirror already contains \ncontents of eclipse testUpdates, and together with updates it is too much to \nhandle.\n\nLooking at the code, ,some access to Jar files is controlled by a class.\n\nJarContentReference class contains a list of all JarFile opened.  The size of \nthe list is unbound, and the files are closed only on platform shutdown.\n\nSecond problem is that not all reading from Jars occurs using \nJarContentReference.  ContentReference API contains asURL() method that in \nthis case returns URL of the form jar:file:..., and some parts of Update code \nopen URLs directly using Java APIs.  The OtherResponse class does \nurl.openConnection() in case of jar:file: URL.  That obviously presents a \nchallenge when to close the files or how to keep track of them.\n\nI think the APIs should not open URLs directly at all.  It would be best if \nthey are completely removed from APIs as they are opened to easily.  A \nsymbolic equivalent should be introduced that could be implemented only by \neach protocol/transport implementation.  This would ensure that the Response \nclasses that already exist in Update would have their Request equivalent and \nboth could be use component-wide across update.  Each implementation could \nimplement its own caching and recovery strategy, that in the long run would \neliminate duplicate http connections or too many jar files open.",
    "I used Sun\u0027s VM.\nProbably 1.5_04, but I am not sure."
  ],
  "commentCreationDates": [
    "2005-08-15T19:19:14+02:00",
    "2005-08-15T21:28:13+02:00",
    "2005-10-25T20:08:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.zip.ZipException",
      "message": "Too many open files",
      "elements": [
        {
          "method": "java.util.zip.ZipFile.open",
          "source": "Native Method"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:204"
        },
        {
          "method": "java.util.jar.JarFile.\u003cinit\u003e",
          "source": "JarFile.java:132"
        },
        {
          "method": "java.util.jar.JarFile.\u003cinit\u003e",
          "source": "JarFile.java:97"
        },
        {
          "method": "org.eclipse.update.core.JarContentReference.asJarFile",
          "source": "JarContentReference.java:142"
        },
        {
          "method": "org.eclipse.update.core.JarContentReference.peek",
          "source": "JarContentReference.java:324"
        },
        {
          "method": "org.eclipse.update.internal.mirror.MirrorSiteFactory.parseDownloadedPluginsAndFragments",
          "source": "MirrorSiteFactory.java:127"
        },
        {
          "method": "org.eclipse.update.internal.mirror.MirrorSiteFactory.createSite",
          "source": "MirrorSiteFactory.java:79"
        },
        {
          "method": "org.eclipse.update.internal.mirror.MirrorCommand.getMirrorSite",
          "source": "MirrorCommand.java:124"
        },
        {
          "method": "org.eclipse.update.internal.mirror.MirrorCommand.run",
          "source": "MirrorCommand.java:56"
        },
        {
          "method": "org.eclipse.update.standalone.ScriptedCommand.run",
          "source": "ScriptedCommand.java:64"
        },
        {
          "method": "org.eclipse.update.standalone.StandaloneUpdateApplication.run",
          "source": "StandaloneUpdateApplication.java:47"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "107051",
      "date": "2005-08-15T19:19:14+02:00",
      "product": "Platform",
      "component": "Update",
      "severity": "major"
    }
  ],
  "groupId": "107051",
  "bugId": "107051",
  "date": "2005-08-15T19:19:14+02:00",
  "product": "Platform",
  "component": "Update",
  "severity": "major"
}