{
  "comments": [
    "build 3.0RC2\n\n1) create X.java\npublic class X {\n  public void foo(int i){}\n  public void foo(int i){}\n}\n2) select the second method \u0027foo\u0027\n3) do Refactor\u003eExtract interface\n4) name the interface \u0027I\u0027 and select at least one method\n5) do OK\n an error window appear and an NPE occur\n\njava.lang.NullPointerException\n\tat \norg.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.addImport\n(ImportsStructure.java:424)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactori\nng.addImportsToTypesReferencedInMethodDeclarations\n(ExtractInterfaceRefactoring.java:628)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactori\nng.addImportsToNewCu(ExtractInterfaceRefactoring.java:488)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactori\nng.createExtractedInterfaceCUSource(ExtractInterfaceRefactoring.java:481)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactori\nng.createExtractedInterface(ExtractInterfaceRefactoring.java:445)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactori\nng.createChange(ExtractInterfaceRefactoring.java:276)\n\tat org.eclipse.ltk.core.refactoring.CreateChangeOperation.run\n(CreateChangeOperation.java:117)\n\tat org.eclipse.ltk.core.refactoring.PerformChangeOperation.run\n(PerformChangeOperation.java:182)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1673)\n\tat org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run\n(WorkbenchRunnableAdapter.java:58)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:101)",
    "The problem is that ReferenceFinderUtil#getTypesUsedInDeclaration doesn\u0027t \ncheck if the returned binding is !\u003d null.\n\nShould be fixed for RC3.",
    "PullUp and Extract Interface refactoring is affected by this.",
    "This also happens for the following example:\n\npublic class X {\n\t  public XXX foo2(int i){return null;}\n}\n\n",
    "Created an attachment (id\u003d12189)\nPatch that fixes the problem\n",
    "+1",
    "Fixed reviewed by Martin Aeschlimann and released for RC3.",
    "OOPS - yes, no more NPE now. I exercised the example given by David with class \nX having two methods foo(). However after I extracted the interface the quick \nfix annotation on the side of class X offered me to add the unimplemented \nmethods from the interface. I was curious and gave it a try (actually two). \nOne more method foo having the same signature as the two already existing foo-\ns was added. You can do quick fixes and add more new methods like this \nforever...",
    "verified as well (I-I20040619-200406192000)\n"
  ],
  "commentCreationDates": [
    "2004-06-15T19:43:34+02:00",
    "2004-06-15T22:08:58+02:00",
    "2004-06-15T22:12:01+02:00",
    "2004-06-15T22:45:14+02:00",
    "2004-06-15T22:47:58+02:00",
    "2004-06-16T10:33:15+02:00",
    "2004-06-17T11:08:36+02:00",
    "2004-06-18T20:08:31+02:00",
    "2004-06-21T12:38:25+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.addImport",
          "source": "ImportsStructure.java:424"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.addImportsToTypesReferencedInMethodDeclarations",
          "source": "ExtractInterfaceRefactoring.java:628"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.addImportsToNewCu",
          "source": "ExtractInterfaceRefactoring.java:488"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createExtractedInterfaceCUSource",
          "source": "ExtractInterfaceRefactoring.java:481"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createExtractedInterface",
          "source": "ExtractInterfaceRefactoring.java:445"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createChange",
          "source": "ExtractInterfaceRefactoring.java:276"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:117"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.PerformChangeOperation.run",
          "source": "PerformChangeOperation.java:182"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1673"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:58"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "67314",
      "date": "2004-06-15T19:43:34+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "67314",
  "bugId": "67314",
  "date": "2004-06-15T19:43:34+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}