{
  "comments": [
    "This problem became apparent when printing stack traces from Exceptions.  The\nfollowing example code illustrates the problem:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\npublic class ConsoleBug {\n  public static void main(String[] args) {\n    int max \u003d 100;\n    int count \u003d 0;\n    while (count \u003c max) {\n      try {\n        if (count % 2 \u003d\u003d 0) {\n          throw new Exception();\n        } else {\n          System.out.println(\"This is count: \" + count);\n          count++;\n        }\n      } catch (Exception e) {\n        e.printStackTrace();\n        count++;\n      }\n    }\n  }\n}\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nThe output of this program has areas where the System.out.println() text appears\nat the end of a printStackTrace() call.  Here is some sample output:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\njava.lang.Exception: Exception for count: 68\n\tat ConsoleBug.main(ConsoleBug.java:8)This is count: 69\n\u003d\u003d\u003d\u003d\u003d\u003d\n\nThe expected behavior is that the \u0027This is count: xx\u0027 lines always appear on a\nnew line, and this is indeed what I see when running the code outside Eclipse.\n\nThere are also areas in the output which do not alternate between showing a\nstack trace and showing the current count.  Here is some more sample output:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\njava.lang.Exception: Exception for count: 20\n\tat ConsoleBug.main(ConsoleBug.java:8)\njava.lang.Exception: Exception for count: 22\n\tat ConsoleBug.main(ConsoleBug.java:8)\njava.lang.Exception: Exception for count: 24This is count: 19\nThis is count: 21\nThis is count: 23\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nAlso note that the above output shows an out of order condition where count 22\nhas occurred prior to counts 19 and 21.  \n\nOnce again, running the code outside Eclipse produces the expected results.\n\nPresumably, this is strictly an output problem and not an underlying error in\nthe execution model.\n\nJim S.",
    "Moving to Java Debug",
    "Currently we use two threads to read from out and err. Could use one thread.",
    "*** Bug 9720 has been marked as a duplicate of this bug. ***",
    "The console is also quite slow. An example is a program that prints a lot \nof debug info before opening the UI. When the UI is open for few (15) seconds,\n(which means the program stopped the debug prints 15secs ago), I still see\ndata being written to the console.\nThis never happend to me with command line java",
    "This problem is not solvable.\n\nThe VM does not provide notification of system out and system err (nor does it\nprovide notification that it\u0027s waiting for system in).\n\nThis means that the debugger must poll the process\u0027s output and error streams.\nThere is absolutely no way to guarantee correct ordering of err and out when\npolling. Putting the polling in a single thread doesn\u0027t help.\n\nA single polling thread has to read from one stream then the other. Here\u0027s the\ntest case that fails:\nWrite OUT\nWrite ERR\nRead ERR\nRead OUT",
    "I\u0027ll investigate the speed issue. If I can make the console faster without\nlocking up the UI in the case of a ton of output (and I believe I can), I\u0027ll\nopen a new bug report to track that problem.",
    "May be the solution is to let the OS tie together stderr and stdout (e.g. with \nthe \u00272\u003e\u00261\u0027 syntax in /bin/sh).\nI know for sure that this will ensure the correct sequence of output both on \nUnix and Windows.\nHowever we would loose the ability to use different colors for the two streams.\nBut I think it is more important to have the correct order and no colors \nthan to have different colors but wrong order.\n\nBTW, IDEs which preserve the correct order don\u0027t use different colors. This is \nat least true for IntelliJ\u0027s IDEA and Project Builder on MacOS X.",
    "Re-opening with no committment",
    "Deferred",
    "This appears fixed with our improved console output (i.e. the core stream \nreaders no longer poll - output is queued to the UI, which polls and processes \nthe queued output).",
    "Please verify.",
    "It\u0027s much better now. I feel comfortable calling this \"as good as it gets.\"",
    "*** Bug 19535 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2001-11-17T01:50:14+01:00",
    "2001-11-19T08:09:30+01:00",
    "2002-02-26T20:23:27+01:00",
    "2002-02-26T20:46:05+01:00",
    "2002-02-28T21:55:27+01:00",
    "2002-03-13T16:45:42+01:00",
    "2002-03-13T16:48:28+01:00",
    "2002-03-14T13:14:29+01:00",
    "2002-03-15T16:04:18+01:00",
    "2002-03-22T20:21:38+01:00",
    "2002-04-19T18:06:36+02:00",
    "2002-04-19T18:06:49+02:00",
    "2002-04-19T22:06:57+02:00",
    "2002-11-14T20:04:51+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "Exception for count: 68",
      "elements": [
        {
          "method": "ConsoleBug.main",
          "source": "ConsoleBug.java:8"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "6036",
      "date": "2001-11-17T01:50:14+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.Exception",
      "message": "Exception for count: 20",
      "elements": [
        {
          "method": "ConsoleBug.main",
          "source": "ConsoleBug.java:8"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "6036",
      "date": "2001-11-17T01:50:14+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.Exception",
      "message": "Exception for count: 22",
      "elements": [
        {
          "method": "ConsoleBug.main",
          "source": "ConsoleBug.java:8"
        }
      ],
      "number": 2,
      "commentIndex": 0,
      "bugId": "6036",
      "date": "2001-11-17T01:50:14+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "6036",
  "bugId": "6036",
  "date": "2001-11-17T01:50:14+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}