{
  "comments": [
    "Open up AspectJ Compiler and in the input jars (aspects) field, try \nentering \"sub/a.jar;sub/b.jar\"\n\nThe dialog rejects this input (it strips out the separator character and tries \nto find a file named sub/a.jarsub/b.jar !). On Windows, using a backslash or a \nfully qualified file path gives an NPE error!\n\njava.lang.NullPointerException\nat org.eclipse.ajdt.internal.ui.ajde.ProjectProperties.getSourcePathResources\n(ProjectProperties.java:665)\nat org.aspectj.ajde.internal.CompilerAdapter.configureProjectOptions\n(CompilerAdapter.java:492)\nat org.aspectj.ajde.internal.CompilerAdapter.genBuildConfig\n(CompilerAdapter.java:147)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:78)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:165)\n\nSo the only workaround I can see is to merge all the jars into one big input \njar (yuck!)",
    "It turned out that I still had the other project entered as a source project \n(*), which was causing the subsequent NPE when I entered file paths using \nbackslashes. So the core issues in the bug are:\n\n1) not accepting forward slashes (/) in file paths if more than one path is \nentered, while accepting them for a single file path\n2) not providing useful errors if another AspectJ project is tagged as an input \nand its output jar is also on the aspect path\n\nFortunately this does leave a work-around.\n\n(*) I\u0027m using aspect input jars to work-around the flakiness of AJDT whereby \nit \"loses the connection\" between a base AspectJ project and a dependent one, \nso that changes to the base don\u0027t affect the dependent :-(",
    "There\u0027s another case where the runtime exception problem occurs. If the second \ninput jar file starts with ..\\.. then I get the same stack trace when building. \nE.g., ..\\..\\a.jar;..\\..\\b.jar causes the exception. \n\nReplacing with the full file path works around the problem, \ne.g., ..\\..\\a.jar;c:\\workspace\\eclipse\\b.jar\n",
    "Could not reproduce bug in current AJDT and Eclipse 3.0 M8. May already be \nfixed.",
    "If there is a remaining issue here, it should be addressed by the new UI for \nspecifying injars/aspectpath that George is working on.",
    "old text field UI replaced. effectively fixed."
  ],
  "commentCreationDates": [
    "2004-03-09T19:08:59+01:00",
    "2004-03-09T19:14:11+01:00",
    "2004-03-10T02:17:38+01:00",
    "2004-04-13T11:13:25+02:00",
    "2004-05-24T16:34:41+02:00",
    "2004-07-27T09:16:32+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ajdt.internal.ui.ajde.ProjectProperties.getSourcePathResources",
          "source": "ProjectProperties.java:665"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.configureProjectOptions",
          "source": "CompilerAdapter.java:492"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.genBuildConfig",
          "source": "CompilerAdapter.java:147"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:78"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:165"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "54185",
      "date": "2004-03-09T19:08:59+01:00",
      "product": "AJDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "54185",
  "bugId": "54185",
  "date": "2004-03-09T19:08:59+01:00",
  "product": "AJDT",
  "component": "UI",
  "severity": "normal"
}