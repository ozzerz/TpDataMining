{
  "comments": [
    "I have two models, model1 and model2. Model2 is referencing model1 in such a way that elements from model2 inherit from elements in model1. Code for model1 is generated from model1.genmodel by EMF 2.2.0 M3. Code for model2 is generated from model2.genmodel by EMF 2.2.0 M4.\n\nThere is an NPE when creating instance of Model2 (by selecting element B or C as root).\n\nThe sample project is attached.\n\nException:\nWarning 2006-02-02 10:56:02.014 \njava.lang.NullPointerException\nat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eDerivedStructuralFeatureID(BasicEObjectImpl.java:980)\nat package1.impl.AImpl.eGet(AImpl.java:130)\nat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eGet(BasicEObjectImpl.java:526)\nat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eOpenIsSet(BasicEObjectImpl.java:785)\nat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eDynamicIsSet(BasicEObjectImpl.java:772)\nat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eDynamicIsSet(BasicEObjectImpl.java:760)\nat package1.impl.AImpl.eIsSet(AImpl.java:185)\nat org.eclipse.emf.ecore.util.EContentsEList$FeatureIteratorImpl.hasNext(EContentsEList.java:375)\nat org.eclipse.emf.ecore.util.EcoreUtil$ProperContentIterator.hasNext(EcoreUtil.java:1087)\nat org.eclipse.emf.ecore.util.EcoreUtil$ContentTreeIterator.hasNext(EcoreUtil.java:1263)\nat org.eclipse.emf.ecore.resource.impl.ResourceImpl.attached(ResourceImpl.java:742)\nat org.eclipse.emf.ecore.resource.impl.ResourceImpl$ContentsEList.inverseAdd(ResourceImpl.java:325)\nat org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique(NotifyingListImpl.java:301)\nat org.eclipse.emf.common.util.BasicEList.add(BasicEList.java:599)\nat package2.presentation.Package2ModelWizard$1.execute(Package2ModelWizard.java:235)\nat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:100)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1714)\nat org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:112)\nat org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:360)\nat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:305)\nat org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:843)\nat package2.presentation.Package2ModelWizard.performFinish(Package2ModelWizard.java:253)\nat org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)\nat org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)\nat org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:607)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:914)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3285)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2905)\nat org.eclipse.jface.window.Window.runEventLoop(Window.java:808)\nat org.eclipse.jface.window.Window.open(Window.java:786)\nat org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:181)\nat org.eclipse.jface.action.Action.runWithEvent(Action.java:492)\nat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:530)\nat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:480)\nat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:392)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:914)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3285)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2905)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1762)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1726)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:397)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)\nat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:109)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:379)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nat java.lang.reflect.Method.invoke(Unknown Source)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:282)\nat org.eclipse.core.launcher.Main.run(Main.java:977)\nat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "Created an attachment (id\u003d34023)\nSample project\n\n",
    "Valdimir,\n\nYou have tried regenerating both with the same level?  That\u0027s the first thing I would try...",
    "Ofcourse when the code for both models is generated with the same milestone build it works fine. \n\nHowever the real project that I work on uses a third party model with code generated by EMF 2.1.0. This code is generated using external JET templates which we don\u0027t have, so we cannot regenerate the code with the latest version of EMF. On the other hand we are planning to use GMF and that one requires the latest EMF milestone build. So it would be great if we could mix code generated from different versions of EMF. Having said that, I am not sure what is EMF project\u0027s committment to backward compatibility.\n",
    "Models that have a subclass dependency are much harder to keep in synch.  Changes to the base model, which require regeneration, also require regeneration of the derived model (e.g., to pick up any new features in the generated eGet).   The new patterns are intended (in addition to improving performance) to help with that issue, so that only recompilation is necessary (e.g., to ensure that the feature ID constants have the right value).\n\nThe only way to get your scenario to work is to generate with 2.1 yourself; that code will still work in 2.2.  Maybe you could use copies of the 2.1 templates in the 2.2 environment and use dynamic templates; haven\u0027t tried that so not absolutely sure that will work. Another approach is to turn off the Minimal Reflective Methods GenModel property (so that eGet doesn\u0027t call super, which is what avoids the need to regenerate for features added to base) and to generate feature-based eGet (eSet, eAdd and so on) to be exactly as the appear in BasicEObjectImpl, rather than as they appear in the generated super class.\n\nAre any of these approaches workable for you?",
    "The first approach does not work unforunately. I tried using dynamic templates from M3 with M4 and got a bunch of exceptions that prevented code generation. The exception is added at the very end.\n\nThe second approach could work if there were an option to get those methods (eGet(EStructuralFeature eFeature, ..), eSet(EStructuralFeature eFeature, ..), ...) generated by EMF like they were in M3. Coding those methods manually would be a real pain. \n\nI guess I can try to use M3 to generate code and then M4 to run it (we need M4 for this other reason I mentioned previously), but I would prefer a long term solution. \n\nIs there a plan to address this problem in the near future or is it too rare and particular a use case? I am willing to consider other options.\n\n\nThe exception:\n\nWarning 2006-02-02 15:11:49.923 \norg.eclipse.emf.codegen.jet.JETException: \n\tat org.eclipse.emf.codegen.jet.JETEmitter.generate(JETEmitter.java:391)\n\tat org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate(GenBaseImpl.java:573)\n\tat org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate(GenPackageImpl.java:2456)\n\tat org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate(GenBaseImpl.java:350)\n\tat org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$8.generate(GenModelActionBarContributor.java:235)\n\tat org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$GenerateAction$1.execute(GenModelActionBarContributor.java:295)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:100)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1714)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:112)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.emf.codegen.jet.JETEmitter.generate(JETEmitter.java:383)\n\t... 9 more\nCaused by: java.lang.ClassCastException: [Ljava.lang.Object;\n\tat org.eclipse.emf.codegen.ecore.templates.model.FactoryClass_.generate(FactoryClass_.java:186)\n\t... 14 more\n\n\n",
    "Vladimir,\n\nThe big problem for us, as for you, is the time and effort this would take in the face of so little resource. :-( Do you extended many classes from the base model, or just a few?",
    "Vladimir,\n\nHave you been able to workaround or avoid this problem?",
    "Ed,\nI am currently looking at obtaining/recreating dynamic JET templates for our super-model so that I can regenerate M4 approved code from it. I figured that keeping up to date with EMF milestones is the best way to assure that the code generated from both models works with future releases of EMF.\n\nI will know in couple of days if it is successful or not, and if it is I will close the bug.",
    "Vladimir,\n\nHow goes the battle?",
    "Ed,\nyesterday I was finally able to update all dynamic templates and generate working code out of both models. So this issue is not a problem for us any more. Still you may want to add to M4 release notes that there is generated code backward compatibility issue and that there is a workaround.\n\nI guess you can close the bug now.\n\nThanks,\nVmir\n",
    "We should clearly document the problem of regenerating a derived model with the new patterns against a base model using the old patterns in our final 2.2 migration guide.",
    "We described this issue in our release review notes."
  ],
  "commentCreationDates": [
    "2006-02-02T16:22:49+01:00",
    "2006-02-02T16:24:59+01:00",
    "2006-02-02T16:55:09+01:00",
    "2006-02-02T17:15:29+01:00",
    "2006-02-02T17:37:19+01:00",
    "2006-02-02T21:01:39+01:00",
    "2006-02-02T21:08:55+01:00",
    "2006-02-06T13:06:22+01:00",
    "2006-02-06T15:50:48+01:00",
    "2006-02-15T20:44:04+01:00",
    "2006-02-16T16:10:24+01:00",
    "2006-02-17T13:19:10+01:00",
    "2006-10-27T11:51:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eDerivedStructuralFeatureID",
          "source": "BasicEObjectImpl.java:980"
        },
        {
          "method": "package1.impl.AImpl.eGet",
          "source": "AImpl.java:130"
        },
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eGet",
          "source": "BasicEObjectImpl.java:526"
        },
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eOpenIsSet",
          "source": "BasicEObjectImpl.java:785"
        },
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eDynamicIsSet",
          "source": "BasicEObjectImpl.java:772"
        },
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eDynamicIsSet",
          "source": "BasicEObjectImpl.java:760"
        },
        {
          "method": "package1.impl.AImpl.eIsSet",
          "source": "AImpl.java:185"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EContentsEList$FeatureIteratorImpl.hasNext",
          "source": "EContentsEList.java:375"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EcoreUtil$ProperContentIterator.hasNext",
          "source": "EcoreUtil.java:1087"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EcoreUtil$ContentTreeIterator.hasNext",
          "source": "EcoreUtil.java:1263"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.attached",
          "source": "ResourceImpl.java:742"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl$ContentsEList.inverseAdd",
          "source": "ResourceImpl.java:325"
        },
        {
          "method": "org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique",
          "source": "NotifyingListImpl.java:301"
        },
        {
          "method": "org.eclipse.emf.common.util.BasicEList.add",
          "source": "BasicEList.java:599"
        },
        {
          "method": "package2.presentation.Package2ModelWizard$1.execute",
          "source": "Package2ModelWizard.java:235"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:100"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1714"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:112"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:360"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:305"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.run",
          "source": "WizardDialog.java:843"
        },
        {
          "method": "package2.presentation.Package2ModelWizard.performFinish",
          "source": "Package2ModelWizard.java:253"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.finishPressed",
          "source": "WizardDialog.java:676"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:349"
        },
        {
          "method": "org.eclipse.jface.dialogs.Dialog$2.widgetSelected",
          "source": "Dialog.java:607"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:90"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:914"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3285"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2905"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:808"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:786"
        },
        {
          "method": "org.eclipse.ui.actions.NewWizardAction.run",
          "source": "NewWizardAction.java:181"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:492"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:530"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:480"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:392"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:914"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3285"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2905"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1762"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1726"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:397"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:109"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:379"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:338"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:282"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "126209",
      "date": "2006-02-02T16:22:49+01:00",
      "product": "EMF",
      "component": "Core",
      "severity": "enhancement"
    },
    {
      "exceptionType": "org.eclipse.emf.codegen.jet.JETException",
      "message": "",
      "elements": [
        {
          "method": "org.eclipse.emf.codegen.jet.JETEmitter.generate",
          "source": "JETEmitter.java:391"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate",
          "source": "GenBaseImpl.java:573"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate",
          "source": "GenPackageImpl.java:2456"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate",
          "source": "GenBaseImpl.java:350"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$8.generate",
          "source": "GenModelActionBarContributor.java:235"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$GenerateAction$1.execute",
          "source": "GenModelActionBarContributor.java:295"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:100"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1714"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:112"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.reflect.InvocationTargetException",
        "elements": [
          {
            "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
            "source": "Native Method"
          },
          {
            "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
            "source": "Unknown Source"
          },
          {
            "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
            "source": "Unknown Source"
          },
          {
            "method": "java.lang.reflect.Method.invoke",
            "source": "Unknown Source"
          },
          {
            "method": "org.eclipse.emf.codegen.jet.JETEmitter.generate",
            "source": "JETEmitter.java:383"
          }
        ],
        "causedBy": {
          "exceptionType": "java.lang.ClassCastException",
          "message": "[Ljava.lang.Object;",
          "elements": [
            {
              "method": "org.eclipse.emf.codegen.ecore.templates.model.FactoryClass_.generate",
              "source": "FactoryClass_.java:186"
            }
          ],
          "number": 0,
          "commentIndex": 0
        },
        "number": 0,
        "commentIndex": 0
      },
      "number": 1,
      "commentIndex": 5,
      "bugId": "126209",
      "date": "2006-02-02T21:01:39+01:00",
      "product": "EMF",
      "component": "Core",
      "severity": "enhancement"
    }
  ],
  "groupId": "126209",
  "bugId": "126209",
  "date": "2006-02-02T16:22:49+01:00",
  "product": "EMF",
  "component": "Core",
  "severity": "enhancement"
}