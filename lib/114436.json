{
  "comments": [
    "NOTE; The following works in latest stable release (1.2.1).\n\nUsing a simple abstract aspect with perthis or pertarget scope along with a \nconcrete implementation of the aspect applied to a simple class results in a \nClassFormatError Exception (Repetitive interface name).\n\nThis can easily be duplicated using the following directory structure with the \nfollowing files.\n\nDirectory Structure:\n--------------------\nmake.bat\nlib/\n    aspectjrt.jar\nsrc/aspects/\n    abstract-test-aspect.aj\n    concrete-test-aspect.aj\nsrc/java/\n    TestClass.java\ntarget/\n\n------------------------------------\nFile: abstract-test-aspect.aj\n------------------------------------\nabstract aspect SimpleTracing perthis(tracedCall())\n{\n    abstract pointcut tracedCall();\n\n    before(): tracedCall() {\n        System.out.println(\"Entering: \" + thisJoinPoint);\n    }\n}\n\n------------------------------------\nFile: concrete-test-aspect.aj\n------------------------------------\naspect ConcreteSimpleTracing extends SimpleTracing\n{\n    pointcut tracedCall(): execution(void doSomething(String));\n}\n\n------------------------------------\nFile: TestClass.java\n------------------------------------\npublic class TestClass\n{\n  public void doSomething(String stuff)\n  {\n    System.out.println(\"TestClass.doSomething(\\\"\"+stuff+\"\\\")\");\n  }\n  \n  public static void main(String[] args)\n  {\n    TestClass test \u003d new TestClass();\n    test.doSomething(\"withThis\");\n  }\n}\n\n------------------------------------\nFile: make.bat\n------------------------------------\n@echo off\nset CP\u003dlib\\aspectjrt.jar\n\n:: Build the aspect library\necho Building Aspect Library...\ncall ajc -cp %CP% -sourceroots src/aspects -outjar target/aspects.jar\n\n:: compile the source and apply the aspects to the results\necho Compiling classes with weaving...\ncall ajc -cp %CP% -sourceroots src/java -aspectpath target/aspects.jar -d \ntarget/classes\n\n:: run the test\n::    This results in the following Exception: java.lang.ClassFormatError: \nRepetitive interface name\n::    The compiled TestClass is declared as implementing the same interface \ntwice:\n::        public class TestClass\n::          implements ConcreteSimpleTracing.ajcMightHaveAspect, \nConcreteSimpleTracing.ajcMightHaveAspect\n::\necho Running TestClass...\nset CP\u003d%CP%;target/aspects.jar;target/classes\njava -cp %CP% TestClass\n------------------------------------\n\nRunning the above batch file results in the following output:\n\nBuilding Aspect Library...\nCompiling classes with weaving...\nRunning TestClass...\nException in thread \"main\" java.lang.ClassFormatError: Repetitive interface \nname\n in class file TestClass\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(Unknown Source)\n        at java.security.SecureClassLoader.defineClass(Unknown Source)\n        at java.net.URLClassLoader.defineClass(Unknown Source)\n        at java.net.URLClassLoader.access$100(Unknown Source)\n        at java.net.URLClassLoader$1.run(Unknown Source)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(Unknown Source)\n        at java.lang.ClassLoader.loadClass(Unknown Source)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\n        at java.lang.ClassLoader.loadClass(Unknown Source)\n        at java.lang.ClassLoader.loadClassInternal(Unknown Source)\n\n\nIf you decompile the TestClass.class file you see the cause of the problem - \nConcreteSimpleTracing.ajcMightHaveAspect is declared twice:\n\nFile: TestClass.class\n---------------------\nimport java.io.PrintStream;\nimport org.aspectj.runtime.reflect.Factory;\n\npublic class TestClass\n    implements ConcreteSimpleTracing.ajcMightHaveAspect, \nConcreteSimpleTracing.ajcMightHaveAspect\n{\n\n    public TestClass()\n    {\n    }\n\n    public void doSomething(String stuff)\n    {\n        String s \u003d stuff;\n        org.aspectj.lang.JoinPoint joinpoint \u003d Factory.makeJP(ajc$tjp_0, this, \nthis, s);\n        ConcreteSimpleTracing.ajc$perObjectBind(this);\n        if(ConcreteSimpleTracing.hasAspect(this))\n            ConcreteSimpleTracing.aspectOf(this).ajc$before$SimpleTracing$1\n$ce45787e(joinpoint);\n        System.out.println(\"TestClass.doSomething(\\\"\" + stuff + \"\\\")\");\n    }\n\n    public static void main(String args[])\n    {\n        TestClass test \u003d new TestClass();\n        test.doSomething(\"withThis\");\n    }\n\n    public ConcreteSimpleTracing ajc$ConcreteSimpleTracing$perObjectGet()\n    {\n        return ajc$ConcreteSimpleTracing$perObjectField;\n    }\n\n    public void ajc$ConcreteSimpleTracing$perObjectSet(ConcreteSimpleTracing \nconcretesimpletracing)\n    {\n        ajc$ConcreteSimpleTracing$perObjectField \u003d concretesimpletracing;\n    }\n\n    public ConcreteSimpleTracing ajc$ConcreteSimpleTracing$perObjectGet()\n    {\n        return ajc$ConcreteSimpleTracing$perObjectField;\n    }\n\n    public void ajc$ConcreteSimpleTracing$perObjectSet(ConcreteSimpleTracing \nconcretesimpletracing)\n    {\n        ajc$ConcreteSimpleTracing$perObjectField \u003d concretesimpletracing;\n    }\n\n    private transient ConcreteSimpleTracing \najc$ConcreteSimpleTracing$perObjectField;\n    private static final org.aspectj.lang.JoinPoint.StaticPart ajc$tjp_0;\n    private transient ConcreteSimpleTracing \najc$ConcreteSimpleTracing$perObjectField;\n\n    static \n    {\n        Factory factory \u003d new Factory(\"TestClass.java\", Class.forName\n(\"TestClass\"));\n        ajc$tjp_0 \u003d factory.makeSJP(\"method-execution\", factory.makeMethodSig\n(\"1\", \"doSomething\", \"TestClass\", \"java.lang.String:\", \"stuff:\", \"\", \"void\"), \n\n3);\n    }\n}",
    "marked for rc1",
    "I\u0027ve recreated this and will check in the fix tomorrow.",
    "fix checked in, waiting on build.  The problem was that the PerObject type\nmunger was being applied multiple times.  ",
    "fix available."
  ],
  "commentCreationDates": [
    "2005-10-31T22:49:37+01:00",
    "2005-11-03T16:11:46+01:00",
    "2005-11-14T17:16:22+01:00",
    "2005-11-15T10:57:57+01:00",
    "2005-11-15T14:44:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassFormatError",
      "message": "Repetitive interface  name  in class file TestClass",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "Unknown Source"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "114436",
      "date": "2005-10-31T22:49:37+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "114436",
  "bugId": "114436",
  "date": "2005-10-31T22:49:37+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}