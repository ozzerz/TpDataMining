{
  "comments": [
    "Build ID: I20070323-1616\n\nPossibly related to Bug 180030, similar situation but with a different exception.\n\nSteps To Reproduce:\nI changed an internal implementation detail of the QueueCost.java file.  This resulted in the following exception being thrown in line 0 of SortedSetQueue.java (attached).  As with most incremental build related errors this exception is not reproducible after a clean.\n\nMore information:\njava.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding cannot be cast to org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:1098)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:1056)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:1007)\n\tat org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(ParameterizedSingleTypeReference.java:157)\n\tat org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ParameterizedSingleTypeReference.java:220)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(TypeReference.java:114)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(ClassScope.java:1112)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass(ClassScope.java:825)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy(ClassScope.java:950)\n\tat org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy(CompilationUnitScope.java:290)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(LookupEnvironment.java:218)\n\tat org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile(Compiler.java:598)\n\tat org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:356)\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:370)\n\tat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:356)\n\tat org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:302)\n\tat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:293)\n\tat org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:130)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:265)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:192)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:629)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:163)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:248)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:251)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:307)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:339)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:137)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Created an attachment (id\u003d62452)\nThe file in which the exception is reported by JDT.\n\nThis file may not contain any useful information about the exception.  I will be happy to provide any other files or help that I can.",
    "Kent - looks like there is a path missing to trigger resolution of lazy references from binaries.",
    "It looks to me that problem comes from:\nClasScope#line 1055\n   parentType \u003d ((ParameterizedTypeBinding) parentType).type;\n\nThe slot #type may not have been resolved until now.\nWe construct ParameterizedTypeBinding containing unresolved types possibly.\nFeels to me there are more than this one place where we could be affected... (could be wrong).\nWhat if we asked such a type (Param containing Unresolved) for its fields, methods or even erasure ? None of these would trigger resolution. Are we sure that it cannot occur on a yet unresolved param type ?\n",
    "Could you please also attach the type declarations for these 3 classes:\n\nextends SkipListSortedSet\u003cT\u003e implements SortedSet\u003cT\u003e, Queue\u003cT\u003e\n\nand all of their superclasses/superinterfaces.\n\nWe don\u0027t need the fields/methods, just the type declaration portion.",
    "I apologize for the size of this and the time it took me to assemble, but it\u0027s a pretty complex inheritance hierarchy (as you can see).\n\nIncidentally, I have had larger problems with this hierarchy in past releases of Eclipse.  The class Skiplist seems to be the root of the trouble, files which reference Skiplist or it\u0027s descendants are the ones where the JDT compiler exceptions (or just spurious error messages) crop up.\n\nIf you would prefer a complete source zip or tarball I can provide one privately, though it\u0027s about 25MB at last count.  There are some incorrect license headers in it right now, and not all the code is mine, so it can\u0027t really be posted.  Or just let me know if you need any more type signatures....\n\n\n\npublic class SkipListSortedSet\u003cT\u003e extends Skiplist\u003cT, Skiplist\u003cT, ?, ?, ?, ?\u003e.SkiplistIterator, SkipListSortedSet.SubSkipListSortedSetIterator\u003cT\u003e, SkipListSortedSet.SubSkipListSortedSet\u003cT\u003e, SkipListSortedSet\u003cT\u003e\u003e implements SortedSet\u003cT\u003e {}\npublic abstract class Skiplist\u003cT, I extends Skiplist\u003cT, ?, ?, ?, ?\u003e.SkiplistIterator, SI extends AbstractSorted.SubSortedIterator\u003cT, I, SI, SS, S\u003e, SS extends AbstractSorted.SubSorted\u003cT, I, SI, SS, S\u003e, S extends Skiplist\u003cT, I, SI, SS, S\u003e\u003e extends AbstractSorted\u003cT, I, SI, SS, S\u003e {}\n\nprotected static class SubSkipListSortedSetIterator\u003cT\u003e extends AbstractSortedSet.SubSortedSetIterator\u003cT, Skiplist\u003cT, ?, ?, ?, ?\u003e.SkiplistIterator, SubSkipListSortedSetIterator\u003cT\u003e, SubSkipListSortedSet\u003cT\u003e, SkipListSortedSet\u003cT\u003e\u003e {}\nprotected static class SubSkipListSortedSet\u003cT\u003e extends AbstractSortedSet.SubSortedSet\u003cT, Skiplist\u003cT, ?, ?, ?, ?\u003e.SkiplistIterator, SubSkipListSortedSetIterator\u003cT\u003e, SubSkipListSortedSet\u003cT\u003e, SkipListSortedSet\u003cT\u003e\u003e {}\npublic abstract class AbstractSorted\u003cT, I extends SortedBiIterator\u003cT\u003e, SI extends AbstractSorted.SubSortedIterator\u003cT, I, SI, SS, S\u003e, SS extends AbstractSorted.SubSorted\u003cT, I, SI, SS, S\u003e, S extends AbstractSorted\u003cT, I, SI, SS, S\u003e\u003e extends AbstractCollection\u003cT, I, SI, SS, S\u003e implements Sorted\u003cT\u003e {}\npublic static class SubSortedIterator\u003cT, I extends SortedBiIterator\u003cT\u003e, SI extends AbstractSorted.SubSortedIterator\u003cT, I, SI, SS, S\u003e, SS extends AbstractSorted.SubSorted\u003cT, I, SI, SS, S\u003e, S extends AbstractSorted\u003cT, I, SI, SS, S\u003e\u003e extends AbstractSubCollectionIterator\u003cT, I, SI, SS, S\u003e implements SortedBiIterator\u003cT\u003e {}\n\npublic abstract static class SubSorted\u003cT, I extends SortedBiIterator\u003cT\u003e, SI extends AbstractSorted.SubSortedIterator\u003cT, I, SI, SS, S\u003e, SS extends AbstractSorted.SubSorted\u003cT, I, SI, SS, S\u003e, S extends AbstractSorted\u003cT, I, SI, SS, S\u003e\u003e extends AbstractSubCollection\u003cT, I, SI, SS, S\u003e implements Sorted\u003cT\u003e {}\npublic abstract static class AbstractSubCollection\u003cT, I extends FixedUniIterator\u003cT\u003e, SI extends AbstractSubCollectionIterator\u003cT, I, SI, SC, C\u003e, SC extends AbstractSubCollection\u003cT, I, SI, SC, C\u003e, C extends AbstractCollection\u003cT, I, SI, SC, C\u003e\u003e extends AbstractImmutableSubCollection\u003cT, I, SI, SC, C\u003e implements Collection\u003cT\u003e {}\nprotected abstract static class AbstractSubCollectionIterator\u003cT, I extends FixedUniIterator\u003cT\u003e, SI extends AbstractSubCollectionIterator\u003cT, I, SI, SC, C\u003e, SC extends AbstractSubCollection\u003cT, I, SI, SC, C\u003e, C extends AbstractCollection\u003cT, I, SI, SC, C\u003e\u003e extends AbstractImmutableSubCollectionIterator\u003cT, I, SI, SC, C\u003e implements FixedUniIterator\u003cT\u003e {}\npublic abstract class AbstractCollection\u003cT, I extends FixedUniIterator\u003cT\u003e, SI extends AbstractCollection.AbstractSubCollectionIterator\u003cT, I, SI, SC, C\u003e, SC extends AbstractCollection.AbstractSubCollection\u003cT, I, SI, SC, C\u003e, C extends AbstractCollection\u003cT, I, SI, SC, C\u003e\u003e extends AbstractImmutableCollection\u003cT, I, SI, SC, C\u003e implements Collection\u003cT\u003e {}\npublic abstract static class AbstractImmutableSubCollectionIterator\u003cT, I extends ImmutableFixedUniIterator\u003cT\u003e, SI extends AbstractImmutableSubCollectionIterator\u003cT, I, SI, SC, C\u003e, SC extends AbstractImmutableSubCollection\u003cT, I, SI, SC, C\u003e, C extends AbstractImmutableCollection\u003cT, I, SI, SC, C\u003e\u003e implements ImmutableFixedUniIterator\u003cT\u003e {}\npublic abstract class AbstractImmutableCollection\u003cT, I extends ImmutableFixedUniIterator\u003cT\u003e, SI extends AbstractImmutableCollection.AbstractImmutableSubCollectionIterator\u003cT, ?, SI, SC, C\u003e, SC extends AbstractImmutableCollection.AbstractImmutableSubCollection\u003cT, ?, SI, SC, C\u003e, C extends AbstractImmutableCollection\u003cT, I, SI, SC, C\u003e\u003e extends AbstractFilter\u003cT\u003e implements ImmutableCollection\u003cT\u003e {}\npublic abstract class AbstractFilter\u003cT\u003e implements Filter\u003cT\u003e {}\n\npublic class SkiplistIterator implements SortedBiIterator\u003cT\u003e {}\npublic interface SortedBiIterator\u003cT\u003e extends FixedBiIterator\u003cT\u003e, ImmutableSortedBiIterator\u003cT\u003e {}\npublic interface FixedBiIterator\u003cT\u003e extends ImmutableBiIterator\u003cT\u003e, FixedUniIterator\u003cT\u003e, FixedBiPosition\u003cT\u003e {}\npublic interface ImmutableBiIterator\u003cT\u003e extends ImmutableFixedUniIterator\u003cT\u003e, ImmutableBiPosition\u003cT\u003e {}\npublic interface ImmutableFixedUniIterator\u003cT\u003e extends ImmutableIterator\u003cT\u003e, ImmutableFixedUniPosition\u003cT\u003e {}\npublic interface ImmutableIterator\u003cT\u003e extends ImmutablePosition\u003cT\u003e, Copyable {}\npublic interface ImmutablePosition\u003cT\u003e extends ImmutableSingletonInterface\u003cT\u003e {}\npublic interface ImmutableSingletonInterface\u003cA\u003e {}\npublic interface ImmutableFixedUniPosition\u003cT\u003e extends ImmutablePosition\u003cT\u003e, ImmutableSingletonInterface\u003cT\u003e {}\npublic interface ImmutableBiPosition\u003cT\u003e extends ImmutableFixedUniPosition\u003cT\u003e {}\npublic interface FixedUniIterator\u003cT\u003e extends Iterator\u003cT\u003e, ImmutableFixedUniIterator\u003cT\u003e, FixedUniPosition\u003cT\u003e {}\npublic interface Iterator\u003cT\u003e extends ImmutableIterator\u003cT\u003e, Position\u003cT\u003e {}\npublic interface Position\u003cT\u003e extends ImmutablePosition\u003cT\u003e, SingletonInterface\u003cT\u003e {}\npublic interface SingletonInterface\u003cA\u003e extends ImmutableSingletonInterface\u003cA\u003e {}\npublic interface FixedBiPosition\u003cT\u003e extends ImmutableBiPosition\u003cT\u003e, FixedUniPosition\u003cT\u003e {}\npublic interface FixedUniPosition\u003cT\u003e extends Position\u003cT\u003e, ImmutableFixedUniPosition\u003cT\u003e {}\npublic interface ImmutableSortedBiIterator\u003cT\u003e extends ImmutableBiIterator\u003cT\u003e {}\n\npublic interface SortedSet\u003cT\u003e extends ImmutableSortedSet\u003cT\u003e, Set\u003cT\u003e, Sorted\u003cT\u003e {}\npublic interface ImmutableSortedSet\u003cT\u003e extends ImmutableSet\u003cT\u003e, ImmutableSorted\u003cT\u003e {}\npublic interface Set\u003cT\u003e extends Collection\u003cT\u003e, ImmutableSet\u003cT\u003e {}\npublic interface Sorted\u003cT\u003e extends SortedBiIterable\u003cT\u003e, Collection\u003cT\u003e, ImmutableSorted\u003cT\u003e {}\npublic interface ImmutableSet\u003cT\u003e extends ImmutableCollection\u003cT\u003e {}\npublic interface ImmutableSorted\u003cT\u003e extends ImmutableList\u003cT\u003e, ImmutableSortedBiIterable\u003cT\u003e, Comparing\u003cT\u003e {}\npublic interface Collection\u003cT\u003e extends ImmutableCollection\u003cT\u003e, ModCount, FixedUniIterable\u003cT\u003e, DynamicFilter\u003cT, CollectionTransaction\u003cT\u003e\u003e {}\npublic interface ImmutableCollection\u003cT\u003e extends ImmutableFixedUniIterable\u003cT\u003e, Filter\u003cT\u003e, Accessing\u003cT\u003e, Copyable, Immutable {}\npublic interface ImmutableList\u003cT\u003e extends ImmutableCollection\u003cT\u003e, ImmutableBiIterable\u003cT\u003e {}\n\npublic interface DynamicFilter\u003cT, E extends FilterTransaction\u003cT\u003e\u003e extends Filter\u003cT\u003e, Transactional\u003cE\u003e, Copyable, Immutable {}\npublic interface CollectionTransaction\u003cT\u003e extends FilterTransaction\u003cT\u003e {}\n\npublic interface Transactional\u003cX extends Transaction\u003e extends EventSource {}\npublic interface FilterTransaction\u003cT\u003e extends Transaction, IdentityChangeEvent\u003cFilter\u003cT\u003e\u003e {}\npublic interface IdentityChangeEvent\u003cT\u003e extends Event {}\npublic interface Transaction extends Event, Task, ThreadLocking {}\npublic interface Event {}\npublic interface Task extends EventSource, GUIAccessible {}\npublic interface EventSource {}\npublic interface GUIAccessible {}\n\npublic interface Filter\u003cT\u003e {}\npublic interface Copyable {}\npublic interface Immutable {}\npublic interface Comparing\u003cT\u003e extends Accessing\u003cT\u003e {}\npublic interface Accessing\u003cT\u003e {}\npublic interface ModCount {}\n\npublic interface SortedBiIterable\u003cT\u003e extends FixedBiIterable\u003cT\u003e, ImmutableSortedBiIterable\u003cT\u003e {}\npublic interface FixedBiIterable\u003cT\u003e extends ImmutableBiIterable\u003cT\u003e, FixedUniIterable\u003cT\u003e {}\npublic interface ImmutableBiIterable\u003cT\u003e extends ImmutableFixedUniIterable\u003cT\u003e {}\npublic interface ImmutableFixedUniIterable\u003cT\u003e extends ImmutableIterable\u003cT\u003e {}\npublic interface ImmutableIterable\u003cT\u003e extends ThreadLocking {}\npublic interface ThreadLocking {}\npublic interface FixedUniIterable\u003cT\u003e extends Iterable\u003cT\u003e, ImmutableFixedUniIterable\u003cT\u003e {}\npublic interface Iterable\u003cT\u003e extends ImmutableIterable\u003cT\u003e {}\npublic interface ImmutableSortedBiIterable\u003cT\u003e extends ImmutableBiIterable\u003cT\u003e {}\npublic interface ImmutableBiIterable\u003cT\u003e extends ImmutableFixedUniIterable\u003cT\u003e {}\n\npublic interface Queue\u003cT\u003e extends ReadQueue\u003cT\u003e, WriteQueue\u003cT\u003e {}\npublic interface ReadQueue\u003cT\u003e extends EventSource {}\npublic interface WriteQueue\u003cT\u003e extends EventSource {}\npublic interface EventSource {}",
    "Do you have errors on any of these type declarations or do they all compile without any errors (ignoring method bodies) ?",
    "There are no errors associated with any of those types in my files.  I can\u0027t imagine how removing method bodies could introduce errors.\n\nHowever in my code those types are distributed across MANY packages, and some are inner types of others.  I realize now that I did not include the packages the various types came from, or correctly include the inner types within their appropriate outer types.  Thus if you attempt to put that mess of declarations straight into JDT or Javac, there should be errors.\n\nHowever, in my original code there are NO ERRORS IN ANY OF THESE CLASSES.  The errors only occur on incremental (not post-clean) builds and a transient (i.e. they go away after a single clean and full build).\n\nI think I answered your question, but if not let me know.  I\u0027d be happy to help any way possible, up to and including debugging JDT myself if someone wants to or can help me get a suitable debugging environment set up.",
    "I\u0027ve reduced the testcase to these 2 files:\n\n--- in X.java ---\nclass X\u003cT\u003e extends A\u003cT\u003e {}\n\n--- in Others.java ---\nclass A\u003cT\u003e extends B\u003cB\u003cT\u003e.M\u003e {}\n\nclass B\u003cT\u003e extends Missing\u003cT\u003e {\n\tclass M{}\n}\n\nclass Missing\u003cT\u003e {}\n\nA full build results in no errors/walkbacks, but an incremental build of X.java causes the walkback from comment #0.\n\nAn additional walkback also occurs when the type Missing is commented out \u0026 X.java is incrementally built. In this case the walkback is :\n\njava.lang.NullPointerException\n  at o.e.jdt.i.comp.util.SimpleLookupTable.get(68)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.createParameterizedType(715)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.getTypeFromTypeSignature(1118)\n  at o.e.jdt.i.c.lookup.LookupEnvironment.getTypeFromVariantTypeSignature(1149)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.getTypeArgumentsFromSignature(961)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.getTypeFromTypeSignature(1100)\n  at o.e.jdt.i.comp.lookup.BinaryTypeBinding.cachePartsFrom(296)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.createBinaryTypeFrom(599)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.createBinaryTypeFrom(578)\n  at o.e.jdt.i.comp.Compiler.accept(275)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.askForType(128)\n  at o.e.jdt.i.comp.lookup.PackageBinding.getTypeOrPackage(178)\n  at o.e.jdt.i.comp.lookup.Scope.getTypeOrPackage(2381)\n  at o.e.jdt.i.comp.lookup.Scope.getType(2121)\n  at o.e.jdt.i.c.ast.ParameterizedSingleTypeReference.internalResolveType(99)\n  at o.e.jdt.i.comp.ast.ParameterizedSingleTypeReference.resolveType(220)\n  at o.e.jdt.i.comp.ast.TypeReference.resolveSuperType(114)\n  at o.e.jdt.i.comp.lookup.ClassScope.findSupertype(1112)\n  at o.e.jdt.i.comp.lookup.ClassScope.connectSuperclass(825)\n  at o.e.jdt.i.comp.lookup.ClassScope.connectTypeHierarchy(950)\n  at o.e.jdt.i.comp.lookup.CompilationUnitScope.connectTypeHierarchy(290)\n  at o.e.jdt.i.comp.lookup.LookupEnvironment.completeTypeBindings(218)\n  at o.e.jdt.i.comp.Compiler.internalBeginToCompile(598)\n  at o.e.jdt.i.comp.Compiler.beginToCompile(356)\n  at o.e.jdt.i.comp.Compiler.compile(370)\n  at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(356)",
    "Created an attachment (id\u003d63416)\nProposed patch\n\n",
    "Added Java50Tests.testParameterizedMemberType()\n\nReleased into HEAD for 3.3M7\n\nGreg - please try your full testcase with a nightly build from later this week.\n\nthanks",
    "I will download whatever the most recent build is on Friday morning and see what I can break.\n\nThanks for the fast response, it\u0027s been really helpful!",
    "Given the fact that these are incremental build bugs, there\u0027s generally no way to duplicate the exact exception that I originally submitted.\n\nHowever a related, but far less annoying (and non-exception causing) set of incremental build problems has disappeared.  The exact indicator I am able to test is also related to the SortedSetQueue class.\n\nIn any case I can no longer find a way to cause incremental build problems.  Thank you very much for the fix!",
    "Verified for 3.3M7 using I20070427-0010"
  ],
  "commentCreationDates": [
    "2007-03-30T03:53:33+02:00",
    "2007-03-30T03:55:37+02:00",
    "2007-03-30T10:51:03+02:00",
    "2007-03-30T11:33:26+02:00",
    "2007-03-30T19:59:57+02:00",
    "2007-03-30T20:48:00+02:00",
    "2007-04-03T21:52:42+02:00",
    "2007-04-03T23:22:13+02:00",
    "2007-04-04T18:17:19+02:00",
    "2007-04-10T21:01:23+02:00",
    "2007-04-10T21:03:15+02:00",
    "2007-04-10T21:16:48+02:00",
    "2007-04-13T19:05:00+02:00",
    "2007-04-27T15:55:41+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding cannot be cast to org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:1098"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:1056"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:1007"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType",
          "source": "ParameterizedSingleTypeReference.java:157"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType",
          "source": "ParameterizedSingleTypeReference.java:220"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType",
          "source": "TypeReference.java:114"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:1112"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass",
          "source": "ClassScope.java:825"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:950"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:290"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:218"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile",
          "source": "Compiler.java:598"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.beginToCompile",
          "source": "Compiler.java:356"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:370"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:356"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile",
          "source": "IncrementalImageBuilder.java:302"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:293"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build",
          "source": "IncrementalImageBuilder.java:130"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas",
          "source": "JavaBuilder.java:265"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:192"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:629"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:163"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:199"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:248"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:251"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:307"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:339"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:137"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:235"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "180109",
      "date": "2007-03-30T03:53:33+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "o.e.jdt.i.comp.util.SimpleLookupTable.get",
          "source": "68"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.createParameterizedType",
          "source": "715"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.getTypeFromTypeSignature",
          "source": "1118"
        },
        {
          "method": "o.e.jdt.i.c.lookup.LookupEnvironment.getTypeFromVariantTypeSignature",
          "source": "1149"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.getTypeArgumentsFromSignature",
          "source": "961"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.getTypeFromTypeSignature",
          "source": "1100"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.BinaryTypeBinding.cachePartsFrom",
          "source": "296"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "599"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "578"
        },
        {
          "method": "o.e.jdt.i.comp.Compiler.accept",
          "source": "275"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.askForType",
          "source": "128"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.PackageBinding.getTypeOrPackage",
          "source": "178"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.Scope.getTypeOrPackage",
          "source": "2381"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.Scope.getType",
          "source": "2121"
        },
        {
          "method": "o.e.jdt.i.c.ast.ParameterizedSingleTypeReference.internalResolveType",
          "source": "99"
        },
        {
          "method": "o.e.jdt.i.comp.ast.ParameterizedSingleTypeReference.resolveType",
          "source": "220"
        },
        {
          "method": "o.e.jdt.i.comp.ast.TypeReference.resolveSuperType",
          "source": "114"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.ClassScope.findSupertype",
          "source": "1112"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.ClassScope.connectSuperclass",
          "source": "825"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.ClassScope.connectTypeHierarchy",
          "source": "950"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "290"
        },
        {
          "method": "o.e.jdt.i.comp.lookup.LookupEnvironment.completeTypeBindings",
          "source": "218"
        },
        {
          "method": "o.e.jdt.i.comp.Compiler.internalBeginToCompile",
          "source": "598"
        },
        {
          "method": "o.e.jdt.i.comp.Compiler.beginToCompile",
          "source": "356"
        },
        {
          "method": "o.e.jdt.i.comp.Compiler.compile",
          "source": "370"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "356"
        }
      ],
      "number": 1,
      "commentIndex": 8,
      "bugId": "180109",
      "date": "2007-04-04T18:17:19+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "180109",
  "bugId": "180109",
  "date": "2007-03-30T03:53:33+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}