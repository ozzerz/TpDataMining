{
  "comments": [
    "Build: Freeze 1\n\nThe running.html doc says you can supply the path of the .options file with \nthe -debug flag, like this:\n\neclipse -debug \u003cpath-to-options-file\u003e\n\nHowever, this does not work.  If I try;\n\neclipse -debug c:\\.options\n\nI get the following error message on stdout.  It seems to expect a URL, not a \nfile path\n\nUnable to construct URL for options file: c:\\.options\njava.net.MalformedURLException: unknown protocol: c\n        at java.net.URL.\u003cinit\u003e(URL.java:586)\n        at java.net.URL.\u003cinit\u003e(URL.java:476)\n        at java.net.URL.\u003cinit\u003e(URL.java:425)\n        at org.eclipse.core.internal.boot.InternalBootLoader.loadOptions\n(Interna\nlBootLoader.java:548)\n        at org.eclipse.core.internal.boot.InternalBootLoader.initialize\n(Internal\nBootLoader.java:500)\n        at org.eclipse.core.internal.boot.InternalBootLoader.startup\n(InternalBoo\ntLoader.java:868)\n        at org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoa\nder.java:732)\n        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.\njava:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAcces\nsorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:200)\n        at org.eclipse.core.launcher.Main.run(Main.java:643)\n        at org.eclipse.core.launcher.Main.main(Main.java:476)",
    "Can you try with a url to ensure that it is just a doc change rather than a \ncode change? Thanks.\n",
    "It works with a URL, but I think it *should* work with just a path.  All other \ncommand line options take paths as parameters, not URLs.  This should be an easy \nfix... just slap a \"file:\" at the beginning of the supplied value before \ncreating a URL.",
    "I believe that files which must be local (like -data) are file paths but those \nwhich can be remote (-debug, -configuration) are specified as URLs.",
    "Still, it would be easy to support both.  If it is not recognized as a URL, just \nappend \"file:\" and try again.  Most of the time this file will be local.",
    "Created an attachment (id\u003d2498)\npatch for fixing bug\n\nSets folder local sync info when it has none set yet.\n\nPlease verify and release.",
    "Please ignore my last comments and attachment described as \"patch for fixing \nbug\". It was intended to a different bug. Sorry.",
    "Created an attachment (id\u003d2589)\npatch for org.eclipse.core.boot\n\nContains diffs for projects:\n\n- org.eclipse.core.boot - tries both \"new URL(String)\" and \"new\nFile(String).toURL()\" for creating an URL object upon an user-provided string\nbefore throwing MalformedURLException\n\n- org.eclipse.platform.doc.user - changes document for running Eclipse",
    "Released into HEAD."
  ],
  "commentCreationDates": [
    "2002-05-22T17:46:15+02:00",
    "2002-05-22T17:56:34+02:00",
    "2002-05-22T18:15:53+02:00",
    "2002-05-23T16:18:48+02:00",
    "2002-05-23T16:39:36+02:00",
    "2002-11-22T23:28:58+01:00",
    "2002-11-22T23:34:27+01:00",
    "2002-11-29T22:27:58+01:00",
    "2002-12-03T02:24:49+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.MalformedURLException",
      "message": "unknown protocol: c",
      "elements": [
        {
          "method": "java.net.URL.\u003cinit\u003e",
          "source": "URL.java:586"
        },
        {
          "method": "java.net.URL.\u003cinit\u003e",
          "source": "URL.java:476"
        },
        {
          "method": "java.net.URL.\u003cinit\u003e",
          "source": "URL.java:425"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.loadOptions",
          "source": "Interna lBootLoader.java:548"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.initialize",
          "source": "Internal BootLoader.java:500"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.startup",
          "source": "InternalBoo tLoader.java:868"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoa der.java:732"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl. java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAcces sorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:200"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:643"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:476"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "16872",
      "date": "2002-05-22T17:46:15+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "enhancement"
    }
  ],
  "groupId": "16872",
  "bugId": "16872",
  "date": "2002-05-22T17:46:15+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "enhancement"
}