{
  "comments": [
    "I had a dstore-rexec connection open for some time,\nadded an environment variable and opened a shell.\n\nThen I selected the host and choose contextmenu \u003e disconnect.\nIt looked like it tried to re-connect immediately (I got\na new enter password dialog).\n\nEventually, attached exception was printed to stdout:\nCould this be related to the new CredentialsProvider?\n\njava.lang.NullPointerException\n        at java.io.DataOutputStream.writeBytes(DataOutputStream.java:257)\n        at org.eclipse.rse.internal.connectorservice.dstore.RexecDstoreServer.launch(RexecDstoreServer.java:446)\n\n\n\n-----------Enter bugs above this line-----------\nTM 2.0M6 Testing\ninstallation : eclipse-SDK-3.3M6, \n     Download RSE-I20070404-1200: RSE-SDK, examples, tests, terminal\njava.runtime : Sun 1.6.0-b105, mixed mode, sharing\nos.name:     : Red Hat Enterprise Linux WS release 4 (Nahant Update 3)\nuname        : Linux parser.takefive.co.at 2.6.9-34.EL #1 Fri Feb 24 16:44:51 \nEST 2006 i686 athlon i386 GNU/Linux\n------------------------------------------------\nsystemtype   : Linux-local / Windows-dstore (Daemon) / Linux-dstore (RExec)\ntargetos1    : Windows XP SP1, Sun 1.4.2_13\ntargetos2    : Solaris-sparc 5.9, Sun 1.4.2_05\ntargetuname  : SunOS szg-anar 5.9 Generic_118558-06 sun4u sparc SUNW,Sun-Blade-1500\n------------------------------------------------",
    "Created an attachment (id\u003d62985)\nException logged to stdout\n\n",
    "The problem is that when the shell state is being saved (as part of disconnect) a query is done for the IRemoteFile that is the context - once we actually do the query a reconnect is required.  In the case of saving shell state we shouldn\u0027t need to do a query - instead we just want the context as a string.  I\u0027ve added a new API - getContextString() to IRemoteCommandShell to get a string for the context so that the query is avoided while getting the shell state.",
    "While I like the solution, I\u0027m wondering why this was not a problem up to M5? - the code in getContext() guards resolving it with an if(isConnected()). \nWhy didn\u0027t this work in M6 candidate?",
    "Also, I\u0027m wondering whether in RemoteCommandShell#getContextString() we shouldn\u0027t protect against NullPointerException.\n\n_cwd will only be set if extenders of RemoteCommandShell happen to call setWorkingDirectory(IRemoteFile) at some point. API does not require them doing so, so it is valid if _cwd\u003d\u003dnull. In this case, context cannot be stored. What would be the proper return value in this case? null or an empty String? I\u0027m thinking this:\n\n/**\n * Returns the context of this Shell as a String for persistence.\n * The context is typically the current working directory.\n * Returns an empty String if no context can be determined.\n *\n * @return The current context as String, or an empty String\n *     if no context exists. Never returns \u003ccode\u003enull\u003c/code\u003e.\n */\npublic String getContextString()\n{\n    if(_cwd !\u003d null) {\n        return _cwd.getAbsolutePath();\n    }\n    return \"\"; //$NON-NLS-1$\n}\n\nNote that this kind of APIdoc also requires IRemoteFile.getAbsolutePath() to never return null. But I think that this should be the case or we\u0027ll have lots of trouble elsewhere too.\n\nReopening to clarify.",
    "My guess as to why we never hit this before is that we didn\u0027t test the scenario you mentioned.  It could have been that a different connect mechanism was used, or that the shell was closed in advance, or that by disconnecting at the subsystem level we never ran into this sort of timing.\n\nThe null check and returning \"\" sounds good to me. I\u0027ll add that. ",
    "I\u0027ve updated with your suggestion."
  ],
  "commentCreationDates": [
    "2007-04-04T23:22:54+02:00",
    "2007-04-04T23:23:21+02:00",
    "2007-04-05T16:58:32+02:00",
    "2007-04-05T17:22:00+02:00",
    "2007-04-05T17:28:08+02:00",
    "2007-04-05T17:46:34+02:00",
    "2007-04-05T17:49:04+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.io.DataOutputStream.writeBytes",
          "source": "DataOutputStream.java:257"
        },
        {
          "method": "org.eclipse.rse.internal.connectorservice.dstore.RexecDstoreServer.launch",
          "source": "RexecDstoreServer.java:446"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "181069",
      "date": "2007-04-04T23:22:54+02:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    }
  ],
  "groupId": "181069",
  "bugId": "181069",
  "date": "2007-04-04T23:22:54+02:00",
  "product": "Target Management",
  "component": "RSE",
  "severity": "normal"
}