{
  "comments": [
    "This JUnit has been sporadically failing in the test that checks if the module URI is contained in the application.xml file. Since tests to check for updates to the .project file and component file pass successfully before this test and it is sporadic, it makes me think this may indicate an intermittent EMF problem with either the operation that updates application.xml or the JUnit call to check the contents. The refactoring logic itself is executing since the prior to tests pass successfully every time.\n\nChuck: sending your way for thoughts.\n\nThis particular test could of course be commented out but that may just be silencing the messenger...\n\nHere is the check logic (note the \"null\" in the error message is an error, should be \"computedURI\" rather than moduleURI):\n\n...\nIVirtualComponent moduleComp \u003d ComponentCore.createComponent(moduleProject);\nString computedURI \u003d earEdit.getModuleURI(moduleComp);\nAssert.assertTrue(\"EAR\u0027s application.xml missing module element for \" + moduleURI, application.getFirstModule(computedURI) !\u003d null);\nreturn computedURI;\n...\n\nHere is the error:\n\nEAR\u0027s application.xml missing module element for null\n\njunit.framework.AssertionFailedError: EAR\u0027s application.xml missing module element for null\nat org.eclipse.jst.j2ee.dependency.tests.util.DependencyVerificationUtil.verifyApplicationXMLReference(DependencyVerificationUtil.java:157)\nat org.eclipse.jst.j2ee.dependency.tests.util.DependencyVerificationUtil.verifyEARDependency(DependencyVerificationUtil.java:226)\nat org.eclipse.jst.j2ee.dependency.tests.util.DependencyVerificationUtil.verifyEARDependencyChanged(DependencyVerificationUtil.java:239)\nat org.eclipse.jst.j2ee.dependency.tests.ProjectEARRefactoringTests.testRenameEAREJBModule(ProjectEARRefactoringTests.java:128)\nat org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:332)\nat org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:202)\nat org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:35)\nat org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:31)\nat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:533)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:155)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1144)",
    "note: I\u0027ve been unsuccessful so far at repro\u0027ing the failure in this JUnit locally - didn\u0027t see anything interesting in the .log for the test run where it failed.",
    "Created an attachment (id\u003d71458)\nPatch to disable the JUnit testRenameEAREJBModule\n\nChuck, since this one might indicate an intermittent EMF issue, I\u0027ll let you make the call on whether or not you\u0027d like to remove it - ideally we\u0027d have a separate category of unit tests that this could be moved into (i.e. would show up as a red flag on the build but it would still be run so that we could get an accurrate gauge of whether this issue is happening - there have been many intermittent product issues whose low frequence means they only reliably appear during automated unit tests)\n\nJohn: is that an option at all with reporting? Mark some set of tests as known \"suspect\" tests rather than just disabling them: still run them and have the results accessible via some indirect route but don\u0027t include them in the main build report.\n\nIf so, I think that would be quite useful. ",
    "No, I don\u0027t think that sounds like the right process.  Unless we are sure a test is running properly, it should not be in the official build bucket.  This does not stop you from running these tests yourselves locally, which you should do for all tests before dropping to a build.",
    "(In reply to comment #3)\n\u003e No, I don\u0027t think that sounds like the right process.  Unless we are sure a\n\u003e test is running properly, it should not be in the official build bucket.  \n\nHmmm, I don\u0027t completely agree (I may not have communicated things very clearly and RC4 is not the time to try something along these lines anyway); I\u0027ll open a new enhancement bugzilla against releng and add more complete thoughts on having two \"buckets\" of tests that are run on an automated basis.\n\n\u003e This\n\u003e does not stop you from running these tests yourselves locally, which you should\n\u003e do for all tests before dropping to a build.\n\u003e \n \nWell, if that test is commented out from that class, it also won\u0027t be run by folks that run the J2EE unit tests locally. I guess this speaks to an issue with the granularity and mechanism by which these tests are registered to run in the automated tests.\n\nAlso, just running this test locally prior to checkin would not be sufficient - the real key with tests that may be triggering intermittent product issues is that they get run regularly on an automated basis so that you can guage the frequency of the problem and see when it goes away or comes back; running it locally might never result in sufficient iterations to trigger the problem. I\u0027ll add more comments on this in the other enhancement request.  \n",
    "My more detailed thoughts on multiple categories of unit tests are in https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d192888",
    "Looks like Chuck is out so I\u0027ll take this and just comment it out for RC4 - can evaluate again post-2.0",
    "committed and released changes to comment out that test"
  ],
  "commentCreationDates": [
    "2007-06-07T20:40:47+02:00",
    "2007-06-07T20:45:47+02:00",
    "2007-06-15T16:03:44+02:00",
    "2007-06-15T16:21:54+02:00",
    "2007-06-15T16:52:21+02:00",
    "2007-06-15T17:17:21+02:00",
    "2007-06-15T17:37:02+02:00",
    "2007-06-18T20:00:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "EAR\u0027s application.xml missing module element for null",
      "elements": [
        {
          "method": "org.eclipse.jst.j2ee.dependency.tests.util.DependencyVerificationUtil.verifyApplicationXMLReference",
          "source": "DependencyVerificationUtil.java:157"
        },
        {
          "method": "org.eclipse.jst.j2ee.dependency.tests.util.DependencyVerificationUtil.verifyEARDependency",
          "source": "DependencyVerificationUtil.java:226"
        },
        {
          "method": "org.eclipse.jst.j2ee.dependency.tests.util.DependencyVerificationUtil.verifyEARDependencyChanged",
          "source": "DependencyVerificationUtil.java:239"
        },
        {
          "method": "org.eclipse.jst.j2ee.dependency.tests.ProjectEARRefactoringTests.testRenameEAREJBModule",
          "source": "ProjectEARRefactoringTests.java:128"
        },
        {
          "method": "org.eclipse.test.EclipseTestRunner.run",
          "source": "EclipseTestRunner.java:332"
        },
        {
          "method": "org.eclipse.test.EclipseTestRunner.run",
          "source": "EclipseTestRunner.java:202"
        },
        {
          "method": "org.eclipse.test.CoreTestApplication.runTests",
          "source": "CoreTestApplication.java:35"
        },
        {
          "method": "org.eclipse.test.CoreTestApplication.run",
          "source": "CoreTestApplication.java:31"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:533"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:155"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "191541",
      "date": "2007-06-07T20:40:47+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "normal"
    }
  ],
  "groupId": "191541",
  "bugId": "191541",
  "date": "2007-06-07T20:40:47+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "normal"
}