{
  "comments": [
    "using WTP 1.5 I build 20060307\n\nWAR validation fails in a web project with the following stacktrace (no clue why it happes on this specific project, I will be happy to check whatever could be useful to find the cause... maybe the stack trace can give you enough details to find the reason?)\n\n\n*** ERROR ***: Tue Mar 14 14:17:05 CET 2006    org.eclipse.wst.validation.internal.core.ValidationException: CHKJ3000E: WAR Validation Failed: org.eclipse.jst.j2ee.commonarchivecore.internal.exception.DeploymentDescriptorLoadException: WEB-INF/web.xml\n    \tat org.eclipse.jst.j2ee.model.internal.validation.WarValidator.validateInJob(WarValidator.java:295)\n    \tat org.eclipse.jst.j2ee.internal.web.validation.UIWarValidator.validateInJob(UIWarValidator.java:90)\n    \tat org.eclipse.wst.validation.internal.operations.ValidatorJob.run(ValidatorJob.java:85)\n    \tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n\n!ENTRY org.eclipse.wst.validation 4 0 2006-03-14 14:17:05.548\n!MESSAGE \n*** ERROR ***: Tue Mar 14 14:17:05 CET 2006    org.eclipse.jst.j2ee.commonarchivecore.internal.exception.DeploymentDescriptorLoadException: WEB-INF/web.xml\n    Stack trace of nested exception:\n    java.lang.IllegalArgumentException: Attempted to beginRule: F/magnolia/src/main/webapp/WEB-INF, does not match outer scope rule: org.eclipse.wst.validation.internal.core.EmptySchedulingRule@66f52c\n    \tat org.eclipse.core.runtime.Assert.isLegal(Assert.java:58)\n    \tat org.eclipse.core.internal.jobs.ThreadJob.illegalPush(ThreadJob.java:116)\n    \tat org.eclipse.core.internal.jobs.ThreadJob.push(ThreadJob.java:225)\n    \tat org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:80)\n    \tat org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:218)\n    \tat org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:96)\n    \tat org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1681)\n    \tat org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1396)\n    \tat org.eclipse.core.internal.resources.File.refreshLocal(File.java:334)\n    \tat org.eclipse.core.internal.filebuffers.ResourceFileBuffer.refreshFile(ResourceFileBuffer.java:452)\n    \tat org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create(ResourceFileBuffer.java:238)\n    \tat org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect(TextFileBufferManager.java:109)\n    \tat org.eclipse.wst.sse.core.internal.FileBufferModelManager.getModel(FileBufferModelManager.java:541)\n    \tat org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._commonGetModel(ModelManagerImpl.java:318)\n    \tat org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._commonGetModel(ModelManagerImpl.java:304)\n    \tat org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForRead(ModelManagerImpl.java:1062)\n    \tat org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSERenderer.initializeXMLModel(EMF2DOMSSERenderer.java:389)\n    \tat org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSERenderer.loadDocument(EMF2DOMSSERenderer.java:423)\n    \tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad(EMF2DOMRenderer.java:60)\n    \tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad(TranslatorResourceImpl.java:141)\n    \tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad(CompatibilityXMIResourceImpl.java:173)\n    \tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1015)\n    \tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load(TranslatorResourceImpl.java:387)\n    \tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:249)\n    \tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad(ProjectResourceSetImpl.java:83)\n    \tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:264)\n    \tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:349)\n    \tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n    \tat org.eclipse.jst.j2ee.internal.archive.operations.ComponentLoadStrategyImpl.getMofResource(ComponentLoadStrategyImpl.java:420)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.getMofResource(ArchiveImpl.java:869)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleFileImpl.getDeploymentDescriptorResource(ModuleFileImpl.java:255)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.XmlBasedImportStrategyImpl.primLoadDeploymentDescriptor(XmlBasedImportStrategyImpl.java:39)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.War22ImportStrategyImpl.loadDeploymentDescriptor(War22ImportStrategyImpl.java:87)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.War22ImportStrategyImpl.importMetaData(War22ImportStrategyImpl.java:81)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.WARFileImpl.getDeploymentDescriptor(WARFileImpl.java:150)\n    \tat org.eclipse.jst.j2ee.model.internal.validation.WarValidator.validateInJob(WarValidator.java:280)\n    \tat org.eclipse.jst.j2ee.internal.web.validation.UIWarValidator.validateInJob(UIWarValidator.java:90)\n    \tat org.eclipse.wst.validation.internal.operations.ValidatorJob.run(ValidatorJob.java:85)\n    \tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "See the  last message\n\norg.eclipse.jst.j2ee.commonarchivecore.internal.exception.DeploymentDescriptorLoadException:\nWEB-INF/web.xml\n\nThis exception is  thrown when the deployment descriptor  cannot  be  found or laoded.  \n\nWas it the case  with your web project? \n",
    "web.xml is there (and it\u0027s valid).\n\nThe path for web.xml is \"/magnolia/src/main/webapp/WEB-INF\" (where \"magnolia\" is the project name\"), exactly as reported in the stack trace. Any other thing I could check?\n\n",
    "Attach the project here.",
    "the whole workspace is pretty big (the war has several project dependencies)\n\nI\u0027ll attach the .project, .classpath and .component files. If you need all the code you can check it out from \nhttp://svn.magnolia.info/svn/magnolia/trunk/\nthe web project is /magnolia, all the other dirs contains utility (jar) projects",
    "Created an attachment (id\u003d36241)\nproject\n\n",
    "Created an attachment (id\u003d36242)\nclasspath\n\n",
    "Created an attachment (id\u003d36243)\ncomponent\n\n",
    "Can you  reproduce this problem in all the  web projects or just this one?\n\nIf it is only this project it has something to do with the way the web.xml  is mapped.  Can you  create a small web project  with the  custom mapping  similar to what you are using in the project you have described below  and  which reproduces the  problem. Also i can\u0027t see  the  mapping  magnolia/src/main/webapp/WEB-INF  in  the  .component",
    "\u003e Can you  reproduce this problem in all the  web projects or just this one?\n\nonly this one, sorry. I\u0027ve not been able to reproduce it on a smaller project, it just always happens on this specific one.\n\n\u003e Also i can\u0027t see  the  mapping  magnolia/src/main/webapp/WEB-INF  in  the  .component\n\nisn\u0027t this enough (that\u0027s what I also have in other working projects)?\n\u003cwb-resource deploy-path\u003d\"/\" source-path\u003d\"src/main/webapp\"/\u003e\n",
    "\u003cwb-resource deploy-path\u003d\"/\" source-path\u003d\"src/main/webapp\"/\u003e\n \nshould be enough if the web.xml is inside the src/main/webapp.\n\nIs it true in your case?\n\nPlease  attach  the  project  with its meta deta and  your web.xml, to debug the problem,  since this problem is  specific to the  project.  I wont  need  other  source files in  the  project which you are  using.\n",
    "Created an attachment (id\u003d36258)\nTest web project\n\nThis is project i used",
    "I was not able to reproduce the problem on a simple project, but I found something interesting: I just realized that the war validator was disabled in my preferences and that seemed the cause of the problem.\n\nEnabling the war validator in preferences and rebuilding makes the validation error disappear, and no exceptions are traced in the log anymore. Note anyway that the previous error was not simply a sticky message, a new exception was traced in the log for each CRL+B.\nAfter re-enabling the validator and cleaning the project I am now unable to reproduce the error myself. Maybe the problem is just due to a someway unexpected launch of the validator while it should be disabled according to preferences?",
    "So your project was a Simple project ?, there is  already a defect opened to not allow validators on the list of available validator if they define filtering, war  validator is one of them. \n\nBut i am confused too about your set up, you said that the project has a web.xml?  does it also has a web facet defined ?",
    "See  this https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d131077",
    "\u003e So your project was a Simple project ?\nsorry, I was not clear: with \"simple\" I just meant a small (web) project without all those dependencies.",
    "bug #131077 looks a totally different stuff. There is no MissingResourceException  involved here.",
    "I meant the last  comment in that defect, i will close this  defect as WORKSFORME, if you see  again , reopen it.\n",
    "reopening: it definitively happened again for me.\nStill no more details or steps to reproduce, but again I get this error while the WAR validator is disabled.\n\nIs it normal that the WAR validator is called regarless of the disable state set in preferences? If not, can you just check if/why it is actually called?\n\n\n\norg.eclipse.jst.j2ee.model.internal.validation.WarValidator.validateInJob(WarValidator.java:280)\n        at\norg.eclipse.jst.j2ee.internal.web.validation.UIWarValidator.validateInJob(UIWarValidator.java:90)\n        at\norg.eclipse.wst.validation.internal.operations.ValidatorJob.run(ValidatorJob.java:85)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "I could not reproduce this in my testing, and definitely it is not Web validatot which has any problem,  somehow  the  web.xml is not being found by the common archive code.  \n\nAre you using any junits or creating the web project outside of eclipse IDE?",
    "Ok, seeing your original stack it seems that you were importing the war  file and the war validator kicked off(you has auto build turned on), and by them the  web.xml was  not imported.\n\nIn the latest WTP, import is using  DataModelPausibleOperationImpl,  and this operation doesn\u0027t  notifies the listeners of  resource  change event unless the import is complete, so war validator wont  run. \n\nPlease  check with the latest WYP build.\n",
    "\u003e Are you using any junits or creating the web project outside of eclipse IDE?\nNo, it\u0027s a normal web application with a \"normal\" web.xml \n\n\u003e Ok, seeing your original stack it seems that you were importing the war file\nNo, this was an existing projects (NEVER imported from a war file).\n\nI saw this some more times, and seems to happens when the web.xml is updated from svn (the project is connected to a subversion repository), the project refreshed and rebuilt with the war validator disabled. The error disappear as soon as I re-enable the war validator.",
    "ok to close.",
    "Verified, closing."
  ],
  "commentCreationDates": [
    "2006-03-14T13:25:28+01:00",
    "2006-03-14T15:12:28+01:00",
    "2006-03-14T15:33:42+01:00",
    "2006-03-14T16:06:21+01:00",
    "2006-03-14T16:36:01+01:00",
    "2006-03-14T16:37:49+01:00",
    "2006-03-14T16:38:01+01:00",
    "2006-03-14T16:38:14+01:00",
    "2006-03-14T17:21:49+01:00",
    "2006-03-14T17:36:55+01:00",
    "2006-03-14T17:56:35+01:00",
    "2006-03-14T18:05:46+01:00",
    "2006-03-14T19:17:52+01:00",
    "2006-03-14T20:14:14+01:00",
    "2006-03-14T20:18:33+01:00",
    "2006-03-14T20:20:25+01:00",
    "2006-03-14T20:21:49+01:00",
    "2006-03-14T20:59:09+01:00",
    "2006-03-24T15:42:10+01:00",
    "2006-04-18T21:20:46+02:00",
    "2006-04-19T17:50:26+02:00",
    "2006-04-19T22:26:08+02:00",
    "2006-09-26T21:55:11+02:00",
    "2006-09-26T22:04:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jst.j2ee.commonarchivecore.internal.exception.DeploymentDescriptorLoadException",
      "message": "WEB-INF/web.xml",
      "elements": [
        {
          "method": "org.eclipse.jst.j2ee.model.internal.validation.WarValidator.validateInJob",
          "source": "WarValidator.java:295"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.web.validation.UIWarValidator.validateInJob",
          "source": "UIWarValidator.java:90"
        },
        {
          "method": "org.eclipse.wst.validation.internal.operations.ValidatorJob.run",
          "source": "ValidatorJob.java:85"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "131694",
      "date": "2006-03-14T13:25:28+01:00",
      "product": "Web Tools",
      "component": "wst.web",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Attempted to beginRule: F/magnolia/src/main/webapp/WEB-INF, does not match outer scope rule: org.eclipse.wst.validation.internal.core.EmptySchedulingRule@66f52c",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Assert.isLegal",
          "source": "Assert.java:58"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ThreadJob.illegalPush",
          "source": "ThreadJob.java:116"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ThreadJob.push",
          "source": "ThreadJob.java:225"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs.begin",
          "source": "ImplicitJobs.java:80"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.beginRule",
          "source": "JobManager.java:218"
        },
        {
          "method": "org.eclipse.core.internal.resources.WorkManager.checkIn",
          "source": "WorkManager.java:96"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.prepareOperation",
          "source": "Workspace.java:1681"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.refreshLocal",
          "source": "Resource.java:1396"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.refreshLocal",
          "source": "File.java:334"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.ResourceFileBuffer.refreshFile",
          "source": "ResourceFileBuffer.java:452"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create",
          "source": "ResourceFileBuffer.java:238"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect",
          "source": "TextFileBufferManager.java:109"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.FileBufferModelManager.getModel",
          "source": "FileBufferModelManager.java:541"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._commonGetModel",
          "source": "ModelManagerImpl.java:318"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._commonGetModel",
          "source": "ModelManagerImpl.java:304"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForRead",
          "source": "ModelManagerImpl.java:1062"
        },
        {
          "method": "org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSERenderer.initializeXMLModel",
          "source": "EMF2DOMSSERenderer.java:389"
        },
        {
          "method": "org.eclipse.wst.xml.core.internal.emf2xml.EMF2DOMSSERenderer.loadDocument",
          "source": "EMF2DOMSSERenderer.java:423"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad",
          "source": "EMF2DOMRenderer.java:60"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad",
          "source": "TranslatorResourceImpl.java:141"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad",
          "source": "CompatibilityXMIResourceImpl.java:173"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:1015"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load",
          "source": "TranslatorResourceImpl.java:387"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:249"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad",
          "source": "ProjectResourceSetImpl.java:83"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:264"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:349"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource",
          "source": "ProjectResourceSetImpl.java:262"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.archive.operations.ComponentLoadStrategyImpl.getMofResource",
          "source": "ComponentLoadStrategyImpl.java:420"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.getMofResource",
          "source": "ArchiveImpl.java:869"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleFileImpl.getDeploymentDescriptorResource",
          "source": "ModuleFileImpl.java:255"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.XmlBasedImportStrategyImpl.primLoadDeploymentDescriptor",
          "source": "XmlBasedImportStrategyImpl.java:39"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.War22ImportStrategyImpl.loadDeploymentDescriptor",
          "source": "War22ImportStrategyImpl.java:87"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.War22ImportStrategyImpl.importMetaData",
          "source": "War22ImportStrategyImpl.java:81"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.WARFileImpl.getDeploymentDescriptor",
          "source": "WARFileImpl.java:150"
        },
        {
          "method": "org.eclipse.jst.j2ee.model.internal.validation.WarValidator.validateInJob",
          "source": "WarValidator.java:280"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.web.validation.UIWarValidator.validateInJob",
          "source": "UIWarValidator.java:90"
        },
        {
          "method": "org.eclipse.wst.validation.internal.operations.ValidatorJob.run",
          "source": "ValidatorJob.java:85"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "131694",
      "date": "2006-03-14T13:25:28+01:00",
      "product": "Web Tools",
      "component": "wst.web",
      "severity": "normal"
    }
  ],
  "groupId": "131694",
  "bugId": "131694",
  "date": "2006-03-14T13:25:28+01:00",
  "product": "Web Tools",
  "component": "wst.web",
  "severity": "normal"
}