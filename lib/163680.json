{
  "comments": [
    "The below exception, or something like it, sometimes crops up during incremental builds with JDT over code which has circularities in the file level dependancies (imports) i.e. code wherein file A references file B which references file C which references file A.  This appears is the code searching for hierarchy loops barfing on some kinds of potential loops.\n\nIncidentally I should mention that the code is (of course) free of class hierarchy loops and will compiles just fine during a full build, or a automatic build trigered by a \"clean project\".  Unfortunately this is not something which can be easily duplicated, since it seems to depend on build order.\n\nThis error is reported for the first line of SOME file (which happens to be a comment).  The file the error is reported in is usually one recently built, but may or may not be part of the file loop as described in the first paragraph of this bug.\n\nInternal compiler error\n\tjava.lang.ClassCastException: org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:1072)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:1030)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:981)\n\tat org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(ParameterizedSingleTypeReference.java:146)\n\tat org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ParameterizedSingleTypeReference.java:209)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(TypeReference.java:110)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(ClassScope.java:1083)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass(ClassScope.java:803)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy(ClassScope.java:928)\n\tat org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy(CompilationUnitScope.java:289)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(LookupEnvironment.java:198)\n\tat org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:383)\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:397)\n\tat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:300)\n\tat org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:292)\n\tat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:237)\n\tat org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:120)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:260)\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:185)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:603)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:167)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:230)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:233)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:252)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:285)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:145)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:208)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n\n\nThere is a second symptom of what may or may not be the same problem: occasionally at least one of the files in the cycle remains somehow improperly built, leaving the hierarchy of some class inconsistent and resulting in errors along the lines of \"class not found\".  I mention this out of completeness, but it may be an entirely separate bug, and I will submit it as soon as I have time to isolate a code fragment which makes it easily repeatable.",
    "The latter could be a side effect of the ClassCastException.\nCan you provide steps to recreate ?",
    "I can provide a tarball/zipfile of code to recreate the problem mentioned at the end of the first comment as that is easy and darn near deterministic.  But I can\u0027t easily recreate exactly that exception since it seems to be a nondeterministic side effect of build order.\n\nIf you\u0027d like a tarball or zipfile to create the later problem, just let me know an e-mail address.  It\u0027s code I\u0027d rather not post to bugzilla for now.",
    "Please send it to me.",
    "Got the file, thanks.",
    "Using the files you sent, I do not get the exception, but I get the error you mention in the accompanying note, by following the given steps. Thanks again for sharing.\nI\u0027ll try to forge a smaller test case, and I\u0027ll investigate the causes.\n\nIf the exception for which you initially opened the bug shows up again, please let us know steps to reproduce (as far as isolating those can be done).",
    "The issue is around the resolution of ParameterizedTypeBinding-s when the generic type happens to be unresolved (yet). The method used to break the recursion marks the type has not having unresolved parameters... which happens to be interpreted down the path as not having parameters at all. Then the result is not generic, hence the message.\n(This has been observed by stepping through code with 3.2 maintenance code. Need to write a test case and to assess its behavior on 3.2 and 3.3.)",
    "The initial exception hasn\u0027t shown up again quite the same way, but it\u0027s been exhibiting the same characteristics as the error you desribed.  I\u0027ll try to get a smaller test case together when I have some time to work on it, but it might be a while.",
    "The problem is a bit more involved than what I thought initially.\nMy current understanding is the following:\n- BinaryTypeBinding#BinaryTypeBinding(PackageBinding, IBinaryType, LookupEnvironment) delegates to BinaryTypeBinding#cachePartsFrom the proper initialization of the type variables for the newly created binding; it puts it to null to signal that it is not properly initialized yet; (amongst other things, this avoids being considered as non generic);\n- BinaryTypeBinding#cachePartsFrom starts by setting typeVariables to NO_TYPE_VARIABLES, to protect the case where something goes wrong before the resolution is complete; this is generally harmless...\n- except in this case where the resolution of the type parameters themselves involve the current type itself, which is the case here; when the type is returned by the cache by the standard mechanism, it is then marked as non generic - because it has NO_TYPE_VARIABLES - and fails to satisfy the needs of the calling point.\n\nThe clean build does not involve those binary bindings and keeps safe.\n\nReleased (inactive) GenericTypeTest#1075 that illustrates the problem on a much smaller source:\n\npublic class X \u003cT extends X\u003c?\u003e.J\u003e{\n\tpublic class J implements I\u003cT\u003e {\n\t}\n}\npublic interface I \u003cT\u003e {\n}\npublic class Y extends X {\n}\n\nCompiled altogether, Y behaves correctly. Compiled alone against X.class and I.class, it fails with the following message: 1. ERROR in Y.java (at line 1)\n\tpublic class Y extends X {\n\t                       ^\nThe type X is not generic; it cannot be parameterized with arguments \u003c?\u003e\n\nNote that this is probably only one of the problems that you have met.\nMoving to Philippe for the BinaryTypeBinding issue.",
    "If the fix is simple, can we backport it for 3.2.2 ?",
    "+1 for 3.2.2",
    "Created an attachment (id\u003d54422)\nPhilippe - proposed patch to HEAD for the case described in comment #8\n\n",
    "Created an attachment (id\u003d54423)\nPatch for 3.2.x stream\n\n",
    "Added GenericTypeTest 1090\n\nReleased for 3.3M4\nReleased for 3.2.2\n",
    "Enabled inactive test1075() and removed test1090()",
    "Verified for 3.3M4 with I20061212-0010.",
    "Verified for 3.2.2 using build M20060112-1200.\n"
  ],
  "commentCreationDates": [
    "2006-11-07T16:23:42+01:00",
    "2006-11-08T10:28:59+01:00",
    "2006-11-08T14:33:24+01:00",
    "2006-11-08T14:46:32+01:00",
    "2006-11-09T09:57:45+01:00",
    "2006-11-14T11:10:33+01:00",
    "2006-11-14T11:59:04+01:00",
    "2006-11-14T15:00:52+01:00",
    "2006-11-14T16:32:14+01:00",
    "2006-11-22T17:27:06+01:00",
    "2006-11-22T17:28:34+01:00",
    "2006-11-23T16:58:37+01:00",
    "2006-11-23T17:29:12+01:00",
    "2006-11-23T18:18:47+01:00",
    "2006-11-23T18:25:24+01:00",
    "2006-12-12T16:15:52+01:00",
    "2007-01-16T10:03:57+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:1072"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:1030"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:981"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType",
          "source": "ParameterizedSingleTypeReference.java:146"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType",
          "source": "ParameterizedSingleTypeReference.java:209"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType",
          "source": "TypeReference.java:110"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:1083"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass",
          "source": "ClassScope.java:803"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:928"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:289"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:198"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.beginToCompile",
          "source": "Compiler.java:383"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:397"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:300"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile",
          "source": "IncrementalImageBuilder.java:292"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:237"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build",
          "source": "IncrementalImageBuilder.java:120"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas",
          "source": "JavaBuilder.java:260"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:185"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:603"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:167"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:201"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:230"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:233"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:252"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:285"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:145"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:208"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "163680",
      "date": "2006-11-07T16:23:42+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "163680",
  "bugId": "163680",
  "date": "2006-11-07T16:23:42+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}