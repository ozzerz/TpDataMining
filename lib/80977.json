{
  "comments": [
    "In builds of late we have transient test failures such as:\n\nCould not find variable \u0027sum\u0027 \n\njunit.framework.AssertionFailedError: Could not find variable \u0027sum\u0027\nat \norg.eclipse.jdt.debug.tests.core.MethodBreakpointTests.testHitCountExitBreakpoi\nnt(MethodBreakpointTests.java:215)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\nat org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:53)\nat java.lang.Thread.run(Thread.java:534)\n\nand\n\n\nShould have been suspended at linenumber expected:\u003c35\u003e but was:\u003c26\u003e \n\njunit.framework.AssertionFailedError: Should have been suspended at linenumber \nexpected:\u003c35\u003e but was:\u003c26\u003e\nat \norg.eclipse.jdt.debug.tests.core.ExceptionBreakpointTests.testHitCountException\n(ExceptionBreakpointTests.java:145)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\nat org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:53)\nat java.lang.Thread.run(Thread.java:534)\n\n\nWe cannot reproduce the failures, but it looks possible that one test is not \ncompletely finished before the next test executes (at least in terms of debug \nevents being fired/processed). A test might receive an event from a previous \ntest that is running, causing the test to fail.\n\nTo improve cleanup, we wait for a terminate event on each target. And then we \nfire a custom event and wait for it to come back to ensure that the event \nqueue is flusded before the next test runs.",
    "Fixed in AbstractDebugTest. Released to HEAD.",
    "please verify, Luc.",
    "Still failing.",
    "The fisrt test failure here (could not find variable \u0027sum\u0027) has been happening \nmore in the builds. It looks like the problem was with synchronization on \nJDIValue.getVariableList(). Two threads could access the fVariables list - one \ncould be filling the list as the other accesses a partially filled list. Fix \nis to synchronize the method.",
    "Released to M4.",
    "Output from test suite follows. Note when searching for a variable, \u0027this\u0027 has \nno children, but when we dump the variables (next access), it is there.\n\n     [java] findVariable(count)\n     [java] \tcomparing local: this\n     [java] \t\u003e\u003e[cache \u0027this\u0027]\n     [java] \tcomparing local: i\n     [java] \t\u003e\u003esearching field members of \u0027this\u0027\n     [java] \t\u003e\u003eno matches\n     [java] Could not find variable \u0027count\u0027 in frame: VariableChanges.test() \nline: 21\n     [java] Visible variables are:\n     [java] \tthis\u003d VariableChanges  (id\u003d9)\n     [java] \ti\u003d 0\n     [java] \tcount\u003d 0",
    "Darin,\n\nI noticed this same failure in the latest 3.0.2 build too.  I don\u0027t really \nhave a strong preference either way, but thought I would bring up the option \nof making this test fix for 3.0.2 as well.  As we move toward closing down \n3.0.2 early next year, having test failures pop-up near the end could be \ndisconcerting even if they are fully explainable.\n",
    "*** Bug 76554 has been marked as a duplicate of this bug. ***",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-12-14T19:24:27+01:00",
    "2004-12-14T19:25:46+01:00",
    "2004-12-14T19:26:04+01:00",
    "2004-12-15T21:56:47+01:00",
    "2004-12-16T20:11:16+01:00",
    "2004-12-16T20:11:41+01:00",
    "2004-12-16T20:14:26+01:00",
    "2004-12-17T13:42:52+01:00",
    "2005-01-04T14:57:54+01:00",
    "2005-01-05T19:47:51+01:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Could not find variable \u0027sum\u0027",
      "elements": [
        {
          "method": "org.eclipse.jdt.debug.tests.core.MethodBreakpointTests.testHitCountExitBreakpoint",
          "source": "MethodBreakpointTests.java:215"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.DebugSuite$1.run",
          "source": "DebugSuite.java:53"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "80977",
      "date": "2004-12-14T19:24:27+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Should have been suspended at linenumber  expected:\u003c35\u003e but was:\u003c26\u003e",
      "elements": [
        {
          "method": "org.eclipse.jdt.debug.tests.core.ExceptionBreakpointTests.testHitCountException",
          "source": "ExceptionBreakpointTests.java:145"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.DebugSuite$1.run",
          "source": "DebugSuite.java:53"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "80977",
      "date": "2004-12-14T19:24:27+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "80977",
  "bugId": "80977",
  "date": "2004-12-14T19:24:27+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}