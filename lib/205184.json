{
  "comments": [
    "+++ This bug was initially created as a clone of Bug #131151 +++\n\nWe have code called by a multithreaded application. If the first invocation is from a single thread, things work fine; if multiple threads are invoking our code concurrently, we get a NullPointerException at org.eclipse.emf.common.util.BasicEMap.entryForKey(BasicEMap.java:1339) during processing of the ResourceImpl.load() method.\n\nIBM L2 support stated, \"this problem seems to stem from a race condition in initializing an index as a side effect of a lookup.\"  They provided a workaround as follows, which we have verified as working:\n\nIf the customer were to access the details map of all extended metadata annotations in their metamodels before the multiple loads started occurring, the indexes would all be pre-computed and there\u0027d be no chance of the race condition.  This could be done with a simple method like this: \n\n  public static void fixExtendedMetaData(EPackage ePackage) \n  { \n    for (Iterator i \u003d ePackage.eAllContents(); i.hasNext(); ) \n    { \n      Object o \u003d i.next(); \n      if (o instanceof EAnnotation) \n      { \n        ((EAnnotation)o).getDetails().get(\"\"); \n      } \n    } \n  } \n\nThis would need to be invoked on each package during package initialization, which is thread-safe.  So, for package foo, in FooPackageImpl: \n\n  public static FooPackage init() \n  { \n    ... \n\n    // Initialize created meta-data \n    theFooPackage.initializePackageContents(); \n\n    // Add this (for each package above, if there are package interdependencies) \n    fixExtendedMetaData(theFooPackage); \n\n    ... \n\n    return theFooPackage; \n  }",
    "This fix has been committed to CVS for 2.1.x.",
    "Fixed in 2.1.3 (R200710031529)."
  ],
  "commentCreationDates": [
    "2007-10-02T15:44:42+02:00",
    "2007-10-02T17:19:01+02:00",
    "2007-10-03T23:01:10+02:00"
  ],
  "traces": [
    {
      "exceptionType": "NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.emf.common.util.BasicEMap.entryForKey",
          "source": "BasicEMap.java:1339"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "205184",
      "date": "2007-10-02T15:44:42+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "205184",
  "bugId": "205184",
  "date": "2007-10-02T15:44:42+02:00",
  "product": "EMF",
  "component": "Core",
  "severity": "normal"
}