{
  "comments": [
    "Build ID: I20070503-1400\n\nSteps To Reproduce:\nWe are adding a new custom field in the parser extension of the plugin.xml of com.ibm.etools.logging.parsers for the parsers which are supporting sensor filtering as :\n \u003ccustomField\n     id\u003d\"sensorFilterDetails\"\n     customFieldClass\u003d\"com.ibm.etools.logging.parsers.ui.SensorFilterCustomControl\"\u003e\n \u003c/customField\u003e  \n \nSensorFilterCustomControl implements IImportWizardControl and hence have the method \n\tpublic String getLogElementLabel()\n\t{\n\t\treturn \"Sensor filtering\"; \n\t}\n\t       \nBut we have a problem with this as described in the attached images. :\n\nOriginally without this custom field\n[\"ImportLog_1.JPG\"] \n\n[\"ImportLog_2.JPG\"] \n\nWith this new custom field added for supporting sensor filtering\n\n[\"ImportLog_3.JPG\"] \n\n[\"ImportLog_4.JPG\"] \n\nProblem : Instead of the log file path, we get the label of the custom field control. \n\nThis class cannot return the log file path by itself (as in CEI Custom Field CEILogParserCustomControl) as it has control only over the fields for sensor filtering and not on the all fields (as in CEI). We cannot make those sensor fields as normal parser fields as it is not a direct individual field input of a parser. We need to create a XPath query from creation time and severity fields and then set that Xpath as value to \"filter\" input to the Sensor of the Adapter.\n\nReturning null from in the custom control  getLogElementLabel() method, will solve this problem as when OK is clicked and if the label of custom field is null, then it will try to get the value of log file path and will set that as log file label and will show the log file in the table as required. \n\n    But we get NullPointerException when FINISH is clicked in the Import Log Wizard.\n\njava.lang.NullPointerException\nat java.util.Hashtable.put(Hashtable.java:630)\nat org.eclipse.tptp.monitoring.logui.internal.wizards.LogFileElement.getUserInput(LogFileElement.java:415)\nat org.eclipse.tptp.platform.common.internal.repository.TraceModelFactoryImpl.createProcess(TraceModelFactoryImpl.java:306)\nat org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.createAgent(ImportLogWizard.java:1781)\nat org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.importLog(ImportLogWizard.java:1825)\nat org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.run(ImportLogWizard.java:305)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\nat org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.performFinish(ImportLogWizard.java:226)\nat org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:742)\nat org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:373)\nat org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:616)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3673)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3284)\nat org.eclipse.jface.window.Window.runEventLoop(Window.java:820)\nat org.eclipse.jface.window.Window.open(Window.java:796)\nat org.eclipse.tptp.monitoring.logui.internal.actions.ImportLogAction.run(ImportLogAction.java:53)\nat org.eclipse.jface.action.Action.runWithEvent(Action.java:498)\nat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:545)\nat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)\nat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3673)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3284)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2365)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2329)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2204)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:615)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:497)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:436)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1162)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1137)\n\n\nMore information:",
    "Created an attachment (id\u003d68548)\nOriginally without custom field - 1\n\n",
    "Created an attachment (id\u003d68550)\nOriginally without custom field - 2\n\n",
    "Created an attachment (id\u003d68551)\nWith the new custom field added for supporting sensor filtering - 1\n\n",
    "Created an attachment (id\u003d68552)\nWith the new custom field added for supporting sensor filtering - 2\n\n",
    "SensorFilterCustomControl has two fields, one for Creation time and other for Severity. It does not have any log file path field.\n\nThe Parser extension may have parser fields (like log file path field) and if sensor filtering is supported, then it will have a custom field for SensorFilterCustomControl also.\n\n",
    "Created an attachment (id\u003d68694)\nPatch for bug 18886\n\nAttaching patch.",
    "Created an attachment (id\u003d68695)\nPatch for bug 188886\n\nUpdating patch, attached the wrong previous time.",
    "Fixed as per monitoring project lead approval."
  ],
  "commentCreationDates": [
    "2007-05-24T13:51:44+02:00",
    "2007-05-24T13:54:32+02:00",
    "2007-05-24T13:56:17+02:00",
    "2007-05-24T13:57:33+02:00",
    "2007-05-24T14:02:06+02:00",
    "2007-05-24T14:11:40+02:00",
    "2007-05-25T01:55:04+02:00",
    "2007-05-25T02:01:09+02:00",
    "2007-05-30T18:19:30+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.Hashtable.put",
          "source": "Hashtable.java:630"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.LogFileElement.getUserInput",
          "source": "LogFileElement.java:415"
        },
        {
          "method": "org.eclipse.tptp.platform.common.internal.repository.TraceModelFactoryImpl.createProcess",
          "source": "TraceModelFactoryImpl.java:306"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.createAgent",
          "source": "ImportLogWizard.java:1781"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.importLog",
          "source": "ImportLogWizard.java:1825"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.run",
          "source": "ImportLogWizard.java:305"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizard.performFinish",
          "source": "ImportLogWizard.java:226"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.finishPressed",
          "source": "WizardDialog.java:742"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:373"
        },
        {
          "method": "org.eclipse.jface.dialogs.Dialog$2.widgetSelected",
          "source": "Dialog.java:616"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:227"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3673"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3284"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:820"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:796"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.actions.ImportLogAction.run",
          "source": "ImportLogAction.java:53"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:498"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:545"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:490"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:402"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3673"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3284"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2365"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2329"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2204"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:497"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:436"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1162"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1137"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "188886",
      "date": "2007-05-24T13:51:44+02:00",
      "product": "TPTP Log Analyzer",
      "component": "Monitor.UI",
      "severity": "critical"
    }
  ],
  "groupId": "188886",
  "bugId": "188886",
  "date": "2007-05-24T13:51:44+02:00",
  "product": "TPTP Log Analyzer",
  "component": "Monitor.UI",
  "severity": "critical"
}