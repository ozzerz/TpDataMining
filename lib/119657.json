{
  "comments": [
    "I get the eror when adding the following simple around advice but not when I use \"-XnoInline\":\n\npublic aspect Recovery {\n\n\tObject around () : call(public * *(..)) \u0026\u0026 target(StockQuoteService) {\n\t\tSystem.out.println(\"Recovery.around() \" + thisJoinPoint);\n\t\treturn proceed();\n\t}\n}",
    "Err ? Wheres the rest of the program? It is no doubt peculiar to the join point and the type that is being affected...",
    "Created an attachment (id\u003d31315)\nTestcase\n\nThe problem seems to lie with duplicate closures. When Recovery.aj is compiled a closure accounts.recovery.Recovery$AjcClosure1 is generated. This is loaded after services.account.StockQuoteServiceTest is woven but another is generated when accounts.recovery.Recovery is rewoven. We don\u0027t see this because the resulting LinkageError(\"duplicate class definition: accounts/recovery/Recovery$AjcClosure1\") is being swallowed in Aj.defineClass(). For some reason the first closure doesn\u0027t work.\n\nLOADING SUITE: ..\\tests\\src\\org\\aspectj\\systemtest\\ajc150\\ajc150.xml\nTEST: no IllegalAccessError with around advice on interface method call\t...info register aspect accounts.recovery.Recovery\ninfo weaving \u0027services.account.StockQuoteServiceTest\u0027\nweaveinfo Join point \u0027method-call(services.account.AccountReport services.account.StockQuoteServiceTest.getAccountReport(java.lang.String))\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:13) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nweaveinfo Join point \u0027method-call(java.lang.String services.accountdata.StockAccount.getSymbol())\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:19) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nweaveinfo Join point \u0027method-call(float services.stockquote.StockQuoteService.getQuote(java.lang.String))\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:19) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7)\nweaveinfo Join point \u0027method-call(int services.accountdata.StockAccount.getQuantity())\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:19) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.StockQuoteServiceTest, length\u003d6593\ninfo weaving \u0027accounts.recovery.Recovery$AjcClosure1\u0027\nWeavingClassFileProvider.acceptResult() className\u003daccounts.recovery.Recovery$AjcClosure1, length\u003d725\ninfo weaving \u0027services.stockquote.StockQuoteService\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.stockquote.StockQuoteService, length\u003d336\ninfo weaving \u0027services.account.AccountReport\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.AccountReport, length\u003d238\ninfo weaving \u0027services.accountdata.StockAccount\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.accountdata.StockAccount, length\u003d1127\ninfo weaving \u0027services.stockquote.StockQuoteServiceImpl\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.stockquote.StockQuoteServiceImpl, length\u003d575\ninfo weaving \u0027accounts.recovery.Recovery\u0027\ninfo processing reweavable type accounts.recovery.Recovery: C:\\temp\\ajcSandbox\\ajcTest4475.tmp\\accounts\\recovery\\Recovery.aj\ninfo successfully verified type accounts.recovery.Recovery exists.  Originates from C:\\temp\\ajcSandbox\\ajcTest4475.tmp\\accounts\\recovery\\Recovery.aj\nweaveinfo Join point \u0027method-call(void java.io.PrintStream.println(java.lang.String))\u0027 in Type \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:8) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nWeavingClassFileProvider.acceptResult() className\u003daccounts.recovery.Recovery, length\u003d3744\nWeavingClassFileProvider.acceptResult() className\u003daccounts.recovery.Recovery$AjcClosure1, length\u003d725\nAj.defineClass() name\u003daccounts.recovery.Recovery$AjcClosure1\njava.lang.IllegalAccessError: tried to access method accounts.recovery.Recovery.println_aroundBody0(Laccounts/recovery/Recovery;Ljava/io/PrintStream;Ljava/lang/String;Lorg/aspectj/lang/JoinPoint;)V from class services.account.StockQuoteServiceTest\n\tat services.account.StockQuoteServiceTest.getQuote_aroundBody5$advice(StockQuoteServiceTest.java:108)\n\tat services.account.StockQuoteServiceTest.getAccountReport(StockQuoteServiceTest.java:19)\n\tat services.account.StockQuoteServiceTest.getAccountReport_aroundBody0(StockQuoteServiceTest.java:13)\n\tat services.account.StockQuoteServiceTest.main(StockQuoteServiceTest.java:13)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.aspectj.tools.ajc.AjcTestCase.run(AjcTestCase.java:609)\n\tat org.aspectj.testing.RunSpec.execute(RunSpec.java:56)\n\tat org.aspectj.testing.AjcTest.runTest(AjcTest.java:68)\n\tat org.aspectj.testing.XMLBasedAjcTestCase.runTest(XMLBasedAjcTestCase.java:111)\n\tat org.aspectj.systemtest.ajc150.Ajc150Tests.testNoIllegalAccessErrorWithAroundAdvice_pr119657(Ajc150Tests.java:802)DONE\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\nIf \"-XnoWeave\" is used to compile the aspect no closure is generated at that point but several _are_ generated during LTW and the test passes:\n\nLOADING SUITE: ..\\tests\\src\\org\\aspectj\\systemtest\\ajc150\\ajc150.xml\nTEST: no IllegalAccessError with around advice on interface method call\t...info register aspect accounts.recovery.Recovery\ninfo weaving \u0027services.account.StockQuoteServiceTest\u0027\nweaveinfo Join point \u0027method-call(services.account.AccountReport services.account.StockQuoteServiceTest.getAccountReport(java.lang.String))\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:13) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nweaveinfo Join point \u0027method-call(java.lang.String services.accountdata.StockAccount.getSymbol())\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:19) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nweaveinfo Join point \u0027method-call(float services.stockquote.StockQuoteService.getQuote(java.lang.String))\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:19) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7)\nweaveinfo Join point \u0027method-call(int services.accountdata.StockAccount.getQuantity())\u0027 in Type \u0027services.account.StockQuoteServiceTest\u0027 (StockQuoteServiceTest.java:19) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.StockQuoteServiceTest, length\u003d4483\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.StockQuoteServiceTest$AjcClosure1, length\u003d762\nAj.defineClass() name\u003dservices.account.StockQuoteServiceTest$AjcClosure1\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.StockQuoteServiceTest$AjcClosure3, length\u003d775\nAj.defineClass() name\u003dservices.account.StockQuoteServiceTest$AjcClosure3\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.StockQuoteServiceTest$AjcClosure5, length\u003d909\nAj.defineClass() name\u003dservices.account.StockQuoteServiceTest$AjcClosure5\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.StockQuoteServiceTest$AjcClosure7, length\u003d855\nAj.defineClass() name\u003dservices.account.StockQuoteServiceTest$AjcClosure7\ninfo weaving \u0027services.stockquote.StockQuoteService\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.stockquote.StockQuoteService, length\u003d336\ninfo weaving \u0027services.account.AccountReport\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.account.AccountReport, length\u003d238\ninfo weaving \u0027services.accountdata.StockAccount\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.accountdata.StockAccount, length\u003d1127\ninfo weaving \u0027services.stockquote.StockQuoteServiceImpl\u0027\nWeavingClassFileProvider.acceptResult() className\u003dservices.stockquote.StockQuoteServiceImpl, length\u003d575\ninfo weaving \u0027accounts.recovery.Recovery\u0027\nweaveinfo Join point \u0027method-call(void java.io.PrintStream.println(java.lang.String))\u0027 in Type \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:8) advised by around advice from \u0027accounts.recovery.Recovery\u0027 (Recovery.aj:7) [with runtime test]\nWeavingClassFileProvider.acceptResult() className\u003daccounts.recovery.Recovery, length\u003d3745\nWeavingClassFileProvider.acceptResult() className\u003daccounts.recovery.Recovery$AjcClosure1, length\u003d725\nAj.defineClass() name\u003daccounts.recovery.Recovery$AjcClosure1\nRecovery.around() call(float services.stockquote.StockQuoteService.getQuote(String))\nDONE\n",
    "If -XnoWeave works perhaps what we need to do is determine whether an aspect is reweavable when it is registered (BcelWeaver.addLibraryAspect()) and use the original unwoven byte-code. The fact that a closure may already exist will not matter because we will generate new ones and they will be used in preference to the one on disk (either through calling defineClass() or GeneratedClassHandler callback interface. We can use the logic from processReweavableStateIfPresent().",
    "Unfortunately this causes TraceJarWeaveTestCase to fail because we now generate different byte-code for the woven classes: the aspect is no longer woven hence we cannot inline around advice. The real problem seems to be that an aspect that weaves itself in isolation and generates a closure then incorrectly weaves other classes during LTW (see stack trace).",
    "The closure generated is identical whether an aspect is compiled alone or with the rest of the application that it affects. The problem only applies to aspects that advise themselves. We must use the unwoven version of an aspect for LTW as it may be woven by another aspect and until that point it cannot inline around advice in other types.",
    "Created an attachment (id\u003d31483)\nTestcases and fix\n\n1. Modify BcelWeaver.addLibraryAspect() to use unwoven aspects\n2. Testcases for LTW around advice closures and the new \"info generating class ...\" message\n3. Move defineClass() from Aj to ClassLoaderWeavingAdaptor\n4. Issue warnings when defining generated classes fails\n5. New TraceJarHello.txt because we can\u0027t inline advice",
    "fixes checked in.",
    "fix available"
  ],
  "commentCreationDates": [
    "2005-12-07T15:21:42+01:00",
    "2005-12-07T15:53:23+01:00",
    "2005-12-07T17:18:32+01:00",
    "2005-12-08T13:43:03+01:00",
    "2005-12-08T17:37:38+01:00",
    "2005-12-09T16:35:32+01:00",
    "2005-12-09T17:54:11+01:00",
    "2005-12-12T11:16:02+01:00",
    "2005-12-12T13:50:06+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalAccessError",
      "message": "tried to access method accounts.recovery.Recovery.println_aroundBody0(Laccounts/recovery/Recovery;Ljava/io/PrintStream;Ljava/lang/String;Lorg/aspectj/lang/JoinPoint;)V from class services.account.StockQuoteServiceTest",
      "elements": [
        {
          "method": "services.account.StockQuoteServiceTest.getQuote_aroundBody5$advice",
          "source": "StockQuoteServiceTest.java:108"
        },
        {
          "method": "services.account.StockQuoteServiceTest.getAccountReport",
          "source": "StockQuoteServiceTest.java:19"
        },
        {
          "method": "services.account.StockQuoteServiceTest.getAccountReport_aroundBody0",
          "source": "StockQuoteServiceTest.java:13"
        },
        {
          "method": "services.account.StockQuoteServiceTest.main",
          "source": "StockQuoteServiceTest.java:13"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.aspectj.tools.ajc.AjcTestCase.run",
          "source": "AjcTestCase.java:609"
        },
        {
          "method": "org.aspectj.testing.RunSpec.execute",
          "source": "RunSpec.java:56"
        },
        {
          "method": "org.aspectj.testing.AjcTest.runTest",
          "source": "AjcTest.java:68"
        },
        {
          "method": "org.aspectj.testing.XMLBasedAjcTestCase.runTest",
          "source": "XMLBasedAjcTestCase.java:111"
        },
        {
          "method": "org.aspectj.systemtest.ajc150.Ajc150Tests.testNoIllegalAccessErrorWithAroundAdvice_pr119657",
          "source": "Ajc150Tests.java:802"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "119657",
      "date": "2005-12-07T17:18:32+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "119657",
  "bugId": "119657",
  "date": "2005-12-07T15:21:42+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}