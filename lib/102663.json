{
  "comments": [
    "Mylar install listeners to the *active* workbench window frequently, so it is \nlikely to break if multiple workbench windows are used concurrently.",
    "I use multiple windows: this bug is essential for me to be able to use Mylar. \nThis is true of bug 103235 too.",
    "This turns out to be too disruptive to do for Mylar 0.3 because the multitude\nof listeners all registers on workbench startup not window creation.  This will\nalso mean that we\u0027ll have to implement de-registering them, which will also\nbe nice from the point of view of being able to dynamically stop the Mylar plug-ins.\n We should do it *after* we make the bridges and listeners extension points.\n\n\n\n",
    "This will probably have to wait until next week.",
    "*** Bug 103235 has been marked as a duplicate of this bug. ***",
    "Lowering priority since this might be too disruptive to do this week, but will \nconsider.",
    "Not sure if this will make it in this week, but I hope to make some progress on\nthis by next week.",
    "I\u0027ve taken a first crack at this.  Patches have been attached.  The patches fall along three lines:\n 1. enhancements for monitors to support listening from multiple windows\n 2. general replacement of code to IWorkbench.getActiveWorkbenchWindow() to iterating over the IWorkbench.getWorkbenchWindows()\n\nThe key difficulty for #1 is to ensure monitors are installed for new windows.  To support this, I added support to MylarPlugin to maintain callbacks to be registered on new windows (and also on any currently-opened windows).  Unfortunately this requires maintaining separate lists for each type (currently ISelectionListeners, IPartListeners, IPageListeners, and IPerspectiveListener).  Part of this also required changing ShellListeners to IWindowListeners -- these occurrences were to detect window activation and deactivation (focus). [It seemed preferable for Mylar to deal with Workbench-level concepts where possible, rather than delving into SWT concepts.]\n\nThere is a conflict for #2 between what should occur for all windows, and what should occur only for the active window.  \n\nToDo:\n  * this hasn\u0027t run against the Mylar test suite, just trial debug runs.  (Will do that tomorrow.)\n  * it would be nice to replace the remaining uses of IWorkbench.getActiveWorkbenchWindow() to obtain the relevant window from the actions/commands that trigger the actions.  This deals with the case of actions started in one window, but that complete after focus has changed to a different window.  (This seems to be a problematic pattern throughout Eclipse, unfortunately.)",
    "Created an attachment (id\u003d37036)\nMultiple windows patch, mk I\n\n",
    "Brian: what\u0027s the state of this patch?  I\u0027d like to plan integrating it, hopefully next week.  Do you have time to put towards making sure it works on the latest?",
    "Created an attachment (id\u003d41955)\nMultiple windows patch, mk II\n\n* Updated to changes as of 2006/05/18.\n* Added test to org.eclipse.mylar.monitor.tests to test detection of events from multiple windows.\n* Change pattern uses of \u003cplugin\u003e.getWorkbench().getActiveWorkbenchWindow().getShell() to instead use the local part\u0027s window\u0027s shell in as many places as possible.  Unfortunately this isn\u0027t possible everywhere (notably for Actions).\n\nNOTE: There appears to be a race condition in org.eclipse.mylar.ide.tests.ResourcesContextTest\u0027s testFileAdded(); this fails on occasion.",
    "Created an attachment (id\u003d42671)\nmylar/context/zip\n\n",
    "Patch updated and applied.  Nice work Brian and great test case, it\u0027s great that we no longer have this limitation.  I\u0027m assuming that you\u0027ll do some more manual poking of this so please reopen or post if you see any inconsistencies.",
    "One problem that\u0027s come up: toggling tasks from the Task List sometimes causes an NPE:\n\nThread [main] (Suspended (exception NullPointerException))\t\n\tTaskDeactivateAction.run() line: 48\t\n\tTaskListView$TaskListCellModifier.modify(Object, String, Object) line: 683\t\n\tTreeViewer$4(TreeEditorImpl).saveEditorValue(CellEditor, Item) line: 322\t\n\tTreeViewer$4(TreeEditorImpl).applyEditorValue() line: 162\t\n\tTreeEditorImpl$3.applyEditorValue() line: 297\t\n\nI have 3 windows open, but only a single task list which is opened as a tear-off view.  The NPE is arising as  TaskListView.getFromActivePerspective() is returning null -- I guess tear-off views don\u0027t count as an active perspective.\n\nIt seemed strange that TaskListView$TaskListCellModifier.modify() doesn\u0027t provide the TaskDeactivateAction the actual task, since it has it (and similarly for the TaskActivateAction).  But TaskDeactivateTask.run(ITask) still uses TaskListView.getFromActivePerspective():\n\n  public void run(ITask task) {\n    try {\n      if (task !\u003d null) {\t\t\t      \n        MylarTaskListPlugin.getTaskListManager().deactivateTask(task);\n        TaskListView.getFromActivePerspective().refreshAndFocus();\n        TaskUiUtil.closeEditorInActivePage(task);\n      }\n    } catch (Exception e) {\n      MylarStatusHandler.log(e, \" Closing task editor on task deactivation failed\");\n    }\n  }\n\nAssuming the task list model is correctly wired up with listeners, that middle call to refreshAndFocus() shouldn\u0027t be necessary (and is questionable anyways?).  Commenting it out prevents the NPEs.",
    "With two workbench windows open and one tasklist open, the following happened when I disabled an active task:\n\n!ENTRY org.eclipse.mylar.core 4 0 2006-05-29 13:20:28.578\n!MESSAGE Could not auto close editor.\n\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.ui.internal.EditorAreaHelper.getVisibleEditor(EditorAreaHelper.java:157)\n\tat org.eclipse.ui.internal.EditorAreaHelper.setVisibleEditor(EditorAreaHelper.java:261)\n\tat org.eclipse.ui.internal.EditorManager.setVisibleEditor(EditorManager.java:1420)\n\tat org.eclipse.ui.internal.WorkbenchPage.makeActiveEditor(WorkbenchPage.java:1171)\n\tat org.eclipse.ui.internal.WorkbenchPage.updateActivePart(WorkbenchPage.java:1126)\n\tat org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents(WorkbenchPage.java:1306)\n\tat org.eclipse.ui.internal.WorkbenchPage.deferUpdates(WorkbenchPage.java:1295)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditors(WorkbenchPage.java:1269)\n\tat org.eclipse.mylar.internal.ide.MylarEditorManager.closeAllEditors(MylarEditorManager.java:106)\n\tat org.eclipse.mylar.internal.ide.MylarEditorManager.contextDeactivated(MylarEditorManager.java:87)\n\tat org.eclipse.mylar.internal.core.MylarContextManager.deactivateContext(MylarContextManager.java:566)\n\tat org.eclipse.mylar.provisional.tasklist.MylarTaskListPlugin$1.taskDeactivated(MylarTaskListPlugin.java:181)\n\tat org.eclipse.mylar.provisional.tasklist.TaskListManager.deactivateTask(TaskListManager.java:545)\n\tat org.eclipse.mylar.internal.tasklist.ui.actions.TaskDeactivateAction.run(TaskDeactivateAction.java:38)\n\tat org.eclipse.mylar.internal.tasklist.ui.actions.TaskDeactivateAction.run(TaskDeactivateAction.java:48)\n\tat org.eclipse.mylar.internal.tasklist.ui.views.TaskListView$TaskListCellModifier.modify(TaskListView.java:683)\n\tat org.eclipse.jface.viewers.TreeEditorImpl.saveEditorValue(TreeEditorImpl.java:322)\n\tat org.eclipse.jface.viewers.TreeEditorImpl.applyEditorValue(TreeEditorImpl.java:162)\n\tat org.eclipse.jface.viewers.TreeEditorImpl$3.applyEditorValue(TreeEditorImpl.java:297)\n\tat org.eclipse.jface.viewers.CellEditor$1.run(CellEditor.java:305)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:843)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:149)\n\tat org.eclipse.jface.viewers.CellEditor.fireApplyEditorValue(CellEditor.java:303)\n\tat org.eclipse.jface.viewers.CheckboxCellEditor.activate(CheckboxCellEditor.java:84)\n\tat org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor(TreeEditorImpl.java:83)\n\tat org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor(TreeEditorImpl.java:146)\n\tat org.eclipse.jface.viewers.TreeEditorImpl.handleMouseDown(TreeEditorImpl.java:282)\n\tat org.eclipse.jface.viewers.TreeViewer$1.mouseDown(TreeViewer.java:488)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:133)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3348)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2968)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)",
    "Brian, I fixed that as per your suggestion (yes, that stuff is correctly wired up with the task list listeners).\n\nRob: let\u0027s keep a watch over that.",
    "Created an attachment (id\u003d42899)\nmylar/context/zip\n\n",
    "Created an attachment (id\u003d42912)\nScrap reverse lookups\n\nThe integrated changes included using a new method AbstractApplyMylarAction.getPartForAction() to do a reverse lookup in the part -\u003e action lookup table.  This is unnecessary as the action instances stash their corresponding viewPart in a field.  This patch removes the lookup, and protects certain places currently referring to the field.",
    "Created an attachment (id\u003d42913)\nPass known task when activating/deactivating\n\nThis is a patch for comment 13.",
    "Patches applied and manual testing looks good.  Thanks Brian.  Note that it looks like we may have blotched some something with outline update, but I\u0027ll deal with that on bug 143790."
  ],
  "commentCreationDates": [
    "2005-07-04T18:38:15+02:00",
    "2005-07-14T01:58:11+02:00",
    "2005-07-22T19:34:53+02:00",
    "2005-08-15T22:12:17+02:00",
    "2005-08-22T21:31:51+02:00",
    "2005-08-22T21:35:42+02:00",
    "2005-10-13T20:56:00+02:00",
    "2006-03-28T03:29:32+02:00",
    "2006-03-28T03:30:18+02:00",
    "2006-05-12T20:28:39+02:00",
    "2006-05-18T23:52:42+02:00",
    "2006-05-26T04:17:59+02:00",
    "2006-05-26T04:24:44+02:00",
    "2006-05-26T04:58:14+02:00",
    "2006-05-29T22:33:55+02:00",
    "2006-05-29T23:29:09+02:00",
    "2006-05-29T23:41:26+02:00",
    "2006-05-30T03:49:46+02:00",
    "2006-05-30T03:54:22+02:00",
    "2006-05-30T04:18:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.EditorAreaHelper.getVisibleEditor",
          "source": "EditorAreaHelper.java:157"
        },
        {
          "method": "org.eclipse.ui.internal.EditorAreaHelper.setVisibleEditor",
          "source": "EditorAreaHelper.java:261"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.setVisibleEditor",
          "source": "EditorManager.java:1420"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.makeActiveEditor",
          "source": "WorkbenchPage.java:1171"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.updateActivePart",
          "source": "WorkbenchPage.java:1126"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents",
          "source": "WorkbenchPage.java:1306"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.deferUpdates",
          "source": "WorkbenchPage.java:1295"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditors",
          "source": "WorkbenchPage.java:1269"
        },
        {
          "method": "org.eclipse.mylar.internal.ide.MylarEditorManager.closeAllEditors",
          "source": "MylarEditorManager.java:106"
        },
        {
          "method": "org.eclipse.mylar.internal.ide.MylarEditorManager.contextDeactivated",
          "source": "MylarEditorManager.java:87"
        },
        {
          "method": "org.eclipse.mylar.internal.core.MylarContextManager.deactivateContext",
          "source": "MylarContextManager.java:566"
        },
        {
          "method": "org.eclipse.mylar.provisional.tasklist.MylarTaskListPlugin$1.taskDeactivated",
          "source": "MylarTaskListPlugin.java:181"
        },
        {
          "method": "org.eclipse.mylar.provisional.tasklist.TaskListManager.deactivateTask",
          "source": "TaskListManager.java:545"
        },
        {
          "method": "org.eclipse.mylar.internal.tasklist.ui.actions.TaskDeactivateAction.run",
          "source": "TaskDeactivateAction.java:38"
        },
        {
          "method": "org.eclipse.mylar.internal.tasklist.ui.actions.TaskDeactivateAction.run",
          "source": "TaskDeactivateAction.java:48"
        },
        {
          "method": "org.eclipse.mylar.internal.tasklist.ui.views.TaskListView$TaskListCellModifier.modify",
          "source": "TaskListView.java:683"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeEditorImpl.saveEditorValue",
          "source": "TreeEditorImpl.java:322"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeEditorImpl.applyEditorValue",
          "source": "TreeEditorImpl.java:162"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeEditorImpl$3.applyEditorValue",
          "source": "TreeEditorImpl.java:297"
        },
        {
          "method": "org.eclipse.jface.viewers.CellEditor$1.run",
          "source": "CellEditor.java:305"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:843"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:44"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:149"
        },
        {
          "method": "org.eclipse.jface.viewers.CellEditor.fireApplyEditorValue",
          "source": "CellEditor.java:303"
        },
        {
          "method": "org.eclipse.jface.viewers.CheckboxCellEditor.activate",
          "source": "CheckboxCellEditor.java:84"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor",
          "source": "TreeEditorImpl.java:83"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor",
          "source": "TreeEditorImpl.java:146"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeEditorImpl.handleMouseDown",
          "source": "TreeEditorImpl.java:282"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer$1.mouseDown",
          "source": "TreeViewer.java:488"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:133"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:928"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3348"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2968"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "102663",
      "date": "2006-05-29T22:33:55+02:00",
      "product": "Mylyn",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "102663",
  "bugId": "102663",
  "date": "2005-07-04T18:38:15+02:00",
  "product": "Mylyn",
  "component": "UI",
  "severity": "enhancement"
}