{
  "comments": [
    "These actions should be easily accessible through the keyboard:\n\n- go to next unread task (n)\n- go to previous unread task (p)\n- mark as read (d)\n- mark as unread (u)\n\nActions already supported:\n\n- goto next task (Up)\n- goto previous task (Down)\n- open editor (Enter)",
    "It would be best to map these actions to keys without any modifiers similar to email clients.This conflicts with the current behavior of the task list which switches into find mode when a key is pressed. I have always found that feature hard to discover and would suggest to require a key combination (e.g. Ctrl+F) or single key to be pressed to activate the find box.",
    "It would make sense to have single shortcut for toggling mark/unmark status, though I am not sure about \"no modifier\" shortcuts. Shortcuts like Ctrl-. and Ctrl-, are widely used in Eclipse to go to the previous/next markers and it may make sense to reuse them. Though \"previous unread task\" action is somehow confusing.",
    "I\u0027m also concerned with no modifier actions, although I agree that they \"type to find\" functionality is hard to discover (but Ctrl+F is actually harder to discover, and currently has the desired effect).\n\nWhat if we had Alt+up/down go to next unread task, and then Alt+R, Alt+U toggle read/unread?  ",
    "Can those be a commands with proper keyboard binding, so they could be remapped.",
    "Yes, these should be remappable and could default to the mappings suggested in comments 2 or 3. Maybe we could allow the user to map the actions to single keys which would disable automatic search in that case.",
    "Created an attachment (id\u003d80625)\nfirst iteration\n\nPatch add 3 key bindings:\n\n - go to next unread (F6)\n - mark as read (F7)\n - show tooltip (F2)\n\nThe tooltip is updated as the task list is browsed.",
    "Created an attachment (id\u003d80626)\nmylyn/context/zip\n\n",
    "Rob, Mik, are you planning to review this?",
    "Had a quick look:\n* F2 was rename (for local tasks) and seems like a standard mapping (excel)\n* F7 works great for marking read\n* F2 is resultin in the following:\n\njava.lang.IllegalArgumentException: Argument cannot be null\n\tat org.eclipse.swt.SWT.error(SWT.java:3675)\n\tat org.eclipse.swt.SWT.error(SWT.java:3609)\n\tat org.eclipse.swt.SWT.error(SWT.java:3580)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:432)\n\tat org.eclipse.swt.widgets.Tree.setSelection(Tree.java:4521)\n\tat org.eclipse.mylyn.internal.tasks.ui.actions.GoToNextUnreadTaskAction.run(GoToNextUnreadTaskAction.java:55)\n\tat org.eclipse.mylyn.internal.tasks.ui.views.TaskListView$11.execute(TaskListView.java:921)",
    "Thanks Rob. I\u0027ll attach a fixed version of the patch and change the mappings. The Java editor uses F2 for tooltips but that won\u0027t work for the task list due to the clash with the renaming binding.\n\nIt also want to add more bindings:\n\n - F3: open task in background (do not take away focus from task list)\n - F4: show tooltip\n - F6: go to next unread\n - Shift+F6: go to previous unread\n - F7: mark as read\n - F8: mark as read and go to next unread\n - Shift+F8: mark as read and go to previous unread\n ",
    "(In reply to comment #10)\n\u003e Thanks Rob. I\u0027ll attach a fixed version of the patch and change the mappings.\n\u003e The Java editor uses F2 for tooltips but that won\u0027t work for the task list due\n\u003e to the clash with the renaming binding.\n\nCan we make renaming binding configurable? I would also prefer F2 for tooltips and would remap renaming to Ctrl-Shift-R (this alias works in Package Explorer).\n\n\u003e - F3: open task in background (do not take away focus from task list)\n\nI think F3 should ope editor similarly to other views. But Shift-F3 is a good candidate for \"open in background\"\n\n\u003e - F4: show tooltip\n\u003e - F6: go to next unread\n\u003e - Shift+F6: go to previous unread\n\u003e - F7: mark as read\n\u003e - F8: mark as read and go to next unread\n\u003e - Shift+F8: mark as read and go to previous unread\n\nI am tempted to suggest Ctrl-1 quickfix for mark read/unread/completed/rename :-)",
    "F2 is a standard keybinding for rename in Eclipse views, so I think that it needs to stay.  \n\nCtrl+Shift+R is a Java/IDE-specific keybinding, and the Task List should be agnostic to IDE-specific conventions (e.g. in Navigaor F2 works, but Ctrl+Shift+R does not).\n\nI also want to make sure that we\u0027re careful in not taking away from other common global keybindings, and that we only use F-keybindigns for common actions, or those that are already taken by the OS.\n* F3: should be Open as Eugene points out.  Is there any example of Open in Backgroun in Eclipse?\n* F7: seem like great candidates for toggling mark read/unread.  Is there anything global they might conflict with?\n* F6, Shift F6: I\u0027m not sure this is worth adding if we make all incomings sort to the top.\n\nSteffen: could you please post the full set of proposed shortcuts on the following wiki page?  I want us to get a good sense of them as a whole: http://wiki.eclipse.org/Mylyn_UI_Nits \n\n\u003e I am tempted to suggest Ctrl-1 quickfix for mark read/unread/completed/rename :-)\n\nI think that this kind of UI is a very interesting notion to consider.  Multiple non-standard shortcuts are an advanced user thing only.  We can add them if they don\u0027t take away, but we should be careful in adding them if they prevent us, or other users, of figuring out ways to present the functionality in a more explicit and discoverable way.  Ctrl+1 is a great UI because the user knows that it\u0027s going to bring up suggestions of what they should do.  The Problems view already supports Ctr+1, and other than the fact that it brings up a dialog, and not a chance to select an action or a fix, it is a very similar flow to how it works in the editor.  So we could consider whether there are Ctrl+1 things that should be done.  However, UI conventions state that every common operation that we want the user to be able to perform on the task should be available in the context menu.  So currently the only thing I can imagine Ctrl+1 doing is bringing up one of our fancy tooltips and having that tooltip contain some actions somewhere within it (they key ones being mark read, mark unread, open, and mark complete).  I\u0027m not yet saying that this would be a good idea and it would be somewhat non-standard, but it would support the following common workflow:\n\n  see an incoming\n     invoke fancy tooltip to see what changed\n         decide whether to open editor\n            yes -\u003e hit Open action or shortcut\n            no -\u003e hit Mark Read action or shortcut\n            \nI\u0027m still a bit torn about how important supporting this workflow via tooltips is if we have \u003c200-ms task editor opening that can be configured to work on single-click, because any way that we provide of showing the tooltip is going to be slower than point and click (or select and hit enter).",
    "\u003e I\u0027m still a bit torn about how important supporting this workflow via tooltips\n\u003e is if we have \u003c200-ms task editor opening that can be configured to work on\n\u003e single-click, because any way that we provide of showing the tooltip is going to\n\u003e be slower than point and click (or select and hit enter).\n\nI doubt that it is possible to provide a concise enough view in the task editor to make viewing of incoming changes feasible on small displays. Even for large displays this will become difficult when long comments are posted. Fancy tooltips are potentially a good candidate for the sandbox to experiment with until we have come to a consensus about the layout. I have a partially finished patch for realignment of the incoming changes in the current tooltip that I have been using for a while but I am not convinced anymore that it is indeed better.",
    "Also, there is nothing inherently wrong with the fancy tooltips, as long as they don\u0027t cause any visual clutter, cumbersome interaction, or too much duplication with Task Editor functionality.",
    " (In reply to comment #12)\n\u003e F2 is a standard keybinding for rename in Eclipse views, so I think that it\n\u003e needs to stay.\n\nI am not suggesting to remove it. I am suggesting to make it NOT hardcoded. It should came from Eclipse keyboard bindings.\n\n\u003e * F3: should be Open as Eugene points out.  Is there any example of Open in\n\u003e Backgroun in Eclipse?\n\nNot what I know, but in Firefox and other web browser you can configure to open links in a separate tab without changing focus.\n\n\u003e * F7: seem like great candidates for toggling mark read/unread.  Is there\n\u003e anything global they might conflict with?\n\u003e * F6, Shift F6: I\u0027m not sure this is worth adding if we make all incomings sort\n\u003e to the top.\n\nF6 - F8 are used by debugger\n\n\u003e currently the only thing I can imagine Ctrl+1 doing is\n\u003e bringing up one of our fancy tooltips \n\nI was thinking of selection list similar to what is show in the editors would be better. Though it could be interesting to see if such selection list could be part of the tooltip.\n\n\u003e I\u0027m still a bit torn about how important supporting this workflow via tooltips\n\u003e is if we have \u003c200-ms task editor opening that can be configured to work on\n\u003e single-click, because any way that we provide of showing the tooltip is going to\n\u003e be slower than point and click (or select and hit enter).\n\nPersonally I would never use single click for open action (because of selection). It would help more if there will be a shortcut in the editor to go to the next unread task, that would reuse current editor. But the current problem with editors is not how fast they are opened, but the amount of scrolling you need. You can\u0027t say if there only attributes been changed or there is a new comment or someone just added herself to the cc list.\n\nHere is an idea. Highlight changes in the Task Editor outline view (can also provide popup similar to Quick Context view) and show details for changes in the decoration.\nWe can also apply (surprise, surprise) task context filter to the Outline view and that will make navigation really easy. Then outline view can be linked with the Task list to show info for selected element.",
    "Created an attachment (id\u003d81690)\nupdated patch\n\nMoved the commands to a separate class to avoid cluttering TaskListView. I have implemented the keybings except for these two:\n\n - open task in background (will require additional work)\n - mark as read and goto previous unread (is probably not necessary)\n\nRob, please review and merge.",
    "Created an attachment (id\u003d81691)\nmylyn/context/zip\n\n",
    "I have added the keybindings here: http://wiki.eclipse.org/Mylyn_UI_Nits#Keybindings\n\nRob, please note that the patch has a c\u0026p error in the value of TaskListViewCommands.MARK_TASK_UNREAD_COMMAND_ID (it should be \"...unread\" and not \"...read\").",
    "Created an attachment (id\u003d81819)\nupdated patch against head\n\n",
    "Nice work! Patch applied. Position of tooltip issue to be resolved on bug#189313.",
    "Few things noticed after playing with this. It is really odd that tooltip shown on top of the current selection (I think it should appear right below). \nAlso it would be really handy to show supported keyboard shortcuts at the bootom of tooltip (similar how they show on tooltip in the Java editor)",
    "There is other weird stuff. Click F4 (\"Show Tooltip\") in the task list and then scroll trough the list using up/down keys. Tooltip is repositioned to some completely weird locations.\n\nPS: quality patches, eh?",
    "Steffen: I just looked and still need to do more UI review on this and improve.  For example, the Properties action should show up last in the popup on queries, but currently doesn\u0027t.\n\nEugene: please refrain from using sarcasm if you want anyone to others to act on your comments.  It\u0027s confusing to say the least.",
    "Sorry. Couldn\u0027t resist.",
    "BTW, popup menu in the task list look really weird now. I count 5 group separators (when open it on Query node) and each of those groups have just one menu item. \n\nFor the popup menu on task, it may make sense to move \"Copy / Remove / Delete\" group right below \"Open / Browser / Activate\" group, so it will look alike with the popup menu in the package explorer. Also, \"Operations / Clone Task...\" may be better in New submenu).",
    "Thanks for the feedback. I agree with Eugene\u0027s suggestions on reordering. Additionally the \"Synchronize\" action could be moved into the Open/Activate section which would get rid of another separator. \n\nThe Navigate menu could be removed entirley and the actions could be contributed to the \"Navigate/Go To\" menu in the global menu instead.\n",
    "I kinda like sync action at the bottom... but we need \"make as read and move to next unread\" action available from the popup menu",
    "Could you specify why it has to be available from the popup menu? Is there a UI guideline that forces us to have it there and not in the global menu?",
    "I don\u0027t see why it can\u0027t be on the global menu, though I think it would be useful to have it next to the commonly known \"mark read\" action. I don\u0027t remember the shortcut and have to go into the key bindings to find out what it is and it is very unlikely that most of the users will know that this shortcut even exist (for some reason Ctrl-3 don\u0027t show keyboard shortcuts).",
    "I have moved the Navigate menu up and renamed it to \"Go To\". I have also added the \"Previous Unread Task\" action to the menu.\n\nMik, anything left to do here?",
    "Did I already suggested to move items from \"navigate\" menu into the \"operations\" sub-menu?",
    "*** Bug 178721 has been marked as a duplicate of this bug. ***",
    "The UI guideline on this is:\n\t6.11  Fill the context menu with selection oriented commands.\n\nIn general I think that this is a good guideline.  In order to avoid bloating the context menu I want us to adhere to it.  When we do the next iteration of design on the context menu we can consider whether there are exception.  So for now please consider adding this to the standard (and less discoverable) location of Navigate -\u003e Go To.  Try to use an actionSetPartAssociation to make sure that the actions are only active and visible when the Task List is.\n\n   \u003cextension\n         point\u003d\"org.eclipse.ui.actionSetPartAssociations\"\u003e\n      \u003cactionSetPartAssociation\n            targetID\u003d\"org.eclipse.mylyn.java.actionSet\"\u003e\n         \u003cpart\n               id\u003d\"org.eclipse.jdt.ui.CompilationUnitEditor\"\u003e\n         \u003c/part\u003e\n         \u003cpart\n               id\u003d\"org.eclipse.jdt.ui.ClassFileEditor\"\u003e\n         \u003c/part\u003e\n      \u003c/actionSetPartAssociation\u003e\n   \u003c/extension\u003e",
    "Created an attachment (id\u003d82407)\ncurrent menu\n\n(In reply to comment #33)\n\u003e So for now please consider adding this to the standard (and less discoverable)\n\u003e location of Navigate -\u003e Go To.\n\nMik, there is \"go to\" submenu in the task list popup menu. See attached screenshot that shows that popup menu has too many groups. Popup menu for query is even worse.",
    " (In reply to comment #33)\n\u003e So for\n\u003e now please consider adding this to the standard (and less discoverable) location\n\u003e of Navigate -\u003e Go To.  Try to use an actionSetPartAssociation to make sure that\n\u003e the actions are only active and visible when the Task List is.\n\nI\u0027ll try moving the actions to the global menu using an actionSetPartAssociation in the next few days.",
    " (In reply to comment #35)\n\u003e I\u0027ll try moving the actions to the global menu using an actionSetPartAssociation\n\u003e in the next few days.\n\nYup, I was referring to this top level menu, not a popup menu.",
    "Moved actions from task list context menu to global menu. The default key bindings are discussed on bug 210158."
  ],
  "commentCreationDates": [
    "2007-10-10T04:34:52+02:00",
    "2007-10-10T04:36:55+02:00",
    "2007-10-10T05:57:54+02:00",
    "2007-10-11T02:45:35+02:00",
    "2007-10-11T05:53:41+02:00",
    "2007-10-11T07:25:33+02:00",
    "2007-10-18T06:40:45+02:00",
    "2007-10-18T06:40:47+02:00",
    "2007-10-25T00:35:45+02:00",
    "2007-10-25T23:32:44+02:00",
    "2007-10-25T23:47:38+02:00",
    "2007-10-25T23:56:59+02:00",
    "2007-10-26T04:26:04+02:00",
    "2007-10-26T04:40:43+02:00",
    "2007-10-26T05:15:22+02:00",
    "2007-10-26T05:53:17+02:00",
    "2007-10-31T07:25:08+01:00",
    "2007-10-31T07:25:16+01:00",
    "2007-10-31T07:35:07+01:00",
    "2007-11-01T04:14:00+01:00",
    "2007-11-01T20:12:50+01:00",
    "2007-11-02T23:51:58+01:00",
    "2007-11-02T23:56:42+01:00",
    "2007-11-03T01:26:11+01:00",
    "2007-11-03T01:38:18+01:00",
    "2007-11-03T01:52:15+01:00",
    "2007-11-06T17:51:12+01:00",
    "2007-11-06T19:53:22+01:00",
    "2007-11-06T21:29:54+01:00",
    "2007-11-06T21:46:38+01:00",
    "2007-11-06T22:19:02+01:00",
    "2007-11-06T22:44:19+01:00",
    "2007-11-07T02:17:04+01:00",
    "2007-11-08T01:48:18+01:00",
    "2007-11-08T02:00:01+01:00",
    "2007-11-08T02:16:51+01:00",
    "2007-11-09T00:06:18+01:00",
    "2007-12-01T08:32:17+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument cannot be null",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3675"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3609"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3580"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:432"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.setSelection",
          "source": "Tree.java:4521"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.actions.GoToNextUnreadTaskAction.run",
          "source": "GoToNextUnreadTaskAction.java:55"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.views.TaskListView$11.execute",
          "source": "TaskListView.java:921"
        }
      ],
      "number": 0,
      "commentIndex": 9,
      "bugId": "205886",
      "date": "2007-10-25T23:32:44+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    }
  ],
  "groupId": "205886",
  "bugId": "205886",
  "date": "2007-10-10T04:34:52+02:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "enhancement"
}