{
  "comments": [
    "Steffen mentioned the need for a category that aggregates all incoming. This would simplify reviewing new incoming (ideally sorted by modification date).\nWe may want to contribute this to all tasklist modes.",
    "-1\n\nI don\u0027t think category is really great idea. I think \"incoming only\" filter would work better.",
    "Steffen, perhaps you could post your thoughts here regarding adding filter completed to the tasklist toolbar since these two seem like similar use case.",
    "Yes, that would be nice. Like a filter on the task list. \n\nOne reason why I still can\u0027t completely rely on Mylar to track incoming changes is that completed tasks automatically disappear. These should be displayed as long as they have incoming changes even when filtering of completed tasks is on (I can\u0027t find the corresponding bug).",
    "Completed tasks are displayed if they have incoming changes, and I haven\u0027t seen any bugs with that.  There is the scenario where you have a query for only open tasks, and so once resolved those will disappear from your query.  But because we have \"guaranteed visibility\" for tasks with incoming, they will end up showing in the archive category.  \n\nWhile I think we could have an \"incoming\" presentation mode, I think that having a separate category would be a slippery slope so I\u0027m changing the description to focus on the problem.",
    "*** Bug 177664 has been marked as a duplicate of this bug. ***",
    "In my task list completed tasks are filtered regardless of their change status. When I toggle the filter I can see all the tasks returned by the query (including completed ones with an incoming icon). Is there a setting for that or has that been fixed recently in CVS head (I am still running the EclipseCon dev build and 3.3M5 on my notebook)?",
    "I haven\u0027t seen this either (at least on windows). Sounds like we need a new bug report. ",
    "Steffen: they\u0027re only unfiltered this way in Focus on Workweek mode, which forces things you need to see to become visible.  Perhaps you\u0027re seeing this in the unfocused mode?",
    "Thanks for the hint Mik, that fixed it. Now I need a way to mark tasks as read without having to create task objects for all query hits (bug 159221) and not have all hits marked as having incoming changes when creating a query (bug 177591) :).",
    "*** Bug 195744 has been marked as a duplicate of this bug. ***",
    "Rob: I think that we should at least experiment with this for 2.1",
    "Some more suggestions to improve the incoming presentation:\n\n * Order incoming changes chronologically\n \n * Indicate which bugs have had the most activity since last read\n \n * Allow quick scrolling through tasks: Possibly display the tooltip next to the task with a readable presentation of all changes. This would be very similar to email notifications which usually provide a short description of the task and all changed properties. Also a keyboard shortcut for marking a task as read should be added. This would allow quick scanning of changed tasks similar to an email reader without having to open an editor for each changed task (which is slow compared to browsing the task list). \n\nIf all that is implemented I will consider to stop using Bugzilla notifications :).\n",
    "(In reply to comment #12)\n\u003e * Allow quick scrolling through tasks: Possibly display the tooltip next to the\n\u003e task with a readable presentation of all changes.\n\nDon\u0027t we already have it? Well, right now it only show last comment, but it does show all the changed attributes. Though we still need to fix that for the new tasks and show submitter, description and few other common attributes, like component...",
    "On Linux the tooltip is only displayed when the mouse hovers over the task list item. I would like to browse through the changed tasks by keyboard. ",
    "(In reply to comment #14)\n\u003e On Linux the tooltip is only displayed when the mouse hovers over the task list\n\u003e item. I would like to browse through the changed tasks by keyboard.\n\nGood point. I\u0027ve been missing something like F2 (similar to one in Java editor).",
    "+1 for all suggestions comment#12 and below.",
    "*** Bug 198491 has been marked as a duplicate of this bug. ***",
    "I saw some commits for this feature, but when trying to switch to this presentation I get this exception:\n\njava.lang.NullPointerException\nat org.eclipse.mylyn.internal.sandbox.ui.IncomingTaskListContentProvider.getElements(IncomingTaskListContentProvider.java:38)\nat org.eclipse.jface.viewers.StructuredViewer.getRawChildren(StructuredViewer.java:937)\nat org.eclipse.jface.viewers.ColumnViewer.getRawChildren(ColumnViewer.java:660)\nat org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:1295)\nat org.eclipse.jface.viewers.TreeViewer.getRawChildren(TreeViewer.java:366)\nat org.eclipse.jface.viewers.AbstractTreeViewer.getFilteredChildren(AbstractTreeViewer.java:615)\nat org.eclipse.jface.viewers.AbstractTreeViewer.getSortedChildren(AbstractTreeViewer.java:581)\nat org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:2497)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1826)\nat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:692)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1801)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1757)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1743)\nat org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1433)\nat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1368)\nat org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:378)\nat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1330)\nat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1431)\nat org.eclipse.jface.viewers.ColumnViewer.refresh(ColumnViewer.java:503)\nat org.eclipse.ui.dialogs.FilteredTree$NotifyingTreeViewer.refresh(FilteredTree.java:818)\nat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1390)\nat org.eclipse.ui.dialogs.FilteredTree$NotifyingTreeViewer.refresh(FilteredTree.java:808)\nat org.eclipse.jface.viewers.ContentViewer.setContentProvider(ContentViewer.java:229)\nat org.eclipse.jface.viewers.StructuredViewer.setContentProvider(StructuredViewer.java:1583)\nat org.eclipse.jface.viewers.AbstractTreeViewer.setContentProvider(AbstractTreeViewer.java:2241)\nat org.eclipse.jface.viewers.TreeViewer.setContentProvider(TreeViewer.java:916)\nat org.eclipse.ui.dialogs.FilteredTree$NotifyingTreeViewer.setContentProvider(FilteredTree.java:854)\nat org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.applyPresentation(TaskListView.java:894)\nat org.eclipse.mylyn.internal.tasks.ui.actions.PresentationDropDownSelectionAction$PresentationSelectionAction.run(PresentationDropDownSelectionAction.java:115)\nat org.eclipse.jface.action.Action.runWithEvent(Action.java:498)\nat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:545)\nat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)\nat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1144)\n",
    "BTW, what was the intention behind the following code?\n\n\t\t\tif (task.getSynchronizationState().equals(RepositoryTaskSyncState.INCOMING)\n\t\t\t\t\t\u0026\u0026 task.getOwner().contains(\"@\")) {\n\t\t\t\tpeople.add(new Person(task.getOwner()));\n\t\t\t}\n\nthe owner string is always representing a person, regardless if it has @ or not.",
    "Try it out again.",
    "Why does this presentation shows \"persons\" as root containers?\n\nAnyways, it still doesn\u0027t work.\n\njava.lang.NullPointerException\n\tat org.eclipse.mylyn.internal.tasks.ui.views.TaskElementLabelProvider.getImageDescriptor(TaskElementLabelProvider.java:126)\n\tat org.eclipse.mylyn.internal.tasks.ui.views.TaskElementLabelProvider.getImage(TaskElementLabelProvider.java:74)\n\tat org.eclipse.jface.viewers.DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:85)\n\tat org.eclipse.mylyn.internal.tasks.ui.views.TaskTableLabelProvider.getColumnImage(TaskTableLabelProvider.java:68)\n\tat org.eclipse.jface.viewers.TableColumnViewerLabelProvider.update(TableColumnViewerLabelProvider.java:71)\n\tat org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:135)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:911)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:97)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:857)\n...",
    "I\u0027m not seeing this but this trace would indicate a null TaskRepositoryManager.",
    "Rob: I fixed the NPE.  The current per-person organization isn\u0027t working well for me, so we should consider others (e.g. per repository, but that could have too much overlap with recommended working set usage).  Let\u0027s proceed with additional experimentation after 2.1.",
    "Created an attachment (id\u003d78861)\nmylyn/context/zip\n\n",
    "Out of curiosity, what is the use case for grouping incomings by owner?\n+1 for per-repository grouping, or better repo + project grouping.\n\nbtw, IF we had grouping as a first class feature for the task list (like my first implementation before Mik insisted on using presentations) this incoming presentation could have been simply flat and user could choose the grouping that works the best.",
    "UI wise this is similar to what I would suggest for replacing the presentation of changes in the task list tooltip:\n\nhttp://bp0.blogger.com/_2017w9FY4Do/RvLF35HR3qI/AAAAAAAAALk/8ihv6Hx0sK8/s1600-h/pde-pluginspy.png",
    "(In reply to comment #26)\n\u003e UI wise this is similar to what I would suggest for replacing the presentation\n\u003e of changes in the task list tooltip:\n\u003e http://bp0.blogger.com/_2017w9FY4Do/RvLF35HR3qI/AAAAAAAAALk/8ihv6Hx0sK8/s1600-h/pde-pluginspy.png\n\nSteffen, can you please elaborate how this is related to the presentation?",
    "I meant the link as a follow-up to comments 12-14. I\u0027ll open a new bug report to discuss the UI for displaying incoming changes.",
    "(In reply to comment #28)\n\u003e I\u0027ll open a new bug report to discuss the UI for displaying incoming changes.\n\nbtw, there are few bugs about tooltips already\n",
    "Created an attachment (id\u003d81020)\nissues with current implementation\n\nWhat is the plan in regards to this presentation? It feels really confusing that issues are grouped by assignee, wich in some cases look really weird (see screenshot). \n\nI think it would make more sense to group by repository + project, but we may need api from bug 199818 and some support in repository connectors that have concept of project.\n\nAlso, if this presentation is active and you mark issue as read, read issue is not filtered out from the list.",
    "This isn\u0027t currently a priority for 2.2.  Agreed about the problems, not sure I agree with the proposed solutions.  I think that we should resurrect this once we have iterated figured out changes related to bug 206566 and sorting of incomings in the current presentations."
  ],
  "commentCreationDates": [
    "2007-03-13T21:51:01+01:00",
    "2007-03-13T22:32:10+01:00",
    "2007-03-13T23:54:59+01:00",
    "2007-03-14T00:06:29+01:00",
    "2007-03-17T02:47:15+01:00",
    "2007-03-17T02:48:01+01:00",
    "2007-03-17T07:22:44+01:00",
    "2007-03-18T04:34:37+01:00",
    "2007-03-20T17:36:18+01:00",
    "2007-03-20T20:20:35+01:00",
    "2007-07-07T22:39:04+02:00",
    "2007-07-10T06:36:24+02:00",
    "2007-07-13T04:11:15+02:00",
    "2007-07-13T05:12:03+02:00",
    "2007-07-13T05:30:12+02:00",
    "2007-07-13T05:44:58+02:00",
    "2007-07-13T10:01:17+02:00",
    "2007-08-01T16:26:58+02:00",
    "2007-09-11T05:23:09+02:00",
    "2007-09-11T05:28:27+02:00",
    "2007-09-11T06:08:15+02:00",
    "2007-09-11T06:26:29+02:00",
    "2007-09-12T22:11:38+02:00",
    "2007-09-20T17:34:56+02:00",
    "2007-09-20T17:35:13+02:00",
    "2007-09-20T18:02:36+02:00",
    "2007-09-21T05:33:33+02:00",
    "2007-09-21T08:57:25+02:00",
    "2007-09-21T17:28:17+02:00",
    "2007-09-21T20:24:22+02:00",
    "2007-10-24T04:40:09+02:00",
    "2007-10-26T06:12:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylyn.internal.sandbox.ui.IncomingTaskListContentProvider.getElements",
          "source": "IncomingTaskListContentProvider.java:38"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.getRawChildren",
          "source": "StructuredViewer.java:937"
        },
        {
          "method": "org.eclipse.jface.viewers.ColumnViewer.getRawChildren",
          "source": "ColumnViewer.java:660"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren",
          "source": "AbstractTreeViewer.java:1295"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.getRawChildren",
          "source": "TreeViewer.java:366"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getFilteredChildren",
          "source": "AbstractTreeViewer.java:615"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getSortedChildren",
          "source": "AbstractTreeViewer.java:581"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren",
          "source": "AbstractTreeViewer.java:2497"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
          "source": "AbstractTreeViewer.java:1826"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
          "source": "TreeViewer.java:692"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1801"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1757"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1743"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$7.run",
          "source": "StructuredViewer.java:1433"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1368"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.preservingSelection",
          "source": "TreeViewer.java:378"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1330"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1431"
        },
        {
          "method": "org.eclipse.jface.viewers.ColumnViewer.refresh",
          "source": "ColumnViewer.java:503"
        },
        {
          "method": "org.eclipse.ui.dialogs.FilteredTree$NotifyingTreeViewer.refresh",
          "source": "FilteredTree.java:818"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1390"
        },
        {
          "method": "org.eclipse.ui.dialogs.FilteredTree$NotifyingTreeViewer.refresh",
          "source": "FilteredTree.java:808"
        },
        {
          "method": "org.eclipse.jface.viewers.ContentViewer.setContentProvider",
          "source": "ContentViewer.java:229"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.setContentProvider",
          "source": "StructuredViewer.java:1583"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.setContentProvider",
          "source": "AbstractTreeViewer.java:2241"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.setContentProvider",
          "source": "TreeViewer.java:916"
        },
        {
          "method": "org.eclipse.ui.dialogs.FilteredTree$NotifyingTreeViewer.setContentProvider",
          "source": "FilteredTree.java:854"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.applyPresentation",
          "source": "TaskListView.java:894"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.actions.PresentationDropDownSelectionAction$PresentationSelectionAction.run",
          "source": "PresentationDropDownSelectionAction.java:115"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:498"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:545"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:490"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:402"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3682"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3293"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "number": 0,
      "commentIndex": 18,
      "bugId": "177208",
      "date": "2007-09-11T05:23:09+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.views.TaskElementLabelProvider.getImageDescriptor",
          "source": "TaskElementLabelProvider.java:126"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.views.TaskElementLabelProvider.getImage",
          "source": "TaskElementLabelProvider.java:74"
        },
        {
          "method": "org.eclipse.jface.viewers.DecoratingLabelProvider.getImage",
          "source": "DecoratingLabelProvider.java:85"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.views.TaskTableLabelProvider.getColumnImage",
          "source": "TaskTableLabelProvider.java:68"
        },
        {
          "method": "org.eclipse.jface.viewers.TableColumnViewerLabelProvider.update",
          "source": "TableColumnViewerLabelProvider.java:71"
        },
        {
          "method": "org.eclipse.jface.viewers.ViewerColumn.refresh",
          "source": "ViewerColumn.java:135"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem",
          "source": "AbstractTreeViewer.java:911"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run",
          "source": "AbstractTreeViewer.java:97"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        }
      ],
      "number": 1,
      "commentIndex": 21,
      "bugId": "177208",
      "date": "2007-09-11T06:26:29+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    }
  ],
  "groupId": "177208",
  "bugId": "177208",
  "date": "2007-03-13T21:51:01+01:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "enhancement"
}