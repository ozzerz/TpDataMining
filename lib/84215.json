{
  "comments": [
    "I\u0027m using eclipse M4, and this sometimes pops by..\n\nI also use eclipseme, but I\u0027m not aware that it changes any sourcecode.. After \ncleaning my project / rebuilding / restarting eclipse, the problem still \nexists..\n\nI also removes the cldc builder (eclipseme)\n\nWhen I open the file where it happens, I get some popups telling me \"AST \ncreation failed\"",
    "Created an attachment (id\u003d17622)\nlogfile with stacktraces\n",
    "Could you please provide steps to reproduce and then reopen ?\n\nThis problem is likely internal to the file where it is reported. Attaching the\nsource of the offending file should be sufficient to get started. \nWhen building, there should be a fake problem in problem view recording the\ncompiler failure associated to line 1. This would point at the offending file.",
    "I\u0027ve created a new project, and removed my sjpp encoding trick.\nThe error happens when I set the jdk compliance to any non-5.0 and  uncheck \nthe \"Inline finally blocks\" (I do this to reduce class file size, as I\u0027m \nworking on midlets..\n\nI\u0027ve trimmed down the source, and it\u0027s very weird... When I come to a certain \nsize, when I remove some a method or field, the error goes away. If I put it \nback, the error is back.. ",
    "Created an attachment (id\u003d17624)\ntest project\n\nuse any non-5.0 jdk, and uncheck the inline finally checkbox",
    "The test project I\u0027ve created also gives the error on another M4 installation I \nhave (other workstation) \nAlso, I\u0027ve tried it with the latest integration build. eclipse-SDK-I20050202-\n0800-win32. Clean install, no cutomizations.\n",
    "-SDK-I20050202-0800-win32 .log snippet:\n\n!SESSION 2005-02-02 15:00:05.83 ------------------------------------------------\neclipse.buildId\u003dI20050202-0800\njava.version\u003d1.5.0\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.core.resources 4 2 2005-02-02 15:00:05.99\n!MESSAGE Problems occurred when invoking code from plug-\nin: \"org.eclipse.core.resources\".\n!STACK 0\njava.lang.ArrayIndexOutOfBoundsException\n\tat java.lang.System.arraycopy(Native Method)\n\tat org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.copy\n(UnconditionalFlowInfo.java:197)\n\tat \norg.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordReturn\nFrom(ExceptionHandlingFlowContext.java:182)\n\tat org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode\n(ReturnStatement.java:60)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.analyseCode\n(Block.java:40)\n",
    "Reproduced. Thanks for testcase.\n\n ",
    "Problem comes from non redimensionning defNull /defNonNull for extra inits in\ncertain circumstances. \nAdded AssignmentTest#test034.\n\nFixed\n\nNOTE: reason for the problem sometimes being revealed or not, is due to the fact\nwe have optimized support for 64 first variables. The bug was visible under some\ncircumstances and only if you had more than 64 variables.",
    "*** Bug 84334 has been marked as a duplicate of this bug. ***",
    "*** Bug 84553 has been marked as a duplicate of this bug. ***",
    "*** Bug 85209 has been marked as a duplicate of this bug. ***",
    "Verified in I20050215-0800",
    "*** Bug 85666 has been marked as a duplicate of this bug. ***",
    "\nWorks for me now using the I20050217-1200 integration build."
  ],
  "commentCreationDates": [
    "2005-02-02T11:25:19+01:00",
    "2005-02-02T11:26:00+01:00",
    "2005-02-02T12:03:17+01:00",
    "2005-02-02T13:48:32+01:00",
    "2005-02-02T13:49:18+01:00",
    "2005-02-02T14:00:45+01:00",
    "2005-02-02T14:02:46+01:00",
    "2005-02-02T15:00:56+01:00",
    "2005-02-02T15:57:28+01:00",
    "2005-02-03T15:38:55+01:00",
    "2005-02-07T15:01:18+01:00",
    "2005-02-15T03:18:37+01:00",
    "2005-02-15T18:09:21+01:00",
    "2005-02-17T12:01:14+01:00",
    "2005-02-17T20:13:41+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "elements": [
        {
          "method": "java.lang.System.arraycopy",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.copy",
          "source": "UnconditionalFlowInfo.java:197"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext.recordReturnFrom",
          "source": "ExceptionHandlingFlowContext.java:182"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode",
          "source": "ReturnStatement.java:60"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.analyseCode",
          "source": "Block.java:40"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "84215",
      "date": "2005-02-02T14:02:46+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "critical"
    }
  ],
  "groupId": "84215",
  "bugId": "84215",
  "date": "2005-02-02T11:25:19+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "critical"
}