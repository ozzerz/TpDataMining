{
  "comments": [
    "Description:\nFail to display chart when deploy chart runtime to WebLogic9\nBuild number:2.2.0.v200706221102\n\nSteps to reproduce:\n1. Deploy chart-view-example.war to Weblogic9\n2. Preview index.jsp\n\nExpected result:\nDisplay three charts\n\nActual result:\nCompilation of JSP File \u0027/index.jsp\u0027 failed:\n--------------------------------------------------------------------------------\n \nindex.jsp:23:53: This attribute is not recognized.\n\tmodel\u003d\"\u003c%\u003dsession.getServletContext().getRealPath(\"SamplePie.chart\")%\u003e\"\u003e\n\n                                                           ^-------------^\nindex.jsp:31:53: This attribute is not recognized.\n\tmodel\u003d\"\u003c%\u003dsession.getServletContext().getRealPath(\"SampleBar.chart\")%\u003e\"\n\n                                                           ^-------------^\n\nError log:n/a",
    "*** Bug 200295 has been marked as a duplicate of this bug. ***",
    "Partially fixed the compilation issues.\nWebLogic container doesn\u0027t support the multiple multiple quotation marks, so it fails when compiling sample jsp with javelin compiler. \nNow chart preview tag supports the relative path directly, so the multiple quotation marks in the sample jsp can\u0027t be avoided.\nIn addition, revised chart samples for more usability.\nThe further WebLogic issues, including conflicted XML parser and DocumentFactory, will be fixed in next check in.",
    "My investigation is:\nWebLogic will pre-load a lot of third-party jars, like rhino and jaxp impl, before loading web applications.\nAccording to default classloading order, parent rhino classes will be loaded first. That leads to throwing NoSuchMethod exception since obsolete parent rhino classes are loaded.\nHence we have to set the class loading with prefer-web-inf-classes in weblogic.xml.\nIn this case, ClassCastException (com.sun.org.apache.xalan.internal.xsltc\n.trax.TransformerFactoryImpl) will be thrown. Because TransformerFactoryImpl is not in web-inf classes, it loads jdk\u0027s implementation class. On the contrast, TransformerFactory is loaded from web-inf classes.\n\nThe fix needs adding TransformerFactory implementation classes in web-inf as well as TransformerFactory. That means Xalan jar should be added.",
    "After discussion with Wei, we agree that:\nchart-viewer-sample war package doesn\u0027t use OSGi framework to load classes like what engine does, and Batik (used to generate pdf chart) is dependent on apache Xercers jar, so Xalan is required in the web-inf/lib folder as well as Xercers.",
    "Fixed by adding weblogic config file and xalan jar to avoid classloader issue",
    "Try build 2.3.0.v20071102 and failed.\nSee Exception as:\njava.lang.ClassCastException: org.apache.xerces.jaxp.DocumentBuilderFactoryImpl\n\tat javax.xml.parsers.DocumentBuilderFactory.newInstance(DocumentBuilderFactory.java:98)\n\tat javelin.jsp.JspTagLibraryFeature.parseTldFromWebXML(JspTagLibraryFeature.java:857)\n\tat javelin.jsp.JspTagLibraryFeature.initFromWebXML(JspTagLibraryFeature.java:841)\n\tat javelin.jsp.JspTagLibraryFeature.init(JspTagLibraryFeature.java:442)\n\tat javelin.jsp.JspTagLibraryFeature.init(JspTagLibraryFeature.java:241)\n\tat javelin.jsp.JspTagLibraryFeature.setCPL(JspTagLibraryFeature.java:42)\n\tat javelin.CPL.getFeature(CPL.java:1580)\n\tat javelin.jsp.JspParser.getTagLibraryFeature(JspParser.java:3260)\n\tat javelin.jsp.JspParser.getTagLibInfo(JspParser.java:2075)\n\tat javelin.jsp.JspParser.jspParse(JspParser.java:411)\n\tat javelin.jsp.JspParser._parse(JspParser.java:330)\n\tat javelin.jsp.JspParser.parse(JspParser.java:323)\n\tat javelin.jsp.JspAnalyzer.parseFile(JspAnalyzer.java:113)\n\tat javelin.jsp.JspAnalyzer.parse(JspAnalyzer.java:101)\n\tat javelin.ProxySourceFile.parse(ProxySourceFile.java:117)\n\tat javelin.SourceFile.getAst(SourceFile.java:542)\n\tat javelin.SourceFile.getAst(SourceFile.java:516)\n\tat javelin.ProxySourceFile.codeGen(ProxySourceFile.java:215)\n\tat javelin.SourceFile.codeGen(SourceFile.java:310)\n\tat javelin.client.ClientUtilsImpl$CodeGenJob.run(ClientUtilsImpl.java:1105)\n\tat javelin.client.Job.performJob(Job.java:81)\n\tat javelin.client.ThreadPool$WorkerThread.run(ThreadPool.java:215)\n",
    "Seems a long withstanding issues with WebLogic. Please reference to this post: http://forums.bea.com/message.jspa?messageID\u003d600036691\u0026tstart\u003d0. This is claimed to be fixed in WebLogic 10.",
    "setting back to M3, and P5 as it is now blocked by a weblogic issue.",
    "The classloading issue in WebLogic9 can only be resolved by removing Xerces and Xalan in lib folder. For deployment in Tomcat, no change for jars, i.e. only keep Xerces as before.\nSo for WebLogic deployment, if user wants to deploy chart viewer sample or any applications based on it, he must remove the Xerces jar from the lib folder manually.\n\nFixed by removing Xalan jar and adding comments in readme file.",
    "Verify in build 2.3.0.v20071214"
  ],
  "commentCreationDates": [
    "2007-06-22T09:00:24+02:00",
    "2007-08-17T05:47:57+02:00",
    "2007-08-31T08:43:46+02:00",
    "2007-09-03T10:08:47+02:00",
    "2007-09-03T11:36:21+02:00",
    "2007-10-16T12:25:21+02:00",
    "2007-11-05T07:55:10+01:00",
    "2007-11-12T07:40:38+01:00",
    "2007-11-13T07:48:53+01:00",
    "2007-12-13T05:56:09+01:00",
    "2007-12-14T08:48:02+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl",
      "elements": [
        {
          "method": "javax.xml.parsers.DocumentBuilderFactory.newInstance",
          "source": "DocumentBuilderFactory.java:98"
        },
        {
          "method": "javelin.jsp.JspTagLibraryFeature.parseTldFromWebXML",
          "source": "JspTagLibraryFeature.java:857"
        },
        {
          "method": "javelin.jsp.JspTagLibraryFeature.initFromWebXML",
          "source": "JspTagLibraryFeature.java:841"
        },
        {
          "method": "javelin.jsp.JspTagLibraryFeature.init",
          "source": "JspTagLibraryFeature.java:442"
        },
        {
          "method": "javelin.jsp.JspTagLibraryFeature.init",
          "source": "JspTagLibraryFeature.java:241"
        },
        {
          "method": "javelin.jsp.JspTagLibraryFeature.setCPL",
          "source": "JspTagLibraryFeature.java:42"
        },
        {
          "method": "javelin.CPL.getFeature",
          "source": "CPL.java:1580"
        },
        {
          "method": "javelin.jsp.JspParser.getTagLibraryFeature",
          "source": "JspParser.java:3260"
        },
        {
          "method": "javelin.jsp.JspParser.getTagLibInfo",
          "source": "JspParser.java:2075"
        },
        {
          "method": "javelin.jsp.JspParser.jspParse",
          "source": "JspParser.java:411"
        },
        {
          "method": "javelin.jsp.JspParser._parse",
          "source": "JspParser.java:330"
        },
        {
          "method": "javelin.jsp.JspParser.parse",
          "source": "JspParser.java:323"
        },
        {
          "method": "javelin.jsp.JspAnalyzer.parseFile",
          "source": "JspAnalyzer.java:113"
        },
        {
          "method": "javelin.jsp.JspAnalyzer.parse",
          "source": "JspAnalyzer.java:101"
        },
        {
          "method": "javelin.ProxySourceFile.parse",
          "source": "ProxySourceFile.java:117"
        },
        {
          "method": "javelin.SourceFile.getAst",
          "source": "SourceFile.java:542"
        },
        {
          "method": "javelin.SourceFile.getAst",
          "source": "SourceFile.java:516"
        },
        {
          "method": "javelin.ProxySourceFile.codeGen",
          "source": "ProxySourceFile.java:215"
        },
        {
          "method": "javelin.SourceFile.codeGen",
          "source": "SourceFile.java:310"
        },
        {
          "method": "javelin.client.ClientUtilsImpl$CodeGenJob.run",
          "source": "ClientUtilsImpl.java:1105"
        },
        {
          "method": "javelin.client.Job.performJob",
          "source": "Job.java:81"
        },
        {
          "method": "javelin.client.ThreadPool$WorkerThread.run",
          "source": "ThreadPool.java:215"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "193892",
      "date": "2007-11-05T07:55:10+01:00",
      "product": "BIRT",
      "component": "Chart",
      "severity": "major"
    }
  ],
  "groupId": "193892",
  "bugId": "193892",
  "date": "2007-06-22T09:00:24+02:00",
  "product": "BIRT",
  "component": "Chart",
  "severity": "major"
}