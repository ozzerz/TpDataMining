{
  "comments": [
    "Version: 3.2.0\nBuild id: I20060119-0800\n\nGiven:\npublic class Test {\n\tvoid foo() {\n\t\tComparable\u003cInteger\u003e comp;\n\t}\n}\n\nOpening Type Hierachy on Comparable results in:\n\nRoot exception:\njava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize(ParameterizedTypeBinding.java:581)\n\tat org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.\u003cinit\u003e(ParameterizedTypeBinding.java:43)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(LookupEnvironment.java:593)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:950)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromVariantTypeSignature(LookupEnvironment.java:994)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeArgumentsFromSignature(LookupEnvironment.java:800)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:945)\n\tat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:298)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:521)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:500)\n\tat org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept(HierarchyResolver.java:95)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:99)\n\tat org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:43)\n\tat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveUnresolvedType(BinaryTypeBinding.java:138)\n\tat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.enclosingType(BinaryTypeBinding.java:593)\n\tat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.\u003cinit\u003e(BinaryTypeBinding.java:188)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:503)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(LookupEnvironment.java:170)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(LookupEnvironment.java:157)\n\tat org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve(HierarchyResolver.java:607)\n\tat org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildForProject(IndexBasedHierarchyBuilder.java:195)\n\tat org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildFromPotentialSubtypes(IndexBasedHierarchyBuilder.java:302)\n\tat org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build(IndexBasedHierarchyBuilder.java:128)\n\tat org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute(TypeHierarchy.java:300)\n\tat org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1243)\n\tat org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:90)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:720)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:779)\n\tat org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(BinaryType.java:869)\n\tat org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(BinaryType.java:888)\n\tat org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy(BinaryType.java:858)\n\tat org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.createTypeHierarchy(TypeHierarchyLifeCycle.java:118)\n\tat org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefresh(TypeHierarchyLifeCycle.java:157)\n\tat org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run(TypeHierarchyLifeCycle.java:98)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",
    "Hard to reproduce.\nAlso saw similar stack trace when searching for refs in workspace to java.util.List\u003cE\u003e",
    "My stack traces looked like:\n!ENTRY org.eclipse.core.jobs 4 2 2006-01-24 13:36:29.075\n!MESSAGE An internal error occurred during: \"Java Search\".\n!STACK 0\njava.lang.NullPointerException\n        at org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize(ParameterizedTypeBinding.java:581)\n        at org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.\u003cinit\u003e(ParameterizedTypeBinding.java:43)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(LookupEnvironment.java:593)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:950)\n        at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:298)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:521)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(LookupEnvironment.java:170)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType(LookupEnvironment.java:157)\n        at org.eclipse.jdt.internal.core.search.matching.MatchLocator.cacheBinaryType(MatchLocator.java:426)\n        at org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches(ClassFileMatchLocator.java:67)\n        at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1492)\n        at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1014)\n        at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1055)\n        at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1173)\n        at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\n        at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:206)\n        at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:491)\n        at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:532)\n        at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:139)\n        at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:94)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Note that the NPE would be caused by a null type argument when creating a parameterized binary type (from decoding binary signature).",
    "Test case is: have tools.jar (1.5) on the build path, and search references to java.util.List. It finds one in tools.jar within file: \ncom/sun/tools/javac/util/List$3\n\nWhen caching the binary type, it fails decoding portion of the generic signature:\nLjava/lang/Object;Ljava/util/Iterator\u003cTA;\u003e;\ni.e. decoding: Ljava/util/Iterator\u003cTA;\u003e;\n\nIt cannot rebind the type argument TA; properly, as local type doesn\u0027t seem to point to an enclosing type.",
    "Problem only arises in 1.5, when decoding local types reference to enclosing type parameters. Olivier suggested using the enclosingMethod attribute to reach the enclosing type.",
    "The NPE is a regression from past behavior. A bogus length check got added as part of support for DOM AST in error reporting for ProblemReporter#undefinedTypeVariableSignature(...)\nwhich made the null scenario reachable, when it should have aborted from the resolution.\n\nThis explains the introduced NPE, as opposed to silent failure, but still we should be able to rebind properly enclosing type parameter from binary local types.",
    "HierarchyResolver#resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor) should not resolved fields and methods when caching a binary type (line 607).",
    "jerome - pls open a separate issue for the resolver optimization.\n\nThe original issue can be reproduced by search as well, and the scenario should legitimally be supported.",
    "When connecting binaries for: new Z\u003cA,C\u003e()\nit should be able to find enclosing method type parameters... which means it needs to cycle through enclosingMethod/Types, not just types.\n\npublic class Z\u003cA,B\u003e {\n \n void foo() {\n  new Object() {\n   \u003cC\u003e void bar() {\n    new Z\u003cA,C\u003e(){};\n   }\n  };\n }\n}",
    "Another test case:\npublic class Z\u003cA,B\u003e {\n \n void foo() {\n  new Object() {\n   void bar() {\n    new Z\u003cA, B\u003e(){};\n   }\n  };\n }\n}\n\nand:\npublic class Z\u003cA,B\u003e {\n \n void foo() {\n  new Object() {\n   \u003cC\u003e void bar() {\n    new Z\u003cA,C\u003e(){};\n   }\n  };\n }\n}\n\nIn both cases we must be able to connect the type parameters.\nIn the first case, this requires the enclosing type for the anonymous type not being null.\nThe second case requires to go through the enclosing method first.",
    "Kent,\n\nI released a fix to properly get the enclosing type from an anonymous type binding (even if it is a binary type binding). Before we would return null. Now we return the inner most enclosing type.",
    "(In reply to comment #8)\n\u003e jerome - pls open a separate issue for the resolver optimization.\n\u003e \nentered bug 125067\n\n"
  ],
  "commentCreationDates": [
    "2006-01-20T14:44:22+01:00",
    "2006-01-24T12:29:13+01:00",
    "2006-01-24T12:36:46+01:00",
    "2006-01-24T12:39:10+01:00",
    "2006-01-24T14:27:44+01:00",
    "2006-01-24T14:31:28+01:00",
    "2006-01-24T15:13:20+01:00",
    "2006-01-24T15:33:53+01:00",
    "2006-01-24T15:39:57+01:00",
    "2006-01-24T18:20:49+01:00",
    "2006-01-24T18:23:55+01:00",
    "2006-01-24T18:44:39+01:00",
    "2006-01-24T21:20:52+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize",
          "source": "ParameterizedTypeBinding.java:581"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.\u003cinit\u003e",
          "source": "ParameterizedTypeBinding.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType",
          "source": "LookupEnvironment.java:593"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature",
          "source": "LookupEnvironment.java:950"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromVariantTypeSignature",
          "source": "LookupEnvironment.java:994"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeArgumentsFromSignature",
          "source": "LookupEnvironment.java:800"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature",
          "source": "LookupEnvironment.java:945"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom",
          "source": "BinaryTypeBinding.java:298"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:521"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:500"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.accept",
          "source": "HierarchyResolver.java:95"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:99"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve",
          "source": "UnresolvedReferenceBinding.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveUnresolvedType",
          "source": "BinaryTypeBinding.java:138"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.enclosingType",
          "source": "BinaryTypeBinding.java:593"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.\u003cinit\u003e",
          "source": "BinaryTypeBinding.java:188"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:503"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType",
          "source": "LookupEnvironment.java:170"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType",
          "source": "LookupEnvironment.java:157"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.resolve",
          "source": "HierarchyResolver.java:607"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildForProject",
          "source": "IndexBasedHierarchyBuilder.java:195"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.buildFromPotentialSubtypes",
          "source": "IndexBasedHierarchyBuilder.java:302"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder.build",
          "source": "IndexBasedHierarchyBuilder.java:128"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.compute",
          "source": "TypeHierarchy.java:300"
        },
        {
          "method": "org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh",
          "source": "TypeHierarchy.java:1243"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation",
          "source": "CreateTypeHierarchyOperation.java:90"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:720"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:779"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy",
          "source": "BinaryType.java:869"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy",
          "source": "BinaryType.java:888"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BinaryType.newTypeHierarchy",
          "source": "BinaryType.java:858"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.createTypeHierarchy",
          "source": "TypeHierarchyLifeCycle.java:118"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefresh",
          "source": "TypeHierarchyLifeCycle.java:157"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run",
          "source": "TypeHierarchyLifeCycle.java:98"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "124646",
      "date": "2006-01-20T14:44:22+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.initialize",
          "source": "ParameterizedTypeBinding.java:581"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.\u003cinit\u003e",
          "source": "ParameterizedTypeBinding.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType",
          "source": "LookupEnvironment.java:593"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature",
          "source": "LookupEnvironment.java:950"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom",
          "source": "BinaryTypeBinding.java:298"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:521"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType",
          "source": "LookupEnvironment.java:170"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.cacheBinaryType",
          "source": "LookupEnvironment.java:157"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.cacheBinaryType",
          "source": "MatchLocator.java:426"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.ClassFileMatchLocator.locateMatches",
          "source": "ClassFileMatchLocator.java:67"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.process",
          "source": "MatchLocator.java:1492"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1014"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1055"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1173"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:206"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:491"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:532"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run",
          "source": "JavaSearchQuery.java:139"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:94"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "124646",
      "date": "2006-01-24T12:36:46+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "124646",
  "bugId": "124646",
  "date": "2006-01-20T14:44:22+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}