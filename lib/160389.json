{
  "comments": [
    "Currently offline task data is serialized to disk in a single file. This mechanism can easily break with changes to the participating classes and is slow when the cache file is large. Alternate methods need to be considered such as using xml and multiple files.",
    "Regarding removing repository configuration data from offline task data....what if we kept the old Repository configuration data? If both were being cached in the .mylar folder along with all the other data then we\u0027d have this available to us (assuming it didn\u0027t get deleted along with repository deletion). Currently if you try to open a task who\u0027s repository has been deleted nothing happens (created bug#161297).  ",
    "That sounds like a good idea.  So the then the .mylar folder gets two new kinds of files, one for offline data, one for repository config?  Perhaps we should make a folder per-repository so that the structure looks something like this?\n- .mylar/\n    - repositories.xml.zip\n    - repositories-data/\n      - https%3A%2F%2Fbugs.eclipse.org-config.xml.zip\n      - https%3A%2F%2Fbugs.eclipse.org-offline.data \n    ",
    "As a first pass I can export task data as XML (via IMemento) to produce an -offline.data file which holds task data AND repository configuration options (as it is now serialized).  Then once we\u0027ve determined how to externalize configuration data in a generic way (bug#150680) we can pull that data out into its own -config.xml.zip file (which will greatly simplify the task data xml).  Or do we try to do the complete separation all in one shot?",
    "That does sound like a good baby step.  The cost is that if we do two releases that both change formats people lose their offline stuff twice.  So I think this is better to do this in one go.  If it\u0027s too involved to get finished by early tomorrow I suggest you postpone to 0.9.",
    "Okay, I\u0027ll push to 0.9 since (generic) repository configuration persistence may be a bit of a trick. I\u0027ll update as I proceed.",
    "Overhaul of bugzilla http com took precedence, re-scheduling for 1.0.",
    "Is this the issue related to alternative storage format? Perhaps based on Lucene...",
    "Yes, Lucene is being considered... any more thoughts on this Eugene?",
    "Regardless of using Lucene it maybe a good idea to break task data into multiple chunks (i.e. per category/query). With Lucene you can search trough them trough MultiReader and still able to update individual indexes.\n\nAnother question is do we want to keep feature for allowing tasks in the root of the task list or create some placeholder by default (i.e. \"Default\", \"Local\" or \"My Tasks\" category).",
    "Pushing to post 1.0 as this will be too disruptive considering RC1 is in just over a week.",
    "We should discuss what to store in the attributes at some point. I noticed that some of the Trac attributes such as status are currently displayed twice in the editor. These are now flagged as \"hidden\" to not display them in the attributes section but this only takes effect when the task is actually synchronized. \n\nI think these UI specific attributes should not be serialized but retrieved from the factory. This is related to bug 150680.",
    "Yes, one of the major goals of this refactoring will be extraction of the ui related details from the task data such as visibility, operations and their descriptions etc... The attribute factory does seem like the right place for most of this.",
    "Also need to consider revising attribute api to return type  getStringValue, getDateValue, etc",
    " (In reply to comment #13)\n\u003e Also need to consider revising attribute api to return type  getStringValue,\n\u003e getDateValue, etc\nAs per conversation on bug#170568",
    "Please also take a look at http://jackrabbit.apache.org/. It may have more than we need but it might be possible to use a subset of the functionality only.",
    "I agree. It may be overkill but worth looking into. I see that Corona is using it.",
    "Here are the requirements that we outlined on today\u0027s call.\n* Robustness to format change (e.g. can add attributes without breaking)\n* Incremental read/write (e.g. separate files)\n* In-memory cache, lazy access to non-cached data (e.g. 20MB max)\n* Connectors only have to provide at most 2 mappings (repo -\u003e RepositoryTaskData -\u003e repo update)\n* Figure out whether format should encode data types, not just Strings (probably not)\n* External attributes should remain separate (i.e. attachments, could improve lifecycle)",
    "Another storage alternative: http://www.db4o.com/ (used by RssOwl see comments on bug#151997)",
    "Created an attachment (id\u003d64548)\nnaive performance test\n\nHere is a naive performance test comparing performance of db4o 6.1, Lucene 2.1 and Oracle Berkley for Java 3.2.23\n\nIt is adding/updating 1000 simple records and then run query by \"group\" field. Probably there is something wrong with the way I implemented code for db4o, but in my test it is about 10x slover then Lucene. There results are here:\n\nbdb add/update: 0.97 sec\nbdb query: need to implement searching by group field\n\nlucene add/update: 2.63 sec\nlucene query: 0.03 sec\n\ndb4o add/update: 20.72 sec\ndb4o query: 0.125 sec\n\n",
    "Ben, can you please look at my perf test (the db4o part)? Maybe you can suggest for to make it perform better?\n\nAlso, here are some notes about using Lucene \nhttp://blogs.atlassian.com/rebelutionary/downloads/tssjs2007-lucene-generic-data-indexing.pdf",
    "(In reply to comment #20)\n\u003e Ben, can you please look at my perf test (the db4o part)? Maybe you can suggest\n\u003e for to make it perform better?\n\u003e \n\u003e Also, here are some notes about using Lucene \n\u003e http://blogs.atlassian.com/rebelutionary/downloads/tssjs2007-lucene-generic-data-indexing.pdf\n\u003e \n\nThe scores for db4o look indeed weird. Maybe Ismael could comment as well. The first thing I tried was adding an index to the fields in Simple. This improved the add/update speed from 7 seconds to 1 second on my machine. Usually you would add all your object\u0027s ids to the index:\n\nprivate static final class Simple implements Serializable {\n  @Indexed\n  String group;\n\n  @Indexed\n  String foo;\n\n  @Indexed\n  int n;\n\n  public Simple(String group, String foo, int n) {\n    this.group \u003d group;\n    this.foo \u003d foo;\n    this.n \u003d n;\n  }\n}",
    "Btw to be fair, I think you should configure Lucene to flush changes to the disk immediately. If the application crashes, the buffered documents in Lucene will be lost. I think by default, Lucene buffers up to 10 documents before flushing them.",
    "The scores with the attached file for db4o in my machine were:\n\ndb4o: 3.505\ndb4o: 0.092\n\nI changed it to use S.O.D.A queries, indexed the two fields that are used in the queries, set Db4o.configure().flushFileBuffers(false) and changed the query during the add/update to match the lucene one (just a single field) and I get the following:\n\ndb4o: 0.32\ndb4o: 0.045\n\nIf you need any additional information, feel free to ask.",
    " (In reply to comment #23)\n\u003e I changed it to use S.O.D.A queries, indexed the two fields that are used in the\n\u003e queries, set Db4o.configure().flushFileBuffers(false) and changed the query\n\u003e during the add/update to match the lucene one (just a single field) and I get\n\u003e the following:\n\u003e db4o: 0.32\n\u003e db4o: 0.045\n\u003e If you need any additional information, feel free to ask.\n\nCan you please attach your changes? Thanks",
    "Created an attachment (id\u003d65355)\nUpdated version of PersistenceTest with a few changes to improve db4o\u0027s performance.\n\n",
    "I\u0027ve attached the full file instead of a diff because I had reformatted it and the diff would be quite useless.\n\nI\u0027ve also added comments explaining the reason for the changes.",
    "Offline task data store needs to be move to .mylar folder and included in a regular backup schedule (sent to backup folder). ",
    "Created an attachment (id\u003d71577)\nOffline refactoring take 1\n\nThis patch includes two major changes:\n\n1) Relocates the .mylar data folder to .metadat/.mylyn \n2) Includes new offline storage which writes all task data to zipped xml files within a folder named for the repository. The data is held in .metadata/.mylyn/storage. There are still plenty of improvements to be made including removal of the AttributeFactory but this will need to be done at a later date. \n\n",
    "Created an attachment (id\u003d71578)\nmylar/context/zip\n\n",
    "Excellent!  \n\n\"storage\" seems a bit weird to me because everything we have in that folder is storage.  How about calling that folder \"offline\"?",
    "I\u0027ll take a closer look at the patch tonight and apply it to my bootstrapped workspace tomorrow.",
    "From a first glance:\n \n * There are potential race conditions in OfflineCachingStorage, consider synchronizing all methods\n * What happens if a repository URL is changed? Is the task data deleted or migrated?",
    " (In reply to comment #32)\n\u003e * There are potential race conditions in OfflineCachingStorage, consider\n\u003e synchronizing all methods\nYup, done.\n\u003e * What happens if a repository URL is changed? Is the task data deleted or\n\u003e migrated?\nData is currently manually migrated by TaskListManager. We could consider adding this functionality directly to the storage though.",
    "Rob, could you please provide a new patch against the current CVS head? I get merge conflicts with the current patch.",
    "Created an attachment (id\u003d71639)\noffline refactoring take 2\n\nConcurrency fixes etc.",
    "Caught that during synchronization of my JIRA queries:\n\njava.util.ConcurrentModificationException\n\tat java.util.HashMap$HashIterator.remove(HashMap.java:860)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.persistToStorage(OfflineCachingStorage.java:201)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.access$0(OfflineCachingStorage.java:195)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage$CacheFlushJob.run(OfflineCachingStorage.java:224)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n",
    "Created an attachment (id\u003d71646)\nOffline take 3\n\nFixes ConcurrentModificationException and npe in context retrieval",
    "BTW, the exception above killed the CacheFlushJob which prevented Eclipse from shutting down due to CacheFlushJob.waitSaveCompleted() waiting for a notification that would never get send. That should be more robust.",
    "Created an attachment (id\u003d71653)\nTake 4\n\nGood catch thanks Steffen.  Catching exception now in job so things don\u0027t blow up.",
    "java.lang.NullPointerException\n\tat org.eclipse.ui.XMLMemento$DOMWriter.getEscaped(XMLMemento.java:540)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:480)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento$DOMWriter.print(XMLMemento.java:476)\n\tat org.eclipse.ui.XMLMemento.save(XMLMemento.java:426)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineFileStorage.put(OfflineFileStorage.java:276)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.persistToStorage(OfflineCachingStorage.java:204)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.access$0(OfflineCachingStorage.java:197)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage$CacheFlushJob.run(OfflineCachingStorage.java:232)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n",
    "Created an attachment (id\u003d71660)\nTake 5\n\nShould resolve npe...",
    "Just found this exception in the error log after creating a new task:\n\njava.lang.NullPointerException\n\tat java.util.concurrent.ConcurrentHashMap.hash(ConcurrentHashMap.java:157)\n\tat java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:730)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.retrieveFromCache(OfflineCachingStorage.java:92)\n\tat org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.get(OfflineCachingStorage.java:78)\n\tat org.eclipse.mylyn.internal.tasks.core.TaskDataManager.retrieveState(TaskDataManager.java:312)\n\tat org.eclipse.mylyn.internal.tasks.core.TaskDataManager.getEdits(TaskDataManager.java:195)\n\tat org.eclipse.mylyn.tasks.ui.editors.AbstractRepositoryTaskEditorInput.refreshInput(AbstractRepositoryTaskEditorInput.java:121)\n\tat org.eclipse.mylyn.tasks.ui.editors.AbstractRepositoryTaskEditorInput.\u003cinit\u003e(AbstractRepositoryTaskEditorInput.java:46)\n\tat org.eclipse.mylyn.tasks.ui.editors.RepositoryTaskEditorInput.\u003cinit\u003e(RepositoryTaskEditorInput.java:30)\n\tat org.eclipse.mylyn.tasks.ui.editors.NewTaskEditorInput.\u003cinit\u003e(NewTaskEditorInput.java:24)\n\tat org.eclipse.mylyn.internal.jira.ui.wizards.NewJiraTaskWizard.performFinish(NewJiraTaskWizard.java:87)\n\tat org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:742)\n\tat org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:373)\n\tat org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:616)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1101)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3319)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.jface.window.Window.runEventLoop(Window.java:820)\n\tat org.eclipse.jface.window.Window.open(Window.java:796)\n\tat org.eclipse.mylyn.internal.tasks.ui.actions.NewTaskAction.run(NewTaskAction.java:62)\n\tat org.eclipse.mylyn.internal.tasks.ui.actions.NewTaskAction.run(NewTaskAction.java:70)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:256)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:545)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)\n\tat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1101)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3319)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1144)\n",
    "Created an attachment (id\u003d71670)\nTake 6\n\nFix for editor input issue. ",
    "Created an attachment (id\u003d71673)\nResolves merg conflicts\n\n",
    "Thanks for all your help testing this Steffen. Committed to head. \n\nAttributeContainer/Factory refactoring tracked on bug#193225",
    "Wowwwww"
  ],
  "commentCreationDates": [
    "2006-10-10T23:46:37+02:00",
    "2006-10-17T20:47:42+02:00",
    "2006-10-18T04:16:55+02:00",
    "2006-10-18T18:56:50+02:00",
    "2006-10-18T21:54:33+02:00",
    "2006-10-18T23:38:32+02:00",
    "2006-11-14T17:35:53+01:00",
    "2006-11-14T19:13:34+01:00",
    "2006-11-14T19:21:24+01:00",
    "2006-11-14T21:00:15+01:00",
    "2006-11-15T22:45:05+01:00",
    "2006-11-16T03:17:07+01:00",
    "2006-11-16T03:24:33+01:00",
    "2007-02-21T23:32:39+01:00",
    "2007-02-22T03:26:48+01:00",
    "2007-03-14T20:05:11+01:00",
    "2007-03-14T21:53:06+01:00",
    "2007-04-03T22:43:07+02:00",
    "2007-04-21T03:40:55+02:00",
    "2007-04-22T21:08:51+02:00",
    "2007-04-29T16:05:34+02:00",
    "2007-04-29T23:20:30+02:00",
    "2007-04-29T23:33:55+02:00",
    "2007-04-29T23:49:55+02:00",
    "2007-04-30T01:12:38+02:00",
    "2007-04-30T01:33:15+02:00",
    "2007-04-30T01:34:51+02:00",
    "2007-05-08T08:50:53+02:00",
    "2007-06-18T01:13:44+02:00",
    "2007-06-18T01:13:51+02:00",
    "2007-06-18T02:42:31+02:00",
    "2007-06-18T03:16:25+02:00",
    "2007-06-18T07:54:14+02:00",
    "2007-06-18T08:20:59+02:00",
    "2007-06-18T18:19:16+02:00",
    "2007-06-18T19:49:59+02:00",
    "2007-06-18T20:00:22+02:00",
    "2007-06-18T20:11:42+02:00",
    "2007-06-18T20:15:52+02:00",
    "2007-06-18T20:48:53+02:00",
    "2007-06-18T20:56:17+02:00",
    "2007-06-18T21:41:56+02:00",
    "2007-06-18T23:04:09+02:00",
    "2007-06-19T01:21:33+02:00",
    "2007-06-19T01:44:13+02:00",
    "2007-06-19T02:05:04+02:00",
    "2007-06-19T02:49:51+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.ConcurrentModificationException",
      "elements": [
        {
          "method": "java.util.HashMap$HashIterator.remove",
          "source": "HashMap.java:860"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.persistToStorage",
          "source": "OfflineCachingStorage.java:201"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.access$0",
          "source": "OfflineCachingStorage.java:195"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage$CacheFlushJob.run",
          "source": "OfflineCachingStorage.java:224"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 36,
      "bugId": "160389",
      "date": "2007-06-18T20:00:22+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.getEscaped",
          "source": "XMLMemento.java:540"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:480"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento$DOMWriter.print",
          "source": "XMLMemento.java:476"
        },
        {
          "method": "org.eclipse.ui.XMLMemento.save",
          "source": "XMLMemento.java:426"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineFileStorage.put",
          "source": "OfflineFileStorage.java:276"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.persistToStorage",
          "source": "OfflineCachingStorage.java:204"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.access$0",
          "source": "OfflineCachingStorage.java:197"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage$CacheFlushJob.run",
          "source": "OfflineCachingStorage.java:232"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 1,
      "commentIndex": 40,
      "bugId": "160389",
      "date": "2007-06-18T20:56:17+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.concurrent.ConcurrentHashMap.hash",
          "source": "ConcurrentHashMap.java:157"
        },
        {
          "method": "java.util.concurrent.ConcurrentHashMap.get",
          "source": "ConcurrentHashMap.java:730"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.retrieveFromCache",
          "source": "OfflineCachingStorage.java:92"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.OfflineCachingStorage.get",
          "source": "OfflineCachingStorage.java:78"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.core.TaskDataManager.retrieveState",
          "source": "TaskDataManager.java:312"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.core.TaskDataManager.getEdits",
          "source": "TaskDataManager.java:195"
        },
        {
          "method": "org.eclipse.mylyn.tasks.ui.editors.AbstractRepositoryTaskEditorInput.refreshInput",
          "source": "AbstractRepositoryTaskEditorInput.java:121"
        },
        {
          "method": "org.eclipse.mylyn.tasks.ui.editors.AbstractRepositoryTaskEditorInput.\u003cinit\u003e",
          "source": "AbstractRepositoryTaskEditorInput.java:46"
        },
        {
          "method": "org.eclipse.mylyn.tasks.ui.editors.RepositoryTaskEditorInput.\u003cinit\u003e",
          "source": "RepositoryTaskEditorInput.java:30"
        },
        {
          "method": "org.eclipse.mylyn.tasks.ui.editors.NewTaskEditorInput.\u003cinit\u003e",
          "source": "NewTaskEditorInput.java:24"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.ui.wizards.NewJiraTaskWizard.performFinish",
          "source": "NewJiraTaskWizard.java:87"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.finishPressed",
          "source": "WizardDialog.java:742"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:373"
        },
        {
          "method": "org.eclipse.jface.dialogs.Dialog$2.widgetSelected",
          "source": "Dialog.java:616"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:227"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1101"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3319"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2971"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:820"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:796"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.actions.NewTaskAction.run",
          "source": "NewTaskAction.java:62"
        },
        {
          "method": "org.eclipse.mylyn.internal.tasks.ui.actions.NewTaskAction.run",
          "source": "NewTaskAction.java:70"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:256"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:545"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:490"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:402"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1101"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3319"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2971"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "number": 2,
      "commentIndex": 42,
      "bugId": "160389",
      "date": "2007-06-18T23:04:09+02:00",
      "product": "Mylyn",
      "component": "Tasks",
      "severity": "enhancement"
    }
  ],
  "groupId": "160389",
  "bugId": "160389",
  "date": "2006-10-10T23:46:37+02:00",
  "product": "Mylyn",
  "component": "Tasks",
  "severity": "enhancement"
}