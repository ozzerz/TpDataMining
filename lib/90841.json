{
  "comments": [
    "build i0405\n\nI got the following exception in my log file. I believe I did a ctrl-shift-u to\nturn off \"mark occurances\" (didn\u0027t realize that wasn\u0027t the right key binding) so\nthen I hit the icon and now I get that message everytime I hit the \"mark\noccurances\" icon.\n\nIt looks like JavaEditor.EclipsePreferencesAdaptor holds onto the preference\nnode but this node has been removed. Nodes aren\u0027t handles, they are the real\nobjects and shouldn\u0027t be cached like this.\n\n!ENTRY org.eclipse.ui.workbench 4 2 2005-04-08 14:43:57.926\n!MESSAGE Problems occurred when invoking code from plug-in:\n\"org.eclipse.ui.workbench\".\n!STACK 0\njava.lang.IllegalStateException: Preference node \"org.eclipse.jdt.core\" has been\nremoved.\n\tat\norg.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:146)\n\tat\norg.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:501)\n\tat\norg.eclipse.core.internal.preferences.EclipsePreferences.get(EclipsePreferences.java:362)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.JavaEditor$EclipsePreferencesAdapter.contains(JavaEditor.java:362)\n\tat\norg.eclipse.ui.texteditor.ChainedPreferenceStore.getVisibleStore(ChainedPreferenceStore.java:528)\n\tat\norg.eclipse.ui.texteditor.ChainedPreferenceStore.handlePropertyChangeEvent(ChainedPreferenceStore.java:412)\n\tat\norg.eclipse.ui.texteditor.ChainedPreferenceStore.access$0(ChainedPreferenceStore.java:407)\n\tat\norg.eclipse.ui.texteditor.ChainedPreferenceStore$PropertyChangeListener.propertyChange(ChainedPreferenceStore.java:68)\n\tat\norg.eclipse.ui.preferences.ScopedPreferenceStore$3.run(ScopedPreferenceStore.java:339)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1021)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:757)\n\tat\norg.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:336)\n\tat\norg.eclipse.ui.preferences.ScopedPreferenceStore.setValue(ScopedPreferenceStore.java:736)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.ToggleMarkOccurrencesAction.run(ToggleMarkOccurrencesAction.java:54)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:996)\n\tat org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:216)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:228)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)\n\tat\norg.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:441)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2894)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2527)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1570)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1534)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:306)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:156)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:315)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:268)\n\tat org.eclipse.core.launcher.Main.run(Main.java:947)\n\tat org.eclipse.core.launcher.Main.main(Main.java:931)",
    "do you have a reproducible scenario for this?\n\nThe one I found was when removing a project. The editor can\u0027t even deregister\nthe preference change listener. It seems that EclipsePreferences is a bit too\nrestrictive here.\n\nHaving the preference change listener registered, I don\u0027t see how I wouldn\u0027t\nkeep a reference on it. DJ, what do you recommend?\n\nProjectPreferences(EclipsePreferences).checkRemoved() line: 146\nProjectPreferences(EclipsePreferences).removePreferenceChangeListener(IEclipsePreferences$IPreferenceChangeListener)\nline: 912\nJavaEditor$EclipsePreferencesAdapter.removePropertyChangeListener(IPropertyChangeListener)\nline: 355\nChainedPreferenceStore$PropertyChangeListener.unregister() line: 82\nChainedPreferenceStore.unregisterChildListeners() line: 552\nChainedPreferenceStore.removePropertyChangeListener(IPropertyChangeListener)\nline: 137\nCompilationUnitEditor(AbstractTextEditor).dispose() line: 3105\n",
    "No reproducable test case, sorry.\n\nI am working on creating preference nodes that act like handles and forward the\nmethod calls to the real nodes but its not ready yet.\n\nIn my code I have a helper method something like:\n   IEclipsePreferences getPreferences() {\n      return new InstanceScope().getNode(\"org.eclipse.core.resources\");\n   }\n",
    "The listeners are a problem. To deregister I have to access the class again, to\nI keep a reference. To not deregister when I find out that the project doesn\u0027t\nexist anymore feels wrong.\n\nCan you have a look at the case in comment 1. Wouldn\u0027t it be better to not throw\na \u0027IllegalStateException\u0027 when removing a listener? The preference store is\nprobably a resource change listener on the project removal, and it seems it is\nbefore the Java editor that also reacts on that. \n\n",
    "There were previous problems with this case (bug 89262) where after a node was\nremoved, it was impossible to remove the listener. I have since updated the spec\nto say that the listeners will be removed automatically when a node is removed.\n(IEclipsePreferences#removeNode)\n\nI tried to follow the patterns of the JDK APIs for the #remove*Listener method\nso that\u0027s why an exception is thrown in this case. (java.util.prefs.Preferences)\n\nChanging this behaviour would be an API change and would require permission from\nthe PMC.\n\nYou can also do something like:\n   if (node.nodeExists(\"\"))\n      node.removeListner(listener);\n",
    "*** Bug 91240 has been marked as a duplicate of this bug. ***",
    "fixed \u003e 20050413\n\nUsing now the indirection context.getNode(...) all the time. Even the project is\nnot existing, the node still allows access and removing of listeners.\n\nThis is obviously using a weakness in the preferences model. I filed bug 91269.\n\n"
  ],
  "commentCreationDates": [
    "2005-04-08T20:49:55+02:00",
    "2005-04-11T18:26:50+02:00",
    "2005-04-12T18:18:56+02:00",
    "2005-04-12T19:07:53+02:00",
    "2005-04-12T19:37:08+02:00",
    "2005-04-13T10:46:21+02:00",
    "2005-04-13T15:47:25+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Preference node \"org.eclipse.jdt.core\" has been removed.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved",
          "source": "EclipsePreferences.java:146"
        },
        {
          "method": "org.eclipse.core.internal.preferences.EclipsePreferences.internalGet",
          "source": "EclipsePreferences.java:501"
        },
        {
          "method": "org.eclipse.core.internal.preferences.EclipsePreferences.get",
          "source": "EclipsePreferences.java:362"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$EclipsePreferencesAdapter.contains",
          "source": "JavaEditor.java:362"
        },
        {
          "method": "org.eclipse.ui.texteditor.ChainedPreferenceStore.getVisibleStore",
          "source": "ChainedPreferenceStore.java:528"
        },
        {
          "method": "org.eclipse.ui.texteditor.ChainedPreferenceStore.handlePropertyChangeEvent",
          "source": "ChainedPreferenceStore.java:412"
        },
        {
          "method": "org.eclipse.ui.texteditor.ChainedPreferenceStore.access$0",
          "source": "ChainedPreferenceStore.java:407"
        },
        {
          "method": "org.eclipse.ui.texteditor.ChainedPreferenceStore$PropertyChangeListener.propertyChange",
          "source": "ChainedPreferenceStore.java:68"
        },
        {
          "method": "org.eclipse.ui.preferences.ScopedPreferenceStore$3.run",
          "source": "ScopedPreferenceStore.java:339"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1021"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:757"
        },
        {
          "method": "org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent",
          "source": "ScopedPreferenceStore.java:336"
        },
        {
          "method": "org.eclipse.ui.preferences.ScopedPreferenceStore.setValue",
          "source": "ScopedPreferenceStore.java:736"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ToggleMarkOccurrencesAction.run",
          "source": "ToggleMarkOccurrencesAction.java:54"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:996"
        },
        {
          "method": "org.eclipse.ui.actions.RetargetAction.runWithEvent",
          "source": "RetargetAction.java:216"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.runWithEvent",
          "source": "WWinPluginAction.java:228"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:538"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:488"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$6.handleEvent",
          "source": "ActionContributionItem.java:441"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2894"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2527"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1570"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1534"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:306"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:228"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:344"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:156"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:315"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:268"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:947"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:931"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "90841",
      "date": "2005-04-08T20:49:55+02:00",
      "product": "JDT",
      "component": "Text",
      "severity": "major"
    }
  ],
  "groupId": "90841",
  "bugId": "90841",
  "date": "2005-04-08T20:49:55+02:00",
  "product": "JDT",
  "component": "Text",
  "severity": "major"
}