{
  "comments": [
    "The following code example compiles, but when executed it throws: \n \nException in thread \"main\" java.lang.NoSuchMethodError: \nNoSuchMethodError.MyListImpl.get()Ljava/lang/String; \n\tat NoSuchMethodError.StringListImpl.get(StringListImpl.java:1) \n\tat NoSuchMethodError.Test.main(Test.java:13) \n \n----------------------- \n \npublic interface Foo { \n    Object get(); \n} \n \npublic interface MyList\u003cF\u003e extends Foo { \n    public F get(); \n} \n \npublic class MyListImpl\u003cG\u003e implements MyList\u003cG\u003e { \n    public G get() { return null; } \n} \n \npublic interface StringList extends MyList\u003cString\u003e {} \n \npublic class StringListImpl extends MyListImpl\u003cString\u003e implements StringList {}  \n \npublic class Test { \n    public static void main(String[] args) { \n        Foo f \u003d new StringListImpl(); \n    } \n}",
    "Cannot reproduce. Works fine in latest.",
    "I tested with latest, same problem, for me it does not work.  \nI\u0027m using 3.1 M4 under Linux with jdt.core HEAD and Java version 1.5.0_01. ",
    "3.1M4 is by no mean the latest, try 3.1M5 or better; it should be fixed.\nWe corrected numerous compiler issues in between M4 and M5, and this one issue\ngot addressed during this process.",
    "OK. Sorry I must have missed M5 (I usually do not miss any update ;-) ). \nNevertheless the problem is still there, with M5a and jdt.core HEAD. \nWould it help if I post the .class files? ",
    "Does the problem persist if you do a clean rebuild ? When trying your testcase,\nI had all the types grouped in a single source file and it did work just fine.",
    "A clean rebuild does not help. I also tested it with all classes in one file, \nsame problem. ",
    "Actually, I was able to reproduce by first adding an invocation of #get() in the\ntestcase.\n\ninterface Foo { \n    Object get(); \n} \n \ninterface MyList\u003cF\u003e extends Foo { \n    public F get(); \n} \n \nclass MyListImpl\u003cG\u003e implements MyList\u003cG\u003e { \n    public G get() { return null; } \n} \n \ninterface StringList extends MyList\u003cString\u003e {} \n \nclass StringListImpl extends MyListImpl\u003cString\u003e implements StringList {}  \n \npublic class X { \n    public static void main(String[] args) { \n        Foo f \u003d new StringListImpl(); \n\t\tf.get();\n    } \n}",
    "Oh no. Damn. I am so stupid. Yes I forgot this line. Sorry! \nMeanwhile, I run javap on the class files generated by Eclipse and compared \nthem to the class files generated by javac 1.5. Except one file all files have \nbeen pretty identical. But I found an important difference in \nStringListImpl.class: \n \n---- snip ---- \n \n--- Javac.disasm        2005-03-08 11:50:35.130127224 +0100 \n+++ Eclipse.disasm      2005-03-08 11:50:31.492680200 +0100 \n@@ -3,8 +3,14 @@ \n testnosuchmethod.allinonefile.StringListImpl(); \n   Code: \n    0:  aload_0 \n-   1:  invokespecial   #1; //Method \ntestnosuchmethod/allinonefile/MyListImpl.\"\u003cinit\u003e\":()V \n+   1:  invokespecial   #11; //Method \ntestnosuchmethod/allinonefile/MyListImpl.\"\u003cinit\u003e\":()V \n    4:  return \n \n+public java.lang.Object get(); \n+  Code: \n+   0:  aload_0 \n+   1:  invokevirtual   #20; //Method \ntestnosuchmethod/allinonefile/MyListImpl.get:()Ljava/lang/String; \n+   4:  areturn \n+ \n } ",
    "No problem, glad you insisted.\n\nProblem comes from the fact we introduced a bridge method, where none is needed.\nAs the exception says, the bridge method is targeting an undefined method, which\nonly exists in the compiler typesystem, but not on disk.",
    "Added GenericTypeTest#test556.\nFixed by ensuring using the target original signature when bridging, as opposed\nto using current method.",
    "Kent - pls double check this fix",
    "Great, it works now! Thanks! ",
    "Verified in I20050330-0500"
  ],
  "commentCreationDates": [
    "2005-03-07T15:47:42+01:00",
    "2005-03-07T16:15:03+01:00",
    "2005-03-07T17:49:51+01:00",
    "2005-03-07T20:05:11+01:00",
    "2005-03-08T08:30:11+01:00",
    "2005-03-08T09:04:14+01:00",
    "2005-03-08T09:55:44+01:00",
    "2005-03-08T10:44:43+01:00",
    "2005-03-08T10:55:46+01:00",
    "2005-03-08T11:43:18+01:00",
    "2005-03-08T11:46:09+01:00",
    "2005-03-08T11:46:39+01:00",
    "2005-03-08T12:08:30+01:00",
    "2005-03-31T15:51:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchMethodError",
      "message": "NoSuchMethodError.MyListImpl.get()Ljava/lang/String;",
      "elements": [
        {
          "method": "NoSuchMethodError.StringListImpl.get",
          "source": "StringListImpl.java:1"
        },
        {
          "method": "NoSuchMethodError.Test.main",
          "source": "Test.java:13"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "87273",
      "date": "2005-03-07T15:47:42+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "87273",
  "bugId": "87273",
  "date": "2005-03-07T15:47:42+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}