{
  "comments": [
    "I am seeing JUnit test failures in HEAD. Stefan, do you see these errors?\n\n\nFirst failure:\n\njunit.framework.AssertionFailedError:  expected array length:\u003c25144\u003e but was:\u003c25189\u003e\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat org.eclipse.equinox.p2.tests.AbstractProvisioningTest.assertEquals(AbstractProvisioningTest.java:336)\n\tat org.eclipse.equinox.p2.tests.artifact.optimizers.jbdiff.JBDiffZipStepTest.testDiffJdt32to33(JBDiffZipStepTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat junit.framework.TestCase.runTest(TestCase.java:168)\n\tat junit.framework.TestCase.runBare(TestCase.java:134)\n\tat junit.framework.TestResult$1.protect(TestResult.java:110)\n\tat junit.framework.TestResult.runProtected(TestResult.java:128)\n\tat junit.framework.TestResult.run(TestResult.java:113)\n\tat junit.framework.TestCase.run(TestCase.java:124)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat org.junit.internal.runners.OldTestClassRunner.run(OldTestClassRunner.java:76)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:58)\n\tat org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:570)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:362)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:175)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:515)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:455)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1193)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1169)\n\nSecond failure:\n\njunit.framework.AssertionFailedError:  expected array length:\u003c42387\u003e but was:\u003c42408\u003e\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat org.eclipse.equinox.p2.tests.AbstractProvisioningTest.assertEquals(AbstractProvisioningTest.java:336)\n\tat org.eclipse.equinox.p2.tests.artifact.processor.jbdiff.JBPatchZipStepTest.testPatchOrgEclipseJdt32to33(JBPatchZipStepTest.java:76)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat junit.framework.TestCase.runTest(TestCase.java:168)\n\tat junit.framework.TestCase.runBare(TestCase.java:134)\n\tat junit.framework.TestResult$1.protect(TestResult.java:110)\n\tat junit.framework.TestResult.runProtected(TestResult.java:128)\n\tat junit.framework.TestResult.run(TestResult.java:113)\n\tat junit.framework.TestCase.run(TestCase.java:124)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat org.junit.internal.runners.OldTestClassRunner.run(OldTestClassRunner.java:76)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:58)\n\tat org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:570)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:362)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:175)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:515)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:455)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1193)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1169)",
    "I am seeing different errors. All 4 of the optimizers and processors tests fail with java.lang.UnsupportedClassVersionError:\n\njava.lang.UnsupportedClassVersionError: (org/eclipse/equinox/p2/sar/DirectByteArrayOutputStream) bad major version at offset\u003d6\n\tat java.lang.ClassLoader.defineClassImpl(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:228)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.defineClass(DefaultClassLoader.java:161)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass(ClasspathManager.java:503)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl(ClasspathManager.java:473)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl(ClasspathManager.java:432)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:415)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:344)\n\tat org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:33)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:400)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:373)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:361)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:573)\n\tat java.lang.J9VMInternals.verifyImpl(Native Method)\n\tat java.lang.J9VMInternals.verify(J9VMInternals.java:66)\n\tat java.lang.J9VMInternals.verify(J9VMInternals.java:64)\n\tat java.lang.J9VMInternals.initialize(J9VMInternals.java:127)\n\tat org.eclipse.equinox.p2.tests.artifact.optimizers.jbdiff.JBDiffStepTest.testDiffEclipseExe32to33(JBDiffStepTest.java:41)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\t",
    "I encounter neither of the problems you have. I am afraid that the reason for these problems is the used jre. I am running here with Sun\u0027s JRE 1.4, java -version gives:\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2-b28)\nJava HotSpot(TM) Client VM (build 1.4.2-b28, mixed mode)\n\nIs it possible for someone to rerun the tests with a similar jre. I will try to get a J9 running here. A few days ago I was not successful doing that.\n\n@Dave: Your error is really strange. This sounds like you were using class files compiled with a higher compiler on a lower jvm. Can you please send me the class file?",
    "I futzed around with various jre settings and got the UnsupportedClassVersion error to go away. I discovered the compiler compliance level was set to 6.0 in preferences, although it had be 1.4.2 (I suspect, but cannot prove that this change happened when I moved to 3.4M3 recently). However, now if I switch back to 6.0 compliance from 1.4.2, I still don\u0027t get the UCV error. Unexplained mystery.\n\nHowever, I now see the same (well, approximately the same) problems that John does:\n\njunit.framework.AssertionFailedError:  expected array length:\u003c25144\u003e but was:\u003c25125\u003e\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat... org.eclipse.equinox.p2.tests.artifact.optimizers.jbdiff.JBDiffZipStepTest.testDiffJdt32to33(JBDiffZipStepTest.java:55)\n\t\nand\n\njunit.framework.AssertionFailedError:  expected array length:\u003c42387\u003e but was:\u003c42408\u003e\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat... org.eclipse.equinox.p2.tests.artifact.processor.jbdiff.JBPatchZipStepTest.testPatchOrgEclipseJdt32to33(JBPatchZipStepTest.java:76)\n\t\nNote that John\u0027s error on JBDiffZipStepTest reported\n   expected array length:\u003c25144\u003e but was:\u003c25189\u003e\nand mine is\n   expected array length:\u003c25144\u003e but was:\u003c25125\u003e\nbut the assert results are the same on JBPatchZipStepTest\n\nMy errors occur on both an IBM JRE:  ibmjava5sr5sdkwin32_0413\\jdk\n                  and on a SUN JRE:  jre1.6.0_01\n\n",
    "Dave, could you please rerun the tests with a Sun JRE 1.4, if possible?\n",
    "It looks like Jeff\u0027s changes from last night fixed this.  Yesterday these tests were still failing for me, but now they all pass.",
    "Ignore my previous comment - I see that Jeff commented the test out. I still get:\n\n - failure in testDiffJdt32to33 on IBM Java 5, IBM 1.4, and Sun Java 5\n - failure in testPack on Sun Java 5 only",
    "To track down the cause of this bug I ?splitted? one of the failing tests (JBDiffZipStepTest) into separate unit tests:\n- org.eclipse.equinox.p2.tests.sar.SarTest\n- org.eclipse.equinox.p2.tests.artifact.optimizers.Bug209233Test\n\nJohn, Dave, could you please run these new tests? Thanks!\n",
    "Bug209233Test passes for me, but SarTest fails. It\u0027s interesting to me that the round-trip test passes (testZipToSarAndBack), but the one-way tests fail. To me this suggests that the jar-\u003esar conversion function is dependent on local environment, but somehow the difference is symmetric so a round-trip on any single machine is always consistent.\n\nStefan, is there anything I can do on my machine that would help track it down. Perhaps I could produce a SAR on my machine, and you could compare to a SAR produced on your machine from the same input jar?\n\ntestJarToSarForJdt320(org.eclipse.equinox.p2.tests.sar.SarTest)\njunit.framework.AssertionFailedError: Different bytes at 72 expected:\u003c34\u003e but was:\u003c32\u003e\n\ntestSarToJarForJdt320(org.eclipse.equinox.p2.tests.sar.SarTest)\njunit.framework.AssertionFailedError: Different bytes at 11 expected:\u003c108\u003e but was:\u003c156\u003e\n\ntestJarToSarForJdt330(org.eclipse.equinox.p2.tests.sar.SarTest)\njunit.framework.AssertionFailedError: Different bytes at 83 expected:\u003c100\u003e but was:\u003c99\u003e\n\ntestSarToJarForJdt330(org.eclipse.equinox.p2.tests.sar.SarTest)\njunit.framework.AssertionFailedError: Different bytes at 11 expected:\u003c85\u003e but was:\u003c133\u003e\n",
    "Mid-air collision with John. We got the same results:\n\nI reran the new tests and get 5 failures:\n\n1). junit.framework.AssertionFailedError: null\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.assertTrue(Assert.java:20)\n        at junit.framework.Assert.assertTrue(Assert.java:27)\n        at\norg.eclipse.equinox.p2.tests.artifact.optimizers.Pack200OptimizerTest.testPack(Pack200OptimizerTest.java:64)\n\n\n2). junit.framework.AssertionFailedError: Different bytes at 72 expected:\u003c34\u003e\nbut was:\u003c32\u003e\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.failNotEquals(Assert.java:277)\n        at junit.framework.Assert.assertEquals(Assert.java:64)\n        at junit.framework.Assert.assertEquals(Assert.java:195)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.assertEquals(SarTest.java:209)\n        at org.eclipse.equinox.p2.tests.sar.SarTest.doJarToSar(SarTest.java:61)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.testJarToSarForJdt320(SarTest.java:28)\n\n\n3). junit.framework.AssertionFailedError: Different bytes at 11 expected:\u003c84\u003e\nbut was:\u003c156\u003e\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.failNotEquals(Assert.java:277)\n        at junit.framework.Assert.assertEquals(Assert.java:64)\n        at junit.framework.Assert.assertEquals(Assert.java:195)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.assertEquals(SarTest.java:209)\n        at org.eclipse.equinox.p2.tests.sar.SarTest.doSarToJar(SarTest.java:80)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.testSarToJarForJdt320(SarTest.java:34)\n\n\n4). junit.framework.AssertionFailedError: Different bytes at 83 expected:\u003c101\u003e\nbut was:\u003c99\u003e\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.failNotEquals(Assert.java:277)\n        at junit.framework.Assert.assertEquals(Assert.java:64)\n        at junit.framework.Assert.assertEquals(Assert.java:195)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.assertEquals(SarTest.java:209)\n        at org.eclipse.equinox.p2.tests.sar.SarTest.doJarToSar(SarTest.java:61)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.testJarToSarForJdt330(SarTest.java:40)\n\n\n5). junit.framework.AssertionFailedError: Different bytes at 11 expected:\u003c61\u003e\nbut was:\u003c133\u003e\n        at junit.framework.Assert.fail(Assert.java:47)\n        at junit.framework.Assert.failNotEquals(Assert.java:277)\n        at junit.framework.Assert.assertEquals(Assert.java:64)\n        at junit.framework.Assert.assertEquals(Assert.java:195)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.assertEquals(SarTest.java:209)\n        at org.eclipse.equinox.p2.tests.sar.SarTest.doSarToJar(SarTest.java:80)\n        at\norg.eclipse.equinox.p2.tests.sar.SarTest.testSarToJarForJdt330(SarTest.java:46)",
    "A few minutes ago Jeff found the same issues and yes, we both think it must be\nsomething locale specific.\nJohn, you can generate the sars out of the jars if you put the following code into\nSarTest:\npublic void testGenerateSarFromJar32() throws IOException {\n       InputStream jdt320Jar \u003d getTestData(\"optimizers\",\n\"org.eclipse.jdt_3.2.0.v20060605-1400.njar\");\n       generateSar(\"org.eclipse.jdt_3.2.0.v20060605-1400\", jdt320Jar);\n   }\n\n   public void testGenerateSarFromJar33() throws IOException {\n       InputStream jdt320Jar \u003d getTestData(\"optimizers\",\n\"org.eclipse.jdt_3.3.0.v20070607-1300.njar\");\n       generateSar(\"org.eclipse.jdt_3.3.0.v20070607-1300\", jdt320Jar);\n   }\n\n   private void generateSar(String sarName, InputStream jar) throws IOException\n{\n       File sar \u003d null;\n       sar \u003d File.createTempFile(sarName, \".sar\");\n       OutputStream sarOut \u003d new BufferedOutputStream(new\nFileOutputStream(sar));\n\n       SarUtil.zipToSar(jar, sarOut);\n   }\n\nThis should generate two sars into your temp folder.\nNow compare these sars with equally named sars in the testData/sar folder or\nthe test project. They should be identical. But they wont?t be identical for\nyou.\n\nJohn, Dave - thank you!\n",
    "It\u0027s also interesting that even between Dave and I there are different bytes in the files (judging from the test failure messages).",
    "Stefan\u0027s speculation that the problem is timezone specific could account for the the different sizes that John and I see (EST and PST).\n\nFollowing Stefan\u0027s suggestion, I changed timezone for running the test to Europe/Berlin with -Duser.timezone\u003dECT and the the 4 failures in SarTest didn\u0027t happen. Speculation confirmed!\n",
    "The root cause for this problem is within the getTime() and setTime() methods of the ZipEntry class. These methods perform a time zone dependent conversion between dos time and java time.\nWhen serializing (i.e. reading getTime() from a ZipEntry) a zip/jar to a sar it contains java times dependent to the time zone where the serialization happens. When deserialing the sar the java times within another time zone it gets converted into a different dos time (setTime()).\nThe solution is not to serialize java time but the dos time.\n\nI run all the sar/optimizers/processors test with different time zones. They all succeed with exception to the pack tests. But they do not relate to this problem.\n\nCan someone please rerun the test to verify that?\n",
    "Has been verified by John and Jeff."
  ],
  "commentCreationDates": [
    "2007-11-08T18:26:46+01:00",
    "2007-11-08T20:25:46+01:00",
    "2007-11-09T08:12:07+01:00",
    "2007-11-09T19:23:29+01:00",
    "2007-11-10T15:39:06+01:00",
    "2007-11-13T17:16:18+01:00",
    "2007-11-13T17:28:22+01:00",
    "2007-11-14T12:22:10+01:00",
    "2007-11-14T15:03:51+01:00",
    "2007-11-14T15:09:31+01:00",
    "2007-11-14T15:11:04+01:00",
    "2007-11-14T15:33:54+01:00",
    "2007-11-14T18:28:35+01:00",
    "2007-11-15T13:41:52+01:00",
    "2007-11-15T15:09:12+01:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "expected array length:\u003c25144\u003e but was:\u003c25189\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.AbstractProvisioningTest.assertEquals",
          "source": "AbstractProvisioningTest.java:336"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.artifact.optimizers.jbdiff.JBDiffZipStepTest.testDiffJdt32to33",
          "source": "JBDiffZipStepTest.java:55"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:168"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:134"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:110"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:128"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:113"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:124"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:232"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:227"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:232"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:227"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:232"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:227"
        },
        {
          "method": "org.junit.internal.runners.OldTestClassRunner.run",
          "source": "OldTestClassRunner.java:76"
        },
        {
          "method": "org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run",
          "source": "JUnit4TestReference.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.TestExecution.run",
          "source": "TestExecution.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:460"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:386"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:58"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run",
          "source": "CoreTestApplication.java:24"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:570"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:195"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:362"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:175"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:515"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:455"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1193"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1169"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "209233",
      "date": "2007-11-08T18:26:46+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "expected array length:\u003c42387\u003e but was:\u003c42408\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.AbstractProvisioningTest.assertEquals",
          "source": "AbstractProvisioningTest.java:336"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.artifact.processor.jbdiff.JBPatchZipStepTest.testPatchOrgEclipseJdt32to33",
          "source": "JBPatchZipStepTest.java:76"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:168"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:134"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:110"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:128"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:113"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:124"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:232"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:227"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:232"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:227"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:232"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:227"
        },
        {
          "method": "org.junit.internal.runners.OldTestClassRunner.run",
          "source": "OldTestClassRunner.java:76"
        },
        {
          "method": "org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run",
          "source": "JUnit4TestReference.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.TestExecution.run",
          "source": "TestExecution.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:460"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:386"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:58"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run",
          "source": "CoreTestApplication.java:24"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:570"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:195"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:362"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:175"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:515"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:455"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1193"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1169"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "209233",
      "date": "2007-11-08T18:26:46+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.UnsupportedClassVersionError",
      "message": "(org/eclipse/equinox/p2/sar/DirectByteArrayOutputStream) bad major version at offset\u003d6",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClassImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:228"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.defineClass",
          "source": "DefaultClassLoader.java:161"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass",
          "source": "ClasspathManager.java:503"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl",
          "source": "ClasspathManager.java:473"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl",
          "source": "ClasspathManager.java:432"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:415"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:344"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass",
          "source": "SingleSourcePackage.java:33"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "BundleLoader.java:400"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:373"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:361"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:573"
        },
        {
          "method": "java.lang.J9VMInternals.verifyImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.J9VMInternals.verify",
          "source": "J9VMInternals.java:66"
        },
        {
          "method": "java.lang.J9VMInternals.verify",
          "source": "J9VMInternals.java:64"
        },
        {
          "method": "java.lang.J9VMInternals.initialize",
          "source": "J9VMInternals.java:127"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.artifact.optimizers.jbdiff.JBDiffStepTest.testDiffEclipseExe32to33",
          "source": "JBDiffStepTest.java:41"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        }
      ],
      "number": 2,
      "commentIndex": 1,
      "bugId": "209233",
      "date": "2007-11-08T20:25:46+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "expected array length:\u003c25144\u003e but was:\u003c25125\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        }
      ],
      "number": 3,
      "commentIndex": 3,
      "bugId": "209233",
      "date": "2007-11-09T19:23:29+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "expected array length:\u003c42387\u003e but was:\u003c42408\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        }
      ],
      "number": 4,
      "commentIndex": 3,
      "bugId": "209233",
      "date": "2007-11-09T19:23:29+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "null",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.assertTrue",
          "source": "Assert.java:20"
        },
        {
          "method": "junit.framework.Assert.assertTrue",
          "source": "Assert.java:27"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.artifact.optimizers.Pack200OptimizerTest.testPack",
          "source": "Pack200OptimizerTest.java:64"
        }
      ],
      "number": 5,
      "commentIndex": 9,
      "bugId": "209233",
      "date": "2007-11-14T15:09:31+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Different bytes at 72 expected:\u003c34\u003e but was:\u003c32\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.failNotEquals",
          "source": "Assert.java:277"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:64"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:195"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.assertEquals",
          "source": "SarTest.java:209"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.doJarToSar",
          "source": "SarTest.java:61"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.testJarToSarForJdt320",
          "source": "SarTest.java:28"
        }
      ],
      "number": 6,
      "commentIndex": 9,
      "bugId": "209233",
      "date": "2007-11-14T15:09:31+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Different bytes at 11 expected:\u003c84\u003e but was:\u003c156\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.failNotEquals",
          "source": "Assert.java:277"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:64"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:195"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.assertEquals",
          "source": "SarTest.java:209"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.doSarToJar",
          "source": "SarTest.java:80"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.testSarToJarForJdt320",
          "source": "SarTest.java:34"
        }
      ],
      "number": 7,
      "commentIndex": 9,
      "bugId": "209233",
      "date": "2007-11-14T15:09:31+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Different bytes at 83 expected:\u003c101\u003e but was:\u003c99\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.failNotEquals",
          "source": "Assert.java:277"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:64"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:195"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.assertEquals",
          "source": "SarTest.java:209"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.doJarToSar",
          "source": "SarTest.java:61"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.testJarToSarForJdt330",
          "source": "SarTest.java:40"
        }
      ],
      "number": 8,
      "commentIndex": 9,
      "bugId": "209233",
      "date": "2007-11-14T15:09:31+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    },
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Different bytes at 11 expected:\u003c61\u003e but was:\u003c133\u003e",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.failNotEquals",
          "source": "Assert.java:277"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:64"
        },
        {
          "method": "junit.framework.Assert.assertEquals",
          "source": "Assert.java:195"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.assertEquals",
          "source": "SarTest.java:209"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.doSarToJar",
          "source": "SarTest.java:80"
        },
        {
          "method": "org.eclipse.equinox.p2.tests.sar.SarTest.testSarToJarForJdt330",
          "source": "SarTest.java:46"
        }
      ],
      "number": 9,
      "commentIndex": 9,
      "bugId": "209233",
      "date": "2007-11-14T15:09:31+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "209233",
  "bugId": "209233",
  "date": "2007-11-08T18:26:46+01:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}