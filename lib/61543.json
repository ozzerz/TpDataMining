{
  "comments": [
    "When i run the following code snippet:\n\nXMLHelper helper \u003d new XMLHelper(xmlResource);\nhelper.addPrefix(prefix, uri);\n\ni get an ArrayIndexOutOfBoundException in method declarePrefix of class \nXMLHelperImpl.Namespacesupport. Reason for this exception is that attribute \ncurrentContext is initialized with -1 so that context[currentContext] lead to \nthe exception above.\n\nBest regards,\nAlexander",
    "Alex, you need to call pushContext first. ",
    "Hi Ed,\n\nfirst of all thanks for your quick response. I have seen that i can work around \nthis exception by calling pushContext(), but than you will break all EMF 1.x \ncode! Also i think that it\u0027s no real solution to call pushContext() because \nthan your internal implementation will shine through.\n\nAlexander",
    "Alex,\n\nThis change was introduced in 2.0 because we now support proper scoping of \nxmlns prefixes, which requires pushing and popping context as they come in and \nout of scope.  In general, code for 2.0 won\u0027t work with 1.x.",
    "I am getting the same ArrayIndexOutOfBounds exception (see stack trace below) \nwhen I am trying to load a resource by calling getResource on the \nResourceSetImpl. The EMF code seem to call startPrefixMapping which does not \ncall pushContext, hence the exception. Is this an error in startPrefixMapping, \nshould it call pushContext as is done in the startElement method?\n\nIf this not a problem, how can I push the context before calling getResource on \nthe ResourceSetImpl?\n\nRegards,\nLars\n\n\nLoading model: au/gov/nsw/rta/tmis/platform/tmisobjectmodel/BasicTypes.metamodel\njava.lang.ArrayIndexOutOfBoundsException: -1\n\tat \norg.eclipse.emf.ecore.xmi.impl.XMLHelperImpl$NamespaceSupport.declarePrefix\n(XMLHelperImpl.java:1023)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.addPrefix\n(XMLHelperImpl.java:903)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startPrefixMapping\n(XMLHandler.java:844)\n\tat org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startPrefixMapping\n(SAXWrapper.java:64)\n\tat com.icl.saxon.aelfred.SAXDriver.attribute(Unknown Source)\n\tat com.icl.saxon.aelfred.XmlParser.parseAttribute(Unknown Source)\n\tat com.icl.saxon.aelfred.XmlParser.parseElement(Unknown Source)\n\tat com.icl.saxon.aelfred.XmlParser.parseDocument(Unknown Source)\n\tat com.icl.saxon.aelfred.XmlParser.doParse(Unknown Source)\n\tat com.icl.saxon.aelfred.SAXDriver.parse(Unknown Source)\n\tat javax.xml.parsers.SAXParser.parse(SAXParser.java:345)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:129)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad\n(XMLResourceImpl.java:155)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load\n(ResourceImpl.java:867)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load\n(ResourceImpl.java:741)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad\n(ResourceSetImpl.java:215)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource\n(ResourceSetImpl.java:281)\n\tat au.gov.nsw.rta.tmis.tools.generator.EMFLoader.load\n(EMFLoader.java:104)\n\tat au.gov.nsw.rta.tmis.tools.generator.EMFLoader.load(EMFLoader.java:85)\n\tat au.gov.nsw.rta.tmis.tools.pomgenerator.Generator.run\n(Generator.java:72)\n\tat au.gov.nsw.rta.tmis.tools.pomgenerator.Generator.main\n(Generator.java:105)\nException in thread \"main\" ",
    "I did a test where I added a call to pushContext in startPrefixMapping and a \ncall to popContext in endPrefixMapping. I do not get the \nArrayIndexOutOfBoundException any more. Please confirm that this modification \nis a correct one.\n\n(Should I open another bug report for this?)",
    "Lars,\n\nIt should not be possible to get startPrefixMapping before the first\nstartElement if you are using a well-behaved SAX implementation.  So your \"fix\"\nmay workaround a problem with the SAX implementation you are using, but whether\nit\u0027s correct is hard to say..."
  ],
  "commentCreationDates": [
    "2004-05-09T23:48:17+02:00",
    "2004-05-10T00:07:31+02:00",
    "2004-05-10T07:53:55+02:00",
    "2004-05-10T12:38:30+02:00",
    "2004-07-12T04:51:38+02:00",
    "2004-07-15T04:12:20+02:00",
    "2004-07-15T14:13:22+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "-1",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl$NamespaceSupport.declarePrefix",
          "source": "XMLHelperImpl.java:1023"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.addPrefix",
          "source": "XMLHelperImpl.java:903"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startPrefixMapping",
          "source": "XMLHandler.java:844"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startPrefixMapping",
          "source": "SAXWrapper.java:64"
        },
        {
          "method": "com.icl.saxon.aelfred.SAXDriver.attribute",
          "source": "Unknown Source"
        },
        {
          "method": "com.icl.saxon.aelfred.XmlParser.parseAttribute",
          "source": "Unknown Source"
        },
        {
          "method": "com.icl.saxon.aelfred.XmlParser.parseElement",
          "source": "Unknown Source"
        },
        {
          "method": "com.icl.saxon.aelfred.XmlParser.parseDocument",
          "source": "Unknown Source"
        },
        {
          "method": "com.icl.saxon.aelfred.XmlParser.doParse",
          "source": "Unknown Source"
        },
        {
          "method": "com.icl.saxon.aelfred.SAXDriver.parse",
          "source": "Unknown Source"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "SAXParser.java:345"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load",
          "source": "XMLLoadImpl.java:129"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad",
          "source": "XMLResourceImpl.java:155"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:867"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:741"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:215"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:281"
        },
        {
          "method": "au.gov.nsw.rta.tmis.tools.generator.EMFLoader.load",
          "source": "EMFLoader.java:104"
        },
        {
          "method": "au.gov.nsw.rta.tmis.tools.generator.EMFLoader.load",
          "source": "EMFLoader.java:85"
        },
        {
          "method": "au.gov.nsw.rta.tmis.tools.pomgenerator.Generator.run",
          "source": "Generator.java:72"
        },
        {
          "method": "au.gov.nsw.rta.tmis.tools.pomgenerator.Generator.main",
          "source": "Generator.java:105"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "61543",
      "date": "2004-07-12T04:51:38+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "61543",
  "bugId": "61543",
  "date": "2004-05-09T23:48:17+02:00",
  "product": "EMF",
  "component": "Core",
  "severity": "normal"
}