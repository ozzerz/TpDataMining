{
  "comments": [
    "This defect was found on F1.\n\nIBM JDKs throw a ZipException when \"new ZipFile()\" is called with an bad path. \n(i.e. something that is invalid or is not a zip file) The plugin classloader \nappears to be trying to create a new ZipFile for every library entry in the \nplugin.xml. This works fine for jar files, but fails with the following \nexception whenever the library is a directory entry:\n\njava.util.zip.ZipException: Access is denied\n        at java.util.zip.ZipFile.open(Native Method)\n        at java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:127)\n        at java.util.jar.JarFile.\u003cinit\u003e(JarFile.java:138)\n        at java.util.jar.JarFile.\u003cinit\u003e(JarFile.java:80)\n        at sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:526)\n        at sun.misc.URLClassPath$JarLoader.\u003cinit\u003e(URLClassPath.java:491)\n        at sun.misc.URLClassPath$2.run(URLClassPath.java:287)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at sun.misc.URLClassPath.getLoader(URLClassPath.java(Compiled Code))\n        at sun.misc.URLClassPath.getLoader(URLClassPath.java(Compiled Code))\n        at java.net.URLClassLoader$2.run(URLClassLoader.java(Compiled Code))\n        at java.net.URLClassLoader$2.run(URLClassLoader.java(Compiled Code))\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findResource(URLClassLoader.java(Compiled \nCode))\n        at \norg.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassResource\n(DelegatingURLClassLoader.java:445)\n        at \norg.eclipse.core.internal.plugins.PluginClassLoader.shouldLookForClass\n(PluginClassLoader.java:200)\n        at \norg.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf\n(PluginClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites\n(DelegatingURLClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites\n(DelegatingURLClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites\n(DelegatingURLClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites\n(DelegatingURLClassLoader.java(Compiled Code))\n        at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass\n(DelegatingURLClassLoader.java(Compiled Code))\n        at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass\n(DelegatingURLClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.defineClass0(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java(Compiled Code))\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java\n(Compiled Code))\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java(Compiled \nCode))\n        at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java(Compiled \nCode))\n        at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java(Compiled \nCode))\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf\n(PluginClassLoader.java(Compiled Code))\n        at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass\n(DelegatingURLClassLoader.java(Compiled Code))\n        at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass\n(DelegatingURLClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation\n(PluginDescriptor.java:654)\n        at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation\n(PluginDescriptor.java:182)\n        at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin\n(PluginClassLoader.java:58)\n        at \norg.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf\n(PluginClassLoader.java(Compiled Code))\n        at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass\n(DelegatingURLClassLoader.java(Compiled Code))\n        at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass\n(DelegatingURLClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))\n        at \norg.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension\n(PluginDescriptor.java:126)\n        at \norg.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension\n(PluginDescriptor.java:163)\n        at \norg.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension\n(ConfigurationElement.java:102)\n        ...\n\nIt looks like the directory entries are ignored after this exception, which can \ncause severe problems to plugins that depend on directories to load their \nclasses.",
    "Can you provide a test case?  I\u0027m not sure exactly what you\u0027re trying to do... \nAlso, please clarify exactly which JRE you get this error on.  You said IBM \nJDKs, but your stack trace suggests you\u0027re using Sun class libraries.",
    "To reproduce, add a directory library entry to an existing plugin\u0027s plugin.xml \nfile. For example:\n\n  \u003clibrary name\u003d\"bin\"/\u003e\n\nWhen this plugin is loaded on Sun JREs, this entry will be accepted and added \nto the classloader for the plugin. On recent IBM JREs (e.g. 1.3.1  \"java -\nversion\" shown below), a stack trace like the one included earlier will be \nthrown. The plugin will be unable to load classes or resources from the bin \ndirectory.\n\n   java version \"1.3.1\"\n   Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.1)\n   Classic VM (build 1.3.1, J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT \nenabled: jitc))\n\nThe sun.misc pacakge is shipped with practically every JRE (look in rt.jar). \nAlthough it\u0027s not API for users, Sun provides these classes to other vendors as \nutilities and to ship along with their runtimes.\n\n(FYI, the \"Access is denied\" exception is also thrown by the IBM JREs when \ngarbage is passed to the ZipFile constructor. You\u0027ll probably want to catch \nthis case also, in case the plugin.xml is incorrect)",
    "This is correct behaviour, you are missing a trailing slash.\n\nI see the same behaviour on the \n0603 build using both IBM jdk1.3.1-20020403 and IBM jre1.3.1-20020420.  When I added the trailing \nslash, the problem went away.\n\nThe plug-in manifest documentation states:\n(You can open \nhelp in the 0603 build and do a search for \"eclipse platform plug manifest\" to find this)\n\nThe \n\u003clibrary\u003e elements collectively define the plug-in runtime. At least one \u003clibrary\u003e must be \nspecified. Each \u003clibrary\u003e element has the following attributes: \n\nname - string reference to a \nlibrary file or directory containing classes (relative to the plug-in install directory). \nDirectory references must contain trailing file separator.\n\nRecommend: Closing \nWORKSFORME",
    "Closing.  Jed, thanks for pointing out the missing slash, I was having trouble \nreproducing it.\n\n",
    "Closing."
  ],
  "commentCreationDates": [
    "2002-05-31T22:29:46+02:00",
    "2002-05-31T23:31:49+02:00",
    "2002-06-01T00:00:20+02:00",
    "2002-06-03T23:17:30+02:00",
    "2002-06-07T17:30:00+02:00",
    "2006-06-14T20:35:21+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.zip.ZipException",
      "message": "Access is denied",
      "elements": [
        {
          "method": "java.util.zip.ZipFile.open",
          "source": "Native Method"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:127"
        },
        {
          "method": "java.util.jar.JarFile.\u003cinit\u003e",
          "source": "JarFile.java:138"
        },
        {
          "method": "java.util.jar.JarFile.\u003cinit\u003e",
          "source": "JarFile.java:80"
        },
        {
          "method": "sun.misc.URLClassPath$JarLoader.getJarFile",
          "source": "URLClassPath.java:526"
        },
        {
          "method": "sun.misc.URLClassPath$JarLoader.\u003cinit\u003e",
          "source": "URLClassPath.java:491"
        },
        {
          "method": "sun.misc.URLClassPath$2.run",
          "source": "URLClassPath.java:287"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "sun.misc.URLClassPath.getLoader",
          "source": "URLClassPath.java(Compiled Code)"
        },
        {
          "method": "sun.misc.URLClassPath.getLoader",
          "source": "URLClassPath.java(Compiled Code)"
        },
        {
          "method": "java.net.URLClassLoader$2.run",
          "source": "URLClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.net.URLClassLoader$2.run",
          "source": "URLClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findResource",
          "source": "URLClassLoader.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassResource",
          "source": "DelegatingURLClassLoader.java:445"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginClassLoader.shouldLookForClass",
          "source": "PluginClassLoader.java:200"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf",
          "source": "PluginClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.defineClass0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java (Compiled Code)"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java(Compiled  Code)"
        },
        {
          "method": "java.net.URLClassLoader$ClassFinder.run",
          "source": "URLClassLoader.java(Compiled  Code)"
        },
        {
          "method": "java.net.URLClassLoader$ClassFinder.run",
          "source": "URLClassLoader.java(Compiled  Code)"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf",
          "source": "PluginClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation",
          "source": "PluginDescriptor.java:654"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation",
          "source": "PluginDescriptor.java:182"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin",
          "source": "PluginClassLoader.java:58"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf",
          "source": "PluginClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass",
          "source": "DelegatingURLClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension",
          "source": "PluginDescriptor.java:126"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension",
          "source": "PluginDescriptor.java:163"
        },
        {
          "method": "org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:102"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "18519",
      "date": "2002-05-31T22:29:46+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "critical"
    }
  ],
  "groupId": "18519",
  "bugId": "18519",
  "date": "2002-05-31T22:29:46+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "critical"
}