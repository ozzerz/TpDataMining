{
  "comments": [
    "build: 20030107\n\nI got the following on a Japanese box.  The file that is being refreshed is \nnamed:  \"C:\\nativetest\\test\\??\"\n\nThis file is located in a folder that is linked to \"C:\\nativetest\".  In the \nworkspace, the project is named \"test\" and the folder (which is contained \ndirectly in the project) is named \"nativetest\".  The project is located in the \nworkspace folder.\n\njava.lang.IllegalArgumentException: Element not found: /test/nativetest/test/????.\n\n        at org.eclipse.core.internal.watson.ElementTree.elementNotFound(ElementT\nree.java:402)\n        at org.eclipse.core.internal.watson.ElementTree.createElement(ElementTre\ne.java:318)\n        at org.eclipse.core.internal.resources.Workspace.createResource(Workspac\ne.java:668)\n        at org.eclipse.core.internal.resources.Workspace.createResource(Workspac\ne.java:639)\n        at org.eclipse.core.internal.resources.Workspace.createResource(Workspac\ne.java:701)\n        at org.eclipse.core.internal.localstore.RefreshLocalVisitor.folderToFile\n(RefreshLocalVisitor.java:111)\n        at org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor.folderT\noFile(RefreshLocalAliasVisitor.java:63)\n        at org.eclipse.core.internal.localstore.RefreshLocalVisitor.synchronizeG\nender(RefreshLocalVisitor.java:196)\n        at org.eclipse.core.internal.localstore.RefreshLocalVisitor.visit(Refres\nhLocalVisitor.java:249)\n        at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.j\nava:71)\n        at org.eclipse.core.internal.localstore.FileSystemResourceManager.refres\nhResource(FileSystemResourceManager.java:512)\n        at org.eclipse.core.internal.localstore.FileSystemResourceManager.refres\nh(FileSystemResourceManager.java:498)\n        at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.ja\nva:1048)\n        at com.example.autorefresh.internal.RefreshManager.refreshAll(RefreshMan\nager.java:473)\n        at com.example.autorefresh.internal.RefreshManager.refreshDepthInfiniteR\nesources(RefreshManager.java:412)\n        at com.example.autorefresh.internal.RefreshManager.refresh0(RefreshManag\ner.java:273)\n        at com.example.autorefresh.internal.RefreshManager.access$1(RefreshManag\ner.java:262)\n        at com.example.autorefresh.internal.RefreshManager$2.run(RefreshManager.\njava:237)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1564\n)\n        at com.example.autorefresh.internal.RefreshManager.refresh(RefreshManage\nr.java:248)\n        at com.example.autorefresh.internal.RefreshManager.refresh(RefreshManage\nr.java:205)\n        at com.example.autorefresh.internal.RefreshManager.run(RefreshManager.ja\nva:181)\n        at java.lang.Thread.run(Thread.java:536)",
    "Rafael, please investigate. \nCo-ordinate efforts with John as he may be working in that space.\nThanks.",
    "Jed, could you provide the unicode codes for that file name? ",
    "Copied from the Eclispe variables view with \"display hexidecimal values\" turned \non.\n\n[0]\u003d c [\\\\u0063]\n[1]\u003d : [\\\\u003a]\n[2]\u003d \\\\ [\\\\u005c]\n[3]\u003d n [\\\\u006e]\n[4]\u003d a [\\\\u0061]\n[5]\u003d t [\\\\u0074]\n[6]\u003d i [\\\\u0069]\n[7]\u003d v [\\\\u0076]\n[8]\u003d e [\\\\u0065]\n[9]\u003d t [\\\\u0074]\n[10]\u003d e [\\\\u0065]\n[11]\u003d s [\\\\u0073]\n[12]\u003d t [\\\\u0074]\n[13]\u003d \\\\ [\\\\u005c]\n[14]\u003d t [\\\\u0074]\n[15]\u003d e [\\\\u0065]\n[16]\u003d s [\\\\u0073]\n[17]\u003d t [\\\\u0074]\n[18]\u003d \\\\ [\\\\u005c]\n[19]\u003d ?? [\\\\u3042]\n",
    "The following two bugs were found using my Autorefresh support.  I haven\u0027t\nproven if either of these bugs are my fault or core problems, otherwise I would\nhave forwarded them on, but they may help you find this bug.\n\nhttp://dev.eclipse.org/bugs/show_bug.cgi?id\u003d27813 [autorefresh] NPE in\nUnifiedTree during filesystem poll\nhttp://dev.eclipse.org/bugs/show_bug.cgi?id\u003d27844 [autorefresh] ClassCastExpression\n",
    "I tried to reproduce this error with no success (everything went fine).\n\nSteps:\n1 - created external folder c:\\nativetest\\test\n2 - created project test\n3 - created folder named nativetest in project test pointing to c:\\nativetest.\n4 - created externally file with name \"\\u3042\" in c:\\nativetest\\test\n5 - refreshed the project - the file just created appears with correct name and \nproducing no errors.\n\nJed, can you reproduce the problem with a recent build? Am I missing any step? \nBy the way, which VM are you using when having this problem? \n\nSomething that is really weird is that the stack trace shows that the resource \nalready existed before refreshing but it was known as a folder and has been \ndiscovered as a file in the file system.",
    "Try this path:\n\n1. Start Eclipse on a fresh workspace, c:\\UnicodeTestWorkspace.\n2. Create a simple project named test (no japanese characters in the pathname \nyet).\n3. In the windows explorer, create a _folder_ named \\u3042.\n4. Refresh the project, the folder will appear as a file!  \n\nWhen you double click the file you will see a simple little editor that tells \nyou, \"Resource /Test/\\u3042 does not exist.\" (it actually uses the japanese \ncharacter instead of \\u3042).  The file will be removed from the project in the \nnavigator.",
    "This looks like a duplicate of bug 13463.",
    "John, but isn\u0027t that bug related to filenames containing characters that are \nnot supported using the default encoding?\n\nIt seems here there is a different issue: the problem Jed is facing is \nhappening in a Japanese box, with file whose filename is made of as Japanese \ncharacter (\\u3042 is properly recognized using the Windows Japanese (MS932) \nencoding).\n\nUnless Jed\u0027s configuration does not have MS932 as the default encoding. Could \nyou run the program ShowEncoding (will attach) to see what the default encoding \nin your machine is, Jed (should be MS932)? Thanks, again.",
    "Created an attachment (id\u003d3104)\nSource/.class for ShowEncoding program\n",
    "John, excellent advice!\n\nI took out the core natives, and this bug disappears.  I will annotate 13463 as\nwell to indicate this.\n\nI took a look at the natives.  I am surprised that they work on DBCS boxes.  On\nNT/2K/XP, you must prepend \"\\\\?\\\" to any path to force windows to make a unicode\ncall.  We are not doing this at all.  Also, the getPlatformBytes might not be\nnecessary at all (I am still wading through MSDN looking for clues on this). \nAny info the core team has on this would be most helpful for me (I am writing\nnatives for the the autorefresh support).\n\nIf no one on your team has experience writing natives (I know Rodrigo is working\non something else), I would like to take a stab at re-writing the natives to see\nif I can make this problem go away.",
    "I have been looking into this a little and talking with SWT folks.\n\nBasically what is happening is that in our DLL we are calling the FindFirstFile \nwindows call in all cases. We should be attempting to call the Unicode version \nof this function if it is available.\n\nHow to determine which function to call? SWT has code which figures out if we \ncan make the Unicode call or not. See the static initializer of the \norg.eclipse.swt.internal.win32.OS class.\n",
    "Jed, I actually don\u0027t have experience with it but I\u0027ll be working on this issue \nas well. But of course we would appreciate if you share your findings, and feel \nfree to propose any patches to the Core DLL regarding this issue.\n\nBy the way, have you figured out if your default encoding was incorrect?\n",
    "I have a method which determines if the user is running on NT/2K/XP.  This was a\nquick hack I wrote until I could figure out the \"correct\" way to write this\nmethod (which is to query whether the OS has unicode support installed (all\nNT/2K/XP boxes should)).\n\n/*\n * Class:     com_example_autorefresh_win32_internal_Win32Natives\n * Method:    supportsLongFilenames\n * Signature: ()Z\n */\nJNIEXPORT jboolean JNICALL\nJava_com_example_autorefresh_win32_internal_Win32Natives_LongFilenamesSupported\n  (JNIEnv *env, jclass this) {\n  \tOSVERSIONINFO osvi;\n  \tmemset(\u0026osvi, 0, sizeof(OSVERSIONINFO));\n  \tosvi.dwOSVersionInfoSize \u003d sizeof(OSVERSIONINFO);\n  \tif (! GetVersionEx (\u0026osvi) ) \n    \treturn JNI_FALSE;\n    if (osvi.dwMajorVersion \u003e\u003d 5)\n    \treturn JNI_TRUE;\n    return JNI_FALSE;\n}",
    "New DLL has been created and released.\nMarking as duplicate.\n\n*** This bug has been marked as a duplicate of 13463 ***",
    "DJ, please see\nhttp://msdn.microsoft.com/library/default.asp?url\u003d/library/en-us/fileio/base/getfileattributes.asp\n\nThe doc indicates that we need to prepend \\\\?\\ to the paths.  I didn\u0027t see this\nin your fix, but then this advice could be a red herring.",
    "Jed, you need to prepend \\\\?\\ only if you want to extend the path string limit \nto 32K -1 chars. Despite it can be interesting, it is not mandatory. What maybe \nis confusing you is the fact that you only can use this feature when using the \nUnicode version of the functions.\n\nBy the way, if you looked at the code, you probably noticed we borrowed your \nsnippet for platform identification. Thanks!",
    "Hey, thanks for the credit!\n\nDo we not want to extend the maximum length of the filename to 2^15 - 1?  I\nremember running into problems years ago in VAJ with filename maximums.  This\nfeels like an easy fix for much improved functionality.",
    "I thought about it, but I wonder if there are any additional performance costs \nwhen using that notation. I haven\u0027t read/heard anything about it, nor run any \nperformance tests, but I tried to keep the new code as close to what we had \nbefore as possible so we don\u0027t get any surprises now that we are starting to \nbuild 2.1 RCs.\n\nI agree, we should consider using the \\\\?\\ notation for extending path length \nlimits. I just opened a feature request for it: bug 30995."
  ],
  "commentCreationDates": [
    "2003-01-15T22:38:43+01:00",
    "2003-01-16T15:28:02+01:00",
    "2003-01-16T18:23:53+01:00",
    "2003-01-16T19:09:40+01:00",
    "2003-01-16T19:30:38+01:00",
    "2003-01-21T22:46:09+01:00",
    "2003-01-22T23:18:20+01:00",
    "2003-01-23T14:46:38+01:00",
    "2003-01-23T16:19:04+01:00",
    "2003-01-23T16:20:30+01:00",
    "2003-01-23T17:29:49+01:00",
    "2003-01-23T17:39:56+01:00",
    "2003-01-23T18:47:04+01:00",
    "2003-01-23T18:54:09+01:00",
    "2003-02-04T22:50:59+01:00",
    "2003-02-04T23:57:17+01:00",
    "2003-02-05T02:19:20+01:00",
    "2003-02-05T17:49:40+01:00",
    "2003-02-05T18:14:13+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Element not found: /test/nativetest/test/????.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.watson.ElementTree.elementNotFound",
          "source": "ElementT ree.java:402"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTree.createElement",
          "source": "ElementTre e.java:318"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.createResource",
          "source": "Workspac e.java:668"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.createResource",
          "source": "Workspac e.java:639"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.createResource",
          "source": "Workspac e.java:701"
        },
        {
          "method": "org.eclipse.core.internal.localstore.RefreshLocalVisitor.folderToFile",
          "source": "RefreshLocalVisitor.java:111"
        },
        {
          "method": "org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor.folderToFile",
          "source": "RefreshLocalAliasVisitor.java:63"
        },
        {
          "method": "org.eclipse.core.internal.localstore.RefreshLocalVisitor.synchronizeGender",
          "source": "RefreshLocalVisitor.java:196"
        },
        {
          "method": "org.eclipse.core.internal.localstore.RefreshLocalVisitor.visit",
          "source": "Refres hLocalVisitor.java:249"
        },
        {
          "method": "org.eclipse.core.internal.localstore.UnifiedTree.accept",
          "source": "UnifiedTree.j ava:71"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource",
          "source": "FileSystemResourceManager.java:512"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh",
          "source": "FileSystemResourceManager.java:498"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.refreshLocal",
          "source": "Resource.ja va:1048"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.refreshAll",
          "source": "RefreshMan ager.java:473"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.refreshDepthInfiniteResources",
          "source": "RefreshManager.java:412"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.refresh0",
          "source": "RefreshManag er.java:273"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.access$1",
          "source": "RefreshManag er.java:262"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager$2.run",
          "source": "RefreshManager. java:237"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1564 "
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.refresh",
          "source": "RefreshManage r.java:248"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.refresh",
          "source": "RefreshManage r.java:205"
        },
        {
          "method": "com.example.autorefresh.internal.RefreshManager.run",
          "source": "RefreshManager.ja va:181"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:536"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "29584",
      "duplicateId": "13463",
      "date": "2003-01-15T22:38:43+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "13463",
  "bugId": "29584",
  "duplicateId": "13463",
  "date": "2003-01-15T22:38:43+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}