{
  "comments": [
    "Hi,\nThe following Code:\n\tstatic class Container\u003cT\u003e{\n\t    private T val;\n\t    public T getVal() {\n\t        return val;\n\t    }\n\t    public void setVal(T val) {\n\t        this.val \u003d val;\n\t    }\n\t}\n\tpublic static void badMethod(Container\u003c?\u003e param){\n\t    Container x\u003dparam;\n\t    x.setVal(\"BAD\");\n\t}\n\tpublic static void main(String[] args) {\n\t    Container\u003cInteger\u003e cont\u003dnew Container\u003cInteger\u003e();\n\t    cont.setVal(new Integer(0));\n\t    badMethod(cont);\n\t    System.out.println(cont.getVal()); //ClassCastException\n}\nleads to:\nException in thread \"main\" java.lang.ClassCastException: java.lang.String\n\tat SpecialTest.main(SpecialTest.java:57)\nwhen executed within Eclipse.\nBut JVM just prints: BAD",
    "Looks like javac doesn\u0027t perform the checkcast, and thus doesn\u0027t notice the \nproblem.\nIf replacing line:\n\t    System.out.println(cont.getVal()); //ClassCastException\nwith:\n\t    Integer someVal \u003d cont.getVal();\n\nThen it will generate the checkcast, and thus raise the ClassCastException.\n",
    "We should be more permissive in generic cast emission. If the type expectation \nis lower, we should not check as much.\ne.g.\nInteger val1 \u003d cont.getVal();  // checkcast Integer\nNumber val2 \u003d cont.getVal();  // checkcast Number\nObject val3 \u003d cont.getVal();  // no checkcast ",
    "Tuned generic cast to be less strict so as to only match expectation.\nAdded regression tests GenericTypeTest#test232-239.\n\nFixed"
  ],
  "commentCreationDates": [
    "2004-07-08T00:15:36+02:00",
    "2004-07-08T17:54:07+02:00",
    "2004-07-08T18:09:15+02:00",
    "2004-07-09T23:29:47+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "java.lang.String",
      "elements": [
        {
          "method": "SpecialTest.main",
          "source": "SpecialTest.java:57"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "69542",
      "date": "2004-07-08T00:15:36+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "69542",
  "bugId": "69542",
  "date": "2004-07-08T00:15:36+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}