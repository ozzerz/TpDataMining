{
  "comments": [
    "Build ID: 20061205-2344\n\nSteps To Reproduce:\n1. Edit a Task (or Role or Work Product)\n2. Open the Roles (or Work Products or Guidance or Categories) tab\n3. Click the Add... (or Select...) button\n4. Nothing happens\n\n\nMore information:\nThe \"Add...\" and \"Select...\" buttons that generate pop-ups to select Method Elements are not working. I click the button, get visual feedback (button color and brief hourglass) but no pop-up.\n\nI see this when I try to Select... the \"Primary performer\" for a Task, or Add... \"Additional performers\" (on the Roles tab), or similar operations on the Work Products tab or even other object types. Same problem whether trying to add/select Roles, Work Products, Guidance, or Categories.\n\nThis was all working early last week, then boom, it stopped! I\u0027m stuck and cannot do any meaningful authoring until I get this resolved.\n\nI\u0027ve tried completely removing epf-composer and my workspace and starting from scratch, with no difference. What\u0027s particularly grating about this bug is that it\u0027s totally silent. I get none of the usually helpful feedback that accompanies other errors I\u0027ve encountered.\n\nHas anyone seen this/got a solution?",
    "Additional information:\n1) The select dialog for adding Configuration Views works OK.\n\n2) I found the following in the .metadata/.log file corresponding to this problem, indicating a stack overflow. I get these results every time I click Add...:\n\n!ENTRY org.eclipse.ui 4 0 2007-01-23 11:22:56.222\n!MESSAGE java.lang.StackOverflowError\n!STACK 0\njava.lang.StackOverflowError\n\tat org.eclipse.emf.ecore.util.EcoreEList.resolveProxy(EcoreEList.java:192)\n\tat org.eclipse.emf.ecore.util.EcoreEList.resolve(EcoreEList.java:152)\n\tat org.eclipse.emf.ecore.util.EObjectResolvingEList.resolve(EObjectResolvingEList.java:58)\n\tat org.eclipse.emf.common.util.BasicEList.get(BasicEList.java:514)\n\tat org.eclipse.emf.common.util.BasicEList$EIterator.next(BasicEList.java:1274)\n\tat java.util.AbstractCollection.containsAll(Unknown Source)\n\tat org.eclipse.epf.library.edit.util.Misc.getAllBase(Misc.java:147)\n\tat org.eclipse.epf.library.edit.util.Misc.getAllBase(Misc.java:152)\n\tat org.eclipse.epf.library.edit.util.Misc.getAllBase(Misc.java:152)\n\tat org.eclipse.epf.library.edit.util.Misc.getAllBase(Misc.java:152)\n\t... [last line repeated hundreds of times to the end of the file]",
    "The likely cause is somehow your library got corrupted. The getAllBase method is trying to get all the base plug-ins given a particular plug-in. So my guess by some special scenatios, there may be a circular dependency introduced amongb plgu-ins referencing others. Please double chech that and let us know. If that\u0027s the case, we\u0027d need to improve the dection and prevetion of that situation.",
    "I eliminated the symptoms by breaking a circular reference in my method plug-ins. No idea how the reference was created initially, though.\n\nNo recommendation as to what further action should be taken - At a minimum the user should get an error message with some hint that the stack overflow may be the result of a circular reference - so they can try to find it. The silent failure was the most disconcerting part of all this.\n\nBTW, I\u0027m removing my vote for this bug - selfish, but now that I know how to diagnose the symtom, recurrence is not a problem for me, at least.",
    "EPF 1.2 will have an extensive circular dependency check mechanism for variability built into so it should catch as many similar issues as possible.\n\nFrom this bug, EPF 1.2 should also implement a more robust circular dependcy check among all the plug-ins.",
    "A more extensive circular dependency check has been implemented. ",
    "cannot reproduce the problem in build 1.2 v20070313-1730",
    "Bug is fixed indirectly by circular dependency checking.\n\nCannot reproduce it on EPF 1.2 20070315-1820.",
    "Verified. Closed."
  ],
  "commentCreationDates": [
    "2007-01-23T01:35:54+01:00",
    "2007-01-23T19:37:05+01:00",
    "2007-01-23T23:28:22+01:00",
    "2007-02-05T21:25:15+01:00",
    "2007-02-06T18:50:52+01:00",
    "2007-03-13T23:04:29+01:00",
    "2007-03-15T01:43:48+01:00",
    "2007-03-17T00:09:19+01:00",
    "2007-03-17T00:10:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.util.EcoreEList.resolveProxy",
          "source": "EcoreEList.java:192"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EcoreEList.resolve",
          "source": "EcoreEList.java:152"
        },
        {
          "method": "org.eclipse.emf.ecore.util.EObjectResolvingEList.resolve",
          "source": "EObjectResolvingEList.java:58"
        },
        {
          "method": "org.eclipse.emf.common.util.BasicEList.get",
          "source": "BasicEList.java:514"
        },
        {
          "method": "org.eclipse.emf.common.util.BasicEList$EIterator.next",
          "source": "BasicEList.java:1274"
        },
        {
          "method": "java.util.AbstractCollection.containsAll",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.epf.library.edit.util.Misc.getAllBase",
          "source": "Misc.java:147"
        },
        {
          "method": "org.eclipse.epf.library.edit.util.Misc.getAllBase",
          "source": "Misc.java:152"
        },
        {
          "method": "org.eclipse.epf.library.edit.util.Misc.getAllBase",
          "source": "Misc.java:152"
        },
        {
          "method": "org.eclipse.epf.library.edit.util.Misc.getAllBase",
          "source": "Misc.java:152"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "171336",
      "date": "2007-01-23T19:37:05+01:00",
      "product": "EPF",
      "component": "Tool",
      "severity": "major"
    }
  ],
  "groupId": "171336",
  "bugId": "171336",
  "date": "2007-01-23T01:35:54+01:00",
  "product": "EPF",
  "component": "Tool",
  "severity": "major"
}