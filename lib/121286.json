{
  "comments": [
    "I have a refresh provider that is used to work with our team provider providing notification of CM changes.  The refresh provider\u0027s installMonitor method (in 3.0.x) is called and I perform some checks to make sure that the project and any linked resources should be monitored by my refresh provider.  In the case of a linked resource an IResource.getLocation() would return the actual filesystem location (required otherwise I cannot tell if it is under my CM system).  With 3.0.x this worked as expected, and I am able to check and make sure that the linked resource location is in fact under my CM system\u0027s control.  Evidently as of 3.1 (and I also have found this to be the case as of 3.2 M3),  instead of providing the filesystem location of the linked resource, IResource.getLocation() returns the location of the *project the linked resource is located in* appended with the name of the linked resource.  \n\nPlease note, this problem ONLY occurs when I create a new linked resource in 3.1 and later, it does not occur in 3.1 upon a restart of the workbench.  It does not occur at all in 3.0.x.  This also occurs on Win32 and Linux.\n\nFor example, suppose you have project1 that is being monitored.  If I then create a linked resource:\nP/project1/lnkedRes (residing in /home/eclipseprojects/project1...)\n\nwith lnkedRes pointing to: \n/foo/bar/extra/resources\n\nThe following things are observed:\n\nUnder 3.0.x, IResource.getLocation() would return \"/foo/bar/extra/resources\" while under 3.1 and later I am finding it returns:\n/home/eclipseprojects/project1/lnkedRes\n\nAlso, since I set session properties on the resources that I monitor, if I then attempt to do an IResource.getSessionProperty()... under 3.0.x, I just get a null back, but in 3.1 there is an existence check on the linked resource that fails with a \"does not exist\" resource exception:\n\norg.eclipse.core.internal.resources.ResourceException: Resource /linuxTestProject12/z does not exist.\nat org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:304)\nat org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:172)\nat org.eclipse.core.internal.resources.Resource.getSessionProperty(Resource.java:982)\nat com.ibm.rational.clearcase.ccrefresh.CcRefreshProvider.canAddResourceToMonitor(CcRefreshProvider.java:151)\nat com.ibm.rational.clearcase.ccrefresh.CcRefreshProvider.installMonitor(CcRefreshProvider.java:89)\nat org.eclipse.core.internal.refresh.MonitorManager.safeInstallMonitor(MonitorManager.java:249)\nat org.eclipse.core.internal.refresh.MonitorManager.monitor(MonitorManager.java:147)\nat org.eclipse.core.internal.refresh.MonitorManager.handleEvent(MonitorManager.java:116)\nat org.eclipse.core.internal.resources.Workspace.broadcastEvent(Workspace.java:195)\nat org.eclipse.core.internal.resources.Resource.createLink(Resource.java:583)\nat org.eclipse.ui.dialogs.WizardNewFolderMainPage.createFolder(WizardNewFolderMainPage.java:199)\nat org.eclipse.ui.dialogs.WizardNewFolderMainPage$3.execute(WizardNewFolderMainPage.java:298)\nat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:98)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)\nat org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:110)\nat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",
    "John, I added you to the cc\u0027d list for this item since it appears that it\u0027s still in the inbox at the moment...",
    "Sigh... after some digging it looks like this was introduced while fixing another bug from you: bug 79194.  I changed to call refresh providers before the operation instead of after, so that the deletion case would be handled correctly.  It seems like I need to call refresh providers *after* creation events and *before* deletion events.",
    "Fixed.\n\nAs a heads up, be careful about calling IResource#getLocation() in 3.2.  It will return null in the case where the resource is not stored in the local file system.  In this case your refresh provider should just return null from the installMonitor method.",
    "Is there going to be a 3.1.3 perchance?",
    "There is currently no 3.1.3 release scheduled."
  ],
  "commentCreationDates": [
    "2005-12-16T21:55:18+01:00",
    "2006-02-03T20:05:25+01:00",
    "2006-02-06T21:13:16+01:00",
    "2006-02-06T22:03:33+01:00",
    "2006-02-06T22:14:02+01:00",
    "2006-02-07T14:33:50+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Resource /linuxTestProject12/z does not exist.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkExists",
          "source": "Resource.java:304"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkAccessible",
          "source": "Resource.java:172"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.getSessionProperty",
          "source": "Resource.java:982"
        },
        {
          "method": "com.ibm.rational.clearcase.ccrefresh.CcRefreshProvider.canAddResourceToMonitor",
          "source": "CcRefreshProvider.java:151"
        },
        {
          "method": "com.ibm.rational.clearcase.ccrefresh.CcRefreshProvider.installMonitor",
          "source": "CcRefreshProvider.java:89"
        },
        {
          "method": "org.eclipse.core.internal.refresh.MonitorManager.safeInstallMonitor",
          "source": "MonitorManager.java:249"
        },
        {
          "method": "org.eclipse.core.internal.refresh.MonitorManager.monitor",
          "source": "MonitorManager.java:147"
        },
        {
          "method": "org.eclipse.core.internal.refresh.MonitorManager.handleEvent",
          "source": "MonitorManager.java:116"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastEvent",
          "source": "Workspace.java:195"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.createLink",
          "source": "Resource.java:583"
        },
        {
          "method": "org.eclipse.ui.dialogs.WizardNewFolderMainPage.createFolder",
          "source": "WizardNewFolderMainPage.java:199"
        },
        {
          "method": "org.eclipse.ui.dialogs.WizardNewFolderMainPage$3.execute",
          "source": "WizardNewFolderMainPage.java:298"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:98"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1719"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:110"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "121286",
      "date": "2005-12-16T21:55:18+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "121286",
  "bugId": "121286",
  "date": "2005-12-16T21:55:18+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}