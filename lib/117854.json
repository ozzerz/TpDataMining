{
  "comments": [
    "Hi,\n\nI\u0027ve enabled LTW in my project which is using Hibernate. Hibernate\u0027s framework produces cglib generated proxies for several classes.\nThe problem is, when LTW is enabled the generated proxies throw this exception:\n\nproxy.CGLIBLazyInitializer (CGLIBLazyInitializer.java:104) - CGLIB Enhancement failed: com.mprv.secsph.profile.domain.UrlItem\njava.lang.VerifyError: (class: com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$859d1101, method: changeItemMode signature: (Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z) Inconsistent stack height 2 \n        at java.lang.Class.getDeclaredMethods0(Native Method)\n        at java.lang.Class.privateGetDeclaredMethods(Class.java:2365)\n        at java.lang.Class.getDeclaredMethod(Class.java:1907)\n        at net.sf.cglib.proxy.Enhancer.getCallbacksSetter(Enhancer.java:597)\n        at net.sf.cglib.proxy.Enhancer.setCallbacksHelper(Enhancer.java:585)\n        at net.sf.cglib.proxy.Enhancer.setThreadCallbacks(Enhancer.java:579)\n        at net.sf.cglib.proxy.Enhancer.createUsingReflection(Enhancer.java:601)\n        at net.sf.cglib.proxy.Enhancer.firstInstance(Enhancer.java:532)\n        at net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:220)\n        at net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:373)\n        at net.sf.cglib.proxy.Enhancer.create(Enhancer.java:281)\n        at net.sf.cglib.proxy.Enhancer.create(Enhancer.java:640)\n        at org.hibernate.proxy.CGLIBLazyInitializer.getProxyFactory(CGLIBLazyInitializer.java:95)\n        at org.hibernate.proxy.CGLIBProxyFactory.postInstantiate(CGLIBProxyFactory.java:42)\n        at org.hibernate.tuple.PojoTuplizer.buildProxyFactory(PojoTuplizer.java:144)\n        at org.hibernate.tuple.AbstractTuplizer.\u003cinit\u003e(AbstractTuplizer.java:83)\n        at org.hibernate.tuple.PojoTuplizer.\u003cinit\u003e(PojoTuplizer.java:54)\n        at org.hibernate.tuple.TuplizerLookup.create(TuplizerLookup.java:47)\n        at org.hibernate.tuple.EntityMetamodel.\u003cinit\u003e(EntityMetamodel.java:218)\n        at org.hibernate.persister.entity.BasicEntityPersister.\u003cinit\u003e(BasicEntityPersister.java:400)\n        at org.hibernate.persister.entity.SingleTableEntityPersister.\u003cinit\u003e(SingleTableEntityPersister.java:104)\n        at org.hibernate.persister.PersisterFactory.createClassPersister(PersisterFactory.java:55)\n        at org.hibernate.impl.SessionFactoryImpl.\u003cinit\u003e(SessionFactoryImpl.java:211)\n        at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1005)\n        ?\n\nNotice: class com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$859d1101 was woven by AspectJ.\n\nAccording to the long discussion in the mailing list (http://dev.eclipse.org/mhonarc/lists/aspectj-dev/msg01869.html), I understand that the problem with AjAttribute should affect only AspectJ functionality, because someone who is \"lower\" in the stack (ASM or whatever) ignores those attributes on it\u0027s way. \n\nBut here we are seeing something else. CGLIB is the one which fails ? \n\nIs it something new, or I\u0027m running into the same bug?\n\nThanks a lot! \nMisha.\n\nP.S. Andy, i think that binary weaving wouldn\u0027t cause this problem, because generated classes doesn\u0027t exist at this point.\n\nThanks!",
    "Can you tell me what the setup is? Are the CGLIB proxies generated offline i.e. do they exist before you start the system or are they generated online? Have you configured LTW using -javaagent? Can you post the aspect you are using?\n\nThanks",
    "The details are:\n\nHibernate 3.0.5 - CGLib and ASM libraries are those which bundled with this Hibernate version.\n\nAspectJ - Dev. build from yesterday (Nov 23).\n\nCGLIB proxies are generated online - they don\u0027t before the system starts. Take a look at Hibernate\u0027s CGLIBLazyInitializer class. \n\nYes, I\u0027ve configured LTW using -javaagent option.\n\nThe aspect, I think, have to contain \"method-execution\" pointcat which refers to getters/setters in the domain objects which are mapped to DB with Hibernate.\n(I hope it was understandable sentence :-) ).\n\nIf you need something, I\u0027m here.\nThanks!",
    "I meant: \" ... they don\u0027t exist ...\"",
    "We are building a new version of AspectJ that will allow the dumping of selected byte-code both before and after weaving. There may be a problem weaving the generated byte-code. Does your aspect use \"around\" advice?",
    "Created an attachment (id\u003d30622)\nAllow dump both before and after LTW\n\n1. Added support for \u003cweaver\u003e\u003cdump within\u003d\"com.*\" beforeandafter\u003d\"true\"/\u003e in aop.xml to allow dumping of generated proxies both before and after weaving\n2. Moved dump() method into WeavingAdaptor\n3. Added new dump tests",
    "patches checked in.",
    "Yes, I have an around advices.\nI\u0027ll post the dumps right after the new DEV build will be available.\n\nThanks!",
    "There is now a special build available: http://www.eclipse.org/downloads/download.php?file\u003d/technology/aspectj/dev/aspectj-DEVELOPMENT-maw.jar\n\nPlease include the appropriate entry in your aop.xml files to dump the generated files both before and after weaving:\n\n\u003cweaver options\u003d\"-verbose\"\u003e\u003cdump within\u003d\"*\" beforeandafter\u003d\"true\"/\u003e\n",
    "Created an attachment (id\u003d30762)\nDump + weaver output + application log\n\nHi,\n\nI\u0027m attaching the requested dump and log files. When you will open the tar, you will find:\n\n1. _ajdump - I intentionally left only the relevant packages (you know, we are a commercial company :-) ): \n\n   * com/mprv/secsph/profile/changes - contains compiled Aspects\n   * com/mprv/secsph/profile/domain - contains Hibernate\u0027s domain objects. Here Hibernate generates it\u0027s proxies at runtime.\n   \n   * com/mprv/secsph/profiling/impl - contains code which is proxied by Spring - also at runtime\n\n2. application.log - Log4J output - Here you will find the exceptions which we are trying to fix :) thrown by CGLib.\n\n3. output.log - mostly weaver output (-showWeaveInfo -verbose)\n\nIf i\u0027ve missed something, tell me.\nThanks!",
    "First impressions:\n- All the VerifyError exceptions are caused CGLIB generated classes which have a name containing 2 consecutive $ symbols. Some fail with \"Inconsistent stack height\", others with \"Illegal instruction\".\n- Unfortunately we do not have the dumped bytecode for any of the generated classes. This is possible because the \"shouldDump()\" method in ClassLoaderWeavingAdaptor tries to resolve the type whixh will of course fail. The matching logic needs to cope with generated code (including closures which cannot be dumped for a similar reason).\n- There are a _lot_ of [Xlint:adviceDidNotMatch] messages, one for each piece of advice in each aspect that does not match the particular class being woven. This is highly likely in a large system using multiple (11) aspects. I think this warning should be automatically suppressed but overrideable for LTW.",
    "Starting with com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$b7f17874\n\napplication.log\n\"2005-11-29 11:40:14,989 ERROR [Server Startup] proxy.CGLIBLazyInitializer (CGLIBLazyInitializer.java:104) - CGLIB Enhancement failed: com.mprv.secsph.profile.domain.UrlItem\n\"java.lang.VerifyError: (class: com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$b7f17874, method: changeItemMode signature: (Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z) Inconsistent stack height 2 \n\tat java.lang.Class.getDeclaredMethods0(Native Method)\n\tat java.lang.Class.privateGetDeclaredMethods(Class.java:2365)\n\tat java.lang.Class.getDeclaredMethod(Class.java:1907)\n\tat net.sf.cglib.proxy.Enhancer.getCallbacksSetter(Enhancer.java:597)\n\tat net.sf.cglib.proxy.Enhancer.setCallbacksHelper(Enhancer.java:585)\n\tat net.sf.cglib.proxy.Enhancer.setThreadCallbacks(Enhancer.java:579)\n\tat net.sf.cglib.proxy.Enhancer.createUsingReflection(Enhancer.java:601)\n\tat net.sf.cglib.proxy.Enhancer.firstInstance(Enhancer.java:532)\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:220)\n\tat net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:373)\n\tat net.sf.cglib.proxy.Enhancer.create(Enhancer.java:281)\n\tat net.sf.cglib.proxy.Enhancer.create(Enhancer.java:640)\n\tat org.hibernate.proxy.CGLIBLazyInitializer.getProxyFactory(CGLIBLazyInitializer.java:95)\n\tat org.hibernate.proxy.CGLIBProxyFactory.postInstantiate(CGLIBProxyFactory.java:42)\n\tat org.hibernate.tuple.PojoTuplizer.buildProxyFactory(PojoTuplizer.java:144)\n\tat org.hibernate.tuple.AbstractTuplizer.\u003cinit\u003e(AbstractTuplizer.java:83)\n\tat org.hibernate.tuple.PojoTuplizer.\u003cinit\u003e(PojoTuplizer.java:54)\n\tat org.hibernate.tuple.TuplizerLookup.create(TuplizerLookup.java:47)\n\tat org.hibernate.tuple.EntityMetamodel.\u003cinit\u003e(EntityMetamodel.java:218)\n\tat org.hibernate.persister.entity.BasicEntityPersister.\u003cinit\u003e(BasicEntityPersister.java:400)\n\tat org.hibernate.persister.entity.SingleTableEntityPersister.\u003cinit\u003e(SingleTableEntityPersister.java:104)\n\tat org.hibernate.persister.PersisterFactory.createClassPersister(PersisterFactory.java:55)\n\tat org.hibernate.impl.SessionFactoryImpl.\u003cinit\u003e(SessionFactoryImpl.java:211)\n\tat org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1005)\n\tat org.springframework.orm.hibernate3.LocalSessionFactoryBean.newSessionFactory(LocalSessionFactoryBean.java:758)\n\tat org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:685)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:937)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:146)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:271)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:310)\n\tat org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:133)\n\tat com.mprv.secsph.migration.MigrationListener.loadAppContext(MigrationListener.java:122)\n\tat com.mprv.secsph.migration.MigrationListener.contextInitialized(MigrationListener.java:50)\n\tat com.mprv.secsph.server.loader.AsyncServletContextListener$1.run(AsyncServletContextListener.java:67)\n\tat java.lang.Thread.run(Thread.java:595)\n\n\noutput.log\ninfo weaving \u0027com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$b7f17874\u0027\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setSubclassDefaultFieldValues(com.mprv.secsph.profile.domain.ProfileItem))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setSubTreeCounterHib(com.mprv.secsph.profile.domain.SubTreeCounterUrls))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setIsLocked(com.mprv.secsph.profile.domain.IsLockedProperty))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setBindingUrls(com.mprv.secsph.profile.domain.BindingUrlsProperty))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setObservedSoapOccurrences(com.mprv.secsph.profile.domain.SlidingCounter))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setObservedStandardHttpOccurrences(com.mprv.secsph.profile.domain.SlidingCounter))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedSoap(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:40) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedSoap(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedSoap(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedSoap(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ProfileChangeLogManager\u0027 (ProfileChangeLogManager.aj:153) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedStandardHttp(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:40) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedStandardHttp(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedStandardHttp(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDecidedStandardHttp(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ProfileChangeLogManager\u0027 (ProfileChangeLogManager.aj:153) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setSoapActions(java.util.Set))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setSoapActions(java.util.Set))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setParameters(java.util.Set))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setParameters(java.util.Set))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setPrefixParameters(java.util.Set))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setPrefixParameters(java.util.Set))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setFullPath(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setFullPath(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStartingUrl(com.mprv.secsph.profile.domain.IsStartingProperty))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setLinkStatus(com.mprv.secsph.profile.domain.LinkStatusProperty))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setAllowedMethods(com.mprv.secsph.profile.domain.AllowedMethodsProperty))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setLatency(com.mprv.secsph.profile.domain.LatencyProperty))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setWebApplicationItem(com.mprv.secsph.profile.domain.WebApplicationItem))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setFolderItem(com.mprv.secsph.profile.domain.FolderItem))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setParent(com.mprv.secsph.profile.domain.ProfileItem))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatus(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatus(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatus(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ProfileChangeLogManager\u0027 (ProfileChangeLogManager.aj:127)\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDBPK(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDBPK(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemId(com.mprv.secsph.profile.domain.ProfileItemId))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDn(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setDn(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setParentId(com.mprv.secsph.profile.domain.ProfileItemId))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setProtectionMode(com.mprv.secsph.profile.domain.ProfileItem$ProtectionMode))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:28) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setProtectionMode(com.mprv.secsph.profile.domain.ProfileItem$ProtectionMode))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setProtectionMode(com.mprv.secsph.profile.domain.ProfileItem$ProtectionMode))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.AtomicOperationMarker\u0027 (AtomicOperationMarker.aj:23) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setProtectionMode(com.mprv.secsph.profile.domain.ProfileItem$ProtectionMode))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemConverged(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemConverged(java.lang.Boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemStatusStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemStatusStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setProtectionModeStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setProtectionModeStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setRecommendedStatus(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setRecommendedStatus(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemRecommendedStatusStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setItemRecommendedStatusStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatusReasonStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatusReasonStr(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatusReason(com.mprv.secsph.profile.domain.ProfileItem$StatusReason))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setStatusReason(com.mprv.secsph.profile.domain.ProfileItem$StatusReason))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setCreateTime(java.util.Date))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setLastUpdate(long))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setLastUpdate(long))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setLastUpdateTime(java.util.Date))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setLastStatusChangeTime(java.util.Date))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setObservedOccurrence(com.mprv.secsph.profile.domain.SlidingCounter))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setObservedOccurrenceSinceLastStatusChange(com.mprv.secsph.profile.domain.SlidingCounter))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setParentDBPK(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setParentDBPK(java.lang.String))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setIsNew(boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by after advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordManager\u0027 (ChangeRecordManager.aj:53) [with runtime test]\nweaveinfo Join point \u0027method-execution(void com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874.setIsNew(boolean))\u0027 in Type \u0027com.mprv.secsph.profile.domain.UrlItem$$EnhancerByCGLIB$$b7f17874\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.RedundantUpdatesFilter\u0027 (RedundantUpdatesFilter.aj:34) [with runtime test]\ninfo at /root/Work/trunk/SecureSphereServerDev/SecureSphereServer/src/com/mprv/secsph/management/JmxOperationInvokerGuard.aj:11::0 advice defined in com.mprv.secsph.management.JmxOperationInvokerGuard has not been applied [Xlint:adviceDidNotMatch]\n...\n\npublic final boolean changeItemMode(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus, com.mprv.secsph.profile.domain.ProfileItem$StatusReason, boolean);\n  Code:\n   0:\tgetstatic\t#2113; //Field com/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   3:\tinvokevirtual\t#2116; //Method org/aspectj/runtime/internal/CFlowCounter.inc:()V\n   6:\taload_0\n   7:\tgetfield\t#38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   10:\tdup\n   11:\tifnonnull\t23\n   14:\tpop\n   15:\taload_0\n   16:\tinvokestatic\t#42; //Method CGLIB$BIND_CALLBACKS:(Ljava/lang/Object;)V\n   19:\taload_0\n   20:\tgetfield\t#38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   23:\tdup\n   24:\tifnull\t81\n   27:\taload_0\n   28:\tgetstatic\t#141; //Field CGLIB$changeItemMode$8$Method:Ljava/lang/reflect/Method;\n   31:\ticonst_3\n   32:\tanewarray\t#46; //class java/lang/Object\n   35:\tdup\n   36:\ticonst_0\n   37:\taload_1\n   38:\taastore\n   39:\tdup\n   40:\ticonst_1\n   41:\taload_2\n   42:\taastore\n   43:\tdup\n   44:\ticonst_2\n   45:\tiload_3\n   46:\tnew\t#143; //class java/lang/Boolean\n   49:\tdup_x1\n   50:\tswap\n   51:\tinvokespecial\t#146; //Method java/lang/Boolean.\"\u003cinit\u003e\":(Z)V\n   54:\taastore\n   55:\tgetstatic\t#148; //Field CGLIB$changeItemMode$8$Proxy:Lnet/sf/cglib/proxy/MethodProxy;\n   58:\tinvokeinterface\t#54,  5; //InterfaceMethod net/sf/cglib/proxy/MethodInterceptor.intercept:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;\n   63:\tdup\n   64:\tifnonnull\t72\n   67:\tpop\n   68:\ticonst_0\n   69:\tgoto\t78\n   72:\tcheckcast\t#143; //class java/lang/Boolean\n   75:\tinvokevirtual\t#152; //Method java/lang/Boolean.booleanValue:()Z\n   78:\tgoto\t102\n   81:\taload_0\n   82:\taload_1\n   83:\taload_2\n   84:\tiload_3\n   85:\tinvokespecial\t#139; //Method com/mprv/secsph/profile/domain/UrlItem.changeItemMode:(Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z\n   88:\tgoto\t102\n   91:\tastore\t5\n   93:\tgetstatic\t#2113; //Field com/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   96:\tinvokevirtual\t#2119; //Method org/aspectj/runtime/internal/CFlowCounter.dec:()V\n   99:\taload\t5\n   101:\tathrow\n   102:\tgetstatic\t#2113; //Field com/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   105:\tinvokevirtual\t#2119; //Method org/aspectj/runtime/internal/CFlowCounter.dec:()V\n   108:\tireturn\n  Exception table:\n   from   to  target type\n     6    91    91   Class java/lang/Throwable\n\nNote:\n- The failing method changeItemMode() is not actually\n- There is a cflow counter for ChangeItemProtector\n- There is neither a weavInfo nor info/Xlint for this aspect",
    "General comments:\n- The same aspects are registered a number of times suggesting there are multiple class loaders (applications)\n- We probably need to run with \"aj.weaving.verbose\u003dtrue\" to get messages before aop.xml parsing. Alternatively this could be \"held\" until verbose mode is know when they can be deleted or released to the console\n- We should enhance the default message handler to append class loader name/identity and even a time stamp\n- We need the before byte-code for the failing classes\n- We should make matching on \"*\" simpler with no need to resolve types",
    "Now looking at com/mprv/secsph/profile/domain/IpValue$$EnhancerByCGLIB$$4fe075c$$FastClassByCGLIB$$5f1ec221\n\n___applicaton.log___\n\"2005-11-29 11:40:34,061 ERROR [Server Startup] proxy.CGLIBLazyInitializer (CGLIBLazyInitializer.java:104) - CGLIB Enhancement failed: com.mprv.secsph.profile.domain.IpValue\n\"java.lang.VerifyError: (class: com/mprv/secsph/profile/domain/IpValue$$EnhancerByCGLIB$$4fe075c$$FastClassByCGLIB$$5f1ec221, method: getIndex signature: (Ljava/lang/String;[Ljava/lang/Class;)I) Illegal instruction found at offset 2566\n\tat java.lang.Class.getDeclaredConstructors0(Native Method)\n\tat java.lang.Class.privateGetDeclaredConstructors(Class.java:2328)\n\tat java.lang.Class.getConstructor0(Class.java:2640)\n\tat java.lang.Class.getDeclaredConstructor(Class.java:1953)\n\tat net.sf.cglib.core.ReflectUtils.getConstructor(ReflectUtils.java:244)\n\tat net.sf.cglib.core.ReflectUtils.newInstance(ReflectUtils.java:220)\n\tat net.sf.cglib.reflect.FastClass$Generator.firstInstance(FastClass.java:79)\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:220)\n\tat net.sf.cglib.reflect.FastClass$Generator.create(FastClass.java:67)\n\tat net.sf.cglib.proxy.MethodProxy.helper(MethodProxy.java:81)\n\tat net.sf.cglib.proxy.MethodProxy.create(MethodProxy.java:47)\n\tat com.mprv.secsph.profile.domain.IpValue$$EnhancerByCGLIB$$4fe075c.CGLIB$STATICHOOK8(\u003cgenerated\u003e:1)\n\tat com.mprv.secsph.profile.domain.IpValue$$EnhancerByCGLIB$$4fe075c.\u003cclinit\u003e(\u003cgenerated\u003e:1)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat net.sf.cglib.proxy.Enhancer.setCallbacksHelper(Enhancer.java:586)\n\tat net.sf.cglib.proxy.Enhancer.setThreadCallbacks(Enhancer.java:579)\n\tat net.sf.cglib.proxy.Enhancer.createUsingReflection(Enhancer.java:601)\n\tat net.sf.cglib.proxy.Enhancer.firstInstance(Enhancer.java:532)\n\tat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:220)\n\tat net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:373)\n\tat net.sf.cglib.proxy.Enhancer.create(Enhancer.java:281)\n\tat net.sf.cglib.proxy.Enhancer.create(Enhancer.java:640)\n\tat org.hibernate.proxy.CGLIBLazyInitializer.getProxyFactory(CGLIBLazyInitializer.java:95)\n\tat org.hibernate.proxy.CGLIBProxyFactory.postInstantiate(CGLIBProxyFactory.java:42)\n\tat org.hibernate.tuple.PojoTuplizer.buildProxyFactory(PojoTuplizer.java:144)\n\tat org.hibernate.tuple.AbstractTuplizer.\u003cinit\u003e(AbstractTuplizer.java:83)\n\tat org.hibernate.tuple.PojoTuplizer.\u003cinit\u003e(PojoTuplizer.java:54)\n\tat org.hibernate.tuple.TuplizerLookup.create(TuplizerLookup.java:47)\n\tat org.hibernate.tuple.EntityMetamodel.\u003cinit\u003e(EntityMetamodel.java:218)\n\tat org.hibernate.persister.entity.BasicEntityPersister.\u003cinit\u003e(BasicEntityPersister.java:400)\n\tat org.hibernate.persister.entity.SingleTableEntityPersister.\u003cinit\u003e(SingleTableEntityPersister.java:104)\n\tat org.hibernate.persister.PersisterFactory.createClassPersister(PersisterFactory.java:55)\n\tat org.hibernate.impl.SessionFactoryImpl.\u003cinit\u003e(SessionFactoryImpl.java:211)\n\tat org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1005)\n\tat org.springframework.orm.hibernate3.LocalSessionFactoryBean.newSessionFactory(LocalSessionFactoryBean.java:758)\n\tat org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:685)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:937)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:146)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:271)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:310)\n\tat org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:133)\n\tat com.mprv.secsph.migration.MigrationListener.loadAppContext(MigrationListener.java:122)\n\tat com.mprv.secsph.migration.MigrationListener.contextInitialized(MigrationListener.java:50)\n\tat com.mprv.secsph.server.loader.AsyncServletContextListener$1.run(AsyncServletContextListener.java:67)\n\tat java.lang.Thread.run(Thread.java:595)\n\n\n___output.log___\ninfo weaving \u0027com/mprv/secsph/profile/domain/IpValue$$EnhancerByCGLIB$$4fe075c$$FastClassByCGLIB$$5f1ec221\u0027\nweaveinfo Join point \u0027field-get(com.mprv.secsph.profile.domain.ProfileItem com.mprv.secsph.profile.domain.ProfileEntity.ownerItem)\u0027 in Type \u0027com.mprv.secsph.profile.domain.IpValue$$EnhancerByCGLIB$$4fe075c$$FastClassByCGLIB$$5f1ec221\u0027 (\u003cgenerated\u003e) advised by around advice from \u0027com.mprv.secsph.profile.changes.ChangeRecordPropagator\u0027 (ChangeRecordPropagator.aj:80)\ninfo at /root/Work/trunk/SecureSphereServerDev/SecureSphereServer/src/com/mprv/secsph/management/JmxOperationInvokerGuard.aj:11::0 advice defined in com.mprv.secsph.management.JmxOperationInvokerGuard has not been applied [Xlint:adviceDidNotMatch]\n...\n\npublic int getIndex(java.lang.String, java.lang.Class[]);\n  Code:\n   0:\taload_1\n   1:\taload_2\n   2:\tswap\n   3:\tdup\n   4:\tinvokevirtual\t#22; //Method java/lang/Object.hashCode:()I\n   7:\tlookupswitch{ //51\n\t\t-1853434142: 424;\n\t\t-1846477896: 459;\n\t\t-1776922004: 537;\n\t\t-1644271222: 570;\n\t\t-1544210033: 621;\n\t\t-1536524468: 683;\n\t\t-1362869029: 733;\n\t\t-1310797198: 767;\n\t\t-1295482945: 803;\n\t\t-1074578383: 853;\n\t\t-1057313569: 887;\n\t\t-1057313565: 951;\n\t\t-1053468136: 1015;\n\t\t-1039689911: 1051;\n\t\t-989054513: 1087;\n\t\t-989054511: 1151;\n\t\t-875366579: 1215;\n\t\t-574574724: 1293;\n\t\t-489084459: 1415;\n\t\t-163942459: 1451;\n\t\t-75308287: 1487;\n\t\t3641717: 1522;\n\t\t5451258: 1617;\n\t\t7717296: 1665;\n\t\t85179481: 1699;\n\t\t98245393: 1749;\n\t\t147696667: 1783;\n\t\t161998116: 1819;\n\t\t193978866: 1855;\n\t\t220068332: 1891;\n\t\t236410712: 1927;\n\t\t279757982: 1991;\n\t\t368337804: 2041;\n\t\t381763725: 2075;\n\t\t495524492: 2111;\n\t\t598781625: 2161;\n\t\t688312521: 2195;\n\t\t700591008: 2245;\n\t\t1010135362: 2278;\n\t\t1060146578: 2315;\n\t\t1080396449: 2351;\n\t\t1154623345: 2415;\n\t\t1727847844: 2466;\n\t\t1811874389: 2517;\n\t\t1817099975: 2698;\n\t\t1902066072: 2764;\n\t\t1905679803: 2799;\n\t\t1950568386: 2849;\n\t\t1984801293: 2887;\n\t\t2062787579: 2937;\n\t\t2120551293: 2975;\n\t\tdefault: 3025 }\n   424:\tldc\t#143; //String CGLIB$getUniqueName$7\n   426:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   429:\tifeq\t3026\n   432:\tdup\n   433:\tarraylength\n   434:\ttableswitch{ //0 to 0\n\t\t0: 452;\n\t\tdefault: 456 }\n   452:\tpop\n   453:\tbipush\t42\n   455:\tireturn\n   456:\tgoto\t3029\n   459:\tldc\t#145; //String writeXML\n   461:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   464:\tifeq\t3026\n   467:\tdup\n   468:\tarraylength\n   469:\ttableswitch{ //3 to 3\n\t\t3: 488;\n\t\tdefault: 534 }\n   488:\tdup\n   489:\ticonst_0\n   490:\taaload\n   491:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   494:\tldc\t#152; //String com.mprv.secsph.utils.xmlwriter.XMLWriter\n   496:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   499:\tifeq\t3029\n   502:\tdup\n   503:\ticonst_1\n   504:\taaload\n   505:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   508:\tldc\t#154; //String java.lang.String\n   510:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   513:\tifeq\t3029\n   516:\tdup\n   517:\ticonst_2\n   518:\taaload\n   519:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   522:\tldc\t#156; //String com.mprv.secsph.profile.domain.SerializationType\n   524:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   527:\tifeq\t3029\n   530:\tpop\n   531:\tbipush\t12\n   533:\tireturn\n   534:\tgoto\t3029\n   537:\tldc\t#157; //String toString\n   539:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   542:\tifeq\t3026\n   545:\tdup\n   546:\tarraylength\n   547:\ttableswitch{ //0 to 0\n\t\t0: 564;\n\t\tdefault: 567 }\n   564:\tpop\n   565:\ticonst_1\n   566:\tireturn\n   567:\tgoto\t3029\n   570:\tldc\t#159; //String CGLIB$setDecided$1\n   572:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   575:\tifeq\t3026\n   578:\tdup\n   579:\tarraylength\n   580:\ttableswitch{ //1 to 1\n\t\t1: 600;\n\t\tdefault: 618 }\n   600:\tdup\n   601:\ticonst_0\n   602:\taaload\n   603:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   606:\tldc\t#161; //String java.lang.Boolean\n   608:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   611:\tifeq\t3029\n   614:\tpop\n   615:\tbipush\t36\n   617:\tireturn\n   618:\tgoto\t3029\n   621:\tldc\t#163; //String CGLIB$readXML$5\n   623:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   626:\tifeq\t3026\n   629:\tdup\n   630:\tarraylength\n   631:\ttableswitch{ //2 to 2\n\t\t2: 648;\n\t\tdefault: 680 }\n   648:\tdup\n   649:\ticonst_0\n   650:\taaload\n   651:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   654:\tldc\t#165; //String org.w3c.dom.Node\n   656:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   659:\tifeq\t3029\n   662:\tdup\n   663:\ticonst_1\n   664:\taaload\n   665:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   668:\tldc\t#154; //String java.lang.String\n   670:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   673:\tifeq\t3029\n   676:\tpop\n   677:\tbipush\t40\n   679:\tireturn\n   680:\tgoto\t3029\n   683:\tldc\t#167; //String ajc$privFieldGet$com_mprv_secsph_profile_changes_ChangeRecordPropagator$com_mprv_secsph_profile_domain_ProfileEntity$ownerItem\n   685:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   688:\tifeq\t3026\n   691:\tdup\n   692:\tarraylength\n   693:\ttableswitch{ //1 to 1\n\t\t1: 712;\n\t\tdefault: 730 }\n   712:\tdup\n   713:\ticonst_0\n   714:\taaload\n   715:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   718:\tldc\t#169; //String com.mprv.secsph.profile.domain.ProfileEntity\n   720:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   723:\tifeq\t3029\n   726:\tpop\n   727:\tbipush\t49\n   729:\tireturn\n   730:\tgoto\t3029\n   733:\tldc\t#171; //String CGLIB$isDecided$0\n   735:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   738:\tifeq\t3026\n   741:\tdup\n   742:\tarraylength\n   743:\ttableswitch{ //0 to 0\n\t\t0: 760;\n\t\tdefault: 764 }\n   760:\tpop\n   761:\tbipush\t35\n   763:\tireturn\n   764:\tgoto\t3029\n   767:\tldc\t#173; //String CGLIB$getOwnerItem$12\n   769:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   772:\tifeq\t3026\n   775:\tdup\n   776:\tarraylength\n   777:\ttableswitch{ //0 to 0\n\t\t0: 796;\n\t\tdefault: 800 }\n   796:\tpop\n   797:\tbipush\t26\n   799:\tireturn\n   800:\tgoto\t3029\n   803:\tldc\t#174; //String equals\n   805:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   808:\tifeq\t3026\n   811:\tdup\n   812:\tarraylength\n   813:\ttableswitch{ //1 to 1\n\t\t1: 832;\n\t\tdefault: 850 }\n   832:\tdup\n   833:\ticonst_0\n   834:\taaload\n   835:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   838:\tldc\t#176; //String java.lang.Object\n   840:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   843:\tifeq\t3029\n   846:\tpop\n   847:\tbipush\t46\n   849:\tireturn\n   850:\tgoto\t3029\n   853:\tldc\t#178; //String CGLIB$writeReplace$16\n   855:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   858:\tifeq\t3026\n   861:\tdup\n   862:\tarraylength\n   863:\ttableswitch{ //0 to 0\n\t\t0: 880;\n\t\tdefault: 884 }\n   880:\tpop\n   881:\tbipush\t30\n   883:\tireturn\n   884:\tgoto\t3029\n   887:\tldc\t#180; //String setId_aroundBody0\n   889:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   892:\tifeq\t3026\n   895:\tdup\n   896:\tarraylength\n   897:\ttableswitch{ //2 to 2\n\t\t2: 916;\n\t\tdefault: 948 }\n   916:\tdup\n   917:\ticonst_0\n   918:\taaload\n   919:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   922:\tldc\t#182; //String com.mprv.secsph.profile.domain.ProfileValue\n   924:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   927:\tifeq\t3029\n   930:\tdup\n   931:\ticonst_1\n   932:\taaload\n   933:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   936:\tldc\t#154; //String java.lang.String\n   938:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   941:\tifeq\t3029\n   944:\tpop\n   945:\tbipush\t48\n   947:\tireturn\n   948:\tgoto\t3029\n   951:\tldc\t#184; //String setId_aroundBody4\n   953:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   956:\tifeq\t3026\n   959:\tdup\n   960:\tarraylength\n   961:\ttableswitch{ //2 to 2\n\t\t2: 980;\n\t\tdefault: 1012 }\n   980:\tdup\n   981:\ticonst_0\n   982:\taaload\n   983:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   986:\tldc\t#186; //String com.mprv.secsph.profile.domain.IpValue$$EnhancerByCGLIB$$4fe075c\n   988:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   991:\tifeq\t3029\n   994:\tdup\n   995:\ticonst_1\n   996:\taaload\n   997:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1000:\tldc\t#154; //String java.lang.String\n   1002:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1005:\tifeq\t3029\n   1008:\tpop\n   1009:\tbipush\t33\n   1011:\tireturn\n   1012:\tgoto\t3029\n   1015:\tldc\t#188; //String getCallbacks\n   1017:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1020:\tifeq\t3026\n   1023:\tdup\n   1024:\tarraylength\n   1025:\ttableswitch{ //0 to 0\n\t\t0: 1044;\n\t\tdefault: 1048 }\n   1044:\tpop\n   1045:\tbipush\t20\n   1047:\tireturn\n   1048:\tgoto\t3029\n   1051:\tldc\t#190; //String notify\n   1053:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1056:\tifeq\t3026\n   1059:\tdup\n   1060:\tarraylength\n   1061:\ttableswitch{ //0 to 0\n\t\t0: 1080;\n\t\tdefault: 1084 }\n   1080:\tpop\n   1081:\tbipush\t55\n   1083:\tireturn\n   1084:\tgoto\t3029\n   1087:\tldc\t#192; //String setName_aroundBody0\n   1089:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1092:\tifeq\t3026\n   1095:\tdup\n   1096:\tarraylength\n   1097:\ttableswitch{ //2 to 2\n\t\t2: 1116;\n\t\tdefault: 1148 }\n   1116:\tdup\n   1117:\ticonst_0\n   1118:\taaload\n   1119:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1122:\tldc\t#194; //String com.mprv.secsph.profile.domain.SqlSourceValue\n   1124:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1127:\tifeq\t3029\n   1130:\tdup\n   1131:\ticonst_1\n   1132:\taaload\n   1133:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1136:\tldc\t#154; //String java.lang.String\n   1138:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1141:\tifeq\t3029\n   1144:\tpop\n   1145:\tbipush\t47\n   1147:\tireturn\n   1148:\tgoto\t3029\n   1151:\tldc\t#196; //String setName_aroundBody2\n   1153:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1156:\tifeq\t3026\n   1159:\tdup\n   1160:\tarraylength\n   1161:\ttableswitch{ //2 to 2\n\t\t2: 1180;\n\t\tdefault: 1212 }\n   1180:\tdup\n   1181:\ticonst_0\n   1182:\taaload\n   1183:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1186:\tldc\t#186; //String com.mprv.secsph.profile.domain.IpValue$$EnhancerByCGLIB$$4fe075c\n   1188:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1191:\tifeq\t3029\n   1194:\tdup\n   1195:\ticonst_1\n   1196:\taaload\n   1197:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1200:\tldc\t#154; //String java.lang.String\n   1202:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1205:\tifeq\t3029\n   1208:\tpop\n   1209:\tbipush\t32\n   1211:\tireturn\n   1212:\tgoto\t3029\n   1215:\tldc\t#198; //String CGLIB$writeXML$6\n   1217:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1220:\tifeq\t3026\n   1223:\tdup\n   1224:\tarraylength\n   1225:\ttableswitch{ //3 to 3\n\t\t3: 1244;\n\t\tdefault: 1290 }\n   1244:\tdup\n   1245:\ticonst_0\n   1246:\taaload\n   1247:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1250:\tldc\t#152; //String com.mprv.secsph.utils.xmlwriter.XMLWriter\n   1252:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1255:\tifeq\t3029\n   1258:\tdup\n   1259:\ticonst_1\n   1260:\taaload\n   1261:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1264:\tldc\t#154; //String java.lang.String\n   1266:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1269:\tifeq\t3029\n   1272:\tdup\n   1273:\ticonst_2\n   1274:\taaload\n   1275:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1278:\tldc\t#156; //String com.mprv.secsph.profile.domain.SerializationType\n   1280:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1283:\tifeq\t3029\n   1286:\tpop\n   1287:\tbipush\t41\n   1289:\tireturn\n   1290:\tgoto\t3029\n   1293:\tldc\t#200; //String setDecided_aroundBody0\n   1295:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1298:\tifeq\t3026\n   1301:\tdup\n   1302:\tarraylength\n   1303:\ttableswitch{ //2 to 2\n\t\t2: 1320;\n\t\tdefault: 1412 }\n   1320:\tdup\n   1321:\ticonst_0\n   1322:\taaload\n   1323:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1326:\tdup\n   1327:\tinvokevirtual\t#22; //Method java/lang/Object.hashCode:()I\n   1330:\tlookupswitch{ //2\n\t\t534825951: 1356;\n\t\t1595851297: 1382;\n\t\tdefault: 1408 }\n   1356:\tldc\t#202; //String com.mprv.secsph.profile.domain.IpValue\n   1358:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1361:\tifeq\t1409\n   1364:\tdup\n   1365:\ticonst_1\n   1366:\taaload\n   1367:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1370:\tldc\t#161; //String java.lang.Boolean\n   1372:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1375:\tifeq\t3029\n   1378:\tpop\n   1379:\tbipush\t44\n   1381:\tireturn\n   1382:\tldc\t#186; //String com.mprv.secsph.profile.domain.IpValue$$EnhancerByCGLIB$$4fe075c\n   1384:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1387:\tifeq\t1409\n   1390:\tdup\n   1391:\ticonst_1\n   1392:\taaload\n   1393:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1396:\tldc\t#161; //String java.lang.Boolean\n   1398:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1401:\tifeq\t3029\n   1404:\tpop\n   1405:\tbipush\t14\n   1407:\tireturn\n   1408:\tpop\n   1409:\tgoto\t3029\n   1412:\tgoto\t3029\n   1415:\tldc\t#204; //String writeReplace\n   1417:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1420:\tifeq\t3026\n   1423:\tdup\n   1424:\tarraylength\n   1425:\ttableswitch{ //0 to 0\n\t\t0: 1444;\n\t\tdefault: 1448 }\n   1444:\tpop\n   1445:\tbipush\t8\n   1447:\tireturn\n   1448:\tgoto\t3029\n   1451:\tldc\t#206; //String CGLIB$finalize$13\n   1453:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1456:\tifeq\t3026\n   1459:\tdup\n   1460:\tarraylength\n   1461:\ttableswitch{ //0 to 0\n\t\t0: 1480;\n\t\tdefault: 1484 }\n   1480:\tpop\n   1481:\tbipush\t27\n   1483:\tireturn\n   1484:\tgoto\t3029\n   1487:\tldc\t#207; //String getName\n   1489:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1492:\tifeq\t3026\n   1495:\tdup\n   1496:\tarraylength\n   1497:\ttableswitch{ //0 to 0\n\t\t0: 1516;\n\t\tdefault: 1519 }\n   1516:\tpop\n   1517:\ticonst_0\n   1518:\tireturn\n   1519:\tgoto\t3029\n   1522:\tldc\t#209; //String wait\n   1524:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1527:\tifeq\t3026\n   1530:\tdup\n   1531:\tarraylength\n   1532:\ttableswitch{ //0 to 2\n\t\t0: 1560;\n\t\t1: 1564;\n\t\t2: 1582;\n\t\tdefault: 1614 }\n   1560:\tpop\n   1561:\tbipush\t54\n   1563:\tireturn\n   1564:\tdup\n   1565:\ticonst_0\n   1566:\taaload\n   1567:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1570:\tldc\t#211; //String long\n   1572:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1575:\tifeq\t3029\n   1578:\tpop\n   1579:\tbipush\t52\n   1581:\tireturn\n   1582:\tdup\n   1583:\ticonst_0\n   1584:\taaload\n   1585:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1588:\tldc\t#211; //String long\n   1590:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1593:\tifeq\t3029\n   1596:\tdup\n   1597:\ticonst_1\n   1598:\taaload\n   1599:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1602:\tldc\t#213; //String int\n   1604:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1607:\tifeq\t3029\n   1610:\tpop\n   1611:\tbipush\t53\n   1613:\tireturn\n   1614:\tgoto\t3029\n   1617:\tldc\t#215; //String CGLIB$setName$4\n   1619:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1622:\tifeq\t3026\n   1625:\tdup\n   1626:\tarraylength\n   1627:\ttableswitch{ //1 to 1\n\t\t1: 1644;\n\t\tdefault: 1662 }\n   1644:\tdup\n   1645:\ticonst_0\n   1646:\taaload\n   1647:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1650:\tldc\t#154; //String java.lang.String\n   1652:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1655:\tifeq\t3029\n   1658:\tpop\n   1659:\tbipush\t39\n   1661:\tireturn\n   1662:\tgoto\t3029\n   1665:\tldc\t#217; //String getOwnerItem\n   1667:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1670:\tifeq\t3026\n   1673:\tdup\n   1674:\tarraylength\n   1675:\ttableswitch{ //0 to 0\n\t\t0: 1692;\n\t\tdefault: 1696 }\n   1692:\tpop\n   1693:\tbipush\t9\n   1695:\tireturn\n   1696:\tgoto\t3029\n   1699:\tldc\t#219; //String CGLIB$SET_THREAD_CALLBACKS\n   1701:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1704:\tifeq\t3026\n   1707:\tdup\n   1708:\tarraylength\n   1709:\ttableswitch{ //1 to 1\n\t\t1: 1728;\n\t\tdefault: 1746 }\n   1728:\tdup\n   1729:\ticonst_0\n   1730:\taaload\n   1731:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1734:\tldc\t#221; //String [Lnet.sf.cglib.proxy.Callback;\n   1736:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1739:\tifeq\t3029\n   1742:\tpop\n   1743:\tbipush\t16\n   1745:\tireturn\n   1746:\tgoto\t3029\n   1749:\tldc\t#223; //String getId\n   1751:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1754:\tifeq\t3026\n   1757:\tdup\n   1758:\tarraylength\n   1759:\ttableswitch{ //0 to 0\n\t\t0: 1776;\n\t\tdefault: 1780 }\n   1776:\tpop\n   1777:\tbipush\t6\n   1779:\tireturn\n   1780:\tgoto\t3029\n   1783:\tldc\t#224; //String hashCode\n   1785:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1788:\tifeq\t3026\n   1791:\tdup\n   1792:\tarraylength\n   1793:\ttableswitch{ //0 to 0\n\t\t0: 1812;\n\t\tdefault: 1816 }\n   1812:\tpop\n   1813:\tbipush\t45\n   1815:\tireturn\n   1816:\tgoto\t3029\n   1819:\tldc\t#226; //String CGLIB$STATICHOOK8\n   1821:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1824:\tifeq\t3026\n   1827:\tdup\n   1828:\tarraylength\n   1829:\ttableswitch{ //0 to 0\n\t\t0: 1848;\n\t\tdefault: 1852 }\n   1848:\tpop\n   1849:\tbipush\t34\n   1851:\tireturn\n   1852:\tgoto\t3029\n   1855:\tldc\t#228; //String getUniqueName\n   1857:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1860:\tifeq\t3026\n   1863:\tdup\n   1864:\tarraylength\n   1865:\ttableswitch{ //0 to 0\n\t\t0: 1884;\n\t\tdefault: 1888 }\n   1884:\tpop\n   1885:\tbipush\t15\n   1887:\tireturn\n   1888:\tgoto\t3029\n   1891:\tldc\t#230; //String CGLIB$getName$2\n   1893:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1896:\tifeq\t3026\n   1899:\tdup\n   1900:\tarraylength\n   1901:\ttableswitch{ //0 to 0\n\t\t0: 1920;\n\t\tdefault: 1924 }\n   1920:\tpop\n   1921:\tbipush\t37\n   1923:\tireturn\n   1924:\tgoto\t3029\n   1927:\tldc\t#232; //String ajc$privFieldSet$com_mprv_secsph_profile_changes_ChangeRecordPropagator$com_mprv_secsph_profile_domain_ProfileEntity$ownerItem\n   1929:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1932:\tifeq\t3026\n   1935:\tdup\n   1936:\tarraylength\n   1937:\ttableswitch{ //2 to 2\n\t\t2: 1956;\n\t\tdefault: 1988 }\n   1956:\tdup\n   1957:\ticonst_0\n   1958:\taaload\n   1959:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1962:\tldc\t#169; //String com.mprv.secsph.profile.domain.ProfileEntity\n   1964:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1967:\tifeq\t3029\n   1970:\tdup\n   1971:\ticonst_1\n   1972:\taaload\n   1973:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   1976:\tldc\t#234; //String com.mprv.secsph.profile.domain.ProfileItem\n   1978:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1981:\tifeq\t3029\n   1984:\tpop\n   1985:\tbipush\t50\n   1987:\tireturn\n   1988:\tgoto\t3029\n   1991:\tldc\t#236; //String CGLIB$setParent$9\n   1993:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   1996:\tifeq\t3026\n   1999:\tdup\n   2000:\tarraylength\n   2001:\ttableswitch{ //1 to 1\n\t\t1: 2020;\n\t\tdefault: 2038 }\n   2020:\tdup\n   2021:\ticonst_0\n   2022:\taaload\n   2023:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2026:\tldc\t#234; //String com.mprv.secsph.profile.domain.ProfileItem\n   2028:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2031:\tifeq\t3029\n   2034:\tpop\n   2035:\tbipush\t23\n   2037:\tireturn\n   2038:\tgoto\t3029\n   2041:\tldc\t#238; //String CGLIB$getParent$3\n   2043:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2046:\tifeq\t3026\n   2049:\tdup\n   2050:\tarraylength\n   2051:\ttableswitch{ //0 to 0\n\t\t0: 2068;\n\t\tdefault: 2072 }\n   2068:\tpop\n   2069:\tbipush\t38\n   2071:\tireturn\n   2072:\tgoto\t3029\n   2075:\tldc\t#240; //String CGLIB$clone$14\n   2077:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2080:\tifeq\t3026\n   2083:\tdup\n   2084:\tarraylength\n   2085:\ttableswitch{ //0 to 0\n\t\t0: 2104;\n\t\tdefault: 2108 }\n   2104:\tpop\n   2105:\tbipush\t28\n   2107:\tireturn\n   2108:\tgoto\t3029\n   2111:\tldc\t#242; //String setCallbacks\n   2113:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2116:\tifeq\t3026\n   2119:\tdup\n   2120:\tarraylength\n   2121:\ttableswitch{ //1 to 1\n\t\t1: 2140;\n\t\tdefault: 2158 }\n   2140:\tdup\n   2141:\ticonst_0\n   2142:\taaload\n   2143:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2146:\tldc\t#221; //String [Lnet.sf.cglib.proxy.Callback;\n   2148:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2151:\tifeq\t3029\n   2154:\tpop\n   2155:\tbipush\t18\n   2157:\tireturn\n   2158:\tgoto\t3029\n   2161:\tldc\t#244; //String CGLIB$toString$15\n   2163:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2166:\tifeq\t3026\n   2169:\tdup\n   2170:\tarraylength\n   2171:\ttableswitch{ //0 to 0\n\t\t0: 2188;\n\t\tdefault: 2192 }\n   2188:\tpop\n   2189:\tbipush\t29\n   2191:\tireturn\n   2192:\tgoto\t3029\n   2195:\tldc\t#246; //String CGLIB$setId$10\n   2197:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2200:\tifeq\t3026\n   2203:\tdup\n   2204:\tarraylength\n   2205:\ttableswitch{ //1 to 1\n\t\t1: 2224;\n\t\tdefault: 2242 }\n   2224:\tdup\n   2225:\ticonst_0\n   2226:\taaload\n   2227:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2230:\tldc\t#154; //String java.lang.String\n   2232:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2235:\tifeq\t3029\n   2238:\tpop\n   2239:\tbipush\t24\n   2241:\tireturn\n   2242:\tgoto\t3029\n   2245:\tldc\t#248; //String getParent\n   2247:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2250:\tifeq\t3026\n   2253:\tdup\n   2254:\tarraylength\n   2255:\ttableswitch{ //0 to 0\n\t\t0: 2272;\n\t\tdefault: 2275 }\n   2272:\tpop\n   2273:\ticonst_5\n   2274:\tireturn\n   2275:\tgoto\t3029\n   2278:\tldc\t#250; //String CGLIB$getId$8\n   2280:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2283:\tifeq\t3026\n   2286:\tdup\n   2287:\tarraylength\n   2288:\ttableswitch{ //0 to 0\n\t\t0: 2308;\n\t\tdefault: 2312 }\n   2308:\tpop\n   2309:\tbipush\t22\n   2311:\tireturn\n   2312:\tgoto\t3029\n   2315:\tldc\t#252; //String getHibernateLazyInitializer\n   2317:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2320:\tifeq\t3026\n   2323:\tdup\n   2324:\tarraylength\n   2325:\ttableswitch{ //0 to 0\n\t\t0: 2344;\n\t\tdefault: 2348 }\n   2344:\tpop\n   2345:\tbipush\t13\n   2347:\tireturn\n   2348:\tgoto\t3029\n   2351:\tldc\t#254; //String readXML\n   2353:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2356:\tifeq\t3026\n   2359:\tdup\n   2360:\tarraylength\n   2361:\ttableswitch{ //2 to 2\n\t\t2: 2380;\n\t\tdefault: 2412 }\n   2380:\tdup\n   2381:\ticonst_0\n   2382:\taaload\n   2383:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2386:\tldc\t#165; //String org.w3c.dom.Node\n   2388:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2391:\tifeq\t3029\n   2394:\tdup\n   2395:\ticonst_1\n   2396:\taaload\n   2397:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2400:\tldc\t#154; //String java.lang.String\n   2402:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2405:\tifeq\t3029\n   2408:\tpop\n   2409:\tbipush\t11\n   2411:\tireturn\n   2412:\tgoto\t3029\n   2415:\tldc_w\t#256; //String CGLIB$findMethodProxy\n   2418:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2421:\tifeq\t3026\n   2424:\tdup\n   2425:\tarraylength\n   2426:\ttableswitch{ //1 to 1\n\t\t1: 2444;\n\t\tdefault: 2463 }\n   2444:\tdup\n   2445:\ticonst_0\n   2446:\taaload\n   2447:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2450:\tldc_w\t#258; //String net.sf.cglib.core.Signature\n   2453:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2456:\tifeq\t3029\n   2459:\tpop\n   2460:\tbipush\t21\n   2462:\tireturn\n   2463:\tgoto\t3029\n   2466:\tldc_w\t#260; //String getAttributeList\n   2469:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2472:\tifeq\t3026\n   2475:\tdup\n   2476:\tarraylength\n   2477:\ttableswitch{ //1 to 1\n\t\t1: 2496;\n\t\tdefault: 2514 }\n   2496:\tdup\n   2497:\ticonst_0\n   2498:\taaload\n   2499:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2502:\tldc\t#156; //String com.mprv.secsph.profile.domain.SerializationType\n   2504:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2507:\tifeq\t3029\n   2510:\tpop\n   2511:\tbipush\t10\n   2513:\tireturn\n   2514:\tgoto\t3029\n   2517:\tldc_w\t#262; //String newInstance\n   2520:\tinvokevirtual\t#28; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n   2523:\tifeq\t3026\n   2526:\tdup\n   2527:\tarraylength\n   2528:\ttableswitch{ //1 to 3\n\t\t1: 2556;\n\t\t2: 2615;\n\t\t3: 2648;\n\t\tdefault: 2695 }\n   2556:\tdup\n   2557:\ticonst_0\n   2558:\taaload\n   2559:\tinvokevirtual\t#150; //Method java/lang/Class.getName:()Ljava/lang/String;\n   2562:\tdup\n   2563:\tinvokevirtual\t#22; //Method java/lang/Object.hashCode:()I\n   2566:\ttableswitch{ //-845341380 to 1730110032\n\t\tdefault: 2611 }\n\npublic int getIndex(java.lang.Class[]);\n...",
    "On the first case I\u0027d suspect the code around the handler being manipulated incorrectly (we may be assuming something about javac output...):\n\n  88:  goto    102\n   91:  astore  5\n   93:  getstatic       #2113; //Field\ncom/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   96:  invokevirtual   #2119; //Method\norg/aspectj/runtime/internal/CFlowCounter.dec:()V\n   99:  aload   5\n   101: athrow\n   102: getstatic       #2113; //Field\ncom/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   105: invokevirtual   #2119; //Method\norg/aspectj/runtime/internal/CFlowCounter.dec:()V\n   108: ireturn\n  Exception table:\n   from   to  target type\n     6    91    91   Class java/lang/Throwable\n\nI\u0027d like to see the \u0027before weaving\u0027 code for that case.\n\n\nOn the second case, I\u0027ve fixed multiple bugs this release in the BCEL handling of switch statements.  The instruction at 2566 suggests bcel has messed up how it manipulated the tableswitch:\n\n   2566:        tableswitch{ //-845341380 to 1730110032\n                default: 2611 }\n\nagain it would be great to see the code \u0027before\u0027 weaving to see what this switch statement looked like. There are multiple formats for tableswitch and in particluar I think there is a special format when there is only a default entry or very few entries (if thats what this was in the original...).  It doesn\u0027t matter that the switch isn\u0027t advised - the fact that the method is advised means bcel has cracked open the method and started tinkering with it.\n\nget me the before bytecode !!! :)",
    "Created an attachment (id\u003d30873)\nNew dump with generated classes in \"_before\"\n\nHi,\n\nHere is it ... \n\nEnjoy ;-)",
    "Looking again at com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$... there does not appear to be an existing exception handler:\n\npublic final boolean changeItemMode(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus, com.mprv.secsph.profile.domain.ProfileItem$StatusReason, boolean);\n  Code:\n   0:\taload_0\n   1:\tgetfield\t#38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   4:\tdup\n   5:\tifnonnull\t17\n   8:\tpop\n   9:\taload_0\n   10:\tinvokestatic\t#42; //Method CGLIB$BIND_CALLBACKS:(Ljava/lang/Object;)V\n   13:\taload_0\n   14:\tgetfield\t#38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   17:\tdup\n   18:\tifnull\t73\n   21:\taload_0\n   22:\tgetstatic\t#141; //Field CGLIB$changeItemMode$8$Method:Ljava/lang/reflect/Method;\n   25:\ticonst_3\n   26:\tanewarray\t#46; //class java/lang/Object\n   29:\tdup\n   30:\ticonst_0\n   31:\taload_1\n   32:\taastore\n   33:\tdup\n   34:\ticonst_1\n   35:\taload_2\n   36:\taastore\n   37:\tdup\n   38:\ticonst_2\n   39:\tiload_3\n   40:\tnew\t#143; //class java/lang/Boolean\n   43:\tdup_x1\n   44:\tswap\n   45:\tinvokespecial\t#146; //Method java/lang/Boolean.\"\u003cinit\u003e\":(Z)V\n   48:\taastore\n   49:\tgetstatic\t#148; //Field CGLIB$changeItemMode$8$Proxy:Lnet/sf/cglib/proxy/MethodProxy;\n   52:\tinvokeinterface\t#54,  5; //InterfaceMethod net/sf/cglib/proxy/MethodInterceptor.intercept:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;\n   57:\tdup\n   58:\tifnonnull\t66\n   61:\tpop\n   62:\ticonst_0\n   63:\tgoto\t72\n   66:\tcheckcast\t#143; //class java/lang/Boolean\n   69:\tinvokevirtual\t#152; //Method java/lang/Boolean.booleanValue:()Z\n   72:\tireturn\n   73:\taload_0\n   74:\taload_1\n   75:\taload_2\n   76:\tiload_3\n   77:\tinvokespecial\t#139; //Method com/mprv/secsph/profile/domain/UrlItem.changeItemMode:(Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z\n   80:\tireturn",
    "Created an attachment (id\u003d31037)\nUse MissingResolvedTypeWithKnownSignature instead of ResolvedType.MISSING\n\nIn order to dump generated code using type patterns either before weaving proxies or after generating closures we need to be able to match on missing type names. World.resolveToReferenceType() is changed to return MissingResolvedTypeWithKnownSignature where possible. This patch includes:\n1. The necessary one line change to World\n2. Replacement of \"resolved \u003d\u003d ResolvedType.MISSING\" with \"resolved.isMissing()\" and \"unresolved \u003d\u003d ResolvedType.MISSING\" with \"ResolvedType.isMissing(unresolved)\". The existing public MISSING field should probably be removed to avoid use.\n3. Two new dump testcases that rely on the changes.",
    "Matthew,\n\nYou want me to run the \"dump\" again?",
    "no need to take the dumps again - we still need to look at the bytecode.",
    "First step is that I\u0027d like to create the verify problem on the command line - the one that I can see in the log file.  Can I ask how many dependencies there are for this system?  Right now I\u0027m finding I don\u0027t have: IllegalProfileValueException - is it possible for you to email me the jar that solves this dependency? (I hope there aren\u0027t too many after that - I\u0027ve already grabbed hibernate which satisfies the hibernate and cglib dependencies)\n\nAlso - due to the way cglib seems to be generating things, it might be best if I have a set of dumps where the _before matches the \u0027after\u0027 variant of the code - that doesn\u0027t currently seem to be the case because the original dump attached includes the \u0027after\u0027 _ajdump from one run and then the later append to this bug includes the \u0027_before\u0027 directory from a later run.  If its not too much trouble, could you recreate it and attach the entire _ajdump folder which will include a matching pair?\n\nI\u0027m not sure the switch statement is broken at the moment as a further examination of the code is showing me code that switches on hashcodes (yuck) so that will lead to strange branches.",
    "Created an attachment (id\u003d31112)\nDump with _before and after weaver output\n\nHi Andy!\n\nHere is the dump that you requested. \n\nAbout your tries to run the program from command line, I\u0027m not sure that it\u0027s so simple. I\u0027ll also have to send you our hibernate mappings and you\u0027ll need to build the matching DB schema (although you can configure Hibernate to do it for you ...). Then, your test program will have to create Hibernate\u0027s SessionFactory - to make it parse the mappings and create proxies. You will also need our aspects ... \n\nAre you still going to do it? :-)\n\n10x!\nMisha.",
    "I don\u0027t need to run it successfully - I just need to have the types around for resolution to succeed - so I doubt I need the mappings.  Basically I just want to type\n\njava \u003cthebrokenclass\u003e\n\nand get the same \u0027Inconsistent Stack\u0027 message.  If I try that right now it says I am missing \u0027IllegalProfileValueException\u0027.  So I probably just need a jar or two of yours.\n\nI am having some success with the BCEL verifier reporting a similar kind of fault with the woven classes.",
    "Created an attachment (id\u003d31116)\nRequested dependencies\n\nHi,\n\nI hope it\u0027ll be enough, if not, tell me.\n",
    "Here is the lookupswitch statement:\n\n\n   2566:\tlookupswitch{ //2\n\t\t-845341380: 2592;\n\t\t1730110032: 2604;\n\t\tdefault: 2615 }\n\nAnd here is what happens to it after bcel has chewed on it:\n\n\n   2566:\ttableswitch{ //-845341380 to 1730110032\n\t\tdefault: 2611 }\n\nand then javap crashes....",
    "If the BCEL verifier catches these 2 problems could we switch it on by default?\nIt might even be useful in batch mode to identify problematic byte-code before it is executed. We could then allow the user to switch it off for performance reasons e.g. -Xnoverify (this used to be an option in early JDKs). The advantage of not waiting for the JVM to catch problems is that we have more context to help diagnose the problem. Also under LTW we could automatically dump before/after byte-code without asking the user to reproduce and even return the unwoven byte-code to the JVM so that the program can continue to load rather than failing.",
    "\u003e If the BCEL verifier catches these 2 problems could we switch it on by default?\n\nI would have have it *off* by default but it could be enabled through an option.  It adds *significant* overhead, analysing every possible control flow through every single method in every single class.\n\nAlthough it catches them, it is supremely unhelpful for diagnosing them - telling me very little that javap doesn\u0027t, but it provides something I can hack, unlike javap.",
    "I have fixed the damaged switch statement issue (manifests as \u0027invalid instruction\u0027).  The problem was BCEL - when we copy an instruction stream because we are weaving it, BCEL tries to be clever and use a tableswitch rather than a lookupswitch, which is a valid optimization in some circumstances.  It can\u0027t cope with the ranges that are in the switch for this generated cglib stuff:\n\n lookupswitch{ //2\n   -845341380: 2592;\n   1730110032: 2604;\n   default: 2615 }\n\n\nThe optimization only works if the entries are numerically in order with no gaps (eg: 1,2,3,4) - the arithmetic bcel does determines that these two *obey* these rule (doh!) - so it transforms this into a completely broken tableswitch.\n\nI\u0027ve put a test in the suite (amazing I could reduce it to this ...)\n\npublic class BrokenSwitch {\n  public static void main(String []argv) {\n    int i \u003d 1;\n    switch (i) {\n      case -845341380: System.err.println(\"a\");break;\n      case 1730110032: System.err.println(\"b\");break;\n      default: System.err.println(\"c\");break;\n    }\n  }\n}\n\naspect X {\n  before(): execution(* BrokenSwitch.main(..)) {}\n}\n\nfix for this part of the problem will be in the next AJ dev build.  That leaves the other (worse) problem of inconsistent stack height (unless this fix magically fixes the stack problem ... but thats unlikely)",
    "One down, one to go ... :-)\n\nThanks! (I wish i could help you ... )",
    "Ok....\n\nI believe it is a bug/feature of cglib.  Something that would still allow the class to pass verification but mean the methods being advised aren\u0027t quite well formed - so that when AspectJ modifies them, the problem in the method is exposed.\n\nI have a fix (*cough* hack) that involves me transforming the cglib code to correct some stack management in it before AspectJ modifies it.\n\nI\u0027m currently having a problem working out a stable fix - since I only need to do this extra manipulation when aspectj is weaving a method in a cglib generated class.",
    "Ok ... one of my famous long winded explanations .. fascinating stuff (well I think so) ... just call me a bytecode god ;)\n\nWe need to look at the code CGLIB creates first, here is an example method that is going to get woven by an aspect:\n\nprotected final boolean changeItemMode(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus, com.mprv.secsph.profile.domain.ProfileItem$StatusReason, boolean);\n  Code:\n   Stack\u003d9, Locals\u003d4, Args_size\u003d4\n   0:   aload_0\n   1:   getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   4:   dup\n   5:   ifnonnull       17\n   8:   pop\n   9:   aload_0\n   10:  invokestatic    #42; //Method CGLIB$BIND_CALLBACKS:(Ljava/lang/Object;)V\n   13:  aload_0\n   14:  getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   17:  dup\n   18:  ifnull  73\n   21:  aload_0\n   22:  getstatic       #648; //Field CGLIB$changeItemMode$52$Method:Ljava/lang/reflect/Method;\n   25:  iconst_3\n   26:  anewarray       #80; //class java/lang/Object\n   29:  dup\n   30:  iconst_0\n   31:  aload_1\n   32:  aastore\n   33:  dup\n   34:  iconst_1\n   35:  aload_2\n   36:  aastore\n   37:  dup\n   38:  iconst_2\n   39:  iload_3\n   40:  new     #308; //class java/lang/Boolean\n   43:  dup_x1\n   44:  swap\n   45:  invokespecial   #651; //Method java/lang/Boolean.\"\u003cinit\u003e\":(Z)V\n   48:  aastore\n   49:  getstatic       #653; //Field CGLIB$changeItemMode$52$Proxy:Lnet/sf/cglib/proxy/MethodProxy;\n   52:  invokeinterface #54,  5; //InterfaceMethod net/sf/cglib/proxy/MethodInterceptor.intercept:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;\n   57:  dup\n   58:  ifnonnull       66\n   61:  pop\n   62:  iconst_0\n   63:  goto    72\n   66:  checkcast       #308; //class java/lang/Boolean\n   69:  invokevirtual   #312; //Method java/lang/Boolean.booleanValue:()Z\n   72:  ireturn\n   73:  aload_0\n   74:  aload_1\n   75:  aload_2\n   76:  iload_3\n   77:  invokespecial   #646; //Method com/mprv/secsph/profile/domain/BaseParameterItem.changeItemMode:(Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z\n   80:  ireturn\n\nBasically it is choosing to delegate to a proxy for the method or call the original method.  Important things to note:\n\nInstruction 72: a return\nInstruction 80: a return\n\nso there are two routes out of this method.  This method verifies fine.  The woven version that fails verification has actually been targetted by a cflow entry weave (indicating it matches the top of a cflow).  This means the method is modified to increment a stack at the start and decrement a stack at the end:\n\nprotected final boolean changeItemMode(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus, com.mprv.secsph.profile.domain.ProfileItem$StatusReason, boolean);\n  Code:\n   Stack\u003d9, Locals\u003d6, Args_size\u003d4\n   0:   getstatic       #1772; //Field com/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   3:   invokevirtual   #1685; //Method org/aspectj/runtime/internal/CFlowCounter.inc:()V\n   6:   aload_0\n   7:   getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   10:  dup\n   11:  ifnonnull       23\n   14:  pop\n   15:  aload_0\n   16:  invokestatic    #42; //Method CGLIB$BIND_CALLBACKS:(Ljava/lang/Object;)V\n   19:  aload_0\n   20:  getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   23:  dup\n   24:  ifnull  81\n   27:  aload_0\n   28:  getstatic       #648; //Field CGLIB$changeItemMode$52$Method:Ljava/lang/reflect/Method;\n   31:  iconst_3\n   32:  anewarray       #80; //class java/lang/Object\n   35:  dup\n   36:  iconst_0\n   37:  aload_1\n   38:  aastore\n   39:  dup\n   40:  iconst_1\n   41:  aload_2\n   42:  aastore\n   43:  dup\n   44:  iconst_2\n   45:  iload_3\n   46:  new     #308; //class java/lang/Boolean\n   49:  dup_x1\n   50:  swap\n   51:  invokespecial   #651; //Method java/lang/Boolean.\"\u003cinit\u003e\":(Z)V\n   54:  aastore\n   55:  getstatic       #653; //Field CGLIB$changeItemMode$52$Proxy:Lnet/sf/cglib/proxy/MethodProxy;\n   58:  invokeinterface #54,  5; //InterfaceMethod net/sf/cglib/proxy/MethodInterceptor.intercept:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;\n   63:  dup\n   64:  ifnonnull       72\n   67:  pop\n   68:  iconst_0\n   69:  goto    78\n   72:  checkcast       #308; //class java/lang/Boolean\n   75:  invokevirtual   #312; //Method java/lang/Boolean.booleanValue:()Z\n   78:  goto    102\n   81:  aload_0\n   82:  aload_1\n   83:  aload_2\n   84:  iload_3\n   85:  invokespecial   #646; //Method com/mprv/secsph/profile/domain/BaseParameterItem.changeItemMode:(Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z\n   88:  goto    102\n   91:  astore  5\n   93:  getstatic       #1772; //Field com/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   96:  invokevirtual   #1688; //Method org/aspectj/runtime/internal/CFlowCounter.dec:()V\n   99:  aload   5\n   101: athrow\n   102: getstatic       #1772; //Field com/mprv/secsph/profile/domain/ChangeItemModeProtector.ajc$cflowCounter$0:Lorg/aspectj/runtime/internal/CFlowCounter;\n   105: invokevirtual   #1688; //Method org/aspectj/runtime/internal/CFlowCounter.dec:()V\n   108: ireturn\n  Exception table:\n   from   to  target type\n     6    91    91   Class java/lang/Throwable\n\nThis fails verification with an \u0027inconsistent stack error\u0027.  Asking my hacked BCEL verifier for more information I simply get told:\n\nCannot merge stacks of different size:\nOperandStack A:\nSlots used: 2 MaxStack: 9.\nint (Size: 1)\nnet.sf.cglib.proxy.MethodInterceptor (Size: 1)\n\nOperandStack B:\nSlots used: 1 MaxStack: 9.\nint (Size: 1)\nExecution flow:\n   0: getstatic 1772\t[InstructionContext]\n   3: invokevirtual 1685\t[InstructionContext]\n   6: aload_0\t[InstructionContext]\n   7: getfield 38\t[InstructionContext]\n  10: dup\t[InstructionContext]\n  11: ifnonnull -\u003e 23\t[InstructionContext]\n  23: dup\t[InstructionContext]\n  24: ifnull -\u003e 81\t[InstructionContext]\n  27: aload_0\t[InstructionContext]\n  28: getstatic 648\t[InstructionContext]\n  31: iconst_3\t[InstructionContext]\n  32: anewarray 80\t[InstructionContext]\n  35: dup\t[InstructionContext]\n  36: iconst_0\t[InstructionContext]\n  37: aload_1\t[InstructionContext]\n  38: aastore\t[InstructionContext]\n  39: dup\t[InstructionContext]\n  40: iconst_1\t[InstructionContext]\n  41: aload_2\t[InstructionContext]\n  42: aastore\t[InstructionContext]\n  43: dup\t[InstructionContext]\n  44: iconst_2\t[InstructionContext]\n  45: iload_3\t[InstructionContext]\n  46: new 308\t[InstructionContext]\n  49: dup_x1\t[InstructionContext]\n  50: swap\t[InstructionContext]\n  51: invokespecial 651\t[InstructionContext]\n  54: aastore\t[InstructionContext]\n  55: getstatic 653\t[InstructionContext]\n  58: invokeinterface 54\t[InstructionContext]\n  63: dup\t[InstructionContext]\n  64: ifnonnull -\u003e 72\t[InstructionContext]\n  72: checkcast 308\t[InstructionContext]\n  75: invokevirtual 312\t[InstructionContext]\n  78: goto -\u003e 102\t[InstructionContext]\n 102: getstatic 1772\t[InstructionContext]\n\nWhat the hell does that mean?  Basically it means there are 2 routes to instruction 102 in this method and when we arrive at instruction 102, these two routes have a different stack.  In one route we only have an int (actually representing a boolean) on the stack.  In route two we have the same int (representing a boolean) and a MethodInterceptor instance.  Verification does not allow two routes to an instruction to have differing stacks.\n\nErr ... so what the hell does that mean?\n\nFirst, lets reduce the problem.  The above woven code includes finally clauses and before advice - all messy and clouding the issue.  Let\u0027s switch to just having \u0027after() returning\u0027 advice on the method.  Here is another woven form of the code that also fails verification:\n\n\nprotected final boolean changeItemMode(com.mprv.secsph.profile.domain.ProfileItem$ItemStatus, com.mprv.secsph.profile.domain.ProfileItem$StatusReason, boolean);\n  Code:\n   Stack\u003d9, Locals\u003d4, Args_size\u003d4\n   0:   aload_0\n   1:   getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   4:   dup\n   5:   ifnonnull       17\n   8:   pop\n   9:   aload_0\n   10:  invokestatic    #42; //Method CGLIB$BIND_CALLBACKS:(Ljava/lang/Object;)V\n   13:  aload_0\n   14:  getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\n   17:  dup\n   18:  ifnull  75\n   21:  aload_0\n   22:  getstatic       #648; //Field CGLIB$changeItemMode$52$Method:Ljava/lang/reflect/Method;\n   25:  iconst_3\n   26:  anewarray       #80; //class java/lang/Object\n   29:  dup\n   30:  iconst_0\n   31:  aload_1\n   32:  aastore\n   33:  dup\n   34:  iconst_1\n   35:  aload_2\n   36:  aastore\n   37:  dup\n   38:  iconst_2\n   39:  iload_3\n   40:  new     #308; //class java/lang/Boolean\n   43:  dup_x1\n   44:  swap\n   45:  invokespecial   #651; //Method java/lang/Boolean.\"\u003cinit\u003e\":(Z)V\n   48:  aastore\n   49:  getstatic       #653; //Field CGLIB$changeItemMode$52$Proxy:Lnet/sf/cglib/proxy/MethodProxy;\n   52:  invokeinterface #54,  5; //InterfaceMethod net/sf/cglib/proxy/MethodInterceptor.intercept:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;\n   57:  dup\n   58:  ifnonnull       66\n   61:  pop\n   62:  iconst_0\n   63:  goto    72\n   66:  checkcast       #308; //class java/lang/Boolean\n   69:  invokevirtual   #312; //Method java/lang/Boolean.booleanValue:()Z\n   72:  goto    85\n   75:  aload_0\n   76:  aload_1\n   77:  aload_2\n   78:  iload_3\n   79:  invokespecial   #646; //Method com/mprv/secsph/profile/domain/BaseParameterItem.changeItemMode:(Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z\n   82:  goto    85\n   85:  invokestatic    #1656; //Method A.aspectOf:()LA;\n   88:  invokevirtual   #1659; //Method A.ajc$afterReturning$A$1$4c9f519a:()V\n   91:  ireturn\n\nSo, we can see the afterReturning advice at the end of the bytecode.  What\u0027s gone wrong? The verification failure is now:\n\nExecution flow:\n   0: aload_0\t[InstructionContext]\n   1: getfield 38\t[InstructionContext]\n   4: dup\t[InstructionContext]\n   5: ifnonnull -\u003e 17\t[InstructionContext]\n  17: dup\t[InstructionContext]\n  18: ifnull -\u003e 75\t[InstructionContext]\n  21: aload_0\t[InstructionContext]\n  22: getstatic 648\t[InstructionContext]\n  25: iconst_3\t[InstructionContext]\n  26: anewarray 80\t[InstructionContext]\n  29: dup\t[InstructionContext]\n  30: iconst_0\t[InstructionContext]\n  31: aload_1\t[InstructionContext]\n  32: aastore\t[InstructionContext]\n  33: dup\t[InstructionContext]\n  34: iconst_1\t[InstructionContext]\n  35: aload_2\t[InstructionContext]\n  36: aastore\t[InstructionContext]\n  37: dup\t[InstructionContext]\n  38: iconst_2\t[InstructionContext]\n  39: iload_3\t[InstructionContext]\n  40: new 308\t[InstructionContext]\n  43: dup_x1\t[InstructionContext]\n  44: swap\t[InstructionContext]\n  45: invokespecial 651\t[InstructionContext]\n  48: aastore\t[InstructionContext]\n  49: getstatic 653\t[InstructionContext]\n  52: invokeinterface 54\t[InstructionContext]\n  57: dup\t[InstructionContext]\n  58: ifnonnull -\u003e 66\t[InstructionContext]\n  66: checkcast 308\t[InstructionContext]\n  69: invokevirtual 312\t[InstructionContext]\n  72: goto -\u003e 85\t[InstructionContext]\n  85: invokestatic 1656\t[InstructionContext]\n\nSo, there are two routes to instruction 85 that arrive with differing stacks.\n\nThe key thing to recognize is *how aspectj implements after advice*.  We have put the code to call the advice in at instruction 85 - AND WE HAVE MODIFIED EVERY RETURN INSTRUCTION IN THE METHOD TO INSTEAD CALL THE ADVICE INSTRUCTIONS.  This means where there used to be multiple \u0027escape routes\u0027 from the method, there is now *ONE* at the end of the advice.  And you can see the calls at instruction 72 and instruction 82 that used to be \u0027ireturns\u0027 are now \u0027gotos\u0027 that jump to the advice.  This exposes a stack management issue that was there all along.  In the original code there were two returns out of the program and at each return the stack was different - verification doesn\u0027t check this.\n\n\nNow, unfortunately the verifier only tells me one of the routes (DOH!) - what we actually see above is the route that results in a single \u0027int\u0027 on the stack.  Let\u0027s take an alternative route and look at the stack:\n\n   0:   aload_0\nSTACK \u003d \u0027this\u0027\n   1:   getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027\n   4:   dup\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027\n   5:   ifnonnull       17\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027\n   8:   pop\nSTACK \u003d \n   9:   aload_0\nSTACK \u003d \u0027this\u0027\n   10:  invokestatic    #42; //Method CGLIB$BIND_CALLBACKS:(Ljava/lang/Object;)V\nSTACK \u003d \u0027\u0027\n   13:  aload_0\nSTACK \u003d \u0027this\u0027\n   14:  getfield        #38; //Field CGLIB$CALLBACK_0:Lnet/sf/cglib/proxy/MethodInterceptor;\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027\n   17:  dup\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027\n   18:  ifnull  75\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027\n\nlet\u0027s assume its null and jump to 75\n\n   75:  aload_0\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027this\u0027\n   76:  aload_1\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027this\u0027 \u0027ProfileItem$ItemStatus\u0027\n   77:  aload_2\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027this\u0027 \u0027ProfileItem$ItemStatus\u0027 \u0027ProfileItem$StatusReason\u0027\n   78:  iload_3\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027this\u0027 \u0027ProfileItem$ItemStatus\u0027 \u0027ProfileItem$StatusReason\u0027 \u0027boolean\u0027\n   79:  invokespecial   #646; //Method com/mprv/secsph/profile/domain/BaseParameterItem.changeItemMode:(Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z\nSTACK \u003d \u0027this.MethodInterceptor CGLIB$CALLBACK_0\u0027 \u0027boolean\u0027\n   82:  goto    85\n\n// BANG, route to 85 that leaves us with the additional MethodInterceptor on the stack.\n\nWhat\u0027s missing?  In the jump from 18 to 75, there is a missing \u0027pop\u0027 that would have cleared the stack. (like the pattern at instruction 5 and 8 - after a null check, you do a pop).\n\nIf I insert a \u0027pop\u0027 instruction at position 75 (before the aload_0) then the stack is emptied.  We will then reach instruction 85 with the same stack regardless of the route taken.\n\n\nI have hacked the CGLIB generated code and inserted the \u0027pop\u0027 at that position - after weaving, this results in a form of the code that verifies perfectly.\n\nSo ... it\u0027s a feature of the CGLIB generated code that it can\u0027t be woven by AspectJ after advice (or constructs that weave in a similar way, like cflow).  I imagine javac and other bytecode producers never create code with differing stack heights when they return from a method.  I\u0027m not quite sure what to do now ...  the original CGLIB code isn\u0027t wrong as it passes verification, it just doesn\u0027t lend itself to AspectJ weaving.  It doesn\u0027t seem unreasonable for CGLIB to insert that pop to produce \u0027nice\u0027 bytecode.  But, in the short term, I wondering how stable the pattern is for the generated method.  Can I reliably insert the missing \u0027pop\u0027 under all circumstances...",
    "May be try posting to CGLIB forum?",
    "I have posted to the CGLIB mailing list.\n\nMy question for you is whether you really want/need to weave these proxies in the first place?  I can imagine situations where it will give you unexpected/incorrect results.  If you weave \u0027execution(* someMethod(..))\u0027 and there is a proxy created for the class containing \u0027someMethod\u0027 then your advice can run twice, once in the advised proxy and again if the proxy eventually calls the original method.  It might be that you want to add an element to the aop.xml that causes it avoid weaving *anything* proxy like - does that sound reasonable?",
    "Bingo!!\n\nIt what I was going to ask from you anyway :-).\n\nBut the catch is: in the near future I\u0027m planning some code generation with CGLIB ... But you are right ... it\u0027ll be VERY confusing when aspectj will weave\u0027em. \n\nYou know ... for now it\u0027s best for me not to weave the generated code at all, as long as it\u0027s propose is creating a proxy. So may be this new element will do something like that:\n\n\u003cexclude generated code within\u003d\"org.hibernate.*\"\u003e",
    "Matthew - are you able to verify the recent patches to type pattern matching will enable Misha\u0027s proposed \u0027exclude\u0027 clause to work as intended?",
    "Did you try it with any kind of exclusion yet Misha?  We were thinking something like \"*CGLIB$$*\" (but I don\u0027t think Matthew has confirmed yet whether that will work).",
    "Yea,\n\nI\u0027ve tried:\n\u003cexclude within\u003d\"com.mprv..*EnhancerByCGLIB*\"/\u003e\nand \n\u003cexclude within\u003d\"com.mprv.secsph.profile.domain.*EnhancerByCGLIB*\"/\u003e\n\nBoth didn\u0027t work ...",
    "My pattern didn\u0027t work because I hadn\u0027t committed Matthews changes - I\u0027ve now done that.  It should be better behaved in a dev build later today (not sure it\u0027ll be the next build as one is already in progress).  matthew can you try it with HEAD?",
    "Matthews changes are now in the latest dev build... it may match those CGLIB$$ patterns now",
    "Now that the fix to match missing types (in this case generated proxies) with know signatures has been integrated I am confident the suggested exclude statement in aop.xml will work. There is a test in the harness which dumps Java proxies of the from $Proxy1 which would not work if either missing types could not be matched or bug 118616 was not fixed.",
    "Hi guys,\n\nI wrote the following in the aop.xml, and it doesn\u0027t work ...\n\n\u003cweaver options\u003d\"-XlazyTjp\"\u003e\n\t\u003cinclude within\u003d\"com.mprv..*\"/\u003e\n\t\u003cexclude within\u003d\"com.mprv.secsph.profile.domain.*CGLIB*\"/\u003e\n\u003c/weaver\u003e\n\nneither did this one:\n\n\u003cweaver options\u003d\"-XlazyTjp\"\u003e\n\t\u003cinclude within\u003d\"com.mprv..*\"/\u003e\n        \u003cexclude within\u003d\"com.mprv..*CGLIB*\"/\u003e\n\u003c/weaver\u003e\n\nThanks!",
    "We are going to work on enhancing out testcase for this - can I just confirm you were using a very recent dev build of AspectJ when you made your last attempt?",
    "I can reproduce this problem. Matching on \"CGLIB\" in a type name does not seem to work. I will investigate.",
    "You don\u0027t need the \"\u003cinclude ...\" clause so try this instead:\n\n\u003cweaver options\u003d\"-XlazyTjp\"\u003e\n        \u003cexclude within\u003d\"com.mprv..*CGLIB*\"/\u003e\n\u003c/weaver\u003e\n\nThere may be a problem with matching both include and exclude. Using just exclude solved the problem for me.\n\nCheers",
    "Hi Andy and Mathew!\n\nI\u0027ve removed \"include\" and it worked!!\nBut ... :)\n\nThe porpose of LTW for me was to save people\u0027s time by allowing\u0027em to compile ONLY what they\u0027ve changed using javac. \n\nAfter the compilation, Tomcat tries to redeploy recompiled classes, and this is what happens next:\n\njava.lang.Exception: AspectJ5 does not weave hotswapped class (com/mprv/secsph/profile/domain/ProfileItem)\n\tat org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:55)\n\tat sun.instrument.TransformerManager.transform(TransformerManager.java:122)\n\tat sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155)\n\nCan you please support hotswapping? :) This is what the LTW is good for ...\n\nThanks!\nMisha.",
    "Phew.  Matthew is also fixing the ability to use include/exclude together (under a separate bug).\n\nWe won\u0027t be able to do anything for hotswap in the 1.5.0 release (due imminently...).  Hotswap makes things *really complex* since you may modify a type (e.g. via an ITD) in such a way that we need to then reweave a load of other stuff that is already in the system and we don\u0027t track that information under LTW right now.\n\nI\u0027ve copied Ron Bodkin as Ron is one of our \u0027power users\u0027 wrt load time weaving and also has tomcat experience.  Ron - any comments on what Misha is trying to achieve?",
    "I\u0027m going to close this bug shortly to mark the work we have done on it for 1.5.0, there are two new bugs to track what is now coming out of this bug:\n\n120372 - recording that we can\u0027t successfully weave cglib generated code\n120375 - covering reweaving hotswapped code\n\n",
    "Thanks a lot for all help!\n\n120375 - is important to us, so if you can, please give it a try ... \n\nThanks!\n",
    "There\u0027s a lot to catch up on here. A few questions/comments: \n\n1) Are you just redeploying an application as a war here? That shouldn\u0027t require AspectJ Hot Swap support. I just verified that there\u0027s no problem deploying a new version of an application to Tomcat 5.5.9: it redeploys without requiring hotswapping (it creates a new ClassLoader). Of course, if you are trying to run exploded classes or if you are redeploying shared library code, then that could be a problem. It often is still easier to reploy a jar than to restart the server...\n\n2) Why can\u0027t AspectJ put after returning advice calls in front of each of the bytecode ireturn\u0027s instead of requiring a single return? Since multiple returns is valid bytecode, AspectJ should just support it. Right? Even if the CGLIB code is ugly, AspectJ\u0027s weaver ought to support verifiable bytecode.\n\n3) I was going to report a bug I saw yesterday whereby I got a BCException in matching names like $Proxy4 in ResolvedType.getDeclaringType (since it tries to resolve a type with the name \"\"). Hopefully there is already revised logic that handles this case.\n\n#2 also reminds me of another interesting question. I know that Eugene Kuleshov has been burning the midnight oil trying to get ASM to properly create Java 6 verification proofs in woven code. That\u0027s going to be another big project for AspectJ, when it comes to support Java 6 bytecode: it will have to output the same kind of proofs of correctness for the woven bytecodes...\n\n\n",
    "thanks Ron.\n\nOn (2) - of course that is an option for AJ but I\u0027m not changing our weaving strategy with RC1 so close - when all the code we\u0027ve ever processed since being a binary weaver hasn\u0027t hit this problem.  A question for you? do you not care about the code bloat this would introduce?   It is more than just a method call at times, I\u0027m also not sure if we can nicely implement finally type constructs by inlining in this way.  I am involved in a thread on the cglib list about the situation.  We haven\u0027t faced Java6 yet but I know the verification thing will bite us - we may use ASM for that part of things - not sure yet.",
    "Re: code bloat, I see the issue: multiple returns from a method is common but multiple returns with different stack frames is not. How does the caller of that CGLIB method handle having possibly different stack frames? This sounds a bit like FORTH programming (a stack-based language where you explicitly did push and pop operations and might have different numbers of members on the stack for different cases).\n\nHere\u0027s a hokey idea: use the current strategy but if the class can\u0027t be verified, then do the bloated but safe alternative. Let the weird code pay the price and not all the code.\n\nBut re: code bloat, I do wonder how much difference it really makes after JIT compilation. Will modern JITs optimize the common code before returns? If so, then the issue isn\u0027t too important. If not, then it also hurts performance (worsens cache performance).",
    "we can continue the discussion here but I\u0027m closing this bug to cover the work done in 1.5.0 for this problem.  The two other bugs cover the new work items to come out of it..."
  ],
  "commentCreationDates": [
    "2005-11-24T09:06:56+01:00",
    "2005-11-24T11:37:45+01:00",
    "2005-11-24T12:31:52+01:00",
    "2005-11-24T12:34:37+01:00",
    "2005-11-25T14:27:20+01:00",
    "2005-11-25T16:35:53+01:00",
    "2005-11-26T16:36:52+01:00",
    "2005-11-27T08:27:05+01:00",
    "2005-11-28T16:57:53+01:00",
    "2005-11-29T10:22:12+01:00",
    "2005-11-29T14:39:32+01:00",
    "2005-11-29T15:43:18+01:00",
    "2005-11-29T15:55:26+01:00",
    "2005-11-29T16:21:09+01:00",
    "2005-11-29T16:49:00+01:00",
    "2005-11-30T16:57:17+01:00",
    "2005-12-01T11:15:47+01:00",
    "2005-12-02T16:42:16+01:00",
    "2005-12-04T08:13:22+01:00",
    "2005-12-04T15:06:23+01:00",
    "2005-12-05T10:31:27+01:00",
    "2005-12-05T13:00:54+01:00",
    "2005-12-05T14:09:05+01:00",
    "2005-12-05T14:23:02+01:00",
    "2005-12-05T18:32:06+01:00",
    "2005-12-05T19:32:30+01:00",
    "2005-12-06T08:17:44+01:00",
    "2005-12-06T11:31:37+01:00",
    "2005-12-06T11:49:19+01:00",
    "2005-12-06T16:33:57+01:00",
    "2005-12-07T11:13:21+01:00",
    "2005-12-07T12:15:17+01:00",
    "2005-12-07T13:06:57+01:00",
    "2005-12-07T13:35:39+01:00",
    "2005-12-07T14:18:36+01:00",
    "2005-12-08T15:19:37+01:00",
    "2005-12-08T17:20:11+01:00",
    "2005-12-09T10:54:58+01:00",
    "2005-12-09T14:04:11+01:00",
    "2005-12-09T16:19:13+01:00",
    "2005-12-11T13:12:24+01:00",
    "2005-12-12T10:55:34+01:00",
    "2005-12-12T11:22:09+01:00",
    "2005-12-12T11:41:44+01:00",
    "2005-12-12T14:45:15+01:00",
    "2005-12-12T15:07:50+01:00",
    "2005-12-12T15:45:40+01:00",
    "2005-12-12T16:23:18+01:00",
    "2005-12-12T18:12:35+01:00",
    "2005-12-12T18:49:00+01:00",
    "2005-12-12T19:10:14+01:00",
    "2005-12-12T19:20:46+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$859d1101, method: changeItemMode signature: (Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z) Inconsistent stack height 2",
      "elements": [
        {
          "method": "java.lang.Class.getDeclaredMethods0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.privateGetDeclaredMethods",
          "source": "Class.java:2365"
        },
        {
          "method": "java.lang.Class.getDeclaredMethod",
          "source": "Class.java:1907"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.getCallbacksSetter",
          "source": "Enhancer.java:597"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.setCallbacksHelper",
          "source": "Enhancer.java:585"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.setThreadCallbacks",
          "source": "Enhancer.java:579"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.createUsingReflection",
          "source": "Enhancer.java:601"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.firstInstance",
          "source": "Enhancer.java:532"
        },
        {
          "method": "net.sf.cglib.core.AbstractClassGenerator.create",
          "source": "AbstractClassGenerator.java:220"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.createHelper",
          "source": "Enhancer.java:373"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.create",
          "source": "Enhancer.java:281"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.create",
          "source": "Enhancer.java:640"
        },
        {
          "method": "org.hibernate.proxy.CGLIBLazyInitializer.getProxyFactory",
          "source": "CGLIBLazyInitializer.java:95"
        },
        {
          "method": "org.hibernate.proxy.CGLIBProxyFactory.postInstantiate",
          "source": "CGLIBProxyFactory.java:42"
        },
        {
          "method": "org.hibernate.tuple.PojoTuplizer.buildProxyFactory",
          "source": "PojoTuplizer.java:144"
        },
        {
          "method": "org.hibernate.tuple.AbstractTuplizer.\u003cinit\u003e",
          "source": "AbstractTuplizer.java:83"
        },
        {
          "method": "org.hibernate.tuple.PojoTuplizer.\u003cinit\u003e",
          "source": "PojoTuplizer.java:54"
        },
        {
          "method": "org.hibernate.tuple.TuplizerLookup.create",
          "source": "TuplizerLookup.java:47"
        },
        {
          "method": "org.hibernate.tuple.EntityMetamodel.\u003cinit\u003e",
          "source": "EntityMetamodel.java:218"
        },
        {
          "method": "org.hibernate.persister.entity.BasicEntityPersister.\u003cinit\u003e",
          "source": "BasicEntityPersister.java:400"
        },
        {
          "method": "org.hibernate.persister.entity.SingleTableEntityPersister.\u003cinit\u003e",
          "source": "SingleTableEntityPersister.java:104"
        },
        {
          "method": "org.hibernate.persister.PersisterFactory.createClassPersister",
          "source": "PersisterFactory.java:55"
        },
        {
          "method": "org.hibernate.impl.SessionFactoryImpl.\u003cinit\u003e",
          "source": "SessionFactoryImpl.java:211"
        },
        {
          "method": "org.hibernate.cfg.Configuration.buildSessionFactory",
          "source": "Configuration.java:1005"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "117854",
      "date": "2005-11-24T09:06:56+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: com/mprv/secsph/profile/domain/UrlItem$$EnhancerByCGLIB$$b7f17874, method: changeItemMode signature: (Lcom/mprv/secsph/profile/domain/ProfileItem$ItemStatus;Lcom/mprv/secsph/profile/domain/ProfileItem$StatusReason;Z)Z) Inconsistent stack height 2",
      "elements": [
        {
          "method": "java.lang.Class.getDeclaredMethods0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.privateGetDeclaredMethods",
          "source": "Class.java:2365"
        },
        {
          "method": "java.lang.Class.getDeclaredMethod",
          "source": "Class.java:1907"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.getCallbacksSetter",
          "source": "Enhancer.java:597"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.setCallbacksHelper",
          "source": "Enhancer.java:585"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.setThreadCallbacks",
          "source": "Enhancer.java:579"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.createUsingReflection",
          "source": "Enhancer.java:601"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.firstInstance",
          "source": "Enhancer.java:532"
        },
        {
          "method": "net.sf.cglib.core.AbstractClassGenerator.create",
          "source": "AbstractClassGenerator.java:220"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.createHelper",
          "source": "Enhancer.java:373"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.create",
          "source": "Enhancer.java:281"
        },
        {
          "method": "net.sf.cglib.proxy.Enhancer.create",
          "source": "Enhancer.java:640"
        },
        {
          "method": "org.hibernate.proxy.CGLIBLazyInitializer.getProxyFactory",
          "source": "CGLIBLazyInitializer.java:95"
        },
        {
          "method": "org.hibernate.proxy.CGLIBProxyFactory.postInstantiate",
          "source": "CGLIBProxyFactory.java:42"
        },
        {
          "method": "org.hibernate.tuple.PojoTuplizer.buildProxyFactory",
          "source": "PojoTuplizer.java:144"
        },
        {
          "method": "org.hibernate.tuple.AbstractTuplizer.\u003cinit\u003e",
          "source": "AbstractTuplizer.java:83"
        },
        {
          "method": "org.hibernate.tuple.PojoTuplizer.\u003cinit\u003e",
          "source": "PojoTuplizer.java:54"
        },
        {
          "method": "org.hibernate.tuple.TuplizerLookup.create",
          "source": "TuplizerLookup.java:47"
        },
        {
          "method": "org.hibernate.tuple.EntityMetamodel.\u003cinit\u003e",
          "source": "EntityMetamodel.java:218"
        },
        {
          "method": "org.hibernate.persister.entity.BasicEntityPersister.\u003cinit\u003e",
          "source": "BasicEntityPersister.java:400"
        },
        {
          "method": "org.hibernate.persister.entity.SingleTableEntityPersister.\u003cinit\u003e",
          "source": "SingleTableEntityPersister.java:104"
        },
        {
          "method": "org.hibernate.persister.PersisterFactory.createClassPersister",
          "source": "PersisterFactory.java:55"
        },
        {
          "method": "org.hibernate.impl.SessionFactoryImpl.\u003cinit\u003e",
          "source": "SessionFactoryImpl.java:211"
        },
        {
          "method": "org.hibernate.cfg.Configuration.buildSessionFactory",
          "source": "Configuration.java:1005"
        },
        {
          "method": "org.springframework.orm.hibernate3.LocalSessionFactoryBean.newSessionFactory",
          "source": "LocalSessionFactoryBean.java:758"
        },
        {
          "method": "org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet",
          "source": "LocalSessionFactoryBean.java:685"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods",
          "source": "AbstractAutowireCapableBeanFactory.java:937"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean",
          "source": "AbstractAutowireCapableBeanFactory.java:334"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractBeanFactory.getBean",
          "source": "AbstractBeanFactory.java:222"
        },
        {
          "method": "org.springframework.beans.factory.support.AbstractBeanFactory.getBean",
          "source": "AbstractBeanFactory.java:146"
        },
        {
          "method": "org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons",
          "source": "DefaultListableBeanFactory.java:271"
        },
        {
          "method": "org.springframework.context.support.AbstractApplicationContext.refresh",
          "source": "AbstractApplicationContext.java:310"
        },
        {
          "method": "org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh",
          "source": "AbstractRefreshableWebApplicationContext.java:133"
        },
        {
          "method": "com.mprv.secsph.migration.MigrationListener.loadAppContext",
          "source": "MigrationListener.java:122"
        },
        {
          "method": "com.mprv.secsph.migration.MigrationListener.contextInitialized",
          "source": "MigrationListener.java:50"
        },
        {
          "method": "com.mprv.secsph.server.loader.AsyncServletContextListener$1.run",
          "source": "AsyncServletContextListener.java:67"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "number": 1,
      "commentIndex": 11,
      "bugId": "117854",
      "date": "2005-11-29T15:43:18+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.Exception",
      "message": "AspectJ5 does not weave hotswapped class (com/mprv/secsph/profile/domain/ProfileItem)",
      "elements": [
        {
          "method": "org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform",
          "source": "ClassPreProcessorAgentAdapter.java:55"
        },
        {
          "method": "sun.instrument.TransformerManager.transform",
          "source": "TransformerManager.java:122"
        },
        {
          "method": "sun.instrument.InstrumentationImpl.transform",
          "source": "InstrumentationImpl.java:155"
        }
      ],
      "number": 2,
      "commentIndex": 44,
      "bugId": "117854",
      "date": "2005-12-12T14:45:15+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "117854",
  "bugId": "117854",
  "date": "2005-11-24T09:06:56+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}