{
  "comments": [
    "This program causes the java VM to crash. It is a minimal example -- if you remove anything in the aspects it works. \n\n1. PROGRAM CODE\n\npackage test;\nimport org.aspectj.lang.*;\nimport org.aspectj.lang.reflect.*;\n\npublic class Test3 {\n   public static void main(String[] args) throws Exception {\n      Test3 a \u003d new Test3();\n      a.foo(-3);\n   }\n   public void foo(int i) {\n      this.x\u003di;\n   }\n   int x;\n   \n\n}\n\naspect Log {\n   pointcut assign(Object newval, Object targ):\n      set(* test..*)  \u0026\u0026 args(newval) \u0026\u0026 target(targ);\n\n   before(Object newval, Object targ): assign(newval,targ) {\n      Signature sign \u003d thisJoinPoint.getSignature();\n      System.out.println(targ.toString() + \".\" + sign.getName() + \":\u003d\" + newval);\n   }\n   /*\n}\n// Different error message if you divide into two aspects\naspect Tracing {\n   */\n   pointcut tracedCall():\n      call(* test..*(..))/* \u0026\u0026 !within(Tracing)*/ \u0026\u0026 !within(Log);\n\n   after() returning (Object o):  tracedCall() {\n      // Works if you comment out either of these two lines\n      thisJoinPoint.getSignature();\n      System.out.println(thisJoinPoint);\n   }\n} \n\n2. RESULTS ON SOLARIS\n\n[erik@oden test] java test.Test3 \ntest.Test3@b8df17.x:\u003d-3\n \nUnexpected Signal : 11 occurred at PC\u003d0xFA415A00\nFunction\u003d[Unknown.]\nLibrary\u003d(N/A)\n \nNOTE: We are unable to locate the function name symbol for the error\n      just occurred. Please refer to release documentation for possible\n      reason and solutions.\n \n \nCurrent Java thread:\n \nDynamic libraries:\n0x10000         java\n0xff350000      /usr/lib/libthread.so.1\n0xff390000      /usr/lib/libdl.so.1\n0xff200000      /usr/lib/libc.so.1\n0xff330000      /usr/platform/SUNW,Ultra-250/lib/libc_psr.so.1\n0xfe000000      /usr/j2se/jre/lib/sparc/client/libjvm.so\n0xff2e0000      /usr/lib/libCrun.so.1\n0xff1e0000      /usr/lib/libsocket.so.1\n0xff100000      /usr/lib/libnsl.so.1\n0xff0d0000      /usr/lib/libm.so.1\n0xff310000      /usr/lib/libw.so.1\n0xff0b0000      /usr/lib/libmp.so.2\n0xff080000      /usr/j2se/jre/lib/sparc/native_threads/libhpi.so\n0xff050000      /usr/j2se/jre/lib/sparc/libverify.so\n0xff020000      /usr/j2se/jre/lib/sparc/libjava.so\n0xfe7e0000      /usr/j2se/jre/lib/sparc/libzip.so\n0xfe5b0000      /usr/lib/locale/sv_SE/sv_SE.so.2\n \nLocal Time \u003d Fri Jan 24 13:38:29 2003\nElapsed Time \u003d 2\n#\n# HotSpot Virtual Machine Error : 11\n# Error ID : 4F530E43505002D3 01\n# Please report this error at\n# http://java.sun.com/cgi-bin/bugreport.cgi\n#\n# Java VM: Java HotSpot(TM) Client VM (1.4.0-b92 mixed mode)\n#\n# An error report file has been saved as hs_err_pid15099.log.\n# Please refer to the file for further information.\n#\nAbort\n[erik@oden test] \n[erik@oden test] /usr/j2se.old/bin/java test.Test3\ntest.Test3@1afa3.x:\u003d-3\n \nUnexpected Signal : 11 occurred at PC\u003d0x85c24\nFunction name\u003d(N/A)\nLibrary\u003d(N/A)\n \nNOTE: We are unable to locate the function name symbol for the error\n      just occurred. Please refer to release documentation for possible\n      reason and solutions.\n \n \n \nCurrent Java thread:\n \nDynamic libraries:\n0x10000         /usr/j2se.old/bin/../bin/sparc/native_threads/java\n0xff350000      /usr/lib/libthread.so.1\n0xff390000      /usr/lib/libdl.so.1\n0xff200000      /usr/lib/libc.so.1\n0xff330000      /usr/platform/SUNW,Ultra-250/lib/libc_psr.so.1\n0xfe480000      /usr/j2se.old/jre/lib/sparc/client/libjvm.so\n0xff2e0000      /usr/lib/libCrun.so.1\n0xff1e0000      /usr/lib/libsocket.so.1\n0xff100000      /usr/lib/libnsl.so.1\n0xff0d0000      /usr/lib/libm.so.1\n0xff310000      /usr/lib/libw.so.1\n0xff0b0000      /usr/lib/libmp.so.2\n0xff080000      /usr/j2se.old/jre/lib/sparc/native_threads/libhpi.so\n0xff050000      /usr/j2se.old/jre/lib/sparc/libverify.so\n0xfe440000      /usr/j2se.old/jre/lib/sparc/libjava.so\n0xff020000      /usr/j2se.old/jre/lib/sparc/libzip.so\n0xfe260000      /usr/lib/locale/sv_SE/sv_SE.so.2\n \nLocal Time \u003d Fri Jan 24 13:39:20 2003\nElapsed Time \u003d 2\n#\n# HotSpot Virtual Machine Error : 11\n# Error ID : 4F530E43505002C4 01\n# Please report this error at\n# http://java.sun.com/cgi-bin/bugreport.cgi\n#\n# Java VM: Java HotSpot(TM) Client VM (1.3.1_02-b02 mixed mode)\n#\n# An error report file has been saved as hs_err_pid15100.log.\n# Please refer to the file for further information.\n#\nAbort\n[erik@oden test] \n\n3. RESULTS ON WINDOWS 2000\n\nResults on Windows 2000 (If I have copied it correctly)\n\u003ejava -classpath ..\\..\\aspectj1.1\\lib\\aspectjrt.jar;. test.Test3\ntest.Test3@1a8c4e7.x:\u003d-3\nException in thread \"main\" java.lang.NullPointerException\n        at test.Log.ajc$afterReturning$test_Log$30d(Test3.java:37)\n        at test.Test3.main(Test3.java:8)\n\u003ejava -version\njava version \"1.4.1_01\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_01-b01)\nJava HotSpot(TM) Client VM (build 1.4.1_01-b01, mixed mode)\njava",
    "This is now fixed in the current cvs tree with a test in bugs/crashes.\n\nThis was a fascinating bug, and you did an excellent job of reducing it to a \nminimal test case.  The problem had to do with ajc\u0027s attempts to optimize away \nthe creation of dynamic JoinPoint objects, which can be very expensive.  Your \ncode managed to confuse this optimization and caused it to generate a call to \nthe method ThisJoinPoint.StaticPart.getSignature on an object that was \nstatically typed to ThisJoinPoint.  This is illegal bytecode.\n\nYou should consider reporting this as a bug to SUN.  While ajc did generate \nillegal bytecode here, the correct VM behavior should have been to produce a \nVerifyError when loading the classes.  Neither the Solaris or Windows VM is \nhandling this case at all well.  The Solaris VMs behavior is particularly \ntroubling as it causes such a hard crash."
  ],
  "commentCreationDates": [
    "2003-01-24T12:25:03+01:00",
    "2003-02-13T21:59:00+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "test.Log.ajc$afterReturning$test_Log$30d",
          "source": "Test3.java:37"
        },
        {
          "method": "test.Test3.main",
          "source": "Test3.java:8"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "30168",
      "date": "2003-01-24T12:25:03+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "30168",
  "bugId": "30168",
  "date": "2003-01-24T12:25:03+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}