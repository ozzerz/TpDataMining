{
  "comments": [
    "Using an aspect that extracts an annotation as context fails with an AccessControlException when run under a Java 2 security manager i.e. -Djava.secuirty.manager.\n\nUsing this aspect\n\npublic aspect SecuritySupport {\n\n\tbefore (Permission p) : execution(@Permission * *(..)) \u0026\u0026 @annotation(p) {\n\t\tSecurityManager sm \u003d System.getSecurityManager();\n\t\tif (sm !\u003d null) {\n\t\t\tsm.checkPermission(new HelloPermission(p.value()));\n\t\t}\n\t}\n\t\n}\n\nwith this program\n\npublic class HelloWorld {\n\n\tprivate String text \u003d \"Hello World!\";\n\t\n\t@Permission(\"print\")\n\tpublic void println() {\n\t\tSecurityManager sm \u003d System.getSecurityManager();\n\t\tif (sm !\u003d null) {\n\t\t\tsm.checkPermission(new HelloPermission(\"print\"));\n\t\t}\n\n\t\tSystem.out.println(getText());\n\t}\n \t...\n\ncaused this exception\n\nException in thread \"main\" java.security.AccessControlException: access denied (java.lang.RuntimePermission accessDeclaredMembers)\n\tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:264)\n\tat java.security.AccessController.checkPermission(AccessController.java:427)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkMemberAccess(SecurityManager.java:1662)\n\tat java.lang.Class.checkMemberAccess(Class.java:2125)\n\tat java.lang.Class.getDeclaredMethods(Class.java:1762)\n\tat sun.reflect.annotation.AnnotationType.\u003cinit\u003e(AnnotationType.java:81)\n\tat sun.reflect.annotation.AnnotationType.getInstance(AnnotationType.java:64)\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotation(AnnotationParser.java:186)\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:69)\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:52)\n\tat java.lang.reflect.Method.declaredAnnotations(Method.java:676)\n\tat java.lang.reflect.Method.getAnnotation(Method.java:663)\n\tat hello.HelloWorld.println(HelloWorld.java)\n\tat hello.HelloWorld.main(HelloWorld.java:52)\n\nunless I added this my security policy:\n\ngrant { \n\tpermission java.lang.RuntimePermission \"accessDeclaredMembers\";\n};",
    "The problem lies with the code generated to obtain and pass the annotation to advice. A class may call getDelaredMethod() on itself but not getAnnotion(). As yet I have found no published guidance on the subject. As suggested the exception can be avoided by granting the right RuntimePermission but users may be reluctant to do this. Alternatively an AspectJ library method call could be added to obtain the annotation and permission granted to AspectJ instead."
  ],
  "commentCreationDates": [
    "2005-11-24T11:50:05+01:00",
    "2005-11-28T14:22:20+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.security.AccessControlException",
      "message": "access denied (java.lang.RuntimePermission accessDeclaredMembers)",
      "elements": [
        {
          "method": "java.security.AccessControlContext.checkPermission",
          "source": "AccessControlContext.java:264"
        },
        {
          "method": "java.security.AccessController.checkPermission",
          "source": "AccessController.java:427"
        },
        {
          "method": "java.lang.SecurityManager.checkPermission",
          "source": "SecurityManager.java:532"
        },
        {
          "method": "java.lang.SecurityManager.checkMemberAccess",
          "source": "SecurityManager.java:1662"
        },
        {
          "method": "java.lang.Class.checkMemberAccess",
          "source": "Class.java:2125"
        },
        {
          "method": "java.lang.Class.getDeclaredMethods",
          "source": "Class.java:1762"
        },
        {
          "method": "sun.reflect.annotation.AnnotationType.\u003cinit\u003e",
          "source": "AnnotationType.java:81"
        },
        {
          "method": "sun.reflect.annotation.AnnotationType.getInstance",
          "source": "AnnotationType.java:64"
        },
        {
          "method": "sun.reflect.annotation.AnnotationParser.parseAnnotation",
          "source": "AnnotationParser.java:186"
        },
        {
          "method": "sun.reflect.annotation.AnnotationParser.parseAnnotations2",
          "source": "AnnotationParser.java:69"
        },
        {
          "method": "sun.reflect.annotation.AnnotationParser.parseAnnotations",
          "source": "AnnotationParser.java:52"
        },
        {
          "method": "java.lang.reflect.Method.declaredAnnotations",
          "source": "Method.java:676"
        },
        {
          "method": "java.lang.reflect.Method.getAnnotation",
          "source": "Method.java:663"
        },
        {
          "method": "hello.HelloWorld.println",
          "source": "HelloWorld.java"
        },
        {
          "method": "hello.HelloWorld.main",
          "source": "HelloWorld.java:52"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "117893",
      "date": "2005-11-24T11:50:05+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "117893",
  "bugId": "117893",
  "date": "2005-11-24T11:50:05+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}