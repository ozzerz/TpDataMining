{
  "comments": [
    "3.1M7\n\njava.lang.NullPointerException\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.getBundle\n(InternalPlatform.java:287)\n\tat org.eclipse.core.runtime.Platform.getBundle(Platform.java:1233)\n\tat\norg.eclipse.help.internal.protocols.HelpURLConnection.getPlugin\n(HelpURLConnection.java:248)\n\nNull is expected, not NPE.",
    "I will fix this one even though runtime is not expected to work in such\nconditions (ie it has been shutdown).\n\nKonrad, this kind of error means that you still have code running once runtime\nhas been shutdown (which is the last plugin to be shutdown before osgi) which\nindicates a problem in the shutdown of the plugin.",
    "Created an attachment (id\u003d21621)\nAdd packageAdmin check everywhere\n",
    "DJ, please review.",
    "Looks good for InternalPlatform. \n\nI changed the following caller of one of the changed methods:\n  #getBundles(String, String) : PluginRegistry#getPluginDescriptors(String)\n\nThe following callers of the changed methods still need to check for a null\nreturn value:\n  #getBundle(String) : \n    ConfigurationElement#createExecutableExtension\n    Plugin#Plugin(IPluginDescriptor)\n",
    "If it is a client error (and I believe it is) why can\u0027t we just call\nassertInitialized() instead of hiding it?",
    "Because the methods we are changing are not spec\u0027ed to throw a runtime exception.\nHowever we\u0027ve discussed the possibility to do such a change in 3.2.",
    "Note that we never specify that we are going to fail if the platform is not\nrunning, but we do fail in some API. For instanec, look for callers of\nInternalPlatform#assertInitialized().\n\nRegardless the way we choose to do it, I believe we should strive for consistency.",
    "Pascal, this bug is an offspring of bug 95293 that we have against help \nconcerning running code after shutdown.",
    "Is there a summary/consensus here as to the right fix?",
    "I believe the right answer is to shutdown the Help bundle when asked.\n\nEssentially what is happening is:\n- runtime tells Help to shutdown\n- Help says ok I will...later\n- runtime shuts down\n- Help accesses runtime\n- Help freaks out because runtime is no longer running\n\nIf it doesn\u0027t make sense for the Help thread to continue running when the\nruntime bundle has stopped, then it should be stopped, no?\n\nI have entered bug 96626 to say that we need to better spec the Platform class\nso clients know whether they will receive null or an exception when the platform\nis not initialized. I don\u0027t think that we should be changing the code to call\n#assertInitialized at this late stage of the release cycle. There are many\nplaces in our internal code where we call these methods so it might be more than\njust a simple addition. (e.g. internally it might be ok to call these methods\nafter the platform has been shut down)\n\nI have also entered bug 96628 for going through the Platform APIs and making\nsure that all the guys who throw the unchecked exceptions should be doing it.\n(closely related to bug 96626)\n\nPascal wonders if we still have the Platform service. If so, another alternative\nis rather than calling the methods on Platform directly, to aquire the Platform\nservice each time. So:\n  Platform.getBundle(\"org.eclipse.core.runtime\");\nbecomes:\n  - get the service and if the service is not null then cast it to Platform and\ncall #getBundle\n",
    "sure, Runtime doing nothing sounds good :-)\n\nHelp should either stop their thread or make the thread robust in the face of \nthe runtime (and ALL other plugins) being gone.",
    "Sounds good.  Marking as WONTFIX.  Help issue tracked in bug 95293, platform \nspecs in bug 96626.",
    "was this a miscommunication?  I said the runtime doing nothing was good but \nthen laid out some things that Help might do to address the problem.",
    "Jeff,\nWe know Help has a problem of not stopping the job.  Bug 95293 open for help.  \nI mentioned this in comment #8 and comment #12.\n\nTo not loose bug 95293, I opened this separately for runtime to just report \nNPE received from Platform.getBundle() in case you want to do anything.\nWhat do you think the next step should be when it arrived at help component?",
    "suspect this wsa just my confusion.  Runtime should do nothing as this is \nbasiclaly an invalid state.  I\u0027m assuming then that Bug 95293 will be \naddressed by Help for 3.1."
  ],
  "commentCreationDates": [
    "2005-05-23T06:07:52+02:00",
    "2005-05-24T15:19:50+02:00",
    "2005-05-24T15:24:32+02:00",
    "2005-05-24T15:24:51+02:00",
    "2005-05-24T16:46:24+02:00",
    "2005-05-24T16:56:40+02:00",
    "2005-05-24T17:21:12+02:00",
    "2005-05-24T17:29:14+02:00",
    "2005-05-24T17:33:27+02:00",
    "2005-05-24T18:58:18+02:00",
    "2005-05-25T17:39:35+02:00",
    "2005-05-26T16:17:05+02:00",
    "2005-05-26T21:17:45+02:00",
    "2005-05-28T04:51:10+02:00",
    "2005-05-28T06:03:06+02:00",
    "2005-05-29T22:19:18+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.getBundle",
          "source": "InternalPlatform.java:287"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.getBundle",
          "source": "Platform.java:1233"
        },
        {
          "method": "org.eclipse.help.internal.protocols.HelpURLConnection.getPlugin",
          "source": "HelpURLConnection.java:248"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "96261",
      "date": "2005-05-23T06:07:52+02:00",
      "product": "Platform",
      "component": "User Assistance",
      "severity": "normal"
    }
  ],
  "groupId": "96261",
  "bugId": "96261",
  "date": "2005-05-23T06:07:52+02:00",
  "product": "Platform",
  "component": "User Assistance",
  "severity": "normal"
}