{
  "comments": [
    "20030924\n\nDuring a rebuild all the build process is locked at 35%\n\n1) load in the platform-ui module and then import all other plugins \n2) Select Rebuild All\n3) A progress monitor dialog comes up stating that all are being rebuilt. At \nthe same time progress begins in the status line which stops at 35%. Hitting \ncancel on the dialog does nothing.",
    "Do you have a stack trace?",
    "I just got a deadlock again with 20030925. I had just imported platform-ui and \nthen all other plug-ins as binary projects.\n\nHere is the trace\n\nUsing the installation directory.\nStartup: using configuration file:D:\\R30\\0925\\eclipse\\.config\\platform.cfg\nBoot URL: file:D:/R30/0925/eclipse/plugins/org.eclipse.core.boot_3.0.0/boot.jar\nStartup: splash path \u003d D:\\R30\\0925\\eclipse\\plugins\\org.eclipse.platform_3.0.0\n\\sp\nlash.bmp\nWorkspace location:\n   D:\\R30\\0925\\eclipse\\workspace\nDebug-Options:\n    file:D:/R30/0925/eclipse/.options\nInstall URL:\n    file:D:/R30/0925/eclipse/\nException in thread \"main\" Full thread dump Java HotSpot(TM) Client VM (1.4.2-\nb2\n8 mixed mode):\n\n\"Java indexing\" daemon prio\u003d4 tid\u003d0x02fbf908 nid\u003d0x134 in Object.wait() \n[3a7f000\n..3a7fd94]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x10a75f28\u003e (a \norg.eclipse.jdt.internal.core.search.indexi\nng.IndexManager)\n        at java.lang.Object.wait(Object.java:429)\n        at org.eclipse.jdt.internal.core.search.processing.JobManager.run\n(JobMan\nager.java:358)\n        - locked \u003c0x10a75f28\u003e (a \norg.eclipse.jdt.internal.core.search.indexing.I\nndexManager)\n        at java.lang.Thread.run(Thread.java:534)\n\n\"Worker-2\" prio\u003d7 tid\u003d0x02dc5e60 nid\u003d0xf8c waiting on condition \n[3abf000..3abfd9\n4]\n        at java.lang.Thread.sleep(Native Method)\n        at org.eclipse.ui.internal.progress.AnimationManager.animateLoop\n(Animati\nonManager.java:317)\n        at org.eclipse.ui.internal.progress.AnimationManager$3.run\n(AnimationMana\nger.java:466)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:61)\n\n\"Worker-1\" prio\u003d7 tid\u003d0x0300b298 nid\u003d0xf30 in Object.wait() [370f000..370fd94]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x1051a960\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:109)\n        - locked \u003c0x1051a960\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n        at org.eclipse.core.internal.jobs.WorkerPool.startJob\n(WorkerPool.java:13\n5)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)\n\n\"Worker-0\" prio\u003d7 tid\u003d0x02fd0370 nid\u003d0x6fc in Object.wait() [36cf000..36cfd94]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x1051a960\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:109)\n        - locked \u003c0x1051a960\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n        at org.eclipse.core.internal.jobs.WorkerPool.startJob\n(WorkerPool.java:13\n5)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)\n\n\"Signal Dispatcher\" daemon prio\u003d10 tid\u003d0x0003d0b0 nid\u003d0x8dc waiting on \ncondition\n [0..0]\n\n\"Finalizer\" daemon prio\u003d9 tid\u003d0x009dff58 nid\u003d0xed4 in Object.wait() \n[2b9f000..2b\n9fd94]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x104f9c10\u003e (a java.lang.ref.ReferenceQueue$Lock)\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)\n        - locked \u003c0x104f9c10\u003e (a java.lang.ref.ReferenceQueue$Lock)\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\n\n\"Reference Handler\" daemon prio\u003d10 tid\u003d0x009deb28 nid\u003d0xf3c in Object.wait() \n[2b\n5f000..2b5fd94]\n        at java.lang.Object.wait(Native Method)\n        - waiting on \u003c0x104f9c78\u003e (a java.lang.ref.Reference$Lock)\n        at java.lang.Object.wait(Object.java:429)\n        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)\n        - locked \u003c0x104f9c78\u003e (a java.lang.ref.Reference$Lock)\n\n\"main\" prio\u003d7 tid\u003d0x00034f68 nid\u003d0xf28 waiting on condition [0..7fc3c]\n\n\"VM Thread\" prio\u003d5 tid\u003d0x00a1b730 nid\u003d0x5b8 runnable\n\n\"VM Periodic Task Thread\" prio\u003d10 tid\u003d0x0003f8c8 nid\u003d0x698 waiting on condition\n\n\"Suspend Checker Thread\" prio\u003d10 tid\u003d0x009e2318 nid\u003d0xee4 runnable\n",
    "I assume since you\u0027re rebuilding all that autobuild is off?",
    "No - it is on. I was having trouble with the PDE import and had to rebuild all.",
    "I have finally got a deadlock stack trace from today\u0027s build from Olivier (the\none from Tod didn\u0027t have the stack trace from main for some reason).  Here is\nwhat is happening:\n\n- Background autobuild is running in a worker thread\n- User tries to replace with latest, which spawns a ModalContext\n\n- UI is waiting on ModalContext\n- ModalContext is waiting on a rule to modify the workspace\n- Worker owns the workspace rule, and is doing a syncExec in a notification",
    "Created an attachment (id\u003d6245)\nstack trace\n",
    "I just received the following while running my suites - I am not sure if it is \nrelated\n\nCommand-line arguments: -data D:\\R30\\0924\\eclipse\\junit-workbench-workspace -\nfeature org.eclipse.platform -dev bin -os win32 -ws win32 -arch x86 -nl en_US -\nconsolelog -port 2582 -testpluginname org.eclipse.ui.tests -classnames \norg.eclipse.ui.tests.UiTestSuite -configuration \nfile:D:/R30/0924/eclipse/workspace/.metadata/.plugins/org.eclipse.pde.core/D__R\n30_0924_eclipse_junit-workbench-workspace/platform.cfg -install \nfile:D:/R30/0924/eclipse/\n!ENTRY org.eclipse.core.runtime 4 2 Sep 25, 2003 16:34:22.536\n!MESSAGE An internal error occurred during: \"Building workspace\".\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.core.internal.jobs.JobQueue.enqueue(JobQueue.java:83)\n\tat org.eclipse.core.internal.jobs.JobManager.changeState\n(JobManager.java:189)\n\tat org.eclipse.core.internal.jobs.JobManager.schedule\n(JobManager.java:492)\n\tat org.eclipse.core.internal.jobs.InternalJob.schedule\n(InternalJob.java:203)\n\tat org.eclipse.core.runtime.jobs.Job.schedule(Job.java:342)\n\tat \norg.eclipse.ui.internal.progress.WorkbenchMonitorProvider$1.updateMessage\n(WorkbenchMonitorProvider.java:203)\n\tat \norg.eclipse.ui.internal.progress.WorkbenchMonitorProvider$1.beginTask\n(WorkbenchMonitorProvider.java:137)\n\tat \norg.eclipse.ui.internal.progress.ProgressManager$JobMonitor.beginTask\n(ProgressManager.java:121)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild\n(AutoBuildJob.java:70)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run\n(AutoBuildJob.java:109)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:61)",
    "That\u0027s bug 43589.  I have releasd some extra instrumentation to\norg.eclipse.core.runtime to try to figure out what is causing the NPE, since it\nseems to be very difficult to reproduce. If you run with runtime from HEAD it\nmight give me some clues about what is causing it.",
    "I\u0027ve figured it out.  There\u0027s a timing hole in UISynchronizer.syncExec.  Here is\nwhat it does in pseudo-code:\n\n\n1 add the runnable to a queue of \"pending work\"\n2 if UI is NOT waiting on a lock\n3     post an asyncExec telling the UI thread to process the \"pending work\" queue\n4 else\n5     interrupt the UI\n6 while pending work is not done\n7     if UI is waiting\n8         interrupt UI\n9 end while\n\nThe intent is that if the UI is waiting on a lock, it sits in a loop that\nprocesses the \"pending work\" queue whenever it gets interrupted.\n\nHere is the timing hole:\n\n- UI is waiting on a lock\n- Thread \"B\" tries to syncExec. It enters the code above, and enters the \"else\"\nblock on line 5, because the UI is waiting\n- UI gets the lock it was waiting for, and goes on with its execution\n- Thread \"B\" tries to interrupt the UI, but the UI is no longer responding to\ninterrupts (for example, it\u0027s just back in the idle event loop)\n- Thread \"B\" is now blocked indefinitely until the UI decides to process\n\"pending work\"\n\nThis timing hole does not occur in the more common two thread scenario, since\nthe UI is generally waiting on a lock owned by thread B. The UI will therefore\nbe in a state where it is responding to interrupts and processing the pending\nwork queue.\n\nIn Olivier\u0027s stack trace, we see three threads are involved.  ModalContext owned\nthe lock that the UI was waiting for, but the build thread was trying to\nsyncExec.  This opens up the timing hole, and deadlock is the result.\n\n",
    "Created an attachment (id\u003d6249)\nPatch for UISynchronizer\n",
    "Proposed fix is attached.  The solution is to post the asyncExec that requests\nthe UI to process pending work regardless of whether it is waiting on a lock. \nIf the UI is waiting on a lock, it will process the pending work when it gets\ninterrupted.  If the UI is no longer waiting, it will get back to the event\nloop, receive the asyncExec, and process the pending work then.  It is now\npossible that the UI will be told to process the pending work queue twice, but\nthis is safe, since doPendingWork looks like this:\n\nwhile ((work \u003d pendingWork.remove()) !\u003d null) {\n\twork.getRunnable().run();\n}\n\nI.e., if the pending work queue is empty, it will just return.",
    "Patch released as requested.",
    "Let\u0027s hope that fixes it \u003cg\u003e"
  ],
  "commentCreationDates": [
    "2003-09-24T16:27:55+02:00",
    "2003-09-24T16:42:07+02:00",
    "2003-09-25T16:08:06+02:00",
    "2003-09-25T17:02:19+02:00",
    "2003-09-25T17:27:28+02:00",
    "2003-09-25T22:15:07+02:00",
    "2003-09-25T22:15:31+02:00",
    "2003-09-25T22:42:47+02:00",
    "2003-09-25T22:53:28+02:00",
    "2003-09-25T23:34:55+02:00",
    "2003-09-25T23:36:05+02:00",
    "2003-09-25T23:39:45+02:00",
    "2003-09-26T20:58:44+02:00",
    "2003-09-26T21:09:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.internal.jobs.JobQueue.enqueue",
          "source": "JobQueue.java:83"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.changeState",
          "source": "JobManager.java:189"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.schedule",
          "source": "JobManager.java:492"
        },
        {
          "method": "org.eclipse.core.internal.jobs.InternalJob.schedule",
          "source": "InternalJob.java:203"
        },
        {
          "method": "org.eclipse.core.runtime.jobs.Job.schedule",
          "source": "Job.java:342"
        },
        {
          "method": "org.eclipse.ui.internal.progress.WorkbenchMonitorProvider$1.updateMessage",
          "source": "WorkbenchMonitorProvider.java:203"
        },
        {
          "method": "org.eclipse.ui.internal.progress.WorkbenchMonitorProvider$1.beginTask",
          "source": "WorkbenchMonitorProvider.java:137"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressManager$JobMonitor.beginTask",
          "source": "ProgressManager.java:121"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:70"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:109"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:61"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "43571",
      "date": "2003-09-25T22:42:47+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "major"
    }
  ],
  "groupId": "43571",
  "bugId": "43571",
  "date": "2003-09-24T16:27:55+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "major"
}