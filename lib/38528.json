{
  "comments": [
    "I20030604\nMacOS 10.2.6\n\n- open some Java source in Java text editor\n- start Quartz Debug and turn on \"Flash screen updates\"\n- switch back to Eclipse and wait until all yellow flashing has stopped\n- move the mouse pointer over a Java type that has some Java doc\n- wait for the hover window to appear\nObserve: two full screen redraws before hover window opens",
    "SSQ, any ideas?",
    "It might be the overlay window I added to support screen drawing. I\ndon\u0027t know why a GC on the display would be created in this situation\nthough. I will investigate.",
    "I confirmed that it is the overlay window. HTMLTextPresentation is creating a GC on the \ndisplay which creates the overlay window. Here is the stack trace:\n\njava.lang.Exception: Stack trace\n\tat java.lang.Thread.dumpStack(Thread.java:1089)\n\tat org.eclipse.swt.widgets.Display.createOverlayWindow(Display.java:518)\n\tat org.eclipse.swt.widgets.Display.internal_new_GC(Display.java:1571)\n\tat org.eclipse.swt.graphics.GC.\u003cinit\u003e(GC.java:75)\n\tat org.eclipse.swt.graphics.GC.\u003cinit\u003e(GC.java:68)\n\tat \norg.eclipse.jdt.internal.ui.text.HTMLTextPresenter.updatePresentation(HTMLTextPresent\ner.java:106)\n\tat \norg.eclipse.jface.text.DefaultInformationControl.setInformation(DefaultInformationControl.\njava:249)\n\tat \norg.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationContro\nl(AbstractInformationControlManager.java:700)\n\tat \norg.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInfo\nrmationControlManager.java:677)\n\tat \norg.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(Abstr\nactHoverInformationControlManager.java:423)\n\tat \norg.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHover\nManager.java:187)\n\tat \norg.eclipse.jface.text.TextViewerHoverManager$3.run(TextViewerHoverManager.java:1\n77)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2068)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1895)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:2020)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:\n25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:295)\n\tat org.eclipse.core.launcher.Main.run(Main.java:751)\n\tat org.eclipse.core.launcher.Main.main(Main.java:587)",
    "still a problem in I20050315-1100",
    "How about getting HTMLTextPresentation to create a GC on something else.  Do \nthey actually draw to the display?  We won\u0027t close this bug report because the \nredraws are still happening but it should make Eclipse faster.\n\nIf the bug has nothing to do with the shell styles, please change the title.",
    "Could this bug be the cause of this performance complaint?\n\nhttp://www.eclipsezone.com/eclipse/forums/t55520.html",
    "Might be.  Andre, was HTMLTextPresentation ever fixeed to work around this bug?",
    "No, HTMLTextPresenter hasn\u0027t been changed to address this.\nI replaced the\n    GC gc\u003d new GC(display);\nby a\n    GC gc\u003d new GC(display.getActiveShell());\nand the two full screen redraws disappeared (which is cool!).\n\nI believe that clients of \"new GC(Display)\" who only need a GC for getting some FontMetrics aren\u0027t aware of the fact that (on some platforms?) this is an expensive operation.\n\nMoving to platform/text\n\n",
    "You are right.  It\u0027s still an SWT problem.  Please move this bug back to SWT when worked around in HTMLTextPresenter.\n\nNOTE: Display.getActiveShell() can return null when another application on the desktop is active.",
    "I know, my \"new GC(display.getActiveShell())\" was just a proof of concept...\nDani would have spotted that ;-)",
    "Forgive me ...",
    "Another occurrence in text land:\n\nTemplatePreferencePage.createContents",
    "I\u0027ve filed the following bugs against jdt/ui and platform ui:\nbug #119491\nbug #119494",
    "Move this bug back to SWT?",
    "Ok, I\u0027ve created a separate bug for platform/text (bug #119501) and moved this one back to SWT.\n",
    "Thanks for following up on this.",
    "SSQ and I had discussed caching the overlay window to make this faster.",
    "Is this really worth the effort?\nI think there are exactly two kinds of clients of this:\n- the 95% that need a gc to get at some font metrics without having a better control in hand,\n- the 5% that really want to do some screen grabbing or fullscreen drawing.\nI\u0027m not sure whether caching helps here. A good approach probably would be to delay the creation of any heavyweight overlay window etc. until it is really used for drawing or bit copying. This will catch the 95% case (without any penalty for the first access as in the caching approach).\nA clean (but breaking) solution would introduce new API for the 5% case.\nAs a pragmatic solution you could just document the special behavior of new GC(Display)... ",
    "Shouldn\u0027t there be a warning about this in the GC Javadoc? I don\u0027t see one here:\n\nhttp://help.eclipse.org/help31/index.jsp?topic\u003d/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/graphics/GC.html",
    "No.  It\u0027s a bug.",
    "Fixed \u003e 20060118.\n\nI made changes that will remove the flashing when the GC is only used for measuring. As soon as some drawing operation is performed, the screen will flash."
  ],
  "commentCreationDates": [
    "2003-06-05T17:54:59+02:00",
    "2003-06-19T23:12:52+02:00",
    "2003-06-24T19:52:33+02:00",
    "2003-09-12T20:25:27+02:00",
    "2005-03-24T10:37:16+01:00",
    "2005-10-25T22:27:02+02:00",
    "2005-12-06T16:14:15+01:00",
    "2005-12-06T16:59:01+01:00",
    "2005-12-06T18:38:30+01:00",
    "2005-12-06T19:04:58+01:00",
    "2005-12-06T19:30:52+01:00",
    "2005-12-06T19:49:07+01:00",
    "2005-12-06T20:23:17+01:00",
    "2005-12-06T20:25:17+01:00",
    "2005-12-06T20:32:47+01:00",
    "2005-12-06T20:56:53+01:00",
    "2005-12-07T22:54:54+01:00",
    "2005-12-08T23:12:29+01:00",
    "2005-12-08T23:46:00+01:00",
    "2005-12-09T19:22:47+01:00",
    "2005-12-09T19:26:44+01:00",
    "2006-01-18T19:59:30+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "Stack trace",
      "elements": [
        {
          "method": "java.lang.Thread.dumpStack",
          "source": "Thread.java:1089"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.createOverlayWindow",
          "source": "Display.java:518"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.internal_new_GC",
          "source": "Display.java:1571"
        },
        {
          "method": "org.eclipse.swt.graphics.GC.\u003cinit\u003e",
          "source": "GC.java:75"
        },
        {
          "method": "org.eclipse.swt.graphics.GC.\u003cinit\u003e",
          "source": "GC.java:68"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.HTMLTextPresenter.updatePresentation",
          "source": "HTMLTextPresent er.java:106"
        },
        {
          "method": "org.eclipse.jface.text.DefaultInformationControl.setInformation",
          "source": "DefaultInformationControl. java:249"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl",
          "source": "AbstractInformationControlManager.java:700"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.presentInformation",
          "source": "AbstractInfo rmationControlManager.java:677"
        },
        {
          "method": "org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation",
          "source": "Abstr actHoverInformationControlManager.java:423"
        },
        {
          "method": "org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation",
          "source": "TextViewerHover Manager.java:187"
        },
        {
          "method": "org.eclipse.jface.text.TextViewerHoverManager$3.run",
          "source": "TextViewerHoverManager.java:1 77"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:102"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:2068"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1895"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2037"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:2020"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:858"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java: 25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:295"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:751"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:587"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "38528",
      "date": "2003-09-12T20:25:27+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "38528",
  "bugId": "38528",
  "date": "2003-06-05T17:54:59+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}