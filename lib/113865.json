{
  "comments": [
    "Having a simple Shell, with a TreeViewer. \n------------------\nprivate void createSShell() {\n\tsShell \u003d new Shell();\n\tsShell.setText(\"Shell\");\n\tsShell.setSize(new Point(300, 200));\n\ttreeViewer \u003d new TreeViewer(sShell, SWT.NONE);\n}\n------------------\n\nadding the line:\n------------------\n        tree \u003d treeViewer.getTree();\n------------------\n\nwould result in the following exceptions in the logs. The EMF model looks normal\nwith all the correct settings.\n\nIWAV0073I *** RemoteVM Exception - Trace from Remote VM:\norg.eclipse.swt.SWTException: public java.lang.Object\norg.eclipse.swt.widgets.Control.getLayoutData(): \"Widget is disposed\"\n\tat org.eclipse.swt.SWT.error(SWT.java:2942)\n\tat org.eclipse.swt.SWT.error(SWT.java:2865)\n\tat org.eclipse.swt.SWT.error(SWT.java:2836)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:395)\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:297)\n\tat org.eclipse.swt.widgets.Control.getLayoutData(Control.java:872)\n\tat sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat\norg.eclipse.jem.internal.proxy.initParser.tree.ExpressionProcesser.pushMethodInvocation(ExpressionProcesser.java:2608)\n\tat\norg.eclipse.jem.internal.proxy.vm.remote.ExpressionProcesserController.process(ExpressionProcesserController.java:284)\n\tat\norg.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.processExpressionCommand(ConnectionHandler.java:602)\n\tat\norg.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run(ConnectionHandler.java:493)\n\tat\norg.eclipse.jem.internal.proxy.vm.remote.CallbackHandler.callbackWithParms(CallbackHandler.java:150)\n\tat org.eclipse.ve.internal.swt.targetvm.DisplayExec$1.run(DisplayExec.java:111)\n\tat\norg.eclipse.jem.internal.proxy.vm.remote.RemoteVMServerThread.doCallback(RemoteVMServerThread.java:541)\n\tat\norg.eclipse.ve.internal.swt.targetvm.DisplayExec$ExecRunnable.run(DisplayExec.java:109)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3057)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2716)\n\tat org.eclipse.ve.internal.swt.targetvm.Environment$3.run(Environment.java:68)\nIWAV0074I *** Local StackTrace:",
    "I don\u0027t get this error. But I do get a different error. It is because when \n\nTree tree \u003d treeViewer.getTree();\n\nis added, the \"tree\" is not treated as an implicit. It instead treats it as a\nnormal tree with a null allocation.",
    "Recreatable. Reassigning back to Rich.",
    "The fix has been released to HEAD.",
    "There is another problem now. \n\nAfter uncommenting the Tree tree \u003d treeViewer.getTree(), select the tree in the\nbeans list and hit the delete key. You get an exception.",
    "Created an attachment (id\u003d29297)\nstack trace\n",
    "The problem was that removal of the explicit-implcit \u0027Tree tree \u003d tv.getTree()\u0027\nre-did the generation of the implicit-implicit. Problem was when coming from\ntop-down, even the parent was removed and codegen without checking was asking\nthe parent to recreate the implicit-implicit.\nReleased fixes in BeanPart.java.",
    "Verified in VE-SDK-I20051216 GTK."
  ],
  "commentCreationDates": [
    "2005-10-26T20:15:00+02:00",
    "2005-11-02T20:40:08+01:00",
    "2005-11-03T14:53:32+01:00",
    "2005-11-03T17:05:32+01:00",
    "2005-11-04T00:02:30+01:00",
    "2005-11-04T00:03:30+01:00",
    "2005-11-04T15:42:13+01:00",
    "2005-12-16T19:57:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "public java.lang.Object org.eclipse.swt.widgets.Control.getLayoutData(): \"Widget is disposed\"",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2942"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2865"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2836"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:395"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java:297"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getLayoutData",
          "source": "Control.java:872"
        },
        {
          "method": "sun.reflect.GeneratedMethodAccessor8.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.jem.internal.proxy.initParser.tree.ExpressionProcesser.pushMethodInvocation",
          "source": "ExpressionProcesser.java:2608"
        },
        {
          "method": "org.eclipse.jem.internal.proxy.vm.remote.ExpressionProcesserController.process",
          "source": "ExpressionProcesserController.java:284"
        },
        {
          "method": "org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.processExpressionCommand",
          "source": "ConnectionHandler.java:602"
        },
        {
          "method": "org.eclipse.jem.internal.proxy.vm.remote.ConnectionHandler.run",
          "source": "ConnectionHandler.java:493"
        },
        {
          "method": "org.eclipse.jem.internal.proxy.vm.remote.CallbackHandler.callbackWithParms",
          "source": "CallbackHandler.java:150"
        },
        {
          "method": "org.eclipse.ve.internal.swt.targetvm.DisplayExec$1.run",
          "source": "DisplayExec.java:111"
        },
        {
          "method": "org.eclipse.jem.internal.proxy.vm.remote.RemoteVMServerThread.doCallback",
          "source": "RemoteVMServerThread.java:541"
        },
        {
          "method": "org.eclipse.ve.internal.swt.targetvm.DisplayExec$ExecRunnable.run",
          "source": "DisplayExec.java:109"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3057"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2716"
        },
        {
          "method": "org.eclipse.ve.internal.swt.targetvm.Environment$3.run",
          "source": "Environment.java:68"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "113865",
      "date": "2005-10-26T20:15:00+02:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "normal"
    }
  ],
  "groupId": "113865",
  "bugId": "113865",
  "date": "2005-10-26T20:15:00+02:00",
  "product": "VE",
  "component": "Java Core",
  "severity": "normal"
}