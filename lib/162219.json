{
  "comments": [
    "I get:\norg.eclipse.swt.SWTError: Not implemented (java.lang.reflect.InvocationTargetException)\n\tat org.eclipse.swt.SWT.error(SWT.java:3400)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:161)\n(at my code)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:494)\n\tat org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:159)\n\t... 26 more\nCaused by: java.lang.ClassCastException: sun.awt.motif.MToolkit\n\tat sun.awt.X11.XEmbeddedFrame.\u003cinit\u003e(XEmbeddedFrame.java:31)\n\t... 31 more\n\nI created an SWT jar by extracting the relevant class files from the Eclipse SDK.\n\nA relevant link:\nhttp://dev.eclipse.org/newslists/news.eclipse.platform.swt/msg12019.html",
    "Are you running Java 1.5?",
    "Yes.",
    "You need to change the AWT toolkit from MToolkit to XToolkit. XToolkit implements the XEmbed protocol which is essential for this o work. Have a look at: \n\nhttp://java.sun.com/j2se/1.5.0/docs/guide/awt/1.5/xawt.html\n\nFor XEmbed protocol have a look at:\n\nhttp://standards.freedesktop.org/xembed-spec/xembed-spec-latest.html",
    "There needs to be a FAQ that describes this.  GG?",
    "I\u0027ve added http://www.eclipse.org/swt/faq.php#swtawtsolaris .\n",
    "Thank you Grant for taking the time to do this.",
    "Thanks for your help.  Setting the environment variable worked.\n\nI\u0027m having trouble getting it to work using java web start, setting the properties in the jnlp file, but that is not an SWT issue obviously.",
    "The basic problem can be solved by setting environment variables.\n\nHowever, running from Java Web Start is a problem because generally the whole point of JWS is that it takes the place of an install.  Requiring a user to set an environment variable or set something in their java control panel before running the program - well, it simply isn\u0027t very scalable if you have lots of users who want the easy web start install.\n\nSo I believe it can be made to work with JWS if the user sets the variable themselves somewhere.  But it does not appear to be possible in the jnlp, because if you specify \n\u003cproperty name\u003d\"awt.toolkit\" value\u003d\"sun.awt.X11.XToolkit\" /\u003e\nit will set the property, but only after it is too late.  Looking at the jnlp spec, it does not guarantee that the system properties will be set at jvm startup - it only guarantees that it is before your main executes.  And if you look at your call stacks when running from JWS, you\u0027ll see why this is true: the JWS launcher itself uses java, so the JVM is already started well before any of your code is executed.\n\nThat said, I\u0027d like to reopen this bug, not because it is necessarily the responsibility of the SWT team (it seems like some of the other SWT/AWT issues, it is a combination of SWT issues and Java issues), but because, simply put, it is still a problem.  A Swing app can be made to deploy nicely with JWS, but an SWT one still has issues, this being one of them.\n\nAny help appreciated.\n\n",
    "I have filed this issue with Sun as well."
  ],
  "commentCreationDates": [
    "2006-10-25T16:10:07+02:00",
    "2006-10-25T16:43:40+02:00",
    "2006-10-25T16:55:39+02:00",
    "2006-10-25T17:14:12+02:00",
    "2006-10-25T17:23:54+02:00",
    "2006-10-25T18:22:25+02:00",
    "2006-10-25T19:23:28+02:00",
    "2006-10-25T20:06:54+02:00",
    "2006-10-25T21:00:48+02:00",
    "2006-10-25T21:30:04+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTError",
      "message": "Not implemented (java.lang.reflect.InvocationTargetException)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3400"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.awt.SWT_AWT.new_Frame",
          "source": "SWT_AWT.java:161"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "162219",
      "date": "2006-10-25T16:10:07+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "sun.reflect.NativeConstructorAccessorImpl.newInstance0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeConstructorAccessorImpl.newInstance",
          "source": "NativeConstructorAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingConstructorAccessorImpl.newInstance",
          "source": "DelegatingConstructorAccessorImpl.java:27"
        },
        {
          "method": "java.lang.reflect.Constructor.newInstance",
          "source": "Constructor.java:494"
        },
        {
          "method": "org.eclipse.swt.awt.SWT_AWT.new_Frame",
          "source": "SWT_AWT.java:159"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.ClassCastException",
        "message": "sun.awt.motif.MToolkit",
        "elements": [
          {
            "method": "sun.awt.X11.XEmbeddedFrame.\u003cinit\u003e",
            "source": "XEmbeddedFrame.java:31"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 1,
      "commentIndex": 0,
      "bugId": "162219",
      "date": "2006-10-25T16:10:07+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "162219",
  "bugId": "162219",
  "date": "2006-10-25T16:10:07+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}