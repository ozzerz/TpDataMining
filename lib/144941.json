{
  "comments": [
    "1. Create a Java Project JavaProj\n2. Create a Java Class JC1 in Package P1\n3. Create a basic Project NonJavaProj\n4. Select JC1.java in the Package Explorer and Refactor ... Move it using the context menu\n5. On the Move wizard, select NonJavaProj as the destination.\n6. Check the \"Update fully qualified names in non-Java text files (forces preview)\" option and click Preview.\n\nRESULT: Exceptions thrown.\n\nThe root exception is ...\njava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.handleType(ReorgPolicyFactory.java:1935)\n\tat org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.computeQualifiedNameMatches(ReorgPolicyFactory.java:1925)\n\tat org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1946)\n\tat org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:158)\n\tat org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:175)\n\tat org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)\n\tat org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n\tat org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\n\nIf we do not perform Step 6 and still go to the preview page, things are fine and the refactoring completes successfully.\n\nQ1. Do we want to allow moving Java classes to non-Java Projects??\nQ1a. If yes then the behavior should be consistent irrespective of whether the user performs Step 6 or not.\n\nIdeally, I would prefer if this Refactoring was disallowed in the main Move Wizard page itself.",
    "Move to JDT/UI",
    "Fixed in HEAD \u003e 20060614",
    "This would be a good candidate for 3.2.1, since the fix is trivial",
    "So what\u0027s the fix that was delivered? Are we disallowing Refactoring to  non-Java Projects?",
    "Tobias, ok to release for 3.2.1.",
    "We are not disallowing refactoring to non-java project. The fix only avoids the NPE when updating qualified names if the destination package cannot be computed",
    "Fixed in R3_2_maintenance \u003e 20060725",
    "verifying",
    "verified in M20060830-0800"
  ],
  "commentCreationDates": [
    "2006-06-01T21:00:08+02:00",
    "2006-06-01T21:16:20+02:00",
    "2006-06-14T18:24:28+02:00",
    "2006-06-14T18:27:40+02:00",
    "2006-07-24T20:03:45+02:00",
    "2006-07-25T09:06:04+02:00",
    "2006-07-25T10:36:20+02:00",
    "2006-07-25T10:37:08+02:00",
    "2006-08-31T15:46:21+02:00",
    "2006-08-31T15:49:28+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.handleType",
          "source": "ReorgPolicyFactory.java:1935"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.computeQualifiedNameMatches",
          "source": "ReorgPolicyFactory.java:1925"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions",
          "source": "ReorgPolicyFactory.java:1946"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions",
          "source": "JavaMoveProcessor.java:158"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions",
          "source": "ProcessorBasedRefactoring.java:175"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:83"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:118"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1737"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:87"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "144941",
      "date": "2006-06-01T21:00:08+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "144941",
  "bugId": "144941",
  "date": "2006-06-01T21:00:08+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}