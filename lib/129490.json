{
  "comments": [
    "Hi i am getting now and then this exception:\n\njava.lang.OutOfMemoryError: PermGen space\n\nLately it happens quite a lot i think when i am triggering another plugin from the WebTools plugin (loading a Xml file or html file)\nThen eclipse tells me i am out of mem, but it is not the heap mem that is a problem, there i have a lot free, but it is the PermGen memory. Are so many classes loaded somehow?\n\nIs this the fault of WebTools? I don\u0027t have a lot of other things installed\njust DataTools and WebTools and anything they need Besides the sysdeo tomcat plugin and SVN (subeclipse).\n\nI never had any problem with it except the last months i do see it.",
    "It would be great if you could either:\n- determine a sequence of operation that causes the OOM\n- narrow down the sets of plug-ins (for example only take WTP) and see if it stills happen.",
    "i would love to test it some more but it happens completely random, for example it just happens again when i tried to do some refactoring. At some point the threshold is passed and the error happens:\n\nthis is part of the stack when it did happen the last time:\n\nat org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:304)\nat org.eclipse.ltk.ui.refactoring.RefactoringWizard.internalPerformFinish(RefactoringWizard.java:545)\nat org.eclipse.ltk.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:154)\nat org.eclipse.ltk.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:611)\nat org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:433)\n\nwhats more irritating is that eclipse can\u0027t be shutdownd correctly after that i have to shoot it (and then some settings are lost and so on)\n\nI will try to find out a sequence where i can trigger more and more plugins.\n",
    "Note there is a plugin attached to bug 92250 that greatly helps in tracking down this kind of problem.",
    "i just got it again from opening a web.xml and my PermGen space was again full\nBut how do i see that in that memory monitor\nI am looking at it now and the HEAP part (3 standing up and 1 laying) is only the laying done 40% and the most right standign up on 40%\n\nFrom the non heap the laying one is almost completely green but that is in my case  always true. the 2 standing up are at 10% or 30% full so that also don\u0027t seem to be a problem.",
    "ok i am testing it now with JConsole itself because the memory monitor plugin doesn\u0027t report the real values i just noticed.\nI am reporting here the Perm Gen heap space.\n\nIf i close all my editors and restart eclipse then the perm heap is used for 34MB of the 65MB max.\nThen i just open one editor for \"web.xml\" so i use the WTP XML Editor it jumps directly to 43MB used\nBesides it i open a java file it jumps to 48MB\n\nThen i did a cvs update command on multiply projects. I didn\u0027t get any new files so nothing was updated and it was jumped to 50MB\nThis is also the first time that i see the perm heap space lowered a bit so it did hit 52MB at one time in the cvs process but a GC? did lower it a bit.\n(what is perminant in that if a gc can happen?)\n\nI then did a clean of those same projects so they are build completely again. And it growed to 53MB \n\nBut i can\u0027t get great jumps from that point on. It just slowely grows and grows to th 65MB.",
    "Each step you outlined involved a whack of classes being loaded.  I\u0027m not entirely clear on what goes into PermGen space but it seems likely that it is stuff related to classes etc.  So it is expected that the space usage grows as you hit more function.  I\u0027m not making excuses but trying to explore the space (no put intended :-).\n\ndo you see the space growing if you do more and more of the same operation?  That is, open another editor of the same kind, then another and another.  Do clean builds many times.\n\nAlso, you mention in your original post that the problem started appearing recently.  Can you narrow that down a bit?  Looking to see say what was the milestone you were using when you saw the problem?  Were you also changing WTP etc or better yet, VMs at that time?",
    "now it is pretty much stable at 55MB\nBut i looked at the loaded classes view and the perm view\nand they are in sync yes.\nWhen the big bumps in classes happening the mem is also grown.\nI have currently 11.000 classes loaded. Are there classes now with large static blocks or something? With a lot of strings or bytes?\n\nI think i notice it with 3.2m4+ and the WTP that was from that day on the most recent milestone.\n\nOpening now java files or xml files don\u0027t have a lot of effect. on the memory usage.\n\nI will work on now and when it happens (the out of) i will look if there are again  a big bunch of classes loader or not.\n",
    "*** Bug 135420 has been marked as a duplicate of this bug. ***",
    "i am currently running eclipse without the webtools and the perm space error never occurs. So it is a problem that i get when using webtools and all its needed projects. It is then suddenly to much (after a few X hours of usage)",
    "have you registered a bug with them the wtp folks?  Feel free to move this one.",
    "Moving to WTP as per comment #9.",
    "Jeffrey, can you investigate?",
    "I also have only seen the problem while using webtools.  The current out of mem change has been mostly with 3.2M6.",
    "i don\u0027t know if it really is Web Tools\nIt also could be that it just pushes it over the edge\nI am currently using eclipse 3.2M6 with a few small plugins which i use already a long long time like sysdeo tomcat plugin.\n\nWhat i nowadays also  have always installed is the subversion support: subclise\n(it is really a pitty that this is\u0027t supported by the default eclipse, it is a much better system then cvs)\n\nand now the heap is already at 51.9MB\n\n",
    "Running into the same problem when using eclipse3.2M6 for a long time. Currently investigating if it is WTP or TPTP or if it is something else. Also keeping bug#130545 in mind since I\u0027m developing a plugin. \nFrom observation it seems to be an accumulated effect which only occurs when running eclipse for a long time. \nAre there any resources what exactly is kept in the PermGen space? Also I have read about a plugin which allows to track this kind of memory leakage anybody know where I can get that?\n\nI\u0027m running on WinXP Prof machine using Sun JSE 1.5.0_06\nThis has definitly to be addressed soon since this leads to crash of eclipse and my layout is reset each time. ",
    "I\u0027ve seen this twice myself, each time with the bad effect of Eclipse dying.  First time was on M6, today on RC1, Eclipse had probably been active for days and not using more than ~150MB of heap (config is SDK+Mylar+Subclipse, *no* WTP).  AJDT users are seeing it as well: http://www.eclipse.org/newsportal/article.php?id\u003d1573\u0026group\u003declipse.technology.ajdt \n\nI\u0027m going to avoid setting -XX:MaxPermSize to get a sense for how often this happens.  I wonder if there have been a change in M6 that would have triggered this?",
    "The priority and severity on this issue should be raised since it does for eclipse what Raid does for ants.",
    "(In reply to comment #17)\n\u003e The priority and severity on this issue should be raised since it does for\n\u003e eclipse what Raid does for ants.\nI think the sevirity level is alright since it is not blocking you can always raise your permspace with the appropriate vm setting. But I think the priority has to be raised since this will become a blocking bug when we reach RC3.\nThis definetly has to be fixed for final.",
    "as a point of interest, I run the latest builds of Elcipse, several at a time for days and have never once had an OOM.  It is likly that I am doing less actual code development than other folks commenting here though it does go in fits and starts.  Perhaps that is an interesting difference?  I notice the footprint getting pretty big but never run out of anything.  another difference may be that I am using the IBM 5.0 SR1 vm.  Just another data point",
    "I just got another one of these today.  This makes my 3rd, but it appears that WTP users see it considerably more often if they don\u0027t increase the MaxPermSize.  I\u0027m using the Sun 1.5.0_06 VM, and this could definitely be VM specific.  \n\nI\u0027m concerned that all the 3.2 early adopters seeing this failure will simply increase their MaxPermSize and forget about it, leading to the possiblity of 3.2 going out in a state where this failure is likely for typical usage unless something is done or unless the larger MaxPermSize argument gets added to the default config.ini.",
    "Shouldn\u0027t this be moved to some other platform part since it is obviously not directly WTP connected as Mik\u0027s comments show?",
    "I have the very same problem running with JDK 1.5.0_06, 3.2RC1 with -Xms128m -Xmx512m.\nUp to 3.2M6 i was used to start eclipse on monday morning and close it on friday afternoon.\nNow with RC1 after installing some stuff from Callisto site (ve, wtp, tptp) it happens me many times a day to get OOM errors due to filled permgen.\n\nThe problem seems to hit in a very random fashion. It happens doing many seemingly unrelated things like editing, building, launching, opening preference pages, etc.\n\nAs a side effect one of those crashes corrupted somehow the workspace, because now each time i restart, even after a clean shutdown, it start a full workspace rebuild... sigh!!!",
    "Just to ask ... do you folks who see this fairly often actually \"run on server\" with WTP? If so, which ones? \n\nI know there\u0027s many reports \"on the internet\" of some servers interacting badly with some VM\u0027s and not unloading classes when they should ... so, just wanted to verify you are seeing it in your primary dev. env., no other vm\u0027s involved. \n\nOther possible points of difference ... are you doing lots with JSP\u0027s? Custom tag libs? \n\n",
    "For me, I was doing a lot of run on server and updating of JSP\u0027s and tag files which I suppose caused a lot of resyncing with the running Tomcat 5.5 instance.  Using WTP 1.5 and eclipse 3.2M4-6/RC1 I could get about 5 redeployments before I ran out of PermGen.",
    "i did started to notice it (was it M3 or something) and i don\u0027t do anything with jsp. or what ever.\n\nI also think that it is not really a WebTools problem but a eclipse problem itself. WebTools only makes it visible earlier because it is so large.\n",
    "I agree also that it likely isn\u0027t a WTP problem as I have expeirence the permgen problem without using wtp, however the wtp projects were open.  In that case it did take a lot longer before it happened.",
    "As mentioned earlier it is definitly not a WTP Bug but simply manifests itself faster when having WTP installed.\n\nI used the database tools in WTP fairly often and had OOM Errors fairly often. After having removed WTP and using some other external database tool to do my database stuff I haven\u0027t experienced an OOM error yet. (Approx. 1Week of working without WTP) But this has nothing to say since I wasn\u0027t able to work with 3.2 as intensive as before for the last week. \nI think this is also VM related since people using IBM VM do not seem to experience the same problem.  ",
    "I am seeing this too on OS X. My configuration is:\n\nOSX version 10.4.6, intel core duo, java 1.5.0_06-112.\n\nI have WTP installed but have not been using it recently. I\u0027ll try to add more info the next time it happens.\n\nChanning",
    "Eclipse 3.2RC2\nMac OS X 10.4.6\nJava 5.0 Release 4 set as OS default JVM, latest Apple Java 1.4.2 also installed\nG4 PPC processor\nI get perm gen errors on a stock Eclipse 3.2RC2 install - no plugins, no tweaks to memory settings, nothing, just plain vanilla.  Ok, so I edit some keybindings and code formatting settings ;-)  Error occurs after I\u0027ve worked on a project for a while, 15-60 minutes, usually when I trigger an ant build via the ant view.  Eclipse performance is usually degraded by this point - CPU usage has gone up, debugger views (stacks, variables, next line of code to be executed hilighting in editor) all slow to update or fail to update at all without moving focus in and out of the views.\n\nWorkflow:  Use cvs via Team Synchronization to check in changes occasionally.  Edit and debug two Java apps (from a single project) at the same time.  One app is faceless, the other is a Swing GUI app that communicates with the faceless app via RMI.  Both run using the latest Apple release of Java 1.4.2 on the same machine Eclipse is running on.  Both are debugged directly from Eclipse, i.e. I do not connect to them after starting them from the command line.  I have \"Build Automatically\" enabled, but because I use RMI and 1.4.2 I need to build via ant occasionally in order to run rmic.  Ant is run explicitly via the Ant View, I do not have an ant Builder set up.  Ant build is pretty trivial: javac to compile, rmic for stubs, jar to package jars.\n\nFWIW I use two Eclipse windows (just one Eclipse session, though), one window per monitor on a two-monitor setup.",
    "Permgen OOM reports that might be related (including this one):\nbug 92250, bug 105629, bug 129490, bug 135420, bug 130545, bug 137475, bug 137704, bug 139429.",
    "Will add my info here in case it helps.\n\nWe started to detect this issue when we upgraded our development environment a while back. We are now using:\n  - Eclipse 3.1.1 (build id: M20050929-0840)\n  - MyEclipse listed as v4.0\n  - Jasper Assistant v2.0.5.\n  - We are *not* using WTP.\n\nThis environment is then integrated with\n  - JSDK v1.4.2.10\n  - Tomcat v5.0\n  - CVS (some version, I forget)\n\nBeing bugged by this bug, I played with adjusting the heap space, but this had no effect. I traced the memory usage using the -Dcom.sun.management.jmxremote option, and relised the heap space was not a problem. Instead I found that the \"Perm Gen\" was reaching maximum just before Eclipse crashed with a out of memory message.\n\nAfter adding the flag\n  -XX:MaxPermSize\u003d128m\nI have not had the problem.\n\nHope this helps in some way. Feel free to contact me directly for more specific info..",
    "this is interesting as you are using Eclipse 3.1.1.  The more I see of this the more it feels like there is some general coding pattern and JVM interaction that is causing the problem.  No idea what those issues are but it does not seem to be a) soemthing new or b) particular to WTP.  Could it still be something to do with Ant?",
    "This just hit me on 3.2 RC2 on Windows 2000.\n\nThis is running off of a \u0027full\u0027 Callisto install; I pulled down every plug-in available.\n\nThe only memory settings I have is this (through -vmargs): -Xmx512m\n\nIt has been working fine in fairly heavy-weight Java coding sessions since the release date. Today, I tried doing some work with the Data tools and the BIRT tools. Primarily I:\n1.) Added a new database to the database view of the data tools\n2.) Experimented with that tool.\n3.) Tried to create a BIRT report (following this tutorial: http://www.eclipsezone.com/articles/birt/?source\u003darchives)\n\nOnce I started to mess with creating the BIRT report (using the palette), I got the perm-gen error. I\u0027d like to note that during that time I had already received several exceptions of various variety and flavor. Here are a few such examples:\n---------------\njava.lang.NullPointerException\n\tat org.eclipse.datatools.connectivity.sqm.internal.core.definition.DatabaseDefinitionImpl.supportsSequence(DatabaseDefinitionImpl.java:956)\n\tat org.eclipse.datatools.connectivity.sqm.server.internal.ui.explorer.providers.content.layout.vnode.ServerExplorerVNodeContentProviderNav.displaySchemaChildren(ServerExplorerVNodeContentProviderNav.java:105)\n(...)\n---------------\norg.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(bundleentry://545/)\n\tat org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:173)\n\tat org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:56)\n\tat org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:87)\n(...)\n-------------------\njava.lang.ClassCastException: org.eclipse.wst.rdb.data.internal.ui.editor.TableDataEditorInput\n\tat org.eclipse.birt.report.designer.internal.ui.ide.adapters.LibraryProvider.getProjectLibraryList(LibraryProvider.java:75)\n\tat org.eclipse.birt.report.designer.internal.ui.ide.adapters.LibraryProvider.getLibraries(LibraryProvider.java:61)\n(...)\n---------------\n\nAside from the resource one, I have to assume that these are all cases where plug-ins are in an inconsistent state at the time of the release candidate drop.\n\nI am curious, however, if they (exceptions in general) have something to do with the perm-gen problem. Not to rag on Data Tools, Web Tools, or BIRT, but I typically do have a higher degree of errors during the milestone/RC phase when working with these outlying tools. I had a significant number of exceptions just prior to getting my first OOM Perm-Gen error (the BIRT exception above was directly above the OOM error in my error log for that workspace).",
    "Just got another one using the same setup mentioned in comment #29 except that I\u0027m running a plain vanilla RC3.\n\nDebugging the two apps mentioned there, viewing a lot of variables in the debugger so was clicking on a lot of disclosure triangles to open up the variable tree.  I was actually trying to see when an \"Error logged from Debug Core\" would show up in the Error view (see bug # 138252) but the Console view kept popping up.  So I tried to drag the Error view by its tab to another portion of the screen when I got the PermGen error.  It was preceded by a \"Unhandled event loop exception\":\n\nError\nWed May 10 11:39:22 EDT 2006\nUnhandled event loop exception\n\nfollowed by the PermGen error:\n\nError\nWed May 10 11:39:22 EDT 2006\nPermGen space\n\njava.lang.OutOfMemoryError: PermGen space\n\nThat was followed by a \"Error logged from Debug Core\", but I\u0027m pretty sure I\u0027m getting those whenever my faceless app is terminated via Eclipse (either by me or the memory situation) instead of running to completion.\n\nProbably doesn\u0027t offer much, but here\u0027s the (OS X) Console output for those errors:\n!ENTRY org.eclipse.ui 4 4 2006-05-10 11:39:22.591\n!MESSAGE Unhandled event loop exception\n\n!ENTRY org.eclipse.ui 4 0 2006-05-10 11:39:22.595\n!MESSAGE PermGen space\n!STACK 0\njava.lang.OutOfMemoryError: PermGen space\n\n!ENTRY org.eclipse.debug.core 4 120 2006-05-10 11:40:04.141\n!MESSAGE Error logged from Debug Core: \n!STACK 0\njava.io.IOException: Stream closed\n\tat java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:145)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:253)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:313)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:254)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:313)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:90)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:138)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputStreamMonitor.java:128)\n\tat org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:194)\n\tat java.lang.Thread.run(Thread.java:613)\n!SESSION 2006-05-10 11:40:08.403 -----------------------------------------------\neclipse.buildId\u003dI20060505-1306\njava.version\u003d1.5.0_06\njava.vendor\u003dApple Computer, Inc.\nBootLoader constants: OS\u003dmacosx, ARCH\u003dppc, WS\u003dcarbon, NL\u003den_US\nFramework arguments:  -keyring /Users/sean/.eclipse_keyring -showlocation\nCommand-line arguments:  -os macosx -ws carbon -keyring /Users/sean/.eclipse_keyring -consoleLog -showlocation\n",
    "*** Bug 142943 has been marked as a duplicate of this bug. ***",
    "*** Bug 142886 has been marked as a duplicate of this bug. ***",
    "Why is this bug still in Web Tools?  Tt\u0027s happening without WTP, e.g. comment#29, comment#16, although it seems to happen more often to those with more plug-ins/classes loaded)?  \n\nIs anyone on the Platform end investigating this?  Perhaps this doesn\u0027t happen on the IBM VM and it could be a Sun 1.5.0 VM bug/leak, but I think it is critical that this get investigated and addressed for 3.2.\n\nRestating my concern from comment #20, while it\u0027s easy for advanced users to ignore this by bumping up the MaxPermSize, it would look very bad for Eclipse if 3.2 final crashed this often for all those using Sun\u0027s latest JRE.",
    "\u003e Why is this bug still in Web Tools? \n\nThere is an equivalent bug in the platform: bug 92250. If you\u0027re sure web tools is not involved in this particular case, then you can mark this as a duplicate.",
    "(In reply to comment #38)\n\u003e \u003e Why is this bug still in Web Tools? \n\u003e \n\nI\u0027ve left this here and think WTP has its own problems because I suspect one of the common patterns leading to perm space problems is the use of \"custom\" classloaders. And, we have a few such loaders in WTP. Plus, I\u0027ve heard, things like \"jakarta commons logging\" has similar \"class leaking\" problems, and that is used \"under the covers\" by some of the third party code we use (axis, I think). \n\nSo, I think reasonable to leave one open in WTP. \n\nI\u0027d hoped to profile and investigate, but since I have\u0027t had time yet, thought I\u0027d write what I know. \n\n",
    "My memory problems seem to have disappeared since I have switched from JRockit JRE 1.5.0_04 from Sun\u0027s 1.5.0_05.",
    "David, I guess you meant moving from sun to jrockit, so jrockit works fine?",
    "Per Comment #31, adding\nJAVA_OPTS\u003d-XX:MaxPermSize\u003d128m\n\nwill free up additional PermGen space, but this does not \"solve\" the problem, just gives you a more time. \n\nTo verify:\n1) Set the JAVA_OPTS as shown above\n2) Open JConsole\n3) Run Eclipse\n4) Observe the PermGen memory usage via JConsole\n\nYou should see the PermGen increase as before. Thanks to #1, you will be able to move past the default 64m, but eventually you will hit 128m and then crash.\n\nThus, this is not a solution, just a temporary fix.",
    "(In reply to comment #42)\n\u003e will free up additional PermGen space, but this does not \"solve\" the problem,\n\u003e just gives you a more time. \n...\n\u003e Thus, this is not a solution, just a temporary fix.\n\nThis is exactly what it is. The goal is to buy some time and avoid bad publicity. ",
    "With my limited testing / profiling the addition of any \"watching\" of the non-heap space appears to have impact on the results.\nI have done testing where the same test case using a profiling tool results in problems after 5 repeats. Without the profiling, 20 repeats and no problems.\n\nAs Chris Laffra says all profiling tools lie...they just lie in different ways :-) Just something to keep in mind.",
    "\u003e Thus, this is not a solution, just a temporary fix.\n\nThis depends on whether there is a leak in the VM\u0027s perm gen space, or whether you are just hitting the arbitrary maximum size specified by the VM.  I can easily get the error by downloading all of Callisto, activating every view, perspective, and preference page, and creating a few projects of varying kinds.  In this case it is not a bug in Eclipse, but just an arbitrary limitation of the VM.",
    "(In reply to comment #41)\n\u003e David, I guess you meant moving from sun to jrockit, so jrockit works fine?\n\u003e \n\nYes it seems so.  And with JRockit I haven\u0027t specified the maximum heap size.",
    "(In reply to comment #46)\n\u003e (In reply to comment #41)\n\u003e \u003e David, I guess you meant moving from sun to jrockit, so jrockit works fine?\n\u003e \u003e \n\u003e \n\u003e Yes it seems so.  And with JRockit I haven\u0027t specified the maximum heap size.\n\u003e \n\nCompletely confirmed, I haven\u0027t had any more problems working with JRockit.\nI\u0027m working several days withouth having restarted Eclipse due to memory problems.  With Sun\u0027s JRE, Eclipse used to crash 3 times every day.\n",
    "but what is the default non heap size of jrocket?\n\nCan you still look with jconsole in the vm? So that you can see the non heap?",
    "What you want is a VM that can *grow* the permgen space. Perhaps that\u0027s what JRocket does. I know that\u0027s what the IBM VM does.\n",
    "Sun bug 5093520 (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d5093520) says that a fix for a perm gen leak was fixed in 1.5.0_07.  Has anybody tried that JVM?",
    "Mik, that\u0027s the bug I was referring to in bug 92250 comment 35. Getting 1.5.0_07 or later may help with your self-hosting setup.",
    "and as far as i can quickly see. They also have upped the default value.\ni always see a max of 96 now instead of 64..",
    "I\u0027m moving to 1.5.0_07 and removing the MaxPermSize VM arg.  I suggest that others who had set it do the same (especially wtp users), and we all report back with results.",
    "I\u0027m cross-commenting from an ant bug (https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d130545) because I think it\u0027s quite likely the two bugs are the same.\n\nI\u0027m programming using the wst/jst APIs and am doing plenty of publishing, launching, etc. In the plugin I\u0027m writing, I\u0027m using the following code:\n\n        AntRunner runner \u003d new AntRunner();\n        runner.setBuildFileLocation(file);\n        runner.setExecutionTargets(getTargets(module[0], action));\n        runner.setArguments(getArguments(module[0]));\n        runner.run();\n\nI don\u0027t know how to use many of the PDE memory utilities but I did open Windows\nTask Manager and traced through the code simultaneously. Without fail,\nrunner.run() absorbs 5-10 meg of memory and it is never reclaimed. \n\nBeing as many publish-style tasks use Ant, I thought this might be insightful to anyone here. ",
    "(In reply to comment #53)\n\u003e I\u0027m moving to 1.5.0_07 and removing the MaxPermSize VM arg.  I suggest that\n\u003e others who had set it do the same (especially wtp users), and we all report\n\u003e back with results.\n\nI\u0027ve been using 1.5.0_7 on win xp all week and haven\u0027t seen the problem.\n\nI also notice that it happens fairly consistently on OS X when I export a plugin. I usually have to restart eclipse to successfully export.\n\nChanning\n\n",
    "*** Bug 146301 has been marked as a duplicate of this bug. ***",
    "(In reply to comment #50)\n\u003e Sun bug 5093520 (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d5093520)\n\u003e says that a fix for a perm gen leak was fixed in 1.5.0_07.  Has anybody tried\n\u003e that JVM?\n\u003e \n\nyes, I\u0027ve tried this VM in linux+amd64, same thing, in less than an hout I get permgen. The only VM that seems to work fine at this moment, for me is ibm jdk 5.",
    "Following up on comment#53 and adding to Channing\u0027s positive data point: I have been making heavy use of JDK 1.5.0_7 and Eclipse 3.2RC7 for a week on Windows XP, and like Channing have not seen any problems.",
    "I don\u0027t know if it is a problem in the JDK implementation, but I get this problem with both sun\u0027s jdk 1.5.0_07 and jrockit for amd64, the only usable jdk for linux amd64 (from what I\u0027ve seen so far) is ibm jdk 1.5 (1.4 crashes too)",
    "Re comment #59 - are you sure you saw \"perm gen\" errors with jrockit?  As far as I know the concept of \"permanent generation\" is an implementation detail of the Sun VM, so it would surprise me to see this particular error on another VM.",
    "ups, not actually sure it was PermGen, I assumed so since I got the same ugly crashes, but maybe the vm here crashed directly without giving any change to even click close. I was a hard time to find a usable vm for amd64 linux, I now have eclipse rc7 up since about 5 raw days without problems, but I was close to get back to 3.1.2 since latest releases were unsuable for me.",
    "I am working with Eclipse 3.2RC7, Sun JDK 1.5.0_05, and WTP downloaded using Callisto - I am getting the \n\njava.lang.OutOfMemoryError: PermGen space\n\nevery hour (working with JSP\u0027s, XML, ...) - I will try Sun JDK 1.5.0_07 now ... this problem is really disturbing",
    "I\u0027ve finally profiled WTP some, using the tool attached in bug 92250, and could not really find a case of \"leaking perm gen\" space. That is, cases where the perm gen space used grew and grew, just as a function of doing something over and over. I ran clean and validation over and over, opened several editors (XML, HTML, and JSP) and \"ran on server\" several times. Each new class of function would cause the permGen space to grow some, but when I did it over and over, it stayed the same. I used both tomcat 5.0 and 5.5. \n\nI was using moderate sized projects, but not \"larger\" ones that might pull in struts libraries, and the like. \n\nI used both the Sun versions 1.5_05 and 1.5_7. Both showed a \"max\" perm gen of 64Meg, and in both the perm gen space seemed to stablize right around 60 Meg, so its easy to imagine with different sorts of projects, that might easily pull in enough more classes from web libraries that the default perm gen space would reach the maximum of 64Meg. (I did forget to try java editing and did forget to try debugging, so, those too might be enough to go over the 64Meg boundry). \n\nBut, since I didn\u0027t see a \"growing leak\" sort of problem with my scenerios, I suspect the issue really is one of just hitting the default maximimum setting, \nand the advice many have given of using a VM setting of\n\n   -XX:MaxPermSize\u003d128m \n\nwill be required, and the best we can do, when using Sun\u0027s 1.5_07 version. \nReading the release notes at \nhttp://java.sun.com/j2se/1.5.0/ReleaseNotes.html \nreally makes it sound like every point release fixed something about PermGen \nallocation and growing leaks (in their VM) so I suspect 1.5_07 is better than the earlier ones. \n\n\nIf someone comes up with a use-case that demonstrates running some WTP function over and over again caues the PermGen size to keep growing and growing ... using Sun\u0027s 1.5.0_07 (not earlier ones, please, since they are known buggy in this regard) then pleaes open a new bug for those specific cases and we will dig deeper to see if we contribute to it some how. \n\nI\u0027m closing as a dup of 92250 so these bugs \"stay connected\" and hopefully the history of all will be read as others try to sort this out. \n\nOh, I should mention, when using an IBM VM, it too quickly grew to about 55 Meg of \"non heap\" storage but seemed to stabalilze there ... and according to the tool, its maximum is \"unlimited\" ... no specified. \n\nSo, bottom line, I think the make problem we are seeing it that Eclpse, and WTP, not to mention all of Callisto is just a lot of stuff ... \n\nSo, If you are going to use Sun\u0027s VM, try to use the new 1.5.0_07 version, \nand you may still need to set  -XX:MaxPermSize\u003d128m \nIf you still see a problem using 128Meg, it would be very helpful to us if you used the tool attached in 92250 to \"watch\" the memory grow. (or somepeople use the jconsole? bug I dont\u0027 know what that is). If you can document a good case there that permgen memory grows, just doing the same things over and over, then those would be good candidates for new bugs. \n\nThanks all. \n\n\n\n\n*** This bug has been marked as a duplicate of 92250 ***",
    "Just to document it here, after prolonged use, using debug on server, changing java, etc., my \"non-heap\" size grew to about 80Meg. But, did not seem to keep growing. So ... I think this re-enforces previous comment ... that the default 64Meg limit on permGen space may simply not be enough, and that Sun JRE users may often need to use -XX:MaxPermSize\u003d128m . \n\n",
    "I know this bug is closed by just to document my recent experience:\n\nOn OS X, 10.4.6, JRE 1.5.0_6, Eclipse M20060609-1217 I had a perm-gen error whilst exporting a plugin from the plugin editor. This occurs regularly for me. My project is relatively small and I am not using the WTP.\n\nI will attempt to find a reproduceable case.",
    "*** Bug 150267 has been marked as a duplicate of this bug. ***",
    "*** Bug 139429 has been marked as a duplicate of this bug. ***",
    "Issue tracked through 92250.",
    "Closing as verified."
  ],
  "commentCreationDates": [
    "2006-02-26T15:05:33+01:00",
    "2006-03-03T14:02:15+01:00",
    "2006-03-04T11:26:59+01:00",
    "2006-03-06T15:59:06+01:00",
    "2006-03-10T11:10:14+01:00",
    "2006-03-10T14:03:04+01:00",
    "2006-03-10T14:18:52+01:00",
    "2006-03-10T14:26:38+01:00",
    "2006-04-07T01:14:47+02:00",
    "2006-04-07T09:56:00+02:00",
    "2006-04-07T15:28:02+02:00",
    "2006-04-07T15:43:11+02:00",
    "2006-04-07T18:21:30+02:00",
    "2006-04-07T19:28:29+02:00",
    "2006-04-07T23:18:23+02:00",
    "2006-04-15T11:44:02+02:00",
    "2006-04-20T07:06:32+02:00",
    "2006-04-20T09:01:10+02:00",
    "2006-04-20T09:59:18+02:00",
    "2006-04-21T03:49:07+02:00",
    "2006-04-26T01:43:37+02:00",
    "2006-04-26T10:17:00+02:00",
    "2006-04-27T17:08:49+02:00",
    "2006-05-04T19:50:55+02:00",
    "2006-05-04T22:52:05+02:00",
    "2006-05-04T23:10:03+02:00",
    "2006-05-04T23:12:53+02:00",
    "2006-05-05T09:22:18+02:00",
    "2006-05-06T15:06:35+02:00",
    "2006-05-06T15:34:47+02:00",
    "2006-05-07T03:32:38+02:00",
    "2006-05-07T18:16:55+02:00",
    "2006-05-07T20:05:03+02:00",
    "2006-05-08T19:15:12+02:00",
    "2006-05-10T18:35:57+02:00",
    "2006-05-23T15:44:45+02:00",
    "2006-05-23T15:45:23+02:00",
    "2006-05-23T18:23:18+02:00",
    "2006-05-23T20:35:37+02:00",
    "2006-05-23T22:07:26+02:00",
    "2006-05-25T08:43:11+02:00",
    "2006-05-25T14:25:04+02:00",
    "2006-05-25T23:53:40+02:00",
    "2006-05-25T23:58:56+02:00",
    "2006-05-26T00:06:49+02:00",
    "2006-05-26T00:20:09+02:00",
    "2006-05-29T09:10:48+02:00",
    "2006-05-30T15:21:20+02:00",
    "2006-05-30T15:28:48+02:00",
    "2006-05-30T15:39:40+02:00",
    "2006-06-06T16:24:41+02:00",
    "2006-06-06T16:40:08+02:00",
    "2006-06-06T19:08:27+02:00",
    "2006-06-07T02:20:56+02:00",
    "2006-06-09T20:14:29+02:00",
    "2006-06-10T11:47:07+02:00",
    "2006-06-12T15:01:00+02:00",
    "2006-06-12T15:21:44+02:00",
    "2006-06-14T04:15:20+02:00",
    "2006-06-14T04:29:17+02:00",
    "2006-06-14T17:46:47+02:00",
    "2006-06-15T03:15:32+02:00",
    "2006-06-16T12:24:58+02:00",
    "2006-06-19T08:18:13+02:00",
    "2006-06-20T08:14:48+02:00",
    "2006-06-24T12:37:06+02:00",
    "2006-07-17T18:14:58+02:00",
    "2006-08-08T20:02:07+02:00",
    "2006-09-26T19:09:06+02:00",
    "2006-09-26T20:50:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.datatools.connectivity.sqm.internal.core.definition.DatabaseDefinitionImpl.supportsSequence",
          "source": "DatabaseDefinitionImpl.java:956"
        },
        {
          "method": "org.eclipse.datatools.connectivity.sqm.server.internal.ui.explorer.providers.content.layout.vnode.ServerExplorerVNodeContentProviderNav.displaySchemaChildren",
          "source": "ServerExplorerVNodeContentProviderNav.java:105"
        }
      ],
      "number": 0,
      "commentIndex": 33,
      "bugId": "129490",
      "duplicateId": "92250",
      "date": "2006-05-08T19:15:12+02:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "critical"
    },
    {
      "exceptionType": "org.eclipse.jface.resource.DeviceResourceException",
      "message": "Unable to create resource URLImageDescriptor(bundleentry://545/)",
      "elements": [
        {
          "method": "org.eclipse.jface.resource.ImageDescriptor.createResource",
          "source": "ImageDescriptor.java:173"
        },
        {
          "method": "org.eclipse.jface.resource.DeviceResourceManager.allocate",
          "source": "DeviceResourceManager.java:56"
        },
        {
          "method": "org.eclipse.jface.resource.AbstractResourceManager.create",
          "source": "AbstractResourceManager.java:87"
        }
      ],
      "number": 1,
      "commentIndex": 33,
      "bugId": "129490",
      "duplicateId": "92250",
      "date": "2006-05-08T19:15:12+02:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.wst.rdb.data.internal.ui.editor.TableDataEditorInput",
      "elements": [
        {
          "method": "org.eclipse.birt.report.designer.internal.ui.ide.adapters.LibraryProvider.getProjectLibraryList",
          "source": "LibraryProvider.java:75"
        },
        {
          "method": "org.eclipse.birt.report.designer.internal.ui.ide.adapters.LibraryProvider.getLibraries",
          "source": "LibraryProvider.java:61"
        }
      ],
      "number": 2,
      "commentIndex": 33,
      "bugId": "129490",
      "duplicateId": "92250",
      "date": "2006-05-08T19:15:12+02:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "critical"
    },
    {
      "exceptionType": "java.io.IOException",
      "message": "Stream closed",
      "elements": [
        {
          "method": "java.io.BufferedInputStream.getBufIfOpen",
          "source": "BufferedInputStream.java:145"
        },
        {
          "method": "java.io.BufferedInputStream.read1",
          "source": "BufferedInputStream.java:253"
        },
        {
          "method": "java.io.BufferedInputStream.read",
          "source": "BufferedInputStream.java:313"
        },
        {
          "method": "java.io.BufferedInputStream.read1",
          "source": "BufferedInputStream.java:254"
        },
        {
          "method": "java.io.BufferedInputStream.read",
          "source": "BufferedInputStream.java:313"
        },
        {
          "method": "java.io.FilterInputStream.read",
          "source": "FilterInputStream.java:90"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.read",
          "source": "OutputStreamMonitor.java:138"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor.access$1",
          "source": "OutputStreamMonitor.java:128"
        },
        {
          "method": "org.eclipse.debug.internal.core.OutputStreamMonitor$1.run",
          "source": "OutputStreamMonitor.java:194"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:613"
        }
      ],
      "number": 3,
      "commentIndex": 34,
      "bugId": "129490",
      "duplicateId": "92250",
      "date": "2006-05-10T18:35:57+02:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "critical"
    }
  ],
  "groupId": "92250",
  "bugId": "129490",
  "duplicateId": "92250",
  "date": "2006-02-26T15:05:33+01:00",
  "product": "Web Tools",
  "component": "wst.common",
  "severity": "critical"
}