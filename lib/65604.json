{
  "comments": [
    "Build 200406030854\n\nAfter debugging Eclipse for a little while I noticed that I have a ton of \"Invalid stack frame\" \nexceptions in my log (around 40 of them - I guess one for each frame?). Looks like Bug 57467, but \nI\u0027m not sure if the underlying cause is really a dup.\n\norg.eclipse.debug.core.DebugException: Invalid stack frame\n\tat org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.\ngetUnderlyingStackFrame(JDIStackFrame.java:961)\n\tat org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.\ngetUnderlyingMethod(JDIStackFrame.java:226)\n\tat org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.isOutOfSynch(JDIStackFrame.\njava:880)\n\tat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.\ncomputeJDIAdornmentFlags(JDIModelPresentation.java:831)\n\tat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.\ngetDebugElementImage(JDIModelPresentation.java:797)\n\tat org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:\n637)\n\tat org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:\n94)\n\tat org.eclipse.debug.internal.ui.DelegatingModelPresentation.\ngetImage(DelegatingModelPresentation.java:141)\n\tat org.eclipse.debug.internal.ui.views.DebugViewInterimLabelProvider.\ngetImage(DebugViewInterimLabelProvider.java:58)\n\tat org.eclipse.jface.viewers.DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:\n74)\n\tat org.eclipse.debug.internal.ui.views.launch.LaunchViewer.doUpdateItem(LaunchViewer.java:\n92)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.\nrun(AbstractTreeViewer.java:83)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:758)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:459)\n\tat org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.\nrun(StructuredViewer.java:128)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:615)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:758)\n\tat org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1368)\n\tat org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1352)\n\tat org.eclipse.jface.viewers.StructuredViewer.update(StructuredViewer.java:1280)\n\tat org.eclipse.debug.internal.ui.views.DebugViewDecoratingLabelProvider.\nlabelsComputed(DebugViewDecoratingLabelProvider.java:67)\n\tat org.eclipse.debug.internal.ui.views.DebugViewLabelDecorator$1.\nrun(DebugViewLabelDecorator.java:135)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2489)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2226)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:253)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:\n25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:638)\n\tat org.eclipse.core.launcher.Main.main(Main.java:622)",
    "This is likely a side effect of our fix to bug 46835. We mark stack frames \nwith an index of -1 while the thread is resumed so they don\u0027t lazily \nrepopulate with the wrong frame. The side effect is if you make a request for \na stack frame, while its thread is running, is this... but needs investigation.",
    "*** Bug 65773 has been marked as a duplicate of this bug. ***",
    "I have an improvement for stack frame index updating. When a thread suspends, \na stack frame can be asked for its underlying frame before the thread updates \nits index (since frames are retrieved lazily). Thus, a call to a stack frame \nto get some information, before a call to update frames can result in an \ninvalid stack frame exception (-1 index). This situation can be avoided by \nhaving the frame instruct its thread to update frames when its index is -1, \nand the thread is suspended.\n\nHowever, these exceptions are still possible to encounter, and are handled. \nFor example if we are retrieving an image/label/source when the thread is \nactually running, this exception will occurr. The stack frame throws an \nexception indicating that the stack frame is invalid. In the case that the \nthread is actually resumed, we throw with the relevant error code \nERR_THREAD_NOT_SUSPENDED, otherwise (if the thread is not suspended), the \nframe is actually invalid - no longer exists.",
    "Fixed. The stack frame now updates its index if required (and its thread is \nsuspended), by having its thread re-compute its stack frames. This will update \nthe frame\u0027s index. This allowed me to back out the changes I had made in the \ntests (manually forcing a thread to update frames after a suspend to avoid \ntiming issues). Changes in:\n\n* ISourceLookupParticipant - update javadoc to note that a client can return \nnull for a source name (implementation already did, and was accounted for)\n* JDIStackFrame - getUnderlyingStackFrame() - refreshes frames if current \nstate is invalid, throws ERR_THREAD_NOT_SUSPENDED if thread is not suspended\n* AbstractDebugTest - rolled back changes to force frame updating\n* InstanveVariableTests - rolled back changes\n* JDIModelPresentation - check for ERR_THREAD_NOT_SUSPENDED when computing \nimage adornments, and ignore it\n* JavaSourceLookupParticipant - check for ERR_THREAD_NOT_SUSPENDED and return \na null source name in this case - source not found, no exception. Note that \nthe \"old\" source lookup implementation already did this, but the \"new\" source \nlookup implementation did not",
    "Please verify, Jared.",
    "*** Bug 62634 has been marked as a duplicate of this bug. ***",
    "Note we also added the fix to bug 66378, which was also causing an invalid \nframe exception.",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-06-03T21:06:34+02:00",
    "2004-06-03T21:16:36+02:00",
    "2004-06-04T20:29:02+02:00",
    "2004-06-04T20:39:14+02:00",
    "2004-06-04T21:12:51+02:00",
    "2004-06-04T21:13:33+02:00",
    "2004-06-07T16:05:37+02:00",
    "2004-06-10T16:35:20+02:00",
    "2004-06-10T23:18:23+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.debug.core.DebugException",
      "message": "Invalid stack frame",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame",
          "source": "JDIStackFrame.java:961"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingMethod",
          "source": "JDIStackFrame.java:226"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.isOutOfSynch",
          "source": "JDIStackFrame. java:880"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeJDIAdornmentFlags",
          "source": "JDIModelPresentation.java:831"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getDebugElementImage",
          "source": "JDIModelPresentation.java:797"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage",
          "source": "JDIModelPresentation.java: 637"
        },
        {
          "method": "org.eclipse.debug.internal.ui.LazyModelPresentation.getImage",
          "source": "LazyModelPresentation.java: 94"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage",
          "source": "DelegatingModelPresentation.java:141"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.DebugViewInterimLabelProvider.getImage",
          "source": "DebugViewInterimLabelProvider.java:58"
        },
        {
          "method": "org.eclipse.jface.viewers.DecoratingLabelProvider.getImage",
          "source": "DecoratingLabelProvider.java: 74"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.launch.LaunchViewer.doUpdateItem",
          "source": "LaunchViewer.java: 92"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run",
          "source": "AbstractTreeViewer.java:83"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:615"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:758"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem",
          "source": "AbstractTreeViewer.java:459"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run",
          "source": "StructuredViewer.java:128"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:615"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:758"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateItem",
          "source": "StructuredViewer.java:1368"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.update",
          "source": "StructuredViewer.java:1352"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.update",
          "source": "StructuredViewer.java:1280"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.DebugViewDecoratingLabelProvider.labelsComputed",
          "source": "DebugViewDecoratingLabelProvider.java:67"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.DebugViewLabelDecorator$1.run",
          "source": "DebugViewLabelDecorator.java:135"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:106"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:2489"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2226"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1363"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1334"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:253"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:334"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:128"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java: 25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:638"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:622"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "65604",
      "date": "2004-06-03T21:06:34+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "65604",
  "bugId": "65604",
  "date": "2004-06-03T21:06:34+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}