{
  "comments": [
    "I20070320-0010.\n\nDouble-Click in the Java editor ruler no longer works. Breakpoints can\u0027t be added.\n\nThis is caused by fixing bug 82256 and has to be fixed for M6.",
    "It works for the text editor but not the Java Editor. I verified that the ContributedAction action is created.\n\nSometimes I get this:\n!ENTRY org.eclipse.ui.workbench 4 0 2007-03-20 12:25:37.792\n!MESSAGE Trying to execute a disabled command\n!STACK 0\norg.eclipse.core.commands.NotEnabledException: Trying to execute a disabled command\n\tat org.eclipse.core.commands.Command.executeWithChecks(Command.java:464)\n\tat org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424)\n\tat org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:164)\n\tat org.eclipse.ui.internal.handlers.SlaveHandlerService.executeCommand(SlaveHandlerService.java:247)\n\tat org.eclipse.ui.internal.handlers.SlaveHandlerService.executeCommand(SlaveHandlerService.java:247)\n\tat org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:178)\n\tat org.eclipse.ui.internal.actions.CommandAction.run(CommandAction.java:192)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor$14.triggerAction(AbstractTextEditor.java:2804)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor$14.access$1(AbstractTextEditor.java:2798)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor$15.run(AbstractTextEditor.java:2817)\n\tat org.eclipse.swt.widgets.Display.runTimer(Display.java:3736)\n\tat org.eclipse.swt.widgets.Display.messageProc(Display.java:2958)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2225)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3282)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2331)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2295)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2170)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:463)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:458)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:101)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:146)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:356)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:171)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:476)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:416)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1141)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1116)\n",
    "Verified that reverting the code back to the internal EditorPluginAction \"fixes\" the problem.",
    "*** Bug 178230 has been marked as a duplicate of this bug. ***",
    "Was it working in the I20070320-0010 build?  I just checked and double-clicking in  the java editor toggles the breakpoint for me.\n\nI\u0027ll try my test on Windows.\nPW\n",
    "Ooop, read the build number.  I\u0027ll try my test on windows\nPW\n",
    "aah: it seems to work in the very first Java editor but then it\u0027s broken.",
    "Nuts, that means it\u0027s probably the ActionDelegateHandleProxy. Investigating.\n\nPW\n",
    "Note that the key binding action for toggle breakpoint seems to be a workaround - i.e. Ctrl-Shift-B.",
    "Created an attachment (id\u003d61382)\nActionDelegateHandlerProxy v01\n\nThe proxy needs to update the action delegate before calling run, or it always points to the first editor.\nPW\n",
    "The more general bugs are bug 142812 and 151612\nPW\n",
    "Released fix to HEAD.  Will be included when we re-spin.\nPW\n",
    "Fixed in I20070320-1620\nPW\n",
    "In I20070320-1620\nPW\n",
    "Also verified in I20070321-0010. Thanks!",
    "I was too fast: adding a breakpoint does not work when Java \u003e Editor \u003e Hovers \u003e Expand vertical ruler icons... is enabled.\n\nSteps:\n1. enable the preference\n2. open Java Editor\n3. add a bookmark on a line that has code\n4. hover over the bookmark in the vertical ruler\n   \u003d\u003d\u003e expands\n5. single.click on the dot (the one on the left of the bookmark)\n\u003d\u003d\u003e nothing happens\nEXPECTED: a breakpoint is added\n\nI think the reason why this is not working is that the new API tries to be smart and check whether the command is active at the moment and this is probably not the case because the shell is active that shows the ruler icons.\n\nThe new API is different to what EditorPluginAction does which simply created the contributed action for me.",
    "You\u0027re correct.  The new API executes the command, which delegates to the active handler.  This could be tied to the active shell at the moment.  Investigating.\nPW\n",
    "The Command is never being called (like it is for a standard double click).\n\nDani, I never get doubleClick(*) called that\u0027s defined in JavaEditor#createAnnotationRulerColumn(*), even when I debug.\n\nI don\u0027t seem to be getting mouse events in AnnotationExpansionControl at the appropriate time, and most times not at all.  The \"Warning\" annotation doesn\u0027t work most times if I click on it either.  Sometimes I do get the mouseUp event, and then it works.\n\nPW\n",
    "Simply add a breakpoint in the constructor of the ContributedAction and perform the steps from comment 15. \u003d\u003d\u003e the breakpoint will be hit and you see where it\u0027s called. Immediately afterwards the run() is called on that action.",
    "I wouldn\u0027t worry too much about who\u0027s asking for that action. Any client can request that action from anywhere and then the client must be able to run that action.",
    "(In reply to comment #17)\n\u003e Dani, I never get doubleClick(*) called that\u0027s defined in\n\u003e JavaEditor#createAnnotationRulerColumn(*), even when I debug.\n\u003e\n\nOh, wrong path, it\u0027s OK.\nPW\n",
    "OK, this is definitely related to the ActiveShellSourceProvider, and the way the HandlerAuthority works.\n\nIt\u0027s responsible for other behaviour like bug 173213 and bug 172321.\n\nI think that this is too risky to address in M6, and should be moved to M7.\n\nI\u0027ve talked to Dani and he\u0027s agreed to revert to EditorPluginAction for M6, and this needs to be addressed early in M7.\n\nPW\n",
    "Created an attachment (id\u003d62117)\nJDT UI v01\n\nDepends on acceptance of bug 173213\n\nDraft patch to allow the AnnotationExpansionControl to execute commands (and it includes the ContributedAction back in AbstractTextEditor).\n\nThe important part is in AnnotationExpansionControl:\nIContextService service \u003d (IContextService) \n\tlocator.getService(IContextService.class);\nif (service!\u003dnull) {\n\tservice.registerShell(fShell,\n\t\tIContextService.TYPE_DIALOG_SUPPORTS_WORKBENCH);\n}\n\nThe changes to JavaExpandHover.java, AnnotationExpandHover.java, and JavaEditor.java were just to propogate the IServiceLocator from the JavaEditor site.  They could be avoided, I think, by using JavaPlugin.getWorkbench(); in AnnotationExpansionControl\n\nPW\n",
    "This is not a replacement for the EditorPluginAction and can break behavior  of existing client code (which is directly proved by the several changes to client code in the patch). At this point we cannot risk to \"break\" upstream plug-ins. So, ContributedAction simply has to mirror the EditorPluginAction behavior. I will not use the action as it is now.",
    "Dani,\n\nThere\u0027s no way to move to the command framework without accepting some minimal behavioural changes.  The code will work unless you are in a dialog that is not registered with the workbench flow, and that information can be put in the porting guide.\n\nIt is a *direct* replacement for a legacy contributed action.  And like I mentioned, behavioural changes can be documented in the porting guide.\n\nPW\n",
    "That\u0027s not an acceptable change as users from other views (e.g. Outline) can ask for such an editor action using the Platform Text API and run it. If that\u0027s the price I pay Platform Text will not migrate to the new command framework. Sorry.",
    "\u003e If that\u0027s\n\u003ethe price I pay Platform Text will not migrate to the new command framework.\nJust to clarify: I don\u0027t mean the whole migration here but just that instance/API in the editor where we currently use the (internal) EditorPluginAction and offer it to clients. As these clients can get that action from any view it would cause major breakage for them because the action would be disabled now since the editor doesn\u0027t have the focus.",
    "It is the price of the new command framework.\n\nI won\u0027t delete EditorPluginAction if text still needs it.\n\nPW\n",
    "\u003eIt is the price of the new command framework.\n\u003eI won\u0027t delete EditorPluginAction if text still needs it.\nI don\u0027t get it: you explicitly added that new action for Platform Text to fix bug 82256 and we are (and will be) probably be the only client. Now you are saying, hey this action cannot replace the internal one since it must adhere to the new framework -why? - it is explicitly here to support the legacy case isn\u0027t it?",
    "(In reply to comment #28)\n\u003e I don\u0027t get it: you explicitly added that new action for Platform Text to fix\n\u003e bug 82256 and we are (and will be) probably be the only client. Now you are\n\u003e saying, hey this action cannot replace the internal one since it must adhere to\n\u003e the new framework -why? - it is explicitly here to support the legacy case\n\u003e isn\u0027t it?\n\nIt is to provide text with the equivalent service as API using the Command Framework.  When we depended on the action framework, this wasn\u0027t published as API because it was tied to a specific implementation.  Now that we\u0027re moving to support the new command framework, I\u0027m loathe to publish API that specifically circumvents the command framework (no notification of command executed, does not respect the active/enabled state).\n\nMcQ had a good suggestions.  There might be something I can do to capture the application/handler state when the action is created (then it won\u0027t be dependent on dialogs).  Stay tuned.\n\nPW\n",
    "Created an attachment (id\u003d62238)\nFind the Handler in the ContributedAction v02\n\nWhen we create the ContributedAction, create a snapshot of the application context.  Fill it in with the editor as the active editor and active part (and make sure the workbench window and shell are available).\n\nTrack down the handler.  When run, execute that specific handler with the saved app context.\n\nThis works in the ruler and the expand hover (when that works).  It would also work if executed from the Outline View.\n\nIt should not require any client side code change.\n\nPW\n",
    "If this is acceptable, I\u0027ll go ahead with it.\nPW\n",
    "GO - I think this will work. The old solution also holds on to the \"context\" in its own way by having a reference to the editor. ",
    "Released \u003e20070329\n\nI still have 2 minor changes to make.\n\n1) if I really can\u0027t find a registered handler, turn the IConfigurationElement into an ActionDelegateHandlerProxy\n\n2) Set the selection to an empty selection\n\nPW\n",
    "Released changes with empty selection \u003e20070330\nPW\n",
    "Fixed Platform Text side.\nVerified scenario from comment 0 and comment 15.\n\nThanks Paul.",
    "toggle break point - double click\nChecked again in I20070501-0010\nPW\n"
  ],
  "commentCreationDates": [
    "2007-03-20T12:15:11+01:00",
    "2007-03-20T12:27:19+01:00",
    "2007-03-20T12:35:04+01:00",
    "2007-03-20T12:35:25+01:00",
    "2007-03-20T14:10:10+01:00",
    "2007-03-20T14:10:35+01:00",
    "2007-03-20T14:16:55+01:00",
    "2007-03-20T14:19:46+01:00",
    "2007-03-20T14:52:01+01:00",
    "2007-03-20T14:59:37+01:00",
    "2007-03-20T15:09:17+01:00",
    "2007-03-20T15:51:51+01:00",
    "2007-03-20T23:55:04+01:00",
    "2007-03-21T01:52:24+01:00",
    "2007-03-21T10:13:27+01:00",
    "2007-03-21T12:19:32+01:00",
    "2007-03-21T13:37:21+01:00",
    "2007-03-21T15:41:21+01:00",
    "2007-03-21T15:45:16+01:00",
    "2007-03-21T15:46:50+01:00",
    "2007-03-21T15:47:04+01:00",
    "2007-03-21T17:42:56+01:00",
    "2007-03-27T18:09:39+02:00",
    "2007-03-27T18:36:23+02:00",
    "2007-03-27T19:22:58+02:00",
    "2007-03-28T08:36:27+02:00",
    "2007-03-28T11:29:58+02:00",
    "2007-03-28T14:10:39+02:00",
    "2007-03-28T14:18:11+02:00",
    "2007-03-28T15:09:23+02:00",
    "2007-03-28T17:15:13+02:00",
    "2007-03-29T13:58:51+02:00",
    "2007-03-29T14:06:39+02:00",
    "2007-03-29T21:10:28+02:00",
    "2007-03-30T13:34:50+02:00",
    "2007-03-30T15:54:42+02:00",
    "2007-05-01T21:02:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.commands.NotEnabledException",
      "message": "Trying to execute a disabled command",
      "elements": [
        {
          "method": "org.eclipse.core.commands.Command.executeWithChecks",
          "source": "Command.java:464"
        },
        {
          "method": "org.eclipse.core.commands.ParameterizedCommand.executeWithChecks",
          "source": "ParameterizedCommand.java:424"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.HandlerService.executeCommand",
          "source": "HandlerService.java:164"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.SlaveHandlerService.executeCommand",
          "source": "SlaveHandlerService.java:247"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.SlaveHandlerService.executeCommand",
          "source": "SlaveHandlerService.java:247"
        },
        {
          "method": "org.eclipse.ui.internal.actions.CommandAction.runWithEvent",
          "source": "CommandAction.java:178"
        },
        {
          "method": "org.eclipse.ui.internal.actions.CommandAction.run",
          "source": "CommandAction.java:192"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$14.triggerAction",
          "source": "AbstractTextEditor.java:2804"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$14.access$1",
          "source": "AbstractTextEditor.java:2798"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$15.run",
          "source": "AbstractTextEditor.java:2817"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runTimer",
          "source": "Display.java:3736"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.messageProc",
          "source": "Display.java:2958"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:2225"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3282"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2331"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2295"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2170"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:463"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:458"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:101"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:146"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:356"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:171"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:476"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:416"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1141"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1116"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "178228",
      "date": "2007-03-20T12:27:19+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "178228",
  "bugId": "178228",
  "date": "2007-03-20T12:15:11+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}