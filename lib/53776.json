{
  "comments": [
    "Hi,\n\nI am trying to generate an xsd for my model.  I have a series of models which \ndepend upon one another.  My model depends upon wsdl, which depends upon xsd.  \nXSD generation fails silently.  This is frustrating, because I need to share \nthe xmi persistence schema with  my colleagues.  Can you help?\n\nI am using Eclipse 2.1.2 with EMF 1.1.1.  I have installed the xsd 1.1.1.1 \nplugins, as recommended on the EMF web site.\n\nI can generate the xsd for the XSD.genmodel.  However, if I try to generate the \nxsd for the wsdl model or for my own model, I get the the progress monitor \ndisappears, there is no indication of failure, but there is no xsd file in my\nmodel folder.  I have turned on the Generate Schema option for each model and \ninvoked Generate Model.\n\nIf I look in the metadata .log file, I find this:\n\njava.lang.reflect.InvocationTargetException: java.lang.NullPointerException\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.typeInOtherSchema\n(EcoreXMLSchemaBuilder.java:178)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.setReferenceElementType\n(EcoreXMLSchemaBuilder.java:649)\n\tat org.eclipse.xsd.ecore.EcoreXMISchemaBuilder.setReferenceElementType\n(EcoreXMISchemaBuilder.java:620)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.makeReferenceElement\n(EcoreXMLSchemaBuilder.java:626)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.processReference\n(EcoreXMLSchemaBuilder.java:577)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.processClass\n(EcoreXMLSchemaBuilder.java:304)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.processClasses\n(EcoreXMLSchemaBuilder.java:210)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.generate\n(EcoreXMLSchemaBuilder.java:108)\n\tat org.eclipse.xsd.ecore.EcoreXMISchemaBuilder.generate\n(EcoreXMISchemaBuilder.java:75)\n\tat org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.generate\n(EcoreXMLSchemaBuilder.java:96)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat \norg.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generateXSD\n(GenPackageImpl.java:1585)\n\tat org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate\n(GenPackageImpl.java:1410)\n\tat org.eclipse.emf.codegen.ecore.genmodel.impl.GenModelImpl.generate\n(GenModelImpl.java:1160)\n\tat \norg.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor\n$1.generate(GenModelActionBarContributor.java:133)\n\tat \norg.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor\n$2.execute(GenModelActionBarContributor.java:233)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run\n(WorkspaceModifyOperation.java:71)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1595)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run\n(WorkspaceModifyOperation.java:85)\n\tat org.eclipse.jface.operation.ModalContext.runInCurrentThread\n(ModalContext.java:302)\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)\n\tat org.eclipse.jface.dialogs.ProgressMonitorDialog.run\n(ProgressMonitorDialog.java:357)\n\tat \norg.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor\n$GenerateAction.run(GenModelActionBarContributor.java:249)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:842)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:456)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent\n(ActionContributionItem.java:403)\n\tat org.eclipse.jface.action.ActionContributionItem.access$0\n(ActionContributionItem.java:397)\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java:72)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:858)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:291)\n\tat org.eclipse.core.launcher.Main.run(Main.java:747)\n\tat org.eclipse.core.launcher.Main.main(Main.java:583)",
    "David,\n\nThis code in EcoreXMLSchemaBuilder assumes that nsPrefixes of packages are \nunique:\n\n protected XSDTypeDefinition typeInOtherSchema(EClassifier classifier)\n {\n   EPackage typePkg \u003d classifier.getEPackage();\n   Map namespaces \u003d xsdSchema.getQNamePrefixToNamespaceMap();\n\n   if (namespaces.get(typePkg.getNsPrefix()) \u003d\u003d null)\n   {\n     namespaces.put(typePkg.getNsPrefix(), typePkg.getNsURI());\n     addImport(typePkg.getNsURI(), getName(typePkg) + \".xsd\");\n     createOtherSchema(typePkg);\n   }\n\n   XSDSchema otherXSDSchema \u003d (XSDSchema) ePackageToXSDSchemaMap.get(typePkg);\n   return otherXSDSchema.resolveTypeDefinition(getName(classifier));\n }\n\nThis is a bad assumption and I\u0027ve verified that the problem can be reproduced \nwhen the assumption is violated. So I think that you can work around this \nproblem by ensuring that the ns prefixes of the EPackages are unique (even just \ntemporarily) and then we can fix this in the 2.0 stream. Okay?",
    "Hi Ed,  \n\nI am not sure if this is the problem, or if I understand your directions \ncorrectly.  Here are the existing namespace prefixes as defined by the relative \nPackages.  It looks like they are already unique.\n\n\tString eNS_PREFIX \u003d \"com.xxx.model\";\n\tString eNS_PREFIX \u003d \"com.xxx.cb.core.model\";\n\tString eNS_PREFIX \u003d \"wsdl\";\n\nFor XSD, there is no Package class, but in the genmodel properties it says:\n\n        Base Package: org.eclipse\n        Prefix: XSD",
    "David,\n\nI\u0027ll need to see the entire set of .ecore/.genmodel files involved in this if \nthere is some other way to reproduce the problem.  Just from code inspection \nit\u0027s clear that if the last line of the method has a null pointer exception, \nthen the \"if\" test failed to call createOtherSchema. That seems possible only if \nthere is more than one package with the same EPackage.nsPrefix.  The first thing \nI\u0027ll do is \n\n  grep nsPrefix *.ecore\n\nto look for the nsPrefix values for all EPackages in all the .ecores.",
    "Fixed in CVS.  Unique nsPrefixes are assigned in case of conflicts.",
    "The fix is available in the latest 2.0 integration driver."
  ],
  "commentCreationDates": [
    "2004-03-04T17:40:31+01:00",
    "2004-03-05T13:21:06+01:00",
    "2004-03-05T13:43:55+01:00",
    "2004-03-05T15:06:51+01:00",
    "2004-03-21T16:28:12+01:00",
    "2004-03-25T20:08:25+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.typeInOtherSchema",
          "source": "EcoreXMLSchemaBuilder.java:178"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.setReferenceElementType",
          "source": "EcoreXMLSchemaBuilder.java:649"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMISchemaBuilder.setReferenceElementType",
          "source": "EcoreXMISchemaBuilder.java:620"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.makeReferenceElement",
          "source": "EcoreXMLSchemaBuilder.java:626"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.processReference",
          "source": "EcoreXMLSchemaBuilder.java:577"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.processClass",
          "source": "EcoreXMLSchemaBuilder.java:304"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.processClasses",
          "source": "EcoreXMLSchemaBuilder.java:210"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.generate",
          "source": "EcoreXMLSchemaBuilder.java:108"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMISchemaBuilder.generate",
          "source": "EcoreXMISchemaBuilder.java:75"
        },
        {
          "method": "org.eclipse.xsd.ecore.EcoreXMLSchemaBuilder.generate",
          "source": "EcoreXMLSchemaBuilder.java:96"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generateXSD",
          "source": "GenPackageImpl.java:1585"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate",
          "source": "GenPackageImpl.java:1410"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenModelImpl.generate",
          "source": "GenModelImpl.java:1160"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$1.generate",
          "source": "GenModelActionBarContributor.java:133"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$2.execute",
          "source": "GenModelActionBarContributor.java:233"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:71"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1595"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:85"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:302"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:252"
        },
        {
          "method": "org.eclipse.jface.dialogs.ProgressMonitorDialog.run",
          "source": "ProgressMonitorDialog.java:357"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.presentation.GenModelActionBarContributor$GenerateAction.run",
          "source": "GenModelActionBarContributor.java:249"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:842"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:456"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent",
          "source": "ActionContributionItem.java:403"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$0",
          "source": "ActionContributionItem.java:397"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java:72"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1385"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:858"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:291"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:747"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:583"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "53776",
      "date": "2004-03-04T17:40:31+01:00",
      "product": "EMF",
      "component": "Core",
      "severity": "blocker"
    }
  ],
  "groupId": "53776",
  "bugId": "53776",
  "date": "2004-03-04T17:40:31+01:00",
  "product": "EMF",
  "component": "Core",
  "severity": "blocker"
}