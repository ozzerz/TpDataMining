{
  "comments": [
    "Got the following stack trace several times while importing existing projects via \"Import Existing Projects into Workspace\" wizard. The projects being imported had all the required files. My guess is that this is caused by not handling the case where resource change listeners can be fired on a project while it is in the process of being imported. Note that the stack trace was printed in the console and not logged to the PDE error log (that itself is a problem), so it may not be visible to all people. Cannot tell if any functionality is impaired due to this.\n\n*** ERROR ***: Mon Oct 02 14:37:53 PDT 2006    org.eclipse.jst.j2ee.commonarchivecore.internal.exception.OpenFailureException: IWAE0006E Archive is not a valid WAR File because the deployment descriptor can not be found (case sensitive): WEB-INF/web.xml\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.CommonarchiveFactoryImpl.openSpecificArchive(CommonarchiveFactoryImpl.java:805)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.CommonarchiveFactoryImpl.openWARFile(CommonarchiveFactoryImpl.java:841)\n    \tat org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.asArchive(WebArtifactEdit.java:638)\n    \tat org.eclipse.jst.j2ee.internal.archive.operations.EARComponentLoadStrategyImpl.addModulesAndUtilities(EARComponentLoadStrategyImpl.java:94)\n    \tat org.eclipse.jst.j2ee.internal.archive.operations.EARComponentLoadStrategyImpl.getFiles(EARComponentLoadStrategyImpl.java:51)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.LoadStrategyImpl.collectFiles(LoadStrategyImpl.java:286)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ContainerImpl.getFiles(ContainerImpl.java:237)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ContainerImpl.getFile(ContainerImpl.java:197)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleRefImpl.initModuleFileFromEAR(ModuleRefImpl.java:122)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleRefImpl.getModuleFile(ModuleRefImpl.java:106)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.EARFileImpl.getModuleFile(EARFileImpl.java:93)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.EARFileImpl.getDeploymentDescriptor(EARFileImpl.java:333)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleRefImpl.getDeploymentDescriptor(ModuleRefImpl.java:165)\n    \tat org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validateWebAppRefs(EarValidator.java:444)\n    \tat org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validateRefs(EarValidator.java:397)\n    \tat org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validate(EarValidator.java:122)\n    \tat org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validateInJob(EarValidator.java:144)\n    \tat org.eclipse.jst.j2ee.internal.validation.UIEarValidator.validateInJob(UIEarValidator.java:218)\n    \tat org.eclipse.wst.validation.internal.operations.ValidatorJob.run(ValidatorJob.java:70)\n    \tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "The logged exception is because the module the EAR was looking for couldn\u0027t be found.  Though I was unable to reproduce the error using the steps described above, I was able to reproduce by renaming (not refactoring) the web.xml to web.xml.foo and then running validation manually on the EAR project.  There is nothing that can be easily done to fix the actual exception, however, I noticed that there was no validation error or warning about the missing module.  The missing validation is because EarValidator.validateRefs() catches and ignores the NoModuleFileException with an explicit comment stating that validation will be done elsewhere.  The extra validation doesn\u0027t seem to be running.",
    "Created an attachment (id\u003d53747)\nProposed fix \n\nAs pointed out by Jason, removing code to ignore NoModuleFileException, this makes sure that an error marker is created.",
    "approve",
    "This is fine....   but original problem of preventing validation when not \"ready\" still persists....\n\nValidators need a concept of \"ready\" state.  - will need to look in 2.x timeframe\n\napprove this change",
    "code in CVS",
    "I tried verifying this problem\nLooks like if the original projects imported include a web project with an ear assoicated with it. then if you rename web.xml as web.xml.foo in file system. then you import the 2 projects using import existing..., you get the validation error message in the problems view.\n\nHowever if the original projects imported only includes a web project (NO EAR project), then if you rename web.xml as web.xml.foo in file system, then you import the one project using import existing..., you get no errors in problems view.\n\n\n\n\n",
    "Closing this old bug."
  ],
  "commentCreationDates": [
    "2006-10-02T23:40:00+02:00",
    "2006-11-08T19:05:20+01:00",
    "2006-11-13T15:36:17+01:00",
    "2006-11-13T16:18:37+01:00",
    "2006-11-15T20:24:22+01:00",
    "2006-11-15T21:35:13+01:00",
    "2007-02-06T20:46:52+01:00",
    "2007-05-03T17:14:03+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jst.j2ee.commonarchivecore.internal.exception.OpenFailureException",
      "message": "IWAE0006E Archive is not a valid WAR File because the deployment descriptor can not be found (case sensitive): WEB-INF/web.xml",
      "elements": [
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.CommonarchiveFactoryImpl.openSpecificArchive",
          "source": "CommonarchiveFactoryImpl.java:805"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.CommonarchiveFactoryImpl.openWARFile",
          "source": "CommonarchiveFactoryImpl.java:841"
        },
        {
          "method": "org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.asArchive",
          "source": "WebArtifactEdit.java:638"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.archive.operations.EARComponentLoadStrategyImpl.addModulesAndUtilities",
          "source": "EARComponentLoadStrategyImpl.java:94"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.archive.operations.EARComponentLoadStrategyImpl.getFiles",
          "source": "EARComponentLoadStrategyImpl.java:51"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.LoadStrategyImpl.collectFiles",
          "source": "LoadStrategyImpl.java:286"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ContainerImpl.getFiles",
          "source": "ContainerImpl.java:237"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ContainerImpl.getFile",
          "source": "ContainerImpl.java:197"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleRefImpl.initModuleFileFromEAR",
          "source": "ModuleRefImpl.java:122"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleRefImpl.getModuleFile",
          "source": "ModuleRefImpl.java:106"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.EARFileImpl.getModuleFile",
          "source": "EARFileImpl.java:93"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.EARFileImpl.getDeploymentDescriptor",
          "source": "EARFileImpl.java:333"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleRefImpl.getDeploymentDescriptor",
          "source": "ModuleRefImpl.java:165"
        },
        {
          "method": "org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validateWebAppRefs",
          "source": "EarValidator.java:444"
        },
        {
          "method": "org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validateRefs",
          "source": "EarValidator.java:397"
        },
        {
          "method": "org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validate",
          "source": "EarValidator.java:122"
        },
        {
          "method": "org.eclipse.jst.j2ee.model.internal.validation.EarValidator.validateInJob",
          "source": "EarValidator.java:144"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.validation.UIEarValidator.validateInJob",
          "source": "UIEarValidator.java:218"
        },
        {
          "method": "org.eclipse.wst.validation.internal.operations.ValidatorJob.run",
          "source": "ValidatorJob.java:70"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "159524",
      "date": "2006-10-02T23:40:00+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "major"
    }
  ],
  "groupId": "159524",
  "bugId": "159524",
  "date": "2006-10-02T23:40:00+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "major"
}