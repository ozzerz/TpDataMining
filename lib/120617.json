{
  "comments": [
    "Greetings,\n\nThis only occurs when I am running an app in the Eclipse Tomcat plugin.  The exact sequence of events is to double click a method in a source file whose class is currently loaded into the web app.  The method becomes highlighted. Right click on this highlighted method name, and choose References -\u003e Workspace (or Project).  A dialog window comes up reporting \"I/O Error\" with the details button greyed out.  \n\nI attempted this same search by using a new workspace, and defined a workspace to include both projects at a high level.  This also resulted in the I/O error.\n\nIf I attempted this search a third time by editing the workspace to exclude all JAR files from the workspace search, the I/O error does not appear.",
    "something in the .log file?",
    "Yes, actually. I noticed that for unknown reasons (and prior this led to a project corruption which required complete project recreation to fix) the jar files seem to lose their references to themselves (show up empty) yet if I remove/re-add them, they don\u0027t show up as if Eclispe recognizes them... perhaps this error is the root of that problem.\n\nHere is the stacktrace:\n\n!ENTRY org.eclipse.jdt.core 4 -1 2005-12-12 14:43:58.880\n!MESSAGE I/O exception\n!STACK 0\njava.util.zip.ZipException: error in opening zip file\n\tat java.util.zip.ZipFile.open(Native Method)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:112)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:72)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(JavaModelManager.java:1461)\n\tat org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar(JarPackageFragmentRoot.java:181)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo(MatchLocator.java:703)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1441)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:958)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:999)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1116)\n\tat org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\n\tat org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:208)\n\tat org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:424)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:532)\n\tat org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:135)\n\tat org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:94)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "Created an attachment (id\u003d31661)\nSnapshot of \"empty jars\" when Eclipse loses references to files\n\n",
    "Moving to jdt.core",
    "Please do not set bug target, it\u0027s our responsibility to do it.\n\nSaying that, can you open those zip files outside eclipse? Aren\u0027t used by another application?\nHave you noticed anything special (and reproduceable) when they become unrecognized (empty) in your workspace? Does the problem still there after a shutdown/restart of your eclipse session?\n.log file content would be really helpful here...\n",
    "I have attached the entire .log file, in which you will find the key exception in comment 2.\n\nYes, I can open the jar files externally. That was the first thing I checked, esp. since I\u0027ve experienced this problem when the binary bit is not set in CVS for jar files and they get corrupted (although in this case we are using PVCS and are not obtaining the JAR files from PVCS).\n\nTo answer the question about how to reproduce it - I am still taking notes on this. On one occasion I had to rebuild the entire projects from scratch - restarting Eclipse did not fix the problem.  Tomcat reported being unable to load jars, and project builds reported being unable to find the basics such as classes within servlet.jar.  I believe this particular instance was related to a power failure which caused all of our PC\u0027s to shut down, and I was in the middle of working in Eclipse when this occurred.\n\nSubsequent occurrences seem only to be related to reference searching and not being able to search through the JAR files.  However, TomCat still finds the necessary jar files and runs as it should.  As you can see from the screen shot, the jar files do show up with the \u0027empty jar\u0027 icon (and shouldn\u0027t).\n\nFirst I suspected it was related to the TomCat plugin and TomCat running at the time the reference search operation was attempted.  But later evidence suggests this correlation to be false.  I also suspected it may be a java process running to serve RPC requests, but also that did not seem to be a steady correlation.\n\nThen some unknown event occurred which caused the reference search to start working again. I\u0027m not positive but it may have been related to setting the source for a class which resided in a jar but whose source was in one of the source paths for the project (which I found odd that I needed to set that as I assumed Eclipse would just be able to find the source within its own source paths).\n\nSo at present it is functional, but I could not tell you what fixed it.",
    "Created an attachment (id\u003d31733)\n.log file\n\n",
    "Would it be possible that event which made things working again was a refresh of your workspace? I saw in .log file before and after zip exception that your workspace got desynchronized on some resources...\n",
    "That is absolutely possible.  If this problem occurs again, I will try a refresh first to see if that resolves the issue.\n",
    "OK, reopen bug when it occurs again. Please also try to expand jar file in Package Explorer to see if there are similar exceptions and put corresponding stack trace in comment.\nThanks"
  ],
  "commentCreationDates": [
    "2005-12-13T16:45:04+01:00",
    "2005-12-13T16:49:35+01:00",
    "2005-12-13T18:21:50+01:00",
    "2005-12-13T18:25:34+01:00",
    "2005-12-13T22:06:42+01:00",
    "2005-12-14T07:01:19+01:00",
    "2005-12-14T14:35:55+01:00",
    "2005-12-14T14:36:50+01:00",
    "2005-12-14T17:59:25+01:00",
    "2005-12-14T18:03:26+01:00",
    "2005-12-14T18:07:59+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.zip.ZipException",
      "message": "error in opening zip file",
      "elements": [
        {
          "method": "java.util.zip.ZipFile.open",
          "source": "Native Method"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:112"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:72"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.getZipFile",
          "source": "JavaModelManager.java:1461"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar",
          "source": "JarPackageFragmentRoot.java:181"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo",
          "source": "MatchLocator.java:703"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.process",
          "source": "MatchLocator.java:1441"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:958"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:999"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1116"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:208"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:424"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:532"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run",
          "source": "JavaSearchQuery.java:135"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:94"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "120617",
      "date": "2005-12-13T18:21:50+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "120617",
  "bugId": "120617",
  "date": "2005-12-13T16:45:04+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}