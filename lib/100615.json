{
  "comments": [
    "I get this error frequently running JUnit Workbench tests oin shutdown.\n\njava.lang.NoClassDefFoundError: org/eclipse/core/internal/utils/StringPool\n\tat\norg.eclipse.core.internal.utils.StringPoolJob.shareStrings(StringPoolJob.java:111)\n\tat org.eclipse.core.internal.utils.StringPoolJob.run(StringPoolJob.java:93)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "I tried but could not find where we cancel the StringPoolJob anywhere in the\nResources plug-in code. The same is true for CharsetDeltaJob and CharsetManagerJob.",
    "*** Bug 101555 has been marked as a duplicate of this bug. ***",
    "I still get random dumps to my console of this Job not being cancelled properly.\n Is there any way I can query the JobManager for these types of jobs and cancel\nthem myself as a workaround for now?  They don\u0027t appear to belong to any known\nfamily.  Can I somehow get a list of all jobs in the JobManager and perhaps\ncancel them based on instance type?",
    "OK, I registered myself with the JobManager as a job change listener, and was\nable to hook the StringPoolJob (and others) if/when they are run, and can cancel\nthe Job before I exit.  I think this is going to work for me.",
    "This job should be canceled by the workspace prior to shutdown.",
    "Found this while helping another person with this same problem.\n\nNot sure I like the listener and subsequent cleanup approach that much; yes\nbased on your comment it works, but in an active plugin in an IDE configuration\nI doubt that I\u0027d want to either do that or be crossing the internal wall.  The\ncancel method is public but the StringPoolJob class is internal....\n\nTo test if this is the real problem (lack of a job.cancel), shouldn\u0027t I just\nhack a change to the Workbench.close() method and add a stringPoolJob.cancel();\nin the last finally block, and then package that tweaked core.resources plugin\nin my runtime?  (My contact says he can\u0027t force this problem when testing inside\nEclipse itself).\n\nBased on the run method and that this is a self scheduling/repeating job, I\u0027m\nthinking that the cancel will kill it the next time around.  Isn\u0027t that what\ncomment #5 says needs to happen to fix this?\n\nOr... is there a better strategy here.",
    "\n\n*** This bug has been marked as a duplicate of 111106 ***"
  ],
  "commentCreationDates": [
    "2005-06-17T18:45:27+02:00",
    "2005-06-17T20:30:10+02:00",
    "2005-06-23T22:53:13+02:00",
    "2005-09-12T21:57:34+02:00",
    "2005-09-12T22:53:36+02:00",
    "2005-09-13T00:04:58+02:00",
    "2005-10-12T19:30:11+02:00",
    "2005-10-12T19:42:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org/eclipse/core/internal/utils/StringPool",
      "elements": [
        {
          "method": "org.eclipse.core.internal.utils.StringPoolJob.shareStrings",
          "source": "StringPoolJob.java:111"
        },
        {
          "method": "org.eclipse.core.internal.utils.StringPoolJob.run",
          "source": "StringPoolJob.java:93"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "100615",
      "duplicateId": "111106",
      "date": "2005-06-17T18:45:27+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "111106",
  "bugId": "100615",
  "duplicateId": "111106",
  "date": "2005-06-17T18:45:27+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}