{
  "comments": [
    "Compiler fails when trying to convert a \"byte\" args() parameter to a \"int\" \npointcut formal when also using an \"if()\" PCD.\n\njava.lang.RuntimeException: Could not find instruction: \norg.apache.bcel.generic.B2I\n\tat org.apache.bcel.generic.InstructionFactory.createCast\n(InstructionFactory.java:493)\n\tat org.aspectj.weaver.bcel.Utility.createConversion(Utility.java:328)\n\tat org.aspectj.weaver.bcel.BcelRenderer.renderExpr\n(BcelRenderer.java:75)\n\tat org.aspectj.weaver.bcel.BcelRenderer.visit(BcelRenderer.java:210)\n\tat org.aspectj.weaver.ast.Call.accept(Call.java:30)\n\tat org.aspectj.weaver.bcel.BcelRenderer.recur(BcelRenderer.java:145)\n\tat org.aspectj.weaver.bcel.BcelRenderer.renderTest\n(BcelRenderer.java:111)\n\tat org.aspectj.weaver.bcel.BcelAdvice.getTestInstructions\n(BcelAdvice.java:342)\n\tat org.aspectj.weaver.bcel.BcelAdvice.getAdviceInstructions\n(BcelAdvice.java:265)\n\tat org.aspectj.weaver.bcel.BcelShadow.weaveAfterReturning\n(BcelShadow.java:1169)\n\tat org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:135)\n\tat org.aspectj.weaver.Shadow.implementMungers(Shadow.java:430)\n\tat org.aspectj.weaver.Shadow.implement(Shadow.java:326)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.implement\n(BcelClassWeaver.java:1153)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.weave\n(BcelClassWeaver.java:361)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.weave\n(BcelClassWeaver.java:82)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:726)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump\n(BcelWeaver.java:691)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify\n(BcelWeaver.java:617)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:565)\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave\n(AjCompilerAdapter.java:239)\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling\n(AjCompilerAdapter.java:114)\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:376)\n\tat \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation\n(AjBuildManager.java:717)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:170)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBuildManager.java:100)\n\tat org.aspectj.ajde.internal.CompilerAdapter.compile\n(CompilerAdapter.java:108)\n\tat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:169)",
    "public class Company {\n\n\tstatic final byte DEFAULT_MODE \u003d 0;\n    static final byte RECORDING \u003d 2;\n    \n\tstatic byte mode \u003d DEFAULT_MODE;\n\t\n\tpublic static void main (String[] args) {\n\t\tmode \u003d RECORDING;\n\t}\n\t\n}\n\npublic privileged aspect LoggingControl {\n\t\n\t/* ERROR */\n//\tpointcut startRecording1 (int newMode) :\n//\t\tset(byte Company.mode) \u0026\u0026 args(newMode) \u0026\u0026 if(newMode \u003d\u003d \nCompany.RECORDING);\n//\n//\tafter () returning : startRecording1 (*) {\n//\t\t\n//\t}\n\n\t/* OK */\n\tpointcut startRecording2 (byte newMode) :\n\t\tset(byte Company.mode) \u0026\u0026 args(newMode) \u0026\u0026 if(newMode \u003d\u003d \nCompany.RECORDING);\n\n\tafter () returning : startRecording2 (*) {\n\t\t\n\t}\n\n\t/* OK */\n\tpointcut startRecording3 (int newMode) :\n\t\tset(byte Company.mode) \u0026\u0026 args(newMode);\n\n\tafter (int newMode) returning : startRecording3 (newMode) {\n\t\tif (newMode \u003d\u003d Company.RECORDING) {\n\t\t\t\n\t\t}\n\t}\n}\n",
    "The class B2I is \u0027missing in action\u0027.  Its not in our version of BCEL, and it\nisnt in the apache version of BCEL either.  They have lots of type conversions\nutility classes, all of the form \u0027X\u00272\u0027Y\u0027 where X and Y are of some type\n(double/float/inte/byte/char/long).  I can see every permutation except\nB2\u003canything\u003e.  It looks deliberately missed out...",
    "Some instructions don\u0027t exist in the JVM.  B2I, B2C, B2S - which would (if they\ndid exist...) convert bytes, chars or shorts to ints.  According to the JVM spec\n(3.11.4 \u0027Type Conversion Instructions\u0027 in my copy), it says:\n\n\"Note that widening numeric conversions do not exist from integral types byte,\nchar, and short to type int.  As noted in 3.11.1, values of type byte, char and\nshort are internally widened to type int, making these conversions implicit.\"\n\nSo, I modified org.aspectj.weaver.bcel.Utility.createConversion() to be aware of\nthis rule, and if the source type is byte/char/short and the target type is int\nthen we don\u0027t look for a conversion instruction.\n\nWill close bug when fix available in build.",
    "Fix available:\n\nBUILD COMPLETE -  build.327\nDate of build: 08/05/2004 17:51:19\nTime to build: 93 minutes 33 seconds\nLast changed: 08/05/2004 17:20:15\nLatest good AspectJ jar available at:\ndownload.eclipse.org/technology/ajdt/dev/aspectj-DEVELOPMENT.jar",
    "Fix released as part of AspectJ 1.2.1"
  ],
  "commentCreationDates": [
    "2004-08-03T12:53:41+02:00",
    "2004-08-03T13:00:10+02:00",
    "2004-08-03T14:24:51+02:00",
    "2004-08-05T11:43:51+02:00",
    "2004-08-06T09:28:14+02:00",
    "2004-10-21T10:31:13+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Could not find instruction:  org.apache.bcel.generic.B2I",
      "elements": [
        {
          "method": "org.apache.bcel.generic.InstructionFactory.createCast",
          "source": "InstructionFactory.java:493"
        },
        {
          "method": "org.aspectj.weaver.bcel.Utility.createConversion",
          "source": "Utility.java:328"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.renderExpr",
          "source": "BcelRenderer.java:75"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.visit",
          "source": "BcelRenderer.java:210"
        },
        {
          "method": "org.aspectj.weaver.ast.Call.accept",
          "source": "Call.java:30"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.recur",
          "source": "BcelRenderer.java:145"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelRenderer.renderTest",
          "source": "BcelRenderer.java:111"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.getTestInstructions",
          "source": "BcelAdvice.java:342"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.getAdviceInstructions",
          "source": "BcelAdvice.java:265"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAfterReturning",
          "source": "BcelShadow.java:1169"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.implementOn",
          "source": "BcelAdvice.java:135"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implementMungers",
          "source": "Shadow.java:430"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:326"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:1153"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:361"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:82"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:726"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:691"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:617"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:565"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:239"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:114"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:376"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:717"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:170"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:100"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:108"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:169"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "71273",
      "date": "2004-08-03T12:53:41+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "71273",
  "bugId": "71273",
  "date": "2004-08-03T12:53:41+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}