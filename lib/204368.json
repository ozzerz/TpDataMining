{
  "comments": [
    "In DTP, a StackOverflowError will happen when determining foreign keys for self-referential MySQL tables.\n\nConsider the following table definition:\n\nCREATE TABLE `recursive`.`tree_node` (\n  `id` INTEGER NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `parent` INTEGER,\n  PRIMARY KEY (`id`),\n  CONSTRAINT `FK_tree_node_parent` FOREIGN KEY `FK_tree_node_parent` (`parent`)\n    REFERENCES `tree_node` (`id`)\n    ON DELETE RESTRICT\n    ON UPDATE RESTRICT\n)\nENGINE \u003d InnoDB;\n\nCreate such a table and set up a connection for it in DTP\u0027s \"Data Source Explorer\", and you will get the error, either directly or as a consequence of \"Decoration Calculation\". Stack trace:\n\n\njava.lang.StackOverflowError\nat java.net.PlainSocketImpl.available(Unknown Source)\nat java.net.SocketInputStream.available(Unknown Source)\nat com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:71)\nat com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:160)\nat com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:188)\nat com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:1910)\nat com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:2304)\nat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2803)\nat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1573)\nat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1665)\nat com.mysql.jdbc.Connection.execSQL(Connection.java:3170)\nat com.mysql.jdbc.Connection.execSQL(Connection.java:3099)\nat com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)\nat com.mysql.jdbc.DatabaseMetaData.extractForeignKeyFromCreateTable(DatabaseMetaData.java:891)\nat com.mysql.jdbc.DatabaseMetaData$5.forEach(DatabaseMetaData.java:2892)\nat com.mysql.jdbc.DatabaseMetaData$IterateBlock.doForAll(DatabaseMetaData.java:76)\nat com.mysql.jdbc.DatabaseMetaData.getImportedKeys(DatabaseMetaData.java:2880)\n[loop starts here]\nat org.eclipse.datatools.enablement.mysql.catalog.MySqlCatalogTable.loadForeignKey(MySqlCatalogTable.java:331)\nat org.eclipse.datatools.enablement.mysql.catalog.MySqlCatalogTable.loadConstraints(MySqlCatalogTable.java:274)\nat org.eclipse.datatools.enablement.mysql.catalog.MySqlCatalogTable.getConstraints(MySqlCatalogTable.java:103)\nat org.eclipse.datatools.modelbase.sql.tables.impl.BaseTableImpl.getPrimaryKey(BaseTableImpl.java:163)\nat org.eclipse.datatools.enablement.mysql.catalog.MySqlCatalogTable.getPrimaryKey(MySqlCatalogTable.java:92)\n[ends here]\nat org.eclipse.datatools.enablement.mysql.catalog.MySqlCatalogTable.loadForeignKey(MySqlCatalogTable.java:354)\nat org.eclipse.datatools.enablement.mysql.catalog.MySqlCatalogTable.loadConstraints(MySqlCatalogTable.java:274)\n[...]\nit didn\u0027t show the base of the stack trace in the .log file, but it appears that the infinite recursion comes from a mutually recursive call between loading all constraints when returning a primary key, and - when loading the foreign keys (part of loading constraints) - checking the primary key of the referenced table.\n\nInterestingly enough, it appears that a downstream project has identified and fixed the problem, but not submitted a fix back (at least not one I could find in CVS): https://bugs.adobe.com/jira/browse/FB-7791\n\nI don\u0027t feel I understand the code well enough to propose a fix, but I\u0027ve checked, and it seems that a simple check for self-referential foreign keys won\u0027t work (since the problem also affects cyclical foreign key references).\n\nThis bug MAY affect other enablers than MySQL, I have not checked.",
    "Brian: Let\u0027s check and see if this is a generic problem or specific to MySQL enablement",
    "I\u0027ll have a chance to look at this Friday."
  ],
  "commentCreationDates": [
    "2007-09-23T02:05:03+02:00",
    "2007-09-25T16:23:51+02:00",
    "2007-09-28T01:02:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "java.net.PlainSocketImpl.available",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.SocketInputStream.available",
          "source": "Unknown Source"
        },
        {
          "method": "com.mysql.jdbc.util.ReadAheadInputStream.fill",
          "source": "ReadAheadInputStream.java:71"
        },
        {
          "method": "com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary",
          "source": "ReadAheadInputStream.java:160"
        },
        {
          "method": "com.mysql.jdbc.util.ReadAheadInputStream.read",
          "source": "ReadAheadInputStream.java:188"
        },
        {
          "method": "com.mysql.jdbc.MysqlIO.readFully",
          "source": "MysqlIO.java:1910"
        },
        {
          "method": "com.mysql.jdbc.MysqlIO.reuseAndReadPacket",
          "source": "MysqlIO.java:2304"
        },
        {
          "method": "com.mysql.jdbc.MysqlIO.checkErrorPacket",
          "source": "MysqlIO.java:2803"
        },
        {
          "method": "com.mysql.jdbc.MysqlIO.sendCommand",
          "source": "MysqlIO.java:1573"
        },
        {
          "method": "com.mysql.jdbc.MysqlIO.sqlQueryDirect",
          "source": "MysqlIO.java:1665"
        },
        {
          "method": "com.mysql.jdbc.Connection.execSQL",
          "source": "Connection.java:3170"
        },
        {
          "method": "com.mysql.jdbc.Connection.execSQL",
          "source": "Connection.java:3099"
        },
        {
          "method": "com.mysql.jdbc.Statement.executeQuery",
          "source": "Statement.java:1169"
        },
        {
          "method": "com.mysql.jdbc.DatabaseMetaData.extractForeignKeyFromCreateTable",
          "source": "DatabaseMetaData.java:891"
        },
        {
          "method": "com.mysql.jdbc.DatabaseMetaData$5.forEach",
          "source": "DatabaseMetaData.java:2892"
        },
        {
          "method": "com.mysql.jdbc.DatabaseMetaData$IterateBlock.doForAll",
          "source": "DatabaseMetaData.java:76"
        },
        {
          "method": "com.mysql.jdbc.DatabaseMetaData.getImportedKeys",
          "source": "DatabaseMetaData.java:2880"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "204368",
      "date": "2007-09-23T02:05:03+02:00",
      "product": "Data Tools",
      "component": "Enablement",
      "severity": "normal"
    }
  ],
  "groupId": "204368",
  "bugId": "204368",
  "date": "2007-09-23T02:05:03+02:00",
  "product": "Data Tools",
  "component": "Enablement",
  "severity": "normal"
}