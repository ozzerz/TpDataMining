{
  "comments": [
    "Build ID: v200612250600\n\nSteps To Reproduce:\nThis is difficult. Sorry, but the code I\u0027m using is not likely to become open-source in foreseen future. However I\u0027m willing to provide whatever information from the eclipse debugger you need.\n\nMore information:\nWhen using assistant, the following exception is traced:\n\u003ccode\u003e\njava.lang.ClassCastException: org.eclipse.cdt.internal.core.dom.parser.cpp.CPPClassTemplate$CPPClassTemplateDelegate\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPTemplates.createClassSpecialization(CPPTemplates.java:361)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPTemplates.createBinding(CPPTemplates.java:225)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTemplateId.resolveBinding(CPPASTTemplateId.java:77)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.getBaseType(CPPVisitor.java:1587)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createType(CPPVisitor.java:1549)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createType(CPPVisitor.java:1540)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPTypedef.getType(CPPTypedef.java:108)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.getContainingScope(CPPVisitor.java:800)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.getLookupScope(CPPSemantics.java:914)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.lookup(CPPSemantics.java:994)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding(CPPSemantics.java:613)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding(CPPVisitor.java:168)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.resolveBinding(CPPASTName.java:71)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.resolveBinding(CPPASTQualifiedName.java:45)\n\tat org.eclipse.cdt.internal.ui.editor.SemanticToken.getBinding(SemanticToken.java:47)\n\tat org.eclipse.cdt.internal.ui.editor.SemanticHighlightings$ClassHighlighting.consumes(SemanticHighlightings.java:1300)\n\tat org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler$PositionCollector.visitNode(SemanticHighlightingReconciler.java:139)\n\tat org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler$PositionCollector.visit(SemanticHighlightingReconciler.java:122)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.accept(CPPASTQualifiedName.java:170)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTNamedTypeSpecifier.accept(CPPASTNamedTypeSpecifier.java:62)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTSimpleDeclaration.accept(CPPASTSimpleDeclaration.java:71)\n\tat org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTranslationUnit.accept(CPPASTTranslationUnit.java:556)\n\tat org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler.reconcilePositions(SemanticHighlightingReconciler.java:352)\n\tat org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler.reconciled(SemanticHighlightingReconciler.java:308)\n\tat org.eclipse.cdt.internal.ui.editor.CEditor.reconciled(CEditor.java:3046)\n\tat org.eclipse.cdt.internal.ui.editor.CEditor.reconciled(CEditor.java:2975)\n\tat org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.reconcile(CReconcilingStrategy.java:159)\n\tat org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.initialReconcile(CReconcilingStrategy.java:168)\n\tat org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:103)\n\tat org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:170)\n\u003c/code\u003e\nApparently I there is something wrong with the template declaration/definition/specialization sequence parsing/interpretation.\nThe patch attached helps the problem at least in a way that the content assistant start to work. It is not a bug fix, but rather a hot fix that is recommended before the actual fix become available.",
    "Created an attachment (id\u003d56206)\nGeneric patch to block the problem until it is actually resolved.\n\nIt is not a real bug fix. But it makes the auto-complete feature work, except it does not show correct types for some items.\nWithout a patch the feature does not work.",
    "I can do something for this.  The delegate must implement a addPartialSpecialization to correspond to the one in CPPClassTemplate.  Probably means another one of those ICPPInternal* interfaces.\n\nWe seem to be dealing with variable whose type is a partial specialization of a class template that was introduced with a using declaration.\n\nIf this is not the case then there is something bigger going wrong somewhere and I would need a code snippet that reproduces it.",
    "If you manage to drop a patch I\u0027ll test it. So far it sounds that you might be correct.\nI\u0027ve tried to isolate the problem by dropping some headers, but the CPP output is still pretty large. \n\nIf the patch would not help, I\u0027ll make a preprocessor output and try to cut it down to reproduce the problem. Would take some time though.",
    "I have released some changes to HEAD if you want to try it.\nThe changes handle adding partial specializations for class templates introduced via a using declaration.\nAs well as partial specializations of specializations of nested class templates. ",
    "There are two news: good and bad.\n\nThe good news:\nContent assist now works fine without patch.\n\nThe bad news:\nIt does not recognise the variable type (no operators seen).\n\nHow shall we proceed? We can leave this one opened and I\u0027ll start figuring out how to create the source I can submit.\nOr we can close this one (no exception is thrown after all) and create a new one...",
    "I mark this as a resolved as I have managed to track down the new problem and reported it as #169628\n",
    "Setting to milestone 4.0 so we can generate a report of all bugs fixed in 4.0."
  ],
  "commentCreationDates": [
    "2006-12-27T19:33:59+01:00",
    "2006-12-27T19:38:46+01:00",
    "2007-01-03T19:12:13+01:00",
    "2007-01-03T21:31:26+01:00",
    "2007-01-03T23:12:24+01:00",
    "2007-01-04T23:15:30+01:00",
    "2007-01-05T00:43:33+01:00",
    "2007-05-14T02:34:44+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPClassTemplate$CPPClassTemplateDelegate",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPTemplates.createClassSpecialization",
          "source": "CPPTemplates.java:361"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPTemplates.createBinding",
          "source": "CPPTemplates.java:225"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTemplateId.resolveBinding",
          "source": "CPPASTTemplateId.java:77"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.getBaseType",
          "source": "CPPVisitor.java:1587"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createType",
          "source": "CPPVisitor.java:1549"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createType",
          "source": "CPPVisitor.java:1540"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPTypedef.getType",
          "source": "CPPTypedef.java:108"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.getContainingScope",
          "source": "CPPVisitor.java:800"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.getLookupScope",
          "source": "CPPSemantics.java:914"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.lookup",
          "source": "CPPSemantics.java:994"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPSemantics.resolveBinding",
          "source": "CPPSemantics.java:613"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPVisitor.createBinding",
          "source": "CPPVisitor.java:168"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTName.resolveBinding",
          "source": "CPPASTName.java:71"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.resolveBinding",
          "source": "CPPASTQualifiedName.java:45"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.SemanticToken.getBinding",
          "source": "SemanticToken.java:47"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.SemanticHighlightings$ClassHighlighting.consumes",
          "source": "SemanticHighlightings.java:1300"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler$PositionCollector.visitNode",
          "source": "SemanticHighlightingReconciler.java:139"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler$PositionCollector.visit",
          "source": "SemanticHighlightingReconciler.java:122"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTQualifiedName.accept",
          "source": "CPPASTQualifiedName.java:170"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTNamedTypeSpecifier.accept",
          "source": "CPPASTNamedTypeSpecifier.java:62"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTSimpleDeclaration.accept",
          "source": "CPPASTSimpleDeclaration.java:71"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTTranslationUnit.accept",
          "source": "CPPASTTranslationUnit.java:556"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler.reconcilePositions",
          "source": "SemanticHighlightingReconciler.java:352"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.SemanticHighlightingReconciler.reconciled",
          "source": "SemanticHighlightingReconciler.java:308"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.CEditor.reconciled",
          "source": "CEditor.java:3046"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.editor.CEditor.reconciled",
          "source": "CEditor.java:2975"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.reconcile",
          "source": "CReconcilingStrategy.java:159"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.initialReconcile",
          "source": "CReconcilingStrategy.java:168"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess",
          "source": "MonoReconciler.java:103"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run",
          "source": "AbstractReconciler.java:170"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "169134",
      "date": "2006-12-27T19:33:59+01:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "normal"
    }
  ],
  "groupId": "169134",
  "bugId": "169134",
  "date": "2006-12-27T19:33:59+01:00",
  "product": "CDT",
  "component": "CDT-parser",
  "severity": "normal"
}