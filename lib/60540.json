{
  "comments": [
    "I20040428 + ZRH plugin-export from 20040428\n\nIt seems that a concurrent access to the private map occurred. This is only\npossible if the lock object was changed while an access was already going on.\n\nWe should probably synchronize setLockObject() with the current lock object as\nwell to ensure all operations have terminated before changing the lock.\n\njava.util.NoSuchElementException\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.util.HashMap$HashIterator.nextEntry(HashMap.java)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java)\n\tat java.util.AbstractCollection.toArray(AbstractCollection.java)\n\tat java.util.ArrayList.\u003cinit\u003e(ArrayList.java)\n\tat org.eclipse.jface.text.source.AnnotationMap.keySetIterator(AnnotationMap.java)\n\tat\norg.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java)\n\tat\norg.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java)\n\tat\norg.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java)\n\tat\norg.eclipse.jface.text.source.OverviewRuler$FilterIterator.\u003cinit\u003e(OverviewRuler.java)\n\tat\norg.eclipse.jface.text.source.OverviewRuler$FilterIterator.\u003cinit\u003e(OverviewRuler.java)\n\tat org.eclipse.jface.text.source.OverviewRuler.doPaint1(OverviewRuler.java)\n\tat\norg.eclipse.jface.text.source.OverviewRuler.doubleBufferPaint(OverviewRuler.java)\n\tat org.eclipse.jface.text.source.OverviewRuler.redraw(OverviewRuler.java:653)\n\tat org.eclipse.jface.text.source.OverviewRuler.access$1(OverviewRuler.java:650)\n\tat\norg.eclipse.jface.text.source.OverviewRuler$InternalListener.textChanged(OverviewRuler.java:77)\n\tat org.eclipse.jface.text.TextViewer.updateTextListeners(TextViewer.java)\n\tat\norg.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged(TextViewer.java:302)\n\tat\norg.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:673)\n\tat\norg.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:638)\n\tat\norg.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:623)\n\tat\norg.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:698)\n\tat\norg.eclipse.jface.text.projection.ProjectionDocument.internalAddMasterDocumentRange(ProjectionDocument.java:294)\n\tat\norg.eclipse.jface.text.projection.ProjectionDocument.addMasterDocumentRange(ProjectionDocument.java:435)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.addMasterDocumentRange(ProjectionViewer.java:461)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.expand(ProjectionViewer.java)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.processModifications(ProjectionViewer.java:849)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.catchupWithProjectionAnnotationModel(ProjectionViewer.java:734)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.processCatchupRequest(ProjectionViewer.java:655)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer$AnnotationModelListener.processModelChanged(ProjectionViewer.java:107)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer$AnnotationModelListener.modelChanged(ProjectionViewer.java:99)\n\tat\norg.eclipse.jface.text.source.AnnotationModel.fireModelChanged(AnnotationModel.java)\n\tat\norg.eclipse.jface.text.source.AnnotationModel$InternalModelListener.modelChanged(AnnotationModel.java:55)\n\tat\norg.eclipse.jface.text.source.AnnotationModel.fireModelChanged(AnnotationModel.java)\n\tat\norg.eclipse.jface.text.source.AnnotationModel.fireModelChanged(AnnotationModel.java:360)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionAnnotationModel.expandAll(ProjectionAnnotationModel.java:123)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionAnnotationModel.expandAll(ProjectionAnnotationModel.java:92)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.expandAll(ProjectionViewer.java:398)\n\tat\norg.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1016)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:148)\n\tat\norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:197)\n\tat\norg.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:122)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java)\n\tat org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:120)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:881)\n\tat org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:123)\n\tat org.eclipse.ui.internal.commands.Command.execute(Command.java:127)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:468)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:886)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:927)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:545)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:493)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:258)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)\n\tat org.eclipse.swt.widgets.Display.filterEvent(Display.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:2250)\n\tat org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1762)\n\tat org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:441)\n\tat org.eclipse.swt.widgets.Widget.windowProc(Widget.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)\n\tat org.eclipse.swt.widgets.Display.eventProc(Display.java)\n\tat org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1353)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1324)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:240)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:240)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)\n\tat java.lang.reflect.Method.invoke(Method.java:386)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:269)\n\tat org.eclipse.core.launcher.Main.run(Main.java:700)\n\tat org.eclipse.core.launcher.Main.main(Main.java:684)",
    "Do you have steps to reproduce?\n",
    "no.",
    "Removing target milestone, no further action for 3.0.",
    "*** Bug 94021 has been marked as a duplicate of this bug. ***",
    "Resetting priority to P3. Will be reassessed for the next release.",
    "So what is the status of this bug? It seems it has been forgotten.\n\nWe are hitting similar problem quite often. The problem is the same, only the symptoms are different: an infinite cycle is formed in the underlying HashMap which leads to effective deadlock of the UI thread which is bad.\n\nThe proposed solution by synchronizing on the current lock object seems reasonable. However it doesn\u0027t guarantee proper access to the HashMap. There is a small interval between the lock object retrieval and actually locking its monitor.\n\nThe solution I suggest is that access to the underlying map is synchronized on both the lock object and internal lock object. This way it is guaranteed that the access to the HashMap is always synchronized on the same object and concurrent access cannot happen.\n\nWith whatever solution you come up with, I think it is important to guarantee synchronized access to the map, because it is hard to find what is causing particular problem and the problems have very random character.\n\n",
    "Created an attachment (id\u003d79801)\nProposal fix\n\nI attach a patch. The internal lock object is used for synchronizing, but it can be any object, as long as the used object is never replaced.",
    "\u003eWe are hitting similar problem quite often.\nGood. What are the steps to reproduce?",
    "There are no steps. The problem is that it happens randomly. I will instrument the AnnotationMap and try to catch the situation when the lock object is set while we are accessing the HashMap, but I don\u0027t know whether it will work.\n\nDo you think that the problem is somewhere else, and this bug and proposals tries only to hide the symptoms and not to solve the real bug?\n\n",
    "\u003eDo you think that the problem is somewhere else, and this bug and proposals\n\u003etries only to hide the symptoms and not to solve the real bug?\nYes, that might be. It\u0027s like with NPEs: we don\u0027t add the null check until we understand why it happens."
  ],
  "commentCreationDates": [
    "2004-04-30T10:47:32+02:00",
    "2004-04-30T13:05:29+02:00",
    "2004-04-30T14:24:04+02:00",
    "2004-06-25T17:03:04+02:00",
    "2005-05-11T11:56:22+02:00",
    "2005-06-16T12:23:13+02:00",
    "2007-10-05T14:16:00+02:00",
    "2007-10-05T14:40:52+02:00",
    "2007-10-05T15:02:57+02:00",
    "2007-10-05T16:04:25+02:00",
    "2007-10-05T16:15:18+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.NoSuchElementException",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.util.HashMap$HashIterator.nextEntry",
          "source": "HashMap.java"
        },
        {
          "method": "java.util.HashMap$KeyIterator.next",
          "source": "HashMap.java"
        },
        {
          "method": "java.util.AbstractCollection.toArray",
          "source": "AbstractCollection.java"
        },
        {
          "method": "java.util.ArrayList.\u003cinit\u003e",
          "source": "ArrayList.java"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationMap.keySetIterator",
          "source": "AnnotationMap.java"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator",
          "source": "AnnotationModel.java"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator",
          "source": "AnnotationModel.java"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator",
          "source": "AnnotationModel.java"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.\u003cinit\u003e",
          "source": "OverviewRuler.java"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler$FilterIterator.\u003cinit\u003e",
          "source": "OverviewRuler.java"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler.doPaint1",
          "source": "OverviewRuler.java"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler.doubleBufferPaint",
          "source": "OverviewRuler.java"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler.redraw",
          "source": "OverviewRuler.java:653"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler.access$1",
          "source": "OverviewRuler.java:650"
        },
        {
          "method": "org.eclipse.jface.text.source.OverviewRuler$InternalListener.textChanged",
          "source": "OverviewRuler.java:77"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.updateTextListeners",
          "source": "TextViewer.java"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged",
          "source": "TextViewer.java:302"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2",
          "source": "AbstractDocument.java:673"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged",
          "source": "AbstractDocument.java:638"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged",
          "source": "AbstractDocument.java:623"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.fireDocumentChanged",
          "source": "AbstractDocument.java:698"
        },
        {
          "method": "org.eclipse.jface.text.projection.ProjectionDocument.internalAddMasterDocumentRange",
          "source": "ProjectionDocument.java:294"
        },
        {
          "method": "org.eclipse.jface.text.projection.ProjectionDocument.addMasterDocumentRange",
          "source": "ProjectionDocument.java:435"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.addMasterDocumentRange",
          "source": "ProjectionViewer.java:461"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.expand",
          "source": "ProjectionViewer.java"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.processModifications",
          "source": "ProjectionViewer.java:849"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.catchupWithProjectionAnnotationModel",
          "source": "ProjectionViewer.java:734"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.processCatchupRequest",
          "source": "ProjectionViewer.java:655"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer$AnnotationModelListener.processModelChanged",
          "source": "ProjectionViewer.java:107"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer$AnnotationModelListener.modelChanged",
          "source": "ProjectionViewer.java:99"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel.fireModelChanged",
          "source": "AnnotationModel.java"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel$InternalModelListener.modelChanged",
          "source": "AnnotationModel.java:55"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel.fireModelChanged",
          "source": "AnnotationModel.java"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationModel.fireModelChanged",
          "source": "AnnotationModel.java:360"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionAnnotationModel.expandAll",
          "source": "ProjectionAnnotationModel.java:123"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionAnnotationModel.expandAll",
          "source": "ProjectionAnnotationModel.java:92"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.expandAll",
          "source": "ProjectionViewer.java:398"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation",
          "source": "ProjectionViewer.java:1016"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation",
          "source": "JavaSourceViewer.java:148"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation",
          "source": "CompilationUnitEditor.java:197"
        },
        {
          "method": "org.eclipse.ui.texteditor.TextOperationAction$1.run",
          "source": "TextOperationAction.java:122"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java"
        },
        {
          "method": "org.eclipse.ui.texteditor.TextOperationAction.run",
          "source": "TextOperationAction.java:120"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:881"
        },
        {
          "method": "org.eclipse.ui.commands.ActionHandler.execute",
          "source": "ActionHandler.java:123"
        },
        {
          "method": "org.eclipse.ui.internal.commands.Command.execute",
          "source": "Command.java:127"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:468"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:886"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:927"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:545"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2",
          "source": "WorkbenchKeyboard.java:493"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent",
          "source": "WorkbenchKeyboard.java:258"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.sendKeyEvent",
          "source": "Control.java:2250"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.gtk_key_press_event",
          "source": "Control.java:1762"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.gtk_key_press_event",
          "source": "Composite.java:441"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.windowProc",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_do_event",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.eventProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_iteration",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1324"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:240"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:283"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:240"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:79"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:41"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:386"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:700"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:684"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "60540",
      "date": "2004-04-30T10:47:32+02:00",
      "product": "Platform",
      "component": "Text",
      "severity": "normal"
    }
  ],
  "groupId": "60540",
  "bugId": "60540",
  "date": "2004-04-30T10:47:32+02:00",
  "product": "Platform",
  "component": "Text",
  "severity": "normal"
}