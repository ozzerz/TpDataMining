{
  "comments": [
    "Build 20020411\n\n- set a breakpoint in org.eclipse.core.runtime.Preferences.setToDefault\n- open a Java file in the target\n- breakpoint is hit\n- select: defaultProperties.getProperty(name, null)\n- Ctrl+D\n- got an internal error on:\n\ncom.sun.jdi.ClassNotPreparedException\n\tat org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler\n(MirrorImpl.java(Compiled Code))\n\tat org.eclipse.jdi.internal.ReferenceTypeImpl.interfaces\n(ReferenceTypeImpl.java:275)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.build\nTypeDeclaration(BinaryBasedSourceGenerator.java:188)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.build\nTypeDeclaration(BinaryBasedSourceGenerator.java:247)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.build\nTypeDeclaration(BinaryBasedSourceGenerator.java:120)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.build\nSource(BinaryBasedSourceGenerator.java:56)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.getIns\ntanceSourceMapper(EvaluationSourceGenerator.java:91)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.getSou\nrce(EvaluationSourceGenerator.java:112)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledE\nxpression(ASTEvaluationEngine.java:261)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate\n(ASTEvaluationEngine.java:63)\n\tat org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run\n(EvaluateAction.java:225)\n\tat org.eclipse.jdt.internal.debug.ui.actions.DisplayAction.run\n(DisplayAction.java:122)\n\tat org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run\n(EvaluateAction.java:499)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent\n(PluginAction.java:202)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent\n(WWinPluginAction.java:162)\n\tat \norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:407)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent\n(ActionContributionItem.java(Compiled Code))\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:819)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:777)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:190)\n\tat org.eclipse.core.launcher.Main.run(Main.java:549)\n\tat org.eclipse.core.launcher.Main.main(Main.java:390)",
    "The current source for setDefault is as follows.\nIt may be changing shortly.\n\n\tpublic void setToDefault(String name) {\n\t\tObject oldPropertyValue \u003d properties.remove(name);\n\t\tif (oldPropertyValue \u003d\u003d null) {\n\t\t\t// nothing was explicitly changed\n\t\t\t// so no change\n\t\t\treturn;\n\t\t}\n\t\tdirty \u003d true;\n\t\tString newValue \u003d defaultProperties.getProperty(name, null);\n\t\t// n.b. newValue \u003d\u003d null if there is no default value\n\t\t// can\u0027t determine correct default-default without knowing type\n\t\tif (!oldPropertyValue.equals(newValue)) {\n\t\t\tfirePropertyChangeEvent(name, oldPropertyValue, \nnewValue);\n\t\t}\n\t}\n",
    "The problem here is that when we\u0027re building the source that we use for the\nevaluation, we try to generate the source for all \"loaded\" inner types. However,\njust because a type is loaded (found), that doesn\u0027t mean it\u0027s prepared\n(initialized). The methods ClassType#interfaces() and InterfaceType#interfaces()\nwill throw a ClassNotPreparedException in this case.\n\nAdded code to BinaryBasedSourceGenerator to manage the case where a type is\nloaded but not prepared. If this happens, we simply don\u0027t include the unprepared\ntype in the evaluation source. This means that any references to such an\nunprepared type will result in an error saying that the type was not found.",
    "Please verify.",
    "Fixed, but if I do the evaluation with a traling semi-colon (\";\"), I get \"no \nexplicit return value). If I do the evaluation without the semi-colon, it works.",
    "See comment above",
    "This is the correct behavior.\n\nIf you put statements in conditions, the statements are executed. If you don\u0027t\nsay \"return foo();\" no value will be returned.",
    "Please verify.",
    "Verified original bug, and I understand that our evaluation support has changed \nfor automatically returning a value. Will enter a seperate (deferred bug) for \nthat."
  ],
  "commentCreationDates": [
    "2002-04-12T19:08:40+02:00",
    "2002-04-12T19:09:16+02:00",
    "2002-04-26T17:59:09+02:00",
    "2002-04-26T18:02:30+02:00",
    "2002-04-26T22:38:26+02:00",
    "2002-04-26T22:38:41+02:00",
    "2002-04-26T22:47:54+02:00",
    "2002-04-26T22:50:08+02:00",
    "2002-04-26T22:52:26+02:00"
  ],
  "traces": [
    {
      "exceptionType": "com.sun.jdi.ClassNotPreparedException",
      "elements": [
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler",
          "source": "MirrorImpl.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdi.internal.ReferenceTypeImpl.interfaces",
          "source": "ReferenceTypeImpl.java:275"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.buildTypeDeclaration",
          "source": "BinaryBasedSourceGenerator.java:188"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.buildTypeDeclaration",
          "source": "BinaryBasedSourceGenerator.java:247"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.buildTypeDeclaration",
          "source": "BinaryBasedSourceGenerator.java:120"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator.buildSource",
          "source": "BinaryBasedSourceGenerator.java:56"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.getInstanceSourceMapper",
          "source": "EvaluationSourceGenerator.java:91"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.getSource",
          "source": "EvaluationSourceGenerator.java:112"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledExpression",
          "source": "ASTEvaluationEngine.java:261"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate",
          "source": "ASTEvaluationEngine.java:63"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run",
          "source": "EvaluateAction.java:225"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.DisplayAction.run",
          "source": "DisplayAction.java:122"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction.run",
          "source": "EvaluateAction.java:499"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:202"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.runWithEvent",
          "source": "WWinPluginAction.java:162"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:407"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:819"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:777"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:319"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:190"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:549"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:390"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "13674",
      "date": "2002-04-12T19:08:40+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "13674",
  "bugId": "13674",
  "date": "2002-04-12T19:08:40+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}