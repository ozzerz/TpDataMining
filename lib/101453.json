{
  "comments": [
    "I\u0027m using a Code-Generator Plugin which works fine with Eclipse 3.0 but \nreceive the Exception \"java.lang.UnsupportedOperationException: Operation only \nsupported in JLS2 AST \" when doing the same generation (as works fine with \nEclipse 3.0) with Eclipse 3.1M6:\n\nava.lang.reflect.InvocationTargetException \n\tat \ncom.jcoffee.development.plugins.eclipse.generator.action.Generator.execute\n(Generator.java:491) \n\tat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run\n(WorkspaceModifyOperation.java:98) \n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1714) \n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run\n(WorkspaceModifyOperation.java:110) \n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:113) \nCaused by: org.eclipse.core.runtime.CoreException: \njava.lang.UnsupportedOperationException: Operation only supported in JLS2 AST \n\tat \ncom.jcoffee.development.plugins.eclipse.generator.action.PostCheckOperation.exe\ncutePostCheck(PostCheckOperation.java:132) \n\tat \ncom.jcoffee.development.plugins.eclipse.generator.action.PostCheckOperation.exe\ncute(PostCheckOperation.java:93) \n\tat \ncom.jcoffee.development.plugins.eclipse.generator.action.Generator.finishGenera\ntorRun(Generator.java:1458) \n\tat \ncom.jcoffee.development.plugins.eclipse.generator.action.Generator.execute\n(Generator.java:471) \n\nI\u0027ve found two previous bug-reports related to the same exception, but \nreported against Eclipse 3.0 and marked as RESOLVED since 3.1M1. In my case it \njust looks the other way round - working w/o problems in 3.0 but not in \n3.1M6.",
    "This looks like a problem with the jcoffee plug-in. Please contact the owners of\nthat plug-in.",
    "WE are the owners of the jcoffee plugin. But for us the Exception is pointing \nto an underlying problem of JDT core for the following reason:\n\n- We understand the exception is telling us that an illegal operation happend \nbecause the operation would require JLS2 AST (but it seems it does not \nrecognize to work in an JLS2 AST environment). \n\nBut everything we are aware of in the installation shall support JLS2 AST \n(basically Eclipse 3.1M6 runnung on JDK 1.4.2_08). Any other special \nrequirement in the context of this exception?\n\nExactly the same (identical) code base of the jcoffee plugin with exactly the \nsame state of the application project run absolutely well in my Eclipse 3.0 \ninstallation.\n\nProbably we need some more explanation about the background/reasons of this \nexception.",
    "This is too late for 3.1.\nI will investigate what is going on.",
    "Where can I get a version of jcoffee that could reproduce the problem?\nAlso give me some steps to reproduce, please.\nThanks.",
    "I tried to see where I could download a version of jcoffee, but I didn\u0027t find\nanything.",
    "Sorry, I\u0027m only just back in the office. JCoffee is not public domain. I can \ntry to isolate the problem with a reproducer (the original environment is a \nquite compex project setting) and send you a small eclipse based reproducer \nproject together with the plugin zip (about 7MB) to your email address. But it \nshould NOT be attached to this public accessible bug tracking. Would this be \nok?  \n",
    "yes, this would be fine. I need to understand how you end up in this situation.",
    "Ok - will send you the reproducer soon, is already in progress and I should be \nable to finalize within the next hour or so.\n",
    "I\u0027ve just sent the reproducer to your email address (9 MB) - may take a short \nwhile until it is finally out of our mailserver. Hope my explanations help to \nachieve reproduction of the problem. Don\u0027t hesitate to contact me in case of \nany questions or if the reproducer does not work as intended.\n\nThank you very much fpr your help!",
    "I understood what is wrong.\nThe CompilationUnitSorter API is using a Comparator for ASTNode. The problem is\nthat internally the the tree is using a AST level JLS3.\nBut your comparator is calling methods that should be used only for a JLS2 tree.\nThere is a hole in the API. It doesn\u0027t mention what type of JLS level needs to\nbe supported.\nI cannot simply use JLS2, because some constructs like 1.5 constructs can only\nbe done using JLS3.\nThe best way for now is to convert your comparator to support JLS3 nodes. This\nmeans that Javadoc.getComment() should not be used anymore.\nYou should use the tags() instead.",
    "I see some problems with your proposal to change our implementation from \ngetComment() to tags() for the following reasons/questions:\n\n- Firstly we need to provide backward compatibility to our customers, so the \nGenerator has to run with Eclipse 3.0 and 3.1 (and some of our customers even \nstill use Eclipse 2.1 and expect it still to be supported by our product). I \nassume, that if we would use tags() instead of getComment(), this would not \nwork with Eclipse 2.1 and 3.0, because there is no AST3 support (?).\n\n- The tags() method does probably not provide comment parts outside tags? So \nfrom the naming of the method I fear, it may not provide full access to the \nwhole comment lines as compared to getComment()? The other way round, why can \nthe JLS3 AST not still support getComment() - for backward compatibility this \nseems to me the most appropriate solution - isn\u0027t it? ",
    "You could use the getAST().apiLevel() of the current node to use the appropriate\nmethod in your comparator.\nBecause you still have the getStartPosition() and the getLength() for the\njavadoc, nothing prevents you from getting the source code that corresponds to\nthe comment.\n\nJim, any comment on the getComment() still available in JLS3?",
    "OK, I\u0027ll pass this on to our generator development. Hope there are not too \nmany places in our code where distinction between AST levels is required. In \ngeneral I would have expected that API\u0027s are backward compatible (should we \nnot?) - but in some cases (as we know from our own product development) it may \nbe necessary to drop some legacy burden. But still, in this case I would \nexpect to have a deprecation first and only after a reasonable time to make \nthe final api change. In so far I still would be interested in the question \nwhich you raised to Jim, because in general a getComment() still looks like a \nmeaningful method to me, irrespective of additional features like tags() as \nintroduced by JLS3.\n",
    "Created an attachment (id\u003d24036)\no.e.jdt.core patch for API\n\nWe inadvertently broke compatibility with existing clients with changes made\nearlier in 3.1. We can provide the new functionality, but we need to add a new\nAPI method that allows the client to specify the JLS level. The patch includes\nthe API changes required. ",
    "Created an attachment (id\u003d24037)\npatch to o.e.jdt.ui\n\nPatch to JDT UI to have it use JLS3 sorting exclusively. This is equivalent to\nwhat was implemented before.  \n\nMartin, Could you verify that this would give the desired JDT UI behavior (as\nopposed to using JLS2 or JLS3 based on some existing preference).",
    "reviewed and tested patches. Ok for me to release.",
    "Fixed and released in HEAD.\nRegression test added in\norg.eclipse.jdt.core.tests.model.SortCompilationUnitElementsTests.test028()",
    "jdt.ui patch released \u003e 20050627",
    "Created an attachment (id\u003d24039)\nUpdated patch\n\nThis factorizes the implementation of the old API to call the new one.",
    "Change target milestone.",
    "The patch looks good.",
    "Reopening to fix version (and priority and severity).",
    "Submitted for 3.1 build I20050627-1400.  Thanks Andreas for catching and \nreporting this.",
    "I would like to say thanks to all who participated in the resolution of this \ncase. I followed the recently accelerating high frequence of bugzilla notes on \nthis, which demonstrated the high responsiveness of the eclipse team (which \nI\u0027ve by the way noted from the very beginning since I opened the case) as well \nas your obviously excellent development process and team communication behind. \nI\u0027m quite impressed!\n\nThanks again!\n\nAndreas  ",
    "Test case provided by Andreas now works fine.\nNo more java.lang.UnsupportedOperationException.\nVerified with 20050627-1435",
    "As requested by the \"rules of engagment for the 3.1 release plan\", I can \nacknowledge the verification of the bug fix in my environment, where the \nproblem originally arised: Verified with 20050627-1435 - JCoffee generator \nplugin now successfully running w/o the reported originally \njava.lang.UnsupportedOperationException.  "
  ],
  "commentCreationDates": [
    "2005-06-23T16:30:24+02:00",
    "2005-06-23T16:44:30+02:00",
    "2005-06-23T16:56:22+02:00",
    "2005-06-23T22:22:53+02:00",
    "2005-06-23T22:49:50+02:00",
    "2005-06-24T01:51:55+02:00",
    "2005-06-24T10:07:37+02:00",
    "2005-06-24T13:40:44+02:00",
    "2005-06-24T14:05:19+02:00",
    "2005-06-24T15:05:14+02:00",
    "2005-06-25T03:14:41+02:00",
    "2005-06-26T12:17:37+02:00",
    "2005-06-27T00:41:28+02:00",
    "2005-06-27T10:41:10+02:00",
    "2005-06-27T17:31:08+02:00",
    "2005-06-27T17:34:20+02:00",
    "2005-06-27T18:15:11+02:00",
    "2005-06-27T18:24:38+02:00",
    "2005-06-27T18:27:54+02:00",
    "2005-06-27T18:33:54+02:00",
    "2005-06-27T18:38:56+02:00",
    "2005-06-27T19:05:25+02:00",
    "2005-06-27T19:16:13+02:00",
    "2005-06-27T19:17:58+02:00",
    "2005-06-27T19:30:34+02:00",
    "2005-06-27T21:31:19+02:00",
    "2005-06-28T00:17:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "ava.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "com.jcoffee.development.plugins.eclipse.generator.action.Generator.execute",
          "source": "Generator.java:491"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:98"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1714"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:110"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.UnsupportedOperationException",
        "message": "Operation only supported in JLS2 AST",
        "elements": [
          {
            "method": "com.jcoffee.development.plugins.eclipse.generator.action.PostCheckOperation.executePostCheck",
            "source": "PostCheckOperation.java:132"
          },
          {
            "method": "com.jcoffee.development.plugins.eclipse.generator.action.PostCheckOperation.execute",
            "source": "PostCheckOperation.java:93"
          },
          {
            "method": "com.jcoffee.development.plugins.eclipse.generator.action.Generator.finishGeneratorRun",
            "source": "Generator.java:1458"
          },
          {
            "method": "com.jcoffee.development.plugins.eclipse.generator.action.Generator.execute",
            "source": "Generator.java:471"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "101453",
      "date": "2005-06-23T16:30:24+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "blocker"
    }
  ],
  "groupId": "101453",
  "bugId": "101453",
  "date": "2005-06-23T16:30:24+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "blocker"
}