{
  "comments": [
    "Eclipse 3.2.2 on Vista Enterprise GA fails at startup\nwith the following error in entered in the log file:\n\n!SESSION 2006-11-29 21:07:13.180 -----------------------------------------------\neclipse.buildId\u003dM20061122-0800\njava.fullversion\u003dJ2RE 1.4.2 IBM Windows 32 build cn142-20060421 (SR5) (JIT enabled: jitc)\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.osgi 4 0 2006-11-29 21:07:33.356\n!MESSAGE Application error\n!STACK 1\njava.lang.UnsatisfiedLinkError: Can\u0027t find library swt-win32-3235  (swt-win32-3235.dll) in sun.boot.library.path or java.library.path\nsun.boot.library.path\u003dC:\\Program Files\\IBM\\Rational\\ClearCase701\\CCRC\\jre\\bin\njava.library.path\u003dC:\\Program Files\\IBM\\Rational\\ClearCase701\\CCRC\\jre\\bin;.;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Program Files\\IBM\\Rational\\ClearCase701\\CCRC\\plugins\n\tat java.lang.ClassLoader.loadLibrary(ClassLoader.java:2044)\n\tat java.lang.Runtime.loadLibrary0(Runtime.java:824)\n\tat java.lang.System.loadLibrary(System.java:910)\n\tat org.eclipse.swt.internal.Library.loadLibrary(Library.java:123)\n\tat org.eclipse.swt.internal.win32.OS.\u003cclinit\u003e(OS.java:18)\n\tat org.eclipse.swt.widgets.Display.\u003cclinit\u003e(Display.java:125)\n\tat org.eclipse.ui.internal.Workbench.createDisplay(Workbench.java:436)\n\tat org.eclipse.ui.PlatformUI.createDisplay(PlatformUI.java:161)\n\tat com.ibm.rational.clearcase.standalone.plugin.StandaloneApplication.run(StandaloneApplication.java:44)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\nI found similar problems referenced on the web; http://www.eclipse.org/swt/faq.php#missingdll,\nhowever, this seems somewhat different.\nFrom the error, it\u0027s clear that the file swt-win32-3235.dll isn\u0027t found.  If I extract that single dll from the jar file\nit is contained in and place the dll in the \".\\\" directory containing the ccrc.exe application, things work fine.\n\nThe jar file containing the swt-win32-3235.dll is in the plugins directory and should have be loaded at startup.\nI shouldn\u0027t have needed to copy the dll directly to the path. Clearly other dlls are getting loaded\nwithout having to extract them and put them into the path, and the plugins directory is in the library path.\n\nAnother item is that this problem only shows up on Vista GA and we haven\u0027t been able to reproduce this\non other versions of Vista nor on Windows XP.",
    "CC\u0027in Felipe as he may have seen that on Vista.",
    "It looks like you were using the Nov 22nd 3.2.2 build.  Could you try this on the latest. Others have been running later builds successfully on Vista.\n\nIf this really is still a problem we will need to look at it for 3.2.2.\n",
    "Andrew, can you verify that the framework successfully extracted the swt-win32-3235.dll library to the configuration are.  There should be an org.eclipse.osgi/bundles directory under your configuration directory.  The default location of the configuration directory is the eclipse install directory (i.e. where eclipse.exe is located).  Please search that directory to see if the swt-win32-3235.dll exists on disk.  Thanks.",
    "I am running 3.2.2 from M20070103 on the Vista Enterpise release without this issue",
    "It appears this may have been an issue with the older build you were using.  This works for me on the latest 3.2.2 builds.  Please re-open if you are still seeing issues on the latest 3.2.2 build from M20070103.  Thanks.",
    "It appears that the problem is related to where Eclipse is located.  When the Eclipse directory is on the desktop, things work fine.  When I put the Eclipse directory in the Program Folders directory, I see the failure as noted in the report.\n\nI\u0027m using the 20070103 build and am running as an administrator on the machine.\n\n",
    "Andrew, can you answer questions from comment 3 please?",
    "I think this may have something to do with the permissions of folders under the\nProgram Files directory on Vista.  When I attempted to reproduce this I found\nthat eclipse could not write to the default configuration directory if it was\nunder the Program Files directory.\n\nIt looks like Vista is very particular about writing to the Program Files\ndirectory now.\n",
    "The configuration directory did not contain the dlls and was not expanded when the Eclipse directory was under the Program Files folder.  When Eclipse was run from a directory on the desktop, things worked fine and the configuration directory contained the expanded set of folders.\n\nYes, there seems to be some permission problems when running inside the Program Folders directory.  Creating a new file in the Eclipse directory if it is under the Program Files folder requires confirmation from the user before the action is allowed.  I\u0027m not sure how this confirmation is done programmatically or if this is what is getting in the way of expanding/creating the folders in the configuration directory.",
    "It appears that Vista is redirecting the writes to the Program Files folder into the user\u0027s area.  I found the configuration directory under: \nC:\\Users\\admin\\AppData\\Local\\VirtualStore\\Program Files\\...\\configuration\n\nWould Eclipse be able to check this area if running on Vista within a \"privileged\" directory?",
    "hmmm...  Does the configuration folder under your user directory contain any cached data?  If so then it seems like Vista is redirecting writes but not reads?",
    "Some additional information I found via Google:\n\nVisual Studio 2005 has the same problem on Vista (http://msdn2.microsoft.com/en-us/vstudio/aa972193.aspx).  Apparently you have to run with administrator permissions to avoid the problem.  I don\u0027t think that would be an acceptable work around for many products.\n\nOther links:\nhttp://www.west-wind.com/WebLog/posts/5584.aspx - appears to explain why the dll went where it did.  Does not address the read issue.  Hints at a possible work around involving adjusting permissions on the folder into which eclipse is installed.  This one might be more acceptable.\n\nhttp://technet.microsoft.com/en-us/windowsvista/aa905073.aspx - Some official Microsoft information that I did not have time to wade thought but may be helpful.\n",
    "Apparently, the problem is related to the run level of the application once it is installed and not the privileges of the user running the application.  I was running as administrator.\n\nI\u0027m a bit puzzled why this mechanism of redirecting reads and writes is failing with Eclipse since the configuration directory is getting created correctly in the user space.  The reads should have been redirected to the user space as well and the forrect swt library loaded.  I\u0027m wondering if this is a problem with the JRE somehow performing reads that are not getting redirected.",
    "Another valuable link:\nhttp://blogs.msdn.com/aaron_margosis/archive/2006/06/19/638148.aspx - I particular, note this comment from the blog author to a comment from a reader, \"DLL redirections shouldn\u0027t be a problem -- Vista\u0027s file virtualization is not applied to executables (.exe, .dll, .ocx, etc.).\".  I think this may explain the read problem.  Apparently the creation of any file will be virtualized but it will not run virtualized executables.\n",
    "DLLs are not virtualized.  See appendix F of:\n\nhttp://www.symantec.com/avcenter/reference/Windows_Vista_Security_Model_Analysis.pdf\n\nAnd a simple test:\n\n\t\tFile file \u003d new File(\n\t\t\t\t\"c:\\\\Program Files\\\\test.dll\");\n\t\tFileOutputStream fout \u003d new FileOutputStream(file);\n\t\tfout.write(5);\n\t\tfout.close();\n\t\nFails with:\n\njava.io.FileNotFoundException: c:\\Program Files\\test.dll (Access is denied.)\n\tat java.io.FileOutputStream.open(Native Method)\n\tat java.io.FileOutputStream.\u003cinit\u003e(FileOutputStream.java:205)\n\tat java.io.FileOutputStream.\u003cinit\u003e(FileOutputStream.java:157)\n\tat p1.VistaDLLTest.main(VistaDLLTest.java:26)\n\n\nIf I change \"test.dll\" to \"test.all\" in the above program, it does not fail because it virtualizes the file.\n",
    "The Microsoft guidelines for Vista state (third link in comment #12):\n\nApplications should be installed in the \\Programs files\\ directory. Per-user configuration information should be stored in the \\Users\\(username)\\AppData directory. User data, templates, and application-created files all have proper locations in the \\Users\\(username) subdirectories. Although this was not enforced in the past, since many users would run programs with full administrative privileges, applications that do not place information in the correct location are likely to fail. This is especially true when Virtualization is turned off.\n\nI think our best long term solution is to change the default location of the configuration directory to be under user home dir, at least on Vista.  As a workaround for 3.2.2, there are a number of options:\n\n1) Don\u0027t install Eclipse under Program Files\n2) Run Eclipse as administrator\n3) Run Eclipse as administrator at least once, until all DLLs are extracted. Then you can run as regular user\n4) Use -configuration command line argument to redirect config directory to user home.",
    "John\u0027s analysis is correct.  I confirmed the same exception is occurring in the Framework when it tries to extract a .dll to \"Program Files\".\n\nI tried to use a different extension to extract the .dll (I just appended .test).  This allowed the library to be extracted to a \u003clibrary\u003e.dll.test file but then the VM throws an exception trying to load a dll from a file that does not have a .dll extension.  For 3.2.2 you will need to configure eclipse to use a configuration in a writable (non-virtualized) directory.\n",
    "I\u0027ll write up some words for the readme for 3.2.2.",
    "Running Eclipse as an administrator still showed the same problem since\nthe application still runs with user privileges.\n\nOne workaround might be to modify the default config.ini to include the osgi.configuration.area tag to point to the users\u0027s home area:\n\nosgi.configufation.area\u003d@user.home/configuration  (or something like that...)\n\nI\u0027m a bit concerned about how Eclipse will handle upgrades using the Install/Update manager.  Will this require updates to the Program Files are?\nHow is this handled on UNIX systems when users\u0027 don\u0027t have access to the\ninstallation directory?\n\nAnother option may be to include a manifest file in the installation directory\nto run Eclipse with administrator privileges - this probably isn\u0027t the best\npractice but might be a workaround: http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID\u003d723991\u0026SiteID\u003d1",
    "Vista distinguishes between a user account with administrator privileges, and the Administrator user.  The problem still occurs when running as a user with administrator priveleges, although it does give you the option in this case to run the application as administrator.  If you log into your machine as the Administrator user, the problem does not seem to occur (at least on the machines we tested).\n\nThe difference from the Unix case is that it\u0027s more difficult to detect the situation.  On startup, we do a java.io.File#canWrite test. If the file is not writable, we write configuration data in the user\u0027s home directory instead. On Vista this returns true for all users, because Vista virtualizes writes to \"Program Files\" into a directory in the user\u0027s home directory. Anything written to Program Files is written to a different directory, with the exception of executable files such as DLLs.  I.e., the directory claims to be writable, but writing a DLL fails. We will likely investigate a solution that involves properly detecting this condition (for example by checking if we are on Vista).\n\nWe might be ok for update, since updates will be installed in the virtual directory for the user.  The net result is that only the user who installed the plugin will see it.  This can be viewed as a feature ;)  However, we\u0027ll need to do more testing to verify there are no other issues with install/update on an Eclipse installed under Program Files on Vista.",
    "We\u0027ve been able to work around the problem by modifying the config.ini file\nso that the configuration information is written to the user\u0027s area:\n\n\u003e\n\u003e osgi.configuration.area\u003d@user.home/my_config\n\u003e\n\nDo you see any problems with using this approach for now?",
    "Guess what ... the Mac users have been saying exactly the same thing for ages. Get the configuration area out of the program\u0027s install location and into a (writable) subdirectory of the user\u0027s home directory instead.",
    "(In reply to comment #21)\n\u003e osgi.configuration.area\u003d@user.home/my_config\n\u003e \n\u003e Do you see any problems with using this approach for now?\n\nI\u0027m not on Vista but on XP and I\u0027ve used the above approach for very long time.  The only problem I\u0027ve found is the main installation directory becomes \"locked\" (I see a chain like icon decoration for the main install location in the Manage Product Configuration dialog) even when running with Administrator privileges for the purpose of updating the main installation - I have to commend out temporary the above configuration line.",
    "I\u0027ll echo what Alex said: this is not a platform specific bug. Configuration data should be separated from the application install location, period. All platforms Eclipse runs on support multiple users who may have different preferences, plug-ins, and configurations. Only core files should go into the Applications directory (or whatever that is called on Windows).\n\nEven on Windows, this isn\u0027t just a problem on Vista either. I\u0027ve had trouble using Eclipse for hands-on courses with Windows XP because the lab computers locked the directory where Eclipse was installed. \n\nSomeone with the right privileges please change the hardware and OS fields on this bug to All.",
    "Elliotte, see comment #20 for an explanation of why this particular bug is unique to Vista.",
    "Time to raise the priority for Vista users: most advanced PCs sold today with decent performance for application development (memory, large disk space, fast processor) are shipped with a Vista licence. Having to buy a XP licence jsut to get the standard Eclipse framework (and its regular updates) will be just more money given to Microsoft.\n\nSo define a clear installation framework so that Eclipse can be installed safely on Vista. May be it will be necessary to include a Eclipse installation plugin that will check in its API the security before imporsonating itself to copy some files in its installation directory (notably for the Eclipse software updates, or when a Eclipse plugin needs to extract some JNI implementation DLL in one of its plugin directories.\n\nHaving to nistall Eclipse in a user directory is a bad option: many systems have multiple user accounts, and Eclipse is taking significant space on disk: why couldn\u0027t its installation be shared between users?\n\nCouldn\u0027t it be installed with its plugins/updates directory in the \"All users\" directory (where it will be read-only for regular users privileges, except for the Eclipse installation plugin performing impersonation before chaging the plugin/updates content).\n\nIt this is not possible, then have the Eclipse installation allowing to add read-access privileges to its user installation directory, so that we can only keep one shared copy of the IDE. Remember also that Eclipse must remain manageable on a network: a domain admin may connect to the system to maintain the list of plugins, patches and updates of an Eclipse environment, and the normal developer will not modify this installation but will only work in his own projects.\n\nThe current suggestion of installing Eclipse in normal user space is not very good, also because because Eclipse is quite large, and will consume lots of the normal user quotas (needed for central backup of user spaces: the enterprise backup system may not accept that each developer installs many megabytes in their user space; so admins will have to manually exclude some parts of the installation directory in user spaces). Also, some environments are getting the user environment from the network within a local cache. Eclipse is too large to fit there and so it will take considerable time to load locally from the network.\n\nSo we need LIGHT user environments, not environments with tons of megabytes to administrate for each user on each PC of a LAN.",
    "Time to raise the priority to P1 for Vista users: most advanced PCs sold today with decent performance for application development (memory, large disk space, fast processor) are shipped with a Vista licence. Having to buy a XP licence just to get the standard Eclipse framework (and its regular updates) will be just more money given to Microsoft. Eclipse should not depend on which OS is used but should work on whatever OS users already have.\n\nSo define a clear installation framework so that Eclipse can be installed\nsafely on Vista. May be it will be necessary to include a Eclipse installation\nplugin that will check in its API the security before imporsonating itself to\ncopy some files in its installation directory (notably for the Eclipse software\nupdates, or when a Eclipse plugin needs to extract some JNI implementation DLL\nin one of its plugin directories.\n\nHaving to nistall Eclipse in a user directory is a bad option: many systems\nhave multiple user accounts, and Eclipse is taking significant space on disk:\nwhy couldn\u0027t its installation be shared between users?\n\nCouldn\u0027t it be installed with its plugins/updates directory in the \"All users\"\ndirectory (where it will be read-only for regular users privileges, except for\nthe Eclipse installation plugin performing impersonation before chaging the\nplugin/updates content).\n\nIt this is not possible, then have the Eclipse installation allowing to add\nread-access privileges to its user installation directory, so that we can only\nkeep one shared copy of the IDE. Remember also that Eclipse must remain\nmanageable on a network: a domain admin may connect to the system to maintain\nthe list of plugins, patches and updates of an Eclipse environment, and the\nnormal developer will not modify this installation but will only work in his\nown projects.\n\nThe current suggestion of installing Eclipse in normal user space is not very\ngood, also because because Eclipse is quite large, and will consume lots of the\nnormal user quotas (needed for central backup of user spaces: the enterprise\nbackup system may not accept that each developer installs many megabytes in\ntheir user space; so admins will have to manually exclude some parts of the\ninstallation directory in user spaces). Also, some environments are getting the\nuser environment from the network within a local cache. Eclipse is too large to\nfit there and so it will take considerable time to load locally from the\nnetwork.\n\nSo we need LIGHT user environments, not environments with tons of megabytes to\nadministrate for each user on each PC of a LAN.\n\nAdditionally, may be it\u0027s time to think about developing a security fromework\nfor the deployment of Eclipse and its optional plugins. For now Eclipse\nsecurity is managed only as a whole (very large) object; as time tpasses, the\nwhole Eclipse system provides advanced services that will need to be secured;\nso the security model of Eclipse should be studied again, by allowing various\nscheme of shared/user security schemes, with globbal/network/local\nauthentication schemes.\nVista offers all these options to manage the security features (and privileges)\nfor each kind of object. Java\u0027s core also implement such thing (through secured\nclass loaders actnig as isolation boxes). We will also see more and more\nservices deployed ni a decentralized way, within a network of delocalized peers\nthat can be managed and deployed transparently for scalability of services.\nIn other words, Eclipse lacks such security management framework, including for\nnetwork services (like Eclipse plugin servers).\nFinally, Eclipse should reduce significantly its dependency to JNI\nimplementation components; this really does not ease the deployment on servers\nand it wil be always difficult to manage their security (because the internal\ncode of JNI implementation libraies can\u0027t be checked easily except by digital\nsignatures or MD5/SHA1-like secured hash checksums). Most of the JNI components\nare needed only because Eclipse\u0027s core environment (or the JRE itself) lacks\nsome integration features, but these system integration features are now being\nmigrated regularly and generalized within the JRE, and Eclipse plugins should\nneed them less often, given that the corresponding APIs will be able to use\nstandard general services of the JRE with simpler security management.\nFor this reason, any new security framework in Eclipse should be completely\ncompatible with the existing JRE security mechanisms in J2SE, J2ME ou J2EE\nenvironments. We can do a lot now with the JRE 6 platform because most system\nintegration features are integrated there; plugins just need to use them as\nmuch as possible instead of reimplementing them in their JNI implementation\nlibraries... Let\u0027s come back to 100% Pure Java plugins...\n",
    "Philippe - please be patient, a fix for 3.3 is being investigated. We are aware that asking users to install Eclipse-based applications outside of Program Files on Vista is not an acceptable solution. However, a pervasive new security framework or elimination of plugins using JNI is not in the cards.",
    "Created an attachment (id\u003d60830)\npatch\n\nThis patch does two things\n\n1) When performing the test for canWrite it uses a file with a .dll extension.  This will fail on a virtualized directory on Vista with an IOException.  This will cause the launcher to use a configuration under the user.home.\n\n2) When computing a configuration directory under the user home we currently look for a .eclipseproduct file to determine the product id and version.  This is used to create a \"unique\" configuration directory.  But this can cause problems if you have the same product id installed in more than one location.  The patch adds an additional hash to the configuration directory based upon the install location.\n\nThis works well on my Vista machine.  John A. can you try this out on your Vista installation?\n\nWe have another issue that we need to consider regarding update.  Currently update defaults to installing new bundles into the install area.  I suggest we open a separate bug for that issue if one is not already opened.",
    "Created an attachment (id\u003d61005)\npatch\n\nThis patch uses the canonical path first and falls back to the absolute path of the install dir to compute the hash.  This is needed to handle paths with different cases on windows and linked directories on linux.",
    "Created an attachment (id\u003d61010)\npatch\n\nI just realized that we have the exact same bit of code in LocationManager in org.eclipse.osgi.  This code is used when launching the framework standalone or embedded in another application.  This patch includes fixes to both the launcher and osgi.",
    "Created an attachment (id\u003d61153)\npatch\n\nDisregard the last patch.  It was against the wrong projects.  Here is the correct one.  I\u0027m going to release this for M6.",
    "Release fix for M6.\n\nBug 90630 is being used to track the issues in update.",
    "Verified in I20070320-0010.  Installing in Program Files, and running as non-administrator, the configuration directory was written in the user home directory.  Running as administrator, the old behaviour of writing the configuration directory under the install tree occurred. We may want to consider using user home as the default location for all platforms in a future release, but the goal of this fix was to address the Vista problem without introducing disruptive changes.",
    "Created an attachment (id\u003d81974)\n3.2.x patch\n\nHere is the same fix for the 3.2.x stream.  Notice that the startup.jar contains the fix since we did not have an org.eclipse.equinox.launcher in 3.2.",
    "startup.jar is part of the org.eclipse.platform.launcher feature in the bin directory. org.eclipse.platform.launcher feature is used when building rcp applications and startup.jar should be patched in this feature too. Can we expect a patch for the org.eclipse.platform.feature for 3.2.2?",
    "Bug 209192 released the fix into the 3.2.x stream."
  ],
  "commentCreationDates": [
    "2006-12-18T19:11:45+01:00",
    "2006-12-19T13:42:30+01:00",
    "2007-01-09T15:35:30+01:00",
    "2007-01-09T20:29:30+01:00",
    "2007-01-10T16:28:49+01:00",
    "2007-01-10T16:30:49+01:00",
    "2007-01-10T22:44:24+01:00",
    "2007-01-10T22:53:58+01:00",
    "2007-01-10T23:16:36+01:00",
    "2007-01-11T03:04:03+01:00",
    "2007-01-11T14:51:45+01:00",
    "2007-01-11T15:41:39+01:00",
    "2007-01-11T17:14:31+01:00",
    "2007-01-11T17:21:37+01:00",
    "2007-01-11T18:09:07+01:00",
    "2007-01-11T22:06:35+01:00",
    "2007-01-11T22:11:41+01:00",
    "2007-01-11T23:04:30+01:00",
    "2007-01-12T14:44:21+01:00",
    "2007-01-12T18:02:45+01:00",
    "2007-01-12T21:03:54+01:00",
    "2007-01-19T20:02:22+01:00",
    "2007-02-11T01:41:21+01:00",
    "2007-02-17T14:41:35+01:00",
    "2007-02-22T15:31:25+01:00",
    "2007-02-22T15:40:27+01:00",
    "2007-03-12T18:12:31+01:00",
    "2007-03-12T18:33:09+01:00",
    "2007-03-14T15:15:36+01:00",
    "2007-03-14T18:32:51+01:00",
    "2007-03-15T20:25:37+01:00",
    "2007-03-15T20:54:05+01:00",
    "2007-03-16T20:29:28+01:00",
    "2007-03-16T20:35:26+01:00",
    "2007-03-20T16:26:32+01:00",
    "2007-11-02T16:52:35+01:00",
    "2007-11-28T22:30:17+01:00",
    "2007-11-29T13:47:28+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsatisfiedLinkError",
      "message": "Can\u0027t find library swt-win32-3235  (swt-win32-3235.dll) in sun.boot.library.path or java.library.path sun.boot.library.path\u003dC:\\Program Files\\IBM\\Rational\\ClearCase701\\CCRC\\jre\\bin java.library.path\u003dC:\\Program Files\\IBM\\Rational\\ClearCase701\\CCRC\\jre\\bin;.;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Program Files\\IBM\\Rational\\ClearCase701\\CCRC\\plugins",
      "elements": [
        {
          "method": "java.lang.ClassLoader.loadLibrary",
          "source": "ClassLoader.java:2044"
        },
        {
          "method": "java.lang.Runtime.loadLibrary0",
          "source": "Runtime.java:824"
        },
        {
          "method": "java.lang.System.loadLibrary",
          "source": "System.java:910"
        },
        {
          "method": "org.eclipse.swt.internal.Library.loadLibrary",
          "source": "Library.java:123"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.\u003cclinit\u003e",
          "source": "OS.java:18"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.\u003cclinit\u003e",
          "source": "Display.java:125"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createDisplay",
          "source": "Workbench.java:436"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createDisplay",
          "source": "PlatformUI.java:161"
        },
        {
          "method": "com.ibm.rational.clearcase.standalone.plugin.StandaloneApplication.run",
          "source": "StandaloneApplication.java:44"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "168445",
      "date": "2006-12-18T19:11:45+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "major"
    },
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "c:\\Program Files\\test.dll (Access is denied.)",
      "elements": [
        {
          "method": "java.io.FileOutputStream.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "FileOutputStream.java:205"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "FileOutputStream.java:157"
        },
        {
          "method": "p1.VistaDLLTest.main",
          "source": "VistaDLLTest.java:26"
        }
      ],
      "number": 1,
      "commentIndex": 15,
      "bugId": "168445",
      "date": "2007-01-11T22:06:35+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "major"
    }
  ],
  "groupId": "168445",
  "bugId": "168445",
  "date": "2006-12-18T19:11:45+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "major"
}