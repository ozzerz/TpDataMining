{
  "comments": [
    "SDOUtil.java does not support attribute name including character \u0027.\u0027  in Xpath.\nFor example:\nDataobject mydataObject has a array attribute \"BO.attribute\". I want to get the first Object in the array using:\nSDOUtil.get(mydataObject, \"BO.attribute.0\");\nI get exception: \nException in thread \"main\" java.lang.IllegalArgumentException: Class \u0027BO\u0027 does not have a feature named  \n\u0027BO\u0027\n\tat org.eclipse.emf.ecore.sdo.util.SDOUtil.getEStructuralFeature(SDOUtil.java:115)\n\tat org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.setFeatureName(SDOUtil.java:834)\n\tat org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.process(SDOUtil.java:933)\n\tat org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.init(SDOUtil.java:725)\n\tat org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.create(SDOUtil.java:645)\n\tat org.eclipse.emf.ecore.sdo.util.SDOUtil.get(SDOUtil.java:162)\n\nCould you please help to resolve the problem? \nBy the way, in current SDO implement, are there any \".\" limitation in other classes and any other characters limitation? Thank you very much for your help.",
    "As you can see in numerous code snippets on the SDO 1.0 specification (ftp://www6.software.ibm.com/software/developer/library/j-commonj-sdowmt/Commonj-SDO-Specification-v1.0.pdf, page 22 for example), \u0027.\u0027 has a very specific meaning.  It is used to separate the containment feature and the identifier of the object you need to refer to.  The result you are getting is exactly the expected one.\n\nBtw, a bugzilla is not the proper way to ask questions.  Use the newsgroup or email for that.",
    "*** Bug 169816 has been marked as a duplicate of this bug. ***",
    "I worked for Websphere process server product(short for WPS) in IBM. WPS is using the SDO in EMF.\nI have know that \u0027.\u0027 has a very specific meaning in SDO. But per XML spec, names that contain \".\" are valid. And some other industry standards have such scenario. So if customers are using \u0027.\u0027 in WPS, they will meet problem. Our customers are complaining that.\nMaybe we can have a solution to support \u0027.\u0027. The solution does not effect current SDO function and can support \u0027.\u0027 better.\nHere is the suggestion:\nGiven a property name with \".\" characters like \"foo.0\": \n1. first simply check if there is a feature with the specified name \"foo.0\". \n2. if a feature with that name isn\u0027t found, then find the last \".\" character in the name. \n3. if it is followed by digits, then use the substring from 0 to the \".\" as the feature name, and the number after the dot as an index. \nWith this approach, the only case that still breaks is when there is both an isMany property named \"foo\" and another property named someting like \"foo.0\" in the same type. \nIn such case, we assume that we treat \"foo.0\" as a whole feature name and try to get the feature. If we can not find it, then treat it as first item of isMany property \"foo\".\n\nWhat do you think of the solution?",
    "Again, don\u0027t use bugzilla to ask questions.  You are totally welcome to use the newsgroup or email.  Also, if you look at the \"Severity\" link, the definition of a critical bug is: \"Critical - crashes, loss of data, severe memory leak\".  Clearly this is not the case here.\n\nIt is possible to argue that this would be a feature request (severity \u003d\u003d enhancement), but even then there is usually a brief discussion using one of the channels mentioned above before the feature is actually opened.\n\nFinally, regardless whether the suggestion is good or not, a reference implementation like the one we provide can only implement the concepts and behaviors that are clearly stated in the specification.  Our hands are completely tight here.  SDO is an industry standard and we cannot change things as we see fit.  Anything like you are suggesting would need to be done at the application level or be proposed to be included in the next version of the SDO specification.  \n\nBtw, if you need help implementing such feature in your code, please feel free to discuss it using either the newsgroup or email."
  ],
  "commentCreationDates": [
    "2007-01-08T07:41:44+01:00",
    "2007-01-08T14:10:56+01:00",
    "2007-01-08T14:14:03+01:00",
    "2007-01-09T03:11:21+01:00",
    "2007-01-09T05:29:42+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Class \u0027BO\u0027 does not have a feature named   \u0027BO\u0027",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.sdo.util.SDOUtil.getEStructuralFeature",
          "source": "SDOUtil.java:115"
        },
        {
          "method": "org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.setFeatureName",
          "source": "SDOUtil.java:834"
        },
        {
          "method": "org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.process",
          "source": "SDOUtil.java:933"
        },
        {
          "method": "org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.init",
          "source": "SDOUtil.java:725"
        },
        {
          "method": "org.eclipse.emf.ecore.sdo.util.SDOUtil$Accessor.create",
          "source": "SDOUtil.java:645"
        },
        {
          "method": "org.eclipse.emf.ecore.sdo.util.SDOUtil.get",
          "source": "SDOUtil.java:162"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "169815",
      "date": "2007-01-08T07:41:44+01:00",
      "product": "EMF",
      "component": "SDO",
      "severity": "critical"
    }
  ],
  "groupId": "169815",
  "bugId": "169815",
  "date": "2007-01-08T07:41:44+01:00",
  "product": "EMF",
  "component": "SDO",
  "severity": "critical"
}