{
  "comments": [
    "We are running EMF emf-sdo-xsd-SDK-I200503100800\nWhen I generate a simple gen model with only 4 packages in it, \"sometimes\" \nand very often  I get:\n\n\"Build path contains duplicate entry: \n\u0027C:eclipse/plugins/org.eclipse.emf.codegen_2.1.0/runtime/codegen.jar\u0027 for \nproject .JETEmitters\"\n\n\nHere is the stack trace:\norg.eclipse.emf.codegen.jet.JETException[0]: Java Model Exception: Java \nModel Status [Build path contains duplicate entry: \n\u0027C:eclipse/plugins/org.eclipse.emf.codegen_2.1.0/runtime/codegen.jar\u0027 for \nproject .JETEmitters]\n at \norg.eclipse.jdt.internal.core.JavaModelOperation.runOperation\n(JavaModelOperation.java:757)\n at \norg.eclipse.jdt.internal.core.JavaProject.setRawClasspath\n(JavaProject.java:2739)\n at \norg.eclipse.jdt.internal.core.JavaProject.setRawClasspath\n(JavaProject.java:2762)\n at org.eclipse.emf.codegen.jet.JETEmitter.initialize(JETEmitter.java:391)\n at \norg.eclipse.emf.codegen.ecore.genmodel.impl.GenModelImpl$1.initialize\n(GenModelImpl.java:1168)\n at org.eclipse.emf.codegen.jet.JETEmitter.generate(JETEmitter.java:645)\n at \norg.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate\n(GenBaseImpl.java:405)\n at \norg.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate\n(GenPackageImpl.java:1811)\n\nit is not consistently reproducable. When I create the gen model from \nscratch, most of the time I can generate fine without problems. When I close \nEclipse, and open it up, it starts not to work...\n\nI traced the code in JetEmitters, it seems like, at the end of addVariable \nmethod these two lines are called regardless of whether those variables \npreexist or not:\n\n    IClasspathEntry entry \u003d JavaCore.newVariableEntry(new \nPath(variableName), null, null);\n    getClasspathEntries().add(entry);\n\nTo hack-fix this problem, we made the following change in \nJETEmitter:initialize(IProgressMonitor ..) method:\n....\n      //classpath.addAll(classpathEntries);   \u003c-------- Commented this line \nout, and replaced with the following:\n   for (Iterator i \u003d classpathEntries.iterator() ; i.hasNext() ; ){\n    ce \u003d (IClasspathEntry )i.next();\n    if ( null  !\u003d hm.get(ce.getPath())) continue;\n    hm.put ( ce.getPath() , ce );\n   }\n      classpath.addAll(hm.values());\n...\n\nAfter this fix, I am passed the dublicate entry problem, I ran into this \nother problem:\n\njava.lang.NullPointerException\n at java.util.regex.Matcher.getTextLength(Unknown Source)\n at java.util.regex.Matcher.find(Unknown Source)\n at \norg.eclipse.emf.codegen.jmerge.JPatternDictionary.analyzeCompilationUnit\n(JPatternDictionary.java:71)\n at \norg.eclipse.emf.codegen.jmerge.JPatternDictionary.\u003cinit\u003e\n(JPatternDictionary.java:61)\n at \norg.eclipse.emf.codegen.jmerge.JMerger.setSourceCompilationUnit\n(JMerger.java:127)\n at \norg.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate\n(GenBaseImpl.java:414)\n at \norg.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate\n(GenPackageImpl.java:1811)\n\nI am not sure if this is a side-effect of my fix, seems unrelated... but \nthought I should mention...",
    "\n\n*** This bug has been marked as a duplicate of 88517 ***"
  ],
  "commentCreationDates": [
    "2005-03-18T21:34:55+01:00",
    "2005-03-18T21:45:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.regex.Matcher.getTextLength",
          "source": "Unknown Source"
        },
        {
          "method": "java.util.regex.Matcher.find",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.emf.codegen.jmerge.JPatternDictionary.analyzeCompilationUnit",
          "source": "JPatternDictionary.java:71"
        },
        {
          "method": "org.eclipse.emf.codegen.jmerge.JPatternDictionary.\u003cinit\u003e",
          "source": "JPatternDictionary.java:61"
        },
        {
          "method": "org.eclipse.emf.codegen.jmerge.JMerger.setSourceCompilationUnit",
          "source": "JMerger.java:127"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate",
          "source": "GenBaseImpl.java:414"
        },
        {
          "method": "org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate",
          "source": "GenPackageImpl.java:1811"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "88523",
      "duplicateId": "88517",
      "date": "2005-03-18T21:34:55+01:00",
      "product": "EMF",
      "component": "Tools",
      "severity": "blocker"
    }
  ],
  "groupId": "88517",
  "bugId": "88523",
  "duplicateId": "88517",
  "date": "2005-03-18T21:34:55+01:00",
  "product": "EMF",
  "component": "Tools",
  "severity": "blocker"
}