{
  "comments": [
    "1)the first problem:\npublic aspect SuperAspect\u003cT,S\u003e{\n    ......\n}\nthis SuperAspect can be compiled successfully, but i can not write any of its \nsubaspect :\n\npublic aspect SubAspect extends SuperAspect\u003cString,String\u003e{\n}\nThat means the SubAspect can not be compiled, the message is :\n\nMessage: NullPointerException thrown: null\nStack trace: java.lang.NullPointerException\n\tat \norg.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyC\nycle(ClassScope.java:928)\n\tat \norg.aspectj.org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReferen\nce.internalResolveType(ParameterizedSingleTypeReference.java:145)\n\tat \norg.aspectj.org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReferen\nce.resolveType(ParameterizedSingleTypeReference.java:214)\n......\n\n2)The second problem:\npublic interface TheInterface\u003cT\u003e{\n   ...\n}\npublic class AnotherClass{}\n\nThe problem is: The following code can not be compiled:\npublic aspect SomeAspect{\n    declare parents: AnotherClass implements TheInterface\u003cString\u003e;\n    ...\n}",
    "Bug (1) has already been fixed in CVS.  We have not yet made the fix available\nin a dev build.",
    "target m3",
    "let me take a look at this..",
    "public aspect SubAspect extends SuperAspect\u003cString,String\u003e{}\n\nthis is actually illegal because you can only sub-type an abstract aspect - and\nyou should get an error message.  However, if you do make SuperAspect abstract\nthen it will still fail to compile due to us attempting to locate the the type\n\u0027SuperAspect\u003cString,String\u003e\u0027 when we should be looking for simply \u0027SuperAspect\u0027.\n This is simple to fix.\n\nI initially hoped the declare parents problem was in our PatternParser code -\nwhich wouldn\u0027t be too tough to fix.  But I think it might be in the up front\nparser which makes it a little messier...",
    "*** Bug 98592 has been marked as a duplicate of this bug. ***",
    "oops, Bug 98592  not a duplicate at all! my bad.",
    "declare parents is now fully operational with parameterized types.\n\nDeclaring generic abstract aspects and extending them is also fixed, in the M3 build use of type variables \nwithin pointcuts, declare statements and itds will lead to errors (mostly UnsupportedOperationExceptions). \nIn M4 this implementation will be completed. Use type variables for methods, fields etc. is fully working."
  ],
  "commentCreationDates": [
    "2005-05-21T14:11:48+02:00",
    "2005-05-21T17:22:01+02:00",
    "2005-05-21T17:22:15+02:00",
    "2005-05-25T19:33:57+02:00",
    "2005-05-25T21:49:04+02:00",
    "2005-06-30T17:06:51+02:00",
    "2005-08-10T17:50:02+02:00",
    "2005-08-19T21:26:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:928"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType",
          "source": "ParameterizedSingleTypeReference.java:145"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType",
          "source": "ParameterizedSingleTypeReference.java:214"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "96220",
      "date": "2005-05-21T14:11:48+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "96220",
  "bugId": "96220",
  "date": "2005-05-21T14:11:48+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}