{
  "comments": [
    "Both JUnit and debugging fails in launching for me, but not consistently. When\nthere is a failure, this is the error log: (more information follows log entry,\nbelow!)\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n!ENTRY org.eclipse.jdt.launching 4 120 Jul 14, 2005 19:24:24.181\n!MESSAGE Cannot connect to VM\n!STACK 0\njava.net.SocketException: socket closed\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.PlainSocketImpl.accept(Unknown Source)\n\tat java.net.ServerSocket.implAccept(Unknown Source)\n\tat java.net.ServerSocket.accept(Unknown Source)\n\tat\norg.eclipse.jdi.internal.connect.SocketTransportImpl.accept(SocketTransportImpl.java:87)\n\tat\norg.eclipse.jdi.internal.connect.SocketListeningConnectorImpl.accept(SocketListeningConnectorImpl.java:124)\n\tat\norg.eclipse.jdt.internal.launching.StandardVMDebugger$ConnectRunnable.run(StandardVMDebugger.java:78)\n\tat java.lang.Thread.run(Unknown Source)\n!SESSION Jul 15, 2005 11:04:51.814 ---------------------------------------------\neclipse.buildId\u003dM200409161125\njava.version\u003d1.5.0_04\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dde_DE\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nI\u0027ve checked the bug lists for similar reports but managed to rule out their\nunderlying causes. What sets \"my\" problem apart is:\n\n* launching succeeds within some projects but not others, so it\u0027s not a TCP/IP\nproblem;\n* launching succeeds even in non-working projects if I am able to sufficiently\nreduce the number of entries in the classpath, so it\u0027s not a \"funny characters\nin project name\" problem;\n* the debugged/tested application seems to be started even in failure cases,\nbecause NETSTAT shows the requested socket to be open and LISTENing;\n* failure doesn\u0027t seem to be tied to specific classpath entries, but more to the\nlength of the classpath.\n\nOther information from investigation:\n\n* I\u0027ve written a small test program to exec() Java programs with long command\nlines and it seems that my XP allows processes to start with about 32K of\ncommand line.\n\n* I\u0027ve re-installed both Eclipse and the JDK. I mostly use 1.4.2_04 but have\ntried 1.4.2_08 with no success. Currently Eclipse is running on 1.5.0_04 but I\ncan\u0027t set that as my JRE because changes in the class lib result in compile\nerrors in my project.\n\n* The default classpath entries for one failing project comprises about 43 jar\nfiles and directories. When I set the classpath explicitly, I have about 12, and\nlaunching succeeds.\n\nI\u0027d be happy to investigate this further on my own, but have no idea how to get\nmore information on the process, such as the launch command line and return\nstatus/message.",
    "If a launch/process actually appears in your debug view when you attempt to \nlaunch, you can see the command line that was used by selecting the process \nand its \"Properties...\" from the context menu in the debug view.",
    "Created an attachment (id\u003d24842)\nJVM launch command\n\nI ran this as a .CMD batch file; it hung for about 10 seconds, then exited with\nerrorlevel 0.",
    "Thanks for the tip! I was indeed able to switch to debug view while the JUnit\nprocess was hanging.\n\nOK, here\u0027s the failing process:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n C:\\j2sdk1.4.2_04\\bin\\javaw.exe -classpath \u003comitted\u003e\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 1878\n-classNames com.lsy.cosma.servercommon.interfaces.ssm.SSMGeneratorTest\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nThe command line starts with a leading blank, but I don\u0027t suppose that\u0027s a problem.\n\nThe classpath contains a boatload of jars, for a total of about 4K characters. I\nsaw nothing strange except that one jar was included twice. I have included the\nwhole thing as an attachment.\n\nThere\u0027s nothing that looks wrong to me. Any more ideas?\n\nThe console response was:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nCould not connect to:  : 1878\t\t\t\njava.net.SocketException: Unrecognized Windows Sockets error: 10106: create\n\tat java.net.Socket.createImpl(Socket.java:331)\n\tat java.net.Socket.\u003cinit\u003e(Socket.java:304)\n\tat java.net.Socket.\u003cinit\u003e(Socket.java:124)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.connect(RemoteTestRunner.java:656)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:297)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:186)\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n...and the process returned 0.\n\nI tried running the command from a DOS shell, but it ran quietly for about 10\nseconds without throwing an exception, then returned errorlevel 0.",
    "Created an attachment (id\u003d24844)\ncomplete javaw command line for launched program\n",
    "See this post for other hints (note the http address is incorrectly split over \ntwo lines in this comment). Have you made any changes to your environment \nvariables?\n\nhttp://forum.java.sun.com/thread.jspa?\nforumID\u003d54\u0026messageID\u003d2459095\u0026threadID\u003d329241",
    "(In reply to comment #5)\n\u003e See this post for other hints.\n\nThanks, but I quickly exhausted all leads found there.\n\n\u003e Have you made any changes to your environment variables?\n\n* SystemRoot is set correctly, never touched it.\n\n* I manually set a JAVA_HOME into the JDK top-level directory. Should JAVA_HOME\nperhaps not be set at all? I believe I have one or two programs or tasks that\nwant it set.\n\n* No other env vars changed that I\u0027m aware of.\n\nToday, I was able to consistently run and even debug JUnit tests if I manually\nreduced the classpath in the run configuration. Something somewhere is\noverflowing. On Monday I\u0027ll test if the problem is influenced by just the\nclasspath or the combined length of (classpath + command line).",
    "Yep, failure to execute the testee/debuggee is definitely linked to command line\nlength. When I specify command arguments that push the size of the command line\nabove 4K, the problem re-manifests for a previously working launch.",
    "Although I thought I\u0027d checked for this, the bug I reported could have had to do\nwith a bad installation of the JDK 1.5 . I\u0027m not aware of what changed, but\nafter some (I thought) unrelated fiddling with my Java environment, I\u0027m no\nlonger seeing the problem. Until and unless I find more information on this bug,\nI\u0027ll assume it was uniquely mine and non-reproduceable for others, and thus not\nan Eclipse bug. Sorry to have taken up time and filespace!",
    "thanks for keeping us up to date!"
  ],
  "commentCreationDates": [
    "2005-07-15T11:40:21+02:00",
    "2005-07-15T16:31:44+02:00",
    "2005-07-15T17:27:07+02:00",
    "2005-07-15T17:33:54+02:00",
    "2005-07-15T17:35:12+02:00",
    "2005-07-15T20:56:43+02:00",
    "2005-07-15T21:31:57+02:00",
    "2005-07-18T11:07:18+02:00",
    "2005-08-19T17:30:58+02:00",
    "2005-08-19T17:35:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.SocketException",
      "message": "socket closed",
      "elements": [
        {
          "method": "java.net.PlainSocketImpl.socketAccept",
          "source": "Native Method"
        },
        {
          "method": "java.net.PlainSocketImpl.accept",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.ServerSocket.implAccept",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.ServerSocket.accept",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdi.internal.connect.SocketTransportImpl.accept",
          "source": "SocketTransportImpl.java:87"
        },
        {
          "method": "org.eclipse.jdi.internal.connect.SocketListeningConnectorImpl.accept",
          "source": "SocketListeningConnectorImpl.java:124"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.StandardVMDebugger$ConnectRunnable.run",
          "source": "StandardVMDebugger.java:78"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "103981",
      "date": "2005-07-15T11:40:21+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "major"
    },
    {
      "exceptionType": "java.net.SocketException",
      "message": "Unrecognized Windows Sockets error: 10106: create",
      "elements": [
        {
          "method": "java.net.Socket.createImpl",
          "source": "Socket.java:331"
        },
        {
          "method": "java.net.Socket.\u003cinit\u003e",
          "source": "Socket.java:304"
        },
        {
          "method": "java.net.Socket.\u003cinit\u003e",
          "source": "Socket.java:124"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.connect",
          "source": "RemoteTestRunner.java:656"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:297"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main",
          "source": "RemoteTestRunner.java:186"
        }
      ],
      "number": 1,
      "commentIndex": 3,
      "bugId": "103981",
      "date": "2005-07-15T17:33:54+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "major"
    }
  ],
  "groupId": "103981",
  "bugId": "103981",
  "date": "2005-07-15T11:40:21+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "major"
}