{
  "comments": [
    "If you create an external tool that creates a lot of output, and do not select \nthe option to log output to the console, the tool will crash with the following \nerror:\nExternalToolsAction.runAntProblem\nReason:\nExternal tool runner internal error\n\nWhen the same tool is run with the output logged to the console, it does not \ncrash.\n\nDue to bug 17381, only Ant scripts can display this behaviour.",
    "Created an attachment (id\u003d1007)\nAnt script to create lots of output\n",
    "I got different behaviour when running a fresh Eclipse. Now, the script runs \nlonger (a couple of minutes), but crashes the JVM. No significant data is \nwritten to the workspace log, and no java core file was created. I have \nattached screenshots of the dialogs below.",
    "Created an attachment (id\u003d1011)\nFirst error dialog encountered\n",
    "Created an attachment (id\u003d1012)\nSecond error dialog encountered\n",
    "Need to determine why this crashes and where.\nWhat happens to the output when it\u0027s not being logged?\n",
    "Sounds like a pipe fills up somewhere and their code doesn\u0027t expect it to. \nCould explicitely send the output to /dev/null (or equivalent) if output is not \nbeing logged and see if this fixes the problem.\n",
    "I\u0027ve got a different error in a self hosting workspace. A dialog saying \ninternal error shows up and here is what I get in the debug console besides \nthe normal script output:\n\n  [antcall] java.lang.StackOverflowError\n  [antcall] \tat org.eclipse.ant.internal.core.ant.InternalAntRunner.run\n(InternalAntRunner.java:277)\n  [antcall] \tat java.lang.reflect.Method.invoke(Native Method)\n  [antcall] \tat org.eclipse.ant.core.AntRunner.run(AntRunner.java:155)\n  [antcall] \tat \norg.eclipse.ui.externaltools.internal.core.AntFileRunner.execute\n(AntFileRunner.java:51)\n  [antcall] \tat \norg.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.executeRunner\n(DefaultRunnerContext.java:214)\n  [antcall] \tat \norg.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.run\n(DefaultRunnerContext.java:264)\n  [antcall] \tat \norg.eclipse.ui.externaltools.internal.ui.AntLaunchWizard$1.run\n(AntLaunchWizard.java:116)\n  [antcall] \tat \norg.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)\n\nBUILD FAILED\n\njava.lang.StackOverflowError\n\tat org.eclipse.ant.internal.core.ant.InternalAntRunner.run\n(InternalAntRunner.java:277)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.ant.core.AntRunner.run(AntRunner.java:155)\n\tat org.eclipse.ui.externaltools.internal.core.AntFileRunner.execute\n(AntFileRunner.java:51)\n\tat \norg.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.executeRunner\n(DefaultRunnerContext.java:214)\n\tat org.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.run\n(DefaultRunnerContext.java:264)\n\tat org.eclipse.ui.externaltools.internal.ui.AntLaunchWizard$1.run\n(AntLaunchWizard.java:116)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)\n",
    "The stack overflow occurs even when showing output to the Log Console. It also \noccurs when not writing to the Log Console but when using a NullBuilder.",
    "I\u0027m going to ignore this until someone points out the connection to SWT.",
    "Change released.  Please verify.",
    "McQ, I cc\u0027ed you on this because this was causing a VM crash.\nWe have not been able to reproduce the VM crash so far.\n",
    "Build: 20020602 (F@ candidate 2)\n\nThe overflow seems to be caused by the recursive nature of the test script, not \nthe amount of output generated by the script. If the tool shows output to the \nconsole, this is pretty obvious. The stack trace shown to the console when the \nstack overflow occurs contains only 6 distinct method calls that repeat until \nthe stack overflows:\n\nat org.apache.tools.ant.Task.perform(Task.java:217)\nat org.apache.tools.ant.Target.execute(Target.java:184)\nat org.apache.tools.ant.Target.performTasks(Target.java:202)\nat org.apache.tools.ant.Project.executeTarget(Project.java:601)\nat org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:266)\nat org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:120)\n\nEach target in the Ant file we are using to test calls the other target, so the \nstack gets continously larger until the overflow occurs.\n\nThe VM crash is still occuring on Adam\u0027s machine. It is happening whether or \nnot the output goes to the Log Console. This is really making me think that \nthis isn\u0027t an External Tools issue. It seems like for some reason Adam\u0027s \nmachine is not handling the stack overflow correctly.",
    "Adam, which VM were you using?",
    "IBM Windows 32 JDK 1.3.1 SR-1 (30 April 2002)",
    "Build: 20020602 (F2)\n\nI have not been able to reproduce this problem on my machine. Closing PR."
  ],
  "commentCreationDates": [
    "2002-05-23T19:19:40+02:00",
    "2002-05-23T19:20:29+02:00",
    "2002-05-23T19:52:51+02:00",
    "2002-05-23T19:56:29+02:00",
    "2002-05-23T19:56:47+02:00",
    "2002-05-28T05:30:20+02:00",
    "2002-05-28T15:59:45+02:00",
    "2002-05-31T05:50:19+02:00",
    "2002-05-31T16:55:11+02:00",
    "2002-05-31T17:36:05+02:00",
    "2002-06-01T06:55:17+02:00",
    "2002-06-01T06:56:47+02:00",
    "2002-06-03T16:54:19+02:00",
    "2002-06-03T19:01:59+02:00",
    "2002-06-03T19:39:55+02:00",
    "2002-06-04T23:27:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.ant.internal.core.ant.InternalAntRunner.run",
          "source": "InternalAntRunner.java:277"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.ant.core.AntRunner.run",
          "source": "AntRunner.java:155"
        },
        {
          "method": "org.eclipse.ui.externaltools.internal.core.AntFileRunner.execute",
          "source": "AntFileRunner.java:51"
        },
        {
          "method": "org.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.executeRunner",
          "source": "DefaultRunnerContext.java:214"
        },
        {
          "method": "org.eclipse.ui.externaltools.internal.core.DefaultRunnerContext.run",
          "source": "DefaultRunnerContext.java:264"
        },
        {
          "method": "org.eclipse.ui.externaltools.internal.ui.AntLaunchWizard$1.run",
          "source": "AntLaunchWizard.java:116"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "17411",
      "date": "2002-05-31T05:50:19+02:00",
      "product": "Platform",
      "component": "Ant",
      "severity": "critical"
    }
  ],
  "groupId": "17411",
  "bugId": "17411",
  "date": "2002-05-23T19:19:40+02:00",
  "product": "Platform",
  "component": "Ant",
  "severity": "critical"
}