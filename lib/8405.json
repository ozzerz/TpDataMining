{
  "comments": [
    "Enter the following class in Eclipse:\n\npackage foo;\npublic class Bar {\n\tprivate int x, y;\t\n}\n\nThe \u0027Delete\u0027 menu item fails to delete fields correctly in various interesting \nways.\n\n#1 - from either the Packages view or the Outline view, select \u0027y\u0027 and \nchoose \u0027Delete\u0027 from the menu.\n\nThe resulting class looks like:\n\npackage foo;\npublic class Bar {\n\n}\n\nBoth fields have been deleted even though I only selected \u0027y\u0027!\n\n#2 - from either the Packages view or the Outline view, select \u0027x\u0027 and \nchoose \u0027Delete\u0027 from the menu.\n\nThe resulting class looks like:\n\npackage foo;\npublic class Bar {\n\ty;\t\n}\n\nThis class isn\u0027t even valid!\n\n#2 - from either the Packages view or the Outline view, select \u0027x\u0027 and \u0027y\u0027 and \nchoose \u0027Delete\u0027 from the menu.\n\nNothing happens.\n\n(Tested against 20011219 build)",
    "This is due to the positions set for the field declarations. This will fix this \none with the new AST story in which a multiple field declaration is split in \nfragments. Then removing a fragment won\u0027t affect the rest of the field \ndeclaration.",
    "We migth investigate a solution based on a parsing of the field declaration in order to extract the \nright sub part.",
    "This problem is due to the fact that the Java UI manipulates ISourceReference  elements and then \ncannot call the right delete method on ISourceManipulation.\nI think the UI should check if the \nselected element can be used as a ISourceManipulation element and then call the right delete \nmethod.\nSee the org.eclipse.jdt.internal.ui.reorg.DeleteAction for implementation \ndetails.\nMove to JDT/UI for comments.",
    "I hacked the UI code and it seems that it is fixing part of the problem. I got a \nweird:\norg.eclipse.jdt.internal.corext.refactoring.Assert$AssertionFailedException: \nassertion failed; \n\tat \norg.eclipse.jdt.internal.corext.refactoring.Assert.isTrue(Assert.java:132)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.Assert.isTrue(Assert.java:117)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldRefactoring.\u003cinit\u003e(RenameFieldRefactoring.java:58)\n\tat \norg.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$8.createRefactoring(RefactoringSupportFactory.java:208)\n\tat \norg.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$RenameSupport.canRename(RefactoringSupportFactory.java:47)\n\tat \norg.eclipse.jdt.internal.ui.reorg.RenameAction.canOperateOn(RenameAction.java:54)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringAction.update(RefactoringAction.java:57)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate.findAction(RefactoringActionDelegate.java:105)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate.handleStructuredSelection(RefactoringActionDelegate.java:55)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate.selectionChanged(RefactoringActionDelegate.java:81)\n\tat \norg.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:170)\n\tat \norg.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:226)\n\tat \norg.eclipse.ui.internal.WWinPluginAction.refreshSelection(WWinPluginAction.java:125)\n\tat \norg.eclipse.ui.internal.WWinPluginAction.refreshActionList(WWinPluginAction.java:65)\n\tat \norg.eclipse.ui.internal.Workbench.refreshPluginActions(Workbench.java:1055)\n\tat \norg.eclipse.ui.plugin.AbstractUIPlugin$1.run(AbstractUIPlugin.java:393)\n\tat \norg.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)\n\tat \norg.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:93)\n\tat \norg.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390)\n\tat \norg.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)\n\tat \norg.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:852)\n\tat \norg.eclipse.ui.internal.Workbench.run(Workbench.java:835)\n\tat \norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:895)\n\tat \norg.eclipse.core.boot.BootLoader.run(BootLoader.java:321)\n\tat \nSlimLauncher.main(SlimLauncher.java:14)\n\nWhen removing the first field (\u0027x\u0027). After a \nwhile I don\u0027t get it anymore. Need to investigate. But the point is that there is a support for \ndeleting multiple field declarations on the DOMField, but to get into this code, the delete(...) \nmethod from ISourceManipulation needs to be used instead of an internal delete on \nISourceReference.\n",
    "we did it this way to use the same code for cut/copy/paste/delete/duplicate \nactions.\n\nwhen i think about using dom to delete fields there are\n2 issues come to my mind:\n\nbug#9381 IPackageDeclaration is not ISourceManipulation \nbug#9382 IField::delete incorrect on multiple field declarations with \ninitializers\n\nwill need to investigate how to solve this well\n",
    "worked around for now by deleting fields diffetently than other \nISourceReferences (bug 9382 is thus exposed)\n\nshould be revisited after 2.0 because copy is incorrect as well\nwe need a cleaner story",
    "*** Bug 18905 has been marked as a duplicate of this bug. ***",
    "reopen to mark as dup",
    "\n\n*** This bug has been marked as a duplicate of 15305 ***"
  ],
  "commentCreationDates": [
    "2002-01-24T18:40:44+01:00",
    "2002-01-25T14:49:55+01:00",
    "2002-01-31T17:02:20+01:00",
    "2002-02-08T16:48:23+01:00",
    "2002-02-08T17:46:58+01:00",
    "2002-02-11T13:03:53+01:00",
    "2002-04-02T18:28:37+02:00",
    "2002-06-03T23:07:33+02:00",
    "2002-09-05T15:20:28+02:00",
    "2002-09-05T15:20:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdt.internal.corext.refactoring.Assert$AssertionFailedException",
      "message": "assertion failed;",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.Assert.isTrue",
          "source": "Assert.java:132"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.Assert.isTrue",
          "source": "Assert.java:117"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldRefactoring.\u003cinit\u003e",
          "source": "RenameFieldRefactoring.java:58"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$8.createRefactoring",
          "source": "RefactoringSupportFactory.java:208"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.reorg.RefactoringSupportFactory$RenameSupport.canRename",
          "source": "RefactoringSupportFactory.java:47"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.reorg.RenameAction.canOperateOn",
          "source": "RenameAction.java:54"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringAction.update",
          "source": "RefactoringAction.java:57"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate.findAction",
          "source": "RefactoringActionDelegate.java:105"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate.handleStructuredSelection",
          "source": "RefactoringActionDelegate.java:55"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActionDelegate.selectionChanged",
          "source": "RefactoringActionDelegate.java:81"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.refreshEnablement",
          "source": "PluginAction.java:170"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.selectionChanged",
          "source": "PluginAction.java:226"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.refreshSelection",
          "source": "WWinPluginAction.java:125"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.refreshActionList",
          "source": "WWinPluginAction.java:65"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.refreshPluginActions",
          "source": "Workbench.java:1055"
        },
        {
          "method": "org.eclipse.ui.plugin.AbstractUIPlugin$1.run",
          "source": "AbstractUIPlugin.java:393"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:29"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:93"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1390"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1208"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:852"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:835"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:895"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:321"
        },
        {
          "method": "SlimLauncher.main",
          "source": "SlimLauncher.java:14"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "8405",
      "duplicateId": "15305",
      "date": "2002-02-08T17:46:58+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "15305",
  "bugId": "8405",
  "duplicateId": "15305",
  "date": "2002-01-24T18:40:44+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}