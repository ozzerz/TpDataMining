{
  "comments": [
    "I20051213-0010, but same in 3.2M3 (no regression due to .java agnosticism)\n\nWhen I create a file p/A.B.java with contents\n\npackage p;\npublic class A { }\n\n... the compiler currently tries to compile it and then errors: \"The public type A must be defined in its own file\". \n\nIMO, such files should not be considered as ICompilationUnits at all. The compiler should not read them and JavaCore.create(IResource) should return null for them (which would be consistent with what currently happens for a folder whose name is not a valid package name part).\n\nCurrently, this causes various issues in UI and Core, e.g.:\n- The quick fix to adapt the type name fails, because \u0027A.B\u0027 is not a valid identifier.\n- The Types view of the Java Browsing perspective fails with the AFE below if it should show such a CU (select CU in Package Explorer, then switch perspective).\n\norg.eclipse.jdt.internal.core.Assert$AssertionFailedException: Assertion failed; The source type has an invalid name: A.B\n\tat org.eclipse.jdt.internal.core.Assert.isTrue(Assert.java:89)\n\tat org.eclipse.jdt.internal.core.SourceType.\u003cinit\u003e(SourceType.java:43)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.getType(CompilationUnit.java:831)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.findPrimaryType(CompilationUnit.java:531)\n\tat org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getTypeForCU(JavaBrowsingPart.java:1276)\n\tat org.eclipse.jdt.internal.ui.browsing.MembersView.findInputForJavaElement(MembersView.java:238)",
    "See bug 44662 for the reason why the validation is not done in JavaCore#create(...). I also think that the cost to do such validation in the Java builder is not worth it.\n\nClients (such as quick fix or Java Browsing perspective) can still protect themselves using JavaConventions.validateCompilationUnitName(String)"
  ],
  "commentCreationDates": [
    "2005-12-13T14:31:33+01:00",
    "2005-12-14T12:39:43+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdt.internal.core.Assert$AssertionFailedException",
      "message": "Assertion failed; The source type has an invalid name: A.B",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.Assert.isTrue",
          "source": "Assert.java:89"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceType.\u003cinit\u003e",
          "source": "SourceType.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.getType",
          "source": "CompilationUnit.java:831"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.findPrimaryType",
          "source": "CompilationUnit.java:531"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getTypeForCU",
          "source": "JavaBrowsingPart.java:1276"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.browsing.MembersView.findInputForJavaElement",
          "source": "MembersView.java:238"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "120570",
      "date": "2005-12-13T14:31:33+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "120570",
  "bugId": "120570",
  "date": "2005-12-13T14:31:33+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}