{
  "comments": [
    "In Declarative Services when resolving a static reference to a service the resolver has a timing hole which can prevent the activation of a service component.  The problem is in the Resolver class of ds.  When resolving a service event the newly satisfied components are queued up for activation before you actually add them to the satisfiedCDPs list.  There is a window of time where the dispatcher thread may check the satisfiedCDPs to see if the component is still satisfied but the component has not been added to the list yet!!  This is check in done in the dispatchWork method.\n\nI will attach a patch which seems to fix the problem.  I would really like this fixed for the next I-Build.",
    "Created an attachment (id\u003d33397)\nPossible fix\n\nThis patch makes sure the satisfiedCDPs list is upto date before queuing the work of enabling service components.\n\nThe arraylists used in the resolver concern me.  We need to make sure access to these types of non-thread safe objects are synchronized.  I see lots of opertunities where an array list can be modified by a synchronous service event while the worker thread is iterating over the list.  This will cause exceptions to be thrown.  Am I missing something that prevents this?",
    "I released the patch for tomarrows I-Build to make progress.  Leaving the bug open to address other synchronization issues.",
    "You are not missing something.  Synchronization / thread safety is a big hole left in DS.  The synchronization in the current codebase is haphazard at best.  I am sure there are many places where we could have problems.  Also I don\u0027t think that simply changing the ArrayLists to synchronized lists is a solution.  There needs to be a comprehensive review of the codebase to figure out where the mutexes need to be.",
    "I\u0027m not sure if I\u0027ve found a place where synchronization is a problem, but it looks like it might be.  Here are some stack traces I am getting:\n\nSEVERE: Bundle com.bea.core.jetty: Error: org.osgi.framework.BundleException: Exception in org.eclipse.equinox.ds.instance.RegisterComponentService$2.ungetService()\norg.osgi.framework.BundleException: Exception in org.eclipse.equinox.ds.instance.RegisterComponentService$2.ungetService()\n\tat org.eclipse.osgi.framework.internal.core.ServiceUse.releaseService(ServiceUse.java:241)\n\tat org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.releaseService(ServiceRegistrationImpl.java:429)\n\tat org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:180)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.close(BundleContextImpl.java:121)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:399)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend(AbstractBundle.java:502)\n\tat org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1067)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:619)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:283)\n\tat org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:256)\n\tat org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:190)\n\tat org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:537)\n\tat org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:171)\n\tat java.lang.Thread.run(Thread.java:595)\nCaused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\tat java.util.ArrayList.RangeCheck(ArrayList.java:546)\n\tat java.util.ArrayList.get(ArrayList.java:321)\n\tat org.eclipse.equinox.ds.instance.RegisterComponentService$2.ungetService(RegisterComponentService.java:146)\n\tat org.eclipse.osgi.framework.internal.core.ServiceUse$3.run(ServiceUse.java:229)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.osgi.framework.internal.core.ServiceUse.releaseService(ServiceUse.java:227)\n\t... 13 more\nINFO: Bundle com.bea.core.jetty STOPPED\nINFO: Service UNREGISTERING: { netio.port\u003d-1, component.factory\u003dcom.bea.core.netio.NetIOFactory, component.name\u003dcom.bea.core.netio.NetIO, component.id\u003d1, objectClass\u003d[Ljava.lang.String;@1ea0252, service.id\u003d26 }\nINFO: Service UNREGISTERING: { netio.port\u003d12345, component.factory\u003dcom.bea.core.netio.NetIOFactory, component.name\u003dcom.bea.core.netio.NetIO, component.id\u003d5, objectClass\u003d[Ljava.lang.String;@3e89c3, service.id\u003d29 }\nINFO: Service UNREGISTERING: { objectClass\u003d[Ljava.lang.String;@1c695a6, service.id\u003d22 }\nINFO: Bundle com.bea.core.netio STOPPED\nINFO: Bundle com.bea.core.logging STOPPED\nINFO: Bundle com.bea.core.dioce STOPPED\nINFO: Service UNREGISTERING: { objectClass\u003d[Ljava.lang.String;@1386918, service.id\u003d24 }\nINFO: Service UNREGISTERING: { work.manager.name\u003dJettyWM, objectClass\u003d[Ljava.lang.String;@7bb290, service.id\u003d28 }\nINFO: Bundle com.bea.core.wm.WorkManager STOPPED\nINFO: Bundle com.bea.core.wm.wlsutils STOPPED\njava.lang.IllegalStateException: BundleContext is no longer valid\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.checkValid(BundleContextImpl.java:1308)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:561)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:667)\n\tat org.eclipse.equinox.ds.instance.InstanceProcess.registerComponentConfigs(InstanceProcess.java:145)\n\tat org.eclipse.equinox.ds.resolver.Resolver.dispatchWork(Resolver.java:701)\n\tat org.eclipse.equinox.ds.workqueue.WorkQueue$Queued.dispatch(WorkQueue.java:57)\n\tat org.eclipse.equinox.ds.workqueue.WorkQueue.run(WorkQueue.java:108)\nSEVERE: Bundle org.eclipse.equinox.ds: Error: java.util.ConcurrentModificationException\njava.util.ConcurrentModificationException\n\tat java.util.AbstractList$Itr.checkForComodification(AbstractList.java:449)\n\tat java.util.AbstractList$Itr.next(AbstractList.java:420)\n\tat org.eclipse.equinox.ds.resolver.Resolver.resolveSatisfied(Resolver.java:588)\n\tat org.eclipse.equinox.ds.resolver.Resolver.resolve(Resolver.java:473)\n\tat org.eclipse.equinox.ds.resolver.Resolver.serviceChanged(Resolver.java:654)\n\tat org.eclipse.osgi.framework.internal.core.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:55)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:1219)\n\tat org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:189)\n\tat org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:141)\n\tat org.eclipse.osgi.framework.internal.core.Framework.publishServiceEventPrivileged(Framework.java:1526)\n\tat org.eclipse.osgi.framework.internal.core.Framework.publishServiceEvent(Framework.java:1501)\n\tat org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.\u003cinit\u003e(ServiceRegistrationImpl.java:103)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.createServiceRegistration(BundleContextImpl.java:649)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:601)\n\tat org.eclipse.equinox.ds.instance.RegisterComponentService.registerService(RegisterComponentService.java:102)\n\tat org.eclipse.equinox.ds.instance.InstanceProcess.registerComponentConfigs(InstanceProcess.java:149)\n\tat org.eclipse.equinox.ds.resolver.Resolver.dispatchWork(Resolver.java:701)\n\tat org.eclipse.equinox.ds.workqueue.WorkQueue$Queued.dispatch(WorkQueue.java:57)\n\tat org.eclipse.equinox.ds.workqueue.WorkQueue.run(WorkQueue.java:108)",
    "Chris, please look into the thread issues in DS.",
    "Is this still a problem with the new Prosyst DS implementation? If not, we should close this one.\n\nWho is in charge of the Prosyst DS work?",
    "Pavlin is the owner if the new DS implementation in the incubator.\n\nThis is a timing bug related to the original implementation of DS in Equinox.  Since the prosyst implementation is a completely different codebase this may no longer be an issue in that codebase.  Pavlin, is the new DS implementation thread safe with respect to synchrounous ServiceEvents being fired from multiple threads?",
    "The ProSyst DS impl does not have any open timing issues against it so far. I would say that it is thread safe. Since the ProSyst\u0027s contributed DS is the Equinox DS implementation now, I change the resolution of the bug to worksforme."
  ],
  "commentCreationDates": [
    "2006-01-20T22:33:06+01:00",
    "2006-01-20T22:39:41+01:00",
    "2006-01-23T22:07:47+01:00",
    "2006-01-24T15:34:43+01:00",
    "2006-03-09T15:54:55+01:00",
    "2006-06-12T21:50:54+02:00",
    "2007-07-12T23:33:47+02:00",
    "2007-07-13T15:33:48+02:00",
    "2007-11-05T21:44:46+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "Exception in org.eclipse.equinox.ds.instance.RegisterComponentService$2.ungetService()",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.ServiceUse.releaseService",
          "source": "ServiceUse.java:241"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.releaseService",
          "source": "ServiceRegistrationImpl.java:429"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.unregister",
          "source": "ServiceRegistrationImpl.java:180"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.close",
          "source": "BundleContextImpl.java:121"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker",
          "source": "BundleHost.java:399"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend",
          "source": "AbstractBundle.java:502"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.suspendBundle",
          "source": "Framework.java:1067"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL",
          "source": "StartLevelManager.java:619"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel",
          "source": "StartLevelManager.java:283"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown",
          "source": "StartLevelManager.java:256"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle.suspend",
          "source": "SystemBundle.java:190"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.shutdown",
          "source": "Framework.java:537"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle$1.run",
          "source": "SystemBundle.java:171"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IndexOutOfBoundsException",
        "message": "Index: 0, Size: 0",
        "elements": [
          {
            "method": "java.util.ArrayList.RangeCheck",
            "source": "ArrayList.java:546"
          },
          {
            "method": "java.util.ArrayList.get",
            "source": "ArrayList.java:321"
          },
          {
            "method": "org.eclipse.equinox.ds.instance.RegisterComponentService$2.ungetService",
            "source": "RegisterComponentService.java:146"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.ServiceUse$3.run",
            "source": "ServiceUse.java:229"
          },
          {
            "method": "java.security.AccessController.doPrivileged",
            "source": "Native Method"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.ServiceUse.releaseService",
            "source": "ServiceUse.java:227"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 4,
      "bugId": "124740",
      "date": "2006-03-09T15:54:55+01:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "BundleContext is no longer valid",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.checkValid",
          "source": "BundleContextImpl.java:1308"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService",
          "source": "BundleContextImpl.java:561"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService",
          "source": "BundleContextImpl.java:667"
        },
        {
          "method": "org.eclipse.equinox.ds.instance.InstanceProcess.registerComponentConfigs",
          "source": "InstanceProcess.java:145"
        },
        {
          "method": "org.eclipse.equinox.ds.resolver.Resolver.dispatchWork",
          "source": "Resolver.java:701"
        },
        {
          "method": "org.eclipse.equinox.ds.workqueue.WorkQueue$Queued.dispatch",
          "source": "WorkQueue.java:57"
        },
        {
          "method": "org.eclipse.equinox.ds.workqueue.WorkQueue.run",
          "source": "WorkQueue.java:108"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "124740",
      "date": "2006-03-09T15:54:55+01:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "normal"
    },
    {
      "exceptionType": "java.util.ConcurrentModificationException",
      "elements": [
        {
          "method": "java.util.AbstractList$Itr.checkForComodification",
          "source": "AbstractList.java:449"
        },
        {
          "method": "java.util.AbstractList$Itr.next",
          "source": "AbstractList.java:420"
        },
        {
          "method": "org.eclipse.equinox.ds.resolver.Resolver.resolveSatisfied",
          "source": "Resolver.java:588"
        },
        {
          "method": "org.eclipse.equinox.ds.resolver.Resolver.resolve",
          "source": "Resolver.java:473"
        },
        {
          "method": "org.eclipse.equinox.ds.resolver.Resolver.serviceChanged",
          "source": "Resolver.java:654"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FilteredServiceListener.serviceChanged",
          "source": "FilteredServiceListener.java:55"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent",
          "source": "BundleContextImpl.java:1219"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent",
          "source": "EventManager.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous",
          "source": "ListenerQueue.java:141"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.publishServiceEventPrivileged",
          "source": "Framework.java:1526"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.publishServiceEvent",
          "source": "Framework.java:1501"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.ServiceRegistrationImpl.\u003cinit\u003e",
          "source": "ServiceRegistrationImpl.java:103"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.createServiceRegistration",
          "source": "BundleContextImpl.java:649"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService",
          "source": "BundleContextImpl.java:601"
        },
        {
          "method": "org.eclipse.equinox.ds.instance.RegisterComponentService.registerService",
          "source": "RegisterComponentService.java:102"
        },
        {
          "method": "org.eclipse.equinox.ds.instance.InstanceProcess.registerComponentConfigs",
          "source": "InstanceProcess.java:149"
        },
        {
          "method": "org.eclipse.equinox.ds.resolver.Resolver.dispatchWork",
          "source": "Resolver.java:701"
        },
        {
          "method": "org.eclipse.equinox.ds.workqueue.WorkQueue$Queued.dispatch",
          "source": "WorkQueue.java:57"
        },
        {
          "method": "org.eclipse.equinox.ds.workqueue.WorkQueue.run",
          "source": "WorkQueue.java:108"
        }
      ],
      "number": 2,
      "commentIndex": 4,
      "bugId": "124740",
      "date": "2006-03-09T15:54:55+01:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "normal"
    }
  ],
  "groupId": "124740",
  "bugId": "124740",
  "date": "2006-01-20T22:33:06+01:00",
  "product": "Equinox",
  "component": "Bundles",
  "severity": "normal"
}