{
  "comments": [
    "Build ID: M20060921-0945\n\nSteps To Reproduce:\n1. Start with any Linux Eclipse 3.2.1 release (any architecture)\n2. Remove the org.eclipse.core.filesystem.\u003cos\u003e.\u003carch\u003e_*.jar file\n3. Run the org.eclipse.jdt.core.tests.model tests.\n\nYou should see 248 failures and 53 errors.\n\n\n\n\nMore information:\nIt is my understanding that the lack of liblocalfile should only be a optimization issue, not one that causes some plugins to work incorrectly.\n\nI ran into this because I recently ran the automated test suite against Eclipse 3.2.1 for PowerPC Linux GTK, and this particular release does not have liblocalfile in it.\n\nIf these failures and errors are expected, that\u0027s ok, but it does seem odd to me, particularly because I didn\u0027t see these failures and erros when I ran the automated tests against the 3.2.0 release some time back.\n\nA typical stack trace for one of the failures looks like this:\n\norg.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.\n\tat org.eclipse.core.internal.resources.Resource.delete(Resource.java:708)\n\tat org.eclipse.core.internal.resources.Project.delete(Project.java:345)\n\tat org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.deleteResource(AbstractJavaModelTests.java:1255)\n\tat org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.deleteProject(AbstractJavaModelTests.java:1205)\n\tat org.eclipse.jdt.core.tests.model.CopyMoveResourcesTests.tearDown(CopyMoveResourcesTests.java:209)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:58)\n\tat org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:24)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\nwith the root cause of the problem of deleting the resource being a \"permission denied\" problem\n\nWith liblocalfile (in the above-mentioned jar file) in place, these tests all pass.",
    "I verified that our tests are not involved in this case...\n\u003d\u003e move to Platform/Resources",
    "Hmm, the problem is likely that if you don\u0027t have natives, then you can make a file read only using java.io.File#setReadOnly(), but there is no way to clear the read only flag.  Therefore, tests that involve making files read only won\u0027t be able to clear up after they finish.\n\nIn 3.1 we changed the behaviour so that we don\u0027t allow you to make a file read only if there is no native available to make it writable again (bug 32396).  This change was lost in 3.2, so I will look into making this change again for 3.3.",
    "Created an attachment (id\u003d55909)\nFix to prevent setting file read only when native is missing\n\nFrederic, can you try the JDT core tests again with this patch? If everything passes I will release this fix.",
    "Created an attachment (id\u003d55915)\nFailures list\n\nThe patch fixes initial problem but has a side effects on behavior of read-only flag for resources; I still got 4 failures while running JDT/Core model test (attached file).\n\nFor example, the first test sets a resource to read-only, tries to modify its contents and expect anresource  exception which does no longer occur with your patch.\n\nDid all resources tests pass with your patch?\n",
    "I generally isolate tests that require native functionality by first ensuring that the native functionality is present.  I did have some failures when I ran my tests today without natives, but I have fixed them up.  Here are some methods you can use to isolate such tests. This will save work in the future as tests are run on new platforms.\n\n/**\n * Returns whether the local file system supports accessing and modifying\n * the given attribute.\n */\nprotected boolean isAttributeSupported(int attribute) {\n\treturn (EFS.getLocalFileSystem().attributes() \u0026 attribute) !\u003d 0;\n}\n\n/**\n * Returns whether the local file system supports accessing and modifying\n * the read only flag.\n */\nprotected boolean isReadOnlySupported() {\n\treturn isAttributeSupported(EFS.ATTRIBUTE_READ_ONLY);\n}\n",
    "Marking fixed, because I have release a patch to core.filesystem to not allow setReadOnly(true) when natives are not present.  There was also a bug in the local file system implementation of FileSystem#attribute() that assumed the read only attribute was always supported. I have fixed this also. If you have further failures with JDT core tests using latest resources from head, I suggest using the approach mentioned above to avoid running those tests on platforms that don\u0027t support it.",
    "Created an attachment (id\u003d55962)\nProposed JDT/Core patch to fix failures\n\n",
    "I\u0027ve opened bug 168671 on JDT/Core to apply the proposed patch..."
  ],
  "commentCreationDates": [
    "2006-12-08T01:52:24+01:00",
    "2006-12-19T09:18:19+01:00",
    "2006-12-19T16:01:25+01:00",
    "2006-12-19T16:40:30+01:00",
    "2006-12-19T18:06:43+01:00",
    "2006-12-19T22:21:31+01:00",
    "2006-12-19T22:23:37+01:00",
    "2006-12-20T12:57:50+01:00",
    "2006-12-20T13:06:28+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Problems encountered while deleting resources.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.delete",
          "source": "Resource.java:708"
        },
        {
          "method": "org.eclipse.core.internal.resources.Project.delete",
          "source": "Project.java:345"
        },
        {
          "method": "org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.deleteResource",
          "source": "AbstractJavaModelTests.java:1255"
        },
        {
          "method": "org.eclipse.jdt.core.tests.model.AbstractJavaModelTests.deleteProject",
          "source": "AbstractJavaModelTests.java:1205"
        },
        {
          "method": "org.eclipse.jdt.core.tests.model.CopyMoveResourcesTests.tearDown",
          "source": "CopyMoveResourcesTests.java:209"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:130"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:118"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run",
          "source": "JUnit3TestReference.java:128"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.TestExecution.run",
          "source": "TestExecution.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:460"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:386"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:58"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run",
          "source": "CoreTestApplication.java:24"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "167196",
      "date": "2006-12-08T01:52:24+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "167196",
  "bugId": "167196",
  "date": "2006-12-08T01:52:24+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}