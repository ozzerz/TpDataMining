{
  "comments": [
    "After bug 142299 has been fixed (thanks!) the very same\nproblem has been newly introduced in class PopupDialog (I\u0027m in 3.3RC3).\n\nOffending initializations are \n   private static final GridDataFactory LAYOUTDATA_GRAB_BOTH \u003d\nGridDataFactory.fillDefaults().grab(true,true);\n\nand\n   private static final GridLayoutFactory POPUP_LAYOUT_FACTORY \u003d\nGridLayoutFactory\n                .fillDefaults().margins(POPUP_MARGINWIDTH, POPUP_MARGINHEIGHT)\n                .spacing(POPUP_HORIZONTALSPACING, POPUP_VERTICALSPACING);\n\nThese have been in introduced in PopupDialog v1.26 in response to bug 156790.\n\nThis causes the following exception:\n  java.lang.IllegalArgumentException: Argument cannot be null\n        at org.eclipse.swt.SWT.error(SWT.java:3547)\n        at org.eclipse.swt.SWT.error(SWT.java:3481)\n        at org.eclipse.swt.SWT.error(SWT.java:3452)\n        at org.eclipse.swt.graphics.GC.\u003cinit\u003e(GC.java:141)\n        at org.eclipse.swt.graphics.GC.\u003cinit\u003e(GC.java:111)\n        at\norg.eclipse.jface.layout.LayoutConstants.initializeConstants(LayoutConstants.java:36)\n        at\norg.eclipse.jface.layout.LayoutConstants.getSpacing(LayoutConstants.java:67)\n        at\norg.eclipse.jface.layout.GridLayoutFactory.fillDefaults(GridLayoutFactory.java:128)\n        at org.eclipse.jface.dialogs.PopupDialog.\u003cclinit\u003e(PopupDialog.java:211)\n\nCould you PLEASE use some kind of lazy initialization for these fields??",
    "Why is it important to be able to load this class in a non-UI thread?  I\u0027m sure we have lots of other classes that can only be loaded on the UI thread.\n\nWould you be interested in contributing a JUnit test for the classes you care about so that we don\u0027t accidentally break this again?\n\nUnfortunately, the earliest opportunity for fixing this is 3.3.1 - we just produced 3.3 RC4 which is supposed to be the last release candidate.",
    "Hi Boris,\nthanks for picking this up.\n\n\u003e Why is it important to be able to load this class in a non-UI thread?\nThe same as in bug 142299: we are weaving aspects into existing classes,\nhere: classes from the jdt.ui. Weaving takes place before the ui is up.\nFYI: meanwhile we have a publication about this technology: \n    http://www.objectteams.org/publications/#TOOLS07b\n\nI scanned through our code and the only problematic classes seem to be\nDialog and PopupDialog. In both cases we actually weave into sub-classes\nof these jface classes (e.g.: JavaOutlineInformationControl).\nI assume that org.eclipse.ui.part.ViewPart is safe in this respect, right?\n\nWhile constructing a minimal test program it appears that my description\nwas not precise: class loading even seems to work, it is the first access\nto a static member that triggers the static initializer. However, I don\u0027t\nthink this is specified in the JLS, or is it?\n\nIn this case, it is not the aspect _weaving_ which causes the trouble, but\nthe aspect _activation_, which is implemented by storing aspect instances\nin static fields of affected base classes. Still this must be performed\nduring application bootstrapping.",
    "Created an attachment (id\u003d70781)\nTest program\n\nMinimal test program showing the exception.",
    "Removing the 3.3.1 target",
    "Removing the 3.3.1 target"
  ],
  "commentCreationDates": [
    "2007-06-10T03:43:03+02:00",
    "2007-06-10T03:49:40+02:00",
    "2007-06-10T12:27:15+02:00",
    "2007-06-10T12:29:36+02:00",
    "2007-08-31T15:42:47+02:00",
    "2007-08-31T15:43:09+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument cannot be null",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3547"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3481"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3452"
        },
        {
          "method": "org.eclipse.swt.graphics.GC.\u003cinit\u003e",
          "source": "GC.java:141"
        },
        {
          "method": "org.eclipse.swt.graphics.GC.\u003cinit\u003e",
          "source": "GC.java:111"
        },
        {
          "method": "org.eclipse.jface.layout.LayoutConstants.initializeConstants",
          "source": "LayoutConstants.java:36"
        },
        {
          "method": "org.eclipse.jface.layout.LayoutConstants.getSpacing",
          "source": "LayoutConstants.java:67"
        },
        {
          "method": "org.eclipse.jface.layout.GridLayoutFactory.fillDefaults",
          "source": "GridLayoutFactory.java:128"
        },
        {
          "method": "org.eclipse.jface.dialogs.PopupDialog.\u003cclinit\u003e",
          "source": "PopupDialog.java:211"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "191834",
      "date": "2007-06-10T03:43:03+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "191834",
  "bugId": "191834",
  "date": "2007-06-10T03:43:03+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}