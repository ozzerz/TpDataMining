{
  "comments": [
    "I recently changed from Eclipse 2.1 to 3.0.\nIn 2.1 I wrote a program which used a SourceViewer in combination with a \nVerticalRuler to show some annotations derived from \norg.eclipse.jface.text.source.Annotation.\nAll worked well in 2.1 but in 3.0 no annotations are shown at all.\nWhile debugging the code I got to the following code in VerticalRuler.doPaint():\n----------------------\nif (r.y \u003c d.y \u0026\u0026 annotationAccessExtension !\u003d null)  // annotation within \nvisible area\n    annotationAccessExtension.paint(annotation, gc, fCanvas, r);\n----------------------\nHowever, the local variable annotationAccessExtension is always null, because \nin 2.1 there was no need to set this, and so no annotations are shown.\n\nIs this a bug or am I doing something wrong?",
    "Please read the migration guide: annotation support has changed. If the problem\npersists after adapting your code then please reopen.",
    "I already read the migration guide and found only a hint under the title\n\"markerAnnotationSpecification extension point (plug-in org.eclipse.ui.editors)\"\nwhere it is suggested to use the DefaultMarkerAnnotationAccess while \nconstructing the VerticalRuler.\nIf one examines the code of VerticalRuler on can see, that the doPaint method \nworks only if an IAnnotationAccessExtension is given as a second constructor \nparameter.\nTherefore, it seems useless for me, that VerticalRuler offers an constructor \nwithout this argument.\n\nBut the main point is, that DefaultMarkerAnnotationAccess works only in an \nplugin environment, as you can see from the following code snippet:\n-----------------------------------\nprotected AnnotationPreferenceLookup getAnnotationPreferenceLookup() {\n    return EditorsPlugin.getDefault().getAnnotationPreferenceLookup();\n}\n-----------------------------------\nWhen, as in my case, VerticalRuler is used in a program, that just uses swt and \njface as a graphical user interface, I get an NullPointerException:\n-----------------------------------\njava.lang.NullPointerException\n\tat \norg.eclipse.ui.texteditor.DefaultMarkerAnnotationAccess.getAnnotationPreferenceL\nookup(DefaultMarkerAnnotationAccess.java:154)\n-----------------------------------\n\nDo I have to write an implementation of IAnnotationAccessExtension to solve \nthis problem?",
    "In case where there\u0027s no annotation access we need to delegate to\nIAnnotationPresentation. This has been fixed in HEAD (builds \u003e N200409300010).\nYour annotations have to inherit from IAnnotationPresentation.\n\nYou can implement and pass in a DefaultAnnotationAccess which implements\nIAnnotationAccess and IAnnotationAccessExtension: getLayer() and paint(...) are\nthe only methods that get called in R3.0 and R3.0.1.",
    "Reopen to target 3.0.2. Will close once it\u0027s fixed in the R3_0_maintenance branch.",
    "Fixed in R3_0_maintenance branch.\nReleased into M20050112-0800.\n",
    "Verified in M20050216-1722 by code inspection:\n\nVerticalRuler has been updated to call methods of IAnnotationPresentation if an\nAnnotation implements this interface."
  ],
  "commentCreationDates": [
    "2004-09-21T13:40:57+02:00",
    "2004-09-23T10:14:49+02:00",
    "2004-09-23T12:55:28+02:00",
    "2004-09-30T18:09:59+02:00",
    "2004-10-01T10:52:50+02:00",
    "2005-01-10T17:34:43+01:00",
    "2005-02-28T16:22:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.texteditor.DefaultMarkerAnnotationAccess.getAnnotationPreferenceLookup",
          "source": "DefaultMarkerAnnotationAccess.java:154"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "74411",
      "date": "2004-09-23T12:55:28+02:00",
      "product": "Platform",
      "component": "Text",
      "severity": "normal"
    }
  ],
  "groupId": "74411",
  "bugId": "74411",
  "date": "2004-09-21T13:40:57+02:00",
  "product": "Platform",
  "component": "Text",
  "severity": "normal"
}