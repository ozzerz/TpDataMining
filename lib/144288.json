{
  "comments": [
    "Adoptor:IBM\nbug found: WTP 1.5 RC4\nfix needed in:  WTP 1.5 RC5\n\nOur headless app does not expand the app client or war modules.\nBut when we use the archive api to update the manifest and save the\narchive we get this exception.  (This is a regression from wtp 102)\n\norg.eclipse.jst.j2ee.commonarchivecore.internal.exception.SaveFailureException:\nIWAE0017E Unable to replace original archive: D:\\EJBDeployX622.03\\itp\\working\\wo\nrkout._\\35c959c3\\EarContent\\WorkAreaFvtClient.jar\n        at org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.clea\nnupAfterTempSave(ArchiveImpl.java:460)\n        at org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.save\nAsNoReopen(ArchiveImpl.java:1320)\n        at org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.save\nNoReopen(ArchiveImpl.java:1344)\n        at com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.processEjbRefere\nnces(BatchExtension.java:2516)\n        at com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.runEarDeploy(Bat\nchExtension.java:430)\n        at com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.access$0(BatchEx\ntension.java:323)\n        at com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension$RunDeploy.run(Ba\ntchExtension.java:306)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737\n)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719\n)",
    "Created an attachment (id\u003d42883)\ntest ear\n\ntest ear",
    "I imported the attached EAR expanding only the EJB module and its client.  I then modified the MANIFEST.MF (using the text editor) and then exported successfully.  Could you paste a snippet of the code you are using to modify the manifest.  If I have that then I could put that in a JUnit to see if I can reproduce.",
    "Here is the code snippet that fails in appClientJar.saveNoReopen();\n-------------------------------------------------------------------\nString modUri \u003d (String)uriIter.next();\n             IFile file \u003d ComponentUtilities.findFile(earComponent, new Path(modUri));\n             ApplicationClientFile appClientJar \u003d CommonarchiveFactoryImpl.getActiveFactory().openApplicationClientFile(file.getLocation().toOSString());\n             ArchiveManifest manf \u003d appClientJar.getManifest();\n             List values \u003d (List)appClientUriMap.get(modUri);\n             String existingEntries[] \u003d manf.getClassPathTokenized();\n             for(int i\u003d0; i \u003c values.size(); i++){\n                 String newVal \u003d (String)values.get(i);\n                 if (!doesClasspathEntryExists(existingEntries, newVal))\n                     manf.appendClassPath(newVal);\n             }\n             appClientJar.saveNoReopen();",
    "I can\u0027t reproduce even with your snippet; I imported the EAR being sure not to expand the app client, then I grabbed the appclient archive and added \"foo.jar\" to its manifest, saved it, and finally exported the EAR.  Everything worked fine.  Here\u0027s the testcase I used:\n\npublic void test144288() throws Exception {\n\t\tString earName \u003d \"WorkAreaFvtApp.ear\";//$NON-NLS-1$\n\t\tString earFileName \u003d getFullTestDataPath(earName);\n\t\tIDataModel model \u003d DataModelFactory.createDataModel(new EARComponentImportDataModelProvider());\n\t\tmodel.setProperty(IEARComponentImportDataModelProperties.FILE_NAME, earFileName);\n\n\t\tList moduleList \u003d (List) model.getProperty(IEARComponentImportDataModelProperties.SELECTED_MODELS_LIST);\n\t\tfor (int i \u003d moduleList.size() - 1; i \u003e -1; i--) {\n\t\t\tIDataModel aModel \u003d (IDataModel) moduleList.get(i);\n\t\t\tObject file \u003d aModel.getProperty(IEARComponentImportDataModelProperties.FILE);\n\t\t\tif (file instanceof ModuleFile) {\n\t\t\t\tModuleFile moduleFile \u003d (ModuleFile) file;\n\t\t\t\tif (moduleFile.isWARFile())\n\t\t\t\t\tmoduleList.remove(aModel);\n\t\t\t\tif(moduleFile.isApplicationClientFile())\n\t\t\t\t\tmoduleList.remove(aModel);\n\t\t\t}\n\t\t}\n\n\t\trunAndVerify(model);\n\t\tIVirtualComponent comp \u003d (IVirtualComponent) model.getProperty(IEARComponentImportDataModelProperties.COMPONENT);\n\t\tString appClientURI \u003d \"WorkAreaFvtClient.jar\";//$NON-NLS-1$\n\t\t\n\t\tIFile file \u003d ComponentUtilities.findFile(comp, new Path(appClientURI));\n        ApplicationClientFile appClientJar \u003d CommonarchiveFactoryImpl.getActiveFactory().openApplicationClientFile(file.getLocation().toOSString());\n        ArchiveManifest manf \u003d appClientJar.getManifest();\n        String existingEntries[] \u003d manf.getClassPathTokenized();\n        manf.appendClassPath(\"foo.jar\");//$NON-NLS-1$\n        appClientJar.saveNoReopen();\n        \n        String earOutputName \u003d \"d:\\\\temp\\\\Output\" + System.currentTimeMillis() + \".ear\";\n\t\tIDataModel export \u003d DataModelFactory.createDataModel(new EARComponentExportDataModelProvider());\n\t\texport.setProperty(IEARComponentExportDataModelProperties.PROJECT_NAME, comp.getProject().getName());\n\t\texport.setProperty(IEARComponentExportDataModelProperties.ARCHIVE_DESTINATION, earOutputName);\n\t\trunAndVerify(export);\n\t}",
    "I can\u0027t reproduce this.  Please reopen if you can pinpoint where the lock is coming from.",
    "closing"
  ],
  "commentCreationDates": [
    "2006-05-29T20:55:25+02:00",
    "2006-05-29T20:56:13+02:00",
    "2006-06-06T17:20:28+02:00",
    "2006-06-06T17:59:49+02:00",
    "2006-06-06T18:40:42+02:00",
    "2006-06-07T20:39:38+02:00",
    "2006-09-22T16:25:02+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jst.j2ee.commonarchivecore.internal.exception.SaveFailureException",
      "message": "IWAE0017E Unable to replace original archive: D:\\EJBDeployX622.03\\itp\\working\\wo rkout._\\35c959c3\\EarContent\\WorkAreaFvtClient.jar",
      "elements": [
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.cleanupAfterTempSave",
          "source": "ArchiveImpl.java:460"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.saveAsNoReopen",
          "source": "ArchiveImpl.java:1320"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.saveNoReopen",
          "source": "ArchiveImpl.java:1344"
        },
        {
          "method": "com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.processEjbReferences",
          "source": "BatchExtension.java:2516"
        },
        {
          "method": "com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.runEarDeploy",
          "source": "Bat chExtension.java:430"
        },
        {
          "method": "com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.access$0",
          "source": "BatchEx tension.java:323"
        },
        {
          "method": "com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension$RunDeploy.run",
          "source": "Ba tchExtension.java:306"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1737 "
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1719 "
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "144288",
      "date": "2006-05-29T20:55:25+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "normal"
    }
  ],
  "groupId": "144288",
  "bugId": "144288",
  "date": "2006-05-29T20:55:25+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "normal"
}