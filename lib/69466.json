{
  "comments": [
    "Statement \u003caBean\u003e.setNumberClass(Short.class) causes a\nUnsoppertedOperationException (parameter type Class), the visual Class can\u0027t\nbe opened.\n\nVE: I-20040706",
    "Rich,\nI was able to reproduce this problem by creating a class with a numberClass\nproperty that excepts a java.lang.Class as a parameter. I dropped it on the\ncanvas in an Empty visual class and manually set the property in the source viewer.\nHere\u0027s the bean code:\n\npublic class NonVisualBean extends Object {\n\tpublic java.lang.Class getNumberClass() {\n\t\treturn java.lang.Short.class;\n\t}\n\tpublic void setNumberClass(java.lang.Class stuff) {\n\t}\n}\n\nHere\u0027s the Empty class:\npublic class Empty {\n\n\tprivate NonVisualBean nonVisualBean \u003d null;  // \n@jve:decl-index\u003d0:visual-constraint\u003d\"76,68\"\n\t/**\n\t * This method initializes nonVisualBean\t\n\t * \t\n\t * @return testswing.NonVisualBean\t\n\t */    \n\tprivate NonVisualBean getNonVisualBean() {\n\t\tif (nonVisualBean \u003d\u003d null) {\n\t\t\tnonVisualBean \u003d new NonVisualBean();\n//\t\t\tnonVisualBean.setNumberClass(java.lang.Short.class);\n\t\t}\n\t\treturn nonVisualBean;\n\t}\n }\n\nJust uncomment the setNumberClass statement and it will throw the exception:\njava.lang.UnsupportedOperationException\n\tat\norg.eclipse.jem.internal.proxy.remote.REMClassBeanTypeProxy.newInstance(REMClassBeanTypeProxy.java:47)\n\tat\norg.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString(BasicAllocationProcesser.java:210)\n\tat\norg.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:149)\n\tat\norg.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate(BasicAllocationProcesser.java:120)\n\tat\norg.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation(BeanProxyAdapter.java:883)\n\tat\norg.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy(BeanProxyAdapter.java:832)\n\tat\norg.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:762)\n\tat\norg.eclipse.ve.internal.java.core.BeanProxyAdapter.applied(BeanProxyAdapter.java:257)\n\tat\norg.eclipse.ve.internal.java.core.BeanProxyAdapter.applyAllSettings(BeanProxyAdapter.java:544)\n\tat\norg.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy(BeanProxyAdapter.java:764)\n\tat\norg.eclipse.ve.internal.java.core.CompositionProxyAdapter.initSetting(CompositionProxyAdapter.java:143)\n\tat\norg.eclipse.ve.internal.java.core.CompositionProxyAdapter.initBeanProxy(CompositionProxyAdapter.java:120)\n\tat\norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run(JavaVisualEditorPart.java:1464)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)\n",
    "This should work when we have bug 72897 working. After that is fixed, we can\ncome back verify this.",
    "This has nothing to do with 72897. I think I was pointing at the wrong bug when\ndid the link. I think this is actually the SimpleAttributeDecoder one instead.",
    "This problem is no longer happening in VE 1.1",
    "closing"
  ],
  "commentCreationDates": [
    "2004-07-07T16:00:46+02:00",
    "2004-07-09T18:58:29+02:00",
    "2004-09-30T20:17:15+02:00",
    "2004-10-27T01:40:29+02:00",
    "2005-06-27T18:25:58+02:00",
    "2006-04-07T19:44:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsupportedOperationException",
      "elements": [
        {
          "method": "org.eclipse.jem.internal.proxy.remote.REMClassBeanTypeProxy.newInstance",
          "source": "REMClassBeanTypeProxy.java:47"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BasicAllocationProcesser.instantiateWithString",
          "source": "BasicAllocationProcesser.java:210"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate",
          "source": "BasicAllocationProcesser.java:149"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BasicAllocationProcesser.allocate",
          "source": "BasicAllocationProcesser.java:120"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BeanProxyAdapter.beanProxyAllocation",
          "source": "BeanProxyAdapter.java:883"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BeanProxyAdapter.primInstantiateBeanProxy",
          "source": "BeanProxyAdapter.java:832"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy",
          "source": "BeanProxyAdapter.java:762"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BeanProxyAdapter.applied",
          "source": "BeanProxyAdapter.java:257"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BeanProxyAdapter.applyAllSettings",
          "source": "BeanProxyAdapter.java:544"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.BeanProxyAdapter.instantiateBeanProxy",
          "source": "BeanProxyAdapter.java:764"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.CompositionProxyAdapter.initSetting",
          "source": "CompositionProxyAdapter.java:143"
        },
        {
          "method": "org.eclipse.ve.internal.java.core.CompositionProxyAdapter.initBeanProxy",
          "source": "CompositionProxyAdapter.java:120"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run",
          "source": "JavaVisualEditorPart.java:1464"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "69466",
      "date": "2004-07-09T18:58:29+02:00",
      "product": "VE",
      "component": "JFC/Swing",
      "severity": "normal"
    }
  ],
  "groupId": "69466",
  "bugId": "69466",
  "date": "2004-07-07T16:00:46+02:00",
  "product": "VE",
  "component": "JFC/Swing",
  "severity": "normal"
}