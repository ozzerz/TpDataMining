{
  "comments": [
    "Build 20020610 with IBM 1.3.1 VM\n\nIf you are in a GB18030 locale (Chinese PRC with GB 18030 loaded) you will get \na series of exceptions written to the log when you try and open a .java file.\n\nSTEPS\n1) Switch your locale to Chinese PRC on a machine with GB 18030 installed\n2) Start Eclipse\n3) Open a java editor (I opened \norg.eclipse.externaltools.internal.ui.ToolsPreferencePage.java)\n4) Long wait and then an editor indicating there was an error opened.\n5) here is the trace\n\n!ENTRY org.eclipse.jdt.core 4 985 ?Z?? 12, 2002 11:39:38.885\n!MESSAGE \n!STACK 0\nsun.io.MalformedInputException\n\tat sun.io.ByteToCharGB18030.convert(ByteToCharGB18030.java(Compiled \nCode))\n\tat java.io.InputStreamReader.fill(InputStreamReader.java(Compiled Code))\n\tat java.io.InputStreamReader.fill(InputStreamReader.java(Compiled Code))\n\tat java.io.InputStreamReader.read(InputStreamReader.java:264)\n\tat org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray\n(Util.java:262)\n\tat org.eclipse.jdt.internal.core.Util.getResourceContentsAsCharArray\n(Util.java:502)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.openBuffer\n(CompilationUnit.java:773)\n\tat org.eclipse.jdt.internal.core.Openable.openWhenClosed\n(Openable.java:401)\n\tat org.eclipse.jdt.internal.core.JavaElement.openHierarchy\n(JavaElement.java:521)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo\n(JavaElement.java(Compiled Code))\n\tat org.eclipse.jdt.internal.core.JavaElement.getChildren\n(JavaElement.java(Compiled Code))\n\tat org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType\n(JavaElement.java(Compiled Code))\n\tat org.eclipse.jdt.internal.core.CompilationUnit.getTypes\n(CompilationUnit.java:583)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes\n(CompilationUnit.java:378)\n\tat org.eclipse.jdt.ui.actions.FindAction.findType(FindAction.java:173)\n\tat org.eclipse.jdt.ui.actions.FindAction.getJavaElement\n(FindAction.java:125)\n\tat org.eclipse.jdt.ui.actions.FindAction.getJavaElement\n(FindAction.java:139)\n\tat org.eclipse.jdt.ui.actions.FindAction.getJavaElement\n(FindAction.java:152)\n\tat org.eclipse.jdt.ui.actions.FindAction.canOperateOn\n(FindAction.java:92)\n\tat org.eclipse.jdt.ui.actions.FindAction.selectionChanged\n(FindAction.java:258)\n\tat \norg.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged\n(SelectionDispatchAction.java:168)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged\n(SelectionDispatchAction.java:163)\n\tat org.eclipse.jface.viewers.Viewer.fireSelectionChanged\n(Viewer.java:147)\n\tat org.eclipse.jface.viewers.StructuredViewer.updateSelection\n(StructuredViewer.java:1153)\n\tat org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect\n(StructuredViewer.java:477)\n\tat org.eclipse.jface.viewers.StructuredViewer$1.widgetDefaultSelected\n(StructuredViewer.java:571)\n\tat org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent\n(OpenStrategy.java:180)\n\tat org.eclipse.jface.util.OpenStrategy.access$0(OpenStrategy.java:177)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent\n(OpenStrategy.java:220)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:739)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:248)\n\tat org.eclipse.core.launcher.Main.run(Main.java:697)\n\tat org.eclipse.core.launcher.Main.main(Main.java:530)",
    "Please note that this VM is not a GB18030 compliant VM so this is a moot issue \nuntil we test with a GB18030 compliant VM.",
    "The encoding isn\u0027t supported by the runtime you are running Eclipse on.\nThis isn\u0027t a JDT/Core bug.",
    "This is the encoding listed as my default encoding in the encoding preference \npage.",
    "Indeed this would be painful. But then, wouldn\u0027t any file (not even Java one) \nfail to open as well ?",
    "No - this is onlyu an issue with the java editor. If I open a java file using \nthe test editot I still get the encoding warning but not the exceptions.",
    "Logging is done by JDT/UI - OpenTypeHierarchyUtil.\n\nIf placing a breakpoint in \norg.eclipse.jdt.internal.compiler.util.Util#getInputStreamAsCharArray, one can \nsee that JDT/UI is performing quite a number of accesses to the source, which \nin this scenario are all doomed, and thus logging quite a lot.\n\nMoving to JDT/UI.",
    "This is a general issue. From the stack trace the following happens:\n\n- a selection changes\n- this triggers a selection changed event, send to all listeners. With the\n  new architecture of global actions this triggers a selection changed event\n  to \"all\" global JDT actions.\n- most of these actions do some light weight \"inspection\" of the element. All\n  these accesses generate a Java model exception, which then gets logged by\n  the action.\n\nTo solve this problem we should do some checks before the actions do their \nchecks so that they can access this precomputated information. \n\nThis isn\u0027t JDT specific. This will also be a problem with all plug-ins dealing \nwith Java elements.\n\nNick, any suggestions. Do you plan to provide some architectural support in 2.1 \nto solve this problem ?",
    "If JDT is reading files in response to selection changes, it doesn\u0027t exactly \nsound lightweight.\nOne possibility is to allow actions earlier in the listener list to veto the \nselection change notification.  But the semantics of veto is unclear when the \norder of listeners is unknown.\nWe have no plans to add any support in this area, but are open to suggestions.\n",
    "We are not reading the file\u0027s content on every selection change. What we do \nsome method calls on the Java model, which itself reads the file if needed (e.g \nthe element gets created for the first time). After that everything is in \nmemory. But since the first request fails the Java model doesn\u0027t get populate \nhence every subsequent call tries to read the file again producing the same \nerror message.\n\nThere are three things we can do:\n\n1. don\u0027t make any queries on a compilation unit during selection changes. This\n   ensures that we don\u0027t run into that problem.\n2. implement our own architecture to avoid evalutation the same expression in\n   every selection change listener.\n3. suggest an implementation to the workbench\n\nOne can be done by JDT-UI, 2. and 3. are problems which require cross team \ninteraction.\n\nTo be discussed with Erich",
    "We recoded our actions (where possible) to not populate the Java Model. But the \nFind still looks into a CU to get all types.\n\nUnclear if this is still an issue with a GB18030 compliant VM since this was \ntest with a 1.3.1 VM.",
    "Comments from Kevin_Haaland@ca.ibm.com\n\nFrom the stacktrace the defect appears to originate in:\n\n\tjava.io.InputStreamReader.read(InputStreamReader.java:264)\n\nuntil that point the stack trace looks fine so your assesment that this is a \nJRE defect is the most likely. The follow on comments about selection\nchanges and merits of doing this in a selection change callback are interesting \nbut I am not sure if this gets us any closer to the real problem. \n\nCould you write a very simple test case using only java.io calls to see if you \ncan read the file in the same way that JDT core does fails. It would be also \nuseful to see if it fails on all files or just this one in particular. If the \nfile only contains ascii characters I would have expected it to work is there \nany chance that this file contains non ascii characters?   \n\nInstalling the OS support for GB18030 on your machine is a good idea but I \nthink the JRE does not require OS support to convert characters between code \npages and the fix for this may require running the right level of VM.\n",
    "I cannot replicate this in 2.1 build 20030205 with the 1.3.1 vm",
    "Thanks Tod for testing it.",
    "I have tested this with the latest code and with R2.0 in both emulated GB18030 \nand on a chinese machine - I was unable to replicate in both cases.\n\nFeel free to close this PR if you wish.",
    "Closing ... "
  ],
  "commentCreationDates": [
    "2002-06-12T17:31:02+02:00",
    "2002-06-12T17:43:06+02:00",
    "2002-06-12T18:17:33+02:00",
    "2002-06-12T18:29:28+02:00",
    "2002-06-12T18:35:57+02:00",
    "2002-06-12T19:23:20+02:00",
    "2002-06-13T13:09:43+02:00",
    "2002-07-30T18:20:42+02:00",
    "2002-07-30T22:11:21+02:00",
    "2002-07-31T14:56:39+02:00",
    "2003-02-05T18:24:10+01:00",
    "2003-02-07T14:19:58+01:00",
    "2003-02-07T18:23:19+01:00",
    "2003-02-07T18:42:02+01:00",
    "2003-02-07T18:48:52+01:00",
    "2003-02-09T22:46:58+01:00"
  ],
  "traces": [
    {
      "exceptionType": "sun.io.MalformedInputException",
      "elements": [
        {
          "method": "sun.io.ByteToCharGB18030.convert",
          "source": "ByteToCharGB18030.java(Compiled  Code)"
        },
        {
          "method": "java.io.InputStreamReader.fill",
          "source": "InputStreamReader.java(Compiled Code)"
        },
        {
          "method": "java.io.InputStreamReader.fill",
          "source": "InputStreamReader.java(Compiled Code)"
        },
        {
          "method": "java.io.InputStreamReader.read",
          "source": "InputStreamReader.java:264"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray",
          "source": "Util.java:262"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Util.getResourceContentsAsCharArray",
          "source": "Util.java:502"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.openBuffer",
          "source": "CompilationUnit.java:773"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Openable.openWhenClosed",
          "source": "Openable.java:401"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.openHierarchy",
          "source": "JavaElement.java:521"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getChildren",
          "source": "JavaElement.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType",
          "source": "JavaElement.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.getTypes",
          "source": "CompilationUnit.java:583"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes",
          "source": "CompilationUnit.java:378"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.FindAction.findType",
          "source": "FindAction.java:173"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.FindAction.getJavaElement",
          "source": "FindAction.java:125"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.FindAction.getJavaElement",
          "source": "FindAction.java:139"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.FindAction.getJavaElement",
          "source": "FindAction.java:152"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.FindAction.canOperateOn",
          "source": "FindAction.java:92"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.FindAction.selectionChanged",
          "source": "FindAction.java:258"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged",
          "source": "SelectionDispatchAction.java:168"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged",
          "source": "SelectionDispatchAction.java:163"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:147"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateSelection",
          "source": "StructuredViewer.java:1153"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect",
          "source": "StructuredViewer.java:477"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$1.widgetDefaultSelected",
          "source": "StructuredViewer.java:571"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent",
          "source": "OpenStrategy.java:180"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$0",
          "source": "OpenStrategy.java:177"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:220"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:825"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:1527"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1177"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1160"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:739"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:248"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:697"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:530"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "20037",
      "date": "2002-06-12T17:31:02+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "20037",
  "bugId": "20037",
  "date": "2002-06-12T17:31:02+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}