{
  "comments": [
    "Using the stack trace console to navigate a stack trace that is not fomatted \nproperly (copy/pasted from Bugzilla) is troublesome. For example, pasting the \nfollowing trace into the console has these problems:\n\n(1) partial lines such as \"e.run(JavaWatchExpressionDelegate.java:144)\" \nresults in a hyperlink that can\u0027t find source for \"e\"\n(2) removing the newline character to create one complete line does not \nrecalcualte the hyperlinks\n\njava.lang.NullPointerException\nat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.containsA\nLocalType(ASTInstructionCompiler.java:331)\nat org.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.visit\n(ASTInstructionCompiler.java:2075)\nat org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:234)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2456)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2503)\nat org.eclipse.jdt.core.dom.ReturnStatement.accept0(ReturnStatement.java:133)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2456)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2526)\nat org.eclipse.jdt.core.dom.Block.accept0(Block.java:133)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2456)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2503)\nat org.eclipse.jdt.core.dom.MethodDeclaration.accept0\n(MethodDeclaration.java:499)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2456)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2526)\nat org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:474)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2456)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2526)\nat org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:290)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2456)\nat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.createExpres\nsionFromAST(ASTEvaluationEngine.java:251)\nat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledE\nxpression(ASTEvaluationEngine.java:156)\nat org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate\n(ASTEvaluationEngine.java:73)\nat \norg.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnabl\ne.run(JavaWatchExpressionDelegate.java:144)\nat org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run\n(JDIThread.java:2510)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "We should also provide a \"format\" action.",
    "new:\n icons/full/elcl16/format_trace.gif\n FormatStackTraceAction\n\nChanged\nJavaDebugImages: added constant for new icon\nJavaStackTracePageParticipant: adds the new action to it\u0027s toolbar.\n\nStack trace formatting might be improved still. It doesn\u0027t handle non-stacktrace text well. For example \n\n!ENTRY org.eclipse.debug.core 4 120 2004-11-12 09:51:02.64\n!MESSAGE An exception occurred while dispatching debug events.\n!STACK 0\njava.util.ConcurrentModificationException\n\ncopied from a .log will be formatted into one line and 0java.util.ConcurrentModificationException is not \nvalid.\n\nAlso should investigate using the retargettable format action (binding to Ctrl-Shift-F) to be consistent \nwith editors.\n",
    "deleted the icon and the constant. :-)\nchanged FormatJavaStackTraceAction to FormatJavaStackTraceActionDelegate\ncontributed the action delegate to the context menu via plugin.xml\nadded enabled submission to command support and handler submission to context support. Used \nactivate and deactivate because the command and context are only necessary in JavaStackTraceConsole \n(not every console in the console view).\n\nCommand is now mapped to M1+Shift+F\n",
    "please verify",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-10-28T22:56:01+02:00",
    "2004-11-11T19:53:01+01:00",
    "2004-11-12T20:41:19+01:00",
    "2004-12-03T21:18:48+01:00",
    "2004-12-03T21:19:10+01:00",
    "2004-12-06T17:12:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.containsALocalType",
          "source": "ASTInstructionCompiler.java:331"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTInstructionCompiler.visit",
          "source": "ASTInstructionCompiler.java:2075"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodInvocation.accept0",
          "source": "MethodInvocation.java:234"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2456"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2503"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ReturnStatement.accept0",
          "source": "ReturnStatement.java:133"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2456"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2526"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:133"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2456"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2503"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
          "source": "MethodDeclaration.java:499"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2456"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2526"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:474"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2456"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2526"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:290"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2456"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.createExpressionFromAST",
          "source": "ASTEvaluationEngine.java:251"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledExpression",
          "source": "ASTEvaluationEngine.java:156"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate",
          "source": "ASTEvaluationEngine.java:73"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnable.run",
          "source": "JavaWatchExpressionDelegate.java:144"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run",
          "source": "JDIThread.java:2510"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "77239",
      "date": "2004-10-28T22:56:01+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "enhancement"
    }
  ],
  "groupId": "77239",
  "bugId": "77239",
  "date": "2004-10-28T22:56:01+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "enhancement"
}