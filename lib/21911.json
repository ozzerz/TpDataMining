{
  "comments": [
    "I\u0027m seeing the following NPE in some cases in the 2.0 compiler.\nIt only occurs in a few scenarios, but in those cases it is\nreproducible (ie, it is not timing related).  We are going to \nneed to get a patch for this, if there\u0027s anything we can try \nin the short term then please provide any suggestions.\n\nat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(Scope.java\n(Compiled Code))\nat org.eclipse.jdt.internal.compiler.lookup.Scope.getType(Scope.java:917)\nat org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding\n(SingleTypeReference.java:39)\nat org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType\n(TypeReference.java:91)\nat org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve\n(LocalDeclaration.java:134)\nat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatement\ns(AbstractMethodDeclaration.java:332)\nat org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements\n(MethodDeclaration.java:68)\nat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve\n(AbstractMethodDeclaration.java:321)\nat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve\n(TypeDeclaration.java:908)\nat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve\n(TypeDeclaration.java:940)\nat org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve\n(CompilationUnitDeclaration.java:235)\nat org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533)\nat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:337)\nat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile\n(AbstractImageBuilder.java:219)\nat org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile\n(AbstractImageBuilder.java:166)\nat org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build\n(BatchImageBuilder.java:50)\nat org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll\n(JavaBuilder.java:170)\nat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:99)\nat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:392)\nat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:831)\nat org.eclipse.core.runtime.Platform.run(Platform.java:416)\nat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:120)\nat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:176)\nat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:186)\nat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:146)\nat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:831)\nat org.eclipse.core.runtime.Platform.run(Platform.java:416)\nat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:160)\nat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:232)\nat org.eclipse.core.internal.resources.Project.build(Project.java:85)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.buildProject\n(BatchExtension.java:526)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.internalJarProcess\n(BatchExtension.java:473)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.runJarDeploy\n(BatchExtension.java:387)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.access$100\n(BatchExtension.java:102)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension$RunDeploy.run\n(BatchExtension.java:232)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1361)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension$RunDeploy.execute\n(BatchExtension.java:214)\nat com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension.run\n(BatchExtension.java:177)\nat com.ibm.etools.ejbdeploy.batch.impl.BatchDeploy.execute(BatchDeploy.java:141)\nat com.ibm.etools.ejbdeploy.EJBDeploy.execute(EJBDeploy.java:86)\nat com.ibm.etools.ejbdeploy.EJBDeploy.main(EJBDeploy.java:313)",
    "Sorry, missed the top line - the problem is an NPE\n\njava.lang.NullPointerException\n        at org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n        at org.eclipse.jdt.internal.compiler.lookup.Scope.getType\n(Scope.java:917)\n        at \norg.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding\n(SingleTypeReference.java:39)\n...",
    "Do you have a testcase for reproducing it ? \n",
    "I spent some time investigating this further, trying to get more details and \nbuild a testcase... and I\u0027ve now come to the conclulsion that it\u0027s actually a \nJDK defect.  I won\u0027t go through all the details here, but you can close this \nreport, I\u0027ll be following up with the JDK team.",
    "Do you mean that some invalid classfiles got compiled against ? Even then, our \ncompiler should not crash like this. Whatever evil code we compile we must \nbehave and trap errors.\n\nThere has been a number of occasions where we had to be resilient to bogus \nclassfiles appearing in class libraries (from JDKs). In particular, there were \ncases where the innerclass attributes were completely wrong according to specs, \nbut we have to behave anyway instead of crashing.\n\nSo I would still like a test case to add protection to our compiler.",
    "I like the principle behind that answer :-)\n\nHowever, in this case, I think there\u0027s really nothing you can do.  The problem \nnow appears to be not just JDK, but JIT related - and it\u0027s an error in the JVM \nat runtime, it\u0027s not just bad input.  I don\u0027t think it\u0027s realistic for you to \ntry and build protection against JIT defects.",
    "Oh I see. I thought this was due to compiling against a bogus JDK class library.\nSorry for the confusion, as you said there is little we can do against hostile \nVMs...\n\nClosing."
  ],
  "commentCreationDates": [
    "2002-07-25T18:20:22+02:00",
    "2002-07-25T18:21:34+02:00",
    "2002-07-26T12:20:14+02:00",
    "2002-07-31T17:24:20+02:00",
    "2002-07-31T20:17:49+02:00",
    "2002-07-31T21:39:33+02:00",
    "2002-08-01T02:18:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getType",
          "source": "Scope.java:917"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding",
          "source": "SingleTypeReference.java:39"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "21911",
      "date": "2002-07-25T18:21:34+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "21911",
  "bugId": "21911",
  "date": "2002-07-25T18:20:22+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}