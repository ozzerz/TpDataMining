{
  "comments": [
    "JVMTI Profiler can assign the same Id to many threads.\nSome automation tests fail due to this issue on both\nWindoes and Linux platforms. It looks like the bug can be reproduced only on Sun JREs.\n\nLog example:\n\ntptp build: 4.4.0-200706130823\n\n++++++++++++++++++++++++\nRUN: ia32 - (RHEL3 U8)Linux 2.4.21-47.ELsmp SMP (2 VCPU) i686 with SUN jdk1.5.0_11\n**************************FAILED*****************************\n1. PlainWorkload_100/standalone_thread_full\n*************************************************************\nVERIFICATION ERROR:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 587: \u003cthreadStart threadId\u003d\"83\" time\u003d\"1181813451.941648000\" objIdRef\u003d\"109\"\nthreadName\u003d\"workload_078\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nworkload_078,group\u003d,parent\u003d,id\u003d83,time\u003d1.181813451935484E9/\u003d-1.181813451935484E9\n**************************FAILED*****************************\n++++++++++++++++++++++++\nRUN: ia32 - (SLES9) 2.6.5-7.97-smp SMP (4VCPU) i386 with SUN jdk1.6.0_01\n**************************FAILED*****************************\n1. MathWorkload_100/standalone_thread_full\n*************************************************************\nVERIFICATION ERROR:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 2401: \u003cthreadStart threadId\u003d\"70\" time\u003d\"1181814835.036435000\" objIdRef\u003d\"85\"\nthreadName\u003d\"workload_065\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nworkload_065,group\u003d,parent\u003d,id\u003d70,time\u003d1.181814834984053E9/\u003d-1.181814834984053E9\n++++++++++++++++++++++++\n\n\n++++++++++++++++++++++++\nRUN: ia32 - (Windows XP)i686 with SUN jdk1.5.0_11\n**************************FAILED*****************************\n\ntp_threadSequentWorkload_5(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 418: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819866.809632256\" objIdRef\u003d\"36\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198667828305E9/\u003d-1.1818198667828305E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5(ThreadStandaloneProfiling.java:174)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n3)\ntp_threadSequentWorkload_5_F(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 368: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819868.623572417\" objIdRef\u003d\"35\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198685855196E9/\u003d-1.1818198685855196E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F(ThreadStandaloneProfiling.java:180)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n*************************************************************\n\n++++++++++++++++++++++++\nRUN: ia32 - (Windows XP)i686 with SUN jdk1.6.0_01\n**************************FAILED*****************************\n2)\ntp_threadSequentWorkload_5(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 418: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819866.809632256\" objIdRef\u003d\"36\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198667828305E9/\u003d-1.1818198667828305E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5(ThreadStandaloneProfiling.java:174)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n3)\ntp_threadSequentWorkload_5_F(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 368: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819868.623572417\" objIdRef\u003d\"35\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198685855196E9/\u003d-1.1818198685855196E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F(ThreadStandaloneProfiling.java:180)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n*************************************************************\n\n++++++++++++++++++++++++\nRUN: ia32 - (Windows XP) SMP (4VCPU) i386 with SUN jdk1.5.0_11\n**************************FAILED*****************************\n1)\ntp_threadPowerWorkload_100(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 2404954: \u003cthreadStart threadId\u003d\"105\" time\u003d\"1181821555.828726044\"\nobjIdRef\u003d\"116\" threadName\u003d\"workload_004\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nworkload_004,group\u003d,parent\u003d,id\u003d105,time\u003d1.1818215546450222E9/\u003d-1.1818215546450222E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadPowerWorkload_100(ThreadStandaloneProfiling.java:114)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n2)\ntp_threadSequentWorkload_5(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 537: \u003cthreadStart threadId\u003d\"11\" time\u003d\"1181821597.239275048\" objIdRef\u003d\"40\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d11,time\u003d1.1818215971860793E9/\u003d-1.1818215971860793E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5(ThreadStandaloneProfiling.java:174)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n3)\ntp_threadSequentWorkload_5_F(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 483: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181821876.482785532\" objIdRef\u003d\"39\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.181821876428387E9/\u003d-1.181821876428387E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F(ThreadStandaloneProfiling.java:180)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n*************************************************************\n\n++++++++++++++++++++++++\nRUN: ia32 - (Windows XP) SMP (4VCPU) i386 with SUN jdk1.6.0_013.2\n**************************FAILED*****************************\n1)\ntp_threadPipeWorkload_100(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 47064: \u003cthreadStart threadId\u003d\"106\" time\u003d\"1181821459.090582039\"\nobjIdRef\u003d\"115\" threadName\u003d\"workload_007\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nworkload_007,group\u003d,parent\u003d,id\u003d106,time\u003d1.1818214590850823E9/\u003d-1.1818214590850823E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadPipeWorkload_100(ThreadStandaloneProfiling.java:138)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n2)\ntp_threadSequentWorkload_5_F(org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling)junit.framework.AssertionFailedError:\norg.eclipse.tptp.ac.verification.TraceVerificationException: \nat 633: \u003cthreadStart threadId\u003d\"12\" time\u003d\"1181821500.786576548\" objIdRef\u003d\"42\"\nthreadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\nRULE_T01: Thread id must be unique for each thread start event. Existing\nthread:\nlevel_5_001,group\u003d,parent\u003d,id\u003d12,time\u003d1.181821500717375E9/\u003d-1.181821500717375E9\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:515)\n    at\norg.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest(TIProfilingBase.java:298)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest(ThreadStandaloneProfiling.java:72)\n    at\norg.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F(ThreadStandaloneProfiling.java:180)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at\norg.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main(AllStandaloneProfiling.java:29)\n*************************************************************\n\n\nSee also: 191648, 191817, 192647, 192659.",
    "*** Bug 191817 has been marked as a duplicate of this bug. ***",
    "*** Bug 192659 has been marked as a duplicate of this bug. ***",
    "Changed the bug title to better describe the error.\n\nThis is a Martini/JPI issue. The Thread Start event for the \"duplicate\" thread is generated twice.\n\nNote, however, that this is a duplicate Thread Start event for the *same* thread, and not multiple different threads with the same id. Therefore, this is not a high-priority bug.\n\nThe root-cause of this bug is related to the fact that the Sun JVM may generate Monitor events before a Thread Start event was generated on this thread, or after a Thread End event was generated on this thread (this is illegal according to the JVMTI spec). Martini has some mechanisms for simulating a Thread Start event in these cases to guarantee that Thread Start will always be the first event received for a certain thread. These mechanisms are likely to cause this bug.\n",
    "Created an attachment (id\u003d71852)\nA test failure with a partial Martini log file which shows the duplicate Thread Start event for thread 14\n\n",
    "Created an attachment (id\u003d71855)\nExample trace file for test tp_threadMathWorkload_100\n\n",
    "The threadStart elements may be not fully identical. For example see attached trace.trcxml file. It contains following elements:\n...\n\u003cthreadStart threadId\u003d\"58\" time\u003d\"1181910177.551562000\" objIdRef\u003d\"67\" threadName\u003d\"workload_055\" groupName\u003d\"main\" parentName\u003d\"system\"/\u003e\n...\n\u003cthreadStart threadId\u003d\"60\" time\u003d\"1181910179.208568000\" objIdRef\u003d\"67\" threadName\u003d\"workload_055\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\n...\n\u003cthreadStart threadId\u003d\"60\" time\u003d\"1181910179.364911000\" objIdRef\u003d\"81\" threadName\u003d\"workload_055\" groupName\u003d\"\" parentName\u003d\"\"/\u003e\n...\n\nNote the elements with threadId\u003d\"60\" refer to different objIds. The element with threadId\u003d\"58\" refers to the same objId as the first element with threadId\u003d\"60\".\n",
    "Root cause analysis:\nThe following sequence may cause a duplicate thread id:\n1. ThreadEnd event arrives on thread t1 for JNI env e1. Martini invalidates TLS and \u003ce1, tid1\u003e map entry\n2. A monitor event arrives on dying thread t1 for JNI env e1 (illegal according to JVMTI, but known to happen with Sun JVMs). Martini assumes that a new thread has started, updates TLS, creates mapping \u003ce1, tid2\u003e and simulates a Thread Start event for tid2.\n3. A ThreadStart event arrives on a new thread t2 which reuses JNI env e1. Martini queries data map, find \u003ce1, tid2\u003e and generates Thread Start event for t2 using thread id tid2.\n\nA possible solution to this bug is to ignore all monitor events which arrive on a thread after its Thread End event.",
    "Created an attachment (id\u003d72601)\nA patch to resolve this bug.\n\nThis patch causes Martini not to dispatch monitor events arriving after a Thread End event. The patch resolves this defect.",
    "Created an attachment (id\u003d72602)\nA patch to resolve this bug.\n\nThis patch causes Martini not to dispatch monitor events arriving after a Thread End event. The patch resolves this defect.",
    "Re-targeting bug to 4.4.0.2. A patch is already available and tested",
    "Since we\u0027ve lost Slava, I\u0027ll make a go at reviewing the code...  :-)  Is Alexander reviewing these yet?\n\nI almost wish GetMonitorEventData() had a return value so that the validity check could happen there instead of being replicated all the places that GetMonitorEventData() is called.\n\nI see tls is still used to populate threadID in several places in this file (method enter/leave, object alloction, object free).  Presumably, if the thread is gone, tls cannot be reliably used on it.  Have we only seen this issue w/ Sun w/ Monitor Events?   I\u0027d hate to run into a similar pitfall later with one of the other events...\n\nAre there any performance implications we should worry about of using pDataManager-\u003eGetThreadInfoManager()-\u003eGetThreadId(pJniEnv) instead of TLS that we should be concerned with?\n\nOtherwise, this one looks good to me.",
    "Chris, thanks for your review. See my comments below:\n\n\u003e I see tls is still used to populate threadID in several places in this file\n\u003e (method enter/leave, object alloction, object free).  Presumably, if the thread\n\u003e is gone, tls cannot be reliably used on it.  Have we only seen this issue w/\n\u003e Sun w/ Monitor Events?   I\u0027d hate to run into a similar pitfall later with one\n\u003e of the other events...\n\u003e \n\u003e Are there any performance implications we should worry about of using\n\u003e pDataManager-\u003eGetThreadInfoManager()-\u003eGetThreadId(pJniEnv) instead of TLS that\n\u003e we should be concerned with?\n\nThis is a delicate issue, mainly related to the fact that some of this code must (still) support JVMPI, which uses JNI env pointers to identify threads. The code uses TLS (native to the O/S, not Java TLS) to issues related to synchronizing instrumentation-generated events and JVMTI/PI events.  For example, to guarantee that Thread Start is always the first event on a thread, even when Method Enter event can arrive before (if the java.lang.Thread class itself is instrumented for enter/leave notifications). There are mechanisms in the code (see class CThreadInfoManager) to invalidate a TLS entry when a Java thread dies.\n ",
    "This patch was PMC approved.  Has it been committed to CVS?  Please resolve if it has.",
    "Thanks Asaf,\n\n  So you use the JNI reference to get the TID in places where the TLS might not have been populated yet.\n\n  This code seems ready to commit.\n\nThanks,\n\nChris",
    "(From update of attachment 72602)\nPatch checked-in to HEAD (4.4.1) and to 4.4.0.2 branch",
    "fixed"
  ],
  "commentCreationDates": [
    "2007-06-15T15:05:11+02:00",
    "2007-06-15T15:20:29+02:00",
    "2007-06-15T15:22:19+02:00",
    "2007-06-20T10:39:38+02:00",
    "2007-06-20T10:48:21+02:00",
    "2007-06-20T11:35:47+02:00",
    "2007-06-20T11:42:58+02:00",
    "2007-06-26T15:33:33+02:00",
    "2007-06-27T16:16:53+02:00",
    "2007-06-27T16:17:10+02:00",
    "2007-07-17T08:54:17+02:00",
    "2007-07-23T23:13:22+02:00",
    "2007-07-29T20:04:52+02:00",
    "2007-07-30T17:31:00+02:00",
    "2007-07-30T19:15:36+02:00",
    "2007-07-31T08:20:37+02:00",
    "2007-07-31T08:21:12+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 418: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819866.809632256\" objIdRef\u003d\"36\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198667828305E9/\u003d-1.1818198667828305E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5",
          "source": "ThreadStandaloneProfiling.java:174"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 368: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819868.623572417\" objIdRef\u003d\"35\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198685855196E9/\u003d-1.1818198685855196E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F",
          "source": "ThreadStandaloneProfiling.java:180"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 418: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819866.809632256\" objIdRef\u003d\"36\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198667828305E9/\u003d-1.1818198667828305E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5",
          "source": "ThreadStandaloneProfiling.java:174"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 2,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 368: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181819868.623572417\" objIdRef\u003d\"35\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.1818198685855196E9/\u003d-1.1818198685855196E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F",
          "source": "ThreadStandaloneProfiling.java:180"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 3,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 2404954: \u003cthreadStart threadId\u003d\"105\" time\u003d\"1181821555.828726044\" objIdRef\u003d\"116\" threadName\u003d\"workload_004\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: workload_004,group\u003d,parent\u003d,id\u003d105,time\u003d1.1818215546450222E9/\u003d-1.1818215546450222E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadPowerWorkload_100",
          "source": "ThreadStandaloneProfiling.java:114"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 4,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 537: \u003cthreadStart threadId\u003d\"11\" time\u003d\"1181821597.239275048\" objIdRef\u003d\"40\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d11,time\u003d1.1818215971860793E9/\u003d-1.1818215971860793E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5",
          "source": "ThreadStandaloneProfiling.java:174"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 5,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 483: \u003cthreadStart threadId\u003d\"10\" time\u003d\"1181821876.482785532\" objIdRef\u003d\"39\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d10,time\u003d1.181821876428387E9/\u003d-1.181821876428387E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F",
          "source": "ThreadStandaloneProfiling.java:180"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 6,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 47064: \u003cthreadStart threadId\u003d\"106\" time\u003d\"1181821459.090582039\" objIdRef\u003d\"115\" threadName\u003d\"workload_007\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: workload_007,group\u003d,parent\u003d,id\u003d106,time\u003d1.1818214590850823E9/\u003d-1.1818214590850823E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadPipeWorkload_100",
          "source": "ThreadStandaloneProfiling.java:138"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 7,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.tptp.ac.verification.TraceVerificationException",
      "message": "at 633: \u003cthreadStart threadId\u003d\"12\" time\u003d\"1181821500.786576548\" objIdRef\u003d\"42\" threadName\u003d\"level_5_001\" groupName\u003d\"\" parentName\u003d\"\"/\u003e RULE_T01: Thread id must be unique for each thread start event. Existing thread: level_5_001,group\u003d,parent\u003d,id\u003d12,time\u003d1.181821500717375E9/\u003d-1.181821500717375E9",
      "elements": [
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:515"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.TIProfilingBase.launchTest",
          "source": "TIProfilingBase.java:298"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.launchTest",
          "source": "ThreadStandaloneProfiling.java:72"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.ThreadStandaloneProfiling.tp_threadSequentWorkload_5_F",
          "source": "ThreadStandaloneProfiling.java:180"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.tptp.ac.testautomation.junits.AllStandaloneProfiling.main",
          "source": "AllStandaloneProfiling.java:29"
        }
      ],
      "number": 8,
      "commentIndex": 0,
      "bugId": "192862",
      "date": "2007-06-15T15:05:11+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Agents.JVMTI",
      "severity": "major"
    }
  ],
  "groupId": "192862",
  "bugId": "192862",
  "date": "2007-06-15T15:05:11+02:00",
  "product": "TPTP Profiling",
  "component": "Platform.Agents.JVMTI",
  "severity": "major"
}