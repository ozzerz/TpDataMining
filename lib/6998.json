{
  "comments": [
    "try to create a type \u0027test\u0027 in junit.framework\n\nLog: Mon Dec 17 16:32:34 GMT+01:00 2001\n4 org.eclipse.jdt.ui 1 Internal Error\norg.eclipse.jdt.core.JavaModelException[966]: \norg.eclipse.core.internal.resources.ResourceException: A resource exists with a \ndifferent case: /y/f/junit/framework/Test.java.\n\tat org.eclipse.core.internal.resources.Resource.checkDoesNotExist\n(Resource.java:973)\n\tat org.eclipse.core.internal.resources.File.create(File.java:81)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.createFile\n(JavaModelOperation.java:180)\n\tat \norg.eclipse.jdt.internal.core.CreateCompilationUnitOperation.executeOperation\n(CreateCompilationUnitOperation.java:64)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.execute\n(JavaModelOperation.java:268)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run\n(JavaModelOperation.java:476)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1232)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.runOperation\n(JavaModelManager.java:1139)\n\tat org.eclipse.jdt.internal.core.JavaElement.runOperation\n(JavaElement.java:518)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.createType\n(CompilationUnit.java:133)\n\tat org.eclipse.jdt.internal.ui.wizards.TypePage.createType\n(TypePage.java:1165)\n\tat org.eclipse.jdt.internal.ui.wizards.TypePage$1.run\n(TypePage.java:1387)\n\tat org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute\n(WorkspaceModifyDelegatingOperation.java:39)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation$1.run\n(WorkspaceModifyOperation.java:64)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1232)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run\n(WorkspaceModifyOperation.java:78)\n\tat org.eclipse.jface.operation.ModalContext.runInCurrentThread\n(ModalContext.java:296)\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)\n\tat org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:713)\n\tat org.eclipse.jdt.internal.ui.wizards.NewElementWizard.finishPage\n(NewElementWizard.java:74)\n\tat \norg.eclipse.jdt.internal.ui.wizards.NewClassCreationWizard.performFinish\n(NewClassCreationWizard.java:42)\n\tat org.eclipse.jface.wizard.WizardDialog.finishPressed\n(WizardDialog.java:570)\n\tat org.eclipse.jface.wizard.WizardDialog.buttonPressed\n(WizardDialog.java:311)\n\tat org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:211)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled \nCode))\n\tat org.eclipse.jface.window.Window.open(Window.java:523)\n\tat org.eclipse.jdt.internal.ui.wizards.AbstractOpenWizardAction.run\n(AbstractOpenWizardAction.java:143)\n\tat org.eclipse.jdt.internal.ui.wizards.AbstractOpenWizardAction.run\n(AbstractOpenWizardAction.java:161)\n\tat org.eclipse.ui.internal.PluginAction.run(PluginAction.java:181)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:452)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:407)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent\n(ActionContributionItem.java:361)\n\tat org.eclipse.jface.action.ActionContributionItem.access$0\n(ActionContributionItem.java:352)\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java:47)\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:758)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:820)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)\n\tat SlimLauncher.main(SlimLauncher.java:14)",
    "the wizard should have a guard for this case",
    "A error dialog informs about the problem. This is the only thing I can do.\n\nThere is no chance to know about the problem before file creation time.\nCould CORE offer a method like canCreate() that has the OS specifics?\n\nThe check would not give any guarantee of the success of the operation, but\nlets wizards warn about OS specific problems: names, existing files, already \nexisting folder with the same name ect. The current check routines are general \nfile name checks and not context sensitive.\n\nMoving to Core",
    "I would argue against providing such API.  We already provide name and path \nvalidation methods on IWorkspace for things that can be checked quickly.  Many \nof the error cases that can occur during creation are difficult or impossible to \ndetect.  To do so would also duplicate much functionality implemented by the \njava class libraries and the underlying filesystem, making it more difficult to \nsupport and maintain our code base across our various target platforms.  It \nwould also clutter our API to provide ifICallThisMethodDoYouThinkItWillSucceed() \ncompanion methods for all the operations provided by core (move, copy, delete, \ncreate, etc).\n\nI suggest that the current behaviour is close to acceptable.  I think the UI \nshould just remove references to \"Core exception\" and \"Internal Error\", \nand just present the message provided by core to the user.  It shouldn\u0027t add log \nentries for this either, it\u0027s normal behaviour.  The core message that is \nreturned, \"A resource exists with a different case...\", tells the user exactly \nwhat\u0027s wrong and they\u0027ll know how to proceed.",
    "I agree that this is a tricky and painful area to implement, but having it will \ngive more quality to, for example, the wizard.\n\nI see many other clients of the functionality, refactoring to name one. They \ntry hard to warn users about problems before applying any change, as rollback \nis difficult. It becomes very hard when an exception occurs.\n\n\n\n\n",
    "i wholeheartedly agree - putting code like\ntry{\n  createClass()\n} catch (CoreException e){\n if (isThisSimplyTheDifferentCase6998BugException(e))\n   notReallyAnError(e) \n else\n   realError(e)\n}\n\nis EVIL!\ni have a hard time imagining this kind code to ever be legit in the ui.\n\nalso, what if i want to create a composite command action that (as one of its \nleaves) creates, or renames, a file. the suggested semantics makes it next to \nimpossible to implements this cleanly. the necessary exception handling dance \nwould not be pretty.",
    "There are many other kinds of exceptions that can occur during create(), and \nthey can\u0027t all be detected beforehand.  Therefore callers of create() have to be \nable to handle exceptions thrown by create() regardless.  Case collisions are \njust one kind of error out of many.  Core provides a different error code if \nclients wish to handle case collisions differently, but no one is forcing them \nto do so.\n\nWhy isn\u0027t it sufficient to just report the exception to the user in this case?  \nWhat would the notReallyAnError() method do differently in your pseudo-code \nexample?\n\nSee also Core RFC 0001 on the Platform Core web page.\n",
    "Of course, create can always throw a CoreException, but the more predetection, \nthe better the quality of wizards / the tool, and less troubles for refactoring.\n",
    "No changes planned for 2.0",
    "Reopening for investigation.",
    "Not planning to change this behaviour.\nClosing.",
    "It\u0027s not that we ask for changing the behaviour.\nWe were asking for additional checking method to be able to avoid the exception.\n\nSuch checking methods (\u0027canDelete\u0027) are platform dependend code which should be \nabstracted by core. \nAs a GUI we are interested to be able to warn about problems, we can\u0027t let code \ncrash in the middle of a refactoring modifying 100 files.",
    "Old title: [resources] CoreException in new class wizard\n",
    "*** Bug 52114 has been marked as a duplicate of this bug. ***",
    "Closing bugs we don\u0027t plan to fix.",
    "Note that this bug still hurts us. We\u0027re currently implementing workarounds in\nseveral wizards, implementing a \u0027canCreate\u0027 check by doing extra\njava.io.File.exists() before invoking IFile.create.\nbug 60246 is an example.",
    "*** Bug 66979 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2001-12-17T15:25:33+01:00",
    "2001-12-18T13:30:54+01:00",
    "2001-12-18T13:44:37+01:00",
    "2001-12-18T19:27:51+01:00",
    "2001-12-19T09:42:35+01:00",
    "2001-12-19T09:53:32+01:00",
    "2002-01-04T18:09:43+01:00",
    "2002-01-07T10:39:24+01:00",
    "2002-03-04T19:43:45+01:00",
    "2002-09-10T18:12:38+02:00",
    "2002-09-27T15:35:47+02:00",
    "2002-09-27T17:01:06+02:00",
    "2002-10-01T17:04:41+02:00",
    "2004-02-17T23:09:49+01:00",
    "2004-08-26T18:04:04+02:00",
    "2004-09-01T12:11:54+02:00",
    "2004-10-28T22:35:19+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "A resource exists with a  different case: /y/f/junit/framework/Test.java.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkDoesNotExist",
          "source": "Resource.java:973"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.create",
          "source": "File.java:81"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.createFile",
          "source": "JavaModelOperation.java:180"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CreateCompilationUnitOperation.executeOperation",
          "source": "CreateCompilationUnitOperation.java:64"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.execute",
          "source": "JavaModelOperation.java:268"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:476"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1232"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.runOperation",
          "source": "JavaModelManager.java:1139"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.runOperation",
          "source": "JavaElement.java:518"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.createType",
          "source": "CompilationUnit.java:133"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.wizards.TypePage.createType",
          "source": "TypePage.java:1165"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.wizards.TypePage$1.run",
          "source": "TypePage.java:1387"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute",
          "source": "WorkspaceModifyDelegatingOperation.java:39"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation$1.run",
          "source": "WorkspaceModifyOperation.java:64"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1232"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:78"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:296"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:249"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.run",
          "source": "WizardDialog.java:713"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.wizards.NewElementWizard.finishPage",
          "source": "NewElementWizard.java:74"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.wizards.NewClassCreationWizard.performFinish",
          "source": "NewClassCreationWizard.java:42"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.finishPressed",
          "source": "WizardDialog.java:570"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:311"
        },
        {
          "method": "org.eclipse.jface.dialogs.Dialog$1.widgetSelected",
          "source": "Dialog.java:211"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:523"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.wizards.AbstractOpenWizardAction.run",
          "source": "AbstractOpenWizardAction.java:143"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.wizards.AbstractOpenWizardAction.run",
          "source": "AbstractOpenWizardAction.java:161"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.run",
          "source": "PluginAction.java:181"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:452"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:407"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent",
          "source": "ActionContributionItem.java:361"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$0",
          "source": "ActionContributionItem.java:352"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java:47"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:758"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:820"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:285"
        },
        {
          "method": "SlimLauncher.main",
          "source": "SlimLauncher.java:14"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "6998",
      "date": "2001-12-17T15:25:33+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "enhancement"
    }
  ],
  "groupId": "6998",
  "bugId": "6998",
  "date": "2001-12-17T15:25:33+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "enhancement"
}