{
  "comments": [
    "close all perspectives\nopen Resource perspective\nset pref to open views as fast view\nshow view Update Manager \u003e Preview (not External Preview)\ndismiss fast view\nclick on Outline view\nPreview comes to front\nclose Preview\nclick on any other view\nit is not activated\nlog has:\n\n!ENTRY org.eclipse.ui 4 0 Jun 04, 2002 13:42:28.762\n!MESSAGE Widget is disposed\n!STACK 0\norg.eclipse.swt.SWTException: Widget is disposed\n\tat org.eclipse.swt.SWT.error(SWT.java:1887)\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.custom.CLabel.setBackground(CLabel.java:425)\n\tat org.eclipse.ui.internal.ViewPane.drawGradient(ViewPane.java:352)\n\tat org.eclipse.ui.internal.ViewPane.shellDeactivated(ViewPane.java:445)\n\tat org.eclipse.ui.internal.WorkbenchWindow$12.shellDeactivated\n(WorkbenchWindow.java:1338)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent\n(TypedListener.java:159)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)\n\tat org.eclipse.swt.widgets.Decorations.WM_ACTIVATE\n(Decorations.java:1360)\n\tat org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:1042)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled \nCode))\n\tat org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:739)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:244)\n\tat org.eclipse.core.launcher.Main.run(Main.java:693)\n\tat org.eclipse.core.launcher.Main.main(Main.java:526)",
    "Only occurs when Preview is a fast view.\nAlso occurs if you open the Update perspective and make Preview a fast view.\n\nVlad, do you know if the Preview view tracks activation of other parts and \nactivates itself?  If not, this seems like a Workbench problem.  Possibly some \ninteraction with the OLE control.\n",
    "After exiting, the workbench.xml has:\n\n\u003cperspectives activePart\u003d\"org.eclipse.update.ui.DetailsView\" \nactivePerspective\u003d\"org.eclipse.ui.resourcePerspective\"\u003e\n\nI believe this is the id for the Preview view (even though we tried to close \nit).",
    "The stack trace above seems secondary.\nThe initial one is as follows, but occurs in the same place:\n\n!ENTRY org.eclipse.ui 4 4 Jun 04, 2002 14:13:44.793\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Jun 04, 2002 14:13:44.808\n!MESSAGE Widget is disposed\n!STACK 0\norg.eclipse.swt.SWTException: Widget is disposed\n\tat org.eclipse.swt.SWT.error(SWT.java:1887)\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Control.getDisplay(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled \nCode))\n\tat org.eclipse.swt.custom.CLabel.setBackground(CLabel.java:425)\n\tat org.eclipse.ui.internal.ViewPane.drawGradient(ViewPane.java:352)\n\tat org.eclipse.ui.internal.ViewPane.showFocus(ViewPane.java:456)\n\tat org.eclipse.ui.internal.WorkbenchPage.deactivatePart\n(WorkbenchPage.java:897)\n\tat org.eclipse.ui.internal.WorkbenchPage.setActivePart\n(WorkbenchPage.java:2015)\n\tat org.eclipse.ui.internal.WorkbenchPage.requestActivation\n(WorkbenchPage.java:1819)\n\tat org.eclipse.ui.internal.PartPane.requestActivation\n(PartPane.java:332)\n\tat org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:306)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)\n\tat org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java:757)\n\tat org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE(Shell.java:1117)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Decorations.windowProc\n(Decorations.java:1343)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled \nCode))\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled \nCode))\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled \nCode))\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled \nCode))\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled \nCode))\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled \nCode))\n\tat org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java:1600)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1284)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:739)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:244)\n\tat org.eclipse.core.launcher.Main.run(Main.java:693)\n\tat org.eclipse.core.launcher.Main.main(Main.java:526)\n",
    "*** Bug 19098 has been marked as a duplicate of this bug. ***",
    "*** Bug 19088 has been marked as a duplicate of this bug. ***",
    "Need to verify that PRs marked as dups are really dups.",
    "*** Bug 18918 has been marked as a duplicate of this bug. ***",
    "Need to establish whether this is caused by the Workbench or the Preview view.\nNote that it does not use an OLE control after all.\n",
    "Even if it\u0027s caused by the Preview view, the Workbench should be more \nresilient to it.",
    "In the update plugin, there is code that listens for selection changes in the \nworkbench. When the empty Outline view is made active, the selection change \nevent is fired (the selection will be empty). The update plugin has code to \nhandle an empty selection. In that code, if the Preview view exist in the \nperspective, then bringToTop() is called. If the Preview view happens to be a \nfast view, then the workbench will opened and give focus to it in the bringToTop\n() method. That is why clicking on the Outline view shows the Preview view. \n\nThere is a problem here for the workbench API bringToTop because the java doc \nstates it will make the view visible but will not change the active part. But \nfor a fast view to be made visible, it needs to be the active part (i.e have \nfocus), otherwise it will hide itself. This code needs to be updated to better \nhandle fast view.\n\nThe next problem is related to the first. When the Preview view is closed, in \nthe hideView method, it detects it is the active view, and therefore activates \nthe last view to be active (in this case, the Outline view). But when the \nOutline view becomes active, the selection change happens, causing the update \nplugin to call bringToTop for the Preview view, causing the Preview fast view \nto become active again. Then the hideView() method continues to dispose of the \nPreview view. However, the page still has the Preview view as the active one. \nOnce the other view is activated, the Preview view will bomb.\n\nChanging the hideView method this close to release 2.0 is too risky. We will \nvery likely introduce other problems or cause other plugins to behave \ndifferently. This fix is being delayed until after release 2.0 when more \nthought can be given to this and what the consequences will be.\n\nPer Nick\u0027s request, I\u0027ve opened another problem report (bug 19631) against the \nupdate plugin to stop calling bringToTop during a selection change event.",
    "Reopened for investigation",
    "My recommendation is to change the documentation for IWorkbenchPage.bringToTop \nto say that it will set focus if the view happens to be a fast view.  To \naccomodate those people that might not want that effect, we could added a \nbringToTop(IWorkbenchPart,boolean).  The boolean flag would indicate whether \nfast views should be affected by this call. \n \nI don\u0027t believe it is a realistic expectation to have a fast view open that \ndoes not have focus.  This seems wrong somehow.... ",
    "Moving to Nick Edgar, as he owns ViewMgmt.  Adding MVM and Billy to the CC as \nthey own Workbench. ",
    "In the latest from head, bringToTop for a view will give it focus if it\u0027s in the\nsame stack as the active view, but will have no effect if it\u0027s a fast view.",
    "Re: comment 14\n\nWhile this change fixes the exception, I\u0027m not sure if it makes sense. After\ntalking with Doug and Kim, we\u0027ve identified 4 operations you might want to do on\na part.\n\n1. Activate (Always make visible and give focus)\n2. Make visible (Always make visible. Unzoom and change focus only if necessary)\n3. Draw attention (Make visible if possible, but not if doing so affects zoom or\nfocus).\n4. Create (Add to the layout but do not change zoom, focus, or the visibity of\nany other parts.).\n\nWe believe that editors and views should both have open methods that accept all\nfour flags, and that the existing workbench APIs should all be classified into\none of these behaviors.\n\nopenEditor(..., true) \u003d activate\nopenEditor(..., false) \u003d make visible\n\nshowView(String) \u003d activate\n\nshowView(..., VIEW_ACTIVATE) \u003d activate\nshowView(..., VIEW_VISIBLE) \u003d draw attention\nshowView(..., VIEW_CREATE) \u003d create\n\nbringToTop() \u003d make visible?\n\nIf we decide to give bringToTop the \"make visible\" behavior, then the code\nshould be updated to unzoom if necessary and to permit opening of fast views (it\nWILL set focus).\n\nIf we decide to give bringToTop the \"draw attention\" behavior, then we should\nupdate the code to turn it into a no-op if the page is zoomed or the part is in\nthe active stack.\n\nThoughts?",
    "This makes sense to me.  bringToTop should be a \"make visible\" operation.\n\nShouldn\u0027t VIEW_VISIBLE really be \"make visible\" instead of \"draw attention\"?\nI think this was discussed in another PR, but I don\u0027t recall what the upshot was.\n\nIn lieu of API changes for 3.1, I suggest we just fix the bringToTop behaviour,\nand clarify the Javadoc.\n",
    "Re: comment 16\n\nYes, I filed bug 91775 because I believed this to be the case. However, after\ntalking this over with Kim I now believe otherwise. I will try to paraphrase\n(Kim, please correct me if I\u0027m wrong):\n\n1. People use the VIEW_VISIBLE flag in situations where they want to draw\nattention to a view if possible, but want to guarantee that they never steal focus.\n2. This was the original intention of the VIEW_VISIBLE flag, even if the\nconstant name was poorly chosen.\n3. Stealing focus from the user is really annoying. No API should ever do this\nunless the JavaDoc is really clear that that\u0027s what will happen.\n\n\nI believe that these arguments apply to bringToTop and openEditor(..., false) as\nwell, and that all three should have the current \"draw attention\" behavior of\nVIEW_VISIBLE.\n\nThat is:\n\nbringToTop() \u003d draw attention\nopenEditor(..., false) \u003d draw attention\n\n\nNote that this is not a breaking change: the treatment of openEditor(..., false)\nand bringToTop() is undocumented when used on a part in the active stack... and\nup until the recent workbenchpage refactoring this scenario would put the\nworkbench in an invalid state. (In other words, it is not possible for a client\nto be relying on the difference between \"make visible\" and \"draw attention\"\nbecause this scenario never worked before).\n",
    "We should invistigate what happened in 3.0 and it seems that bringtotop should\nhave an effect on fastviews.  If the fix is not risky we need to get another\ncomponent lead to approve.",
    "Stefan, I\u0027m not sure what the right answer is here.\nWould you be able to help?\n",
    "adding Mike Wilson to approve.   \n\n\nJust talked with Stefan and we decided that we should put back the 3.0 behaviour\nof bringToTop() for fast views.  The reason is that you could say we have a\nregression where users would have previously noticed a view (although activation\nin fastviews might be overkill) changing or being brought to front and now the\ncall to bringToTop will have no effect and introduce mysterious scenarious from\n3.0.  \n\nIn future we need to revisit this area in the context of bringToTop, showView\nand also the view changed (Tab bolding and italisizing) to provide consistent\nbehaviour.  Fastviews should not take focus when bringToTop is called, this is a\nbug I can live with for 3.1 however.",
    "Re: comment 20\n\nJust to clarify, we agreed to temporarily bring back the 3.0 behavior of\nrevealing and setting focus in fast views - not to reveal the fast view without\nsetting focus (which would be an invalid state).\n",
    "Moving to 3.1 RC4.",
    "to be reviewed June 21, need to investigate this today, I think the thing to do\nwill be to push this to the 3.1.1 release.",
    "bringToTop currently works with fast views providing there is an editor open.  It\u0027s the case when there are \nno editors open that it fails.  I have a very simple patch that will cause it to work in the no-editor case but \nI am not at all confident in it.  The activation stuff is far to subtle and I\u0027m not convinced that the patch is \notherwise harmless.  Stefan is the only one who understands this stuff enough to know if this is safe - \nwithout his approval I would hold off putting this in for 3.1",
    "Created an attachment (id\u003d23644)\nPatch against org.eclipse.ui.workbench\n\nThe problem in the no editor case is that we were checking the fast view part\ncontainer (null) to see if it was the same as the currently active view\ncontainer (non null) and the currently active editor container (null).\tBecause\nthey were equal we acted as if we were bringing to top the editor area and the\nfast view was ignored.\tThis patch adds null checks against the part container.",
    "I\u0027ve gone and opened bug 101095 to specifically address the bringToTop() regression with regard to fast \nviews in 3.1.  I am removing the target for this bug as there was never any intention to fix it per se, just \nrestore 3.0 behavior.  Because we\u0027ve discovered the regression is fairly minor and only happens when \nthere is no editor open we\u0027re going to hold off on fixing it for 3.1.",
    "Removing milestone. ",
    "Reading all this makes my head hurt - does anyone on the CC list remember if there is a remaining issue to be addressed? Fast views are being phased out in favour of the new min/max support, bug 101095 has been closed, and the update manager views don\u0027t exist anymore. I\u0027ll close this bug as worksforme since I cannot reproduce it with 3.3, but feel free to reopen with a description of the issue that needs addressing."
  ],
  "commentCreationDates": [
    "2002-06-04T19:31:34+02:00",
    "2002-06-04T19:56:27+02:00",
    "2002-06-04T19:59:04+02:00",
    "2002-06-04T20:07:21+02:00",
    "2002-06-05T15:23:26+02:00",
    "2002-06-05T15:23:41+02:00",
    "2002-06-05T15:24:15+02:00",
    "2002-06-06T06:07:07+02:00",
    "2002-06-06T06:08:57+02:00",
    "2002-06-06T06:09:31+02:00",
    "2002-06-07T19:59:48+02:00",
    "2002-08-01T22:51:44+02:00",
    "2004-07-08T21:31:42+02:00",
    "2004-09-28T17:42:06+02:00",
    "2005-04-27T21:10:34+02:00",
    "2005-04-29T21:11:37+02:00",
    "2005-04-29T21:17:37+02:00",
    "2005-04-30T01:06:01+02:00",
    "2005-06-14T21:54:49+02:00",
    "2005-06-15T19:37:51+02:00",
    "2005-06-16T20:14:27+02:00",
    "2005-06-16T23:01:49+02:00",
    "2005-06-17T20:45:06+02:00",
    "2005-06-21T15:43:27+02:00",
    "2005-06-21T19:06:29+02:00",
    "2005-06-21T19:09:02+02:00",
    "2005-06-21T19:46:40+02:00",
    "2005-09-22T16:23:27+02:00",
    "2007-06-19T21:08:12+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Widget is disposed",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:1887"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.custom.CLabel.setBackground",
          "source": "CLabel.java:425"
        },
        {
          "method": "org.eclipse.ui.internal.ViewPane.drawGradient",
          "source": "ViewPane.java:352"
        },
        {
          "method": "org.eclipse.ui.internal.ViewPane.shellDeactivated",
          "source": "ViewPane.java:445"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$12.shellDeactivated",
          "source": "WorkbenchWindow.java:1338"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:159"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:841"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:846"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.WM_ACTIVATE",
          "source": "Decorations.java:1360"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.WM_ACTIVATE",
          "source": "Shell.java:1042"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.PeekMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1160"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:739"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:244"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:693"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:526"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "19144",
      "date": "2002-06-04T19:31:34+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Widget is disposed",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:1887"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getDisplay",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.custom.CLabel.setBackground",
          "source": "CLabel.java:425"
        },
        {
          "method": "org.eclipse.ui.internal.ViewPane.drawGradient",
          "source": "ViewPane.java:352"
        },
        {
          "method": "org.eclipse.ui.internal.ViewPane.showFocus",
          "source": "ViewPane.java:456"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.deactivatePart",
          "source": "WorkbenchPage.java:897"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.setActivePart",
          "source": "WorkbenchPage.java:2015"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.requestActivation",
          "source": "WorkbenchPage.java:1819"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.requestActivation",
          "source": "PartPane.java:332"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.handleEvent",
          "source": "PartPane.java:306"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:841"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:846"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.setActiveControl",
          "source": "Shell.java:757"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE",
          "source": "Shell.java:1117"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1343"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.PeekMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.PeekMessage",
          "source": "OS.java:1600"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1284"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1177"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1160"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:739"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:244"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:693"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:526"
        }
      ],
      "number": 1,
      "commentIndex": 3,
      "bugId": "19144",
      "date": "2002-06-04T20:07:21+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "19144",
  "bugId": "19144",
  "date": "2002-06-04T19:31:34+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}