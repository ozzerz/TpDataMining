{
  "comments": [
    "Thread [main] (Suspended (exception VerifyError))\t\n\tTransSecs.\u003cinit\u003e() line: 90\t\n\tTransSecs.main(String[]) line: 125\n\nLine 90 is this, so I assume that the error is in that class.\n    MessageEditorFrame frame \u003d  new MessageEditorFrame();\n\nI can provide the class files (is there no way to upload them?)",
    "Created an attachment (id\u003d49555)\nClasses (hopefully one that has a verify error).\n\n",
    "I\u0027d like to reproduce the VerifyError, but I miss some classes.\nRight now I need com.ergotech.transsecs.EditorFrame.\n\nSee the output:\nD:\\tests_sources\u003ejava com.ergotech.transsecs.secs.TransSecs\nException in thread \"main\" java.lang.NoClassDefFoundError: com/ergotech/transsecs/EditorFrame\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n        at java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\nI\u0027ll check the bytecodes.",
    "I don\u0027t see anything wrong.\nWhat VM are you using?\nCould you please provide all the .class files in order to run the test case myself?\n\nThanks.",
    "I\u0027ll see if I can get you something to run.  Of course this is not a simple project. I\u0027ll try and cut it down, but would expect that will eliminate the error.  JDK is 1.4.2_05, but it doesn\u0027t immediately give the error outside of eclipse debugging.  Any differences in the eclipse environment that may cause this?  This has been a problem with this project for a while and I\u0027ve been through all the obvious steps, cleaning, deleting classes, etc. etc., I\u0027ve just updated to 3.2 to see if the problem still exists).  Running with noverify runs the project, for a while at least, usually it hits another verify problem or gets a JVM fault.  Other projects, bigger and smaller all run within the same eclipse environment with, supposedly, the same settings.\n\nIn the meantime, here\u0027s the rest of the exception, in case the bytecode can yield more clues:\n\nException in thread \"main\" java.lang.VerifyError: (class: com/ergotech/transsecs/secs/MessageEditorFrame, method: loadProjectFile signature: (Ljava/lang/String;)V) Incompatible object argument for function call\n\tat com.ergotech.transsecs.secs.TransSecs.\u003cinit\u003e(TransSecs.java:90)\n\tat com.ergotech.transsecs.secs.TransSecs.main(TransSecs.java:125)\n\n  public void loadProjectFile (String fileName)  {\n    ...\n  }\n\nis in the class.\n\n\n",
    "We likely will also need the source for TransSecs.",
    "BTW - which build ID are you running ?",
    "Created an attachment (id\u003d49617)\nJava class\n\n",
    "Version: 3.2.0\nBuild id: M20060629-1905\n",
    "Trying to reproduce this in a smaller project I find the following.\n\n1) I can\u0027t reproduce it in a small project/workspace (even if I add a huge classpath similar to the full project classpath).\n2) If I strip the classpath in the main project/workspace the error goes away\n3) If I go back to the project default classpath the VerifyError reappears in a totally consistent way. \n4) Other applications run with the default project classpath (which is large) without a problem.\n\nGood news/bad news.  I can now run the app without a verify error and so the error is not a problem with code generation in the classes.\n\nFollowing through further, if you\u0027re interested in doing so, is going to be challenging.  If you can provide me a way to get the full path that is running the application I\u0027ll add jars singly until I find out where the problem lies and then update with info about what on the classpath causes the problem.\n",
    "Could you please try a newer VM?\n1.4.2 VM latest update is 1.4.2_12.\nIf you could attach a zip file that contain the complete test case that fails, it would be nice.\nIf you can\u0027t do it, because it is too big, let me know and we\u0027ll try to find another way to transfer the files.\nAre you sure that you don\u0027t have duplicate classes on the classpath?\n\nI am willing to help fixing this one, but I need a case I can reproduce and work with.\nThanks.",
    "Closing as REMIND.\nPlease reopen when requested information is available."
  ],
  "commentCreationDates": [
    "2006-09-06T23:32:44+02:00",
    "2006-09-06T23:33:57+02:00",
    "2006-09-07T03:23:57+02:00",
    "2006-09-07T03:29:31+02:00",
    "2006-09-07T06:16:16+02:00",
    "2006-09-07T15:46:06+02:00",
    "2006-09-07T15:46:31+02:00",
    "2006-09-07T15:59:33+02:00",
    "2006-09-07T18:09:15+02:00",
    "2006-09-07T20:08:41+02:00",
    "2006-09-08T00:54:42+02:00",
    "2006-09-08T21:57:10+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "com/ergotech/transsecs/EditorFrame",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:620"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:124"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:260"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "URLClassLoader.java:56"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:195"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:188"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:306"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:268"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "156443",
      "date": "2006-09-07T03:23:57+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: com/ergotech/transsecs/secs/MessageEditorFrame, method: loadProjectFile signature: (Ljava/lang/String;)V) Incompatible object argument for function call",
      "elements": [
        {
          "method": "com.ergotech.transsecs.secs.TransSecs.\u003cinit\u003e",
          "source": "TransSecs.java:90"
        },
        {
          "method": "com.ergotech.transsecs.secs.TransSecs.main",
          "source": "TransSecs.java:125"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "156443",
      "date": "2006-09-07T06:16:16+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "156443",
  "bugId": "156443",
  "date": "2006-09-06T23:32:44+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}