{
  "comments": [
    "To me this is a blocker.\n\nEclipse 3.1.1 Windows XP 2002 edition Service Pack 1\nJRE \u003d JDK 1.4.2.03\n\nSource code is maintained in Clearcase but the jar file causing the problem is \nnot.\n\n\nProblem description (Parts of this may be truncated to preserve client \nconfidentiality. Hopefully it still gives enough information)\n\nMy main project defines an interface \"ICall\"\n\nI am referencing an external Jar file that holds a compiled class (I do not \nhave the source. I do not generate the jar file.) and that class implements \nICall\n\nWhen I try to call Class.forname on the fully qualified path name of the class\nI get an error saying that  ICall cannot be found. \n\nIn fact the error arises for any class in the same package of the jar file\n\nIf I try to call Class.forName on ICall then ICall is found.\n\nOther team members with apparently identical setups (in particular the same jar \nfile) do not get this problem which leads me to suspect my Eclipse settings are \nsubtly wrong, a fact I would regard as potentially a bug in the documentation. \nMY other suspicion is a classloader issue.\n\nSince more information may be more helpful than less here is the relevant \nsourcecode\n\nICall Definition\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage com.mot.cpa.api;\npublic interface ICall\n{\npublic Object execute(ICpaObject cpaObject, IContext context) throws Throwable;\n}\n\nClass called in the external jar file (decompiled)\n\n// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.\n// Jad home page: http://www.kpdus.com/jad.html\n// Decompiler options: packimports(3) \n// Source File Name:   SaalLink2025.java\n\npackage rules.rnc_r3_im5.transportdiagram.transportclasses;\n\nimport com.mot.cpa.api.*;\n\npublic class SaalLink2025\n    implements ICall\n{\n\n    public SaalLink2025()\n    {\n    }\n\n    public Object execute(ICpaObject self, IContext ctx)\n        throws Throwable\n    {\n       // code trivial but removed  as irrelevant\n    }\n}\n\nSimple test code that shows the problem in my set up\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n\tpublic static void main(String[] args) throws SQLException\n\t{\n// \tpublic MRule(long id, MClass cls, String sConstraint, String \nsErrorText) throws SQLException\n\n\t\ttry{\n\tClass cls \u003d Class.forName\n(\"rules.rnc_r3_im5.transportdiagram.transportclasses.SaalLink2010\");\n\tSystem.out.println(\" found ICall OK\");\n\t\t}\n\t\tcatch(java.lang.ClassNotFoundException e){\n\t\tSystem.out.println(\"ClassNotFoundException in main()\");\n\n\t\t}\t\t\n\t}\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nThe message above (\"ClassNotFoundException in main()\") is not printed. \nHere is the program\u0027s  program\u0027s stack trace ( the only information printed)\n\njava.lang.NoClassDefFoundError: com/mot/cpa/api/ICall\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:537)\n\tat java.security.SecureClassLoader.defineClass\n(SecureClassLoader.java:123)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:251)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:55)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:194)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:187)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:289)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:282)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:141)\n\tat com.mot.cpa.MRule.main(MRule.java:183)\nException in thread \"main\"\n\nJar File Manifest\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nManifest-Version: 1.0\nCreated-By: 1.4.2_03 (Sun Microsystems Inc.)\n\n\n\n\n\nMy own Investigations\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n1. Clean workspace, restart Eclipse\n2. Verify class file for Icall exists and is where expected and decompiles \ncorrectly\n3. Place debug point at the call to defineClass() in the JRE and found  the \ncode went a lot of places that I had never seen before rather than producing an \nimmediate exception:\n\n4. Verified fellow workers with apparently identical setups are not having this \nproblem\n\n5. Deleted and recreated project completely\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nWhile I would be highly embarassed to find this was a simple error creating  \nand configuring the project I would take consolation in the fact this problem \nhas got three  experienced developers puzzled and failed to yield to standard \ntroubleshooting techniques",
    "Are the external JAR file and the ICall interface on the project\u0027s build path? \nThis is configured by right clicking on the project and selecting Properties \u003e\nJava Build Path. If ICall is in your project, it must be in a source folder\n(\"Source\" tab). The external JAR should be listed on the \"Libraries\" tab.\n\nHere is another test you can do.  Launch your main program from Eclipse. Right\nclick the process in the debug view, and select \"Properties\". From there you can\nsee the exact Java command line that was used to launch the program.  The only\nrelationship between Eclipse and the Java VM running your program is that\nEclipse builds the command line, and particularly the classpath, that is passed\nto the VM.  You can inspect the classpath from this properties page to make sure\nthat it was set correctly.",
    "Closing at originator\u0027s request. This was a JRE problem on their end."
  ],
  "commentCreationDates": [
    "2005-11-07T16:16:15+01:00",
    "2005-11-09T14:40:59+01:00",
    "2005-11-09T15:46:12+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "com/mot/cpa/api/ICall",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:537"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:123"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:251"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "URLClassLoader.java:55"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:194"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:187"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:289"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:282"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:274"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:235"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:302"
        },
        {
          "method": "java.lang.Class.forName0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Class.java:141"
        },
        {
          "method": "com.mot.cpa.MRule.main",
          "source": "MRule.java:183"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "115332",
      "date": "2005-11-07T16:16:15+01:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "blocker"
    }
  ],
  "groupId": "115332",
  "bugId": "115332",
  "date": "2005-11-07T16:16:15+01:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "blocker"
}