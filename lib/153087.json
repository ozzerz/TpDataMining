{
  "comments": [
    "I have a simple project that is configured to use a 1.4 JRE.  However, when I try to run the project\u0027s unit tests, they won\u0027t run.  Apparently the JUnit Test Runner jar that comes bundled with 3.2 contains 1.5-level class files, and so cannot run under a 1.4 VM.  The ouptut I get is this:\n\n\u003cterminated\u003e unit [JUnit] /usr/local/java/jdk1.4/bin/java (Aug 8, 2006 10:08:41 AM)\n\nException in thread \"main\" java.lang.UnsupportedClassVersionError: org/eclipse/jdt/internal/junit/runner/RemoteTestRunner (Unsupported major.minor version 49.0)\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:539)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:251)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:55)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:194)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:187)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:289)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)\n\nI\u0027m using Eclipse 3.2 (release) running on JDK 1.5.\n\nMy .classpath file looks like this:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cclasspath\u003e\n\t\u003cclasspathentry kind\u003d\"src\" path\u003d\"src\"/\u003e\n\t\u003cclasspathentry output\u003d\"test_classes/unit\" kind\u003d\"src\" path\u003d\"test_src/unit\"/\u003e\n\t\u003cclasspathentry kind\u003d\"con\" path\u003d\"org.eclipse.jdt.launching.JRE_CONTAINER\"/\u003e\n\t\u003cclasspathentry sourcepath\u003d\"ECLIPSE_HOME/plugins/org.eclipse.jdt.source_3.1.0/src/org.junit_3.8.1/junitsrc.zip\" kind\u003d\"var\" path\u003d\"JUNIT_HOME/junit.jar\"/\u003e\n\t\u003cclasspathentry kind\u003d\"output\" path\u003d\"classes\"/\u003e\n\u003c/classpath\u003e\n\nI hope there\u0027s a fix for this, because this is a big loss of backwards compatibility.\n\nThanks,\n\nDR",
    "Are you sure you\u0027re using a JUnit 3 test runner (first tab of launch configuration)?",
    "If you read carefully through the info I provided in the bug report, you\u0027ll see the answer is that I am.  (3.8.1, to be specific.)",
    "JUnit 3 does not contain any 1.5 level classes, that\u0027s why I wanted to verify (you only gave your project classpath but you can use a different Test runnner in your launch config...)\n\nBTW, your project is configured to use a JRE 1.4, but what about its compliance?\nIt must be *explicitely* set to 1.4 as you started eclipse using an 1.5 VM (default compliance level is 1.5).",
    "Created an attachment (id\u003d47539)\nEclipse project demonstrating this bug\n\nSet the project to use a 1.4 JRE, then try to run the JUnit test.  This will show the error.",
    "You are correct that Junit 3 doesn\u0027t contain any JDK1.5 classes.  But note that the error isn\u0027t getting thrown on a Junit class but rather on one of Eclipse\u0027s own classes:  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner\n\nThat\u0027s the class that\u0027s been compiled with JDK1.5 which JDK1.4 can\u0027t access.  I don\u0027t know exactly which jar that class resides in, but it looks as if it\u0027s somehow part of the JDT.\n\nAs far as which test runner I\u0027m launching, as far as I know I have not customized my launch config at all.  I\u0027m launching the test by finding the test class in the Package Explorer, right-clicking on it, and then selecting Run as -\u003e Junit Test.\n\nRunning a test this way automatically adds a new JUnit launch config.  When I went and looked at the launch config that got added, it looks like it\u0027s set to use test runner \"Junit 3\".\n\nAnd my compiler compliance level is set to 1.4.\n\nI\u0027ve attached a sample eclipse project that demonstrates this problem.  If you configure the project to use a 1.4 JRE, and then try to run the test, you should be able to re-create this problem.",
    "It works perfectly for me as soon as I set project\u0027s compliance to 1.4.\n\nI\u0027m not sure this is the case for your project as there\u0027s no .settings sub-directory in the example you provided. Please verify that your project has really its compliance set to 1.4 and clean it to be sure that the classes are recompiled with the correct level of JDK.",
    "Created an attachment (id\u003d47578)\nScreen shot of project (and workspace) compliance level set to 1.4\n\n",
    "1) Duh.  Yes, of course my compliance level is set for 1.4.  (See attachment.)\n\n2) I\u0027m glad that it works for you, but it still doesn\u0027t work for me.  So this is still a problem, IMO.  I\u0027d really appreciate it if rather than just closing the bug, which doesn\u0027t help me get to the cause of what is obviously a problem in my Eclipse install, you could assist figuring out why this is breaking.  This might actually be a real bug, you know.  We won\u0027t know if it is or isn\u0027t if you just close it and dismiss it.\n\n3) Do you have your project set to use a 1.4 VM?  And are you using the release version of Eclipse 3.2 or a different version?  Maybe your workspace config and/or project settings and/or the version of Eclipse that you\u0027re using is preventing you from being able to recreate this.",
    "(In reply to comment #8)\n\u003e 1) Duh.  Yes, of course my compliance level is set for 1.4.  (See attachment.)\n\u003e\nOK. Then did you do a clean build of your project?\n\n\u003e 2) I\u0027m glad that it works for you, but it still doesn\u0027t work for me.  So this\n\u003e is still a problem, IMO.  I\u0027d really appreciate it if rather than just closing\n\u003e the bug, which doesn\u0027t help me get to the cause of what is obviously a problem\n\u003e in my Eclipse install, you could assist figuring out why this is breaking. \n\u003e This might actually be a real bug, you know.  We won\u0027t know if it is or isn\u0027t\n\u003e if you just close it and dismiss it.\n\u003e \nSet the bug as WORKSFORME does not mean the end of the discussion. Just my current evaluation of the problem. I may be wrong but with the information you provided at this time, we cannot say it\u0027s a bug. Note also that we often run tests with this configuration and never have this kind of issue.\n\n\u003e 3) Do you have your project set to use a 1.4 VM? \nYes\n\n\u003e And are you using the release version of Eclipse 3.2 or a different version?\n3.2 but also done this test with 3.2.1 and 3.3, all work fine\n\n\u003e Maybe your workspace config and/or project settings and/or the version of \n\u003e Eclipse that you\u0027re using is preventing you from being able to recreate this.\n\u003e \nSurely, but I would say that it\u0027s more in your land that the problem is. We never had troubles with this configuration and no other user complains about similar problem.\n\nOK, now trying to find a solution...\nNote that running eclipse with a JDK 1.5 works well but it\u0027s not recommended. So, the first try I want you to do is to close your eclipse session and restart it using a JDK 1.4. Then, do a clean of all projects in your workspace.  Then please let me know if you still get the problem.",
    "Another try you can do is run your comment 4 simple test case in Debug mode and put a breakpoint on UnsupportedClassVersionError. Then you\u0027ll get the name of the offending class and perhaps have a chance to better understand what\u0027s the problem there...",
    "I already know the name of the offending class.  (And I already wrote that here in the bug report.)  It\u0027s an Eclipse JDT class:  org.eclipse.jdt.internal.junit.runner.RemoteTestRunner ; it\u0027s not one of my classes!\n\nI don\u0027t think you\u0027re really listening to the problem I\u0027m describing:  the remote test runner built into the Eclipse JDT cannot run under JDK 1.4.  Whichever Eclipse developer built that JDT class and jar file that is in the release built it with a target of 1.5.\n\nAs a result, there is no way to launch JUnit tests from a project using JDK1.4, in conjunction with Eclipse 3.2 (running on JDK 1.5).\n",
    "FYI - I found a workaround for this:  set my default JRE in Eclipse to JDK1.5.  However, I shouldn\u0027t be forced to do this, since according to everything I\u0027ve read Eclipse 3.2 should not require JDK1.5 to run.  But evidently it does.\n\nAgain, I\u0027m running, Eclipse 3.2 under JDK 1.5.\n\nWhen I have my default JRE set to 1.4, I can\u0027t run any JUnit tests.\n\nWhen I change my default JRE to 1.5, the problem goes away.\n\nOf course, once I switch the JRE to 1.5, I\u0027m then forced to manually update any 1.4-specific projects to point them to 1.4.\n\nAgain, this shouldn\u0027t be necessary, and I\u0027d imagine this is a bug that needs to be fixed since I don\u0027t think Eclipse 3.2 requires 1.5 to run properly - and neither should require that your default JRE be set to 1.5 for it to run properly either.\n\n\nGiven this latest information, it should be very easy for you to recreate this bug:\n\n* run Eclipse 3.2 under JDK 1.5\n* set your default JRE to 1.4\n* try to run the sample project I attached\n* see it crash trying to load RemoteTestRunner\n",
    "I still cannot reproduce even with your last steps...\n\nHere my detailed ones (including all yours):\n1) Start eclipse 3.2 using a 1.5 VM on a brand new workspace\n2) Open preferences dialog, go to Java -\u003e Installed JREs page\n3) Add a 1.4.2 JRE and set it as default, click OK\n4) Create a new Java Project \u0027b153087\u0027\n5) Set project compiler settings compliance to 1.4, answer yes for full rebuild\n   and click OK\n6) Import the sources of the comment 4 sample project\n7) Fix compiler error in TestDemo by using QuickFix on TestCase error:\n   \"Add JUnit 3.8.1 to the build path\"\n8) Select TestDemo and click on popup menu item \"Run As-\u003eJUnit test\"\n   \u003d\u003e got no problem to run it although my default JRE was 1.4!\n\nI think I do not understand your problem because you seem to have a really\nstrange and bad configuration there. FYI, since 3.0 eclipse plugins are\ncompiled using 1.4 compliance and JDK 1.4, so how can you get an JDT/UI\ninternal class with 49.0 as major minor version number (ie. 1.5 target)!!?? \n\nWhat is the version of the org.eclipse.jdt.junit.runtime plugin loaded in your\nworkspace? Is it 3.2.0.v20060605-1400 or something else? What is your exact\nbuild ID? Did you recompile any of eclipse plugins source or imported them as\nsource in the workspace where the problem occurs?\n\nMove to JDT/UI even if I cannot reproduce but perhaps they will understand more rapidly your problem than I do... Sorry guys, but it seems that I need some help here as I can\u0027t see something which may be obvious in this problem, thanks",
    "Hmmmm .... very weird!\n\nFirst off, re: your list of steps to re-create, there\u0027s one that is not the same as my setup:  #5.  I don\u0027t set the *project* compliance settings to 1.4.  Rather my compliance settings are set workspace-wide to 1.4, and all of my projects inherit this and don\u0027t override it.  Don\u0027t know if that makes a difference or not.\n\nAlso, I\u0027m running on Linux; don\u0027t know if you\u0027re on Windows or not.\n\nYou definitely do understand the problem; you\u0027re just not able to recreate it on your machine for some reason.  Very weird.\n\nMy only guess is this:  although you say that the plugins are all compiled using 1.4, I think *some*how one of the plugins I\u0027m using was built to 1.5.  I\u0027m not sure how or why yet.\n\n\nRe:  \"What is the version of the org.eclipse.jdt.junit.runtime plugin loaded in your workspace?\":\n\n3.2.0.v20060605-1400\n\n\nRe: \"What is your exact build ID?\":\n\nBuild id: M20060629-1905\n\n\nRe: \"Did you recompile any of eclipse plugins source or imported them as\nsource in the workspace where the problem occurs?\":\n\nNo.  I didn\u0027t build any myself.  They either came install with my Linux distro\u0027s Eclipse package (http://archlinux.org/packages/3714/) or I installed them via Eclipse\u0027s plugin installation system via an update URL.  (e.g., the JST and WST projects)\n\n\nThanks very much for taking the time to look into this!",
    "Do you have \u0027org.eclipse.jdt.junit.runtime\u0027 in your workspace? Or just in your installation?\nIf you have the plugin in your workspace, it will be preferred to the one in the installation. So make sure it is also correctly build (with the 1.4 default compliance settings or less).\n\nDid you try to follow Frederic steps (new workspace). Did you still see the same bug? Please make sure you\u0027re not fooled by bug 152384. So best go first on the Instaled JRE page, before looking at the compliance page.\n\n",
    "I\u0027ve done the comment 13 scenario on a Linux box and changing step 5 by setting workspace compiler instead of project one. I still got no error while running TestDemo as JUnit test...\n",
    "Sheesh!  Weird that nobody can re-create this!  Must be *some*thing on my system, but I have no idea what.\n\nRe: Martin\u0027s questions:\n\n\n\"Do you have \u0027org.eclipse.jdt.junit.runtime\u0027 in your workspace? Or just in your\ninstallation?\":\n\nUmmm ... I\u0027m not sure what you mean by this.  I assume that package came installed via an eclipse plugin.  I certainly haven\u0027t included it in any of the projects in my workspace.  (I have no need to.)  And there is no sub-directory called \"org.eclipse.jdt.junit.runtime\" in my workspace/.metadata/.plugins/\n\nIf I\u0027m misunderstanding what you\u0027re asking here, please clarify.\n\n\n\"Did you try to follow Frederic steps (new workspace). Did you still see the\nsame bug?\":\n\nNot yet.  I\u0027ll give that a try when I get a moment.\n\nPerhaps that might have something to do with it.  I didn\u0027t create a new workspace when upgrading to 3.2.  (I didn\u0027t think I needed to.  Do I?)\n\n\n\"Please make sure you\u0027re not fooled by bug 152384. So best go first on\nthe Instaled JRE page, before looking at the compliance page.\":\n\nWell I haven\u0027t added any new JRE\u0027s or changed any of the compliance settings since my upgrade to 3.2, and so they\u0027re all still set correctly.\n\nThanks,\n\nDR\n",
    "(In reply to comment #17)\n\u003e \"Do you have \u0027org.eclipse.jdt.junit.runtime\u0027 in your workspace? Or just in\n\u003e your installation?\":\n\u003e \n\u003e Ummm ... I\u0027m not sure what you mean by this.  I assume that package came\n\u003e installed via an eclipse plugin.  I certainly haven\u0027t included it in any of\n\u003e the projects in my workspace. [..]\nOK, you don\u0027t have it as a project in your workspace, so we can rule this out.\n\nI think the problem is in your version of eclipse. If I got comment 14 right, you have downloaded your Eclipse 3.2 from http://archlinux.org/packages/3714/ , and not from http://www.eclipse.org/downloads/ .\n\nIt looks like the maintainer of that package did not compile eclipse correctly (he e.g. writes\n\"Dependencies:\n   j2sdk\u003e\u003d1.5 \n   gtk2\", which is not true for the version supplied by eclipse.org.\n\nPlease try to reproduce with an Eclipse 3.2 from eclipse.org. If you also cannot reproduce there, then it\u0027s definitely a problem in archlinux\u0027s distribution, and you should contact the maintainer of that package, so he either fixes the problem or does not advertise the product as Eclipse 3.2.",
    "(In reply to comment #18)\n\u003e I think the problem is in your version of eclipse. If I got comment 14 right,\n\u003e you have downloaded your Eclipse 3.2 from http://archlinux.org/packages/3714/ ,\n\u003e and not from http://www.eclipse.org/downloads/ .\n\u003e \n\u003e It looks like the maintainer of that package did not compile eclipse correctly\n\u003e (he e.g. writes\n\u003e \"Dependencies:\n\u003e    j2sdk\u003e\u003d1.5 \n\u003e    gtk2\", which is not true for the version supplied by eclipse.org.\n\u003e \n\u003e Please try to reproduce with an Eclipse 3.2 from eclipse.org. If you also\n\u003e cannot reproduce there, then it\u0027s definitely a problem in archlinux\u0027s\n\u003e distribution, and you should contact the maintainer of that package, so he\n\u003e either fixes the problem or does not advertise the product as Eclipse 3.2.\n\u003e \n\n\nHuh!  I think you are correct.\n\nTake a look at this:\n\nhttp://cvs.archlinux.org/cgi-bin/viewcvs.cgi/devel/eclipse/eclipse-jdk5.patch?rev\u003d1.1\u0026cvsroot\u003dExtra\u0026only_with_tag\u003dCURRENT\u0026content-type\u003dtext/vnd.viewcvs-markup\n\nLooks like the Arch package gets built using 1.5 targets.\n\nOK, I\u0027ll follow up with the package maintainer.\n\nMy apologies for the long-winded thread.",
    "I need to reopen this bug, as it has become an issue once again.\n\nSince I first filed this bug, I started collaborating with the package maintainer on maintaining Arch Linux\u0027s eclipse package.\n\nThe package has been on version 3.2 for quite a while now, but now (at my urging) we\u0027re attempting to upgrade it from 3.2 to 3.3.1, and are running into this issue again.\n\nWe were able to solve this issue in the past by using JDK1.4 to build eclipse, but using the \"-java5home \u003cJDK5-DIR\u003e\" flag to point eclipse to the JDK5 directory when needed.\n\nHowever, it appears that the Eclipse 3.3.1 build file no longer accepts the \"-java5home\" flag.  As a result, we are no longer able to build eclipse using the JDK1.4/JDK5 hybrid strategy, and so once again the built package suffers from the same bug I originally filed:\n\nWhen I change a project\u0027s settings to use a 1.4 JDK, attempts to launch JUnit tests from that project always fail with UnsupportedClassVersionError.\n\n\nDoes anybody have any suggestions for me on how to fix this issue?  Why was the \"-java5home\" option removed from the build?  If that\u0027s no longer being used, then how can I build Eclipse in such a way that it fully supports JDK1.4 projects?  (I tried applying a patch which set \u003cproperty name\u003d\"javacSource\" value\u003d\"1.4\" /\u003e and \u003cproperty name\u003d\"javacTarget\" value\u003d\"1.4\" /\u003e in the build, but the package wouldn\u0027t build successfully that way.)\n\nTIA!\n",
    "(In reply to comment #20)\nSorry, the people CCd on this bug are not too familiar with how the releng scripts work. Please see\nhttp://wiki.eclipse.org/index.php/Platform-releng-faq and  http://wiki.eclipse.org/Platform-releng-sourcebuild for more information.\n\nIf you think the Eclipse build scripts have a bug, please file a new bug for Platform/Releng.\n\nEasiest would be of course if you could just consume the ready-made builds from http://www.eclipse.org/downloads/"
  ],
  "commentCreationDates": [
    "2006-08-08T16:29:43+02:00",
    "2006-08-08T16:37:10+02:00",
    "2006-08-08T16:49:26+02:00",
    "2006-08-08T18:13:44+02:00",
    "2006-08-08T18:41:17+02:00",
    "2006-08-08T18:41:48+02:00",
    "2006-08-08T23:17:20+02:00",
    "2006-08-09T00:11:42+02:00",
    "2006-08-09T00:15:10+02:00",
    "2006-08-09T09:53:40+02:00",
    "2006-08-09T15:41:19+02:00",
    "2006-08-09T16:46:28+02:00",
    "2006-08-09T17:16:25+02:00",
    "2006-08-09T17:49:47+02:00",
    "2006-08-09T18:11:02+02:00",
    "2006-08-10T12:50:39+02:00",
    "2006-08-10T13:24:22+02:00",
    "2006-08-10T15:33:48+02:00",
    "2006-08-10T16:14:56+02:00",
    "2006-08-10T16:47:30+02:00",
    "2007-10-10T17:38:31+02:00",
    "2007-10-16T14:26:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsupportedClassVersionError",
      "message": "org/eclipse/jdt/internal/junit/runner/RemoteTestRunner (Unsupported major.minor version 49.0)",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:539"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:123"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:251"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "URLClassLoader.java:55"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:194"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:187"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:289"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:274"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:235"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:302"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "153087",
      "date": "2006-08-08T16:29:43+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "153087",
  "bugId": "153087",
  "date": "2006-08-08T16:29:43+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "major"
}