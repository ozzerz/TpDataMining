{
  "comments": [
    "According to newsgroups posts, we don\u0027t work well with other 2.1 based editors\nthat are installed with WTP. \n\nSuspected reason is our initializing __dftPartioner instead of letting it return\nnull. \n\nWe\u0027ll investigate history of why we did that, and look to remove.",
    "Initializing _dftPartitioner to a NullPartitioner (which you described in the\nnewsgroup) doesn\u0027t explain what I see. It is obvious from the stack trace below\nyou have code which is actively trying to use the default partitioner.\n\nWe use a custom partitioner that does not support the version of\ndocumentChanged() you are calling. When it is called, an IllegalStateException\nis thrown. The trace shows who is calling it.\n\njava.lang.IllegalStateException: Old-style documentChanged() called\n\tat com.objfac.xmleditor.partition.Partitioner.documentChanged(Partitioner.java:174)\n\tat\norg.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.notifyDocumentPartitionersDocumentChanged(BasicStructuredDocument.java:465)\n\tat\norg.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent(BasicStructuredDocument.java:1180)\n\tat\norg.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.setText(BasicStructuredDocument.java:2500)\n\tat\norg.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.setText(JobSafeStructuredDocument.java:140)\n\tat\norg.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.set(BasicStructuredDocument.java:2358)\n\tat\norg.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.setDocumentContent(ResourceTextFileBuffer.java:511)\n\tat\norg.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.initializeFileBufferContent(ResourceTextFileBuffer.java:248)\n\tat\norg.eclipse.core.internal.filebuffers.ResourceFileBuffer.create(ResourceFileBuffer.java:238)\n\tat\norg.eclipse.core.internal.filebuffers.TextFileBufferManager.connect(TextFileBufferManager.java:99)\n\tat\norg.eclipse.pde.internal.builders.XMLErrorReporter.\u003cinit\u003e(XMLErrorReporter.java:68)\n\tat\norg.eclipse.pde.internal.builders.ManifestErrorReporter.\u003cinit\u003e(ManifestErrorReporter.java:30)\n\tat\norg.eclipse.pde.internal.builders.ExtensionsErrorReporter.\u003cinit\u003e(ExtensionsErrorReporter.java:39)\n\tat\norg.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkFile(ManifestConsistencyChecker.java:76)\n\tat\norg.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkThisProject(ManifestConsistencyChecker.java:44)\n\tat\norg.eclipse.pde.internal.builders.ManifestConsistencyChecker.build(ManifestConsistencyChecker.java:33)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)\n\tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:139)\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:200)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n",
    "Bob, the IDocumentPartitioner.documentChanged(boolean) method may have been\nreplaced according to the JavaDoc, but it still has to be implemented.",
    "No it doesn\u0027t. It\u0027s part of the contract with Eclipse that the new API always\ngets called if implemented, not just whenever Eclipse feels like it, and our\npartitioner cannot operate correctly unless called with the new API. Anyway, our\npartitioner isn\u0027t a service we\u0027re offering to the editing community, any more\nthan yours are; it\u0027s private to our editors.\n\nDavid has told me several times that you use the 3.0 API and no longer rely on\nthe default partitioner; why are you still calling it? Why do you refer to it in\nany way?",
    "I\u0027ve started looking into the maze of document partioning contracts, but offhand\nseems VERY old fashioned for us to calling to be calling documentChanged on\npartioners (pre 2.0!). At minimum, will change that to documentChanged2 for\nthose partioners that implement IDocumentPartitionerExtension. \n\nBut, have little confidence our StructuredDocument is honor \"partioner\ncontracts\" in general, so will attempt to sort out whole picture. \n",
    "There\u0027s some background material in Bug 71081.",
    "(In reply to comment #4)\n\u003e But, have little confidence our StructuredDocument is honor \"partioner\n\u003e contracts\" in general, so will attempt to sort out whole picture. \n\nLooks like you\u0027re right.\n\nI\u0027m pleased to report that after we (finally) adopted the 3.0 APIs, your editors\nno longer interfere with ours. (This version is not on the website yet, but if\nyou want one for testing I\u0027d be happy to mail one. IBM has already vetted our\nlicense.) Nor do the several other third-party editors that have been from time\nto time reported as conflicting. Even better news is, our editors actually work\nwhen the 3.0 APIs are used ;-} something that was certainly not true at 3.0\ntime. Whatever those pesky listener order problems were, they seem to have been\nironed out over the past year.\n\nBut your editors (that edit the same content types/extensions as ours) don\u0027t\nwork very well when ours (or any of the other third-party editors) are present.\nSince we no longer install a default partitioner, you no longer try to call it,\nbut you fail anyway with some variant of null pointer exception. Those of your\neditors that open show no syntax highlighting.\n\nThe only remaining conflict from our point of view is you sometimes win the\ndefault editor position (and sometimes not). Since default editor and icon\nchoice is another of Eclipse\u0027s essentially random APIs, I don\u0027t know if this is\nfixable. I do know that if a file is opened in a different editor than the\ndefault, the icon in the explorer/navigator is not changed to reflect the\nchoice. I will file a separate bug report on this.",
    "There\u0027s some more information in:\n\nhttp://jroller.com/page/bobk/20050716#making_nice_with_other_editors\n\nNot anything you don\u0027t know, probably, but I\u0027d appreciate knowing if there are\nany errors.",
    "Bob, I think your writeup is great ... we should follow it ourselves step by\nstep to see if we\u0027ve handled all as you have. \n\nAnd ... glad to hear we do not interfere when you use 3.0 API\u0027s. Now I\u0027m afraid\nto change anything, for our 0.7 release, even to documentChanged2, for fear of\nfinding new kinks in the interactions. \n\nSo, unless we find/hear of new reasons to, we\u0027ll leave this as is for now, but\ninfestigate further after 0.7 release. \n\nAs is our WTP convention, I am marking this major defect as \"P4\" just to\nindicate \"not in this release\". \n\n",
    "(In reply to comment #8)\n\u003e And ... glad to hear we do not interfere when you use 3.0 API\u0027s. \n\nNo, but we interfere with you! If a document gets created without a default\npartitioner, your editors tend to go belly-up.\n\n\u003e As is our WTP convention, I am marking this major defect as \"P4\" just to\n\u003e indicate \"not in this release\". \n\nThat\u0027s too bad. I was kind of hoping you\u0027d be inspired to fix the problem in\nthis release. But I have to agree, it\u0027s not a low-risk change.",
    "Moving back to appropriate priority now that 0.7 is released. ",
    "Bob, can you clarify your exception message\n\"IllegalStateException: Old-style documentChanged() called\"\n\nWas this just for diagnositics? \n\nMore to the point, are you expecting to get a certain kind of partioner from the\ndocument implementation? I\u0027ve realized as I\u0027ve looked into this, there\u0027s nothing\nreally in the contracts of IDocument and IPartioner that forces a\ncorrespondence,  that I can see. We can easily change to use documentChanged2\nAPI method, instead of documentChanged ... but ... not sure if that alone would\nhelp anything. \nI am, btw, talking about if it would help in 0.7.1 stream. We will fix for 1.0\nstream. \n\nSimilarly, would us leaving default partioner null in 0.7.1 stream help you any?\nOr are you beyond that now? From what I can tell, we could technically make the\nchange, but didn\u0027t want to risk accidently breaking anyone else, unless there\nwas a concrete known case this would solve. \n\nI do not think we\u0027ll be able to fix the TextFileDocumentProvider stuff for 0.7.1\nstream, thought still looking into that. I just wanted to ask explicitely about\nthe documentChanged2 and null default issue explicitly. \n\n",
    "It\u0027s not just for diagnostics. My partitioner won\u0027t work unless DocumentChanged2\nis called. But this should be a non-issue by now, as XMLBuddy (the version for\n3.1) no longer sets the default partitioner or uses it.\n\nAnd I hasten to add, neither should you! There is no risk of \"accidently\nbreaking anyone else\" by leaving the default partitioner null and never using\nit, but you will always have problems with legacy editors if you try to use\ntheir partitioners and will cause problems for legacy editors if you replace\ntheir partitioners with yours. Believe me, this will solve real problems for\nexisting third-party editors - though, as you know, it won\u0027t solve all the problems.",
    "For the record then, I\u0027ve put in changes to 0.7.1 stream (expect in M builds \u003e\n9/15) that ruturn null instead of NullPartitioner, and we call documentChanged2\nmethod on partioners instead of documentChanged. (in 0.7.1 stream, made sort of\nminimal changes, in 1.0 stream have removed the whole NullPartioner class, since\nnot used). \n\nAs Bob mentioned, there\u0027s a number of remaining issues about editor/document\ncapatibility, so, hope this change at least helps a little, but will leave this\nopen as we continue to investigate and fix issues. \n",
    "I\u0027ve opened bug 109470 to continue thracking this issues, so I can mark this one\nas \"done\" for 0.7.1 stream. While the fixes made won\u0027t fix all issues, we\nhopefully will interfere a little less with others, but need larger changes to \nfix whole editing and shared document story. \n\n\n",
    "Confirming as fixed. ",
    "(In reply to comment #15)\n\u003e Confirming as fixed. \n\nWhen? I\u0027d like to verify, too.\n\nIs there something other editor writers should know about how you fixed this?\n\n",
    "Just the minor things such as returning null, instead of NullPartioner. \n\nWe have not fixed ALL the problems, just the main one where we interfere with \n2.1 based editors. \n\nWe have not, yet, provided our own FileDocumentProvider which we need to do to stop other editors from interfering with us. \n\n",
    "This is part of a mass update to close out all stale WTP defects already verified by the reporter but awaiting closure by the assignee.  If you feel this defect was closed inappropriately, please reopen.\n\nThanks, John Lanuti"
  ],
  "commentCreationDates": [
    "2005-07-07T17:02:02+02:00",
    "2005-07-07T19:48:25+02:00",
    "2005-07-07T20:21:42+02:00",
    "2005-07-07T21:37:36+02:00",
    "2005-07-09T23:39:42+02:00",
    "2005-07-10T01:47:07+02:00",
    "2005-07-15T02:34:46+02:00",
    "2005-07-17T01:53:35+02:00",
    "2005-07-20T08:14:22+02:00",
    "2005-07-20T22:15:48+02:00",
    "2005-08-04T17:32:09+02:00",
    "2005-09-13T19:40:43+02:00",
    "2005-09-14T03:57:32+02:00",
    "2005-09-14T07:14:04+02:00",
    "2005-09-14T07:31:48+02:00",
    "2005-12-18T20:11:31+01:00",
    "2005-12-19T07:26:24+01:00",
    "2005-12-19T07:37:40+01:00",
    "2006-11-28T20:37:04+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Old-style documentChanged() called",
      "elements": [
        {
          "method": "com.objfac.xmleditor.partition.Partitioner.documentChanged",
          "source": "Partitioner.java:174"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.notifyDocumentPartitionersDocumentChanged",
          "source": "BasicStructuredDocument.java:465"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.fireStructuredDocumentEvent",
          "source": "BasicStructuredDocument.java:1180"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.setText",
          "source": "BasicStructuredDocument.java:2500"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.text.JobSafeStructuredDocument.setText",
          "source": "JobSafeStructuredDocument.java:140"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.text.BasicStructuredDocument.set",
          "source": "BasicStructuredDocument.java:2358"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.setDocumentContent",
          "source": "ResourceTextFileBuffer.java:511"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.initializeFileBufferContent",
          "source": "ResourceTextFileBuffer.java:248"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create",
          "source": "ResourceFileBuffer.java:238"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect",
          "source": "TextFileBufferManager.java:99"
        },
        {
          "method": "org.eclipse.pde.internal.builders.XMLErrorReporter.\u003cinit\u003e",
          "source": "XMLErrorReporter.java:68"
        },
        {
          "method": "org.eclipse.pde.internal.builders.ManifestErrorReporter.\u003cinit\u003e",
          "source": "ManifestErrorReporter.java:30"
        },
        {
          "method": "org.eclipse.pde.internal.builders.ExtensionsErrorReporter.\u003cinit\u003e",
          "source": "ExtensionsErrorReporter.java:39"
        },
        {
          "method": "org.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkFile",
          "source": "ManifestConsistencyChecker.java:76"
        },
        {
          "method": "org.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkThisProject",
          "source": "ManifestConsistencyChecker.java:44"
        },
        {
          "method": "org.eclipse.pde.internal.builders.ManifestConsistencyChecker.build",
          "source": "ManifestConsistencyChecker.java:33"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:593"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:202"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:231"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:234"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:253"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:282"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:139"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:200"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "103022",
      "date": "2005-07-07T19:48:25+02:00",
      "product": "Web Tools",
      "component": "wst.xml",
      "severity": "major"
    }
  ],
  "groupId": "103022",
  "bugId": "103022",
  "date": "2005-07-07T17:02:02+02:00",
  "product": "Web Tools",
  "component": "wst.xml",
  "severity": "major"
}