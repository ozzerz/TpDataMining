{
  "comments": [
    "Build ID: I20070503-1400\n\nSteps To Reproduce:\nTry the code below which is testing the Grid control along with the GridViewer and with editing support enabled.\n\nWhen trying to traverse a grid row using keyboard, on right-key on the last column, I get a NPE.\n\nException in thread \"main\" java.lang.NullPointerException\n\tat org.eclipse.nebula.widgets.grid.Grid.onKeyDown(Grid.java:6191)\n\tat org.eclipse.nebula.widgets.grid.Grid.access$4(Grid.java:5877)\n\tat org.eclipse.nebula.widgets.grid.Grid$6.handleEvent(Grid.java:5214)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:962)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:947)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:975)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:971)\n\tat org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1570)\n\tat org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3984)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3693)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:4342)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2259)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3282)\n\nthanks,\nGirish\n\n-----\npublic class TestGrid {\n\tpublic TestGrid(final Shell shell) {\n\t\tfinal GridViewer gv \u003d new GridViewer(shell, SWT.BORDER | SWT.FULL_SELECTION);\n\t\tgv.getGrid().setLinesVisible(true);\n\t\tgv.getGrid().setHeaderVisible(true);\n\t\tgv.getGrid().setCellSelectionEnabled(true);\n\t\tgv.getGrid().setRowHeaderVisible(true);\n\t\t\n\t\tColumnViewerEditorActivationStrategy actSupport \u003d new ColumnViewerEditorActivationStrategy(gv) {\n\t\t\tprotected boolean isEditorActivationEvent(\n\t\t\t\t\tColumnViewerEditorActivationEvent event) {\n\t\t\t\treturn event.eventType \u003d\u003d ColumnViewerEditorActivationEvent.TRAVERSAL\n\t\t\t\t|| event.eventType \u003d\u003d ColumnViewerEditorActivationEvent.MOUSE_DOUBLE_CLICK_SELECTION\n\t\t\t\t|| (event.eventType \u003d\u003d ColumnViewerEditorActivationEvent.KEY_PRESSED \u0026\u0026 event.keyCode \u003d\u003d SWT.CR)\n\t\t\t\t|| (event.eventType \u003d\u003d ColumnViewerEditorActivationEvent.KEY_PRESSED \u0026\u0026 event.keyCode \u003d\u003d SWT.F2)\n\t\t\t\t|| event.eventType \u003d\u003d ColumnViewerEditorActivationEvent.PROGRAMMATIC;\t\t\t\t\n\t\t\t}\n\t\t};\n\t\tactSupport.setEnableEditorActivationWithKeyboard(true);\n\t\t\n\t\tGridViewerEditor gvd \u003d new GridViewerEditor(gv, actSupport, ColumnViewerEditor.TABBING_HORIZONTAL\n\t\t\t\t| ColumnViewerEditor.TABBING_MOVE_TO_ROW_NEIGHBOR\n\t\t\t\t| ColumnViewerEditor.TABBING_VERTICAL | ColumnViewerEditor.KEYBOARD_ACTIVATION);\n\t\tgv.setColumnViewerEditor(gvd);\n\t\t\n\t\tfinal TextCellEditor textCellEditor \u003d new TextCellEditor(gv.getGrid());\n\t\t\n\t\tGridViewerColumn nameCol \u003d new GridViewerColumn(gv, SWT.NONE);\n\t\tnameCol.getColumn().setMoveable(true);\n\t\tnameCol.getColumn().setText(\"Name\");\n\t\tnameCol.getColumn().setWidth(100);\t\t\n\t\tnameCol.setLabelProvider(new ColumnLabelProvider() {\n\t\t\tpublic String getText(Object element) {\n\t\t\t\treturn ((MyModel)element).name;\n\t\t\t}\n\t\t});\t\t\n\t\tnameCol.setEditingSupport(new EditingSupport(gv) {\n\t\t\t@Override\n\t\t\tprotected boolean canEdit(Object arg0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected CellEditor getCellEditor(Object arg0) {\n\t\t\t\treturn textCellEditor;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected Object getValue(Object element) {\n\t\t\t\treturn ((MyModel)element).name;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void setValue(Object element, Object value) {\n\t\t\t\t((MyModel)element).name \u003d (String)value;\n\t\t\t\tgv.update(element, null);\n\t\t\t}\t\t\t\n\t\t});\n\t\t\n\t\tGridViewerColumn valueCol \u003d new GridViewerColumn(gv, SWT.NONE);\n\t\tvalueCol.getColumn().setMoveable(true);\n\t\tvalueCol.getColumn().setText(\"Value\");\n\t\tvalueCol.getColumn().setWidth(200);\t\t\n\t\tvalueCol.setLabelProvider(new ColumnLabelProvider() {\n\t\t\tpublic String getText(Object element) {\n\t\t\t\treturn ((MyModel)element).value;\n\t\t\t}\n\t\t});\t\t\n\t\t\n\t\tvalueCol.setEditingSupport(new EditingSupport(gv) {\n\t\t\t@Override\n\t\t\tprotected boolean canEdit(Object arg0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected CellEditor getCellEditor(Object arg0) {\n\t\t\t\treturn textCellEditor;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected Object getValue(Object element) {\n\t\t\t\treturn ((MyModel)element).value;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void setValue(Object element, Object value) {\n\t\t\t\t((MyModel)element).value \u003d (String)value;\n\t\t\t\tgv.update(element, null);\n\t\t\t}\t\t\t\n\t\t});\n\t\n\t\tgv.setContentProvider(new IStructuredContentProvider() {\n\t\t\t@Override\n\t\t\tpublic Object[] getElements(Object arg0) {\n\t\t\t\treturn (MyModel[])arg0;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void dispose() {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void inputChanged(Viewer arg0, Object arg1, Object arg2) {\n\t\t\t}\n\t\t});\n\t\t\n\t\tgv.setInput(createModel());\n\t}\n\n\tprivate MyModel[] createModel() {\n\t\tMyModel[] elements \u003d new MyModel[10];\n\t\t\n\t\tfor( int i \u003d 0; i \u003c 10; i++ ) {\n\t\t\telements[i] \u003d new MyModel(\"Name \" + i , \"Value\"+i);\n\t\t}\n\t\t\n\t\treturn elements;\n\t}\n\tpublic static void main(String[] args) {\n\t\tDisplay display \u003d new Display();\n\t\tShell shell \u003d new Shell(display);\n\t\tshell.setLayout(new FillLayout());\n\t\tnew TestGrid(shell);\n\t\tshell.open();\n\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\n\t\tdisplay.dispose();\n\t}\n\t\n\tpublic class MyModel {\n\t\tpublic MyModel(String name, String value) {\n\t\t\tthis.name \u003d name;\n\t\t\tthis.value \u003d value;\n\t\t}\n\t\tpublic String name, value;\n\t}\n}\n-----\n\nMore information:\nUsing Eclipse 3.3 M7",
    "Fixed.  Thanks for the report.  Will be included in tonights nightly build."
  ],
  "commentCreationDates": [
    "2007-05-06T12:17:42+02:00",
    "2007-05-07T17:04:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid.onKeyDown",
          "source": "Grid.java:6191"
        },
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid.access$4",
          "source": "Grid.java:5877"
        },
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid$6.handleEvent",
          "source": "Grid.java:5214"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:962"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:947"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:975"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:971"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmKeyDown",
          "source": "Widget.java:1570"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_KEYDOWN",
          "source": "Control.java:3984"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3693"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4342"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:2259"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3282"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "185677",
      "date": "2007-05-06T12:17:42+02:00",
      "product": "Nebula",
      "component": "Grid",
      "severity": "normal"
    }
  ],
  "groupId": "185677",
  "bugId": "185677",
  "date": "2007-05-06T12:17:42+02:00",
  "product": "Nebula",
  "component": "Grid",
  "severity": "normal"
}