{
  "comments": [
    "I wrote the following simple test class:\n\n---\n\npackage set.up.test;\n\nimport junit.framework.Test;\nimport junit.framework.TestCase;\n\npublic class SomeTest extends TestCase {\n\n    protected void setUp() throws Exception {\n        super.setUp();\n    }\n\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n\n    public final void testFoo() {\n        assertFalse(true);\n    }\n\n    public static Test setUpTest(Test someTest) {\n        return new SomeTest();\n    }\n\n\n}\n\n---\n\nIf I run the JUnit Test, the test \"testFoo\" will fail.\n\nAfter running the whole test, I choose (context menu on failed test in JUnit\nview) to run the individual test \"testFoo\". After running the individual test,\nthe JUnit view shows a failed test \"null\". This is the failure trace:\n\n---\n\njunit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat junit.framework.Assert.assertNotNull(Assert.java:220)\n\tat junit.framework.Assert.assertNotNull(Assert.java:213)\n\tat junit.framework.TestCase.runTest(TestCase.java:138)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:436)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:311)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\n\n---\n\nIs this the expected behavior of the decoration feature?\n\nRegards,\nMartin",
    "Your setUpTest(Test) method is incorrect.\nTry with following and it works:\npublic class SomeTest extends TestCase {\n    public SomeTest() {\n\t\tsuper();\n\t}\n\tpublic SomeTest(String name) {\n\t\tsuper(name);\n\t}\n\tprotected void setUp() throws Exception {\n        super.setUp();\n    }\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n    public final void testFoo() {\n        assertFalse(\"test foo fails!\", true);\n    }\n    public static Test setUpTest(Test someTest) {\n        return new SomeTest(\"testFoo\");\n    }\n}\n",
    "It works perfectly. But I found no real documentation about this nice feature,\njust mentioned in \"What\u0027s new\". Perhaps the documentation should be improved?\n\nThank you,\nMartin Burger",
    "Martin,\n\nthe setUpTest is indeed an \"undocumented\" feature. The method should be used if\nyou have to provide a test setup when executing a single test method. In your\ncase a setUpTest isn\u0027t needed at all. JUnit will be able to perfectly execute a\nsingle test without that method. An example for the indeeded use for the method\nis more:\n\n\tpublic static Test setUpTest(Test test) {\n\t\treturn new MyTestSetup(test);\n\t}\n\nYou may want to look at the class TestSetup from junit to see how a test setup\nworks.\n\nNo further action planned for 3.1. Postponing \u003e 3.1\n",
    "Sure, I\u0027m writing a framework which needs to execute JUnit tests on another\n(virtual (in the sense of Java VM) or physical) machine using RMI. I saw your\ncode and took some parts. My version is some kind of an improved\nRemoteTestRunner, using RMI instead of some text messages over a socket connection.\n\nIf you are interested: http://ddchange.martin-burger.de/"
  ],
  "commentCreationDates": [
    "2005-06-16T18:43:16+02:00",
    "2005-06-16T19:20:46+02:00",
    "2005-06-16T20:41:47+02:00",
    "2005-06-16T21:38:16+02:00",
    "2005-06-16T21:54:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.assertTrue",
          "source": "Assert.java:20"
        },
        {
          "method": "junit.framework.Assert.assertNotNull",
          "source": "Assert.java:220"
        },
        {
          "method": "junit.framework.Assert.assertNotNull",
          "source": "Assert.java:213"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:138"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:127"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:118"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:436"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:311"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main",
          "source": "RemoteTestRunner.java:192"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "100436",
      "date": "2005-06-16T18:43:16+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "minor"
    }
  ],
  "groupId": "100436",
  "bugId": "100436",
  "date": "2005-06-16T18:43:16+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "minor"
}