{
  "comments": [
    "Builds:\neclipse.buildId\u003dN20050616-0010\njava.version\u003d1.4.2_07\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003dfr_FR\nFramework arguments:  -showversion\nCommand-line arguments:  -os linux -ws gtk -arch x86 -data /workspaces/e31RC3\n-debug /home/mdl/.eclipse/options -console -consoleLog -showversion\n\n(Bug reproduced on Linux only; also reproduced with build 3.1 RC3)\n\nScenario:\n- open the attached java file;\n- go to the end;\n- copy lines 22173 to 22202 (excluding the terminating \u0027);\u0027);\n- deselect, then select the same block;\n- paste.\n\nStack trace:\njava.lang.IllegalArgumentException: Argument not valid\n\tat org.eclipse.swt.SWT.error(SWT.java:2924)\n\tat org.eclipse.swt.SWT.error(SWT.java:2863)\n\tat org.eclipse.swt.SWT.error(SWT.java:2834)\n\tat org.eclipse.swt.custom.StyledText.getBidiSegments(StyledText.java:4211)\n\tat org.eclipse.swt.custom.DisplayRenderer.getBidiSegments(DisplayRenderer.java:128)\n\tat\norg.eclipse.swt.custom.StyledTextRenderer.getTextLayout(StyledTextRenderer.java:415)\n\tat org.eclipse.swt.custom.StyledTextRenderer.drawLine(StyledTextRenderer.java:114)\n\tat org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:5885)\n\tat org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:5267)\n\tat org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4874)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1021)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1045)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1030)\n\tat org.eclipse.swt.widgets.Control.gtk_expose_event(Control.java:1906)\n\tat org.eclipse.swt.widgets.Composite.gtk_expose_event(Composite.java:528)\n\tat org.eclipse.swt.widgets.Canvas.gtk_expose_event(Canvas.java:106)\n\tat org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1355)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3387)\n\tat org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)\n\tat org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:4768)\n\tat org.eclipse.swt.widgets.Display.eventProc(Display.java:1027)\n\tat org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)\n\tat org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1149)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2529)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\n\nNotes:\n- tested on Windows XP with RC3 without getting the error;\n- if the fact that the file doesn\u0027t compile as is compromises the error\n  reproduction, pls download jdt.core projects from the CVS repository and\n  replace org.eclipse.jdt.core.tests.compiler/\n  org.eclipse.jdt.core.tests.compiler.regression.GenericTypesTest.java with\n  the attached version;\n- copying the same contents to a text file suppresses the problem.",
    "Created an attachment (id\u003d23600)\nOne long Java file that shows the issue\n",
    "I can reproduce this problem even when it cannot compile.",
    "A bidi segement returned by the implementor of BidiSegmentListener is invalid. \nThe rule that is been broken is:\n-- elements must be in ascending order and must not have duplicates --\nFor the string \"\\t\\t\\\"----------\\\\n\\\");\" the return is int[]{0, 2, 16, 16}\n",
    "Moving to the text component.\n\nI can reproduce this bug on Windows too.\n",
    "Note that SWT was considering this for RC4 had the problem turned out to be in \nSWT (it might still turn out to be us).",
    "The algorithm gets tricked by string partitions with length 0. The fix is\ntrivial: simply exclude those.",
    "Created an attachment (id\u003d23645)\nPatch against JavaSourceViewer.java\n\nSteve, would you vote for this?",
    "Dirk, please cast your vote for this bug?",
    "+1",
    "Dirk?",
    "+1 for RC4. Waited to ask you about the assert in the for loops ;-)",
    "Note that the patch only prevents those 0-length partitions to do any harm here.\nWe also need to find out why/who actually creates the 0-length partition(s).",
    "Smaller test case:\n\n- select the two string lines, without the trailing semicolon\n- copy, paste\n\n--------- X.java -----------\npackage pr101014;\n\nclass X {\n\tvoid m() {\n\t\tString s\u003d \n\t\t\t\"----------\\n\" + \n\t\t\t\"----------\\n\";\n\t}\n}\n----------------------------\n",
    "An even smaller example. The condition is that there is a string partition on a\nline by itself, preceded only by some whitespace.\n\nIn this example: copy and paste \u003e\"foo\"\u003c\n\nclass X {\nString s\u003d \n\t\"foo\";\n}",
    "Created an attachment (id\u003d23698)\nPatch against JavaSourceViewer.java\n\nremoved the test code",
    "Created an attachment (id\u003d23707)\nFastPartitioner.diff\n\nDebugging reveals that FastPartitioner fails to remove the previous string\npartition changed (but not deleted) by pasting. This results in an illegal\npartitioning which triggered the illegal Bidi line segments. Many other tools\nand algorithms that rely on correct (i.e. no zero-length partitions unless\nrequested or document is empty) partitioning may also be broken by this.\n\nThe attached patch fixes this: whenever the partitioning loop modifies the set\nof positions on the document, the cached copy of the positions is cleared.\n\nLater we call IDocument.computeIndexInCategory - the returned index references\nthe updated positions, therefore we need to get an up-to-date copy.",
    "Created an attachment (id\u003d23712)\norg.eclipse.jface.text.tests.diff\n\nTests\n- Added FastPartitionerTest in order to both test DefaultPartitioner and\nFastPartitioner\n- added testPR101014 for this PR\u0027s scenario, failing both for Default- and\nFastPartitioner",
    "Created an attachment (id\u003d23713)\norg.eclipse.jface.text.diff\n\nPatch against o.e.jface.text.\n\nThis patch contains the previous patch against FastPartitioner.java (attachment\n23707) and adds an anologous fix to the deprecated DefaultPartitioner.",
    "Peformance:\n\nFastPartitioner was introduced to solve as a performance optimization that\nrelies on caching the partition positions instead of querying the document all\nthe time (see bug 67963 for details).\n\nThe fix results in an additional cache miss in FastPartitioner upon every\ndocument change, exactly if the change invalidates the last non-default\npartition in the document.\n\nThis scenario is tested by JavaIndenterTest. A sample reveals the following\nperformance regression on my P4 2.8 Mhz / Fedora Core 3 machine (n\u003d200):\n\nwithout fix:\n  CPU Time: 28 ms\n\nwith fix:\n  CPU Time: 38 ms\n\nWhile a regression by 30% seems a lot, comparing these numbers with the ones\nfrom bug 67963 (9260 ms) reveals that FastPartitioner is still highly successful\nin optimizing the partitiong.\n",
    "Since we now know the source of the problem and after reviewing and testing the\nnew patches this is how we want to fix this bug for 3.1 RC4.\n\nThose who already voted: please veto if this is not OK for you.",
    "Created an attachment (id\u003d23715)\norg.eclipse.jface.text.diff\n\nReplacement for previous patch. By moving the cache invalidation outside of the\nloop into the place where it is actually needed (it only is if the document\nchange invalidates the last non-default partition), the performance impact is\nnow in the uncertainty range:\n\n  CPU Time: 30 ms\n",
    "Discussed patch with Tom. +1 for RC4.",
    "fixed \u003e 20050622",
    "Verified in N20050623-0010."
  ],
  "commentCreationDates": [
    "2005-06-21T11:03:54+02:00",
    "2005-06-21T11:14:14+02:00",
    "2005-06-21T15:12:32+02:00",
    "2005-06-21T17:59:42+02:00",
    "2005-06-21T18:05:51+02:00",
    "2005-06-21T18:48:48+02:00",
    "2005-06-21T19:18:22+02:00",
    "2005-06-21T19:19:53+02:00",
    "2005-06-21T19:20:42+02:00",
    "2005-06-21T19:23:09+02:00",
    "2005-06-22T07:43:22+02:00",
    "2005-06-22T09:23:39+02:00",
    "2005-06-22T09:28:33+02:00",
    "2005-06-22T09:30:39+02:00",
    "2005-06-22T09:36:56+02:00",
    "2005-06-22T09:42:35+02:00",
    "2005-06-22T10:40:44+02:00",
    "2005-06-22T11:49:10+02:00",
    "2005-06-22T11:50:41+02:00",
    "2005-06-22T12:00:32+02:00",
    "2005-06-22T12:02:44+02:00",
    "2005-06-22T12:10:12+02:00",
    "2005-06-22T12:21:14+02:00",
    "2005-06-22T17:32:09+02:00",
    "2005-06-23T10:32:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument not valid",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2924"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2863"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2834"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.getBidiSegments",
          "source": "StyledText.java:4211"
        },
        {
          "method": "org.eclipse.swt.custom.DisplayRenderer.getBidiSegments",
          "source": "DisplayRenderer.java:128"
        },
        {
          "method": "org.eclipse.swt.custom.StyledTextRenderer.getTextLayout",
          "source": "StyledTextRenderer.java:415"
        },
        {
          "method": "org.eclipse.swt.custom.StyledTextRenderer.drawLine",
          "source": "StyledTextRenderer.java:114"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.performPaint",
          "source": "StyledText.java:5885"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handlePaint",
          "source": "StyledText.java:5267"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$7.handleEvent",
          "source": "StyledText.java:4874"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1021"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1045"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1030"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.gtk_expose_event",
          "source": "Control.java:1906"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.gtk_expose_event",
          "source": "Composite.java:528"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.gtk_expose_event",
          "source": "Canvas.java:106"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.windowProc",
          "source": "Widget.java:1355"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3387"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS._gtk_main_do_event",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_do_event",
          "source": "OS.java:4768"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.eventProc",
          "source": "Display.java:1027"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS._g_main_context_iteration",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.g_main_context_iteration",
          "source": "OS.java:1149"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2529"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1699"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:367"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "101014",
      "date": "2005-06-21T11:03:54+02:00",
      "product": "Platform",
      "component": "Text",
      "severity": "normal"
    }
  ],
  "groupId": "101014",
  "bugId": "101014",
  "date": "2005-06-21T11:03:54+02:00",
  "product": "Platform",
  "component": "Text",
  "severity": "normal"
}