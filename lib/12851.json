{
  "comments": [
    "OS: Windows2000 Simplified Chinese Version + GB18030 Patch\nEclipse Build: 20020321 Stable Build \n\nAbstract: A java project name could not contain a GB18030 character\n\nRe-produce Steps:\n1. Start Eclipse\n2. Click File-\u003eNew-Project\n3. In New project window: Click Java-\u003eJava Project\n4. Click  Next\n5. A New Windows shows up\n6. Input a GB18030 Character in the Project name input box\n7. Click Finish\n8. An error window shows up\n\nComments:\nBefore the process, I have changed the Eclipse font to a GB18030 enabled font \nin workbench preference.\nIn the same window, I can input a GB12312 character and then create the java \nproject successfully.",
    "Created an attachment (id\u003d550)\nScreen Cut of the step 6\n",
    "Created an attachment (id\u003d551)\nScreen Cut of the step 8\n",
    "Tod please take a look at this. Also try the same case on another DBCS \nplatform. ",
    "Created an attachment (id\u003d559)\nTibetan gb 18030 chars\n",
    "Replicated using the Tibetan characters in the attachment",
    "This is a problem with core trying to create the resource.\n\nIf you create a Project with the name that includes some of the characters in \nthe Tibetan file attached the characters will show up fine in the window but an \nerror will come back saying that it cannot create the file and give a file name \nthat is only spaces and periods.\n\nThis has to be done on a Chinese XP or 2000 machine with GB 18020 installed.",
    "Interestingly enough, I believe that we just convert the path to a file and \ncall mkdirs on it. It would be worth investigating Path.toOSString.\n\nJohn, please check on this. Tod has a machine set up which can reproduce the \nproblem.",
    "This appears to be a limitation of the underlying VM/class libraries.  A simple \ntest program that writes to a java.io.File with a GB18030 name also fails.  I \ndon\u0027t see what we can do here.",
    "Which VM are you using? \nAll testers please annotate. \nThanks.",
    "my VM version is J2RE 1.3.1 IBM Windows 32 Build cn131-20020227 (JIT enabled: \njitc)",
    "I have used a IBM JDK 1.4 beta version to do the test, the project is created \nwith a error message, because JDK I used is a beta version, I am not sure it\u0027s \nEclipse\u0027s problem or not. \nFor Sun JDK 1.4, its default encoding is not GB18030, so I didn\u0027t use it.",
    "We should verify that this is with the GB 18030 compliant Hursley VM - if it is \nthen there is a VM problem.",
    "Verified that with a 1.4 Hursely VM it is possible to create a project with \nGB18030 characters. However creating a file with GB18030 characters in that \nproject failed. Creating a folder succeeded. I have updated our test machine \nwith that VM.",
    "Turns out I was using a Sun VM after all. We will need a 1.4 Hursley VM to \ncontinue work on this.",
    "In Simpilfied Chinese Win2K+IBM JDK 1.4 beta version:\nCreate a java project with GB18030 name(gb6.jpg), an error message windows \nshows up(gb7.jpg), after cancel the process, the project name is displayed in \nthe Eclipse with an error mark(gb8.jpg), but in the windows, the folder have \nbeen created(gb9.jpg).\n",
    "This works with the Sun 1.4 VM so it appears to be a VM issue.",
    "Here is a test with Tibetan and English characters. java.io.File fails with \nthese extended characters in the 1.3.1 Hursley VM. Until this test works Core \nwill not be handle to handle it. This test case should be sent to the VM \nsupplier.\n\nimport java.io.IOException;\n\n/**\n * @author Administrator\n *\n * To change this generated comment edit the template variable \"typecomment\":\n * Window\u003ePreferences\u003eJava\u003eTemplates.\n */\npublic class FileIOTest {\n\t\n\tprivate static String TIBETAN_DIR \u003d \"c:\\\\temp\\\\\u0026#3844;\u0026#3845;\u0026#3846;\u0026#3847;\u0026#3848;\u0026#3849;\\\\\";\n\tprivate static String TIBETAN_FILE \u003d  \"\u0026#3844;\u0026#3845;\u0026#3846;\u0026#3847;\u0026#3848;.txt\";\n\tprivate static String ENGLISH_DIR \u003d \"c:\\\\temp\\\\English\";\n\tprivate static String ENGLISH_FILE \u003d \"file.txt\";\n\n\tpublic static void main(String[] args) throws IOException{\n\t\tmakeDirAndFile(ENGLISH_DIR,ENGLISH_FILE);\n\t\tmakeDirAndFile(TIBETAN_DIR,TIBETAN_FILE);\n\t}\n\t\t\n\tprivate static void makeDirAndFile(String dirName, String fileName)\nthrows IOException{\n\t\tjava.io.File folder \u003d new java.io.File(dirName);\n\t\tif(!folder.mkdir())\n\t\t\tSystem.out.println(\"Failed to Create \" + dirName);\n\t\tjava.io.File file \u003d new java.io.File(folder,fileName);\n\t\tif(!file.createNewFile())\n\t\t\tSystem.out.println(\"Failed to Create \" +  fileName);\n\t\tSystem.out.println(dirName + \" Folder is file:\" + \nfolder.isFile());\n\t\tSystem.out.println(fileName + \" File is file:\" + file.isFile\n());\n\t}\n}\n\n\nAnd the results - notice the error has the wrong text\n\nc:\\temp\\English Folder is file:false\nfile.txt File is file:true\nFailed to Create c:\\temp\\\u0026#3844;\u0026#3845;\u0026#3846;\u0026#3847;\u0026#3848;\u0026#3849;\\\njava.io.IOException: ?n?????Q?????????Q???????^???`?Z???e?`??\n\tat java.io.Win32FileSystem.createFileExclusively(Native Method)\n\tat java.io.File.createNewFile(File.java:707)\n\tat FileIOTest.makeDirAndFile(FileIOTest.java:26)\n\tat FileIOTest.main(FileIOTest.java:18)\nException in thread \"main\" ",
    "I can replicate problem in IBM JRE 1.3.1 cn131-20020403",
    "Until we have a VM that addresses this, it will be impossible to create any \nfiles, folders, or projects that contain GB18030 characters in Eclipse.",
    "*** Bug 12854 has been marked as a duplicate of this bug. ***",
    "Waiting for new VM.\nDeferring.",
    "We have a plugin which installs on WSAD V5 (apparently GB18030 compliant).. \nHowever we cannot input GB18030 characters in resource and file names...\ncan you give me an update on this problem with the JVM and when it may be \nfixed, what level of Eclipse?  Also, how would WSAD V5 be able to comply \nwith this open issue? Is it not a \u0027certification\u0027 issue?",
    "Can someone provide an update on the progress of resolving this problem.. \nWhich JVM level will contain the fix and when s it available?",
    "Re-opening for investigation.\nNeed to verify status with IBM 1.4 VM.\n",
    "Verify with following test environment: \nEclipse Build: 20021218 Stable Build\nJRE version: J2RE 1.3.1 IBM Windows 32 build cn140-20020902 (JIT enabled: jitc)\nResult: A java project name could not contain a GB18030 character.\n\nEclipse Build: 20021218 Stable Build\nJRE version: J2RE 1.4.0 IBM Windows 32 build cn140-20020902 (JIT enabled: jitc)\nResult: A java project name can contain a GB18030 character.",
    "The latest comment suggests this works fine when using a 1.4 VM.  If this is the\ncase, then I believe we can close this bug.  1.3 level VMs do not handle GB18030\nat all, so Eclipse will not handle it either (unless we re-implement the I/O\nlayer on all platforms ourselves ;).",
    "Agreed. Closing. Please use a 1.4 VM.\n",
    "*** Bug 29628 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2002-04-05T07:28:47+02:00",
    "2002-04-08T07:14:25+02:00",
    "2002-04-08T07:14:58+02:00",
    "2002-04-09T14:56:07+02:00",
    "2002-04-09T21:50:37+02:00",
    "2002-04-09T21:51:02+02:00",
    "2002-04-09T22:06:23+02:00",
    "2002-04-10T21:46:35+02:00",
    "2002-04-10T23:15:52+02:00",
    "2002-04-11T03:17:17+02:00",
    "2002-04-11T03:40:25+02:00",
    "2002-04-11T10:32:52+02:00",
    "2002-04-11T13:34:29+02:00",
    "2002-04-11T14:54:05+02:00",
    "2002-04-11T16:19:26+02:00",
    "2002-04-12T09:16:04+02:00",
    "2002-04-12T16:01:27+02:00",
    "2002-04-15T21:11:59+02:00",
    "2002-04-24T10:18:44+02:00",
    "2002-05-24T17:25:02+02:00",
    "2002-05-24T17:26:27+02:00",
    "2002-06-05T23:17:21+02:00",
    "2002-09-27T20:40:24+02:00",
    "2002-10-04T17:26:58+02:00",
    "2002-10-09T18:42:11+02:00",
    "2003-01-16T15:00:09+01:00",
    "2003-01-21T14:50:49+01:00",
    "2003-01-21T20:44:13+01:00",
    "2003-01-27T17:39:30+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "?n?????Q?????????Q???????^???`?Z???e?`??",
      "elements": [
        {
          "method": "java.io.Win32FileSystem.createFileExclusively",
          "source": "Native Method"
        },
        {
          "method": "java.io.File.createNewFile",
          "source": "File.java:707"
        },
        {
          "method": "FileIOTest.makeDirAndFile",
          "source": "FileIOTest.java:26"
        },
        {
          "method": "FileIOTest.main",
          "source": "FileIOTest.java:18"
        }
      ],
      "number": 0,
      "commentIndex": 17,
      "bugId": "12851",
      "date": "2002-04-15T21:11:59+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "12851",
  "bugId": "12851",
  "date": "2002-04-05T07:28:47+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}