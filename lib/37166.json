{
  "comments": [
    "Can\u0027t reproduce the problem with a test :(. Next is what considered as \nimportant details:\n\nThere are three compilation units (with single public class) in the same \npackage, cu1 and cu2 main types are referenced from cu3. cu3 imports both cu1 \nand cu2 regardless of the fact they reside in same package. Perform deletion of \nthese classes as an atomic workspace command (IWorkspaceRunnable, IMO this \nprevents index from updating, which may be a part of the problem). Upon \ndeletion of each class some code which uses SearchEngine is invoked to collect \nreferences to the class being deleted. Deletion of cu1 goes without any \nproblem, but on deletion of cu2 a ProblemReferenceBinding (with problemId \u003d\u003d \nNotFound(1)) is created for the import of cu1 inside cu3. And \nTypeDeclarationPattern.matchLevelForType fails with NPE with because \nProblemReferenceBinding.getPackage() is null.\n\nChanging order of deletion helps.\nStacktrace follows.\n\n\nThe call of SearchEngine looks like:\n\nIType type \u003d cu.getTypes()[0];\nIJavaSearchScope searchScope \u003d SearchEngine.createJavaSearchScope(new \nIJavaElement[] { type.getJavaProject() });\nISearchPattern searchPattern \u003d SearchEngine.createSearchPattern(type, \nIJavaSearchConstants.ALL_OCCURRENCES);\n\nnew SearchEngine().search(..., searchPattern, searchScope, ...)\n\n\njava.lang.NullPointerException\n\n   at \norg.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchLevelF\norType(TypeDeclarationPattern.java:326)\n\n   at \norg.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchLevel\n(TypeDeclarationPattern.java:310)\n\n   at org.eclipse.jdt.internal.core.search.matching.OrPattern.matchLevel\n(OrPattern.java:152)\n\n   at org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching\n(MatchSet.java:224)\n\n   at \norg.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo\nmpilationUnit(MatchingOpenable.java:331)\n\n   at \norg.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches\n(MatchingOpenable.java:174)\n\n   at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches\n(MatchLocator.java:1323)\n\n   at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches\n(MatchLocator.java:586)\n\n   at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:412)",
    "Created an attachment (id\u003d4774)\nJUnit test case\n\nInitial description is a bit wrong - only first deleted cu (cu1) should be\nexplicitly imported into cu3. And names of the CUs should be simmilar (only\nsuffixes differ). cu1 and cu2 are referenced by their fq names.\n\nBefore running this testcase, you need a java project (project as a source\nroot)named \"SearchEngineBindingProblemTest\" in your workspace. If I create it\nfrom setUp, it has some problems with classpath, so\nMatchingOpenable.shouldResolve became false (MatchLocator gets\nAbortCompilation), so no attempt to resolve reference done.",
    "A lot of changes occured in this area in 2.1. Could you please try with Eclipse \n2.1 and see if you still have the problem?",
    "Yes, it is reproducable in 2.1.\nHope, next comment won\u0027t be \"please suggest a fix\". I consider testcase is \npretty good contribution from my side.",
    "Thanks a lot for your test case.\n\nFixed TypeDeclarationPattern.matchLevelForType(...) to handle \nProblemReferenceBindings. \n\nAdded regression test JavaSearchTests.testTypeOccurence2()",
    "Verified."
  ],
  "commentCreationDates": [
    "2003-05-02T14:05:33+02:00",
    "2003-05-02T17:33:49+02:00",
    "2003-05-05T12:57:30+02:00",
    "2003-05-06T18:00:06+02:00",
    "2003-05-22T15:10:22+02:00",
    "2003-06-06T14:53:21+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchLevelForType",
          "source": "TypeDeclarationPattern.java:326"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern.matchLevel",
          "source": "TypeDeclarationPattern.java:310"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.OrPattern.matchLevel",
          "source": "OrPattern.java:152"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching",
          "source": "MatchSet.java:224"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCompilationUnit",
          "source": "MatchingOpenable.java:331"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches",
          "source": "MatchingOpenable.java:174"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1323"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:586"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:412"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "37166",
      "date": "2003-05-02T14:05:33+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "minor"
    }
  ],
  "groupId": "37166",
  "bugId": "37166",
  "date": "2003-05-02T14:05:33+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "minor"
}