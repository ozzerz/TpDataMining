{
  "comments": [
    "I200410260800, Windows XP \n \nThese failures occurred in the integration build. \n \norg.eclipse.ui.internal.misc.AssertionFailedException: assertion failed;  \n at org.eclipse.ui.internal.misc.Assert.isTrue(Assert.java:106) \n at org.eclipse.ui.internal.misc.Assert.isTrue(Assert.java:92) \n at \norg.eclipse.ui.tests.decorators.DecoratorTableTest.backgroundCheck(DecoratorTableTest.java:39) \n at \norg.eclipse.ui.tests.decorators.DecoratorViewerTest.testBackground(DecoratorViewerTest.java:70) \n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:320) \n at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:196) \n at org.eclipse.test.UITestApplication$3.run(UITestApplication.java:188) \n at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35) \n at \norg.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118) \n at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2771) \n at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2451) \n at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1527) \n at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1498) \n at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276) \n at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144) \n at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102) \n at \norg.eclipse.test.UITestApplication.runApplication(UITestApplication.java:131) \n at org.eclipse.test.UITestApplication.run(UITestApplication.java:58) \n at \norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335) \n at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273) \n at \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129) \n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n at org.eclipse.core.launcher.Main.basicRun(Main.java:185) \n at org.eclipse.core.launcher.Main.run(Main.java:704) \n at org.eclipse.core.launcher.Main.main(Main.java:688)",
    "This appears to be a timing issue but the only way this could fail is if the \njoin() on the test does not work. Moving to Core to check the join() \nimplementation",
    "Adding Kim as it is actually blocking on her machine",
    "My test suites are blocking as we speak.  I\u0027m going to try and run them again in\ndebug mode and suspend the threads to see what\u0027s going on.",
    "Upgrading to critical as a deadlock can cause loss of data.  This happened over \nthe weekend on Platform UI\u0027s test box.  I\u0027ll attach a full thread dump. ",
    "Full thread dump Java HotSpot(TM) Client VM (1.4.2-b28 mixed mode):\n\n\"Worker-3\" prio\u003d1 tid\u003d0x086e2920 nid\u003d0x2920 in Object.wait() [51db6000..51db6854]\n\tat java.lang.Object.wait(Native Method)\n\tat org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:166)\n\t- locked \u003c0x455658f0\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n\tat org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:193)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)\n\n\"ReaderThread\" prio\u003d1 tid\u003d0x086e86b0 nid\u003d0x2920 runnable [51d35000..51d35854]\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:129)\n\tat sun.nio.cs.StreamDecoder$CharsetSD.readBytes(StreamDecoder.java:408)\n\tat sun.nio.cs.StreamDecoder$CharsetSD.implRead(StreamDecoder.java:450)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:182)\n\t- locked \u003c0x4569f378\u003e (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:167)\n\tat java.io.BufferedReader.fill(BufferedReader.java:136)\n\tat java.io.BufferedReader.readLine(BufferedReader.java:299)\n\t- locked \u003c0x4569f378\u003e (a java.io.InputStreamReader)\n\tat java.io.BufferedReader.readLine(BufferedReader.java:362)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner$ReaderThread.run(RemoteTestRunner.java:139)\n\n\"Worker-2\" prio\u003d1 tid\u003d0x0858f600 nid\u003d0x2920 in Object.wait() [51caa000..51caa854]\n\tat java.lang.Object.wait(Native Method)\n\tat org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:166)\n\t- locked \u003c0x455658f0\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n\tat org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:193)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)\n\n\"Worker-1\" prio\u003d1 tid\u003d0x08547880 nid\u003d0x2920 in Object.wait() [51c29000..51c29854]\n\tat java.lang.Object.wait(Native Method)\n\tat org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:166)\n\t- locked \u003c0x455658f0\u003e (a org.eclipse.core.internal.jobs.WorkerPool)\n\tat org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:193)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:59)\n\n\"WorkbenchTestable\" prio\u003d1 tid\u003d0x08590428 nid\u003d0x2920 in Object.wait()\n[51ba8000..51ba8854]\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x456a7a68\u003e (a org.eclipse.swt.widgets.RunnableLock)\n\tat java.lang.Object.wait(Object.java:429)\n\tat org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:164)\n\t- locked \u003c0x456a7a68\u003e (a org.eclipse.swt.widgets.RunnableLock)\n\tat org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)\n\tat org.eclipse.swt.widgets.Display.syncExec(Display.java:3138)\n\tat\norg.eclipse.ui.internal.testing.WorkbenchTestable.runTest(WorkbenchTestable.java:85)\n\tat\norg.eclipse.pde.internal.junit.runtime.UITestApplication.runTests(UITestApplication.java:90)\n\tat\norg.eclipse.ui.internal.testing.WorkbenchTestable$1.run(WorkbenchTestable.java:57)\n\tat java.lang.Thread.run(Thread.java:534)\n\n\"Reference Cleaner - 2\" prio\u003d1 tid\u003d0x08343dd8 nid\u003d0x2920 in Object.wait()\n[51852000..51852854]\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x455e2510\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)\n\t- locked \u003c0x455e2510\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)\n\tat\norg.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:216)\n\n\"Reference Cleaner - 1\" prio\u003d1 tid\u003d0x08343b70 nid\u003d0x2920 in Object.wait()\n[51046000..51046854]\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x455e2580\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)\n\t- locked \u003c0x455e2580\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)\n\tat\norg.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceCleanerThread.run(ActionContributionItem.java:216)\n\n\"Start Level Event Dispatcher\" daemon prio\u003d1 tid\u003d0x08234378 nid\u003d0x2920 in\nObject.wait() [50fc5000..50fc5854]\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x4510efe0\u003e (a org.eclipse.osgi.framework.eventmgr.EventThread)\n\tat java.lang.Object.wait(Object.java:429)\n\tat\norg.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)\n\t- locked \u003c0x4510efe0\u003e (a org.eclipse.osgi.framework.eventmgr.EventThread)\n\tat org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)\n\n\"Framework Event Dispatcher\" daemon prio\u003d1 tid\u003d0x0823ecb8 nid\u003d0x2920 in\nObject.wait() [50f44000..50f44854]\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x45103970\u003e (a org.eclipse.osgi.framework.eventmgr.EventThread)\n\tat java.lang.Object.wait(Object.java:429)\n\tat\norg.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThread.java:162)\n\t- locked \u003c0x45103970\u003e (a org.eclipse.osgi.framework.eventmgr.EventThread)\n\tat org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:100)\n\n\"Signal Dispatcher\" daemon prio\u003d1 tid\u003d0x0809d680 nid\u003d0x2920 waiting on condition\n[0..0]\n\n\"Finalizer\" daemon prio\u003d1 tid\u003d0x080889e0 nid\u003d0x2920 in Object.wait()\n[50950000..50950854]\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)\n\t- locked \u003c0x450ec170\u003e (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\n\n\"Reference Handler\" daemon prio\u003d1 tid\u003d0x08087df8 nid\u003d0x2920 in Object.wait()\n[508cf000..508cf854]\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on \u003c0x450ec1d8\u003e (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:429)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)\n\t- locked \u003c0x450ec1d8\u003e (a java.lang.ref.Reference$Lock)\n\n\"main\" prio\u003d1 tid\u003d0x080526b8 nid\u003d0x2920 sleeping[bfffa000..bfffb6e8]\n\tat java.lang.Thread.sleep(Native Method)\n\tat org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:637)\n\tat\norg.eclipse.ui.tests.decorators.DecoratorViewerTest.testForeground(DecoratorViewerTest.java:101)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:421)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:305)\n\tat\norg.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)\n\tat\norg.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:92)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:118)\n\t- locked \u003c0x456a7a68\u003e (a org.eclipse.swt.widgets.RunnableLock)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2643)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2368)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1527)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1498)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:33)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\n\n\"VM Thread\" prio\u003d1 tid\u003d0x08086ad8 nid\u003d0x2920 runnable \n\n\"VM Periodic Task Thread\" prio\u003d1 tid\u003d0x0809fe88 nid\u003d0x2920 waiting on condition \n\"Suspend Checker Thread\" prio\u003d1 tid\u003d0x0809ccc8 nid\u003d0x2920 runnable ",
    "The initial bug report and comment #1 talk about a test failure (assertion\nfailed in DecoratorViewerTest.testBackground. The bug was moved to core because\nit was believed that the join() implementation was not working.\n\nThe remaining comments are talking about a deadlock in a different test\n(testForeground). Shouldn\u0027t that be entered as a different bug report?",
    "They are both due to join() not working but feel free to do so if you wish (it \nmay be two problems with join).",
    "After a dozen or so runs of DecoratorTableTest, I can\u0027t reproduce either the\ndeadlock or the assertion failure. Did the assertion failure only ever occur\nonce?  Did the deadlock occur on both Windows and Linux? I can\u0027t actually see\nwhich test is running in the deadlock case (it just shows DecoratorViewerTest in\nthe stack, and that class is abstract). Anything in the log when it deadlocked?",
    "I\u0027ve had the deadlock occur on XP, but only the one time.",
    "*** Bug 76488 has been marked as a duplicate of this bug. ***",
    "During a code review, Doug and I found a case where IJobManager.join() can block\nforever. I don\u0027t know if this was causing this particular test to hang, so I\nhave entered it as a separate bug report: bug 77039.",
    "Comment #11 should refer to bug 77533.",
    "Created an attachment (id\u003d15613)\nPatch to JobManager.java\n\nThis patch fixes the deadlock that sometimes occurred while running\nDecoratorTableTest. Here is what was happening.\n\nThe decoration update UI job sometimes reschedules itself from within a job\nchange listener that listens for the done() job event. This job can also be\nrescheduled if more decorations occur while it is still running (schedule() is\ncalled on the job while it is running).\n\nThe implementation of JobManager.join listens for scheduled() and done()\nevents, tracking the list of jobs that belong to the family being joined. When\nthat list becomes empty, the join() method returns.  This listener ignores\nscheduled() and done() events for jobs that are being rescheduled (due to\nschedule() being called while the job is running).\n\nIn the failure case, the schedule() in the decoration job\u0027s done() listener\nreschedules the job. The join() method\u0027s done() listener receives the done()\nevent next, but ignores this since the job is being rescheduled. The join()\nlistener ends up with two copies of the same job in its list. When the job\ncompletes, one of those copies is removed from the list, but the other remains\nbehind forever. Deadlock is the result.\n\nThis patch fixes the deadlock, but there is still a race condition that makes\nthis test case vulnerable. Since the decoration job reschedules itself from a\ndone() listener, there is a very small window of time when there are no\ndecoration jobs running. A join() call from another thread can return if it\nperforms its check during this window of time. I.e., the join() method returns,\nand then the done() listener schedules another decoration. The result is that\njoin() can\u0027t be used to reliably wait until all decorations are complete. \n\nThe only real way to fix this is to reschedule() the decoration job from within\nthe job\u0027s run() method, rather than from a done() listener. I believe it was\noriginally done this way because rescheduling from the run() method was not\nsupported in the early days of the job implementation. If the rescheduling is\ndone from within run(), there will be no window during which no decoration jobs\nare running, and the join() method can then be reliably used.",
    "Added a reference to Bug 77664 as we should follow Johns advice in the \ndecorators.",
    "Created an attachment (id\u003d15645)\nPatch to InternalJob.java\n\nThis patch goes along with the patch to JobManager.java",
    "Updating title to better describe the problem.",
    "Fix released to HEAD (not for M3)",
    "*** Bug 77946 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-10-26T19:47:34+02:00",
    "2004-10-26T20:51:55+02:00",
    "2004-10-26T21:14:09+02:00",
    "2004-10-26T21:16:03+02:00",
    "2004-11-01T14:57:07+01:00",
    "2004-11-01T14:58:49+01:00",
    "2004-11-01T16:13:30+01:00",
    "2004-11-01T16:43:52+01:00",
    "2004-11-01T17:07:16+01:00",
    "2004-11-01T17:10:58+01:00",
    "2004-11-01T17:14:55+01:00",
    "2004-11-02T20:44:41+01:00",
    "2004-11-02T20:51:37+01:00",
    "2004-11-03T15:45:16+01:00",
    "2004-11-03T16:16:10+01:00",
    "2004-11-03T22:18:45+01:00",
    "2004-11-05T16:44:16+01:00",
    "2004-11-05T19:55:29+01:00",
    "2004-11-22T19:56:39+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.ui.internal.misc.AssertionFailedException",
      "message": "assertion failed;",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.misc.Assert.isTrue",
          "source": "Assert.java:106"
        },
        {
          "method": "org.eclipse.ui.internal.misc.Assert.isTrue",
          "source": "Assert.java:92"
        },
        {
          "method": "org.eclipse.ui.tests.decorators.DecoratorTableTest.backgroundCheck",
          "source": "DecoratorTableTest.java:39"
        },
        {
          "method": "org.eclipse.ui.tests.decorators.DecoratorViewerTest.testBackground",
          "source": "DecoratorViewerTest.java:70"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.test.EclipseTestRunner.run",
          "source": "EclipseTestRunner.java:320"
        },
        {
          "method": "org.eclipse.test.EclipseTestRunner.run",
          "source": "EclipseTestRunner.java:196"
        },
        {
          "method": "org.eclipse.test.UITestApplication$3.run",
          "source": "UITestApplication.java:188"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:118"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:2771"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2451"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1527"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1498"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:276"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:144"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:102"
        },
        {
          "method": "org.eclipse.test.UITestApplication.runApplication",
          "source": "UITestApplication.java:131"
        },
        {
          "method": "org.eclipse.test.UITestApplication.run",
          "source": "UITestApplication.java:58"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "77039",
      "date": "2004-10-26T19:47:34+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "critical"
    }
  ],
  "groupId": "77039",
  "bugId": "77039",
  "date": "2004-10-26T19:47:34+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "critical"
}