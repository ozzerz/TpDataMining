{
  "comments": [
    "Parsing the sample Apache error log shipped with GLA on a machine whose default \nfile encoding is UTF-8 results in no log records being parsed.  The sample \nerror log contains control characters.  This is a regression from 4.0.  The \nchanges for the performance feature 83736 \n(https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d83736) are causing this \nregression.\n\nA workaround for this problem is to set the encoding in the context instance in \nthe adapter file to a code page that accepts the control characters.  For \nexample, the Cp1252 encoding accepts these control characters.",
    "The fix for 83736 was to change the log file reading to use \nBufferedReader.readLine() instead of single byte reading using \nRandomAccessFile.read().   For this file, the first BufferedReader.readLine() \ncall throws a sun.io.MalformedInputException exception.  Here is the stack \ntrace:\n\nsun.io.MalformedInputException\n        at sun.io.ByteToCharUTF8.convert(ByteToCharUTF8.java(Compiled Code))\n        at sun.nio.cs.StreamDecoder$ConverterSD.convertInto(StreamDecoder.java:2\n87)\n        at sun.nio.cs.StreamDecoder$ConverterSD.implRead(StreamDecoder.java:337)\n        at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:223)\n        at java.io.InputStreamReader.read(InputStreamReader.java:208)\n        at java.io.BufferedReader.fill(BufferedReader.java(Compiled Code))\n        at java.io.BufferedReader.readLine(BufferedReader.java(Compiled Code))\n        at java.io.BufferedReader.readLine(BufferedReader.java:379)\n        at org.eclipse.hyades.logging.adapter.util.BufferedSinglePassReader.read\nLine(BufferedSinglePassReader.java:137)\n        at org.eclipse.hyades.logging.adapter.sensors.SingleOSFileSensor.getNext\n(SingleOSFileSensor.java:363)\n        at org.eclipse.hyades.logging.adapter.impl.BasicContext.run(BasicContext\n.java:150)\n        at java.lang.Thread.run(Thread.java:568)",
    "I was using IBM JDK 1.4.2:\n\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2)\nClassic VM (build 1.4.2, J2RE 1.4.2 IBM build cxp64142-20040917 (JIT enabled: ji\ntc))",
    "Note, this problem only occurs with an IBM JDK.  Using a Sun JDK 1.4.2 \nBufferedReader.readLine() does not throw an exception.\n\nI can reproduce the problem on Windows by changing java command in gla.bat to \ninclude -Dfile.encoding\u003dUTF-8 and using an IBM JDK 1.4.2",
    "Increasing severity because it is failing several testcases.",
    "As it is a corner case it should not hold up iteration 2.  Deferring to \niteration 3.",
    "Comitted fix the TPTP Head CVS.\n\nFix involved using a manual buffering scheme using FileInputStream.read() \ninstead of BufferedReader.readLine().\n\nChanged the following files:\n\norg.eclipse.hyades.logging.adapter.sensors.SingleOSFileSensor\norg.eclipse.hyades.logging.adapter.internal.util.BufferedSinglePassReader\norg.eclipse.hyades.logging.adapter.plugin.properties"
  ],
  "commentCreationDates": [
    "2005-10-21T19:07:08+02:00",
    "2005-10-21T20:41:47+02:00",
    "2005-10-21T20:45:44+02:00",
    "2005-10-21T21:55:12+02:00",
    "2005-10-25T17:21:29+02:00",
    "2005-10-25T17:45:41+02:00",
    "2005-10-31T08:38:16+01:00"
  ],
  "traces": [
    {
      "exceptionType": "sun.io.MalformedInputException",
      "elements": [
        {
          "method": "sun.io.ByteToCharUTF8.convert",
          "source": "ByteToCharUTF8.java(Compiled Code)"
        },
        {
          "method": "sun.nio.cs.StreamDecoder$ConverterSD.convertInto",
          "source": "StreamDecoder.java:2 87"
        },
        {
          "method": "sun.nio.cs.StreamDecoder$ConverterSD.implRead",
          "source": "StreamDecoder.java:337"
        },
        {
          "method": "sun.nio.cs.StreamDecoder.read",
          "source": "StreamDecoder.java:223"
        },
        {
          "method": "java.io.InputStreamReader.read",
          "source": "InputStreamReader.java:208"
        },
        {
          "method": "java.io.BufferedReader.fill",
          "source": "BufferedReader.java(Compiled Code)"
        },
        {
          "method": "java.io.BufferedReader.readLine",
          "source": "BufferedReader.java(Compiled Code)"
        },
        {
          "method": "java.io.BufferedReader.readLine",
          "source": "BufferedReader.java:379"
        },
        {
          "method": "org.eclipse.hyades.logging.adapter.util.BufferedSinglePassReader.readLine",
          "source": "BufferedSinglePassReader.java:137"
        },
        {
          "method": "org.eclipse.hyades.logging.adapter.sensors.SingleOSFileSensor.getNext",
          "source": "SingleOSFileSensor.java:363"
        },
        {
          "method": "org.eclipse.hyades.logging.adapter.impl.BasicContext.run",
          "source": "BasicContext .java:150"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:568"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "113379",
      "date": "2005-10-21T20:41:47+02:00",
      "product": "TPTP GLA",
      "component": "Monitor.Execution",
      "severity": "critical"
    }
  ],
  "groupId": "113379",
  "bugId": "113379",
  "date": "2005-10-21T19:07:08+02:00",
  "product": "TPTP GLA",
  "component": "Monitor.Execution",
  "severity": "critical"
}