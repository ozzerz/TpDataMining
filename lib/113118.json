{
  "comments": [
    "Build id: 20051017111807\nAspectJ version: 1.5.0.200510141300\n\nThe following aspect resulted in the CFE:\n\npublic aspect CallTrace {\n\t/**\n\t * A marker interface used to pick the classes to trace. Declare any class you\nwant to\n\t * trace to implement this interface. The best way is using an aspect like the\none in\n\t * the class comment block above.\n\t */\n\tpublic static interface Traced {}\n\t\n\t/**\n\t * A marker annoation, can be used instead of {@link Traced}.\n\t */\n\t@Documented\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target({ElementType.TYPE, ElementType.ANNOTATION_TYPE})\n\tpublic @interface TracedAnno {}\n\t\n\tprivate static Level level \u003d Level.INFO;\n\t\n\t/**\n\t * Set the global logging level used for reporting traced calls. Defaults to INFO.\n\t * @param newLevel\n\t */\n\tpublic static void setLevel (Level newLevel) {\n\t\tlevel \u003d newLevel;\n\t}\n\t\n\t/**\n\t * @return the Level used for writing traced output.\n\t */\n\tpublic static Level getLevel () {\n\t\treturn level;\n\t}\n\t\n\tprivate static Logger log \u003d Logger.getLogger(Traced.class);\n\tprivate int nesting \u003d 0;\n\tprivate static StringBuffer prefixStr \u003d null;\n\tstatic {\n\t\tnew StringBuffer(1024);\n\t\tfor (int i\u003d0; i\u003c128; i++) { // stuff with \"+\".\n\t\t\tprefixStr.append(\"++++++++\"); \n\t\t}\n\t}\n\tpublic pointcut exclusions(): within(CallTrace) || within(*Tracer);\n\t\n\t// Distinguish between initialization JPs and other method calls, to work\n\t// around AJ limitation that around advice isn\u0027t supported for initializations.\n\t\n\tpublic pointcut traceIntfInit(): initialization(Traced+.new(..));\n\tpublic pointcut traceIntf(): call(* Traced+.*(..));\n\t\n\tpublic pointcut traceAnnoInit(): \n\t\tinitialization(com.adteractive..*.new(..)) \u0026\u0026 @target(TracedAnno);\n\tpublic pointcut traceAnno(): \n\t\t call(* com.adteractive..*.*(..)) \u0026\u0026 @target(TracedAnno);\n\n\tpublic pointcut traceInit(): !exclusions() \u0026\u0026 (traceIntfInit() || traceAnnoInit());\n\tpublic pointcut trace(): !exclusions() \u0026\u0026 (traceIntf() || traceAnno());\n\t\n\tbefore(): traceInit() {\n\t\tnesting++;\n\t\tString pre \u003d prefixStr.substring(0,nesting);\n\t\tlog.log (level, pre+\"\u003e \"+thisJoinPointStaticPart);\n\t}\n\t\n\tafter(): traceInit() {\n\t\tString pre \u003d prefixStr.substring(0,nesting);\n\t\tlog.log (level, pre+\"\u003c \"+thisJoinPointStaticPart);\n\t\tnesting--;\n\t}\n\t\n\tObject around(): trace() {\n\t\tnesting++;\n\t\tString pre \u003d prefixStr.substring(0,nesting);\n\t\tlog.log (level, pre+\"\u003e \"+thisJoinPointStaticPart);\n\t\tObject result \u003d proceed();\n\t\tlog.log (level, pre+\"\u003c \"+thisJoinPointStaticPart);\n\t\tnesting--;\n\t\treturn result;\n\t}\n}\n\nA separate aspect is used to \"declare parent\" or \"declare @type\" either the\nmarker interface or annotation, thereby adding tracing to the user-specified\nclasses. E.g.,\n\npublic aspect CallTraceTestTracer {\n//\tdeclare @type:   com.me.foo..*: @CallTrace.TracedAnno;\n\tdeclare parents: com.me.foo..* implements CallTrace.Traced;\n}\n\nThe exception wasn\u0027t thrown in a previous version when I used just before advice\nfor both the \"trace\" and \"traceInit\" pointcuts. \n\norg.aspectj.apache.bcel.classfile.ClassFormatException\nat org.aspectj.apache.bcel.classfile.Utility.typeOfSignature(Utility.java:1293)\nat org.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:166)\nat org.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:174)\nat org.aspectj.apache.bcel.generic.Type.getType(Type.java:155)\nat org.aspectj.weaver.bcel.BcelWorld.makeBcelType(BcelWorld.java:198)\nat org.aspectj.weaver.bcel.BcelShadow.createMethodGen(BcelShadow.java:2999)\nat org.aspectj.weaver.bcel.BcelShadow.extractMethod(BcelShadow.java:2826)\nat org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:2020)\nat org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:211)\nat org.aspectj.weaver.Shadow.implementMungers(Shadow.java:514)\nat org.aspectj.weaver.Shadow.implement(Shadow.java:391)\nat org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1781)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:394)\nat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:98)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1464)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1429)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1203)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1039)\nat\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300)\nat\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)\nat\norg.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.a\n\njdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:759)\nat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:249)\nat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:158)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat\norg.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\ntrouble in: \npublic class com.adteractive.framework.test.ConditionTestFilterTest extends\njunit.framework.TestCase:\n  com.adteractive.framework.ConditionTestFilter ctf\n[Signature(Lcom/adteractive/framework/ConditionTestFilter\u003cLcom/adteractive/framework/test/InputStub;Lcom/adteractive/framework/test/OutputStub;\u003e;)]\n  static Class class$0\n  private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0\n  public void \u003cinit\u003e():\n                    ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 16)\n                    INVOKESPECIAL junit.framework.TestCase.\u003cinit\u003e ()V\n    constructor-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.\u003cinit\u003e())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 17)\n    |               ACONST_NULL\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               RETURN   (line 16)\n    constructor-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.\u003cinit\u003e())\n  end public void \u003cinit\u003e()\n\n  protected void setUp() throws java.lang.Exception   \norg.aspectj.weaver.MethodDeclarationLineNumber: 23:543\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.setUp())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 24)\n    |               INVOKESPECIAL junit.framework.TestCase.setUp ()V\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 25)\n    |               NEW com.adteractive.framework.test.ConditionTestFilterStub\n    |               DUP\n    |               LDC \"ctf\"\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               ASTORE_1\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    | |             ALOAD_1\n    | |             INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterStub.\u003cinit\u003e\n(Ljava/lang/String;[Lcom/adteractive/framework/Filter;)V\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               RETURN   (line 26)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.setUp())\n  end protected void setUp() throws java.lang.Exception\n\n  public void testExecute()    org.aspectj.weaver.MethodDeclarationLineNumber:\n31:754\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testExecute())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 32)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               NEW com.adteractive.framework.test.InputStub\n    |               DUP\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.InputStub.\u003cinit\u003e ()V\n    | method-call(com.adteractive.framework.Output\ncom.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input))\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.execute\n(Lcom/adteractive/framework/Input;)Lcom/adteractive/framework/Output;\n    | method-call(com.adteractive.framework.Output\ncom.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input))\n    |               CHECKCAST com.adteractive.framework.test.OutputStub\n    |               ASTORE_1\n    |               LDC \"bf12\"   (line 33)\n    |               ALOAD_1     // com.adteractive.framework.test.OutputStub output\n    | method-call(com.adteractive.framework.Status\ncom.adteractive.framework.test.OutputStub.getStatus())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.test.OutputStub.getStatus\n()Lcom/adteractive/framework/Status;\n    | method-call(com.adteractive.framework.Status\ncom.adteractive.framework.test.OutputStub.getStatus())\n    | method-call(java.lang.String\ncom.adteractive.framework.Status.getAdditionalMessage())\n    | |             INVOKEINTERFACE\ncom.adteractive.framework.Status.getAdditionalMessage ()Ljava/lang/String;\n    | method-call(java.lang.String\ncom.adteractive.framework.Status.getAdditionalMessage())\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals\n(Ljava/lang/String;Ljava/lang/String;)V\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 34)\n    |               NEW com.adteractive.framework.test.ConditionTestFilterStub\n    |               DUP\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterStub.\u003cinit\u003e ()V\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 35)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               NEW com.adteractive.framework.test.InputStub\n    |               DUP\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.InputStub.\u003cinit\u003e ()V\n    | method-call(com.adteractive.framework.Output\ncom.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input))\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.execute\n(Lcom/adteractive/framework/Input;)Lcom/adteractive/framework/Output;\n    | method-call(com.adteractive.framework.Output\ncom.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input))\n    |               CHECKCAST com.adteractive.framework.test.OutputStub\n    |               ASTORE_1     // com.adteractive.framework.test.OutputStub output\n    |               ALOAD_1     // com.adteractive.framework.test.OutputStub\noutput   (line 36)\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNotNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    |               RETURN   (line 37)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testExecute())\n  end public void testExecute()\n\n  public void testGetFilterBranches()   \norg.aspectj.weaver.MethodDeclarationLineNumber: 42:1111\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testGetFilterBranches())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 43)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNotNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    |               ICONST_3   (line 44)\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    |               ARRAYLENGTH\n    | method-call(void junit.framework.Assert.assertEquals(int, int))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals (II)V\n    | method-call(void junit.framework.Assert.assertEquals(int, int))\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 45)\n    |               NEW com.adteractive.framework.test.ConditionTestFilterStub\n    |               DUP\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterStub.\u003cinit\u003e ()V\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 46)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    |               RETURN   (line 47)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testGetFilterBranches())\n  end public void testGetFilterBranches()\n\n  public void testSetFilterBranches()   \norg.aspectj.weaver.MethodDeclarationLineNumber: 52:1441\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testSetFilterBranches())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 53)\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    | |             INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    |               ASTORE_1\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 54)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ALOAD_1     // com.adteractive.framework.Filter[] branches\n    | method-call(void\ncom.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[]))\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.setFilterBranches\n([Lcom/adteractive/framework/Filter;)V\n    | method-call(void\ncom.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[]))\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 55)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNotNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    |               ICONST_3   (line 56)\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    |               ARRAYLENGTH\n    | method-call(void junit.framework.Assert.assertEquals(int, int))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals (II)V\n    | method-call(void junit.framework.Assert.assertEquals(int, int))\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 57)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ACONST_NULL\n    | method-call(void\ncom.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[]))\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.setFilterBranches\n([Lcom/adteractive/framework/Filter;)V\n    | method-call(void\ncom.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[]))\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 58)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    |               RETURN   (line 59)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testSetFilterBranches())\n  end public void testSetFilterBranches()\n\n  public void testConditionTestFilter()   \norg.aspectj.weaver.MethodDeclarationLineNumber: 64:1847\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilter())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 65)\n    |               NEW com.adteractive.framework.test.ConditionTestFilterStub\n    |               DUP\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterStub.\u003cinit\u003e ()V\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 66)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    |               LDC com.adteractive.framework.test.ConditionTestFilterStub \n (line 67)\n    | method-call(java.lang.String java.lang.Class.getSimpleName())\n    | |             INVOKEVIRTUAL java.lang.Class.getSimpleName ()Ljava/lang/String;\n    | method-call(java.lang.String java.lang.Class.getSimpleName())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName())\n    | |             INVOKEVIRTUAL com.adteractive.framework.FilterHelper.getName\n()Ljava/lang/String;\n    | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName())\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals\n(Ljava/lang/String;Ljava/lang/String;)V\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    |               RETURN   (line 68)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilter())\n  end public void testConditionTestFilter()\n\n  public void testConditionTestFilterString()   \norg.aspectj.weaver.MethodDeclarationLineNumber: 73:2158\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterString())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 74)\n    |               NEW com.adteractive.framework.test.ConditionTestFilterStub\n    |               DUP\n    |               LDC \"foo\"\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterStub.\u003cinit\u003e (Ljava/lang/String;)V\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 75)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNull(java.lang.Object))\n    |               LDC \"foo\"   (line 76)\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName())\n    | |             INVOKEVIRTUAL com.adteractive.framework.FilterHelper.getName\n()Ljava/lang/String;\n    | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName())\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals\n(Ljava/lang/String;Ljava/lang/String;)V\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    |               RETURN   (line 77)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterString())\n  end public void testConditionTestFilterString()\n\n  public void testConditionTestFilterStringFilterOfIOArray()   \norg.aspectj.weaver.MethodDeclarationLineNumber: 82:2456\n:\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterStringFilterOfIOArray())\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 83)\n    |               NEW com.adteractive.framework.test.ConditionTestFilterStub\n    |               DUP\n    |               LDC \"foo\"\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    | |             INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.ConditionTestFilterStub.\u003cinit\u003e\n(Ljava/lang/String;[Lcom/adteractive/framework/Filter;)V\n    |               PUTFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this   (line 84)\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertNotNull\n(Ljava/lang/Object;)V\n    | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object))\n    |               ICONST_3   (line 85)\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    | |             INVOKEVIRTUAL\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches\n()[Lcom/adteractive/framework/Filter;\n    | method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.ConditionTestFilter.getFilterBranches())\n    |               ARRAYLENGTH\n    | method-call(void junit.framework.Assert.assertEquals(int, int))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals (II)V\n    | method-call(void junit.framework.Assert.assertEquals(int, int))\n    |               LDC \"foo\"   (line 86)\n    |               ALOAD_0     //\ncom.adteractive.framework.test.ConditionTestFilterTest this\n    |               GETFIELD\ncom.adteractive.framework.test.ConditionTestFilterTest.ctf\nLcom/adteractive/framework/ConditionTestFilter;\n    | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName())\n    | |             INVOKEVIRTUAL com.adteractive.framework.FilterHelper.getName\n()Ljava/lang/String;\n    | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName())\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    | |             INVOKESTATIC\ncom.adteractive.framework.test.ConditionTestFilterTest.assertEquals\n(Ljava/lang/String;Ljava/lang/String;)V\n    | method-call(void junit.framework.Assert.assertEquals(java.lang.String,\njava.lang.String))\n    |               RETURN   (line 87)\n    method-execution(void\ncom.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterStringFilterOfIOArray())\n  end public void testConditionTestFilterStringFilterOfIOArray()\n\n  private com.adteractive.framework.Filter[] makeBranches()   \norg.aspectj.weaver.MethodDeclarationLineNumber: 89:2749\n:\n    method-execution(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n    |               ICONST_3   (line 90)\n    |               ANEWARRAY com.adteractive.framework.test.FilterHelperStub\n    |               ASTORE_1\n    |               ALOAD_1     // com.adteractive.framework.Filter[] branches \n (line 91)\n    |               ICONST_0\n    |               NEW com.adteractive.framework.test.FilterHelperStub\n    |               DUP\n    |               LDC \"bf1\"\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.FilterHelperStub.\u003cinit\u003e (Ljava/lang/String;)V\n    |               AASTORE\n    |               ALOAD_1     // com.adteractive.framework.Filter[] branches \n (line 92)\n    |               ICONST_1\n    |               NEW com.adteractive.framework.test.FilterHelperStub\n    |               DUP\n    |               LDC \"bf12\"\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.FilterHelperStub.\u003cinit\u003e (Ljava/lang/String;)V\n    |               AASTORE\n    |               ALOAD_1     // com.adteractive.framework.Filter[] branches \n (line 93)\n    |               ICONST_2\n    |               NEW com.adteractive.framework.test.FilterHelperStub\n    |               DUP\n    |               LDC \"bf\"\n    |               INVOKESPECIAL\ncom.adteractive.framework.test.FilterHelperStub.\u003cinit\u003e (Ljava/lang/String;)V\n    |               AASTORE\n    |               ALOAD_1     // com.adteractive.framework.Filter[] branches \n (line 94)\n    |               ARETURN\n    method-execution(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\n  end private com.adteractive.framework.Filter[] makeBranches()\n\nend public class com.adteractive.framework.test.ConditionTestFilterTest\n\nwhen implementing on shadow method-call(com.adteractive.framework.Filter[]\ncom.adteractive.framework.test.ConditionTestFilterTest.makeBranches())\nwhen weaving type com.adteractive.framework.test.ConditionTestFilterTest\nwhen weaving classes \nwhen weaving \nwhen incrementally building\nBuildConfig[C:\\cygwin\\home\\dwampler\\work\\workspace\\.metadata\\.plugins\\org.eclipse.ajdt.core\\adserver-service.generated.lst]\n#Files\u003d259",
    "i\u0027ll take a look ...",
    "Slight correction; the static initializer block should have as its first line:\nprefixStr \u003d new StringBuffer(1024);\nIt doesn\u0027t remove the bug, however. \n\nThe weaving succeeds for some modules, but not all. Most Junit tests fail to run\nwhen invoked (\u0027An internal error occurred during \"Launching\"\u0027).\n",
    "I simplified the pointcuts:\n\n\tpublic pointcut exclusions(): within(CallTrace) || within(*Tracer);\n\t\n\tpublic pointcut traceIntf(): \n\t\texecution(* com.adteractive..Traced+.*(..)) || \n\t\texecution(com.adteractive..Traced+.new(..));\n\t\n\tpublic pointcut traceAnno(): \n\t\texecution(* @TracedAnno com.adteractive..*.*(..)) || \n\t\texecution(@TracedAnno com.adteractive..*.new(..));\n\n\tpublic pointcut trace(): !exclusions() \u0026\u0026 (traceIntf() || traceAnno());\n\t\n\tObject around(): trace() {\n\t\t// same as before\n\t}\n\nThe exception dialog doesn\u0027t appear anymore, but I\u0027m still having problems\ngetting some, but not all, junit tests to run. Unfortunately, the \"failed to\nlaunch\" dialog provides no information. The log indicates an array index out of\nbound exception (value \u003d -1). The only connection to AJ is that this problem\ndidn\u0027t occur until I started using the aspect. I restarted eclipse, that wasn\u0027t\nenough. What finally got the tests to work again, with the tracing aspect, was\nto remove the AJ nature, rebuild, then add the AJ nature back and rebuild.",
    "Hmm, looking at this code:\n\norg.aspectj.apache.bcel.classfile.ClassFormatException\nat org.aspectj.apache.bcel.classfile.Utility.typeOfSignature(Utility.java:1293)\nat org.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:166)\nat org.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:174)\n\nit seems when the exception is thrown it should include the signature it was\nhaving trouble with - I guess that got lost somewhere in the error reporting? \nIn fact, here is the whole of \u0027typeOfSignature\u0027:\n\npublic static final byte typeOfSignature(String signature) throws\nClassFormatException {\n    try {\n      switch(signature.charAt(0)) {\n          case \u0027B\u0027 : return Constants.T_BYTE;\n          case \u0027C\u0027 : return Constants.T_CHAR;\n          case \u0027D\u0027 : return Constants.T_DOUBLE;\n\t      case \u0027F\u0027 : return Constants.T_FLOAT;\n\t      case \u0027I\u0027 : return Constants.T_INT;\n\t      case \u0027J\u0027 : return Constants.T_LONG;\n\t      case \u0027L\u0027 : return Constants.T_REFERENCE;\n\t      case \u0027[\u0027 : return Constants.T_ARRAY;\n\t      case \u0027V\u0027 : return Constants.T_VOID;\n\t      case \u0027Z\u0027 : return Constants.T_BOOLEAN;\n\t      case \u0027S\u0027 : return Constants.T_SHORT;\n          default:  \n\t        throw new ClassFormatException(\"Invalid method signature: \" +\nsignature); // \u003c\u003c this is line 1293\n      }\n    } catch(StringIndexOutOfBoundsException e) {\n      throw new ClassFormatException(\"Invalid method signature: \" + signature);\n    }\n  }\n\nWe are probably leaking a \u0027P\u0027 signature out of the compile stage, P being like\n\u0027L\u0027 but its how we choose to identify parameterized types like\nPjava/util/List\u003cLjava/lang/String;\u003e;\n\nWish I knew what the signature was...",
    "Created an attachment (id\u003d28477)\nEclipse log file with stack traces\n\nThis is the segment of the eclipse \".log\" file that contains the \"session\" data\nwhere the problem occurred.",
    "Specifically, I think the signature you want is probably \n\n...\n!STACK 0\n\norg.aspectj.apache.bcel.classfile.ClassFormatException: Invalid method\nsignature: Pcom/adteractive/framework/Filter\u003cTI;TO;\u003e;\n...\n\n(Near the end of the file.) Filter is an interface. Curiously, it is not advised\nby the aspect in question.",
    "Sorry i\u0027ve taken so long to get to this Dean :(\n\nHowever, I think I\u0027ve fixed this.  I found a bug in the code that creates\ngeneric signatures.  There are two ways to grab a signature for a type:\n\ngetSignature()\n\ngetSignatureForAttribute()\n\nthe first may return \"PSomeType\u003cLSomeOtherType;\u003e;\" whilse the second has to\nreturn something in the standard Java form \u0027LSomeType\u003cLSomeOtherType;\u003e;\" - we\nwere incorrectly using the first form when building the signature attribute for\na file.  \n\nIs it easy for you to recreate Dean? So you can try my fix when its available?",
    "the latest dev build includes what I think might fix it...",
    "I\u0027m closing this as I believe its fixed.  Dean, please reopen if you encounter\nthis again."
  ],
  "commentCreationDates": [
    "2005-10-19T20:01:25+02:00",
    "2005-10-19T20:08:52+02:00",
    "2005-10-19T20:12:58+02:00",
    "2005-10-19T21:25:49+02:00",
    "2005-10-19T21:40:21+02:00",
    "2005-10-19T21:58:00+02:00",
    "2005-10-19T21:59:42+02:00",
    "2005-11-11T15:13:11+01:00",
    "2005-11-12T18:55:19+01:00",
    "2005-11-16T16:09:55+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.apache.bcel.classfile.ClassFormatException",
      "elements": [
        {
          "method": "org.aspectj.apache.bcel.classfile.Utility.typeOfSignature",
          "source": "Utility.java:1293"
        },
        {
          "method": "org.aspectj.apache.bcel.generic.Type.getTypeInternal",
          "source": "Type.java:166"
        },
        {
          "method": "org.aspectj.apache.bcel.generic.Type.getTypeInternal",
          "source": "Type.java:174"
        },
        {
          "method": "org.aspectj.apache.bcel.generic.Type.getType",
          "source": "Type.java:155"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWorld.makeBcelType",
          "source": "BcelWorld.java:198"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.createMethodGen",
          "source": "BcelShadow.java:2999"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.extractMethod",
          "source": "BcelShadow.java:2826"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline",
          "source": "BcelShadow.java:2020"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.implementOn",
          "source": "BcelAdvice.java:211"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implementMungers",
          "source": "Shadow.java:514"
        },
        {
          "method": "org.aspectj.weaver.Shadow.implement",
          "source": "Shadow.java:391"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.implement",
          "source": "BcelClassWeaver.java:1781"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:394"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:98"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1464"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1429"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:1203"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1039"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:759"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:249"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:158"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "113118",
      "date": "2005-10-19T20:01:25+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    },
    {
      "exceptionType": "org.aspectj.apache.bcel.classfile.ClassFormatException",
      "elements": [
        {
          "method": "org.aspectj.apache.bcel.classfile.Utility.typeOfSignature",
          "source": "Utility.java:1293"
        },
        {
          "method": "org.aspectj.apache.bcel.generic.Type.getTypeInternal",
          "source": "Type.java:166"
        },
        {
          "method": "org.aspectj.apache.bcel.generic.Type.getTypeInternal",
          "source": "Type.java:174"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "113118",
      "date": "2005-10-19T21:40:21+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "113118",
  "bugId": "113118",
  "date": "2005-10-19T20:01:25+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}