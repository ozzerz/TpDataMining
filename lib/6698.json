{
  "comments": [
    "It would be nice if I could add a bookmark for a line within a file by just \nhitting ctrl-F2, and then navigate forward and backward between bookmarks using \nF2 and shift-F2. This is a feature I use quite often in most editors.",
    "Torrey,\n\n   Are you interested in writing this enhancement for us?",
    "Consider as a post 2.0 enhancement",
    "Reopen for investigation\n",
    "*** Bug 16932 has been marked as a duplicate of this bug. ***",
    "I have seem bookmarks done two ways. I have found both of them useful at \ndifferent times.\n\nOne way is as bug 16932 describes where a file/caret location is associated \nwith a hotkey. Pressing the hotkey goes to the bookmark location -- even if the \ncurren editor needs to change or a file needs to be opened. The implementation \nin VisualCafe does not give any visual indication of where the bookmark is set \n(and I have found that it is not really needed for this functionality).\n\nThis bug (6698) describes the way msdev does bookmarks. Ctrl-F2 toggles a \nbookmark icon in the left bar for the current line. Pressing F2 and Shift-F2 \ncycles forward and backwards through the bookmarks within a single file.",
    "*** Bug 40887 has been marked as a duplicate of this bug. ***",
    "I have been working on this and have a rough-cut working version.\n\nI have the following question for the Eclipse UI team:\n\nThese \"Fast Bookmarks\" should they be:\n\na) regular bookmarks with a predefined name say \"Fast Bookmark 1\", \"Fast\nBookmark 2\" etc.\n\nb) a new type of IMarker say IMarker.FAST_BOOKMARK",
    "*** Bug 22708 has been marked as a duplicate of this bug. ***",
    "It definitively would be \"cool\" to have the \"usual\" [Ctrl|Shift]+F2 handling of \nbookmarks.\nNow (Version 2.1.1) a bookmark can be set with Ctrl+F2, if defined manually, \nbut no shjortcut for bookmark removal is possible.\nWill this be available in version 3?",
    "16932 is not a duplicate of this bug; they are two different methods of doing \nbookmarking.\n\nThe \"Microsoft-style\" is to use control-F2 to toggle a bookmark, and F2 to \nmove the cursor from the current position to the _next_ bookmark, cycling \naround once at the top.\n\nThe \"Borland-style\" is to designate ten bookmarks by number key -- control-\nshift-# sets that bookmark, and control-# goes to the bookmark, even across \ndifferent files.  Bookmarks are displayed with a small numbered icon in the \nleft margin of the file they are associated with.\n\nI favor the Borland-style -- it gives me ten bookmarks to work with, I can hop \nto another file with them, and I don\u0027t need to \"cycle\" through bookmarks to \nfind the one I need.  In practice, when working on a problem, it is rare to \ndefine more than three or four, but I will very often define at least two.",
    "*** Bug 45342 has been marked as a duplicate of this bug. ***",
    "I favor also (and with me all the people interested in the bug #22491) the \nBorland/Brief style of handling the bookmarks.\n\nI also think that is a very useful and necessary enhancement which should \ndefinetly go into 3.0!\n\nCheers\n-PaVel",
    "*** Bug 46213 has been marked as a duplicate of this bug. ***",
    "There is an enhanced version of Quickmarks (1.0.10 for Eclipse 2.1.x) available \nat http://eclipse-tools.sourceforge.net/quickmarks/ since today. It works by \ndefault in \"Borland\" style, but can be completely switched to \"Microsoft\" style \nor give you the best of both worlds. It is highly configurable (e.g. you can \nhave one Set of Quickmarks per Workspace, Project, Folder or Document) and well \ndocumented. It runs basically in Eclipse 3.0 too in compatibility mode, a native \nport to Eclipse 3.0 is underway. I consider this the \"ultimate\" solution to all \nquick bookmarking functionality in Eclipse!",
    "*** Bug 76067 has been marked as a duplicate of this bug. ***",
    "*** Bug 76067 has been marked as a duplicate of this bug. ***",
    "Is there any plan to integrate such a feature in Eclipse SDK 3.X ?",
    "No plans yet but given the high votes I would certainly be willing to look at a\nproposed patch",
    "Created an attachment (id\u003d29038)\nQuickmarks feature/plugin incl. source\n\nMay be this is the help asked for.\n",
    "Sorry, I forgot to mention:\n\nthe feature/plugin is for Eclipse 3 and works for me since some time (month).\n\nI find it rather hard to contribute to Eclipse and get accepted.\nSome reasons might be:\n- my little playground is just not important (it was though, for me)\n- I did something wrong? Feature/plugin doesn\u0027t work for you?\n- my javadoc comments are too few/too verbose?\n\nAnd, yes, I know, my doc and declaring this little thing a \u0027feature\u0027 is\njust -vvvv, drop or shorten that at your will.\n\nI hope, this finally makes it into Eclipse.\n\nBest regards, Georg\n",
    "No - just a time issue I am sure. I am new to this component and it went through\na lot of performance work in 3.1 which was higher priority.\n\nI will up the priority to P2 so that we can see if we can get it into 3.2.",
    "*** Bug 58076 has been marked as a duplicate of this bug. ***",
    "*** Bug 121636 has been marked as a duplicate of this bug. ***",
    "Any reason, why this is not included in 3.2?",
    "Because other priorities ate the time we had to look at it. I\u0027ll mark it for 3.3.",
    "Are there any kind of *real* chances that this will make it for 3.3? \n\nCause start was 2001-12, so almost 5 years ago - and I frankly guess there are *always* other priorities. \n\nBut it makes me thinking, why other Editors (like Ultraedit) run with this feature for years while Eclipse no one thinking about it. And the provided patch for Quickmark has the short-comming of not working in ALL available editors:(",
    "Frankly it didn\u0027t make it into 3.2 because the markers views were in a lot of flux then. There is no significant work on them in 3.3 so I should be able to look at it now.\n\nWith 10 votes it is clearly of enough interest to the community to merit our attention in 3.3. The main issue I can see is taking more keybindings away in the platform - there is always an outcry if we reduce the amount of flexibility RCP apps have.",
    "(In reply to comment #26)\n\u003e ... And the provided patch for Quickmark has the short-comming of not\n\u003e working in ALL available editors:(\n\nHmm, I really did my best to make Quickmarks work everywhere where one can set\na normal Bookmark and I don\u0027t know of editors, where it isn\u0027t possible to set\nQuickmarks. Except for instance the class inspection view looking like an editor\nand coming up similar (e.g. when inspecting a jar or *.class file ... but\nneither you can edit that binary nor set a bookmark there (although the latter would be usefull).\n\nIf you find editors, where you can set a normal bookmark but no Quickmark,\nwould you please notify me at rehfeld@georg-rehfeld.de and give me neccesary\ndetails. Thanks, Georg\n",
    "All of these keybindings are currently in use in the platform - we are trying to minimize the extra keybindings we ship and this causes so many conflicts that we can\u0027t. We also trying to avoid the use of action sets that we can do everything by commands - we would need to migrate this plug-in too.\n\nHaving said that I think that Quickmarks would be a great contribution as a third party plug-in for people to use.  I went through and fixed up the compiliation problems for 3.3. I\u0027ll attach the updated plug-in to this bug.",
    "Created an attachment (id\u003d54665)\nUpdated plug-in\n\n",
    "Considering the high number of votes and duplicates -- please reconsider adding this feature into the main eclipse distribution.\n\nJust add the commands without \"default\" keybindings.",
    "Lets try again",
    "In 3.4 we are going to want to do this differently that it is implemented now so as to use the new markers and commands support.\n\nI had a look at this again and I am still not convinced that this is not something that would be better suited to a contribution from the community rather than adding a second concept for bookmark in the SDK.\n\nIf you were to use this then I think you want to define a markerContentGenerator for this type of bookmark (see the ide plug-in).\n\nAlso all of your actions should switch to commands. You could add keybindings to them in your own plug-in as well.",
    "With this plug-in loaded we currently break the multi-editor test suite (org.eclipse.ui.tests.multieditorMultiEditorTest) with this exception\n\njava.lang.NullPointerException\n\tat net.sourceforge.eclipsetools.quickmarks.AbstractMarkAction.getLastStatusLine(AbstractMarkAction.java:731)\n\tat net.sourceforge.eclipsetools.quickmarks.AbstractMarkAction.clearMessage(AbstractMarkAction.java:303)\n\tat net.sourceforge.eclipsetools.quickmarks.AbstractMarkAction.selectionChanged(AbstractMarkAction.java:230)\n\tat org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:206)\n\tat org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:277)\n\tat org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:299)\n\tat org.eclipse.ui.internal.AbstractSelectionService.fireSelection(AbstractSelectionService.java:156)\n\tat org.eclipse.ui.internal.AbstractSelectionService.setActivePart(AbstractSelectionService.java:282)\n\tat org.eclipse.ui.internal.WWinPartService.updateActivePart(WWinPartService.java:125)\n\tat org.eclipse.ui.internal.WWinPartService.access$0(WWinPartService.java:115)\n\tat org.eclipse.ui.internal.WWinPartService$1.partDeactivated(WWinPartService.java:48)\n\tat org.eclipse.ui.internal.PartListenerList2$4.run(PartListenerList2.java:113)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:857)\n\tat org.eclipse.ui.internal.PartListenerList2.fireEvent(PartListenerList2.java:53)\n\tat org.eclipse.ui.internal.PartListenerList2.firePartDeactivated(PartListenerList2.java:111)\n\tat org.eclipse.ui.internal.PartService.firePartDeactivated(PartService.java:116)\n\tat org.eclipse.ui.internal.PartService.setActivePart(PartService.java:165)\n\tat org.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged(WorkbenchPagePartList.java:56)\n\tat org.eclipse.ui.internal.PartList.setActivePart(PartList.java:126)\n\tat org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:3384)\n\tat org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:602)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2728)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2633)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$12(WorkbenchPage.java:2625)\n\tat org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2577)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2572)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2556)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2539)\n\tat org.eclipse.ui.tests.multieditor.MultiEditorTest.openAndValidateEditor(MultiEditorTest.java:422)\n\tat org.eclipse.ui.tests.multieditor.MultiEditorTest.testTrackOutline(MultiEditorTest.java:276)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat junit.framework.TestCase.runTest(TestCase.java:164)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:120)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:230)\n\tat junit.framework.TestSuite.run(TestSuite.java:225)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:230)\n\tat junit.framework.TestSuite.run(TestSuite.java:225)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:58)\n\tat org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:122)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:124)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3721)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3358)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.pde.internal.junit.runtime.UITestApplication.start(UITestApplication.java:52)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:515)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:455)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1193)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1169)\n"
  ],
  "commentCreationDates": [
    "2001-12-07T23:52:56+01:00",
    "2001-12-19T02:35:10+01:00",
    "2002-04-24T05:31:07+02:00",
    "2002-08-08T23:13:11+02:00",
    "2002-12-02T16:14:54+01:00",
    "2002-12-02T16:59:41+01:00",
    "2003-07-29T16:29:50+02:00",
    "2003-08-07T13:06:18+02:00",
    "2003-09-15T11:02:36+02:00",
    "2003-10-09T15:34:50+02:00",
    "2003-10-11T21:25:26+02:00",
    "2003-10-22T18:22:46+02:00",
    "2003-10-29T09:27:56+01:00",
    "2003-11-06T17:51:22+01:00",
    "2004-07-12T01:36:59+02:00",
    "2004-10-12T15:06:38+02:00",
    "2004-10-12T15:45:25+02:00",
    "2004-10-12T15:47:26+02:00",
    "2005-10-31T20:12:28+01:00",
    "2005-10-31T23:20:29+01:00",
    "2005-11-01T03:10:08+01:00",
    "2005-11-01T13:07:30+01:00",
    "2005-11-02T20:13:12+01:00",
    "2005-12-21T08:39:13+01:00",
    "2006-10-19T10:30:02+02:00",
    "2006-10-19T13:30:06+02:00",
    "2006-10-19T14:27:19+02:00",
    "2006-10-19T14:54:04+02:00",
    "2006-10-20T01:15:30+02:00",
    "2006-11-28T19:37:11+01:00",
    "2006-11-28T19:38:14+01:00",
    "2007-01-04T19:23:51+01:00",
    "2007-06-21T17:31:55+02:00",
    "2007-10-19T19:49:17+02:00",
    "2007-10-19T22:40:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "net.sourceforge.eclipsetools.quickmarks.AbstractMarkAction.getLastStatusLine",
          "source": "AbstractMarkAction.java:731"
        },
        {
          "method": "net.sourceforge.eclipsetools.quickmarks.AbstractMarkAction.clearMessage",
          "source": "AbstractMarkAction.java:303"
        },
        {
          "method": "net.sourceforge.eclipsetools.quickmarks.AbstractMarkAction.selectionChanged",
          "source": "AbstractMarkAction.java:230"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.refreshEnablement",
          "source": "PluginAction.java:206"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.selectionChanged",
          "source": "PluginAction.java:277"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.selectionChanged",
          "source": "PluginAction.java:299"
        },
        {
          "method": "org.eclipse.ui.internal.AbstractSelectionService.fireSelection",
          "source": "AbstractSelectionService.java:156"
        },
        {
          "method": "org.eclipse.ui.internal.AbstractSelectionService.setActivePart",
          "source": "AbstractSelectionService.java:282"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPartService.updateActivePart",
          "source": "WWinPartService.java:125"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPartService.access$0",
          "source": "WWinPartService.java:115"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPartService$1.partDeactivated",
          "source": "WWinPartService.java:48"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList2$4.run",
          "source": "PartListenerList2.java:113"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList2.fireEvent",
          "source": "PartListenerList2.java:53"
        },
        {
          "method": "org.eclipse.ui.internal.PartListenerList2.firePartDeactivated",
          "source": "PartListenerList2.java:111"
        },
        {
          "method": "org.eclipse.ui.internal.PartService.firePartDeactivated",
          "source": "PartService.java:116"
        },
        {
          "method": "org.eclipse.ui.internal.PartService.setActivePart",
          "source": "PartService.java:165"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged",
          "source": "WorkbenchPagePartList.java:56"
        },
        {
          "method": "org.eclipse.ui.internal.PartList.setActivePart",
          "source": "PartList.java:126"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.setActivePart",
          "source": "WorkbenchPage.java:3384"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.activate",
          "source": "WorkbenchPage.java:602"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched",
          "source": "WorkbenchPage.java:2728"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor",
          "source": "WorkbenchPage.java:2633"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$12",
          "source": "WorkbenchPage.java:2625"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$10.run",
          "source": "WorkbenchPage.java:2577"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2572"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2556"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2539"
        },
        {
          "method": "org.eclipse.ui.tests.multieditor.MultiEditorTest.openAndValidateEditor",
          "source": "MultiEditorTest.java:422"
        },
        {
          "method": "org.eclipse.ui.tests.multieditor.MultiEditorTest.testTrackOutline",
          "source": "MultiEditorTest.java:276"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:164"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:130"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:120"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:230"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:225"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:230"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:225"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run",
          "source": "JUnit3TestReference.java:130"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.TestExecution.run",
          "source": "TestExecution.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:460"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:386"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:58"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run",
          "source": "UITestApplication.java:122"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:124"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3721"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3358"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:288"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.UITestApplication.start",
          "source": "UITestApplication.java:52"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:193"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:515"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:455"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1193"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1169"
        }
      ],
      "number": 0,
      "commentIndex": 34,
      "bugId": "6698",
      "date": "2007-10-19T22:40:48+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "6698",
  "bugId": "6698",
  "date": "2001-12-07T23:52:56+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "enhancement"
}