{
  "comments": [
    "Although unable to force the behavior, it happens often enough to be a serious \nissue.\n\nI type the first few characters of something, followed by CTRL-SPACE to pop \ncode assist, then arrow down to the selection I want and hit \u003creturn\u003e. 90% of \nthe time it does as it is supposed to do. 10% of the time, some (or all) of the \neditor\u0027s characters are replaced with junk characters (like trying to view \na .dll in notepad).",
    "Can you attach a screenshot?\n\nMoving to JDT/Text",
    "Created an attachment (id\u003d2873)\nbefore corrupted display and after\n\nThis is an example of what happens to the editor.",
    "I most recently had this issue after using the right-click menu item \"Format\".",
    "Daniel, can you please have a look. This seems to be a strange error. Unclear \nif this is Text or SWT related.",
    "Charles,\n\nthis seems to be a major bug but I can\u0027t reproduce it. You say \" it happens\noften enough to be a serious\". Could you try to give a test case?\n\nCan you confirm that it only happens after you have used code formatter?\n\nDid you change any preferences? If so, could you export and attach your\npreferences as an .epf file?\n\nCould there be some line delimiter problems i.e. has the file been modified with\nanother editor or on another OS (e.g. Linux or Mac)?\n",
    "Created an attachment (id\u003d2906)\nCharles Hasegawa preferences export\n\nPreferences file as requested",
    "\u003ethis seems to be a major bug but I can\u0027t reproduce it. You say \" it happens\noften enough to be a serious\". Could you try to give a test case?\nI\u0027ve tried to replicate this behavior myself, and have been unsuccessful at \nreproducing this at will. I would love to be able to tell you how to reproduce \nthe bug (then I could stop doing it until it is fixed ;)) I understand its \nimpossible to fix a bug if you don\u0027t know where to look for it.\n\n\u003e Can you confirm that it only happens after you have used code formatter?\nNo, it happens frequently after a format, but just as often after using code \nassist.\n\n\u003e Could there be some line delimiter problems i.e. has the file been modified \nwith another editor or on another OS (e.g. Linux or Mac)?\nThe files are shared through CVS and some files would have been modified in \nLinux, however, I generally do not work on those files that are modified by the \npeople who use a linux environment. \n",
    "I tried to reproduce it - no luck. No one has seen it before.\n\nDid you select a template or a \"normal\" completion when it happened using code\nassist? I see that the code formatter is used for templates.\n\nI suspect the problem in the code formatter but as long as we don\u0027t have the\ntest case/file which causes it there\u0027s nothing we can do.\n\nNext time you see it please reopen the bug and add all the information you can\nprovide (including the file which causes the error).\n",
    "Created an attachment (id\u003d2912)\nClass to show this bug\n",
    "Finally able to replicate this bug at will on my system (I hope this works for \nyou as well).\n1) Open the file.\n2) In the outline view, select the class name (which should hide the comments \nand imports et al above the class definition. You should basically see :\n/**\n * @author Charles Hasegawa\n */\npublic class BugHunt implements Serializable, Cloneable, Enumeration, \nComparable, Iterator {\n    /**\n     * @see java.util.Enumeration#hasMoreElements()\n     */\n    public boolean hasMoreElements() {\n        return false;\n    }\n....\n}\n3)From any other source, copy the word \"ListModel\" to the clipboard\n4) Click on the end of the word Iterator and type (no quotes) \",\u003cCTRL-V\u003e\"\n5) ListModel should now be underlined as a compile error - type \"\u003cCTRL-SPACE\u003e\" -\n the display will barf everytime for me.",
    "Well, I can finally reproduce it now. Please confirm that you also get errors\nwritten to the log (either check the Error Log view or the .log file).\n",
    "Yes - specifically:\n\n!ENTRY org.eclipse.ui 4 4 Jan 07, 2003 10:28:09.281\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Jan 07, 2003 10:28:09.281\n!MESSAGE Failed to execute runnable (java.lang.IllegalArgumentException: \nArgument not valid)\n!STACK 0\norg.eclipse.swt.SWTException: Failed to execute runnable \n(java.lang.IllegalArgumentException: Argument not valid)\n\tat org.eclipse.swt.SWT.error(SWT.java:2180)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages\n(Synchronizer.java:97)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:845)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)\n!ENTRY org.eclipse.ui 4 4 Jan 07, 2003 10:28:09.281\n!MESSAGE \n*** Stack trace of contained exception ***\n!ENTRY org.eclipse.ui 4 0 Jan 07, 2003 10:28:09.281\n!MESSAGE Argument not valid\n!STACK 0\njava.lang.IllegalArgumentException: Argument not valid\n\tat org.eclipse.swt.SWT.error(SWT.java:2166)\n\tat org.eclipse.swt.SWT.error(SWT.java:2110)\n\tat org.eclipse.jface.text.DocumentAdapter.getLineAtOffset\n(DocumentAdapter.java:118)\n\tat org.eclipse.swt.custom.StyledText.getLineAtOffset\n(StyledText.java:3760)\n\tat org.eclipse.swt.custom.StyledText.getLineCount(StyledText.java:3716)\n\tat org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.doPaint\n(OverviewRuler.java:345)\n\tat \norg.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.doubleBufferPaint\n(OverviewRuler.java:323)\n\tat org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.redraw\n(OverviewRuler.java:520)\n\tat org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.access$1\n(OverviewRuler.java:517)\n\tat org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler$5.run\n(OverviewRuler.java:507)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages\n(Synchronizer.java:94)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:845)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)\n",
    "ok, I now found a small reproducible test case in our environment:\nBuild 20021218 (M4)\n1. Start empty workspace\n2. Create Java project and import JUnit\n3. Open TestCase.java\n4. !!! Remove the empty line between the last import and the class comment\n5. Enable \"Show Source of selected element only\"\n6. In the Outline click on TestCase\n7. Give the focus to the editor by clicking into it\n8. Ctrl+Shift+O (organize import)\n9. Select some text or type into the editor\n\u003d\u003d\u003e it is destroyed\n\nNote: formatting does not show this behavior, only organize imports\n\nThe DocumentAdapter seems to get out of synch with the StyledText widget\n",
    "After reviewing DM\u0027s last entry, I concur that formatting doesn\u0027t appear to \ncause this behavior, but rather changing the imports through code assist or \norganize imports seems to be the culprit. I assumed it was the formatter, as I \nusually do an organize imports followed immediately by a format. \n\nAll instances of this behavior I have seen today all occured after a change to \nthe imports.",
    "This bug was not in 2.0 but in 2.1-M1\n\n\n",
    "This bug surfaced a special case were the replaced text region was directly\nbefore the visible text region.\nFixed in ChildDocumentManager.adaptToInsert\nAvailable in builds \u003e N20030109\n",
    "start verifying"
  ],
  "commentCreationDates": [
    "2002-12-20T21:38:13+01:00",
    "2002-12-26T20:33:41+01:00",
    "2002-12-27T15:38:41+01:00",
    "2002-12-27T15:42:13+01:00",
    "2002-12-27T16:23:46+01:00",
    "2003-01-07T09:49:02+01:00",
    "2003-01-07T13:37:47+01:00",
    "2003-01-07T13:44:39+01:00",
    "2003-01-07T14:31:20+01:00",
    "2003-01-07T16:25:43+01:00",
    "2003-01-07T16:33:02+01:00",
    "2003-01-07T16:53:58+01:00",
    "2003-01-07T17:01:47+01:00",
    "2003-01-07T18:00:45+01:00",
    "2003-01-08T17:00:30+01:00",
    "2003-01-09T10:08:48+01:00",
    "2003-01-09T13:52:56+01:00",
    "2003-02-27T15:04:15+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument not valid)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2180"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:97"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1669"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1414"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1446"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1429"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 12,
      "bugId": "28777",
      "date": "2003-01-07T17:01:47+01:00",
      "product": "JDT",
      "component": "Text",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument not valid",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2166"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2110"
        },
        {
          "method": "org.eclipse.jface.text.DocumentAdapter.getLineAtOffset",
          "source": "DocumentAdapter.java:118"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.getLineAtOffset",
          "source": "StyledText.java:3760"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.getLineCount",
          "source": "StyledText.java:3716"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.doPaint",
          "source": "OverviewRuler.java:345"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.doubleBufferPaint",
          "source": "OverviewRuler.java:323"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.redraw",
          "source": "OverviewRuler.java:520"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler.access$1",
          "source": "OverviewRuler.java:517"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.OverviewRuler$5.run",
          "source": "OverviewRuler.java:507"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:31"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1669"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1414"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1446"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1429"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 1,
      "commentIndex": 12,
      "bugId": "28777",
      "date": "2003-01-07T17:01:47+01:00",
      "product": "JDT",
      "component": "Text",
      "severity": "critical"
    }
  ],
  "groupId": "28777",
  "bugId": "28777",
  "date": "2002-12-20T21:38:13+01:00",
  "product": "JDT",
  "component": "Text",
  "severity": "critical"
}