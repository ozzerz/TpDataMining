{
  "comments": [
    "I am facing a strange problem, Eclipse hangs while building as a part of\n auto build. For this I am using exnternal tool. I have got a build.xml\n where I have written all compiler steps, and I have changed same .project\n file also to invoke my build tool only. For build or rebuild of a project\n goes smooth and I do not have any problem. But during auto build (when\n you change a source file \u0026 save), it hangs.\n \n I noticed that in both scenario it uses different Monitor\n (IProgressMonitor)\n 1. For build/rebuild - DialogProgressMonitor\n 2. For autobuild - EventLoopProgressMonitor\n \n It looks like that there is something wrong with EventLoopProgressMonitor,\n I guess thread are not closed, and wiat for ever.\n \n Please find the .project and build.xml file.\n \n \u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\n \u003cprojectDescription\u003e\n \u003cnameTest\u003c/name\u003e\n \u003ccomment\u003c/comment\u003e\n \u003cprojects\u003e\n \u003c/projects\u003e\n \u003cbuildSpec\u003e\n \u003cbuildCommand\u003e\n \u003cnameorg.eclipse.ui.externaltools.ExternalToolBuilder\u003c/name\u003e\n \u003carguments\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_args}\u003c/key\u003e\n \u003cvalue\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_loc}\u003c/key\u003e\n \u003cvalue${workspace_loc:/Test/build.xml}\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_dir}\u003c/key\u003e\n \u003cvalue\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_refresh}\u003c/key\u003e\n \u003cvalue${none}\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_name}\u003c/key\u003e\n \u003cvalueext\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_type}\u003c/key\u003e\n \u003cvalueorg.eclipse.ui.externaltools.type.ant\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003cdictionary\u003e\n \u003ckey!{tool_show_log}\u003c/key\u003e\n \u003cvaluetrue\u003c/value\u003e\n \u003c/dictionary\u003e\n \u003c/arguments\u003e\n \u003c/buildCommand\u003e\n \u003c/buildSpec\u003e\n \u003cnatures\u003e\n \u003cnatureorg.eclipse.jdt.core.javanature\u003c/nature\u003e\n \u003c/natures\u003e\n \u003c/projectDescription\u003e\n \n \n \u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n \u003cproject name\u003d\"test\" default\u003d\"compile\" basedir\u003d\".\"\u003e\n   \u003ctarget name\u003d\"compile\" \u003e\n     \u003cexec dir\u003d\".\" executable\u003d\"javac\" \u003e\n       \u003carg line\u003d\" xyz.java\" /\u003e\n     \u003c/exec\u003e\n   \u003c/target\u003e\n \u003c/project\u003e",
    "After blocking the EventLoopProgressMonitor ( monitor.cancel(true), and\nmonitor.done()), and created new DialogProgressMonitor for building, and\nit goes fine.",
    "We had problems with hanging in 2.0.1...is it possible for you to try 2.0.2. A \nfix was introduced and it would be great if you could see if this addresses \nyour problem.  See bug 25191.",
    "marking as \"new\" until we have verification this is still a problem.",
    "We tried with Eclipse 2.0.2, and it is working fine if I commnet\n//monitor.isCanceled(); (blocking cancel functionality).\nIf you will use this, it throws error,\nSWT.thread error...\n\nWe are looking for this solution where user can cancel operation anytime.\nThis fix was not made till now. Is there any work around to achieve this?",
    "So you are now getting an SWT error?\nCan you provide the stack trace?",
    "Please find the stacktrace...\n \norg.eclipse.swt.SWTException: Invalid thread access\n\tat org.eclipse.swt.SWT.error(SWT.java:2119)\n\tat org.eclipse.swt.SWT.error(SWT.java:2051)\n\tat org.eclipse.swt.widgets.Display.error(Display.java:503)\n\tat org.eclipse.swt.widgets.Display.checkDevice(Display.java:370)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1285)\n\tat org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop\n(EventLoopProgressMonitor.java:89)\n\tat org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled\n(EventLoopProgressMonitor.java:68)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled\n(ProgressMonitorWrapper.java:87)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled\n(ProgressMonitorWrapper.java:87)\n\tat org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled\n(ProgressMonitorWrapper.java:87)\n\tat test.BuildLogger.checkCanceled(BuildLogger.java:354)\n\tat test.ant.BuildLogger.messageLogged(BuildLogger.java:217)\n\tat org.apache.tools.ant.Project.fireMessageLoggedEvent(Project.java:982)\n\tat org.apache.tools.ant.Project.fireMessageLogged(Project.java:998)\n\tat org.apache.tools.ant.Project.log(Project.java:250)\n\tat org.apache.tools.ant.Task.log(Task.java:207)\n\tat org.apache.tools.ant.taskdefs.LogOutputStream.processLine\n(LogOutputStream.java:132)\n\tat org.apache.tools.ant.taskdefs.LogOutputStream.processLine\n(LogOutputStream.java:123)\n\tat org.apache.tools.ant.taskdefs.LogOutputStream.processBuffer\n(LogOutputStream.java:113)\n\tat org.apache.tools.ant.taskdefs.LogOutputStream.write\n(LogOutputStream.java:103)\n\tat java.io.OutputStream.write(OutputStream.java:102)\n\tat org.apache.tools.ant.taskdefs.StreamPumper.run(StreamPumper.java:100)\n\tat java.lang.Thread.run(Thread.java:484)\n",
    "The SWT error is an error in your code.  SWT enforces that all access to its \nwidgets/state be only from the designated UI thread.  The coding style to \nworkaround this limitation is to make use of Display.asyncExec(Runnable) and \nDisplay.syncExec(Runnable). See the comments on these methods for more details \n(or some of the many SWT snippet examples)",
    "After doing above change it works fine without any problem. ",
    "Fixed in 2.0.2.\nNo plans for any additional work."
  ],
  "commentCreationDates": [
    "2002-11-13T06:29:41+01:00",
    "2002-11-13T06:33:29+01:00",
    "2002-11-13T12:13:00+01:00",
    "2002-11-16T02:15:17+01:00",
    "2002-11-16T05:50:18+01:00",
    "2002-11-18T03:02:47+01:00",
    "2002-11-18T06:30:46+01:00",
    "2002-11-18T13:26:05+01:00",
    "2002-11-19T11:34:37+01:00",
    "2002-11-19T15:17:03+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid thread access",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2119"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2051"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.error",
          "source": "Display.java:503"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.checkDevice",
          "source": "Display.java:370"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1285"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop",
          "source": "EventLoopProgressMonitor.java:89"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled",
          "source": "EventLoopProgressMonitor.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled",
          "source": "ProgressMonitorWrapper.java:87"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled",
          "source": "ProgressMonitorWrapper.java:87"
        },
        {
          "method": "org.eclipse.core.runtime.ProgressMonitorWrapper.isCanceled",
          "source": "ProgressMonitorWrapper.java:87"
        },
        {
          "method": "test.BuildLogger.checkCanceled",
          "source": "BuildLogger.java:354"
        },
        {
          "method": "test.ant.BuildLogger.messageLogged",
          "source": "BuildLogger.java:217"
        },
        {
          "method": "org.apache.tools.ant.Project.fireMessageLoggedEvent",
          "source": "Project.java:982"
        },
        {
          "method": "org.apache.tools.ant.Project.fireMessageLogged",
          "source": "Project.java:998"
        },
        {
          "method": "org.apache.tools.ant.Project.log",
          "source": "Project.java:250"
        },
        {
          "method": "org.apache.tools.ant.Task.log",
          "source": "Task.java:207"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.LogOutputStream.processLine",
          "source": "LogOutputStream.java:132"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.LogOutputStream.processLine",
          "source": "LogOutputStream.java:123"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.LogOutputStream.processBuffer",
          "source": "LogOutputStream.java:113"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.LogOutputStream.write",
          "source": "LogOutputStream.java:103"
        },
        {
          "method": "java.io.OutputStream.write",
          "source": "OutputStream.java:102"
        },
        {
          "method": "org.apache.tools.ant.taskdefs.StreamPumper.run",
          "source": "StreamPumper.java:100"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:484"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "26077",
      "date": "2002-11-18T06:30:46+01:00",
      "product": "Platform",
      "component": "Ant",
      "severity": "critical"
    }
  ],
  "groupId": "26077",
  "bugId": "26077",
  "date": "2002-11-13T06:29:41+01:00",
  "product": "Platform",
  "component": "Ant",
  "severity": "critical"
}