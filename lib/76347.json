{
  "comments": [
    "We have situation: \njava application tries to open word application. It fails on two computers. But\nworks fine on another two computers. \n\nThis is sample code:\n* * * * * \n        Shell shell \u003d new Shell();\n        OleFrame frame \u003d new OleFrame(shell, SWT.NONE);\n        \n        OleControlSite clientSite \u003d new OleControlSite(frame,\nSWT.NONE,\"Word.Document\");\n* * * * *\n\nApplication throws exception: \norg.eclipse.swt.SWTException: Failed to find requested interface on OLE Object.\nresult \u003d -2147467262\n\tat org.eclipse.swt.ole.win32.OLE.error(OLE.java:312)\n...\n\nIt fails while trying to query interface \"COM.IIDIViewObject2\". The problem is -\nit does well on two computers and fails on others two. \nSo, first, we have tried to reinstall word. And we\u0027ve found another mystic\nbehaviour:\nif we do not restart computer after installing word - application works fine. If\nwe do restart it - application throws error... \n\n\nSo, we wrote test application to see what differences are between these situations.\n\nHere is the code we tested:\n\nimport java.awt.Composite;\n\nimport org.eclipse.swt.SWTException;\nimport org.eclipse.swt.internal.ole.win32.COM;\nimport org.eclipse.swt.internal.ole.win32.COMObject;\nimport org.eclipse.swt.internal.ole.win32.GUID;\nimport org.eclipse.swt.internal.ole.win32.IMoniker;\nimport org.eclipse.swt.internal.ole.win32.IOleCommandTarget;\nimport org.eclipse.swt.internal.ole.win32.IOleDocument;\nimport org.eclipse.swt.internal.ole.win32.IOleDocumentView;\nimport org.eclipse.swt.internal.ole.win32.IOleInPlaceObject;\nimport org.eclipse.swt.internal.ole.win32.IOleLink;\nimport org.eclipse.swt.internal.ole.win32.IOleObject;\nimport org.eclipse.swt.internal.ole.win32.IPersist;\nimport org.eclipse.swt.internal.ole.win32.IStorage;\nimport org.eclipse.swt.internal.ole.win32.IUnknown;\nimport org.eclipse.swt.internal.ole.win32.IViewObject2;\nimport org.eclipse.swt.internal.ole.win32.OLEINPLACEFRAMEINFO;\nimport org.eclipse.swt.internal.win32.OS;\nimport org.eclipse.swt.internal.win32.RECT;\nimport org.eclipse.swt.ole.win32.OLE;\nimport org.eclipse.swt.ole.win32.OleFrame;\nimport org.eclipse.swt.widgets.Listener;\n\n\npublic class TestCOM {\n\n    public TestCOM() {\n        createCOMInterfaces();\n    }\n    \n    public static void main(String[] args) {\n        new TestCOM().OleClientSite(null,0,WORDPROGID);\n    }\n    \n    public void OleClientSite(Composite parent, int style, String progId) {\n//        this(parent, style);\n        try {\n            appClsid \u003d getClassID(progId);\n            if (appClsid \u003d\u003d null)\n                OLE.error(OLE.ERROR_INVALID_CLASSID);\n            track(\"appClsid \",appClsid);\n                \n            // Open a temporary storage object\n            tempStorage \u003d createTempStorage();\n        \n            // Create ole object with storage object\n            int[] address \u003d new int[1];\n            int result \u003d COM.OleCreate(appClsid, COM.IIDIUnknown,\nCOM.OLERENDER_DRAW, null, 0, tempStorage.getAddress(), address);\n            track(\"COM.OleCreate\",address);\n            if (result !\u003d COM.S_OK)\n                OLE.error(OLE.ERROR_CANNOT_CREATE_OBJECT, result);\n\n            objIUnknown \u003d new IUnknown(address[0]);\n\n            // Init sinks\n            addObjectReferences();\n\n            if (COM.OleRun(objIUnknown.getAddress()) \u003d\u003d OLE.S_OK) state \u003d\nSTATE_RUNNING;\n            \n        } catch (SWTException e) {\n            dispose();\n            disposeCOMInterfaces();\n            throw e;\n        }\n    }\n    \n    protected void addObjectReferences() {\n        //\n        int[] ppvObject \u003d new int[1];\n        if (objIUnknown.QueryInterface(COM.IIDIPersist, ppvObject) \u003d\u003d COM.S_OK) {\n            track(\"COM.IIDIPersist \",ppvObject);\n            IPersist objIPersist \u003d new IPersist(ppvObject[0]);\n            GUID tempid \u003d new GUID();\n            if (objIPersist.GetClassID(tempid) \u003d\u003d COM.S_OK)\n                objClsid \u003d tempid;\n            track(\"tempid \",tempid);\n            track(\"objClsid \",objClsid);\n\n            objIPersist.Release();\n        }\n        \n        //\n        ppvObject \u003d new int[1];\n        int result \u003d objIUnknown.QueryInterface(COM.IIDIViewObject2, ppvObject);\n        track(\"COM.IIDIViewObject2 \",ppvObject);\n        if (result !\u003d COM.S_OK)\n            OLE.error(OLE.ERROR_INTERFACE_NOT_FOUND, result);\n        objIViewObject2 \u003d new IViewObject2(ppvObject[0]);\n        objIViewObject2.SetAdvise(aspect, 0, iAdviseSink.getAddress());\n\n        //\n        ppvObject \u003d new int[1];\n        result \u003d objIUnknown.QueryInterface(COM.IIDIOleObject, ppvObject);\n        track(\"COM.IIDIOleObject \",ppvObject);\n        if (result !\u003d COM.S_OK)\n            OLE.error(OLE.ERROR_INTERFACE_NOT_FOUND, result);\n        objIOleObject \u003d new IOleObject(ppvObject[0]);\n        objIOleObject.SetClientSite(iOleClientSite.getAddress());\n        int[] pdwConnection \u003d new int[1];\n        objIOleObject.Advise(iAdviseSink.getAddress(), pdwConnection);\n        track(\"objIOleObject.Advise pdwConnection\",pdwConnection);\n        objIOleObject.SetHostNames(\"main\", \"main\");  //$NON-NLS-1$ //$NON-NLS-2$\n\n        // Notify the control object that it is embedded in an OLE container\n        COM.OleSetContainedObject(objIUnknown.getAddress(), true);\n\n        // Is OLE object linked or embedded?\n        ppvObject \u003d new int[1];\n        if (objIUnknown.QueryInterface(COM.IIDIOleLink, ppvObject) \u003d\u003d COM.S_OK) {\n            IOleLink objIOleLink \u003d new IOleLink(ppvObject[0]);\n            int[] ppmk \u003d new int[1];\n            if (objIOleLink.GetSourceMoniker(ppmk) \u003d\u003d COM.S_OK) {\n                IMoniker objIMoniker \u003d new IMoniker(ppmk[0]);\n                objIMoniker.Release();\n                type \u003d COM.OLELINKED;\n                objIOleLink.BindIfRunning();\n            } else {\n                isStatic \u003d true;\n            }\n            objIOleLink.Release();\n        }\n    }\n    protected int AddRef() {\n        refCount++;\n        return refCount;\n    }\n\n\n    protected IStorage createTempStorage() {\n        int[] tempStorage \u003d new int[1];\n        int grfMode \u003d COM.STGM_READWRITE | COM.STGM_SHARE_EXCLUSIVE |\nCOM.STGM_DELETEONRELEASE;\n        int result \u003d COM.StgCreateDocfile(null, grfMode, 0, tempStorage);\n        track(\"COM.StgCreateDocfile\",tempStorage);\n        if (result !\u003d COM.S_OK) OLE.error(OLE.ERROR_CANNOT_CREATE_FILE, result);\n        return new IStorage(tempStorage[0]);\n    }\n\n    protected GUID getClassID(String clientName) {\n        // create a GUID struct to hold the result\n        GUID guid \u003d new GUID();\n        \n        // create a null terminated array of char\n        char[] buffer \u003d null;\n        if (clientName !\u003d null) {\n            int count \u003d clientName.length();\n            buffer \u003d new char[count + 1];\n            clientName.getChars(0, count, buffer, 0);\n        }\n        if (COM.CLSIDFromProgID(buffer, guid) !\u003d COM.S_OK){\n            int result \u003d COM.CLSIDFromString(buffer, guid);\n            if (result !\u003d COM.S_OK)\n                OLE.error(OLE.ERROR_INVALID_CLASSID, result);\n        }\n        return guid;\n    }\n    /**\n     * Deactivates an active in-place object and discards the object\u0027s undo state.\n     */\n    public void deactivateInPlaceClient() {\n        if (objIOleInPlaceObject !\u003d null) {\n            objIOleInPlaceObject.InPlaceDeactivate();\n        }\n    }\n    protected void createCOMInterfaces() {\n        \n        iUnknown \u003d new COMObject(new int[]{2, 0, 0}){\n            public int method0(int[] args) {return QueryInterface(args[0],\nargs[1]);}\n            public int method1(int[] args) {return AddRef();}\n            public int method2(int[] args) {return Release();}\n        };\n        \n        iOleClientSite \u003d new COMObject(new int[]{2, 0, 0, 0, 3, 1, 0, 1, 0}){\n            public int method0(int[] args) {return QueryInterface(args[0],\nargs[1]);}\n            public int method1(int[] args) {return AddRef();}\n            public int method2(int[] args) {return Release();}\n            public int method3(int[] args) {return SaveObject();}\n            // method4 GetMoniker - not implemented\n            public int method5(int[] args) {return GetContainer(args[0]);}\n            public int method6(int[] args) {return ShowObject();}\n            public int method7(int[] args) {return OnShowWindow(args[0]);}\n            // method8 RequestNewObjectLayout - not implemented\n        };\n        \n        iAdviseSink \u003d new COMObject(new int[]{2, 0, 0, 2, 2, 1, 0, 0}){\n            public int method0(int[] args) {return QueryInterface(args[0],\nargs[1]);}\n            public int method1(int[] args) {return AddRef();}\n            public int method2(int[] args) {return Release();}\n            public int method3(int[] args) {return OnDataChange(args[0], args[1]);}\n            public int method4(int[] args) {return OnViewChange(args[0], args[1]);}\n            //method5 OnRename - not implemented\n            public int method6(int[] args) {OnSave();return 0;}\n            public int method7(int[] args) {return OnClose();}  \n        };\n        \n        iOleInPlaceSite \u003d new COMObject(new int[]{2, 0, 0, 1, 1, 0, 0, 0, 5, 1,\n1, 0, 0, 0, 1}){\n            public int method0(int[] args) {return QueryInterface(args[0],\nargs[1]);}\n            public int method1(int[] args) {return AddRef();}\n            public int method2(int[] args) {return Release();}\n            public int method3(int[] args) {return GetWindow(args[0]);}\n            public int method4(int[] args) {return ContextSensitiveHelp(args[0]);}\n            public int method5(int[] args) {return CanInPlaceActivate();}\n            public int method6(int[] args) {return OnInPlaceActivate();}\n            public int method7(int[] args) {return OnUIActivate();}\n            public int method8(int[] args) {return GetWindowContext(args[0],\nargs[1], args[2], args[3], args[4]);}\n            public int method9(int[] args) {return Scroll(args[0]);}\n            public int method10(int[] args) {return OnUIDeactivate(args[0]);}\n            public int method11(int[] args) {return OnInPlaceDeactivate();}\n            // method12 DiscardUndoState - not implemented\n            // method13 DeactivateAndUndoChange - not implemented\n            public int method14(int[] args) {return OnPosRectChange(args[0]);}\n        };\n        \n        iOleDocumentSite \u003d new COMObject(new int[]{2, 0, 0, 1}){\n            public int method0(int[] args) {return QueryInterface(args[0],\nargs[1]);}\n            public int method1(int[] args) {return AddRef();}\n            public int method2(int[] args) {return Release();}\n            public int method3(int[] args) {return ActivateMe(args[0]);}\n        };  \n    }\n    private void deleteTempStorage() {\n        //Destroy this item\u0027s contents in the temp root IStorage.\n        if (tempStorage !\u003d null){\n            tempStorage.Release();\n        }\n        tempStorage \u003d null;\n    }\n    protected void disposeCOMInterfaces() {\n        if (iUnknown !\u003d null)\n            iUnknown.dispose();\n        iUnknown \u003d null;\n        \n        if (iOleClientSite !\u003d null)\n        iOleClientSite.dispose();\n        iOleClientSite \u003d null;\n        \n        if (iAdviseSink !\u003d null)\n            iAdviseSink.dispose();\n        iAdviseSink \u003d null;\n        \n        if (iOleInPlaceSite !\u003d null)\n            iOleInPlaceSite.dispose();\n        iOleInPlaceSite \u003d null;\n        \n        if (iOleDocumentSite !\u003d null)\n            iOleDocumentSite.dispose();\n        iOleDocumentSite \u003d null;\n    }\n\n    private int GetContainer(int ppContainer) {\n        /* Simple containers that do not support links to their embedded \n         * objects probably do not need to implement this method. Instead, \n         * they can return E_NOINTERFACE and set ppContainer to NULL.\n         */\n        if (ppContainer !\u003d 0)\n            COM.MoveMemory(ppContainer, new int[]{0}, 4);\n        return COM.E_NOINTERFACE;\n    }\n    int ActivateMe(int pViewToActivate) {\n        return COM.S_OK;\n    }\n    private int CanInPlaceActivate() {\n        return COM.S_FALSE;\n    }\n    private int ContextSensitiveHelp(int fEnterMode) {\n        return COM.S_OK;\n    }\n    protected int GetWindow(int phwnd) {\n        if (phwnd \u003d\u003d 0)\n            return COM.E_INVALIDARG;\n        if (frame \u003d\u003d null) {\n            COM.MoveMemory(phwnd, new int[] {0}, 4);\n            return COM.E_NOTIMPL;\n        }\n        \n        // Copy the Window\u0027s handle into the memory passed in\n        COM.MoveMemory(phwnd, new int[] {frame.handle}, 4);\n        return COM.S_OK;\n    }\n    /*\n    RECT getRect() {\n        Point location \u003d this.getLocation();\n        Rectangle area \u003d frame.getClientArea();\n        RECT rect \u003d new RECT();\n        rect.left   \u003d location.x;\n        rect.top    \u003d location.y;\n        rect.right  \u003d location.x + area.width - borderWidths.left -\nborderWidths.right;\n        rect.bottom \u003d location.y + area.height - borderWidths.top -\nborderWidths.bottom;\n        return rect;\n    }\n    */\n    private int GetWindowContext(int ppFrame, int ppDoc, int lprcPosRect, int\nlprcClipRect, int lpFrameInfo) {  \n            return COM.E_NOTIMPL;\n    }\n    private int OnClose() {\n        return COM.S_OK;\n    }\n    private int OnDataChange(int pFormatetc, int pStgmed) {\n        return COM.S_OK;\n    }\n    private int OnInPlaceActivate() {\n        return COM.S_OK;\n    }\n    private int OnInPlaceDeactivate() {\n        return COM.S_OK;\n    }\n    private int OnPosRectChange(int lprcPosRect) {\n        return COM.S_OK;\n    }\n    private void OnSave() {\n    }\n    private int OnShowWindow(int fShow) {\n        return COM.S_OK;\n    }\n    private int OnUIActivate() {\n        return COM.S_OK;\n    }\n    private int OnUIDeactivate(int fUndoable) {\n            return COM.S_OK;\n    }\n    private int OnViewChange(int dwAspect, int lindex) {\n        return COM.S_OK;\n    }\n    protected int QueryInterface(int riid, int ppvObject) {\n\n        if (riid \u003d\u003d 0 || ppvObject \u003d\u003d 0)\n            return COM.E_NOINTERFACE;\n        GUID guid \u003d new GUID();\n        COM.MoveMemory(guid, riid, GUID.sizeof);\n\n        if (COM.IsEqualGUID(guid, COM.IIDIUnknown)) {\n            COM.MoveMemory(ppvObject, new int[] {iUnknown.getAddress()}, 4);\n            AddRef();\n            return COM.S_OK;\n        }\n        if (COM.IsEqualGUID(guid, COM.IIDIAdviseSink)) {\n            COM.MoveMemory(ppvObject, new int[] {iAdviseSink.getAddress()}, 4);\n            AddRef();\n            return COM.S_OK;\n        }\n        if (COM.IsEqualGUID(guid, COM.IIDIOleClientSite)) {\n            COM.MoveMemory(ppvObject, new int[] {iOleClientSite.getAddress()}, 4);\n            AddRef();\n            return COM.S_OK;\n        }\n        if (COM.IsEqualGUID(guid, COM.IIDIOleInPlaceSite)) {\n            COM.MoveMemory(ppvObject, new int[] {iOleInPlaceSite.getAddress()}, 4);\n            AddRef();\n            return COM.S_OK;\n        }\n//     INTENTIONALLY COMMENTED - see bug 35493  \n//      if (COM.IsEqualGUID(guid, COM.IIDIOleDocumentSite )) {\n//          String progID \u003d getProgramID();\n//          if (!progID.startsWith(\"PowerPoint\")) { //$NON-NLS-1$\n//              COM.MoveMemory(ppvObject, new int[]\n{iOleDocumentSite.getAddress()}, 4);\n//              AddRef();\n//              return COM.S_OK;\n//          }\n//      }\n        COM.MoveMemory(ppvObject, new int[] {0}, 4);\n        return COM.E_NOINTERFACE;\n    }\n    protected int Release() {\n        refCount--;\n        \n        if (refCount \u003d\u003d 0) {\n            disposeCOMInterfaces();\n        }\n        return refCount;\n    }\n    private int SaveObject() {\n        return COM.S_OK;\n    }\n    private int Scroll(int scrollExtant) {\n        return COM.S_OK;\n    }\n    private int ShowObject() {\n        /* Tells the container to position the object so it is visible to \n         * the user. This method ensures that the container itself is \n         * visible and not minimized.\n         */\n        return COM.S_OK;\n    }\n\n    public void dispose() {\n        \n    }\n    // Interfaces for this Ole Client Container\n    private COMObject  iUnknown;\n    private COMObject  iOleClientSite;\n    private COMObject  iAdviseSink;\n    private COMObject  iOleInPlaceSite;\n    private COMObject  iOleDocumentSite;\n    \n    protected GUID appClsid;\n    private GUID objClsid;\n    private int  refCount;\n    \n    // References to the associated Frame.\n    protected OleFrame frame;\n    \n    // Access to the embedded/linked Ole Object \n    protected IUnknown                  objIUnknown;\n    protected IOleObject                 objIOleObject;\n    protected IViewObject2             objIViewObject2;\n    protected IOleInPlaceObject     objIOleInPlaceObject;\n    protected IOleCommandTarget objIOleCommandTarget;\n    protected IOleDocumentView    objDocumentView;\n    \n    // Related storage information\n    protected IStorage tempStorage;     // IStorage interface of the receiver\n    \n    // Internal state and style information\n    private int     aspect;    // the display aspect of the embedded object,\ne.g., DvaspectContent or DvaspectIcon\n    private int     type;      // Indicates the type of client that can be\nsupported inside this container\n    private boolean isStatic;  // Indicates item\u0027s display is static, i.e., a\nbitmap, metafile, etc.\n    \n    private RECT borderWidths \u003d new RECT();\n    private RECT indent \u003d new RECT();\n    private boolean inUpdate \u003d false;\n    private boolean inInit \u003d true;\n    private boolean inDispose \u003d false;\n    \n    private static final String WORDPROGID \u003d \"Word.Document\"; //$NON-NLS-1$\n    \n    private Listener listener;\n    \n    static final int STATE_NONE \u003d 0;\n    static final int STATE_RUNNING \u003d 1;\n    static final int STATE_INPLACEACTIVE \u003d 2;\n    static final int STATE_UIACTIVE \u003d 3;\n    static final int STATE_ACTIVE \u003d 4;\n    int state \u003d STATE_NONE;\n\n    public void track(String msg) {\n        System.err.println(msg);\n    }\n    \n    public void track(String msg, GUID guid) {\n        System.err.print(msg);\n        System.err.println(formatGuid(guid));\n    }\n    \n    public void track(String msg, int[] addr) {\n        System.err.print(msg);\n        System.err.print(\" 0x0\");\n        System.err.println(Integer.toHexString(addr[0]));\n    }\n    \n    public static String formatGuid(GUID guid) {\n        StringBuffer sb \u003d new StringBuffer();\n\n        sb.append(Integer.toHexString(guid.data3));\n        sb.append(Integer.toHexString(guid.data2));\n        sb.append(Integer.toHexString(guid.data1));\n        sb.append(\u0027-\u0027);\n        sb.append(Integer.toHexString(guid.b1));\n        sb.append(Integer.toHexString(guid.b2));\n        sb.append(Integer.toHexString(guid.b3));\n        sb.append(\u0027-\u0027);\n        sb.append(Integer.toHexString(guid.b4));\n        sb.append(Integer.toHexString(guid.b5));\n        sb.append(Integer.toHexString(guid.b6));\n        sb.append(Integer.toHexString(guid.b7));\n        \n        return sb.toString();\n    }\n\n}\n\n\n\nThe results on computers there it works (and on computers there it doesn\u0027t work,\nbut after reinstalling word and BEFORE restart) are similar to: \n\nappClsid 0020906-000-00046\nCOM.StgCreateDocfile 0x03070888\nCOM.OleCreate 0x0a1628\nCOM.IIDIPersist  0x093038\ntempid 0020906-000-00046\nobjClsid 0020906-000-00046\nCOM.IIDIOleObject  0x093034\nCOM.IIDIDataObject  0x093030\nCOM.IIDIViewObject2  0x0a1e30\n\nAnd on computers there application doesn\u0027t work (and computers there it fails\nafter restart): \n\nappClsid 0020906-000-00046\nCOM.StgCreateDocfile 0x034f0888\nCOM.OleCreate 0x0a8edc\nCOM.IIDIPersist  0x0aa5fc\ntempid 0020906-000-00046\nobjClsid 0020906-000-00046\nCOM.IIDIOleObject  0x0aa71c\nCOM.IIDIDataObject  0x0aa7ec\nCOM.IIDIViewObject2  0x00\norg.eclipse.swt.SWTException: Failed to find requested interface on OLE Object.\nresult \u003d -2147467262\n\tat org.eclipse.swt.ole.win32.OLE.error(OLE.java:312)\n\tat TestCOM.addObjectReferences(TestCOM.java:108)\n\tat TestCOM.OleClientSite(TestCOM.java:57)\n\tat TestCOM.main(TestCOM.java:33)\nException in thread \"main\"  \n\n\nThe main difference here is that \nCOM.OleCreate 0x0a1628 is higher than COM.IIDIPersist  0x093038 there\napplication works and \nCOM.OleCreate 0x0a8edc is lower than COM.IIDIPersist  0x0aa5fc there it doesn\u0027t\nwork. \nIt seems that application working state depends on whichone is higher.... \n\n\nAny thoughts on this?",
    "I don\u0027t think comparing the relative position of VTable addresses in global \nmemory has very much significance.  This one still remains a mystery to me.  \nTo date, I still have not found a machine in my building that can reproduce \nthis problem to really debug it.\n\nCan you verify that the GUID for IVewObject2 is the same on all of your \nmachines? (Look in the registry using regedit or use OleViewer to see the \nguids).\n\n*** This bug has been marked as a duplicate of 21148 ***"
  ],
  "commentCreationDates": [
    "2004-10-15T14:12:57+02:00",
    "2004-10-18T22:34:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Failed to find requested interface on OLE Object. result \u003d -2147467262",
      "elements": [
        {
          "method": "org.eclipse.swt.ole.win32.OLE.error",
          "source": "OLE.java:312"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "76347",
      "duplicateId": "21148",
      "date": "2004-10-15T14:12:57+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Failed to find requested interface on OLE Object. result \u003d -2147467262",
      "elements": [
        {
          "method": "org.eclipse.swt.ole.win32.OLE.error",
          "source": "OLE.java:312"
        },
        {
          "method": "TestCOM.addObjectReferences",
          "source": "TestCOM.java:108"
        },
        {
          "method": "TestCOM.OleClientSite",
          "source": "TestCOM.java:57"
        },
        {
          "method": "TestCOM.main",
          "source": "TestCOM.java:33"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "76347",
      "duplicateId": "21148",
      "date": "2004-10-15T14:12:57+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "21148",
  "bugId": "76347",
  "duplicateId": "21148",
  "date": "2004-10-15T14:12:57+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}