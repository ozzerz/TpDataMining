{
  "comments": [
    "when I run \"mirror jars\" task, using feature-ep.xml, (for M6). \nI receive a message that says some jars (or fragmenets?) are missing from \nthe host update site. I did not actually look at that home site, but figure either they really are not there, or there is a problem with the site.xml at the host site. \"hpux.ia64_32_1.0.0.v20051114.jar\"? \n\nSo, it could be claimed this isn\u0027t needed, since part of \"platform\" and we always assume (so far) that user must start with platform installed. But, if there\u0027s a relatively easy fix for this, I think we should fix it so there is a \"complete set\" of jars up there. If its hard to fix, perhaps we should just remove the whole \"platform feature\"? \n\n\n\n\n     [java] !ENTRY org.eclipse.update.core 4 0 2006-04-10 03:29:18.141\n     [java] !MESSAGE Unable to retrieve remote reference \"http://download.eclipse.org/eclipse/updates/3.2milestones/plugins/org.eclipse.core.file                                                                               system.hpux.ia64_32_1.0.0.v20051114.jar\". [Server returned HTTP response code: \"404 Not Found\" for URL: http://download.eclipse.org/eclipse/updat                                                                               es/3.2milestones/plugins/org.eclipse.core.filesystem.hpux.ia64_32_1.0.0.v20051114.jar.]\n     [java] !STACK 0\n     [java] java.io.IOException: Server returned HTTP response code: \"404 Not Found\" for URL: http://download.eclipse.org/eclipse/updates/3.2mile                                                                               stones/plugins/org.eclipse.core.filesystem.hpux.ia64_32_1.0.0.v20051114.jar.\n     [java]     at org.eclipse.update.internal.core.UpdateManagerUtils.checkConnectionResult(UpdateManagerUtils.java:557)\n     [java]     at org.eclipse.update.core.ContentReference.getInputStream(ContentReference.java:152)",
    "An inactive committer contributes hpux.ia64_32 drops and therefore what is in the repository is not current or valid.  I can remove the reference from the platform feature, would this be okay?",
    "Perfect. if not valid, feature shouldn\u0027t refer to it, so, best to yank it. \n\n",
    "Actually, after speaking with Sonia, she feels we should keep in it the feature, since they HP often contributes the libraries after we have shipped.  Is there a way that your script can ignore it?  We\u0027ll have the same issue with linux-gtk-ia64 drops from Intel.",
    "I knew that was too easy :) \n\nI\u0027ll have to think about it now! :) But, will leave these questions ... these are fragments, right? Is there any merit to have \"dummy\" fragments in place, with everything but the DLLs?  \n\nPerhaps the \"plugin versioning rules\" experts would have a recommendation. It seems a clear case where the feature does, technically, \"change\" after release, so the feature\u0027s version (or qualifier, at least) should change, technically. \n\nIt does seem to stop the whole mirroring operation from working/succeeding ... that is, nothing is mirrored if this error occurs. As I indicated, we could just leave the whole platform out of the mirroring operation, and just \"mirror\" JDT and PDE, since currently we are assuming someone starts off with a whole, valid platform feature installed. But ... does seem like a better long term solution is needed -- since, after all, everyone else does follow your good examples of best practices :) ",
    "Good point, with the last release we didn\u0027t have qualifiers on our features.\n\nI\u0027ve sent email to the teams that contribute libraries to our builds to determine if they will be contributing to the 3.2 stream.  In any case, the version that they contribute to the release should be included in the map file and thus reflected in the feature.  If they contribute after the release, they will just have to provide zips on the download page and not be available the update site.\n\nCurrently, the content of these libraries is stale.  \n\nSince they are fragments, the users will not download them unless they are using that specific platform. The download numbers on these platforms are very low and thus the probability of someone running update and requesting these libraries is very remote.  Is there a way your tool can filter them when verifying the update site.\n\nI think this is a list of all the platforms that should be excluded.  Some of them are contributed by other teams. In other cases, we just have them in our source build as requested by different linux distros.\n\tlinux, gtk, ppc64 \u0026 \\\t\n\tlinux, gtk, ia64 \u0026\\\n\tsolaris, motif, sparc \u0026 \\ (as of this week see bug# 135533)\n\thpux, motif, ia64 \u0026 \\\n\thpux, motif, ia64_32 \u0026 \\\n\tqnx, photon, x86",
    "closing, see comment #5",
    "Thanks very much for investigating and documenting. I do not know if there is an easy way to leave out only some platforms (I don\u0027t think so) so for now will just not even attempt to mirror the \"platform feature\", since it is not required for Callisto ... since, current plans assume someone always starts with the platform feature installed. If anyone ever needs/wants to loosen this assumption, we will have to re-open this discussion at that time. \n\n\n\n",
    "David, we would like the platform feature on the callisto update site for people who are running RCP apps etc.  \n\nDoes the mirror jars task stop completely when it hits the missing jars or does it just produce a message?  If it stops completely, perhaps you could open a bug against update requesting an option that would allow you to log the missing jars and continue.\n\n",
    "Thanks Kim. Yes, don\u0027t know what I was thinking ... users can not even update from M5 to RC0 without the platform bits being there. \n\nI have confirmed that none of the feature is mirrored if one part fails, and have opened bug 137538 to track that. \n",
    "BTW, the platform team can fix this by fixing your feature.xml to not refer to the missing fragments, right? Is there any reason to not do that? \n\nI\u0027ve looked at the update mirror code to see if easy to simply \"skip and continue\" and it does not appear to be a easy fix (and, technically, and API change, as most related API\u0027s are spec\u0027d to \"throw an exception if the archive does not exist\". \n\n\n\n",
    "No, we would rather not remove them.  We would like to include them so they can contribute them.  I have written Intel and HP and they apparently are interested in contributing these libraries for 3.2.",
    "BTW, when I say \"remove them\", I just mean to comment them out for now. \nThe effected feature jars should all get \"qualified\" automatically during your build, right? \n\nI do believe with the \"qualifier\" approach this is the right thing to do, for \nthe sake of proper (reproducable) \"release engineering\" ... and might even be required? to get update manger, etc., to recognize that something\u0027s changed. \n\nHere\u0027s the \"complete list\" of what\u0027s missng. Please confirm this matches your \nexpectations ... 2 for platform, 4 for rcp\n\nDownloading plug-in archives for org.eclipse.platform_3.2.0.v20060324-zXLbgME25YaqZWd ...\n  ContinueOnError:   plugins/org.eclipse.core.filesystem.hpux.ia64_32_1.0.0.v20051114.jar\n  ContinueOnError:   plugins/org.eclipse.core.filesystem.qnx.x86_1.0.0.v20051114.jar\n\nDownloading plug-in archives for org.eclipse.rcp_3.2.0.v20060412-SRDNfyds4S-i1VV ...\n  ContinueOnError:   plugins/org.eclipse.swt.gtk.linux.ia64_3.2.0.HEAD.jar\n  ContinueOnError:   plugins/org.eclipse.swt.motif.solaris.sparc_3.2.0.v3230.jar\n  ContinueOnError:   plugins/org.eclipse.swt.photon.qnx.x86_3.2.0.v3230.jar\n  ContinueOnError:   plugins/org.eclipse.swt.motif.hpux.ia64_32_3.2.0.HEAD.jar\n\n\nHope you don\u0027t mind, I changed the title to be more accurate now that I know what\u0027s going on. \n\n",
    "Contributing parties, such as HP and Intel, use our source builds to generate their drops.  If we were to remove these jars from the platform feature, we would have to construct a special build time platform feature that would be used only to generate our source builds.  We don\u0027t have the time to do the extensive testing that is required of these changes at this time.",
    "closing"
  ],
  "commentCreationDates": [
    "2006-04-10T09:46:20+02:00",
    "2006-04-10T15:08:12+02:00",
    "2006-04-10T15:13:45+02:00",
    "2006-04-10T15:30:08+02:00",
    "2006-04-10T16:06:48+02:00",
    "2006-04-10T21:16:44+02:00",
    "2006-04-11T20:18:50+02:00",
    "2006-04-11T21:29:19+02:00",
    "2006-04-19T16:37:36+02:00",
    "2006-04-19T18:45:54+02:00",
    "2006-04-20T02:55:24+02:00",
    "2006-04-20T14:11:30+02:00",
    "2006-04-24T06:50:08+02:00",
    "2006-04-27T23:16:18+02:00",
    "2006-07-07T15:30:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "Server returned HTTP response code: \"404 Not Found\" for URL: http://download.eclipse.org/eclipse/updates/3.2mile                                                                               stones/plugins/org.eclipse.core.filesystem.hpux.ia64_32_1.0.0.v20051114.jar.      [java]",
      "elements": [
        {
          "method": "org.eclipse.update.internal.core.UpdateManagerUtils.checkConnectionResult",
          "source": "UpdateManagerUtils.java:557"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "135804",
      "date": "2006-04-10T09:46:20+02:00",
      "product": "Platform",
      "component": "Releng",
      "severity": "normal"
    }
  ],
  "groupId": "135804",
  "bugId": "135804",
  "date": "2006-04-10T09:46:20+02:00",
  "product": "Platform",
  "component": "Releng",
  "severity": "normal"
}