{
  "comments": [
    "20030924\n\nI suspect that this is actually an issue with background builds but whenever I \ndo a Synch refresh with the live synch view my log fills with resource not \nlocal exceptions:\n\norg.eclipse.core.internal.resources.ResourceException: \nResource /org.eclipse.ui.tests/bin/org is not local.\n\tat org.eclipse.core.internal.resources.Resource.checkLocal\n(Resource.java:308)\n\tat org.eclipse.core.internal.resources.Resource.setSessionProperty\n(Resource.java:1260)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache.safe\nSetSessionProperty(SessionPropertySyncInfoCache.java:347)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache.setR\nesourceSyncInfoCached(SessionPropertySyncInfoCache.java:112)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheResource\nSyncForChildren(EclipseSynchronizer.java:749)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getSyncBytes\n(EclipseSynchronizer.java:280)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.getSyncBytes\n(EclipseResource.java:206)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.isManaged\n(EclipseResource.java:165)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored\n(EclipseResource.java:119)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored\n(EclipseFolder.java:267)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored\n(EclipseResource.java:144)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored\n(EclipseFolder.java:267)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored\n(EclipseResource.java:144)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored\n(EclipseFolder.java:267)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored\n(EclipseResource.java:144)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored\n(EclipseFolder.java:267)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored\n(EclipseResource.java:144)\n\tat \norg.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.isSupervised\n(CVSSyncTreeSubscriber.java:275)\n\tat \norg.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo\n(CVSSyncTreeSubscriber.java:171)\n\tat \norg.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.collect\n(SubscriberEventHandler.java:301)\n\tat \norg.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.processEvents\n(SubscriberEventHandler.java:239)\n\tat org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler$1.run\n(SubscriberEventHandler.java:195)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:61)",
    "The cause of this could be that a resource is being deleted while we are \naccessing a session property on the object. We don\u0027t lock the resource using a \nscheduling rule so the delete happens in between our check for existance and \nthe access of the session property.\n\nThere are two ways to handle this. Either we catch the exception and act \nappropriatly (i.e. fail to cache and return the requested sync info) or we can \nobtain the EclipseSynchronizer lock in the move/delete hook to ensure that \nfiles are not deleted while we are accessing sync info cached as session \nproperties.",
    "One further note. Using the lock in the move/delete hook won\u0027t work for the \ncase of an external deletion followed by a refresh local.",
    "It strikes me as odd that you\u0027re trying to retreive sync info for a folder below\nthe \"bin\" directory, which is presumably not shared with CVS.",
    "This event was probably in response to file modification. We have to check if \nthe file is managed to know if it should be processed. ",
    "It turns out that this particular case can be handled by a pre-check in the \ncode where we determine where to cache sync info. We need to check for both \nexistance and local before using session properties. \n\nHowever, in general, I don\u0027t think we cannot rely in the prechecks we do in \nthe EclipseSynchronizer because the stt of the workspace could change. I think \nwe need to review the EclipseSycnrhonizer for places where we need to catch \nand handle exceptions that indicate that the state of the workspace changed.",
    "*** Bug 43716 has been marked as a duplicate of this bug. ***",
    "This particular problem has been fixed in HEAD. I\u0027ve opened bug 43822 to \ncapture the concerns about how the sync cahce works.",
    "*** Bug 43671 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2003-09-24T18:47:58+02:00",
    "2003-09-24T20:43:45+02:00",
    "2003-09-24T20:44:32+02:00",
    "2003-09-24T20:47:53+02:00",
    "2003-09-24T20:59:07+02:00",
    "2003-09-25T17:21:49+02:00",
    "2003-09-29T15:16:47+02:00",
    "2003-09-29T15:25:15+02:00",
    "2003-09-29T18:14:19+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Resource /org.eclipse.ui.tests/bin/org is not local.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkLocal",
          "source": "Resource.java:308"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.setSessionProperty",
          "source": "Resource.java:1260"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache.safeSetSessionProperty",
          "source": "SessionPropertySyncInfoCache.java:347"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.SessionPropertySyncInfoCache.setResourceSyncInfoCached",
          "source": "SessionPropertySyncInfoCache.java:112"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheResourceSyncForChildren",
          "source": "EclipseSynchronizer.java:749"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getSyncBytes",
          "source": "EclipseSynchronizer.java:280"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.getSyncBytes",
          "source": "EclipseResource.java:206"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.isManaged",
          "source": "EclipseResource.java:165"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored",
          "source": "EclipseResource.java:119"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored",
          "source": "EclipseFolder.java:267"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored",
          "source": "EclipseResource.java:144"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored",
          "source": "EclipseFolder.java:267"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored",
          "source": "EclipseResource.java:144"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored",
          "source": "EclipseFolder.java:267"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored",
          "source": "EclipseResource.java:144"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isIgnored",
          "source": "EclipseFolder.java:267"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.isIgnored",
          "source": "EclipseResource.java:144"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.isSupervised",
          "source": "CVSSyncTreeSubscriber.java:275"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo",
          "source": "CVSSyncTreeSubscriber.java:171"
        },
        {
          "method": "org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.collect",
          "source": "SubscriberEventHandler.java:301"
        },
        {
          "method": "org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler.processEvents",
          "source": "SubscriberEventHandler.java:239"
        },
        {
          "method": "org.eclipse.team.internal.ui.sync.sets.SubscriberEventHandler$1.run",
          "source": "SubscriberEventHandler.java:195"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:61"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "43592",
      "date": "2003-09-24T18:47:58+02:00",
      "product": "Platform",
      "component": "Team",
      "severity": "normal"
    }
  ],
  "groupId": "43592",
  "bugId": "43592",
  "date": "2003-09-24T18:47:58+02:00",
  "product": "Platform",
  "component": "Team",
  "severity": "normal"
}