{
  "comments": [
    "Test Driver:TPTP-4.2.0-200604101029 \n\nSteps:\n\n1. Run the Log parser example provided in the \"Logging\" examples gallery, i.e.File-\u003eNew-\u003eExample...-\u003eExamples-\u003eLogging-\u003eLog Parser sample.\n2. In the plugin.xml of the generated project replace the logParser contribution with the following:\n\n        \u003cextension\n                point\u003d\"org.eclipse.hyades.logging.parsers.logParser\"\u003e\n                \u003cparser\n                       name\u003d\"%LOG_PARSER_SAMPLE_NAME\"\n                       icon\u003d\"./icons/full/obj16/apache_error.gif\"\n                       description\u003d\"%LOG_PARSER_SAMPLE_DESCRIPTION\"\n                       class\u003d\"MyParserExtension\"\n                       ui_name\u003d\"%LOG_PARSER_SAMPLE_NAME\"\n                       id\u003d\"MyParser\"\u003e\n                        \u003cfield\n                                useBrowse\u003d\"true\"\n                                defaultValue\u003d\"syslog.log\"\n                                name\u003d\"%LOG_PARSER_SAMPLE_FILE_PATH_NAME\"\n                                helpContextId\u003d\"\"\n                                tooltip\u003d\"%LOG_PARSER_SAMPLE_FILE_PATH_TOOLTIP\"\n                                id\u003d\"file_path\"\n                                browseType\u003d\"*.log\"\u003e\n                        \u003c/field\u003e\n                        \u003cfield\n                                useBrowse\u003d\"false\"\n                                defaultValue\u003d\"\"\n                                name\u003d\"%LOG_PARSER_SAMPLE_VERSION_NAME\"\n                                helpContextId\u003d\"\"\n                                tooltip\u003d\"%LOG_PARSER_SAMPLE_VERSION_TOOLTIP\"\n                                id\u003d\"PRODUCT_VERSION\"\u003e\n                        \u003c/field\u003e\n                        \u003cfield\n                                useBrowse\u003d\"false\"\n                                defaultValue\u003d\"\"\n                                name\u003d\"%LOG_PARSER_SAMPLE_RELEASE_NAME\"\n                                helpContextId\u003d\"\"\n                                tooltip\u003d\"%LOG_PARSER_SAMPLE_RELEASE_TOOLTIP\"\n                                id\u003d\"PRODUCT_RELEASE\"\u003e\n                        \u003c/field\u003e\n                        \u003cfield\n                                useBrowse\u003d\"true\"\n                                defaultValue\u003d\"Default\"\n                                name\u003d\"%LOG_PARSER_SAMPLE_PARSER_VERISON_NAME\"\n                                helpContextId\u003d\"\"\n                                tooltip\u003d\"%LOG_PARSER_SAMPLE_PARSER_VERSION_TOOLTIP\"\n                                ui_type\u003d\"combobox\"\n                                id\u003d\"version\"\u003e\n                        \u003c/field\u003e\n                        \u003cfield\n                                useBrowse\u003d\"true\"\n                                defaultValue\u003d\"Parser option 1, Parser option 2\"\n                                name\u003d\"Options\"\n                                helpContextId\u003d\"\"\n                                tooltip\u003d\"Parser options\"\n                                ui_type\u003d\"radio\"\n                                id\u003d\"parserOptions\"\u003e\n                        \u003c/field\u003e\n\n                        \u003ccustomField\n                        \tid\u003d\"myParserDetails\"\n                        \tcustomFieldClass\u003d\"logParserProject.testControl.TestControl\"\u003e\n                        \u003c/customField\u003e\n                       \n                        \u003c!-- Default should be defined in case a match cannot be found  --\u003e\n                        \u003c!-- Config file lookup based on the selected version above --\u003e\n                        \u003cparserParameter\n                                name\u003d\"Default\"\n                                value\u003d\"./MyParser/static.adapter\"\u003e\n                        \u003c/parserParameter\u003e\n                \u003c/parser\u003e\n        \u003c/extension\u003e\n\n\n3. Create the following package under  the LogParserProject source directory:\nlogParserProject.testControl\n\nand create the class TestControl in this package:\n\n\npackage logParserProject.testControl;\n\n\nimport java.io.File;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Vector;\n\nimport org.eclipse.hyades.logging.parsers.importer.IImportWizardControl;\nimport org.eclipse.hyades.logging.parsers.importer.IImportWizardControlListener;\nimport org.eclipse.jface.dialogs.IDialogConstants;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.ModifyEvent;\nimport org.eclipse.swt.events.ModifyListener;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.events.SelectionListener;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Combo;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.swt.widgets.FileDialog;\nimport org.eclipse.swt.widgets.Label;\nimport org.eclipse.swt.widgets.Text;\n\npublic class TestControl implements IImportWizardControl {\n\n\tText path;\n\n\tCombo version;\n\n\tButton btn;\n\n\tMap input \u003d new HashMap();\n\n\tList listeners \u003d new Vector();\n\n\tpublic Map getUserInput() {\n\t\tinput.put(\"file_path_1\", path.getText());\n\t\tinput.put(\"version_1\", version.getText());\n\t\treturn input;\n\t}\n\n\tpublic boolean isValid() {\t\t\n\t\tif(path.getText().trim().length()\u003e0 \u0026\u0026 version.getText().trim().length()\u003e0){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic void setUserInput(Map input) {\n\t\tString logPath \u003d (String)input.get(\"file_path_1\");\n\t\tif(logPath!\u003dnull){\n\t\t\tpath.setText(logPath);\n\t\t}\n\t\tString logVersion \u003d (String)input.get(\"version_1\");\n\t\tif(logVersion!\u003dnull){\n\t\t\tversion.setText(logVersion);\n\t\t}\n\t}\n\n\tpublic void addControlListener(IImportWizardControlListener listener) {\n\t\tif(!listeners.contains(listener))\n\t\t\tlisteners.add(listener);\n\t\t\n\t}\n\n\tpublic void removeControlListener(IImportWizardControlListener listener) {\n\t\tlisteners.remove(listener);\n\t}\n\n\tpublic Control createContents(Composite parent, String arg1) {\n\t\tComposite details \u003d new Composite(parent, SWT.NONE);\n\t\tGridLayout layout \u003d new GridLayout();\n\t\tlayout.numColumns \u003d 3;\t\t\n\t\tGridData data \u003d new GridData();\n\t\tdata.horizontalAlignment \u003d GridData.FILL;\t\t\n\t\tdata.grabExcessHorizontalSpace \u003d true;\n\t\tdetails.setLayout(layout);\n\t\tdetails.setLayoutData(data);\n\n\t\tLabel label \u003d new Label(details, SWT.NONE | SWT.WRAP);\n\t\tdata \u003d new GridData();\n\t\tlabel.setLayoutData(data);\n\t\tlabel.setText(\"Custom control log path:\");\n\n\t\tpath \u003d new Text(details, SWT.BORDER);\n\t\tdata \u003d new GridData();\n\t\tdata.widthHint \u003d IDialogConstants.ENTRY_FIELD_WIDTH;\n\t\tpath.setLayoutData(data);\n\t\tpath.addModifyListener(new ModifyListener() {\n\n\t\t\tpublic void modifyText(ModifyEvent e) {\n\t\t\t\tfor (Iterator iter \u003d listeners.iterator(); iter.hasNext();) {\n\t\t\t\t\tIImportWizardControlListener element \u003d (IImportWizardControlListener) iter.next();\n\t\t\t\t\telement.controlChanged();\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t\tpath.setToolTipText(\"Enter the absolute path of the log file.\");\n\n\t\tbtn \u003d new Button(details, SWT.PUSH);\n\t\tdata \u003d new GridData();\n\t\tdata.grabExcessHorizontalSpace \u003d true;\n\t\tdata.horizontalAlignment \u003d SWT.RIGHT;\n\t\tbtn.setLayoutData(data);\n\t\tbtn.setText(\"Browse...\");\n\t\tbtn.addSelectionListener(new SelectionListener() {\n\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n                FileDialog fileDialog \u003d new FileDialog(btn.getParent().getShell());\n                fileDialog.setFilterPath(path.getText().trim());\n                fileDialog.setFilterExtensions(new String[] { \"*.log\", \"*\" });\n                fileDialog.open();\n\n                String fileName \u003d fileDialog.getFileName();\n\n                if ((fileName !\u003d null) \u0026\u0026 (!fileName.trim().equals(\"\")))\n                    path.setText(fileDialog.getFilterPath().concat(File.separator).concat(fileName));\n\n\n\t\t\t}\n\n\t\t\tpublic void widgetDefaultSelected(SelectionEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\n\t\t\t}\n\n\t\t});\n\n\t\tlabel \u003d new Label(details, SWT.NULL | SWT.WRAP);\n\t\tdata \u003d new GridData();\n\t\tlabel.setLayoutData(data);\n\t\tlabel.setText(\"Custom control log version:\");\n\n\t\tversion \u003d new Combo(details, SWT.BORDER);\n\t\tdata \u003d new GridData();\n//\t\tdata.grabExcessHorizontalSpace \u003d true;\n//\t\tdata.widthHint \u003d IDialogConstants.ENTRY_FIELD_WIDTH;\n\t\tversion.setLayoutData(data);\n\t\tversion.add(\"1.0\");\n\t\tversion.add(\"1.1\");\n\t\tversion.select(0);\n\t\tversion.setToolTipText(\"The version of the log.\");\n\n\t\treturn details;\n\t}\n\n\tpublic String getLogElementLabel() {\n\t\t\n\t\treturn path.getText();\n\t}\n\t\n\t\n\n}\n\n4. Resolve the compile errors by adding the following required plugins to the plugin.xml:\norg.eclipse.swt\norg.eclipse.jface\n\n5. Run the parser example and make sure when you select the \"Simple Parser V1.0\" log type in the \"Import Log wizard\"-\u003e \"Add Log file\" dialog you will get the following controls displayed in the Details tab of the \"Log details\" section:\n\nAbsolute path of the log file: text box + browse button\nVersion of the software that was used to generate the log file: text box\nRelease of the software that was used to generate the log file: text box\nLog version: combo box\nTwo radio buttons: \"Parser option 1\", \"Parser option 2\" in a radio button group named \"Options\"\nCustom control log path:  text box + browse button\nCustom control log version: combo box.\n\n6. Import the sample log  as described in the sample \n\nResult: A null exception is thrown.\n\n!ENTRY org.eclipse.jface 4 2 2006-04-10 14:05:26.984\n!MESSAGE Problems occurred when invoking code from plug-in: \"org.eclipse.jface\".\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizardPage$TableLabelProvider.getImageHelper(ImportLogWizardPage.java:709)\n\tat org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizardPage$TableLabelProvider.getColumnImage(ImportLogWizardPage.java:702)\n\tat org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java:487)",
    "Created an attachment (id\u003d38194)\nworkspace .log file\n\n",
    "fixed"
  ],
  "commentCreationDates": [
    "2006-04-10T20:46:04+02:00",
    "2006-04-10T20:46:52+02:00",
    "2006-04-10T20:53:24+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizardPage$TableLabelProvider.getImageHelper",
          "source": "ImportLogWizardPage.java:709"
        },
        {
          "method": "org.eclipse.tptp.monitoring.logui.internal.wizards.ImportLogWizardPage$TableLabelProvider.getColumnImage",
          "source": "ImportLogWizardPage.java:702"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.doUpdateItem",
          "source": "TableViewer.java:487"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "135955",
      "date": "2006-04-10T20:46:04+02:00",
      "product": "TPTP Log Analyzer",
      "component": "Monitor.UI",
      "severity": "normal"
    }
  ],
  "groupId": "135955",
  "bugId": "135955",
  "date": "2006-04-10T20:46:04+02:00",
  "product": "TPTP Log Analyzer",
  "component": "Monitor.UI",
  "severity": "normal"
}