{
  "comments": [
    "I20060124\n\nSteps (not reproducable):\n- have a syntax error in a CU (in org.eclipse.jface.text in my case), file is dirty (not saved)\n- open the manifest of the org.eclipse.jface.text plug-in with the PDE editor\n- go to the dependencies page and select a dependency (org.eclipse.core.runtime)\n- from the ctx menu, select \"Compute dependency extent\"\n\n-\u003e got this\n\njava.lang.ArrayIndexOutOfBoundsException: 0\nat org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchNameValue(PatternLocator.java:269)\nat org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesName(PatternLocator.java:244)\nat org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(TypeReferenceLocator.java:83)\nat org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getTypeReference(MatchLocatorParser.java:311)\nat org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterVariable(Parser.java:2673)\nat org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:4799)\nat org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:8560)\nat org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:8730)\nat org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:8695)\nat org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java:7488)\nat org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings(MatchLocator.java:1453)\nat org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:956)\nat org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1055)\nat org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1173)\nat org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\nat org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:206)\nat org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:491)\nat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:532)\nat org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentOperation.searchForTypesUsed(DependencyExtentOperation.java:149)\nat org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentOperation.checkForJavaDependencies(DependencyExtentOperation.java:135)\nat org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentOperation.execute(DependencyExtentOperation.java:77)\nat org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentQuery.run(DependencyExtentQuery.java:43)\nat org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:94)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "I\u0027ve reproduce it... It seems that searching for dependencies means that PDE takes all selected plugin types (org.eclipse.core.runtime in your example) and search for references for each one in current plugin (org.eclipse.jface.text in your example).\n\nUnfortunately it also searches for references of anonymous types...! This kind of type has an empty name and built search pattern as an empty char arrays as simple name and Search Engine does not handle properly this kind of pattern...\n\nI\u0027ll add test to avoid to fail in this case but PDE may also avoid to search for this kind of reference which will never return any match...\nWassim, what\u0027s your mind about this point?\n",
    "sure.  sounds good to me.  so all we\u0027re talking about here is check that IType.isAnonymous() returns false before we search for references to it, right?",
    "That\u0027s right...\n\n",
    "Fixed and released in HEAD.\n\nWhen pattern name is an empty char array, then only return accurate if compared name is also empty.\n\nChanges done in PatternLocator.matchNameValue(...).\n\nTest case added in JavaSearchBugsTests",
    "The PDE side of things was addressed in bug 125442.  thanks frederic.",
    "Welcome, wassim :-)\n\nNote to verifier that you *definitely* need to have a dirty editor while searching for dependencies otherwise bug cannot happen (there\u0027s no anonymous reference in index files \u003d\u003e Search Engine will reach pattern locator only if there\u0027s at least one working copy in search scope...)",
    "Verified for 3.2 M5 using build I20060215-0010"
  ],
  "commentCreationDates": [
    "2006-01-25T16:10:17+01:00",
    "2006-01-26T16:49:40+01:00",
    "2006-01-26T18:17:25+01:00",
    "2006-01-26T18:26:29+01:00",
    "2006-01-26T22:02:12+01:00",
    "2006-01-27T06:16:22+01:00",
    "2006-01-27T09:22:05+01:00",
    "2006-02-15T10:04:52+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "0",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchNameValue",
          "source": "PatternLocator.java:269"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchesName",
          "source": "PatternLocator.java:244"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match",
          "source": "TypeReferenceLocator.java:83"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.getTypeReference",
          "source": "MatchLocatorParser.java:311"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.consumeEnterVariable",
          "source": "Parser.java:2673"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule",
          "source": "Parser.java:4799"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.parse",
          "source": "Parser.java:8560"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.parse",
          "source": "Parser.java:8730"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.parse",
          "source": "Parser.java:8695"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.parser.Parser.dietParse",
          "source": "Parser.java:7488"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings",
          "source": "MatchLocator.java:1453"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:956"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1055"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1173"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:206"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:491"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:532"
        },
        {
          "method": "org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentOperation.searchForTypesUsed",
          "source": "DependencyExtentOperation.java:149"
        },
        {
          "method": "org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentOperation.checkForJavaDependencies",
          "source": "DependencyExtentOperation.java:135"
        },
        {
          "method": "org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentOperation.execute",
          "source": "DependencyExtentOperation.java:77"
        },
        {
          "method": "org.eclipse.pde.internal.ui.search.dependencies.DependencyExtentQuery.run",
          "source": "DependencyExtentQuery.java:43"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:94"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "125178",
      "date": "2006-01-25T16:10:17+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "125178",
  "bugId": "125178",
  "date": "2006-01-25T16:10:17+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}