{
  "comments": [
    "Start 2 debug targets (I was using the com.ibm.debug.pdt plugin) and terminate \none of them.\n\nThe following exception occurs:\n\nUnhandled exception caught in event loop.\nReason:\njava.util.ConcurrentModificationException\njava.util.ConcurrentModificationException\n\tat java.util.AbstractList$Itr.next(AbstractList.java(Compiled Code))\n\tat java.util.AbstractList$Itr.next(AbstractList.java(Compiled Code))\n\tat org.eclipse.debug.core.Launch.terminate(Launch.java:203)\n\tat \norg.eclipse.debug.internal.ui.actions.TerminateActionDelegate.doAction\n(TerminateActionDelegate.java:19)\n\tat \norg.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate$1.run\n(AbstractDebugActionDelegate.java:97)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)\n\tat org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate.run\n(AbstractDebugActionDelegate.java:92)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent\n(PluginAction.java:210)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:407)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent\n(ActionContributionItem.java:361)\n\tat org.eclipse.jface.action.ActionContributionItem.access$0\n(ActionContributionItem.java:352)\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java:47)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:739)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)\n\tat EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)",
    "The same thing seems to work when the 2 targets are Java.",
    "The \"launch\" object does not distinguish between different types of debug \ntargets. Does this happen every time, or is it intermittent? Does the same \nthing happen if the target itself is terminated (instead of the \"lanuch\" \nobject)?",
    "It is intermittent althought happens often to me.   99% of the time I am \nlaunching the second copy of Eclipse to run/debug.\n\nI just noticed that there are some other exceptions in the .log file that I \ndidn\u0027t see in the console.   I will try to see if they are related.",
    "Any further insights Alan?",
    "I will try to see if I can narrow it down.\nTurns out that the log contained some errors that didn\u0027t appear in the \nconsole.  I hope that this will shed some light.",
    "I have found the cause of the problem:\n\nThe problem occurs when the \"Launch\" is terminated or when a request \nto \"terminate all\" is requested.\n\nMy target\u0027s process (implements IProcess) calls my debug target\u0027s terminate() \nmethod since I can\u0027t terminate the process directly but want to support \ntermination when the user selects the process.\n\nIf either the process or the debugtarget is selected and terminated ... no \nproblem.\n\nWhen the launch is selected the process.terminate() is called first and my \nprocess delegates the terminate to the debugtarget.  The concurrent exception \nhappens after my debugtarget fires its TERMINATION debug event.   \n\nAt this point it appears that as a result of the debugtarget TERMINATION event \na call back into the list of processes is made by your code and therefore gets \nthe concurrent exception.\n\nIf I remove the call in process to debugtarget.terminate() there is no \nexception.\n\nAt this late point I am going to remove the support to terminate my process.\n\nWithout knowing the internals of your code I would suggest that when \nterminating a launch only 1 termination request be sent to the debugtarget and \nnot to both the process and the target.",
    "I believe I see how a problem can occur.  \n\nWhen a launch terminates it iterates throught its processes and debug targets \nand tells them to terminate.  If on termination, a process or target removes \nitself from the launch, the concurrent modification will occur on the \nnext \"next\" call.",
    "Released changed to Launch\nPlease verify (Darin W)",
    "Verified code."
  ],
  "commentCreationDates": [
    "2002-06-24T19:30:52+02:00",
    "2002-06-24T19:33:04+02:00",
    "2002-06-24T22:44:04+02:00",
    "2002-06-25T17:14:29+02:00",
    "2002-07-01T18:32:55+02:00",
    "2002-07-03T14:40:10+02:00",
    "2002-07-03T16:10:37+02:00",
    "2002-07-08T17:57:05+02:00",
    "2002-08-12T23:14:34+02:00",
    "2002-08-13T15:18:33+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.ConcurrentModificationException",
      "elements": [
        {
          "method": "java.util.AbstractList$Itr.next",
          "source": "AbstractList.java(Compiled Code)"
        },
        {
          "method": "java.util.AbstractList$Itr.next",
          "source": "AbstractList.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.debug.core.Launch.terminate",
          "source": "Launch.java:203"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.TerminateActionDelegate.doAction",
          "source": "TerminateActionDelegate.java:19"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate$1.run",
          "source": "AbstractDebugActionDelegate.java:97"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:64"
        },
        {
          "method": "org.eclipse.debug.internal.ui.actions.AbstractDebugActionDelegate.run",
          "source": "AbstractDebugActionDelegate.java:92"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:210"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:407"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent",
          "source": "ActionContributionItem.java:361"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$0",
          "source": "ActionContributionItem.java:352"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java:47"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1160"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:739"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:432"
        },
        {
          "method": "EclipseRuntimeLauncher.main",
          "source": "EclipseRuntimeLauncher.java:24"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "20901",
      "date": "2002-06-24T19:30:52+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "20901",
  "bugId": "20901",
  "date": "2002-06-24T19:30:52+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}