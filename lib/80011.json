{
  "comments": [
    "Using build I20041130.  The quick fix for generation of serialVersionUID never\nworks.  It always produces the same UID (so it\u0027s useless): 6009335074727417445L.\n Nothing in the error log.  Always reproducible, tested with Eclipse on Sun J2SE\n1.4.2/5.0, and IBM 1.4.2.  Bug doesn\u0027t happen in 3.1M3, so I just moved back to M3.\n\nAnother variant that happens even in M3: sometimes, the UID generation freezes,\nwith the dialog box showing \"Computing serial version UID\" / \"Starting virtual\nmachine\" forever while the launched javaw.exe doesn\u0027t use any CPU.  If I click\n\"Cancel\", nothing happens (the dialog is not dismissed).  I have to kill the\nlaunched javaw.exe, then... the serialVersionUID field appears in my Java class\nnormally.  (But there are repeated values.) In the log, this exception appears\nonly when I do that kill:\n\njava.io.EOFException\n\tat java.io.DataInputStream.readFully(DataInputStream.java:178)\n\tat java.io.DataInputStream.readLong(DataInputStream.java:380)\n\tat\norg.eclipse.jdt.internal.ui.text.correction.SerialVersionLaunchConfigurationDelegate$SerialVersionRunner.run(SerialVersionLaunchConfigurationDelegate.java:190)\n\tat\norg.eclipse.jdt.internal.ui.text.correction.SerialVersionLaunchConfigurationDelegate.launch(SerialVersionLaunchConfigurationDelegate.java:280)\n\tat\norg.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:569)\n\tat\norg.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal.computeDefaultExpression(SerialVersionHashProposal.java:177)\n\tat\norg.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal$2.run(SerialVersionHashProposal.java:124)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:105)\n\nIt seems that the SerialVersionRunner is just failing to notice when the\nlaunched process terminates, or failing to close this process, considering that\nit has already captured its output.\n\nBTW, thanks for this new warning and quick-fix for missing serialVersionUIDs.\nThese lint-like facilities contribute hugely to coding productivity and quality!",
    "Move to JDT/UI",
    "Tobias, please investigate for M4.",
    "Fixed \u003e 20041203",
    "New minor problem with this feature:  The quick-fix invokes an external java\nprocess that reads the source file, and this may not be consistent with the\neditor\u0027s content.  If I make some change to the source, but activate this\nquick-fix without saving the modifications, the serial version generator will\nexecute on the old version of the source that\u0027s in the filesystem.\n\nThis is inconsistent with the general behavior, whcih causes problems.  Suppose\nI have a class that\u0027s not serializable.  Then I edit it and add \"implements\nSerializable\".  The hint \"The serializable class XXX does not declare a static\nfinal field serialVersionUID of type long\" appears immediately (even without\nsaving the file).  Then I click in the quick-fix, and I get and error because\nthe file (in the disk) does not implement java.io.Serializable!\n\nA more subtle problem is: I change something in the class (i.e. add a new\nattribute), then I delete the serialVersionUID field so I can re-invoke this\nquick-fix, once again without saving, and the same serialVersionUID will be\ngenerated; but the correct behavior is generating a different UID because the\nstructure of the class (field and method signatures) is used for that.\n\nA simple solution would be prompting the user to save the source file, if\nnecessary, when activating this quick-fix.  But you could also copy the editor\u0027s\ncontent to a temp file to not bother the user with this requirement of saving.",
    "How far should we go here, Dirk?",
    "Added query to save compilation unit if necessary\nFixed \u003e 20050103"
  ],
  "commentCreationDates": [
    "2004-12-02T14:51:58+01:00",
    "2004-12-02T20:00:05+01:00",
    "2004-12-03T15:03:18+01:00",
    "2004-12-03T16:19:07+01:00",
    "2004-12-17T19:07:40+01:00",
    "2005-01-03T09:09:50+01:00",
    "2005-01-03T11:55:01+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.EOFException",
      "elements": [
        {
          "method": "java.io.DataInputStream.readFully",
          "source": "DataInputStream.java:178"
        },
        {
          "method": "java.io.DataInputStream.readLong",
          "source": "DataInputStream.java:380"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.correction.SerialVersionLaunchConfigurationDelegate$SerialVersionRunner.run",
          "source": "SerialVersionLaunchConfigurationDelegate.java:190"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.correction.SerialVersionLaunchConfigurationDelegate.launch",
          "source": "SerialVersionLaunchConfigurationDelegate.java:280"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfiguration.launch",
          "source": "LaunchConfiguration.java:569"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal.computeDefaultExpression",
          "source": "SerialVersionHashProposal.java:177"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashProposal$2.run",
          "source": "SerialVersionHashProposal.java:124"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:105"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "80011",
      "date": "2004-12-02T14:51:58+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "80011",
  "bugId": "80011",
  "date": "2004-12-02T14:51:58+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}