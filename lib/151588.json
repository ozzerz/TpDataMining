{
  "comments": [
    "I tried to compile the following expressions:\nCommonBaseEvent[10 \u003e @elapsedTime]\nCommonBaseEvent[10 + 2 \u003c 5]\nCommonBaseEvent[(@creationTime \u003c \u00272004-04-13T16:00:00Z\u0027)]\nCommonBaseEvent[(extendedDataElements/children/values \u003d \u00272004-04-13T15:00:00Z\u0027)]\nI\u0027ve got a CodeGenerationError for each of them.\nI used the hyades EMF implementation of CommonBaseEvent.\nThe defect can be reproduced with the following source code:\nFastXPathAPI fxPathAPI\u003dnew FastXPathAPI(null);\nIFastXPathEngine fxEng \u003d fxPathAPI.getFastXPathEngine();\nICompilerHelper helper \u003d fxEng.createCompilerHelper(CommonBaseEvent.class);\nCompiledExpressionEvaluator evaluator \u003dfxEng.compile(xPath, CommonBaseEvent.class,helper);\nObject mObj \u003d fxEng.evalCompiled(evaluator,(CommonBaseEvent)toEval);\nLet me know if you have any questions. \nThank you.",
    "Expressions work in evel mode.\n\nI got the following stack in compile mode.\n\norg.eclipse.tptp.platform.provisional.fastxpath.compiler.CodeGenerationError: 403,403:Syntax error, insert \") Statement\" to complete IfStatement\n\tat org.eclipse.tptp.platform.provisional.fastxpath.compiler.EclipseCompiler.generateClass(EclipseCompiler.java:128)\n\tat org.eclipse.tptp.platform.provisional.sun50.fastxpath.compiler.CompilerHelper.buildCompiledExpression(CompilerHelper.java:149)\n\tat org.eclipse.tptp.platform.provisional.sun50.fastxpath.FastXPathEngine.getExpressionJavaSource(FastXPathEngine.java:252)\n\tat org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource(FastXPathTest.java:181)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat org.eclipse.hyades.test.common.junit.HyadesTestCase.run(HyadesTestCase.java:173)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:431)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:399)\n\tat org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:312)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)",
    "This is required for 4.2.1",
    "I\u0027ve noticed that the xpaths which navigates thru more than 2 elements meaning that should generate more than two iterators are failing to compile.\nFor instance  CommonBaseEvent[extendedDataElements/children/values \u003d \u0027abc\u0027].\nAlso xpaths that contains imbricate predicates are failing to compile.\nFor instance CommonBaseEvent[extendedDataElements/children[@name\u003d\u0027achild\u0027]/values \u003d \u00272004-04-13T15:00:00Z\u0027].\nAnother sample of xpath which fails to compile is the following:\nCommonBaseEvent[(1081868400000 \u003d extendedDataElements/children[@type \u003d \u0027dateTime\u0027]/valuesAsDateAsLong or \u00272004-04-13T15:00:00Z\u0027 \u003c extendedDataElements/children/values)]\nThis last xpath shows again the problems on java code generation with:\n1. string comparision \n2. predicate depth \u003e1\n3. axes navigation if the number of elements is greather than 2\n ",
    "This is bloking us for using fastxpath in Common Base Event Infrastructure. ",
    "Created an attachment (id\u003d47397)\nSome proposed fixes for some of the xpaths written in the bug.\n\nHopefully the proposed fixes will hurry up the fixes delivery. Let me know if there are questions about the proposed fixes.Thank you.  ",
    "Created an attachment (id\u003d47841)\npatch\n\n",
    "Patch committed."
  ],
  "commentCreationDates": [
    "2006-07-24T16:45:02+02:00",
    "2006-07-24T18:43:17+02:00",
    "2006-07-26T21:31:27+02:00",
    "2006-08-02T10:49:53+02:00",
    "2006-08-02T11:39:11+02:00",
    "2006-08-04T15:58:55+02:00",
    "2006-08-14T16:46:07+02:00",
    "2006-08-23T20:57:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CodeGenerationError",
      "message": "403,403:Syntax error, insert \") Statement\" to complete IfStatement",
      "elements": [
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.EclipseCompiler.generateClass",
          "source": "EclipseCompiler.java:128"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.sun50.fastxpath.compiler.CompilerHelper.buildCompiledExpression",
          "source": "CompilerHelper.java:149"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.sun50.fastxpath.FastXPathEngine.getExpressionJavaSource",
          "source": "FastXPathEngine.java:252"
        },
        {
          "method": "org.eclipse.hyades.use.cases.junit.models.test.FastXPathTest.testGetExpressionJavaSource",
          "source": "FastXPathTest.java:181"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:154"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:127"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:118"
        },
        {
          "method": "org.eclipse.hyades.test.common.junit.HyadesTestCase.run",
          "source": "HyadesTestCase.java:173"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:208"
        },
        {
          "method": "org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest",
          "source": "HyadesTestSuite.java:431"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:203"
        },
        {
          "method": "org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun",
          "source": "HyadesTestSuite.java:399"
        },
        {
          "method": "org.eclipse.hyades.test.common.junit.HyadesTestSuite.run",
          "source": "HyadesTestSuite.java:312"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run",
          "source": "JUnit3TestReference.java:128"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.TestExecution.run",
          "source": "TestExecution.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:460"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:386"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main",
          "source": "RemoteTestRunner.java:196"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "151588",
      "date": "2006-07-24T18:43:17+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "critical"
    }
  ],
  "groupId": "151588",
  "bugId": "151588",
  "date": "2006-07-24T16:45:02+02:00",
  "product": "TPTP Profiling",
  "component": "Platform.Model",
  "severity": "critical"
}