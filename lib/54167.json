{
  "comments": [
    "build I20040303\n\nNick says:\n\u003e \u003e We also need more control over the overall window layout.  At \n\u003e \u003e minimum, we need to fully disable the banner curve for RCP apps \n\u003e \u003e (currently it only disappears if you turn off perspective bar and \n\u003e \u003e coolbar).  Ideally I\u0027d like to give the app full control over the \n\u003e \u003e window layout, but this will require opening up more API for things \n\u003e \u003e like TrimLayout, PerspectiveBar, FastViewBar, and DnD of trim parts.\n\nChris responds:\n\u003e i think we should try the minimum here for M8. i.e. the banner curve\n\u003e off, even when perspectives are showing.\n\u003e question: is this just a small look change (like make the curve into\n\u003e a vertical line?), or a functional change e.g. be able to dock the \n\u003e perspective bar in the regular coolbar area?\n\nNick replies:\nAt a minimum, we need to do just the look change.  MVM was talking about \nfunctional improvements here too.\nI think making the perspective bar be a regular toolbar would be fine for RCP \napps, even if DnD is not supported.\nThis is probably better than making it be a special component.  But this may \ncomplicate the story too much, particularly if functional improvements are \ncoming down the pipe.",
    "Also need control over separator lines between menubar, coolbar, main area, \nstatus line and fast view bar, which got removed in the new look.\n",
    "As discussed, this is important for M8.\n",
    "Released new API to allow the app to control the overall window layout directly,\nrather than just through the setShow* flags.\n\nSee:\n- WorkbenchAdvisor.createWindowContents(IWorkbenchWindowConfigurer, Shell)\n- IWorkbenchWindowConfigurer.createMenuBar()\n- IWorkbenchWindowConfigurer.createCoolBarControl(Composite)\n- IWorkbenchWindowConfigurer.createStatusLineControl(Composite)\n- IWorkbenchWindowConfigurer.createPageComposite(Composite)\n\nThe default layout is currently the SDK\u0027s, but with square tabs instead of curvy\nones by default (an unrelated change, really).  This may change for M9, but the\nintent is to have a high-function default layout that\u0027s still customizable.\n\nThe setShow* flags are only honoured if the default layout is used.\n\nStill TBD (for M9):\n- expose the fast view bar and perspective bar\n- remove or clarify the setShow* methods\n",
    "Created an attachment (id\u003d8682)\nScreen shot of browser example with custom layout\n\nReleased an update to the browser example to show this off.\nSee attached screen shot.",
    "In your browser example can you get rid of the \"Browser\" tab and the minimize \nand maximize buttons that are next to it?\n\nAlso what components are needed from HEAD to get the new API?",
    "The changes are in org.eclipse.jface and org.eclipse.ui.workbench.\nGenerally for any RCP UI changes, you\u0027ll need to load the above plus org.eclipse.ui.\n\nFor hiding the titlebar, and finer-grained control over min and max, see\ncomments #3 and #4 of bug 53673 (still TBD).\n",
    "I\u0027m getting the following error when I don\u0027t create a CoolBar.\n\njava.lang.NullPointerException\n\tat org.eclipse.jface.action.CoolBarManager.refresh\n(CoolBarManager.java:560)\n\tat org.eclipse.ui.internal.WorkbenchWindow.updateActionSets\n(WorkbenchWindow.java:1893)\n\tat org.eclipse.ui.internal.WorkbenchWindow$5.run\n(WorkbenchWindow.java:1705)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)\n\tat org.eclipse.ui.internal.WorkbenchWindow.setActivePage\n(WorkbenchWindow.java:1680)\n\tat org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage\n(WorkbenchWindow.java:419)\n\tat org.eclipse.ui.internal.WorkbenchWindow$4.run\n(WorkbenchWindow.java:968)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)\n\tat org.eclipse.ui.internal.WorkbenchWindow.openPage\n(WorkbenchWindow.java:965)\n\tat org.eclipse.ui.internal.Workbench.openFirstTimeWindow\n(Workbench.java:1082)\n\tat org.eclipse.ui.internal.Workbench.init(Workbench.java:915)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1400)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:261)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n\tat org.eclipse.ui.examples.rcp.browser.BrowserApp.run\n(BrowserApp.java:54)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:260)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:173)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:106)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:305)\n\tat org.eclipse.core.launcher.Main.run(Main.java:729)\n\tat org.eclipse.core.launcher.Main.main(Main.java:713)",
    "I would like to set the background color of the page.\n\nCurrent the following has no effect:\n\nControl pageComposite \u003d configurer.createPageComposite(shell);\npageComposite.setLayoutData(new GridData(GridData.FILL, GridData.FILL, true, \nrue));\n\npageComposite.setBackground(pageComposite.getDisplay().getSystemColor\n(SWT.COLOR_RED));\n",
    "I\u0027ve added a check to CoolBarManager.refresh().\n\nFor the page background color, note that the WorkbenchPage has its own composite\nunder the pageComposite (perhaps this should have been called pageParent), and\ncolours are not inherited from parent controls automatically.  \n\nWe can either change it to copy the color down in\nWorkbenchPage.createClientComposite (you could try this), or change the\nWorkbench to look up a theme color here.  \n\nAlternatively, just reach in in the new postWindowCreate method and whack it\n(the page has been created by this time, but the window hasn\u0027t been opened yet).\n\nMight be nice to have different colors for different perspectives, but then we\u0027d\nhave to reintroduce per-perspective themes ;-(.\n",
    "The perspective bar can now be moved to a separate toolbar, getting rid of the\ncurve, but we still need RCP API for configuring this.\nAnd also for creating the perspective bar in a custom layout.\nFor M9.",
    "There is already an internal preference.\nWe will make it an API preference on IWorkbenchPreferenceConstants, stored in \nthe org.eclipse.ui preference store.\nThe default for RCP will be for it to appear below under the main toolbar.\nThe Eclipse SDK will override this to be on the right, as it is now.\n\n",
    "Made changes described in comment #11.\n\nBetween this and the support for allowing the app to take over the entire \nwindow layout (WorkbenchAdvisor.createWindowContents), this will have to \nsuffice for 3.0.\n",
    "Nick, can you give example code of how to achieve the items in Comments 11 and\n12? I tried on M9 and cannot get it to change the location of the Perspective bar.",
    "Try putting the following in the plugin_customization.ini file in the plugin for\nyour primary feature:\n\norg.eclipse.ui/DOCK_PERSPECTIVE_BAR\u003dtopLeft  (the default)\nor\norg.eclipse.ui/DOCK_PERSPECTIVE_BAR\u003dtopRight (the SDK does this)\nor\norg.eclipse.ui/DOCK_PERSPECTIVE_BAR\u003dleft  (default for the R2.1 presentation)\n\nNote that this only overrides the -default- value.  If there is an explicitly\nset value for the preference, this is used instead.\n\nYou can also set the value programmatically, e.g. from your WorkbenchAdvisor\u0027s\ninitialize method:\nPlatformUI.getPreferenceStore().setValue(IWorkbenchPreferenceConstants.DOCK_PERSPECTIVE_BAR,\nIWorkbenchPreferenceConstants.LEFT).\n\n",
    "By the way, how can I hide the perspective bar?\n\n\nconfigure.setShowPerspectiveBar(false) didn\u0027t work in createWindowContents nor \npreWindowOpen method.\n\n\nI wonder why you had to show the perspective bar by default from M9.\n",
    "I noticed if you have a plug-in preference like:\n\norg.eclipse.ui/DOCK_PERSPECTIVE_BAR\u003dleft\n\neven if you have turned off the perspective bar, you get a perspective bar. \nComment it out and you don\u0027t get a perspective bar. Is this a bug?\n",
    "The progress bar is still shown even if turned off by setShowProgressBar(false).\n (You would normally call this in preWindowOpen).\n\nThis is a regression.  Need to handle the different docking cases as well, but\nin all cases, if setShowProgressBar(true) is not called (the default is false),\nthe progress bar must not be shown.\n",
    "andrew do you have cycles to help out here?",
    "also need to ensure that the banner when used works just like traditional tabs.\n\ni.e. 1) there is a more square version of the banner that is the default and \nshould be used as such for RCP\n2) the ide (currently a workaround in WorkbenchWindow hammers this value) \nshould properly check for the traditional tabs preference to know if it should \nset the square (setSimple()) style on the banner or the curved style (for R3.0 \nor the !square tabs preference case.",
    "WorkbenchWindow wasn\u0027t checking the value of #showPerspectiveBar, I\u0027ve submitted \na fix that only creates the bar if the setting is true.\n\nThe submission also links the value of the SHOW_TRADITIONAL_TABS_STYLE to the \nsquare/curvey style of the perspective bar.",
    "Andrew, we need to be careful with this approach.  There was code in the past\nthat assumed the perspective bar was always created.",
    "I checked uses of the persepectiveSwitcher member in the WorkbenchWindow class,  \nall cases checked for null before using it.",
    "I also had a look.  Previously, there were more callers of getPerspectiveBar(),\nand some assumed that this was non-null, but this is only referenced from run()\nnow, and it checks for null.\n",
    "\"The submission also links the value of the SHOW_TRADITIONAL_TABS_STYLE to the \nsquare/curvey style of the perspective bar\" - I don\u0027t think it should do that. \nIt needs its own preference.",
    "Unfortunately adding a preference was deemed an API change, which is now a \nno-no.  Altering the behaviour of the existing preference was not considered an \nAPI change, since it fits into the existing description of what the preference \ndoes.",
    "marking as fixed, please re-open with comments if you disagree"
  ],
  "commentCreationDates": [
    "2004-03-09T17:37:08+01:00",
    "2004-03-09T19:07:06+01:00",
    "2004-03-17T17:18:20+01:00",
    "2004-03-19T07:10:24+01:00",
    "2004-03-19T07:18:51+01:00",
    "2004-03-19T15:22:53+01:00",
    "2004-03-19T16:27:15+01:00",
    "2004-03-19T21:15:24+01:00",
    "2004-03-19T21:17:19+01:00",
    "2004-03-19T21:47:42+01:00",
    "2004-03-25T15:57:59+01:00",
    "2004-05-07T18:00:24+02:00",
    "2004-05-07T20:12:39+02:00",
    "2004-05-25T15:07:09+02:00",
    "2004-05-26T20:06:27+02:00",
    "2004-05-27T17:38:11+02:00",
    "2004-05-27T18:07:19+02:00",
    "2004-05-27T20:09:01+02:00",
    "2004-05-27T20:31:07+02:00",
    "2004-05-27T20:34:36+02:00",
    "2004-05-27T23:18:33+02:00",
    "2004-05-28T04:08:26+02:00",
    "2004-05-28T13:59:48+02:00",
    "2004-05-28T17:45:57+02:00",
    "2004-05-28T18:15:08+02:00",
    "2004-05-28T18:19:38+02:00",
    "2004-06-03T17:29:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jface.action.CoolBarManager.refresh",
          "source": "CoolBarManager.java:560"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.updateActionSets",
          "source": "WorkbenchWindow.java:1893"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$5.run",
          "source": "WorkbenchWindow.java:1705"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.setActivePage",
          "source": "WorkbenchWindow.java:1680"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage",
          "source": "WorkbenchWindow.java:419"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$4.run",
          "source": "WorkbenchWindow.java:968"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.openPage",
          "source": "WorkbenchWindow.java:965"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.openFirstTimeWindow",
          "source": "Workbench.java:1082"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:915"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1400"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:261"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.examples.rcp.browser.BrowserApp.run",
          "source": "BrowserApp.java:54"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:260"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:173"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:106"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:305"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:729"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:713"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "54167",
      "date": "2004-03-19T21:15:24+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "54167",
  "bugId": "54167",
  "date": "2004-03-09T17:37:08+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}