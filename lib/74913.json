{
  "comments": [
    "The following cflowbelow() pointcut causes an ExceptionInitializerError and\ndialog box to appear, title \"Java Virtual Machine Launcher\", body \"Could not\nfind the main class.  Program will exit\".  Eclipse 3.0, ajdt 1.1.12 (AspectJ\n1.2.0 I think).\n\n---\npackage test;\n\npublic class SomeClass {\n\tpublic static void main(String[] args) {\n\t}\n}\n--\npackage test;\npublic aspect TraceClass {\n    pointcut pc() : !cflowbelow(within(TraceClass));\n    before () : pc() {\n        System.out.println(\"-\u003e \" + thisJoinPointStaticPart);\n    }\n}\n---\nOutput:\n\njava.lang.ExceptionInInitializerError\n\tat test.SomeClass.\u003cclinit\u003e(SomeClass.java)\nCaused by: org.aspectj.lang.NoAspectBoundException: test_TraceClass\n\tat test.TraceClass.aspectOf(TraceClass.aj)\n\tat test.TraceClass.\u003cclinit\u003e(TraceClass.aj)\n\t... 1 more\nException in thread \"main\"",
    "Strange as it may seem, this program is working as designed!\n\nHere\u0027s what\u0027s going on: \n\n* You have pointcut that matches EVERY join point that is NOT in the control \nflow below a join point in TraceClass. \n\n* One join point matched by this pointcut is the staticinitialization join point \nfor SomeClass (the very first join point in the program execution). \n\n* In order to put into effect the before advice at this join point, the aspect \nTraceClass needs to be called. \n\n* This causes the TraceClass aspect to be loaded, giving rise to a \nstaticinitialization join point. \n\n* The staticinitialization join point for TraceClass itself is also matched by \nthe pointcut - so you have an aspect trying to advise its own initialization.\n\n* This is the situation that leads to the \"NoAspectBoundException\" (there is no \ninstance of the aspect bound at the point at which the advice should execute).\n\n* Since the NoAspectBoundException is thrown during initialization of the \nSomeClass class, you get the \"ExceptionInInitializer\" error.\n\nThe short summary is that an aspect can\u0027t advise its own static initialization.",
    "Fix released as part of AspectJ 1.2.1"
  ],
  "commentCreationDates": [
    "2004-09-24T07:00:03+02:00",
    "2004-09-24T16:23:22+02:00",
    "2004-10-21T10:30:53+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ExceptionInInitializerError",
      "elements": [
        {
          "method": "test.SomeClass.\u003cclinit\u003e",
          "source": "SomeClass.java"
        }
      ],
      "causedBy": {
        "exceptionType": "org.aspectj.lang.NoAspectBoundException",
        "message": "test_TraceClass",
        "elements": [
          {
            "method": "test.TraceClass.aspectOf",
            "source": "TraceClass.aj"
          },
          {
            "method": "test.TraceClass.\u003cclinit\u003e",
            "source": "TraceClass.aj"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "74913",
      "date": "2004-09-24T07:00:03+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "74913",
  "bugId": "74913",
  "date": "2004-09-24T07:00:03+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}