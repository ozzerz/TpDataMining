{
  "comments": [
    "Konstantin Scheglov reported the following problem (originally in bug 104570):\n\nI think I found problem with this version: eclipse-SDK-I20051116-1332-win32.zip \nWhen I try to bind \"double\" property to Text it throws exception:\n\norg.eclipse.jface.databinding.BindingException: Converter does not apply to\nmodel type. Expected: double, actual: class java.lang.String\n\tat org.eclipse.jface.databinding.internal.ValueBinding.\u003cinit\u003e(ValueBinding.java:61)\n\tat\norg.eclipse.jface.databinding.internal.DataBindingContext.bind(DataBindingContext.java:399)\n\tat\norg.eclipse.jface.databinding.internal.DataBindingContext.bind(DataBindingContext.java:454)\n\tat\norg.eclipse.jface.databinding.internal.DataBindingContext.bind(DataBindingContext.java:511)\n\tat ru.nlmk.Test.createContents(Test.java:87)\n\tat ru.nlmk.Test.open(Test.java:45)\n\tat ru.nlmk.Test.main(Test.java:34)\n\n  I am not sure, but problem can be in ValueBinding, because when I change this:\n\n\t\tif (!converter.getModelType().equals(model.getValueType())) {\n\t\t\tthrow new BindingException(\n\t\t\t\t\t\"Converter does not apply to model type. Expected: \" + model.getValueType()\n+ \", actual: \" + converter.getModelType()); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t}\n\t\tif (!converter.getTargetType().equals(target.getValueType())) {\n\t\t\tthrow new BindingException(\n\t\t\t\t\t\"Converter does not apply to target type. Expected: \" +\ntarget.getValueType() + \", actual: \" + converter.getTargetType()); //$NON-NLS-1$\n//$NON-NLS-2$\n\t\t}\n\nto this:\n\n\t\tif (!converter.getTargetType().equals(model.getValueType())) {\n\t\t\tthrow new BindingException(\n\t\t\t\t\t\"Converter does not apply to model type. Expected: \" + model.getValueType()\n+ \", actual: \" + converter.getTargetType()); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t}\n\t\tif (!converter.getModelType().equals(target.getValueType())) {\n\t\t\tthrow new BindingException(\n\t\t\t\t\t\"Converter does not apply to target type. Expected: \" +\ntarget.getValueType() + \", actual: \" + converter.getModelType()); //$NON-NLS-1$\n//$NON-NLS-2$\n\t\t}\n\n  it works.\n\n  See also source code for bean and GUI below.\n\nimport java.beans.PropertyChangeListener;\nimport java.beans.PropertyChangeSupport;\n\npublic class User {\n\tprivate String m_firstName;\n\n\tprivate String m_lastName;\n\n\tprivate double m_age;\n\n\tprivate PropertyChangeSupport m_propertyListeners \u003d new PropertyChangeSupport(\n\t\t\tthis);\n\n\tpublic String getFirstName() {\n\t\treturn m_firstName;\n\t}\n\n\tpublic void setFirstName(String firstName) {\n\t\tm_firstName \u003d firstName;\n\t}\n\n\tpublic String getLastName() {\n\t\treturn m_lastName;\n\t}\n\n\tpublic void setLastName(String lastName) {\n\t\tString oldLastName \u003d m_lastName;\n\t\tm_lastName \u003d lastName;\n\t\tm_propertyListeners.firePropertyChange(\"lastName\", oldLastName,\n\t\t\t\tm_lastName);\n\t}\n\n\tpublic double getAge() {\n\t\treturn m_age;\n\t}\n\n\tpublic void setAge(double age) {\n\t\tDouble oldAge \u003d new Double(m_age);\n\t\tm_age \u003d age;\n\t\tm_propertyListeners\n\t\t\t\t.firePropertyChange(\"age\", oldAge, new Double(m_age));\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"(\" + m_firstName + \", \" + m_lastName + \", \" + m_age + \")\";\n\t}\n\n\tpublic void addPropertyChangeListener(PropertyChangeListener listener) {\n\t\tm_propertyListeners.addPropertyChangeListener(listener);\n\t}\n\n\tpublic void removePropertyChangeListener(PropertyChangeListener listener) {\n\t\tm_propertyListeners.removePropertyChangeListener(listener);\n\t}\n}\n\n\nimport org.eclipse.jface.databinding.DataBinding;\nimport org.eclipse.jface.databinding.IDataBindingContext;\nimport org.eclipse.jface.databinding.PropertyDescription;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Display;\nimport org.eclipse.swt.widgets.Shell;\nimport org.eclipse.swt.widgets.Text;\n\npublic class Test {\n\n\tprivate Text m_txtAge;\n\n\tprivate Text m_txtLast;\n\n\tprivate Text m_txtFirst;\n\n\tprotected Shell shell;\n\n\t/**\n\t * Launch the application\n\t * \n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tTest window \u003d new Test();\n\t\t\twindow.open();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**\n\t * Open the window\n\t */\n\tpublic void open() {\n\t\tfinal Display display \u003d Display.getDefault();\n\t\tcreateContents();\n\t\tshell.open();\n\t\tshell.layout();\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t}\n\n\t/**\n\t * Create contents of the window\n\t */\n\tprotected void createContents() {\n\t\tshell \u003d new Shell();\n\t\tshell.setLayout(new GridLayout());\n\t\tshell.setSize(439, 312);\n\t\tshell.setText(\"SWT Application\");\n\n\t\tfinal User user \u003d new User();\n\t\tuser.setFirstName(\"Konstantin\");\n\t\tuser.setLastName(\"Scheglov\");\n\t\tuser.setAge(12);\n\t\tSystem.out.println(\"before: \" + user);\n\n\t\tm_txtFirst \u003d new Text(shell, SWT.BORDER);\n\t\tm_txtFirst.setLayoutData(new GridData(GridData.FILL, GridData.CENTER,\n\t\t\t\ttrue, false));\n\n\t\tm_txtLast \u003d new Text(shell, SWT.BORDER);\n\t\tm_txtLast.setLayoutData(new GridData(GridData.FILL, GridData.CENTER,\n\t\t\t\ttrue, false));\n\n\t\tm_txtAge \u003d new Text(shell, SWT.BORDER);\n\t\tm_txtAge.setLayoutData(new GridData(GridData.FILL, GridData.CENTER,\n\t\t\t\ttrue, false));\n\n\t\tIDataBindingContext bindingContext \u003d DataBinding.createContext(shell);\n\t\ttry {\n\t\t\tbindingContext.bind(m_txtFirst, new PropertyDescription(user,\n\t\t\t\t\t\"firstName\"), null);\n\t\t\tbindingContext.bind(m_txtLast, new PropertyDescription(user,\n\t\t\t\t\t\"lastName\"), null);\n\t\t\tbindingContext.bind(m_txtAge, new PropertyDescription(user, \"age\"),\n\t\t\t\t\tnull);\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\tfinal Button showButton \u003d new Button(shell, SWT.NONE);\n\t\tshowButton.addSelectionListener(new SelectionAdapter() {\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\tSystem.out.println(\"current: \" + user);\n\t\t\t}\n\t\t});\n\t\tshowButton.setLayoutData(new GridData(GridData.FILL, GridData.CENTER,\n\t\t\t\ttrue, false));\n\t\tshowButton.setText(\"Show!\");\n\n\t\tfinal Button changeButton \u003d new Button(shell, SWT.NONE);\n\t\tchangeButton.addSelectionListener(new SelectionAdapter() {\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\tuser.setLastName(\"\" + System.currentTimeMillis());\n\t\t\t\tuser.setAge(18);\n\t\t\t}\n\t\t});\n\t\tchangeButton.setLayoutData(new GridData(GridData.FILL, GridData.CENTER,\n\t\t\t\tfalse, false));\n\t\tchangeButton.setText(\"Change!\");\n\t}\n\n}",
    "The converters use the target/model designation given that they work both way.\n\nThe IBindSupportFactory, and IDataBindingContext use the from/to designation for\nvalidators given that they work one way.\n\nIt will make it less confusing if it is consistent - as the construction or the\ndefaulting to one, an 2 arg. lookup.",
    "This should be fixed now that we have only one-way converters, and support for converting to and from primitive types. Please reopen if I am wrong."
  ],
  "commentCreationDates": [
    "2005-11-17T13:25:09+01:00",
    "2005-11-18T13:11:03+01:00",
    "2006-06-13T21:51:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.databinding.BindingException",
      "message": "Converter does not apply to model type. Expected: double, actual: class java.lang.String",
      "elements": [
        {
          "method": "org.eclipse.jface.databinding.internal.ValueBinding.\u003cinit\u003e",
          "source": "ValueBinding.java:61"
        },
        {
          "method": "org.eclipse.jface.databinding.internal.DataBindingContext.bind",
          "source": "DataBindingContext.java:399"
        },
        {
          "method": "org.eclipse.jface.databinding.internal.DataBindingContext.bind",
          "source": "DataBindingContext.java:454"
        },
        {
          "method": "org.eclipse.jface.databinding.internal.DataBindingContext.bind",
          "source": "DataBindingContext.java:511"
        },
        {
          "method": "ru.nlmk.Test.createContents",
          "source": "Test.java:87"
        },
        {
          "method": "ru.nlmk.Test.open",
          "source": "Test.java:45"
        },
        {
          "method": "ru.nlmk.Test.main",
          "source": "Test.java:34"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "116862",
      "date": "2005-11-17T13:25:09+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "116862",
  "bugId": "116862",
  "date": "2005-11-17T13:25:09+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}