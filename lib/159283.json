{
  "comments": [
    "There\u0027s a problem with using ant on the command-line to generate a web service or client, when targetting a runtime that supports EAR association.\n\nThe problem occurs if we specify a new project and EAR in the properties file.  The code generation completes but we will see validation errors in wsgen.txt because the project is not associated with the new EAR (no module node in application.xml).  Here is a sniplet of the exception:\n\n    [wsgen] *** ERROR ***: Thu Sep 28 15:11:14 EDT 2006    org.eclipse.emf.common.util.WrappedException: org.xml.sax.SAXParseException: cvc-complex-type.2.4.b: The content of element \u0027application\u0027 is not complete. One of \u0027{\"http://java.sun.com/xml/ns/j2ee\":display-name, \"http://java.sun.com/xml/ns/j2ee\":icon, \"http://java.sun.com/xml/ns/j2ee\":module}\u0027 is expected.\n    [wsgen]     \tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.loadDocument(EMF2DOMRenderer.java:79)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad(EMF2DOMRenderer.java:60)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad(TranslatorResourceImpl.java:142)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad(CompatibilityXMIResourceImpl.java:173)\n    [wsgen]     \tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1094)\n    [wsgen]     \tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:900)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.load(CompatibilityXMIResourceImpl.java:259)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load(TranslatorResourceImpl.java:388)\n    [wsgen]     \tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:249)\n    [wsgen]     \tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad(ProjectResourceSetImpl.java:83)\n    [wsgen]     \tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:264)\n    [wsgen]     \tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:346)\n    [wsgen]     \tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource(WorkbenchResourceHelper.java:384)\n    [wsgen]     \tat org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource(EditModel.java:680)\n    [wsgen]     \tat org.eclipse.wst.common.componentcore.internal.ArtifactEditModel.getResource(ArtifactEditModel.java:174)\n    [wsgen]     \tat org.eclipse.jst.j2ee.componentcore.util.EARArtifactEdit.getDeploymentDescriptorResource(EARArtifactEdit.java:304)\n    [wsgen]     \tat org.eclipse.jst.j2ee.componentcore.EnterpriseArtifactEdit.getDeploymentDescriptorRoot(EnterpriseArtifactEdit.java:153)\n    [wsgen]     \tat org.eclipse.jst.j2ee.componentcore.util.EARArtifactEdit.getApplication(EARArtifactEdit.java:291)\n    [wsgen]     \tat org.eclipse.jst.j2ee.application.internal.operations.AddComponentToEnterpriseApplicationOp.updateEARDD(AddComponentToEnterpriseApplicationOp.java:118)\n    [wsgen]     \tat org.eclipse.jst.j2ee.application.internal.operations.AddComponentToEnterpriseApplicationOp.execute(AddComponentToEnterpriseApplicationOp.java:69)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl$1.run(DataModelPausibleOperationImpl.java:376)\n    [wsgen]     \tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl.runOperation(DataModelPausibleOperationImpl.java:400)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl.runOperation(DataModelPausibleOperationImpl.java:352)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl.doExecute(DataModelPausibleOperationImpl.java:242)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl.executeImpl(DataModelPausibleOperationImpl.java:214)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl.cacheThreadAndContinue(DataModelPausibleOperationImpl.java:89)\n    [wsgen]     \tat org.eclipse.wst.common.frameworks.internal.datamodel.DataModelPausibleOperationImpl.execute(DataModelPausibleOperationImpl.java:202)\n    [wsgen]     \tat org.eclipse.jst.ws.internal.common.J2EEUtils.associateComponentToEAR(J2EEUtils.java:951)",
    "Not sure if this is a regression or not. Even if not, this is a fairly golden-path scenario thru headless Ant.",
    "Targetted to 1.5.2.",
    "Created an attachment (id\u003d51281)\npatch for jst.ws consumption and creation UI\n\nHere is a patch for this problem.\n\nThe error shows up because validation is turned on in headless parsing mode.\nThe J2EE folks suggested that we disable validation by adding the following line:\n\nRendererFactory.getDefaultRendererFactory().setValidating(false);\n\nThis patch disables validation inside AntDefaultingOperation, it later restores the original value in the (new) AntRestoringCommand.",
    "This patch was reviewed with Peter.  Ready for commit, thanks.",
    "Severity lowered to major since reasonable workarounds exist. Deferred to 1.5.3 since the fix, though simple in spirit, is more than the proverbial one-liner.\n\nAlso, a question about AntRestoringCommand, specifically about whether we really need it, and the consequences in error scenarios if we do.\n\n1. Do we need to restore the default RendererFactory\u0027s validation state at the end of the task when run from the command line given the JRE process terminates at the end of the task?\n\n2. When the task is run from within the Eclipse IDE, will the RendererFactory\u0027s validation state ever be true? My understanding is this bug only happens from the command line, not from the Eclipse IDE in which the UI head is active. If we don\u0027t need to monkey with the RendererFactory\u0027s validation state when running from the IDE, then we don\u0027t need to restore anything.\n\n3. If for some reason we really do need to restore RendererFactory\u0027s validation state from false back to true at the end of our task, could RendererFactory be left in an unhealthy state if our task excepted before AntRestoringCommand got a chance to execute()?",
    "Hi Chris, to summarize what we talked about:\n\nI think you are correct that in the command-line env, we don\u0027t need to restore the validation state because the JRE will terminate.  However, in the IDE, the RendererFactory\u0027s validation state actually does come up as true (although the EAR association problem is not manifested in the IDE); this is why the AntRestoringCommand was added.\n\nFor your third concern, you suggested that we can use the undo mechanism to restore the validation status if the ant task hits an exception.  I talked to Peter about this, we would need to make some small changes to the ant command framework to ensure the undo is run, as outlined below:\n\n- In CommandFragmentEngine (~line 404), the dataManager_.process( cmd ); statement should be moved inside the try block to guard against exceptions happening in the getters/setters.\n\n- In AntController (~line 77), we need to check for an error status and initiate the undo sequence.",
    "Created an attachment (id\u003d52450)\nrevised patch\n\nHere is a revised patch with undo.  I tested it by throwing an exception in the AntRestoringCommand, and added debug statements in AntDefaultingOperation to see that the undo method is invoked.",
    "Patch reviewed and committed.  Will release later on.",
    "Patches committed to R1_5_maintenance and HEAD stream.  Released to WTP 1.5.3 as v200612070300 and to WTP 2.0 as v200612070500.",
    "Verified in M200701181631. Closing."
  ],
  "commentCreationDates": [
    "2006-09-29T16:08:32+02:00",
    "2006-09-29T16:30:43+02:00",
    "2006-10-02T14:23:45+02:00",
    "2006-10-02T21:58:54+02:00",
    "2006-10-02T22:02:49+02:00",
    "2006-10-04T19:17:29+02:00",
    "2006-10-04T20:46:30+02:00",
    "2006-10-21T01:49:16+02:00",
    "2006-12-07T00:50:12+01:00",
    "2006-12-07T05:04:18+01:00",
    "2007-02-01T22:43:11+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.xml.sax.SAXParseException",
      "message": "cvc-complex-type.2.4.b: The content of element \u0027application\u0027 is not complete. One of \u0027{\"http://java.sun.com/xml/ns/j2ee\":display-name, \"http://java.sun.com/xml/ns/j2ee\":icon, \"http://java.sun.com/xml/ns/j2ee\":module}\u0027 is expected.     [wsgen]",
      "elements": [
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.loadDocument",
          "source": "EMF2DOMRenderer.java:79"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "159283",
      "date": "2006-09-29T16:08:32+02:00",
      "product": "Web Tools",
      "component": "jst.ws",
      "severity": "major"
    }
  ],
  "groupId": "159283",
  "bugId": "159283",
  "date": "2006-09-29T16:08:32+02:00",
  "product": "Web Tools",
  "component": "jst.ws",
  "severity": "major"
}