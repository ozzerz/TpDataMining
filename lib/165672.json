{
  "comments": [
    "Referring to Bug 165665 (https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d165665), where the plugin to open the Navigator view is not included any more by default and spinning that idea further:\n\nThere should be a further option in the launch configuration dialog (tab \"plugins\") that allows not only to add the required plugins but also a user-definable set of plugins (plus all their dependencies). \n\nE.g. I always manually add the org.eclipse.pde.runtime plugins to the list of plugins before starting the runtime workbench so that I can open the Error log view to quicker see if and what error I get.\n\nSearching and picking that plugin in a pretty lengthy list is getting a bit tedious (I have installed AJDT, EMF, EMFT, GEF, GMF and WSP and a few more, so my list of plugins if about 300 entries long!). \n\nSo besides being able to select ALL or just the minimal set I\u0027ld love to see another option to specify the minimal set PLUS a list of user selectable plugins (plus their dependencies of course...) that I *always* want to see added to the list of required plugins.\n\nA UI to specify that minimal list could be do first deselect all, then picking the ones that one wants to be always included and then to click some new button \"Always add these\". Eclipse would internally execute the \"add required plugins\" command (so that all dependecies of those that the user just selected get added as well) and then memorize all currently selected plugins as the list of plugins that should always be added.\n\nMichael",
    "Michael, you are in luck.  That functionality already exists.  If you go to the Windows \u003e Preferences page, then open up Plug-in Development \u003e Target Platform, you see a bunch of tabs.  Go to the tab for \"Implicit Dependencies\".  When calculating the required plug-ins for your launch configuration, any plug-ins you add to this table will be included in the list of plug-ins to check for dependencies.\n\nI am not closing the bug because I think you are using PDE in an interesting way.  I would like to suggest that PDE does an enhancement in the way it develops/launches a target with multiple configurations.  Currently, there is little or no support for a single target platform that can be run in multiple layouts.",
    "Hi,\nI am afraid, these \"Implicit Dependencies\" don\u0027t work (or at least not as one would expect).\n\nI used the Launch configuration wizard to first configure a set of minimal plugins that allowed me to start a runtime workbench in which I was able to open a Navigator view (so that I can at least create a project and view and select files in it) - I needed to check about 35 plugins.\n\nThat list of plugins I faithfully copied into the \"Implicit Dependencies\" list (BTW: it would be nice, if the Launch Wizard had some \"export\" facility and that \"Implicit Dependency\" dialog some import mechanism) expecting that this would then allow me to open a Navigator view when starting my plugin in the runtime workbench.\n\nHowever, when I then open the Launch-dialog, select my plugin, hit \"Add Required Plugins\", start up the runtime workbench and in it try to open a Navigator view I still get the Error\n--------------------\nUnable to create view: Plug-in \"org.eclipse.ui.ide\" was unable to instantiate class \"org.eclipse.ui.views.navigator.ResourceNavigator\".\n--------------------\n\nwith the stackdump:\n--------------------\njava.lang.IllegalStateException\n\tat org.eclipse.core.runtime.Platform.getPluginRegistry(Platform.java:748)\n\tat org.eclipse.core.runtime.Platform.getPlugin(Platform.java:723)\n\tat org.eclipse.ui.views.navigator.ResourceNavigator.initLinkingEnabled(ResourceNavigator.java:411)\n\tat org.eclipse.ui.views.navigator.ResourceNavigator.\u003cinit\u003e(ResourceNavigator.java:239)\n\tat java.lang.Class.newInstanceImpl(Native Method)\n\tat java.lang.Class.newInstance(Class.java:1263)\n\tat org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)\n\tat org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:787)\n\tat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)\n\tat org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)\n\tat org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:234)\n\tat org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:69)\n\tat org.eclipse.ui.internal.ViewReference.createPartHelper(ViewReference.java:292)\n\tat org.eclipse.ui.internal.ViewReference.createPart(ViewReference.java:197)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:566)\n\tat org.eclipse.ui.internal.Perspective.showView(Perspective.java:1784)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:984)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:965)\n\tat org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:3490)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:3487)\n\tat org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:3463)\n\tat org.eclipse.ui.internal.ShowViewAction.run(ShowViewAction.java:76)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:499)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:539)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)\n\tat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3463)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3077)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1924)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1888)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:348)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:165)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:341)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:285)\n\tat org.eclipse.core.launcher.Main.run(Main.java:987)\n\tat org.eclipse.core.launcher.Main.main(Main.java:962)\n--------------------\n\nSo - I have to conclude - these implicit dependecies were apparently NOT added to the list of plugins in the launch dialog before starting the runtime workbench. What am I missing here?\n\nMichael\n",
    "Implicit Dependencies are currently not taken into account, but they should.",
    "Created an attachment (id\u003d68023)\npatch\n\nPatch to include implicit dependenices when calculating dependencies in the launcher.",
    "Brian, does DependencyCalculator already take implicit dependencies into consideration?\n\nThis should be pervasive.",
    "Created an attachment (id\u003d68024)\nrevised patch\n\nrevised patch.  Now any time we calculate dependencies in the DependencyManager, we always take into considereration implicit dependencies, not only in the launcher.",
    "Looks good, Brian.",
    "(From update of attachment 68024)\nPatch works well.",
    "patch applied"
  ],
  "commentCreationDates": [
    "2006-11-23T16:03:09+01:00",
    "2006-11-27T15:15:50+01:00",
    "2006-12-11T10:28:29+01:00",
    "2007-05-17T20:58:31+02:00",
    "2007-05-21T22:32:46+02:00",
    "2007-05-21T22:35:27+02:00",
    "2007-05-21T23:17:56+02:00",
    "2007-05-22T06:50:49+02:00",
    "2007-05-22T18:14:53+02:00",
    "2007-05-23T17:56:47+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Platform.getPluginRegistry",
          "source": "Platform.java:748"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.getPlugin",
          "source": "Platform.java:723"
        },
        {
          "method": "org.eclipse.ui.views.navigator.ResourceNavigator.initLinkingEnabled",
          "source": "ResourceNavigator.java:411"
        },
        {
          "method": "org.eclipse.ui.views.navigator.ResourceNavigator.\u003cinit\u003e",
          "source": "ResourceNavigator.java:239"
        },
        {
          "method": "java.lang.Class.newInstanceImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.newInstance",
          "source": "Class.java:1263"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "RegistryStrategyOSGI.java:170"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "ExtensionRegistry.java:787"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:243"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:51"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPlugin.createExtension",
          "source": "WorkbenchPlugin.java:234"
        },
        {
          "method": "org.eclipse.ui.internal.registry.ViewDescriptor.createView",
          "source": "ViewDescriptor.java:69"
        },
        {
          "method": "org.eclipse.ui.internal.ViewReference.createPartHelper",
          "source": "ViewReference.java:292"
        },
        {
          "method": "org.eclipse.ui.internal.ViewReference.createPart",
          "source": "ViewReference.java:197"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:566"
        },
        {
          "method": "org.eclipse.ui.internal.Perspective.showView",
          "source": "Perspective.java:1784"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyShowView",
          "source": "WorkbenchPage.java:984"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$13",
          "source": "WorkbenchPage.java:965"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$13.run",
          "source": "WorkbenchPage.java:3490"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.showView",
          "source": "WorkbenchPage.java:3487"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.showView",
          "source": "WorkbenchPage.java:3463"
        },
        {
          "method": "org.eclipse.ui.internal.ShowViewAction.run",
          "source": "ShowViewAction.java:76"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:499"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:539"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:488"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:400"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:925"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3463"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3077"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1924"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1888"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:104"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:74"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:348"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:165"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:341"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:285"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:987"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:962"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "165672",
      "date": "2006-12-11T10:28:29+01:00",
      "product": "PDE",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "165672",
  "bugId": "165672",
  "date": "2006-11-23T16:03:09+01:00",
  "product": "PDE",
  "component": "UI",
  "severity": "enhancement"
}