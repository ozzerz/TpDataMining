{
  "comments": [
    "The JavaScript editor inserts tabs for indentation and I cannot find a way to \ntell it to use spaces. I have looked in all the expected places in the \npreferences (i.e. General \u003e Editors \u003e Structured Text Editors, General \u003e \nEditors \u003e Text Editors, Web and XML \u003e JavaScript Files \u003e JavaScript Sources).",
    "Changed Version field given new release numbering.\n",
    "Created an attachment (id\u003d35359)\nAdds a group  to the js source preferences to manage tab vs spaces and tab width\n\nThis patch adds a group to the source preference page so that the user can\nchoose between tabs vs spaces indenting. Tab/spaces width can be specified as well. \nThe feature is implemented in the attached TabsAutoEditStrategy and SourceViewerConfiguration",
    "Thank you so much for patch.  I will look into applying it.  Using TabsAutoEditStrategy \u0026 SourceViewerConfiguration sounds like the right approach.  Did you basically use what is done in the SSE editors as an example?",
    "(In reply to comment #3)\n\u003e Thank you so much for patch.  I will look into applying it.  Using\n\u003e TabsAutoEditStrategy \u0026 SourceViewerConfiguration sounds like the right\n\u003e approach.  Did you basically use what is done in the SSE editors as an example?\n\nMy impl. of AutoEditStrategy is simpler, I don\u0027t know if I\u0027m missing something.\nAnother difference is that the js editor does not use the sse so I had to do to make sure that the right configured tabs were used even when you select 2+ lines of code and shift right. In that case the customizeCommand of autoeditstretgy is not called so I make sure that the textWidget.setTabs(int) is called when tabs preferences are updated.\n\n",
    "By the way, I notice now (using the latest release - 1.0.0.v200602062135 - so no patch involved) that everyitme you select one or more lines of text and press tab, everyting runs fine apparently, but the error log reports: \n\nException in notifyChanged() of LineStyleProviderForJava\n\njava.lang.IllegalArgumentException: Index out of bounds\n\tat org.eclipse.swt.SWT.error(SWT.java:2926)\n\tat org.eclipse.swt.SWT.error(SWT.java:2865)\n\tat org.eclipse.swt.SWT.error(SWT.java:2836)\n\tat org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:6203)\n\tat org.eclipse.wst.javascript.ui.internal.editor.JSLineStyleListener.redrawRegion(JSLineStyleListener.java:548)\n\tat org.eclipse.wst.javascript.ui.internal.editor.JSLineStyleListener.documentChanged(JSLineStyleListener.java:179)\n\tat org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:729)\n\tat org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:692)\n\tat org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:677)\n\tat org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:754)\n\tat org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1112)\n\tat org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1119)\n\tat org.eclipse.jface.text.TextViewer.shiftRight(TextViewer.java:3857)\n\tat org.eclipse.jface.text.TextViewer.shift(TextViewer.java:3809)\n\tat org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3531)\n\tat org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:801)\n\tat org.eclipse.ui.texteditor.ShiftAction$1.run(ShiftAction.java:85)\n\nand so on ...\n\nDon\u0027t know if I should fill a bug for this.\n\nEclipse SDK 1.3.2\n",
    "Actually, I believe that additional bug you are seeing is bug 92962",
    "Okay, I\u0027ve looked over the patch some more. I noticed the TabsAutoEditStrategy attached itself as a preference listener to keep track of when the tabs for spaces.  The problem is that I could not find where it removes itself as a preference listner.  This could turn into memory leaks.\n\nI also noticed TabsAutoEditStrategy had a similar problem bug 105912 had.  If I copied and pasted text that had a tab in the middle of it, I would lose everything that was before the tab character.\n\nGot any solutions for these issues?\n\nI will attach a patch I created that takes the same approach as the source editors.  I think a difference in our fix approach is that instead of listening for a preference change, I am just checking the preference every time.  The problem I have is that I cannot short circuit the shift right \u0026 shift left actions to check the preference each time because those actions are in the SourceViewer, which JSEditor does not subclass.  So if the user changes the tab preference, the new preference is not picked up by shift right/left until after user closes and reopens the editor.\n\nSo I guess both our solutions are not fully there yet.",
    "Created an attachment (id\u003d36173)\npatch to javascript.core \u0026 javascript.ui\n\nHere\u0027s my partial solution.  See previous comment for more info.",
    "I found a workaround to the problem with my patch (I basically add a preference listener in JSEditor that updates the indent prefixes when the preference changes) I also found a fix for bug 92962.  Both fixes should be in this week\u0027s ibuild.",
    "released for this week\u0027s ibuild",
    "This is part of a mass update to close out all stale WTP resolved bugs from the 1.0.x and 1.5.0 timeframe.  If you feel this bug was closed inappropriately, please reopen.\n\nThanks, John Lanuti"
  ],
  "commentCreationDates": [
    "2005-05-17T20:02:25+02:00",
    "2005-06-15T07:24:05+02:00",
    "2006-02-25T20:57:27+01:00",
    "2006-02-27T22:09:11+01:00",
    "2006-02-28T23:22:44+01:00",
    "2006-03-01T00:31:18+01:00",
    "2006-03-10T19:46:11+01:00",
    "2006-03-13T19:28:25+01:00",
    "2006-03-13T19:31:23+01:00",
    "2006-03-29T22:42:03+02:00",
    "2006-03-29T22:44:16+02:00",
    "2006-11-28T20:58:36+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2926"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2865"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2836"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.redrawRange",
          "source": "StyledText.java:6203"
        },
        {
          "method": "org.eclipse.wst.javascript.ui.internal.editor.JSLineStyleListener.redrawRegion",
          "source": "JSLineStyleListener.java:548"
        },
        {
          "method": "org.eclipse.wst.javascript.ui.internal.editor.JSLineStyleListener.documentChanged",
          "source": "JSLineStyleListener.java:179"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2",
          "source": "AbstractDocument.java:729"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged",
          "source": "AbstractDocument.java:692"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged",
          "source": "AbstractDocument.java:677"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.fireDocumentChanged",
          "source": "AbstractDocument.java:754"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.replace",
          "source": "AbstractDocument.java:1112"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.replace",
          "source": "AbstractDocument.java:1119"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.shiftRight",
          "source": "TextViewer.java:3857"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.shift",
          "source": "TextViewer.java:3809"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.doOperation",
          "source": "TextViewer.java:3531"
        },
        {
          "method": "org.eclipse.jface.text.source.SourceViewer.doOperation",
          "source": "SourceViewer.java:801"
        },
        {
          "method": "org.eclipse.ui.texteditor.ShiftAction$1.run",
          "source": "ShiftAction.java:85"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "95618",
      "date": "2006-03-01T00:31:18+01:00",
      "product": "Web Tools",
      "component": "wst.javascript",
      "severity": "normal"
    }
  ],
  "groupId": "95618",
  "bugId": "95618",
  "date": "2005-05-17T20:02:25+02:00",
  "product": "Web Tools",
  "component": "wst.javascript",
  "severity": "normal"
}