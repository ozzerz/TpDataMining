{
  "comments": [
    "Created an attachment (id\u003d82319)\nworkaround for the bug\n\nBuild ID:  I20070625-1500\n\nThis bug report is for the bundle org.eclipse.equinox.ds from the equinox-incubator.\n\n\nIf I run equinox in a tomcat there is a NullPointerException when activating the org.eclipse.equinox.ds bundle or a bundle which provides a service component. The stack trace is as the following:\n\njava.lang.NullPointerException\n        at org.eclipse.equinox.ds.SCRManager.startedBundle(SCRManager.java:474)\n        at org.eclipse.equinox.ds.SCRManager.startIt(SCRManager.java:114)\n        at org.eclipse.equinox.ds.Activator.initSCR(Activator.java:113)\n        at org.eclipse.equinox.ds.Activator.start(Activator.java:168)\n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)\n        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)\n        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)\n        at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)\n        at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:252)\n        at org.eclipse.osgi.framework.internal.core.FrameworkCommandProvider._start(FrameworkCommandProvider.java:260)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute(FrameworkCommandInterpreter.java\n:145)\n        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand(FrameworkConsole.java:291)\n        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.console(FrameworkConsole.java:276)\n        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.run(FrameworkConsole.java:218)\n        at java.lang.Thread.run(Unknown Source)\n\nAfter debuging a while I found out that SCRManager.java tries to read the property \"org.osgi.framework.vendor\" in Line 91. If I type on the osgi console \"getprop org.osgi.framework.vendor\" the value is \"Eclipse\" but in SCRManager the value is \"ProSyst\". The value is provided as the default in the System.getProperty call. After changing the default to \"Eclipse\" everything works fine.\n\nI will provide a patch, but I think thats only a workaround. Why is the property value incorrect in SCRManager:91 but correct if I type getprop org.osgi.framewok.vendor in the osgi console?",
    "It\u0027s hard to know for certain if this is the problem however uur implementation of DS should not be using System.getProperty. It should instead, be using bundleContext.getProperty. When launching under an app server (like Tomcat) the FrameworkProperties implementation are private to the framework and are not backed by System Properties.\n",
    "Created an attachment (id\u003d82331)\npatch to use BundleContext.getProperty\n\nI think Simon is correct.  Are you embedding Equinox into your own application?  If Eclipse is launched stand-alone (typical launch using eclipse.exe) then the framework will use the global System properties to store the org.osgi.* property values.  But if you are embedding Equinox and you set osgi.framework.useSystemProperties\u003dfalse then Equinox will use a \"instance specific\" Properties object for storing the org.osgi.* and other instance configuration properties.  These will not be reflected in the global system properties.\n\nA quick search of the bundles from prosyst show quite a few calls to System.getProperty methods.  If possible you should try to use BundleContext.getProperty to ensure you are getting the property from the instance of Equinox.  This patch does this for the properties causing the issue in this bug.",
    "Hi!\nThanks for the hint not to use System.getProperty. It solved another problem in one of my own bundles, too :-)\n\nI tried Thomas path and it works for me. Thanks a lot!\n\nCheers,\nBen",
    "(In reply to comment #2)\n\u003e A quick search of the bundles from prosyst show quite a few calls to\n\u003e System.getProperty methods.  If possible you should try to use\n\u003e BundleContext.getProperty to ensure you are getting the property from the\n\u003e instance of Equinox.  This patch does this for the properties causing the issue\n\u003e in this bug.\n\nI think we must also fix occurrences of Boolean.getBoolean() and Integer.getInteger() as well. These methods are using internally System.getProperty()\n\nShall we open new bugs for each bundle that needs these fixes or when we fix all of the bundles we should mark this bug as fixed?\n\n",
    "I fixed the way of getting of the system properties that caused this bug.\nI fixed as well all other calls to System.getProperty(), Boolean.getBoolean() and Integer.getInteger() in DS bundle.\n",
    "Fixed also in DS, IO, IP and Util"
  ],
  "commentCreationDates": [
    "2007-11-07T12:57:54+01:00",
    "2007-11-07T14:03:24+01:00",
    "2007-11-07T14:50:14+01:00",
    "2007-11-09T09:14:40+01:00",
    "2007-12-06T16:18:20+01:00",
    "2007-12-07T10:10:49+01:00",
    "2007-12-07T12:50:43+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.equinox.ds.SCRManager.startedBundle",
          "source": "SCRManager.java:474"
        },
        {
          "method": "org.eclipse.equinox.ds.SCRManager.startIt",
          "source": "SCRManager.java:114"
        },
        {
          "method": "org.eclipse.equinox.ds.Activator.initSCR",
          "source": "Activator.java:113"
        },
        {
          "method": "org.eclipse.equinox.ds.Activator.start",
          "source": "Activator.java:168"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
          "source": "BundleContextImpl.java:999"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "BundleContextImpl.java:993"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:974"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:346"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:260"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:252"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FrameworkCommandProvider._start",
          "source": "FrameworkCommandProvider.java:260"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute",
          "source": "FrameworkCommandInterpreter.java :145"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand",
          "source": "FrameworkConsole.java:291"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FrameworkConsole.console",
          "source": "FrameworkConsole.java:276"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.FrameworkConsole.run",
          "source": "FrameworkConsole.java:218"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "209013",
      "date": "2007-11-07T12:57:54+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "major"
    }
  ],
  "groupId": "209013",
  "bugId": "209013",
  "date": "2007-11-07T12:57:54+01:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "major"
}