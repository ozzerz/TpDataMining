{
  "comments": [
    "Eclipse 3.0RC1\nSun JVM 1.4.2_03\n\nWithin a StyledText box paste in a Unicode supplementary character, for example\nMATHEMATICAL_BOLD_CAPITAL_A with hexadecimal code point 1D400h:\n\u003chttp://www.unicode.org/charts/PDF/U1D400.pdf\u003e\nYou have to construct the character. I just used CLISP from the GNOME Terminal: \n(princ #\\mathematical_bold_capital_a)\n\nI selected the character and pasted it into a StyledText box. In GTK without the\ngylph being available this will appropriately display as a character with the\nhexadecimal value in a rectangle:\n[01D]\n[400]\n\nNow push the left arrow to attempt to move the caret before the character. Type\na character and the text disappears and nothing more typed is visible. This is\nprobably because the valid UTF-16 character composed of high and low 16 bit\nsurrogates has been split, creating an illegal UTF-16 sequence.\n\nInserting text is also affected after a supplementary character. Paste a\nsupplementary character then type \"abc\". Press the left arrow and type some\nadditional letters. The caret doesn\u0027t move to before \"c\" even though letters are\ninserted before \"c\".\n\nD800h to DFFFh are reserved for UTF-16 surrogate pairs and no code points are\nassigned to them. This means each surrogate is individually distinguishable and\ncannot be mistake for a single 16 bit code point.\n\n\"Supplementary Characters in the Java Platform\"\n\u003chttp://java.sun.com/developer/technicalArticles/Intl/Supplementary/\u003e\n\nCharacter navigation of supplementary Unicode characters within a StyledText box\nshould be feasible even without Java 1.5. It is going to be just as awkward to\nimplement in Java 1.5 because the char type is not being upgraded to a size that\nwill fit all Unicode code points. The number of code points in a Java string or\narray of char can only be determined by parsing the entire string or array.\nUTF-16 is a variable width encoding without the space advantage of UTF-8 nor the\nfixed width advantage of UTF-32.\n\nRegards,\nAdam Warner",
    "Is there any other way to obtain this glyph so I can copy it and paste it ?\nI don\u0027t have clisp.\n\nSomething else, did you test this same scenario with Gedit or the Text Widget \nexample from gtk-demo app ? Did it work ?",
    "GEdit 2.6.1 has no supplementary character navigation problem, but I wouldn\u0027t\nexpect it to as this problem is an artifact of 16 bit character encoding! I\u0027ve\njust checked GEdit\u0027s dependencies and it uses the pango library. This library\nuses UTF-8 internally (\u003chttp://www.pango.org/design.shtml\u003e): \"The character set\nis extensible to the full range of ISO10646 without requiring escape mechanisms\nsuch as surrogate pairs.\"\n\nBecause of Java\u0027s 16-bit char legacy we have to worry about surrogate pairs. \n\nYou can use GNOME 2.6\u0027s \"Unicode Character Map\" (from Applications/Accessories)\nto copy any Unicode character. MATHEMATICAL_BOLD_CAPITAL_A is the first code\npoint in the \"Mathematical Alphanumeric Symbols\" category.\n\nHowever I have written a test case for you to compile. It\u0027s appended to this\nmessage. I found the surrogate pairs for MATHEMATICAL_BOLD_CAPITAL_A using this\nconversion table: http://www.i18nguy.com/unicode/surrogatetable.html\n\nIt should demonstrate all the problems I previously mentioned. I also managed to\ninduce this error:\n\n** ERROR **: file pango-layout.c: line 2799 (process_item): assertion failed:\n(!shape_set)\naborting...\nAborted\n\nAnd this error:\n\njava.lang.ArrayIndexOutOfBoundsException\n        at java.lang.System.arraycopy(Native Method)\n        at java.lang.StringBuffer.append(StringBuffer.java:499)\n        at\norg.eclipse.swt.custom.DefaultContent.getTextRange(DefaultContent.java:720)\n        at org.eclipse.swt.custom.WrappedContent.getLine(WrappedContent.java:98)\n        at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:5670)\n        at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:5074)\n        at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4754)\n        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:968)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:953)\n        at org.eclipse.swt.widgets.Control.gtk_expose_event(Control.java:1744)\n        at org.eclipse.swt.widgets.Composite.gtk_expose_event(Composite.java:412)\n        at org.eclipse.swt.widgets.Canvas.gtk_expose_event(Canvas.java:105)\n        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1190)\n        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)\n        at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)\n        at org.eclipse.swt.widgets.Display.eventProc(Display.java:815)\n        at org.eclipse.swt.internal.gtk.OS.gdk_window_process_updates(Native Method)\n        at org.eclipse.swt.widgets.Control.update(Control.java:3170)\n        at org.eclipse.swt.widgets.Control.update(Control.java:3162)\n        at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:5183)\n        at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:4711)\n        at\norg.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:61)\n        at\norg.eclipse.swt.custom.DefaultContent.sendTextEvent(DefaultContent.java:799)\n        at\norg.eclipse.swt.custom.DefaultContent.replaceTextRange(DefaultContent.java:791)\n        at\norg.eclipse.swt.custom.WrappedContent.replaceTextRange(WrappedContent.java:319)\n        at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5583)\n        at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6423)\n        at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2537)\n        at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4981)\n        at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5004)\n        at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java:4749)\n        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:968)\n        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:953)\n        at org.eclipse.swt.widgets.Control.sendIMKeyEvent(Control.java:2277)\n        at org.eclipse.swt.widgets.Control.gtk_commit(Control.java:1694)\n        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1184)\n        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)\n        at org.eclipse.swt.internal.gtk.OS.gtk_im_context_filter_keypress(Native\nMethod)\n        at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1790)\n        at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:439)\n        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1194)\n        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3012)\n        at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(Native Method)\n        at org.eclipse.swt.widgets.Display.eventProc(Display.java:815)\n        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2222)\n        at org.eclipse.jface.window.Window.runEventLoop(Window.java:668)\n        at org.eclipse.jface.window.Window.open(Window.java:648)\n        at TestUnicode.main(TestUnicode.java:26)\n\n\nThese occurred when I started the test program, moved right to the end of the\ntext and typed z four times.\n\nRegards,\nAdam\n\nimport org.eclipse.jface.window.ApplicationWindow;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.custom.StyledText;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.swt.widgets.Display;\n\npublic class TestUnicode extends ApplicationWindow {\n\n    StyledText text;\n\n    public TestUnicode () {\n        super(null);\n    }\n\n    protected Control createContents(Composite parent) {\n        this.getShell().setText(\"StyledText Unicode Test\");\n        text \u003d new StyledText(parent, SWT.BORDER | SWT.WRAP);\n\ttext.setText(\"\\uD835\\uDC00abc\");\n        return text;\n    }\n\n    static public void main(String[] args) {\n        TestUnicode gui \u003d new TestUnicode();\n        gui.setBlockOnOpen(true);\n        gui.open();\n        Display.getCurrent().dispose();\n    }\n}\n",
    "I was looking at the feature plan of GTK 2.4 (http://www.gtk.org/plan/2.4/):\n-Full Unicode 3.2 (4.0?) support, including non-BMP portions. (#68435, #101081)\nExactly what you need.\n\nAs I expected, it works on GTK 2.4 and fails on GTK 2.2.\nHere is my snippet, running it on both versions of GTK and compare:\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.widgets.*;\nimport org.eclipse.swt.custom.*;\npublic class PR65899 {\npublic static void main(String[] args) {\t\n\tDisplay display \u003d new Display();\n\tShell shell \u003d new Shell(display);\n\tshell.setSize(400, 200);\n\tStyledText styledText \u003d new StyledText (shell, SWT.BORDER);\n\tstyledText.setBounds(10, 10, 360, 30);\n\tstyledText.setText(\"StyledText - Surrogate pair: \u003e\\uD835\\uDC00\u003c\");\t\n\tText text \u003d new Text (shell, SWT.SINGLE | SWT.BORDER);\n\ttext.setBounds(10, 50, 360, 30);\n\ttext.setText(\"Text - Surrogate pair: \u003e\\uD835\\uDC00\u003c\");\t\n\tshell.open();\n\twhile (!shell.isDisposed())\n\t\tif (!display.readAndDispatch())\n\t\t\tdisplay.sleep();\n\tdisplay.dispose();\t\n}\n}\n",
    "Created an attachment (id\u003d11803)\nRunning on GTK-2.4.0\n",
    "Created an attachment (id\u003d11804)\nRunning on GTK 2.2.1\n",
    "Hi Felipe. I see a screenshot similar to your GTK+ 2.4 one since I\u0027m using GNOME\n2.6 and GTK+ 2.4.2 (I\u0027m just using a different window manager). I agree this\nversion of GTK+ is \"Exactly what you need.\"\n\nTo reproduce the bug reports from my original mail do this in the _StyledText_ box:\n\n(a) position the cursor right at the beginning of the surrogate pair (just after\nthe \u003e). Now press the right arrow once. Type a letter and _all the text\ndisappears_. I suspect this is because the surrogate pair is incorrectly split.\n\n(b) position the cursor right after the surrogate pair and before the \u003c. Type a\nletter. Again all the text disappears.\n\n(c) position the cursor right after the \u003c. Type a letter. The letter appears in\nthe wrong place (before the \u003c). This is further evidence that the surrogate pair\nwas incorrectly split in the previous two tests.\n\nNone of these issues arise in the second Text box, only the StyledText box!\n\nRegards,\nAdam",
    "Adam, I will have to defer this problem to after 3.0\n\nAlthough java 1.4 has problems I didn\u0027t expect to have this kind to trouble \ngive that all character navigation, hit test, drawing, measuring, etc is done \nusing PangoLayout who should handle surrogate pairs properly. For example, \nPango set the cursor position flag before a low surrogate causing my code to \nset caret in the middle of the surrogate pair, I\u0027m also having trouble with \nmeasuring. \n\n"
  ],
  "commentCreationDates": [
    "2004-06-06T10:49:23+02:00",
    "2004-06-09T00:20:17+02:00",
    "2004-06-09T04:38:57+02:00",
    "2004-06-09T18:14:36+02:00",
    "2004-06-09T18:16:43+02:00",
    "2004-06-09T18:17:19+02:00",
    "2004-06-10T00:57:16+02:00",
    "2004-06-17T20:50:38+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "elements": [
        {
          "method": "java.lang.System.arraycopy",
          "source": "Native Method"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "StringBuffer.java:499"
        },
        {
          "method": "org.eclipse.swt.custom.DefaultContent.getTextRange",
          "source": "DefaultContent.java:720"
        },
        {
          "method": "org.eclipse.swt.custom.WrappedContent.getLine",
          "source": "WrappedContent.java:98"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.performPaint",
          "source": "StyledText.java:5670"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handlePaint",
          "source": "StyledText.java:5074"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$7.handleEvent",
          "source": "StyledText.java:4754"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:944"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:968"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:953"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.gtk_expose_event",
          "source": "Control.java:1744"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.gtk_expose_event",
          "source": "Composite.java:412"
        },
        {
          "method": "org.eclipse.swt.widgets.Canvas.gtk_expose_event",
          "source": "Canvas.java:105"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.windowProc",
          "source": "Widget.java:1190"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3012"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_do_event",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.eventProc",
          "source": "Display.java:815"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gdk_window_process_updates",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.update",
          "source": "Control.java:3170"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.update",
          "source": "Control.java:3162"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handleTextChanged",
          "source": "StyledText.java:5183"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$6.textChanged",
          "source": "StyledText.java:4711"
        },
        {
          "method": "org.eclipse.swt.custom.StyledTextListener.handleEvent",
          "source": "StyledTextListener.java:61"
        },
        {
          "method": "org.eclipse.swt.custom.DefaultContent.sendTextEvent",
          "source": "DefaultContent.java:799"
        },
        {
          "method": "org.eclipse.swt.custom.DefaultContent.replaceTextRange",
          "source": "DefaultContent.java:791"
        },
        {
          "method": "org.eclipse.swt.custom.WrappedContent.replaceTextRange",
          "source": "WrappedContent.java:319"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.modifyContent",
          "source": "StyledText.java:5583"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.sendKeyEvent",
          "source": "StyledText.java:6423"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.doContent",
          "source": "StyledText.java:2537"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handleKey",
          "source": "StyledText.java:4981"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handleKeyDown",
          "source": "StyledText.java:5004"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$7.handleEvent",
          "source": "StyledText.java:4749"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:944"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:968"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:953"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.sendIMKeyEvent",
          "source": "Control.java:2277"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.gtk_commit",
          "source": "Control.java:1694"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.windowProc",
          "source": "Widget.java:1184"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3012"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_im_context_filter_keypress",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.gtk_key_press_event",
          "source": "Control.java:1790"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.gtk_key_press_event",
          "source": "Composite.java:439"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.windowProc",
          "source": "Widget.java:1194"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3012"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_do_event",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.eventProc",
          "source": "Display.java:815"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_iteration",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2222"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:668"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:648"
        },
        {
          "method": "TestUnicode.main",
          "source": "TestUnicode.java:26"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "65899",
      "date": "2004-06-09T04:38:57+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "65899",
  "bugId": "65899",
  "date": "2004-06-06T10:49:23+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}