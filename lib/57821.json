{
  "comments": [
    "If a Platform.restart() is invoked during the WorkbenchAdvisor.initialize()\nphase a crash will occur with Eclipse 3.0 M8.\n\nThe root cause is because during the\norg.eclipse.ui.internal.Workbench.shutdown() method the following line is invoked:\n\n    activityHelper.shutDown();\n\nbut the activityHelper method is not initialized (in Workbench.init(Display)\nmethod) until _after_ the workbench advisor is initialized.\n\nTwo possible fixes:\n\nSimplest is to change the above line of code to be:\n\n    if(activityHelper!\u003dnull) activityHelper.shutDown();\n\nAlternatively one could consider moving the initialization of the activityHelper\nto _before_ the advisor initialization.  I don\u0027t know all the ramifications of\nthat.  Even if moved, one should still do a null check during shutdown.  One\ncan\u0027t be certain just when a shutdown is going to occur so it is not safe to\nassume that all instance variables have been initialized.",
    "I\u0027m looking at the code now... activityHelper is initialized before\nWorkbenchAdvistor.initialize() is called.  Do you have a stacktrace for this crash? ",
    "From the Workbench.init(Display) method (Eclipse 3.0 M8 sources distro).  Note\nthe two lines marked with \u003c\u003c\u003c\u003c----:\n\n\t\t// now that the workbench is sufficiently initialized, let the advisor\n\t\t// have a turn.\n\t\tadvisor.basicInitialize(getWorkbenchConfigurer());\u003c\u003c\u003c\u003c---- \n\n\t\t// configure use of color icons in toolbars\n\t\tboolean useColorIcons \u003d\ngetPreferenceStore().getBoolean(IPreferenceConstants.COLOR_ICONS);\n\t\tActionContributionItem.setUseColorIconsInToolbars(useColorIcons);\n\n\t\t// initialize workbench single-click vs double-click behavior\n\t\tinitializeSingleClickOption();\n\n\t\t// deadlock code\n\t\tboolean avoidDeadlock \u003d true;\n\n\t\tString[] commandLineArgs \u003d Platform.getCommandLineArgs();\n\t\tfor (int i \u003d 0; i \u003c commandLineArgs.length; i++) {\n\t\t\tif (commandLineArgs[i].equalsIgnoreCase(\"-allowDeadlock\")) //$NON-NLS-1$\n\t\t\t\tavoidDeadlock \u003d false;\n\t\t}\n\n\t\tif (avoidDeadlock) {\n\t\t\tUILockListener uiLockListener \u003d new UILockListener(display);\n\t\t\tPlatform.getJobManager().setLockListener(uiLockListener);\n\t\t\tdisplay.setSynchronizer(new UISynchronizer(display, uiLockListener));\n\t\t}\n\n\t\t// initialize activity helper. TODO why does this belong here and not\n\t\t// up further in the main initialization section for activities?\n\t\tactivityHelper \u003d ActivityPersistanceHelper.getInstance();\u003c\u003c\u003c\u003c----\n\n\t\t// attempt to restore a previous workbench state\n\t\ttry {\n\t\t\tUIStats.start(UIStats.RESTORE_WORKBENCH, \"Workbench\"); //$NON-NLS-1$\n\n\t\t\tadvisor.preStartup();\n\n\t\t\tif (!advisor.openWindows()) {\n\t\t\t    return false;\n\t\t\t}\n\t\t\t\n\t\t} finally {\n\t\t\tUIStats.end(UIStats.RESTORE_WORKBENCH, \"Workbench\"); //$NON-NLS-1$\n\t\t}\n\nHere is a stack trace generated by this bug.  Again, note the \u003c\u003c\u003c-- lines:\njava.lang.NullPointerException\n        at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:1838) \u003c\u003c\u003c----\n        at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:466)\n        at org.eclipse.ui.internal.Workbench.access$400(Workbench.java:133)\n        at org.eclipse.ui.internal.Workbench$9.run(Workbench.java:570)\n        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)\n        at org.eclipse.ui.internal.Workbench.close(Workbench.java:568)\n        at org.eclipse.ui.internal.Workbench.restart(Workbench.java:1262)\n        at com.ibm.rcp.update.UpdateChecker.mustRestart(UpdateChecker.java:563)\n           .... meaningless stuff ....\n        at\ncom.ibm.rcp.platform.RCPWorkbenchAdvisor.initialize(RCPWorkbenchAdvisor.java:99)\n        at\norg.eclipse.ui.application.WorkbenchAdvisor.basicInitialize(WorkbenchAdvisor.java:156)\n\u003c\u003c\u003c---\n        at org.eclipse.ui.internal.Workbench.init(Workbench.java:787)\n        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1513)\n        at\norg.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)\n        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n        at com.ibm.rcp.platform.RCPApplication.run(RCPApplication.java:27)\n        at\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:277)\n        at\norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:239)\n        at\norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)\n        at java.lang.reflect.Method.invoke(Method.java:386)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:267)\n        at org.eclipse.core.launcher.Main.run(Main.java:692)\n        at org.eclipse.core.launcher.Main.main(Main.java:676)\n        at com.ibm.rcp.core.launcher.Main.startLaunch(Main.java:767)\n        at com.ibm.rcp.core.launcher.Main.main(Main.java:1008)\n\nThe fix I put in our local version to get around this was to patch the\nWorkbench.shutdown() method to change:\n\n                activityHelper.shutdown();\n                ProgressManager.getInstance().shutdown();\n\nto:\n\t\tif(activityHelper!\u003dnull){\n\t\t\tactivityHelper.shutdown();\n\t\t}\n\t\tif(ProgressManager.getInstance()!\u003dnull){\n\t\t\tProgressManager.getInstance().shutdown();\n\t\t}\n\nThese seem like sensible safeguards to do anyway.\n",
    "Aha, that is M8 source... my bad.  This problem has been addressed since M8,\nalthough I can\u0027t find the related bug report.",
    "Hi Kim,\n\nCan you verify that this is the related bug report\n\n55894[ActivityMgmt] IDEWorkbenchActivityHelper is initialized too early.\n\n-m@\n",
    "Yes, I believe that\u0027s it."
  ],
  "commentCreationDates": [
    "2004-04-07T23:43:16+02:00",
    "2004-04-08T14:14:51+02:00",
    "2004-04-08T17:34:34+02:00",
    "2004-04-08T17:48:49+02:00",
    "2004-04-26T21:59:48+02:00",
    "2004-04-26T22:13:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.Workbench.shutdown",
          "source": "Workbench.java:1838"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "57821",
      "date": "2004-04-08T17:34:34+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "critical"
    }
  ],
  "groupId": "57821",
  "bugId": "57821",
  "date": "2004-04-07T23:43:16+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "critical"
}