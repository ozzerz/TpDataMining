{
  "comments": [
    "Build I20030604\n\nCall hierarchy does not handle cancel of operation (by clicking on stop in\nprogress bar - lower right corner).\n\n\n!ENTRY org.eclipse.jdt.ui 4 10001 Jun 05, 2003 12:51:49.751\n!MESSAGE Internal Error\n!STACK 0\norg.eclipse.core.runtime.OperationCanceledException\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:701)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:661)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:848)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:475)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:401)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper.findChildren(CallerMethodWrapper.java:67)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.performSearch(MethodWrapper.java:282)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.doFindChildren(MethodWrapper.java:220)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.getCalls(MethodWrapper.java:80)\n\tat\norg.eclipse.jdt.internal.ui.callhierarchy.CallHierarchyContentProvider$MethodWrapperRunnable.run(CallHierarchyContentProvider.java:40)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)",
    "OK, I fixed the exception in the log, but there is more to do:\n\nCallHierarchyContentProvider.getChildren(...)\n - catch (InvocationTargetException e):\n   This exception wraps all exceptions thrown in the modal context thread.\n   So there is no need to catch anything in MethodWrapperRunnable.run(...).\n\n   Should use the exception handler so that the user is prompted is prompted\n   by a dialog. We should never silently log exceptions.\n\n - catch (InterruptedException e) {\n   Is thrown when the user stops the operation by pressing the cancel button.\n\n   Should make sure that the view is empty or that the user has some feedback \n   that the operation was canceled. May be a dummy node saying that the search\n   got canceled.\n\nAdam, can you please coordinate with the contributer  ",
    "Jesper, how does m2 sound as the target milestone? :)",
    "Adam,\n\nI\u0027ll try - it should be possible (the same goes for Bug 38512 and Bug 38511).\n\nI\u0027ll be leaving for my summer vacation on June 21 (and three weeks forward), so\nit has to be before that time. ",
    "Created an attachment (id\u003d5193)\nFix for exception handling\n\nPatch against the org.eclipse.jdt.internal.ui.callhierarchy package.\n\nFixes for exception handling the way Dirk requested (ExceptionHandler popup on\nInvocationTargetException and an indication that the search was interrupted on\nan InterruptedException).\n\nThe InterruptedException is currently presented as a text message instead of\nthe search result. Let me know if this is sufficient. ",
    "released (i changed \u0027cancelled\u0027 to \u0027canceled\u0027 as we use the american spelling \nin other places)\n\nthanks",
    "verified using I20030716 + plug-in expot I20030716.from20030717_1019"
  ],
  "commentCreationDates": [
    "2003-06-05T13:01:01+02:00",
    "2003-06-05T15:55:52+02:00",
    "2003-06-11T01:36:06+02:00",
    "2003-06-11T06:39:20+02:00",
    "2003-06-13T22:28:49+02:00",
    "2003-06-16T14:24:12+02:00",
    "2003-07-17T11:50:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.OperationCanceledException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:701"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:661"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:848"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:475"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:401"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper.findChildren",
          "source": "CallerMethodWrapper.java:67"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.performSearch",
          "source": "MethodWrapper.java:282"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.doFindChildren",
          "source": "MethodWrapper.java:220"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.getCalls",
          "source": "MethodWrapper.java:80"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.callhierarchy.CallHierarchyContentProvider$MethodWrapperRunnable.run",
          "source": "CallHierarchyContentProvider.java:40"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "38495",
      "date": "2003-06-05T13:01:01+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "38495",
  "bugId": "38495",
  "date": "2003-06-05T13:01:01+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}