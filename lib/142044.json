{
  "comments": [
    "The code below is failing.   The elems list hold valid interface IType objects and the constructed SearchPatterns are not null.   \n\t\n        JavaSearchScopeFactory factory\u003d JavaSearchScopeFactory.getInstance();\n\tIJavaSearchScope scope\u003d factory.createJavaSearchScope(new IJavaElement[]{myJavaProject}, false);\n\t\n\tSearchPattern patternA \u003d SearchPattern.createPattern((IJavaElement)elems.get(0), IJavaSearchConstants.IMPLEMENTORS, 0);\n\tSearchPattern patternB \u003d SearchPattern.createPattern((IJavaElement)elems.get(1), IJavaSearchConstants.IMPLEMENTORS, 0);\n\tSearchPattern andedPattern \u003d SearchPattern.createAndPattern(patternA, patternB);\n\t\n\tSearchRequestor requestor \u003d new Searcher();\n\tSearchEngine engine \u003d new SearchEngine();\n\ttry {\n\t\tengine.search(andedPattern, new SearchParticipant[]  {SearchEngine.getDefaultSearchParticipant()}, scope, requestor, null);\n\t} catch (CoreException e) {\n\t\t...\n\t}\n\t...\n\t\nThis results in a NullPointerException in MatchLocator:\n\n\tjava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.\u003cinit\u003e(MatchLocator.java:351)\n\tat org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:85)\n\tat org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:212)\n\tat org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:503)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:538)\n\t...\n\t\n\t\nThe problem seems to stem from the static method PatternLocator.patternLocator(SearchPattern pattern) returning null.",
    "Indeed, PatternLocator.patternLocator(SearchPattern) can return null. We should either handle the null case or return a non-null pattern.\nIn the same way, the call to PatternLocator.patternLocator(SearchPattern pattern) in org.eclipse.jdt.internal.core.search.matching.OrLocator can also put null patterns in the patternLocators array.\nThere is no null check when retrieving the pattern locators.",
    "Created an attachment (id\u003d73026)\nProposed patch\n\nNote that for AND patterns, Search Engine returns matches which will both be returned by each pattern of the AND. Unfortunately that means it does not return any match for the initial bug scenario given in comment 0 as results of requests \"Implementors of I1\" and \"Implementors of I2\" have no real common match.\n\nThe goal of this patch is just to:\n1) avoid the NPE\n2) implement minimal behavior for the AND pattern allowing deeper implementation\n   in case of a strong need appears in the future...\n",
    "Released for 3.4M1 in HEAD stream.\n",
    "Verified (from code of added tests) for 3.4M1 using build I20070802-0800."
  ],
  "commentCreationDates": [
    "2006-05-16T19:51:55+02:00",
    "2006-05-16T20:36:51+02:00",
    "2007-07-04T15:58:28+02:00",
    "2007-07-04T15:59:44+02:00",
    "2007-08-03T15:39:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.\u003cinit\u003e",
          "source": "MatchLocator.java:351"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:85"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:212"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:503"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:538"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "142044",
      "date": "2006-05-16T19:51:55+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "142044",
  "bugId": "142044",
  "date": "2006-05-16T19:51:55+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}