{
  "comments": [
    "when sending a instance of a custom Class in a SharedObject, one get this Exception:\njava.io.EOFException\n\tat java.io.ObjectInputStream$PeekInputStream.readFully(Unknown Source)\n\tat java.io.ObjectInputStream$BlockDataInputStream.readShort(Unknown Source)\n\tat java.io.ObjectInputStream.readStreamHeader(Unknown Source)\n\tat java.io.ObjectInputStream.\u003cinit\u003e(Unknown Source)\n\tat org.eclipse.ecf.core.util.IdentifiableObjectInputStream.\u003cinit\u003e(IdentifiableObjectInputStream.java:31)\n\tat org.eclipse.ecf.provider.generic.SOContainer.deserializeSharedObjectMessage(SOContainer.java:1039)\n\tat org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage(SOContainer.java:711)\n\tat org.eclipse.ecf.provider.xmpp.container.XMPPGroupChatSOContainer.handleContainerMessage(XMPPGroupChatSOContainer.java:132)\n\tat org.eclipse.ecf.provider.xmpp.container.XMPPClientSOContainer.processAsynch(XMPPClientSOContainer.java:346)\n\tat org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent(SOContainer.java:194)\n...\n\n\nafter a look at source code, in org.eclipse.ecf.provider.generic.SOContainer line 1039,\nit seems that\u0027s the BinaryInputStream needs to be reset before trying deserialisation with the SharedObject classloader.\n\na simple \u0027bins.reset()\u0027 corrects the problems.\n\nalso the first error dump should not be dumped since this is a \"normal\" behavior. We do not want such stack trace for each custom object sent !",
    "Thanks Richard...Appreciate the report.   \n\nWill fix \u0027reset\u0027 and \u0027trace\u0027 for 0.8.6.   I was beginning to wonder if anyone was using this characteristic (the use of the classloader for the shared object for deserialization).  But I suppose my wondering is over.",
    "Fixed in current (6/13/2006) codebase.  Will be deployed with 0.8.6 release...eta 6/18/2006.\n\nThanks very much for your report Richard.  ",
    "Marking this as fixed for 0.8.6 stable release"
  ],
  "commentCreationDates": [
    "2006-06-12T18:54:41+02:00",
    "2006-06-12T20:34:16+02:00",
    "2006-06-13T22:22:18+02:00",
    "2006-06-19T00:42:39+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.EOFException",
      "elements": [
        {
          "method": "java.io.ObjectInputStream$PeekInputStream.readFully",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream$BlockDataInputStream.readShort",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.readStreamHeader",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.ObjectInputStream.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ecf.core.util.IdentifiableObjectInputStream.\u003cinit\u003e",
          "source": "IdentifiableObjectInputStream.java:31"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.deserializeSharedObjectMessage",
          "source": "SOContainer.java:1039"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer.handleSharedObjectMessage",
          "source": "SOContainer.java:711"
        },
        {
          "method": "org.eclipse.ecf.provider.xmpp.container.XMPPGroupChatSOContainer.handleContainerMessage",
          "source": "XMPPGroupChatSOContainer.java:132"
        },
        {
          "method": "org.eclipse.ecf.provider.xmpp.container.XMPPClientSOContainer.processAsynch",
          "source": "XMPPClientSOContainer.java:346"
        },
        {
          "method": "org.eclipse.ecf.provider.generic.SOContainer$MessageReceiver.handleAsynchEvent",
          "source": "SOContainer.java:194"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "146622",
      "date": "2006-06-12T18:54:41+02:00",
      "product": "ECF",
      "component": "ecf.core",
      "severity": "normal"
    }
  ],
  "groupId": "146622",
  "bugId": "146622",
  "date": "2006-06-12T18:54:41+02:00",
  "product": "ECF",
  "component": "ecf.core",
  "severity": "normal"
}