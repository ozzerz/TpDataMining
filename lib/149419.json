{
  "comments": [
    "I\u0027m executing the following snippet via AJDT based on 1.5.2 aspectj compiler.\n\nWhen compiled and executed, the target program functions well with the below given aspect.  \n\nAs FA and AbstractFGNode are in the same package, using default access for \"nodeCount\" should suffice.  So, I removed the \"public\" modifier from the \"CAUSE\" statement.  The compilation succeeded but the execution failed at \"EFFECT\" statement with the following exception.  Unless my reasoning about access modifiers is incorrect, field injection and access should work.  I am suspecting this is a bug in the compiler.\n\nAspect\n------\n\npackage edu.ksu.cis.indus.staticanalyses.flow;\n\nimport edu.ksu.cis.indus.staticanalyses.flow.FA;\nimport edu.ksu.cis.indus.staticanalyses.flow.AbstractFGNode;\n\npublic final aspect ProfilingAspect {\n\n\tpublic static int AbstractFGNode.nodeCount \u003d 0;  // CAUSE\n\n\tprivate pointcut excludingAspect() : !within(ProfilingAspect);\n\n\tprivate pointcut nodeCreation() : initialization(AbstractFGNode.new(..));\n\n\tafter() : nodeCreation() {\n\t\tAbstractFGNode.nodeCount++;\n\t};\n\t\n\tprivate pointcut FAanalyze() : (call(void FA.analyze(..))) \u0026\u0026 excludingAspect();\n\n\tvoid around() : FAanalyze() {\n\t\tproceed();\n\t\tSystem.out.println(AbstractFGNode.nodeCount + \" number of nodes were created.\"); // EFFECT\n\t};\n}\n\n\n\nException\n---------\nCaused by: java.lang.NoSuchFieldError: nodeCount\n        at edu.ksu.cis.indus.staticanalyses.flow.ProfilingAspect.ajc$inlineAccessFieldGet$edu_ksu_cis_indus_staticanalyses_flow_ProfilingAspect$edu_ksu_cis_indus_staticanalyses_flow_AbstractFGNode$nodeCount(ProfilingAspect.aj:1)\n        at edu.ksu.cis.indus.staticanalyses.flow.ProfilingAspect.ajc$around$edu_ksu_cis_indus_staticanalyses_flow_ProfilingAspect$2$5847d8f2(ProfilingAspect.aj:32)\n        at edu.ksu.cis.indus.staticanalyses.flow.AbstractAnalyzer.analyze(AbstractAnalyzer.java:111)\n        at edu.ksu.cis.indus.staticanalyses.dependency.DependencyXMLizerCLI.analyze_aroundBody0(DependencyXMLizerCLI.java:424)",
    "I am trying to recreate this but I dont seem to be able to.  Are you able to give me a cut down variant of the ITD\u0027d class?\n\nthis works fine for me:\n---8\u003c----------\npackage a.b.c;\n\n\npublic final aspect ProfilingAspect {\n\n  static int AbstractFGNode.nodeCount \u003d 0;  // CAUSE\n\n  private pointcut excludingAspect() : !within(ProfilingAspect);\n\n  private pointcut nodeCreation() : initialization(AbstractFGNode.new(..));\n\n  after() : nodeCreation() {\n    AbstractFGNode.nodeCount++;\n  };\n\n  public static void m() {\n    System.out.println(AbstractFGNode.nodeCount + \n      \" number of nodes were created.\"); // EFFECT\n  }\n\n  public static void main(String[] argv) {\n    new Foo();\n    m();\n  }\n}\n\nabstract class AbstractFGNode {}\n\nclass Foo extends AbstractFGNode {}\n---8\u003c----------\n",
    "If it would be easier, then you can the actual ITD\u0027d classes available in binary form (in jar files) from the Indus project (http://indus.projects.cis.ksu.edu)."
  ],
  "commentCreationDates": [
    "2006-07-03T00:23:54+02:00",
    "2006-07-04T11:40:07+02:00",
    "2006-07-07T05:15:26+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "nodeCount",
      "elements": [
        {
          "method": "edu.ksu.cis.indus.staticanalyses.flow.ProfilingAspect.ajc$inlineAccessFieldGet$edu_ksu_cis_indus_staticanalyses_flow_ProfilingAspect$edu_ksu_cis_indus_staticanalyses_flow_AbstractFGNode$nodeCount",
          "source": "ProfilingAspect.aj:1"
        },
        {
          "method": "edu.ksu.cis.indus.staticanalyses.flow.ProfilingAspect.ajc$around$edu_ksu_cis_indus_staticanalyses_flow_ProfilingAspect$2$5847d8f2",
          "source": "ProfilingAspect.aj:32"
        },
        {
          "method": "edu.ksu.cis.indus.staticanalyses.flow.AbstractAnalyzer.analyze",
          "source": "AbstractAnalyzer.java:111"
        },
        {
          "method": "edu.ksu.cis.indus.staticanalyses.dependency.DependencyXMLizerCLI.analyze_aroundBody0",
          "source": "DependencyXMLizerCLI.java:424"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "149419",
      "date": "2006-07-03T00:23:54+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "149419",
  "bugId": "149419",
  "date": "2006-07-03T00:23:54+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}