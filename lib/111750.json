{
  "comments": [
    "When weaving the JDom sources with the AspectJ5 M3 compiler I get an error. The\naspect it crashes on is:\n\n    pointcut classes() : !within(nl.uu.tracing.*);\n    pointcut execmethods(): classes() \u0026\u0026 call(* *(..)) \u0026\u0026 !within(AbstractTrace);\n    after() returning(Object a): classes() \u0026\u0026 execmethods() {\n    \tdoTraceExit(a, thisJoinPoint, true);\n    }\n\nThe java code it crashes on, is:\n\n\tprivate void dump(List list) {\n\t\tSystem.out.println(\"---\");\n\t\tIterator iter \u003d list.iterator();\n\t\twhile(iter.hasNext()) {\n\t\t\tSystem.out.println(\"\u003e \" + iter.next());\n\t\t}\n\t}\n\nThe strange thing is that the compiler complains about a generic Type variable,\nwhile the source is plain java 1.4 without any generics. It compilers perfectly\nok with the latest aspectj 1.2.1 compiler.\n\nHere is (part of) the stacktrace. The trace is enormous, i think it starts with\na few 100 lines before this trace:\n\n[iajc]   private void dump(java.util.List)   \norg.aspectj.weaver.MethodDeclarationLineNumber: 1106:43197\n     [iajc] :\n     [iajc]     method-execution(void\norg.jdom.test.cases.TestFilterList.dump(java.util.List))\n     [iajc]     |               GETSTATIC java.lang.System.out\nLjava/io/PrintStream;   (line 1107)\n     [iajc]     |               LDC_W \"---\"\n     [iajc]     | method-call(void java.io.PrintStream.println(java.lang.String))\n     [iajc]     | |             INVOKEVIRTUAL java.io.PrintStream.println\n(Ljava/lang/String;)V\n     [iajc]     | method-call(void java.io.PrintStream.println(java.lang.String))\n     [iajc]     |               ALOAD_1     // java.util.List list   (line 1108)\n    [iajc]     | method-call(java.util.Iterator java.util.List.iterator())\n     [iajc]     | |             INVOKEINTERFACE java.util.List.iterator\n()Ljava/util/Iterator;\n     [iajc]     | method-call(java.util.Iterator java.util.List.iterator())\n     [iajc]     |               ASTORE_2\n     [iajc]     |               GOTO L1   (line 1109)\n     [iajc]     |           L0: GETSTATIC java.lang.System.out\nLjava/io/PrintStream;   (line 1110)\n     [iajc]     |               NEW java.lang.StringBuilder\n     [iajc]     |               DUP\n     [iajc]     |               LDC_W \"\u003e \"\n     [iajc]     | constructor-call(void\njava.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n     [iajc]     | |             INVOKESPECIAL java.lang.StringBuilder.\u003cinit\u003e\n(Ljava/lang/String;)V\n     [iajc]     | constructor-call(void\njava.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n     [iajc]     |               ALOAD_2     // java.util.Iterator iter\n     [iajc]     | method-call(java.lang.Object java.util.Iterator.next())\n     [iajc]     | |             INVOKEINTERFACE java.util.Iterator.next\n()Ljava/lang/Object;\n     [iajc]     | method-call(java.lang.Object java.util.Iterator.next())\n     [iajc]     | method-call(java.lang.StringBuilder\njava.lang.StringBuilder.append(java.lang.Object))\n     [iajc]     | |             INVOKEVIRTUAL java.lang.StringBuilder.append\n(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n     [iajc]     | method-call(java.lang.StringBuilder\njava.lang.StringBuilder.append(java.lang.Object))\n     [iajc]     | method-call(java.lang.String java.lang.StringBuilder.toString())\n     [iajc]     | |             INVOKEVIRTUAL java.lang.StringBuilder.toString\n()Ljava/lang/String;\n     [iajc]     | method-call(java.lang.String java.lang.StringBuilder.toString())\n     [iajc]     | method-call(void java.io.PrintStream.println(java.lang.String))\n     [iajc]     | |             INVOKEVIRTUAL java.io.PrintStream.println\n(Ljava/lang/String;)V\n     [iajc]     | method-call(void java.io.PrintStream.println(java.lang.String))\n     [iajc]     |           L1: ALOAD_2     // java.util.Iterator iter   (line 1109)\n     [iajc]     | method-call(boolean java.util.Iterator.hasNext())\n     [iajc]     | |             INVOKEINTERFACE java.util.Iterator.hasNext ()Z\n     [iajc]     | method-call(boolean java.util.Iterator.hasNext())\n     [iajc]     |               IFNE L0\n     [iajc]     |               RETURN   (line 1112)\n     [iajc]     method-execution(void\norg.jdom.test.cases.TestFilterList.dump(java.util.List))\n     [iajc]   end private void dump(java.util.List)\n\n     [iajc] end public final class org.jdom.test.cases.TestFilterList\n     [iajc] org.aspectj.apache.bcel.classfile.ClassFormatException: Invalid\nmethod signature: TT;\n     [iajc]     at\norg.aspectj.apache.bcel.classfile.Utility.typeOfSignature(Utility.java:1293)\n     [iajc]     at\norg.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:166)\n     [iajc]     at\norg.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:174)\n     [iajc]     at org.aspectj.apache.bcel.generic.Type.getType(Type.java:155)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWorld.makeBcelType(BcelWorld.java:197)\n     [iajc]     at org.aspectj.weaver.bcel.BcelVar.createStore(BcelVar.java:47)\n     [iajc]     at org.aspectj.weaver.bcel.BcelVar.appendStore(BcelVar.java:51)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelShadow.weaveAfterReturning(BcelShadow.java:1602)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:173)\n     [iajc]     at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:497)\n     [iajc]     at org.aspectj.weaver.Shadow.implement(Shadow.java:375)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1754)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:393)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:96)\n     [iajc]     at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1372)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1337)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1114)\n     [iajc]     at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1001)\n     [iajc]     at\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:286)\n     [iajc]     at\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:165)\n     [iajc]     at\norg.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\n     [iajc]     at\norg.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\n     [iajc]     at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:728)\n     [iajc]     at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:206)\n     [iajc]     at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:140)\n     [iajc]     at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112)\n     [iajc]     at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)\n     [iajc]     at org.aspectj.tools.ajc.Main.run(Main.java:324)\n     [iajc]     at org.aspectj.tools.ajc.Main.runMain(Main.java:238)\n     [iajc]     at\norg.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1194)\n     [iajc]     at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:985)\n     [iajc]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n     [iajc]     at org.apache.tools.ant.Task.perform(Task.java:364)\n     [iajc]     at\norg.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:64)\n     [iajc]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n     [iajc]     at org.apache.tools.ant.Task.perform(Task.java:364)\n     [iajc]     at\norg.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:377)\n     [iajc]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n     [iajc]     at org.apache.tools.ant.Task.perform(Task.java:364)\n     [iajc]     at org.apache.tools.ant.Target.execute(Target.java:341)\n     [iajc]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n     [iajc]     at org.apache.tools.ant.Project.executeTarget(Project.java:1214)\n    [iajc]     at org.apache.tools.ant.Project.executeTargets(Project.java:1062)\n     [iajc]     at org.apache.tools.ant.Main.runBuild(Main.java:673)\n     [iajc]     at org.apache.tools.ant.Main.startAnt(Main.java:188)\n     [iajc]     at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196)\n     [iajc]     at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55)\n     [iajc] ABORT\n     [iajc]\n     [iajc] Exception thrown from AspectJ 1.5.0_M3a",
    "Although your source is plain 1.4 - are you compiling it on top of a 1.5 VM?  If\nso, that would explain the TT; since the underlying types you are using (List\nfor example) are generic.\n\ndefinetly needs fixing for 1.5.0",
    "Yep, I\u0027m compiling with Java 1.5 compiler (1.5.0_01 i think). It doesn\u0027t matter\nif i set source attribute on \"1.4\" or \"1.5\".\n\nAnt call is:\n\n\u003ciajc debug\u003d\"true\"\n       outjar\u003d\"${tests.jar}\"\n            sourcerootsref\u003d\"weave.sources\" \n            verbose\u003d\"false\"\n            source\u003d\"1.5\" \n            sourceRootCopyFilter\u003d\"**/CVS/*,**/*.java\"\n    \t\t\u003e\n        \u003cclasspath location\u003d\"${instr.build}\" /\u003e \n        \u003cclasspath refid\u003d\"classpath.aspectj\" /\u003e \n        \u003cclasspath refid\u003d\"classpath.main\" /\u003e \n        \u003cclasspath refid\u003d\"@{classpathref}\" /\u003e \n      \u003c/iajc\u003e\n\nThe stack trace is enormous, so the problem might be somewhere else (the posted\npart is just the end)\n",
    "Please can you retry this on a recent dev build?  I see it was initially\nhappening on M3a and we\u0027ve done a ton of generics modifications since then. \nAlthough your program is not using 1.5 features, the method:\n\nprivate void dump(java.util.List)   \n\nis simply using the generic type List\u003cT\u003e in its raw form as it is generic in the\nunderlying 1.5 class libraries.  If you run everything on a 1.4 VM the problem\nis likely to disappear - but I\u0027d still like to fix it on 1.5 if you can still\nrecreate it.\n\n(Compiling with -1.4 on a 1.5 VM doesn\u0027t make any difference as the compiler\nwill still see the generic type List from rt.jar.)",
    "updating target to RC1 for consistency...",
    "please can you retry on the latest dev build? or I\u0027ll have to close as\nWORKSFORME :(  I\u0027m keen to resolve all generics issues we can for RC1. thanks.",
    "Sorry for the late reply. I\u0027ve checked it again and I cannot reproduce it again.\nSo I assume it is indeed fixed.",
    "thanks for retrying it!  I\u0027ll close this as already fixed - please reopen if it\nhappens again."
  ],
  "commentCreationDates": [
    "2005-10-06T12:53:17+02:00",
    "2005-10-06T13:09:10+02:00",
    "2005-10-06T13:23:35+02:00",
    "2005-10-28T09:35:33+02:00",
    "2005-10-31T08:45:56+01:00",
    "2005-11-02T10:59:36+01:00",
    "2005-11-02T15:37:53+01:00",
    "2005-11-02T15:42:54+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.apache.bcel.classfile.ClassFormatException",
      "message": "Invalid method signature: TT;      [iajc]",
      "elements": [
        {
          "method": "org.aspectj.apache.bcel.classfile.Utility.typeOfSignature",
          "source": "Utility.java:1293"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "111750",
      "date": "2005-10-06T12:53:17+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "111750",
  "bugId": "111750",
  "date": "2005-10-06T12:53:17+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}