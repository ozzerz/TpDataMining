{
  "comments": [
    "Intermitently, the \"ConditionBreakpointTests.testSimpleConditionalBreakpoint()\" \ntest fails. I noticed that this appears in the test .logs. It indicates that \nthe compilation of the conditional BP failed:\n\n     [echo] Running org.eclipse.jdt.debug.tests.AutomatedSuite\n     [java] java.lang.IllegalStateException: zip file closed\n     [java] \tat java.util.zip.ZipFile$2.hasMoreElements(ZipFile.java:301)\n     [java] \tat \norg.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation.autoDetectRoot\n(ArchiveSourceLocation.java:179)\n     [java] \tat \norg.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation.findSourceElement\n(ArchiveSourceLocation.java:149)\n     [java] \tat \norg.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getSourceElement\n(JavaSourceLocator.java:256)\n     [java] \tat \norg.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.getJavaProjec\nt(JavaLineBreakpoint.java:466)\n     [java] \tat \norg.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.handleConditi\nonalBreakpointEvent(JavaLineBreakpoint.java:434)\n     [java] \tat \norg.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.handleBreakpo\nintEvent(JavaLineBreakpoint.java:359)\n     [java] \tat \norg.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleEvent\n(JavaBreakpoint.java:261)\n     [java] \tat org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch\n(EventDispatcher.java:170)\n     [java] \tat org.eclipse.jdt.internal.debug.core.EventDispatcher.run\n(EventDispatcher.java:211)\n     [java] \tat java.lang.Thread.run(Thread.java:536)",
    "Since we close source archives when a lanuch terminates or when launches are \nremoved (in the JDI event thread), it is possible for the cache to be \nbeing \"closed \u0026 cleared\" while another thread retrives an archive from the \ncache. We need to synchronize access to the cache.",
    "Fixed. I added synchronization to ArchiveSourceLocation such that the \nclosing/clearing of zip files is sync\u0027d with retrieving a zip file. As well, I \nadded synchronization to the iteration of a zip file\u0027s entries (so a file \ncannot be closed while traversing the entries).\n\nIn JavaLineBreakpoint I added a check for a null Java project context when \ncompiling a conditional breakpoint.",
    "Please verify, Luc.",
    "*** Bug 40040 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2003-05-05T16:46:33+02:00",
    "2003-05-05T16:52:21+02:00",
    "2003-05-05T17:37:14+02:00",
    "2003-05-05T17:37:30+02:00",
    "2003-07-24T18:56:47+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "zip file closed      [java]",
      "elements": [
        {
          "method": "java.util.zip.ZipFile$2.hasMoreElements",
          "source": "ZipFile.java:301"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "37216",
      "date": "2003-05-05T16:46:33+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "37216",
  "bugId": "37216",
  "date": "2003-05-05T16:46:33+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}