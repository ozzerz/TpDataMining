{
  "comments": [
    "build RC2.\n\nI tried running Eclipse from the command-line using the following:\njava -cp startup.jar org.eclipse.core.launcher.Main -noupdate -consoleLog -data\nworkspace -debug -vmargs -Xmx512M\n\n\nI got the following NPE in my console and Eclipse wouldn\u0027t start.\n\njava.lang.NullPointerException\n at\norg.eclipse.core.runtime.adaptor.EclipseStarter.processCommandLine(EclipseStarter.java:566)\n at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:206)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:126)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n        at org.eclipse.core.launcher.Main.run(Main.java:638)\n        at org.eclipse.core.launcher.Main.main(Main.java:622)",
    "This works ok if I specify a -vm arg and don\u0027t use the value set in my Windows\nenvironment variables.",
    "I would not expect this to cause a NPE, but ...\n\nIs the -vmargs option valid when launching without the eclispe exe?  I mean we \nare already executing java code by the time we read these options is there \nanything we could do with these options?  When you use the -vm arg does it do \nwhat you expect?",
    "Hmm....good point. Not sure if the -Xmx takes effect...is there a way to tell?\n\nAdding the -vm when I\u0027m calling java directly is kinda silly. Removing the\n-vmargs (and just putting -X) results in ok startup.\n\njava -cp startup.jar org.eclipse.core.launcher.Main -noupdate -consoleLog -data\nworkspace -debug -Xmx512M",
    "suspect this is an artifact of the way that Main processes the command line.  \nWhen it sees -vmargs it just nulls out the slots.  This is confusing the \nprocessing of the command line in EclipseStarter.  Must be very careful about \nchanging that function.  It is the way it is for a reason (not that I remember \nthe reason exactly...)\n\nmarking as RC3",
    "Do you feel like taking care of this one Rafael?\nIf not pass it around.",
    "Created an attachment (id\u003d12188)\npatch for org.eclipse.platform\n",
    "If no config args were specified, we were returning the command line args as\nthey were, without accounting for vmargs. \n\nJeff/DJ, please approve/review/release (I don\u0027t have rights to do so).",
    "Jeff, can you please review? You are more familiar with the code and I don\u0027t\nhave the rights to version the project after releasing. Thanks.",
    "+1 from me. I will find someone to be a bug buddy and then commit",
    "this was committed a couple builds ago."
  ],
  "commentCreationDates": [
    "2004-06-15T16:05:35+02:00",
    "2004-06-15T16:11:36+02:00",
    "2004-06-15T16:25:45+02:00",
    "2004-06-15T16:33:59+02:00",
    "2004-06-15T16:35:50+02:00",
    "2004-06-15T20:55:03+02:00",
    "2004-06-15T22:25:40+02:00",
    "2004-06-15T22:28:37+02:00",
    "2004-06-16T15:49:53+02:00",
    "2004-06-16T18:52:01+02:00",
    "2004-06-18T01:59:13+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.processCommandLine",
          "source": "EclipseStarter.java:566"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.startup",
          "source": "EclipseStarter.java:206"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:126"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:638"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:622"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "67230",
      "date": "2004-06-15T16:05:35+02:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "67230",
  "bugId": "67230",
  "date": "2004-06-15T16:05:35+02:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}