{
  "comments": [
    "Got this error when I startup my eclipse:\nI had a similar startup error with Geronimo.\nI think the root of the problem is when one calls , I didn\u0027t look at your source, the lock() on FileChannel, the call translates to \n lock(0L, Long.max_value,false) and in Linux , the Long.max_value is too large.\nCan you change it to lock(0L, some_reasonable_figure, false)?\nThanks,\nyung siu wai\n\n!SESSION 2006-01-01 19:18:58.605 -----------------------------------------------\neclipse.buildId\u003dM20050929-0840\njava.version\u003d1.5.0_06\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86, WS\u003dgtk, NL\u003den_US\nCommand-line arguments:  -os linux -ws gtk -arch x86\n\n!ENTRY org.eclipse.osgi 2006-01-01 19:18:59.839\n!MESSAGE Error reading configuration: An error occurred while locking file \"/usr/local/share/eclipse/configuration/org.eclipse.osgi/.manager/.fileTableLock\": \"Value too large for defined data type\". A common reason is that the file system or Runtime Environment does not support file locking for that location. Please choose a different location, or disable file locking passing \"-Dosgi.locking\u003dnone\" as a VM argument.\n!STACK 0\njava.io.IOException: An error occurred while locking file \"/usr/local/share/eclipse/configuration/org.eclipse.osgi/.manager/.fileTableLock\": \"Value too large for defined data type\". A common reason is that the file system or Runtime Environment does not support file locking for that location. Please choose a different location, or disable file locking passing \"-Dosgi.locking\u003dnone\" as a VM argument.\n\tat org.eclipse.core.runtime.internal.adaptor.Locker_JavaNio.lock(Locker_JavaNio.java:46)\n\tat org.eclipse.core.runtime.adaptor.FileManager.lock(FileManager.java:361)\n\tat org.eclipse.core.runtime.adaptor.FileManager.open(FileManager.java:658)\n\tat org.eclipse.core.runtime.adaptor.EclipseAdaptor.initFileManager(EclipseAdaptor.java:818)\n\tat org.eclipse.core.runtime.adaptor.EclipseAdaptor.initialize(EclipseAdaptor.java:139)\n\tat org.eclipse.osgi.framework.internal.core.Framework.initialize(Framework.java:128)\n\tat org.eclipse.osgi.framework.internal.core.Framework.\u003cinit\u003e(Framework.java:106)\n\tat org.eclipse.osgi.framework.internal.core.OSGi.createFramework(OSGi.java:90)\n\tat org.eclipse.osgi.framework.internal.core.OSGi.\u003cinit\u003e(OSGi.java:31)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:272)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:159)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)",
    "import java.io.*;\nimport java.nio.channels.*;\npublic class test {\n\t    public static void main(String[] args) {\n\t\t    \t//FileLock fl \u003d null;\n\ttry {\n\t    FileOutputStream fos \u003d new FileOutputStream(\"testFile.tmp\");\n\t    FileChannel ch \u003d fos.getChannel();\n\t    fos.write(new byte[128]);\n\t    System.out.println(Long.MAX_VALUE);\n\t    FileLock fl \u003d ch.lock(0L,20*1024,false);//.lock();\n\t } catch (IOException e) {\n\t   \t    System.out.println(\"Unexpected exception: \"+e);\n\t             e.printStackTrace();\n\t    System.exit(0);\n         }\n        System.out.println(\"PASSED.\");\n    }\n}",
    "Are you saying that calling FileChannel#lock() on you system fails? but passing a smaller number works?  Isn\u0027t that a VM or a filesystem issue? What filesystem are you using?",
    "I found an interesting exchange you had with geronimo folks here \n\nhttp://forge.objectweb.org/tracker/index.php?func\u003ddetail\u0026aid\u003d304372\u0026group_id\u003d92\u0026atid\u003d100092\n\nJust posting that discussion here for some context.  I have my reservations on changing the code in Eclipse also as I do not see why the standard FileChannel#lock() method should fail unless you have a hardware problem or a bug in your VM/OS.  This call has worked for us over many different OSes and VMs.\n",
    "I am using ext3. And VM is Sun\u0027s 5.0. \nIt dawn on me as one debian user runs my test code ok with kernel 2.6.\nSo I upgraded my kernel from 2.2 to 2.4 and rerun my test code.\nThe error is gone.\nSo the problem is related to kernel 2.2\nThanks,\nWai Yung.",
    "Just for clarity, was this a problem actually fixed here or was the bug invalid?  Please update the resolution if needed.",
    "We did not fix anything.  Reopening to update resolution.",
    "Marking as worksforme, it appears to be a bug in the OS version."
  ],
  "commentCreationDates": [
    "2006-01-01T11:55:25+01:00",
    "2006-01-01T11:58:06+01:00",
    "2006-01-06T21:23:14+01:00",
    "2006-01-06T21:35:15+01:00",
    "2006-01-08T16:02:29+01:00",
    "2006-01-12T02:44:43+01:00",
    "2006-01-12T14:10:45+01:00",
    "2006-01-12T14:11:49+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "An error occurred while locking file \"/usr/local/share/eclipse/configuration/org.eclipse.osgi/.manager/.fileTableLock\": \"Value too large for defined data type\". A common reason is that the file system or Runtime Environment does not support file locking for that location. Please choose a different location, or disable file locking passing \"-Dosgi.locking\u003dnone\" as a VM argument.",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.Locker_JavaNio.lock",
          "source": "Locker_JavaNio.java:46"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.FileManager.lock",
          "source": "FileManager.java:361"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.FileManager.open",
          "source": "FileManager.java:658"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseAdaptor.initFileManager",
          "source": "EclipseAdaptor.java:818"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseAdaptor.initialize",
          "source": "EclipseAdaptor.java:139"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.initialize",
          "source": "Framework.java:128"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.\u003cinit\u003e",
          "source": "Framework.java:106"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.OSGi.createFramework",
          "source": "OSGi.java:90"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.OSGi.\u003cinit\u003e",
          "source": "OSGi.java:31"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.startup",
          "source": "EclipseStarter.java:272"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:159"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "122432",
      "date": "2006-01-01T11:55:25+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "critical"
    }
  ],
  "groupId": "122432",
  "bugId": "122432",
  "date": "2006-01-01T11:55:25+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "critical"
}