{
  "comments": [
    "We are running junit testcases through maven1.\n\nThe Builder class startes up the Avalon Fortress\ncontainer. Once that is weaved we get a java.io.IOException\nwhen trying to read the configuration file via\nClassLoader.getResourceAsStream.\n\nRemoving the pointcut on that very class seems solve the\nproblem. Though it\u0027s not really understanable why.\n\nAttached you find\n\n o weaved Builder.class\n o non-weaved Builder.class\n o source code Builder.java\n\nand here is the stacktrace\n\njava.io.IOException: Bad file descriptor\n        at java.io.FileInputStream.read(Native Method)\n        at\norg.apache.xerces.impl.XMLEntityManager$RewindableInputStream.read(Unknown Source)\n        at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown\nSource)\n        at org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown\nSource)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at\norg.apache.avalon.framework.configuration.DefaultConfigurationBuilder.build(DefaultConfigurationBuilder.java:254)\n        at\norg.apache.avalon.framework.configuration.DefaultConfigurationBuilder.build(DefaultConfigurationBuilder.java:202)\n        at container.Builder.createContainer_aroundBody0(Builder.java:28)\n        at container.Builder.createContainer_aroundBody1$advice(Builder.java:191)\n        at container.Builder.createContainer(Builder.java)\n        at\ncom.managesoft.distribution.AbstractComponentTestCase.setUpContainer(AbstractComponentTestCase.java:80)\n        at\ncom.managesoft.distribution.AbstractComponentTestCase.setUp(AbstractComponentTestCase.java:128)\n        at junit.framework.TestCase.runBare(TestCase.java:125)",
    "Created an attachment (id\u003d26187)\nBuilder.java\n",
    "Created an attachment (id\u003d26188)\nweaved Builder.class\n",
    "Created an attachment (id\u003d26189)\nnot-weaved Builder.class\n",
    "Thanks for reporting this bug, but I\u0027m not sure I understand why this is a bug\nwith AspectJ.  I assume that without the pointcut (i.e., without the around\nadvice) the file-load is not attempted (and that functionality is lost), so it\nmakes sense that it wouldn\u0027t tickle this problem.  There\u0027s an aspect (not\nprovided in source?) which uses around advice to build something, and somewhere\nin the bowels the file descriptor is bad.  I don\u0027t know from this where the file\ndescriptor comes from, etc.  It sounds like the aspect and the woven class is\nloading correctly, so the the AspectJ runtime classes are available.  One option\nis to enable or disable around advice inlining and see if that makes a\ndifference.   Could you isolate this a bit more?  \n\nAlso, if anything it\u0027s a compiler bug.",
    "Created an attachment (id\u003d26221)\naspect\n",
    "Sorry for not being clear.\n\nThe file load is always being attempted but only without the aspect it succeeds.\nWith the aspect I get the exeception. For now I am using the commented out\n\"within\" expression so there are no pointcuts for that very class to make it\nwork in my app. (In all the other classes the aspect seems to work just fine!)\nBut to me this sounds really strange and I would like to track that down. (It\u0027s\njust the container startup!?)\n\nJust tell me what information you need.",
    "Wes, this bug report came out of a discussion on the users list that you might\nhave missed whilst you were out. The aspect was a simple (harmless looking)\nlogging aspect, and adding !within(Builder) to the pointcuts in it stopped this\nbug from happening. Although I can\u0027t imagine how at the moment, it seems highly\nprobably that something the weaver has done is causing this problem."
  ],
  "commentCreationDates": [
    "2005-08-17T13:01:03+02:00",
    "2005-08-17T13:02:08+02:00",
    "2005-08-17T13:03:02+02:00",
    "2005-08-17T13:03:39+02:00",
    "2005-08-18T05:45:26+02:00",
    "2005-08-18T10:02:22+02:00",
    "2005-08-18T10:14:03+02:00",
    "2005-08-18T11:52:51+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "Bad file descriptor",
      "elements": [
        {
          "method": "java.io.FileInputStream.read",
          "source": "Native Method"
        },
        {
          "method": "org.apache.xerces.impl.XMLEntityManager$RewindableInputStream.read",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLVersionDetector.determineDocVersion",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.DTDConfiguration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XMLParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.avalon.framework.configuration.DefaultConfigurationBuilder.build",
          "source": "DefaultConfigurationBuilder.java:254"
        },
        {
          "method": "org.apache.avalon.framework.configuration.DefaultConfigurationBuilder.build",
          "source": "DefaultConfigurationBuilder.java:202"
        },
        {
          "method": "container.Builder.createContainer_aroundBody0",
          "source": "Builder.java:28"
        },
        {
          "method": "container.Builder.createContainer_aroundBody1$advice",
          "source": "Builder.java:191"
        },
        {
          "method": "container.Builder.createContainer",
          "source": "Builder.java"
        },
        {
          "method": "com.managesoft.distribution.AbstractComponentTestCase.setUpContainer",
          "source": "AbstractComponentTestCase.java:80"
        },
        {
          "method": "com.managesoft.distribution.AbstractComponentTestCase.setUp",
          "source": "AbstractComponentTestCase.java:128"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:125"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "107194",
      "date": "2005-08-17T13:01:03+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "107194",
  "bugId": "107194",
  "date": "2005-08-17T13:01:03+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}