{
  "comments": [
    "should try to reproduce and isolate a test case\n\njava.lang.reflect.InvocationTargetException: java.lang.ClassCastException: \norg.eclipse.jdt.internal.compiler.lookup.ArrayBinding\n\tat \norg.eclipse.jdt.core.dom.DefaultBindingResolver.returnBindingForQualifiedNamePar\nt(DefaultBindingResolver.java:738)\n\tat \norg.eclipse.jdt.core.dom.DefaultBindingResolver.internalResolveNameForSimpleName\n(DefaultBindingResolver.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName\n(DefaultBindingResolver.java(Compiled Code))\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder$TempOccu\nrrenceAnalyzer.visitNameReference(TempOccurrenceFinder.java(Compiled Code))\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder$TempOccu\nrrenceAnalyzer.visitNameReference(TempOccurrenceFinder.java(Compiled Code))\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder$TempOccu\nrrenceAnalyzer.visit(TempOccurrenceFinder.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java(Compiled \nCode))\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled \nCode))\n\tat org.eclipse.jdt.core.dom.QualifiedName.accept0(QualifiedName.java:88)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled \nCode))\n\tat org.eclipse.jdt.core.dom.SimpleType.accept0(SimpleType.java:73)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled \nCode))\n\tat org.eclipse.jdt.core.dom.ArrayType.accept0(ArrayType.java:76)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled \nCode))\n\tat org.eclipse.jdt.core.dom.FieldDeclaration.accept0\n(FieldDeclaration.java:119)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java\n(Compiled Code))\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0\n(TypeDeclaration.java:160)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java\n(Compiled Code))\n\tat org.eclipse.jdt.core.dom.CompilationUnit.accept0\n(CompilationUnit.java:145)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder.findTemp\nOccurrenceOffsets(TempOccurrenceFinder.java:27)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTempRefactoring.getAllR\nenameEdits(RenameTempRefactoring.java:201)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTempRefactoring.analyze\nAST(RenameTempRefactoring.java:176)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTempRefactoring.checkIn\nput(RenameTempRefactoring.java:162)\n\tat org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run\n(CheckConditionsOperation.java:58)\n\tat org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run\n(CreateChangeOperation.java:93)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)",
    "before i forget: it happened in the editor pref page (create...Page methods)",
    "ok, found it:\npublic class A {\n\tBar.B[] field\u003d new Bar.B[]{\n\t\tnew Bar.B()\n\t};\n\tvoid f(){\n\t\tint temp;\n\t}\n}\n\nclass Bar{\n\tstatic class B{}\n}\n\nselecting the temp, invoking \u0027rename element\u0027 and pressing next results in the \nsame CCE\nseems like jcore binding problem",
    "The problem came from the QualifiedTypeReference. I need to take the \nbinding.leafComponentType() instead of the binding only. Regression tests added.\nFixed and \nreleased.",
    "Verified in F2.",
    "Verified."
  ],
  "commentCreationDates": [
    "2002-05-27T15:58:21+02:00",
    "2002-05-28T11:18:09+02:00",
    "2002-05-28T14:09:56+02:00",
    "2002-05-28T17:51:57+02:00",
    "2002-06-03T20:08:48+02:00",
    "2002-06-03T20:09:05+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.compiler.lookup.ArrayBinding",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.DefaultBindingResolver.returnBindingForQualifiedNamePart",
          "source": "DefaultBindingResolver.java:738"
        },
        {
          "method": "org.eclipse.jdt.core.dom.DefaultBindingResolver.internalResolveNameForSimpleName",
          "source": "DefaultBindingResolver.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName",
          "source": "DefaultBindingResolver.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder$TempOccurrenceAnalyzer.visitNameReference",
          "source": "TempOccurrenceFinder.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder$TempOccurrenceAnalyzer.visitNameReference",
          "source": "TempOccurrenceFinder.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder$TempOccurrenceAnalyzer.visit",
          "source": "TempOccurrenceFinder.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.SimpleName.accept0",
          "source": "SimpleName.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.QualifiedName.accept0",
          "source": "QualifiedName.java:88"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.SimpleType.accept0",
          "source": "SimpleType.java:73"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ArrayType.accept0",
          "source": "ArrayType.java:76"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.FieldDeclaration.accept0",
          "source": "FieldDeclaration.java:119"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:160"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:145"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceFinder.findTempOccurrenceOffsets",
          "source": "TempOccurrenceFinder.java:27"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTempRefactoring.getAllRenameEdits",
          "source": "RenameTempRefactoring.java:201"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTempRefactoring.analyzeAST",
          "source": "RenameTempRefactoring.java:176"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTempRefactoring.checkInput",
          "source": "RenameTempRefactoring.java:162"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:58"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:93"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "17922",
      "date": "2002-05-27T15:58:21+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "17922",
  "bugId": "17922",
  "date": "2002-05-27T15:58:21+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}