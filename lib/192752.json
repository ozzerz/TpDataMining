{
  "comments": [
    "Build ID: WTP 154\n\nSteps To Reproduce:\n1. Here is a ear file attached that when you import it into WTP causes IllegalArgumentExceptions\n\n\njava.lang.IllegalArgumentException: The \u0027no duplicates\u0027 constraint is violated\n\tat org.eclipse.emf.common.util.BasicEList.add(BasicEList.java:642)\n\tat org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.eSetOrAdd(ExtendedEcoreUtil.java:73)\n\tat org.eclipse.wst.common.internal.emf.resource.Translator.setMOFValue(Translator.java:605)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiPrimitiveFeature(EMF2DOMAdapterImpl.java:1720)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:1471)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature(EMF2DOMAdapterImpl.java:1692)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature(EMF2DOMAdapterImpl.java:1745)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:926)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:906)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:454)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:1478)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature(EMF2DOMAdapterImpl.java:1692)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature(EMF2DOMAdapterImpl.java:1745)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:926)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:906)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:454)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:1478)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature(EMF2DOMAdapterImpl.java:1692)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature(EMF2DOMAdapterImpl.java:1745)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:926)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:906)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:454)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:947)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:922)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:906)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad(EMF2DOMRenderer.java:62)\n\tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad(TranslatorResourceImpl.java:142)\n\tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad(CompatibilityXMIResourceImpl.java:173)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1094)\n\tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load(TranslatorResourceImpl.java:391)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:249)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad(ProjectResourceSetImpl.java:83)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:264)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:390)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n\tat org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource(WorkbenchResourceHelper.java:384)\n\tat org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource(EditModel.java:683)\n\tat org.eclipse.wst.common.componentcore.internal.ArtifactEditModel.getResource(ArtifactEditModel.java:174)\n\tat org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.getDeploymentDescriptorResource(WebArtifactEdit.java:348)\n\tat org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.getDeploymentDescriptorRoot(WebArtifactEdit.java:326)\n\tat org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.getWebApp(WebArtifactEdit.java:623)\n3.\n\n\n\n\nMore information:\nproblem happens because \n\nEMF2DOMAdapterImpl.updateMOFMultiPrimitiveFeature()  calls Translator.setMOFValue calls ExtendedEcoreUtil.eSetOrAdd and this method can throw exceptions if the list cannot contain duplicate elements. This can cause adopter components using this to blow up.\n\nFix is to test for \n\nfeature.isUnique \u0026\u0026 list.contains(value) and log an error\n\nFix is to check",
    "Created an attachment (id\u003d71367)\near file with a web module with invalid web.xml\n\n",
    "Created an attachment (id\u003d71368)\npatch which cheks for uniqueness and duplicate element.\n\n",
    "Created an attachment (id\u003d71369)\npatch which cheks for uniqueness and duplicate element.\n\n",
    "I have reviewed and tested this patch - If a non-unique element is found in any unique collection, the EMF2DOM renderer will stop parsing, and the document will remain incomplete.\n\nThis patch will not add the non-unique elements, will log an error, and will continue parsing normally.",
    "Hi Chuck\n\n      I verified that none of the validators XML, DTD, XSL can catch this as a error.\n\nIt might be because the dtd only describes http-method as #PCDATA there is nothing in it that says it should be unique.\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003c!DOCTYPE web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\" \"http://java.sun.com/dtd/web-app_2_3.dtd\"\u003e\n\u003cweb-app id\u003d\"WebApp_ID\"\u003e\n\t\u003cdisplay-name\u003ed2232323\u003c/display-name\u003e\n\t\u003cwelcome-file-list\u003e\n\t\t\u003cwelcome-file\u003eindex.html\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003eindex.htm\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003eindex.jsp\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003edefault.html\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003edefault.htm\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003edefault.jsp\u003c/welcome-file\u003e\n\t\u003c/welcome-file-list\u003e\n\t\u003csecurity-constraint\u003e\n\t\t\u003cdisplay-name\u003econs1\u003c/display-name\u003e\n\t\t\u003cweb-resource-collection\u003e\n\t\t\t\u003cweb-resource-name\u003eres1\u003c/web-resource-name\u003e\n\t\t\t\u003cdescription\u003edes1\u003c/description\u003e\n\t\t\t\u003curl-pattern\u003epat1\u003c/url-pattern\u003e\n\t\t\t\u003chttp-method\u003eGET\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003ePUT\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003eHEAD\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003eHEAD\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003ePOST\u003c/http-method\u003e\n\t\t\u003c/web-resource-collection\u003e\n\t\u003c/security-constraint\u003e\n\u003c/web-app\u003e\n\nI am tempted to think maybe the models should not be so strict.",
    "Created an attachment (id\u003d72901)\npatch which cheks for uniqueness and duplicate element. with index check\n\nI also fixed the case where if one of the elements has invalid content, null is returned and parsing breaks down. For example a file like this\n\nwhere \u003chttp-method\u003eblah1\u003c/http-method\u003e is invalid and its value is returned as null causing parsing to throw index out of bound exc.\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003c!DOCTYPE web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\" \"http://java.sun.com/dtd/web-app_2_3.dtd\"\u003e\n\u003cweb-app id\u003d\"WebApp_ID\"\u003e\n\t\u003cdisplay-name\u003ed2232323\u003c/display-name\u003e\n\t\u003cwelcome-file-list\u003e\n\t\t\u003cwelcome-file\u003eindex.html\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003eindex.htm\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003eindex.jsp\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003edefault.html\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003edefault.htm\u003c/welcome-file\u003e\n\t\t\u003cwelcome-file\u003edefault.jsp\u003c/welcome-file\u003e\n\t\u003c/welcome-file-list\u003e\n\t\u003csecurity-constraint\u003e\n\t\t\u003cdisplay-name\u003econs1\u003c/display-name\u003e\n\t\t\u003cweb-resource-collection\u003e\n\t\t\t\u003cweb-resource-name\u003eres1\u003c/web-resource-name\u003e\n\t\t\t\u003cdescription\u003edes1\u003c/description\u003e\n\t\t\t\u003curl-pattern\u003epat1\u003c/url-pattern\u003e\n\t\t\t\u003chttp-method\u003eGET\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003ePUT\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003eHEAD\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003eblah1\u003c/http-method\u003e\n\t\t\t\u003chttp-method\u003ePOST\u003c/http-method\u003e\n\t\t\u003c/web-resource-collection\u003e\n\t\u003c/security-constraint\u003e\n\u003c/web-app\u003e\n",
    "Created an attachment (id\u003d72902)\nwtp 2.0  patch which cheks for uniqueness and duplicate element. with index check\n\n",
    "(In reply to comment #5)\n\u003e Hi Chuck\n\n\u003e I am tempted to think maybe the models should not be so strict.\n\u003e \n\n(In reply to comment #6)\n\u003e I also fixed the case where if one of the elements has invalid content, null is\n\u003e returned and parsing breaks down.\n\u003e \nHave these comments and the latest patch reviewed by the component lead?\n",
    "Created an attachment (id\u003d73159)\nwtp 155 patch which checks for uniqueness/duplicate/invalid element \u0026 junit\n\nMade few more changes, this time we call exception handlers when attempt to add duplicate element is made to a unique list. Earlier patches were going in a loggin approach, which might break someone depending on the exception.\nIn WTP there are exception handlers that eat up the exception that way the file can be parsed. Outside of WTP if someone were using the adapter they will continue to see exceptions as the default handler just throws the exception. \n\nAlso added a couple of Junits for both the web.xml\u0027s I have described earlier.",
    "Created an attachment (id\u003d73161)\nwtp 20 patch which checks for uniqueness/duplicate/invalid element \u0026 junit  with \n\nadded a wtp 20 version of same patch with junit test case operating on 4 war files   (2 for each j2ee version 1.3 \u0026 1.4)",
    "Created an attachment (id\u003d73168)\nwtp 155 patch which checks for uniqueness/duplicate/invalid element \u0026 junit  with \n\nreplaced the wtp 155 patch with a new patch with 4 junit tests.",
    "I have reviewed this fix with Raj.  I approve - additional tests support this fix as well.....",
    "Tentatively dropped to 155 and 201",
    "Hey Raj, I just removed your tests for 2.0.1 because of a giant refactoring due to  bug 190496.  Please readd your 2.0.1 junits.",
    "checked in junit update for 2.0.1 and fixed corrupted binary junit data for 1.5.5 and 2.0.1"
  ],
  "commentCreationDates": [
    "2007-06-14T22:31:12+02:00",
    "2007-06-14T22:32:02+02:00",
    "2007-06-14T22:33:32+02:00",
    "2007-06-14T22:36:27+02:00",
    "2007-07-02T23:14:09+02:00",
    "2007-07-02T23:53:07+02:00",
    "2007-07-03T00:23:57+02:00",
    "2007-07-03T00:25:12+02:00",
    "2007-07-05T19:37:54+02:00",
    "2007-07-05T23:17:43+02:00",
    "2007-07-05T23:40:32+02:00",
    "2007-07-06T00:35:55+02:00",
    "2007-07-06T15:05:07+02:00",
    "2007-07-06T15:10:36+02:00",
    "2007-07-06T21:40:04+02:00",
    "2007-07-09T19:33:00+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "The \u0027no duplicates\u0027 constraint is violated",
      "elements": [
        {
          "method": "org.eclipse.emf.common.util.BasicEList.add",
          "source": "BasicEList.java:642"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.utilities.ExtendedEcoreUtil.eSetOrAdd",
          "source": "ExtendedEcoreUtil.java:73"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.Translator.setMOFValue",
          "source": "Translator.java:605"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiPrimitiveFeature",
          "source": "EMF2DOMAdapterImpl.java:1720"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1471"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1692"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1745"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:926"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:906"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:454"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1478"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1692"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1745"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:926"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:906"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:454"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1478"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1692"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1745"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:926"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:906"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:454"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature",
          "source": "EMF2DOMAdapterImpl.java:947"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:922"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:906"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad",
          "source": "EMF2DOMRenderer.java:62"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad",
          "source": "TranslatorResourceImpl.java:142"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad",
          "source": "CompatibilityXMIResourceImpl.java:173"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:1094"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load",
          "source": "TranslatorResourceImpl.java:391"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:249"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad",
          "source": "ProjectResourceSetImpl.java:83"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:264"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:390"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource",
          "source": "ProjectResourceSetImpl.java:262"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource",
          "source": "WorkbenchResourceHelper.java:384"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource",
          "source": "EditModel.java:683"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.ArtifactEditModel.getResource",
          "source": "ArtifactEditModel.java:174"
        },
        {
          "method": "org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.getDeploymentDescriptorResource",
          "source": "WebArtifactEdit.java:348"
        },
        {
          "method": "org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.getDeploymentDescriptorRoot",
          "source": "WebArtifactEdit.java:326"
        },
        {
          "method": "org.eclipse.jst.j2ee.web.componentcore.util.WebArtifactEdit.getWebApp",
          "source": "WebArtifactEdit.java:623"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "192752",
      "date": "2007-06-14T22:31:12+02:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "normal"
    }
  ],
  "groupId": "192752",
  "bugId": "192752",
  "date": "2007-06-14T22:31:12+02:00",
  "product": "Web Tools",
  "component": "wst.common",
  "severity": "normal"
}