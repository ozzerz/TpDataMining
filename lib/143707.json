{
  "comments": [
    "3.2RC5\n\n- run the snippet below, which sets the first column to be the sort column, and the second item\u0027s background to red\n- note that the red background does not appear in the second item\u0027s first column, as a result of the column\u0027s special \"I\u0027m being sorted\" background\n- it seems like a custom set background should override a Table-provided one\n\npublic static void main(String[] args) {\n\tDisplay display \u003d new Display();\n\tShell shell \u003d new Shell(display);\n\tshell.setBounds(10,10,200,200);\n\tTable table \u003d new Table(shell, SWT.NONE);\n\ttable.setBounds(10,10,150,150);\n\ttable.setHeaderVisible(true);\n\tTableColumn column2 \u003d new TableColumn(table, SWT.NONE);\n\tcolumn2.setWidth(50);\n\tnew TableColumn(table, SWT.NONE).setWidth(50);\n\tnew TableItem(table, SWT.NONE).setText(new String[] {\"one\", \"two\"});\n\tTableItem item2 \u003d new TableItem(table, SWT.NONE);\n\titem2.setText(new String[] {\"one\", \"two\"});\n\tnew TableItem(table, SWT.NONE).setText(new String[] {\"one\", \"two\"});\n\tshell.open();\n\titem2.setBackground(display.getSystemColor(SWT.COLOR_RED));\n\ttable.setSortColumn(column2);\n\ttable.setSortDirection(SWT.DOWN);\n\twhile (!shell.isDisposed()) {\n\t\tif (!display.readAndDispatch()) display.sleep();\n\t}\n\tdisplay.dispose();\n}",
    "Grant also posted a workaround for this bug in the mailing list. I think others might benefit as well so here is the copy of it:\n\n\u003cyourTable\u003e.addListener(SWT.EraseItem, new Listener() {\n    public void handleEvent(Event event) {}\n});\n",
    "Yikes ... I wouldn\u0027t rely on this work around.  I had a look at fixing this for 3.2 but ran out of time.  I am planning to look again for 3.3.",
    "The workaround actually does cause another problem: The JFace TableViewer.refresh() will throw a NullPointerException when a filter is in place for the table. \n\nThe stack trace is:\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:4539)\n\tat org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3784)\n\tat org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:1121)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3288)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1723)\n\tat org.eclipse.swt.widgets.Table.callWindowProc(Table.java:237)\n\tat org.eclipse.swt.widgets.Table.callWindowProc(Table.java:161)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3324)\n\tat org.eclipse.swt.widgets.Table.windowProc(Table.java:3895)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1723)\n\tat org.eclipse.swt.widgets.Table.callWindowProc(Table.java:237)\n\tat org.eclipse.swt.widgets.Table.callWindowProc(Table.java:161)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3324)\n\tat org.eclipse.swt.widgets.Table.windowProc(Table.java:3895)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1723)\n\tat org.eclipse.swt.widgets.Table.callWindowProc(Table.java:237)\n\tat org.eclipse.swt.widgets.Table.callWindowProc(Table.java:161)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3324)\n\tat org.eclipse.swt.widgets.Table.windowProc(Table.java:3895)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)\n\tat org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:2401)\n\tat org.eclipse.swt.widgets.Table.createItem(Table.java:955)\n\tat org.eclipse.swt.widgets.TableItem.\u003cinit\u003e(TableItem.java:112)\n\tat org.eclipse.swt.widgets.TableItem.\u003cinit\u003e(TableItem.java:106)\n\tat org.eclipse.jface.viewers.TableViewer.createItem(TableViewer.java:345)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefreshAll(TableViewer.java:904)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:800)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:789)\n\tat org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1324)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1261)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1322)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1281)\n\n\nI have backed out to use the previous SWT release. Will wait till this bug is fixed. Thanks guys!",
    "I\u0027m not sure I agree that this is a bug. My application sets the foreground and background colours of cells in a table and I\u0027m using the sort indicator feature. I think it would be quite confusing if the sort indication dissappered over many rows of the table.\n\nHow about using some kind of effect like fading the existing background colour? This might require the generation of a lot of colours I suppose. Alternatively some kind of border drawn around the sorted column might work.",
    "Still waiting this to be fixed.\n\nMeanwhile, I don\u0027t agree with the above comment. It feels very wierd visually when  the background color of a row get interrupted on the sorting column. \nIt should at least be a flag exposed through API so I can determine whether or not the sorting column should different colors or not when a table row\u0027s background color is set explicitly.",
    "Also an issue for Tree. See Bug 156817\n\n+1 for fixing both :o)\n\nBen",
    "I can see the advantange of both ways of doing it.\n\nIf I want a table with alternating row background colours on win32 (like GTK with setVisibleLines), it looks very bad if the sorted column colour _doesn\u0027t_ override the tableItem\u0027s colour, so the current method works fine. \n\n",
    "This prevents us using an alternating colour treatment on the problems and tasks views as well.",
    "You should not be using alternating color treatment as this is a platform specific feature.  For example, GTK, the Macintosh and Windows Vista support this already.",
    "Can this be given a higher priority? \n\nUsing a different background color is a common way for highlighting certain table/tree items to catch users\u0027 attention. And this bug so far don\u0027t have any workaround.",
    "Fixed \u003e 20070413"
  ],
  "commentCreationDates": [
    "2006-05-25T15:59:43+02:00",
    "2006-05-25T19:31:43+02:00",
    "2006-05-29T19:58:39+02:00",
    "2006-05-30T18:38:20+02:00",
    "2006-07-20T13:57:29+02:00",
    "2006-07-31T22:33:03+02:00",
    "2006-09-11T09:38:01+02:00",
    "2006-09-11T19:31:39+02:00",
    "2006-09-20T21:17:59+02:00",
    "2006-09-20T21:23:24+02:00",
    "2007-04-04T06:35:22+02:00",
    "2007-04-13T20:30:38+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.Table.wmNotifyChild",
          "source": "Table.java:4539"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_NOTIFY",
          "source": "Control.java:3784"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_NOTIFY",
          "source": "Composite.java:1121"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3288"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3965"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProc",
          "source": "OS.java:1723"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.callWindowProc",
          "source": "Table.java:237"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.callWindowProc",
          "source": "Table.java:161"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3324"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.windowProc",
          "source": "Table.java:3895"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3965"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProc",
          "source": "OS.java:1723"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.callWindowProc",
          "source": "Table.java:237"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.callWindowProc",
          "source": "Table.java:161"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3324"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.windowProc",
          "source": "Table.java:3895"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3965"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProc",
          "source": "OS.java:1723"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.callWindowProc",
          "source": "Table.java:237"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.callWindowProc",
          "source": "Table.java:161"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3324"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.windowProc",
          "source": "Table.java:3895"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3965"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.SendMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.SendMessage",
          "source": "OS.java:2401"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.createItem",
          "source": "Table.java:955"
        },
        {
          "method": "org.eclipse.swt.widgets.TableItem.\u003cinit\u003e",
          "source": "TableItem.java:112"
        },
        {
          "method": "org.eclipse.swt.widgets.TableItem.\u003cinit\u003e",
          "source": "TableItem.java:106"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.createItem",
          "source": "TableViewer.java:345"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefreshAll",
          "source": "TableViewer.java:904"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefresh",
          "source": "TableViewer.java:800"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefresh",
          "source": "TableViewer.java:789"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$7.run",
          "source": "StructuredViewer.java:1324"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1261"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1322"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1281"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "143707",
      "date": "2006-05-30T18:38:20+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "143707",
  "bugId": "143707",
  "date": "2006-05-25T15:59:43+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}