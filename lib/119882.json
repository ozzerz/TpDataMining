{
  "comments": [
    "org.aspectj.weaver.BCException\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1087)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nBCException thrown: Can\u0027t find bcel delegate for training.casino.Konto type\u003dclass org.aspectj.weaver.ReferenceType\nwhen weaving classes \nwhen weaving \nwhen incrementally building BuildConfig[C:\\Documents and Settings\\mheidt\\workspace 3.1.1\\.metadata\\.plugins\\org.eclipse.ajdt.core\\AspJTraining.generated.lst] #Files\u003d11\n\ndeleted  a java-source-file before (but not the class-file), possibly pointed by a LogAspect. Created a new source file. Error occurs after saving the new file.",
    "Created an attachment (id\u003d33701)\npatch containing testcase\n\nPatch containing multiproject incremental testcase - apply to the tests project.\n\nI\u0027ve tried reproducing this problem and have created a testcase which throws a BCExcpetion at the same line which is reported here - the stack trace is:\n\norg.aspectj.weaver.BCException\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1095)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)\nat org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nBCException thrown: Can\u0027t find bcel delegate for pack.C2 type\u003dclass org.aspectj.weaver.ReferenceType\nwhen weaving classes \nwhen weaving \nwhen incrementally building BuildConfig[C:\\eclipse_installations\\aspectj\\eclipse\\runtime-workspace-20050923-testcaseInvestigation\\.metadata\\.plugins\\org.eclipse.ajdt.core\\test2.generated.lst] #Files\u003d4\n\nsince 8 lines have been added to the beginning of the BcelWeaver class between the time this bug was raised and now. \n\nI\u0027m not sure if the testcase follows exactly the same scenario as that reported. The steps the testcase takes are:\n\n Stage 1: Compile the 4 files, pack.A2 extends pack.A1 (aspects) where\n          A2 uses a protected field in A1 and pack.C2 extends pack.C1 \n          (classes) where C2 uses a protected field in C1\n Stage 2: make the field private in class C1 \u003d\u003d\u003e compile errors in C2\n Stage 3: make the field private in aspect A1 whilst there\u0027s the compile\n          error \u003c\u003c-- this causes the BCException\n\nAs you can see from this it was necessary for there to be compilation errors in order to produce the BCException, plus I didn\u0027t have to delete the file (although deleting the file did produce the same error).\n\nCould you confirm whether this scenario is similar to the one when you originally saw the problem? \n",
    "The BCException is occuring only if the error is introduced during an incremental build (doing a full build before making the change to the aspect doesn\u0027t show this problem). This is because, in the case of a full build, each compilation unit is asked whether it has errors within AjCompilerAdapter.afterProcessing(..). If any return true then the \"reportedErrors\" field is set to true. Consequently in the AjCompilerAdapter.afterCompiling(..) method there is a check for whether any errors have been reported and if they have then we don\u0027t bother to do a weave. In the incremental case, we only check whether there are any errors against the changed compilation unit (in the test scenario in comment #1 this is pack.C1) which returns false. Therefore, when we come to decide whether to weave or not, \"reportedErrors\" is false, even though there is an error against the subclass pack.C2. Going on to do a weave when there are reported errors leads to the reported BCException because the BcelObjectType for pack.C2 is an EclipseSourceType rather than a BcelObjectType.",
    "Expanding on comment #2.....this is the flow of what\u0027s happening:\n\nStage 1: compile all aspects and classes - there are no compilation errors and this is a full build.\n\nStage 2: make the field private in class C1. This forces an incremental build of C1. No errors are reported so we weave C1 (there is only C1 in the list of resultsPendingWeave). We then do an incremental build of C2 (since this is a subclass of C1). There are errors reported against C2 (as expected) so we finish without weaving.\n\nStage 3: make the field private in aspect A1. This forces an incremental build of both A1 and C1 (C1 is in the list of binary files to compile held in the AjState instance). There are no errors reported against the compilation of A1 or C1, therefore we decide to weave. Because we\u0027re weaving A1 we need to reweave the world and so all known class files are added to the weave list. This includes the class file for C2 which has an error reported against it. Consequently when we come to weave we go through each one of these classes in turn and when we get to C2 the BCException is thrown.\n\nA possible fix could be to only add those classes which don\u0027t have compiler errors (since this would mirror the behaviour of a full build). However, this breaks another incremental test (testPr113531) which has two aspects A and A1 where A1 sets a protected field in A. This field is then made private and there is a resultant compile error against A1. A new aspect is then added whilst there is a compile error against A1, however, this error is then lost.",
    "Another possible fix is to mirror the fix for bug 113531. This bug dealt with the case when there was an error against an aspect when an incremental build took place. The fix was to get assert that if there was an error then the delegate would be an EclipseSourceType in which case this can be ignored without weaving as the error will be reported later. The current bug is the same problem, just with an error against a class. Therefore, a fix would be to put similar logic into the loop where the non-aspects are woven in BcelWeaver.weave(..).",
    "Created an attachment (id\u003d34559)\nzip containing testcase and fix\n\nThe attached zip file contains two patches:\n\n* pr119882-tests-patch2.txt - apply to the tests project. This differs from the previously attached test by adding an extra assert that the error message is still there.\n* pr119882-weaver-patch.txt - apply to the weaver project. This contains the fix described in comment #4.\n\nUnfortunately, after synchronizing with the latest code in HEAD, this bug disappears (or at least the bug that this testcase recreates). This is due to the changes with comment \"go \u0027back to source\u0027 on incremental aspect change\".  However, since the proposed fix mirrors the behaviour of when an aspect has compile errors, I believe it should probably still be applied.",
    "i agree - i\u0027ve committed the fix.  there are probably other bugs we have that are also fixed now with this change...",
    "*** Bug 124813 has been marked as a duplicate of this bug. ***",
    "*** Bug 122096 has been marked as a duplicate of this bug. ***",
    "*** Bug 118859 has been marked as a duplicate of this bug. ***",
    "Closing this bug as fixed as the patch has been integrated into AspectJ. Moreover,  AJDT 1.3.1.20060309111525 for Eclipse 3.1 includes an AspectJ which contains this fix and the next build of AJDT for Eclipse 3.2M5 will also contain the fix."
  ],
  "commentCreationDates": [
    "2005-12-08T15:53:59+01:00",
    "2006-01-27T14:32:52+01:00",
    "2006-02-10T13:49:03+01:00",
    "2006-02-10T16:28:51+01:00",
    "2006-02-13T08:55:37+01:00",
    "2006-02-13T10:17:45+01:00",
    "2006-02-13T10:51:24+01:00",
    "2006-02-13T11:04:42+01:00",
    "2006-02-13T11:05:19+01:00",
    "2006-02-13T11:07:12+01:00",
    "2006-03-10T16:03:13+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1087"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:811"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:254"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:163"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "119882",
      "date": "2005-12-08T15:53:59+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    },
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1095"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:811"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:254"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:163"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 1,
      "commentIndex": 1,
      "bugId": "119882",
      "date": "2006-01-27T14:32:52+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "119882",
  "bugId": "119882",
  "date": "2005-12-08T15:53:59+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}