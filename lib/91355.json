{
  "comments": [
    "\"A\" extends \"B\". \"A\" implements \"I\". \"C\" implements \"I2\". \"I\" has a method with\nthe signature \"public I2 doSomething()\". B has a method with the signature\n\"public C doSomething()\". Due to the covariant return type, B should fulfill the\ncontract for A. Indeed, the compiler thinks so, too. However, the following call\nwill fail with an AbstractMethodError:\n\nI impl \u003d new A();\nimpl.doSomething();\n\nThis is easier to show with sample code. Attached.",
    "Created an attachment (id\u003d19889)\nTest Case for bug 91355\n",
    "Daniel, can you please double check the testcase.\n\nI do not get an AbstractMethodError, but the testcase also does not include \nany senders of the method doSomething()",
    "The I.doSomething() below is just an explanation. In the example, the method of\nnote is ISourceInterface.get(). If I run TestMain, compiled with javac, it exits\nnormally. If I run it from eclipse, I get:\n\nException in thread \"main\" java.lang.AbstractMethodError:\ntest.SourceImpl.get()Ltest/IReturnInterface;\n\tat test.TestMain.main(TestMain.java:19)\n\nIf I look at the generated class files, the one compiled with javac includes two\nmethods:\n\"\u003cinit\u003e\" with the signature \"()V\" and\n\"get\" with the signature \"()test/IReturnInterface;\"\n\nwith the JDT it only has this:\n\n\"\u003cinit\u003e\" with the signature \"()V\"\n\n",
    "What build are you running?\n\nI can run the testcase fine \u0026 if I change AbstractSource to:\n\npublic abstract class AbstractSource {\n\tpublic ReturnImpl get() {\n\t\tSystem.out.println(\"AbstractSource.get()\");\n\t\treturn new ReturnImpl();\n\t}\n}\n\nI get \"AbstractSource.get()\" printed from both javac \u0026 Eclipse.",
    "I was running on M4. It appears to be ok in M6. Sorry for the bother."
  ],
  "commentCreationDates": [
    "2005-04-14T00:38:59+02:00",
    "2005-04-14T00:40:06+02:00",
    "2005-04-14T17:23:40+02:00",
    "2005-04-14T18:59:54+02:00",
    "2005-04-14T19:18:56+02:00",
    "2005-04-15T02:10:47+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.AbstractMethodError",
      "message": "test.SourceImpl.get()Ltest/IReturnInterface;",
      "elements": [
        {
          "method": "test.TestMain.main",
          "source": "TestMain.java:19"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "91355",
      "date": "2005-04-14T18:59:54+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "91355",
  "bugId": "91355",
  "date": "2005-04-14T00:38:59+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}