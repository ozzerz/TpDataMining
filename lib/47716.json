{
  "comments": [
    "I can\u0027t open a graphic interface editing tool to make a swing java application!!!!\nI\u0027ve installed on Eclipse The VE librarys and the GEF librarys but when the interface try to start a \nsystem error pop up in my system!!!!!\nI\u0027ve some immage of my eclipse running and crash!!!!",
    "Created an attachment (id\u003d7001)\nEclipse error\n",
    "Created an attachment (id\u003d7002)\nLibrary installed on Eclipse\n",
    "This version of VE is not fully supported on MacOS.",
    "!ENTRY org.eclipse.jem.proxy 2 0 d??c. 03, 2003 23:41:00.843\n!MESSAGE IWAV0070W Cannot find a proxy implementation to use for project \"test2.1.2.\"\n!ENTRY org.eclipse.ve.java.core 4 0 d??c. 03, 2003 23:41:01.26\n!MESSAGE Exception\n!STACK 0\njava.lang.NullPointerException\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.createProxyFactoryRegistry(Java\nVisualEditorPart.java:669)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initializeForProject(JavaV\nisualEditorPart.java:1800)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initialize(JavaVisualEdito\nrPart.java:1705)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run(JavaVisualEditorPart.\njava:1588)\n\tat java.lang.Thread.run(Thread.java:491)\n!ENTRY org.eclipse.jem.proxy 2 0 d??c. 03, 2003 23:41:45.575\n!MESSAGE IWAV0070W Cannot find a proxy implementation to use for project \"test2.1.2.\"\n!ENTRY org.eclipse.ve.java.core 4 0 d??c. 03, 2003 23:41:45.583\n!MESSAGE Exception\n!STACK 0\njava.lang.NullPointerException\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.createProxyFactoryRegistry(Java\nVisualEditorPart.java:669)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initializeForProject(JavaV\nisualEditorPart.java:1800)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initialize(JavaVisualEdito\nrPart.java:1705)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run(JavaVisualEditorPart.\njava:1588)\n\tat java.lang.Thread.run(Thread.java:491)\n",
    "*** Bug 48487 has been marked as a duplicate of this bug. ***",
    "updated FAQ to mention at this time not support MAC OS X.",
    "*** Bug 60272 has been marked as a duplicate of this bug. ***",
    "The hide bug seems to be back. I can\u0027t solidly reproduce it but I just tried the following steps;\n1) try to hide Eclipse - would not (Command-h)\n2) switch to another application\n3) click on the Eclipse icon in the doc\n4) Eclipse hid\n5) Eclipse would not un-hide\n\nThis was not a problem since M2 or M3 can\u0027t remember exactlly which one it went away in.",
    "Please, put a cue at the download page. There is Status green and Platform All.\nMost pepole download first, then read the FAQ.\n\n\nIs there more information about this problem? OK the code. Which version was\nfully supported on MacOS? Is somewhere a comparable (simple) implementation\nwhich works? \n\nI\u0027m new in Java, but I could spend time in this. ",
    "The build page is generated automatically with our build process... we\ndefinitely need to fix the process to generate clearer download pages noting\nwhat is supported/tested.   Especially as we start supporting Windows\nplatforms..  M2 will support Windows and Linux GTK.\n\nNote that the main reason for the delay on the Mac OS is that we need to dive\ninto Carbon code to figure out how to screen scrape images - any help will be\nappreciated.   We have just finished this effort with GTK, and would work on\nMotif support next.   ... Carbon is definitely on the list.\n\n",
    "\u003e We have just finished this effort with GTK\n\nBTW, where can I find implementation for GTK? I see in CVS class ImageCapture,\nbut it looks as only Windows implementation.",
    "The M2 stream is not HEAD, as we have started to put more breaking changes in\nHEAD.  The GTK code will be merge when M2 is released.\n\nLooking forward for you help on this matter,  Konstantin.",
    "Is anyone looking at OS X support?",
    "*** Bug 69596 has been marked as a duplicate of this bug. ***",
    "I\u0027ve started looking at the problems with VE on OS X, along with Frank Sanders\n(fsanders@mac.com).  The good news is that we\u0027ve gotten to the point of being\nable to bring up the VE and develop Swing/AWT on OS X when running the VE in the\ndevelopment environment.  Unfortunately it doesn\u0027t work the same when using a\nbinary build.\n\nThe problem seems to be with the dynamic compilation of the Java JET templates\nthat are used to generate the skeleton code of a new visual class and other\ntemplates used within the code generation.  The parsing of the JET template\nitself goes through ok (we\u0027ve debugged to the point of seeing the\nCompilationUnit with the correct Java source as the contents) but passing the\nCompilationUnit to JDT to compile is failing.  It seems the classpath for JDT\nisn\u0027t setup properly for this dynamic compile, as it is unable to resolve\njava.lang.Object necessary for the compilation of the class.  The next step is\nto look into whether the classpath for the JDT is set up properly, and if not,\nwhy is it different on OS X than on Linux and Windows.\n\nThis status update is meant to offer some hope to OS X users that progress is\nbeing made on bringing VE to this platform post-1.0.",
    "Hi,\n\nI don\u0027t know why java.lang.Object would not be found but in the mac env there is\nno tools.jar, everything is in the classes.jar (its apple, they had to be\ndifferent). This causes/has caused several problems for other apps that need to\ncompile (jboss at one point asserted that tools.jar was found for example and\nhad to be updated for the mac). Is it posible that something in the VE or JET is\nrequiring this jar file instead of looking for the class?\n\nJust a thought.\n\nThanks again for getting stated on this. I for one can\u0027t wait to play with it!",
    "OK, VE\u0027s not working on OS X due to this bit of code in JDT:\n\nIn class org.eclipse.jdt.internal.launching.StandardVMType, in method\ndetectInstallLocation() line 148:\nif (Platform.getOS().equals(Constants.OS_MACOSX)) {\n    return null;\n}\n\nSo either JDT needs to implement this function on OS X, or we\u0027ll need to try to\nimplement it ourselves.",
    "Are you sure that you are using the org.eclipse.jdt.launching.macosx fragment?\n\nIIRC it implements the Mac specific pieces that the generic \norg.eclipse.jdt.internal.launching.StandardVMType cannot handle.\n\n(I\u0027m the owner of that fragment, so let me know if I can help)",
    "This problem seems to occur when JDT tries to find the default installed VM...\nWhat if you explicitly sets a VM configuration (for install location)?  Will\nthis move you over this hump?",
    "Please check MacOSXVMInstallType.detectInstallLocation() and let me know if it doesn\u0027t work for you.\nHowever, you have to make sure to use the \"MacOS X VM\" JRE type and not the \"Standard VM\" type.\nIf you have the fragment then the default JRE should be \"MacOS X VM\" automatically.",
    "Whoops, sorry we missed the fragment.  But the detectInstallLocation() method in\nMacOSXVMInstallType is still not working correctly.\n\nThe problem is that the vm we\u0027re using is a VMInstall that\u0027s known about by\nEclipse.  So the if clause on line 101 always fails on the correct VM (the\nfindVMInstall returns non-null). It looks like there should be an else clause to\nthis condition that detects if the current version it\u0027s checking is the default\nthat it will set the defaultLocation variable properly before the return.  It\nmight need to call the JavaRuntime.setDefaultVMInstall method as well, but I\nwould think that it would automatically be the default.",
    "Created an attachment (id\u003d14756)\nPatch for OSXVMInstallType\n\nThis patch makes detectInstallLocation() function properly on an installed JRE.\n Applying it makes the VE launch properly.\n\nThe patch applies to the v3.0.1 version of the org.eclipse.jdt.launching.macosx\nplug-in.",
    "*** Bug 78732 has been marked as a duplicate of this bug. ***",
    "Are we going to have this patch (and whatever else might be necessary to get MacOS X working with VE) \napplied to the main 3.0.x stream soon?  I would very much appreciate being able to use VE.  The \nalternative seems to be for me to build my own Eclipse with this patch applied, but like everyone else \nmy time is limited and it might be simple enough to pick this up in an official build if you folks are \nready to do this.",
    "A fix for this bug went into the Eclipse 3.1 M3 build (see bug 75201). \nUnfortunately I don\u0027t have access to an OS X machine anymore so I can\u0027t test out\nthe VE on M3.  If you\u0027d like to try this out (with the latest 1.0.x Stream\nMaintenance Build of VE) and report back here, it\u0027d be appreciated.\n\nThere are quite a few other problems with VE support on OS X, but at least it\nshould start up OK while working with AWT/Swing.",
    "I tested the VE on Mac OS X (10.3.6) (Java 1.4.2_05 (Apple\u0027s Update 2)), as indicated by Jeff\u0027s comment. I \ndownload these components:  Eclipse 3.1M3, VE M20041116, which says it is dependent on EMF build \n2.0.1, GEF build 3.0.1, Eclipse build 3.0.1, but I skipped 3.0.1 and went with 3.1M3 as indicated.\n\nI am so thrilled to actually see this work, I didn\u0027t mind the slowness of the response!  I noticed that \nwhen I brought up the VE, two extra JVM\u0027s started and showed up in the dock (along with the Eclipse \nicon).  One of the JVMs corresponds to a \"FreeFormComponentsHostDialog\" frame which appears to be \na \"live\" view of the components as I build them in the VE Panel within Eclipse.  I don\u0027t recall that when I \nfirst worked with VE on Windows.\n\nThanks for working on this for us Mac OS X switchers!  If there is any other testing I can help with, let \nme know!",
    "My reading of comment #26:\n  - it\u0027s running\n  - it\u0027s slow, and forks multiple VMs (ugh)\n\nAndre: Do you know why they are getting the extra doc icons for the other VMs? Can they \njust run a command line VM instead to avoid this?\n",
    "I tested VE with the same component versions as Kathy Lee Simunich.\nSame problems here: multiple VMs, _very_ slow\n\nMy hardware shouldn\u0027t be the problem: Dual1.8 G5, 1.2 GByte RAM\n\nNevertheless, I\u0027m happy that it finally works on MacOSX :-)",
    "\u003e Nevertheless, I\u0027m happy that it finally works on MacOSX :-)\n\nThis bug has been quite quiet during the last half year. Is this still the status? Or is there some other \nbug that tracks the progress on Mac OS X?\n\nI couldn\u0027t find an updated entry in the FAQ, so I assume that VE still doesn\u0027t really work on OS X?",
    "Martin,\n\nI no longer have access to an OS X machine (but have been kicking around the\nidea of getting a mini) so I haven\u0027t been able to work any more on OS X support.\n As far as I know, none of the other developers on the VE team have easy access\nto a Mac either... so that hampers things a bit.  We also lack expertise in OS X\ndevelopment (especially in the Carbon coding necessary to get SWT support\nworking) so progress on this feature is contingent (at least at the moment) on\nvolunteers from the open source community doing development and testing.  Even\nbug reports on specifics of what works and what doesn\u0027t are helpful (I don\u0027t\nknow if anyone\u0027s tried the VE 1.1 milestone or nightly builds on Eclipse 3.1 yet)\n\nVolunteers for this effort can voice their interest on the VE development\nmailing list, newsgroups or on this bug report.  I\u0027m sure the VE team will be\nhappy to help with questions on ramping up on development and help work through\nissues as best we can without having access to a Mac ;)",
    "i just gave it a try:\n\nI used eclipse3.1M7, emf I200504141117, GEF 3.1M6, VE 1.1M1 running on MacOSX 10.4.1 with \nJava1.4.2\n\nEclipse started fine (quite fast actually), I could create a VisualClass using the wizard. Empty frame \ndisplayed correctly (as far as I can tell :-) ).\nThen the problems began: after adding a JLabel, Eclipse stopped responding. (The JLabel displayed in \nthe GUI view, but further editing was not possible)\nWhen I forced quit, i got exit code 143 (don\u0027t know what that means).\nAlso, I had 2 additional java processes in the OSX Dock called:\n \norg.eclipse.jem.internal.proxy.vm.remote.RemoteVMApplication\n\nOne had no visible components, the other had 2 windows: 1 called \u0027Application\u0027 (the JFrame i created), 1 \ncalled \u0027FreeFormComponentsHostDialog\u0027\nThere was a second FreeFormComponentsHostDialog, but that didn\u0027t seem to belong to one of the \nremoteVM-processes ?!? These windows appeared nearly out of the viewable screen-area, in the lower \nright corner of my display (resolution 1600x1024, if that should matter).\n\nI restarted Eclipse, started VE -\u003e again two additional java processes in the dock. Quit Eclipse, 1 of the \njava processes disappeared, the other remained :(\n\nI then tried the same with Eclipse3.1M6:\nexact same behaviour.",
    "I\u0027m sure there are a number of Mac users who are interested in using this feature - but I don\u0027t currently \nsee any list anywhere of the \u0027incomplete\u0027 parts necessary needed to make this port complete on Mac OS X.\n\nCan someone on the Eclipse team come up with a strategy and task list for tackling this problem - \nsomething for the community to rally around and help tick off items on?  Solving problems on the Carbon \nside is definitely something that many of us can help with - if someone can tell us where the missing \nfunctionality is to help reduce the burden on those of us familiar with the Mac, but not necessarily with \nEclipse.",
    "Coming up with a list with tackleable tasks would be a very good idea.  I\u0027ll\nstart work on this, and it should be easier to get input from the rest of the VE\nteam now that the stresses of the 1.1 release are over :)\n\nBut in the meantime here\u0027s a task that\u0027d be a good start: \n\nThe most important code that is needed to get SWT supported on OS X is the\nability to capture the image of the widgets being rendered in the remote vm\nwindow, and being able to do this while the window is offscreen and/or obscured\nby other windows.  This has required platform specific code on Windows and GTK\n(including a native library in the case of GTK) - so it\u0027s likely that the same\nwill be necessary for OS X.\n\nA very good place to start would be to create a Carbon app with a button and a\nfew other widgets. When the button is pressed, an snapshot image of the UI is\ntaken, then another window is opened and the image is displayed.  Bonus points\nif it works properly if the first window is captured properly if the window is\npartially dragged off screen so that some of the other widgets are not showing\nat all. The next thing would be to add another button that captures just a\nspecific widget (a table, combo box, etc) that\u0027s on the window.",
    "What sort of data is needed for the image? For example, it\u0027s pretty easy to get hold of a PDF from a \nwindow in Mac OS X, but I\u0027m pretty sure this isn\u0027t the feature that you\u0027re looking for :-)\n\nAlso, there\u0027s a bunch of stuff in Cocoa classes like NSView; is there any reason why it has to be \naccessed through Carbon?",
    "I don\u0027t know enough about Cocoa to know if we\u0027ll be able to use it. I was\nassuming that we\u0027d need to use Carbon because SWT is implemented in Carbon - so\nthe handles to the widgets and windows that we can get at from SWT are Carbon\nControlRef and WindowRef pointers.  If Cocoa can be accessed via JNI and can\ntranslate these ref pointers into objects usuable from within Cocoa, it should work.\n\nAs for the image format... we need to be able to create an SWT Image from the\ndata.  In the case of GTK we created an SWT ImageData object\n(http://help.eclipse.org/help31/index.jsp?topic\u003d/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/graphics/ImageData.html)\nand called setPixels(int x, int y, int putWidth, int[] pixels, int startIndex)\non it, with integer pixel data that corresponds to the color depth used on the\ndisplay.  The native call we wrote has the signature \nint[] getPixels(int handle, int includeChildren).\nThe return value of that method has a header that includes the width and height\nof the image, the type of the image (RGB or indexed colors), the color value\nmasks for RGB, and then the actual pixel data.\n\nI\u0027d expect we\u0027d do something similar to construct Images from OS X, but\nalternate means (that work) would be great.",
    "It looks like RealBasic also works in Carbon when building applications in mac os X.\n\nIt is possible to create offscreen images with Real Basic, here is an example:\nhttp://realgurus.com/tutorials/PictGraph.html\nthe question now is how can it get the handles to the SWT widgets and windows?\nthanks\njose\n\n(In reply to comment #35)\n\u003e I don\u0027t know enough about Cocoa to know if we\u0027ll be able to use it. I was\n\u003e assuming that we\u0027d need to use Carbon because SWT is implemented in Carbon - so\n\u003e the handles to the widgets and windows that we can get at from SWT are Carbon\n\u003e ControlRef and WindowRef pointers.  If Cocoa can be accessed via JNI and can\n\u003e translate these ref pointers into objects usuable from within Cocoa, it should work.\n\u003e \n\u003e As for the image format... we need to be able to create an SWT Image from the\n\u003e data.  In the case of GTK we created an SWT ImageData object\n\u003e (http://help.eclipse.org/help31/index.jsp?topic\u003d/org.eclipse.platform.doc.isv/reference/api/org/\neclipse/swt/graphics/ImageData.html)\n\u003e and called setPixels(int x, int y, int putWidth, int[] pixels, int startIndex)\n\u003e on it, with integer pixel data that corresponds to the color depth used on the\n\u003e display.  The native call we wrote has the signature \n\u003e int[] getPixels(int handle, int includeChildren).\n\u003e The return value of that method has a header that includes the width and height\n\u003e of the image, the type of the image (RGB or indexed colors), the color value\n\u003e masks for RGB, and then the actual pixel data.\n\u003e \n\u003e I\u0027d expect we\u0027d do something similar to construct Images from OS X, but\n\u003e alternate means (that work) would be great.\n\n(In reply to comment #0)\n\u003e I can\u0027t open a graphic interface editing tool to make a swing java application!!!!\n\u003e I\u0027ve installed on Eclipse The VE librarys and the GEF librarys but when the interface try to start a \n\u003e system error pop up in my system!!!!!\n\u003e I\u0027ve some immage of my eclipse running and crash!!!!\n\n",
    "I think it\u0027d be helpful to have a Carbon app that can capture itself first, then\nworry about SWT integration afterwards.  But if you want to see the existing SWT\nintegration for Windows and GTK, take a look at the ImageCapture classes in the\norg.eclipse.ve.swt plug-in:\nhttp://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.ve.swt/vm_swt/org/eclipse/ve/internal/swt/targetvm/win32/ImageCapture.java?rev\u003d1.11\u0026cvsroot\u003dTools_Project\u0026content-type\u003dtext/vnd.viewcvs-markup\nand\nhttp://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.ve.swt/vm_swt/org/eclipse/ve/internal/swt/targetvm/unix/ImageCapture.java?rev\u003d1.9\u0026cvsroot\u003dTools_Project\u0026content-type\u003dtext/vnd.viewcvs-markup",
    "Ok, maybe this is off base...\n\nHIViewCreateOffscreenImage will render an HIView (a canvas and all its children, or a single control) \ninto an offscreen CGImageRef.\n\nhttp://developer.apple.com/documentation/Carbon/Reference/HIViewReference/hiview_ref/\nchapter_1.2_section_3.html#//apple_ref/doc/uid/TP30000785-DontLinkChapterID_2-\nHIViewCreateOffscreenImage\n\n\nOnce you\u0027ve got the view and its children, you should be able to call that to create a CGImageRef which \nrepresents the image itself - which you\u0027re then free to read the pixels out of.\n\nSo, if an underlying SWT widget is a HIView, you\u0027ve got a one-call mechanism of rendering it offscreen \nand getting the bitmap, even if it\u0027s not currently being displayed.\n\nCorrect?",
    "I had come across that method when investigating the Carbon code that allows\nthis SWT snippet to work:\nhttp://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet95.java?rev\u003dHEAD\u0026content-type\u003dtext/vnd.viewcvs-markup\nand it sounded very promising. But if I recall correctly, from testing it a year\nor so ago the snippet didn\u0027t work properly if the widget being captured was\nobscured by another window or if it was dragged offscreen.  Could you test this\nout?  \n\nOn Windows, the remote VM\u0027s UI is placed offscreen at the location 10000,10000\nbut most window managers on Linux and I think OS X doesn\u0027t allow you to place\nthe windows completely offscreen.  But still we should try to minimize the\nvisibility of the remote VM windows whenever possible.\n\n",
    "Another aspect that needs to be addressed is capturing the window decorations\n(the title bar, close/minimize/maximize buttons, etc.  Hopefully we\u0027ll be able\nto capture the actual window image, rather than having to mock them up like we\ndo on Linux/GTK.\n\nThe Window Regions, as explained here:\nhttp://www.mactech.com/macintosh-c/chap04-1.html looks like it may be useful,\nvia the GetWindowRegion, and then somehow get the pixmap of that region.",
    "To the best of my knowledge, the whole window, including all nav elements, should be available as the \nroot element; the view area (the primary view) would be retrieved differently.\n\nNo need, to the best of my knowledge, to resort to old MacOS 8/9 API - offscreen render should do the \njob for any widget, including the root window and all of its contents; it should render into an offscreen \nbuffer in virutal VRAM which can then be accessed by the CG APIs as a CGImage.\n\nI have no doubt that relying on stuff like GetWindowRegion, which found its most common usage by \npeople trying to figure out what window regions are dirty when rendering their view, might have \nstrange behavior on offscreens and obscured content.\n\nOffscreen ftw, methinks.  Is there existing code that uses it somewhere?",
    "\nRe comment 39:  I\u0027ve spent a couple hours digging around, and I now have an XCode project that displays \ntwo windows, each with a button on them. Clicking the button on window A makes an image capture of \nthe button from window B and displays it in an HIView.  This capture works if the widget in window B is \noffscreen, or obscured by another window, etc.  This is on OSX 10.4.2\n\nWould this code be useful?  I can attach the XCode project to this defect if desired...",
    "We have to make sure that there are no lic. issues with this code?  ",
    "(In reply to comment #43)\n\u003e We have to make sure that there are no lic. issues with this code?  \n\nAFAIK the code will be EPL as soon as it is available in Bugzilla.",
    "Excellent. Could you see if you can add another button to window A that captures\nthe entire image of window B?",
    "Comment 42: I was wondering what exactly does XCode suite output? Is it an XCode\napp, or a native Mac OSX app? Because Eclipse relies only on Carbon libraries I\nthink and it would be better not to put additional library requirements for\nhaving this. Can you package the API which is called when you press the button\nas a library which can be loaded from Java?\n",
    "XCode is a builder; it can output many different types of app, library, or\nframework.\n\nWhat it\u0027s linked against is probably more of an issue, since Cocoa is already a\nno-go; however, the reference to HIView suggests that it\u0027s a Carbon app, rather\nthan a Cocoa one.",
    "re #47:  Yes, it\u0027s a Carbon app.\nre #45: I\u0027ve added a second button which captures the entire contents of the child window, including the \nframe.\n\nI\u0027ll attach the project...",
    "Created an attachment (id\u003d26448)\nIllustrates capture of widget or wntire window\n\nXCode 2.1 project, OSX 10.4.2\n\nClick \"widget\" to capture widget in child window, click \"window\" to capture\nentire child window. The red rect is drawn to illustrate the bounding box of\nthe captured image.",
    "Created an attachment (id\u003d26449)\nIllustrates capture of widget or entire window\n\nXCode 2.1 project, OSX 10.4.2\n\nClick \"widget\" to capture widget in child window, click \"window\" to capture\nentire child window. The red rect is drawn to illustrate the bounding box of\nthe captured image.",
    "doh!  Sorry for the duplicate attachment... that\u0027ll teach me to try and fix a spelling mistake.",
    "Created an attachment (id\u003d26452)\nVE-MACOSX-capture-framework.zip\n\nTo test out the interface with Java (which is the end goal), I am attaching a\nsmall Java app which will call the native capture mechanism and return the\nimage. Import this into a project which pre-reqs Eclipse OSX SWT plugin, and\nrun the ImageGrabberTest_layout.java file as a SWT app. This will open two SWT\nShells - one with widgets and the second to capture the first when the \u0027grab\u0027\nbutton is pressed. fprintf statements in native code to stderr stream, should\nallow you to debug the status in the native code. \nAny XCode gurus please feel free to hook in the code presented by\nbill@hutten.org to make capture of Carbon widgets possible from SWT.",
    "Non-native solution possible?\n\nI was going through the code provided by bill@hutten.org and was looking at\nmain.c in his project and realized maybe if this was all possible without any\nnative code at all. \n\nIn the main.c the code which gets the image is (correct me if i am wrong):\n-------------------------\nHIViewCreateOffscreenImage(childControl, 0, \u0026viewRect, \u0026image);\nHIViewSetNeedsDisplay(myHIView, true);\nbreak;\n-------------------------\n\nIn SWT itself the \u0027org.eclipse.swt.internal.carbon.OS\u0027 class there is an API\n\"HIViewCreateOffscreenImage(int, int, CGRect, int[])\" . I was wondering if\nanyone with a MAC machine could quickly test out if calling this api passing in\nthe control\u0027s handle would return and image? If it does then the problem of\noffscreen capture could be solved, and no messy C-Java native interaction.\n\nbill@hutten.org: will this API suffice to capture offscreen/hidden/etc. or is\nthere any additional magic required for that?",
    "Re comment # 53: Yes, this line of code:\n\nHIViewCreateOffscreenImage(childControl, 0, \u0026viewRect, \u0026image);\n\nIs all that\u0027s required to capture the image of a control.  To capture the image of an entire window you \nneed to grab the root HIView from a windowRef, ie:\n\nrootView \u003d HIViewGetRoot(childWindow);\nHIViewCreateOffscreenImage(rootView, 0, \u0026viewRect, \u0026image);\t\n\nThe image returned by HIViewCreateOffscreenImage is a CGImageRef.\n\nHTH\n\n- bill\n",
    "Created an attachment (id\u003d26458)\nTestcase to test capture using SWT API itself\n\nActually, looking more into this \u0027org.eclipse.swt.graphics.GC\u0027 class has a\n\u0027copyArea(Image, int, int)\u0027 method which does all the\nOS.HIViewCreateOffscreenImage() stuff for us. \n\nSo I created a simple project with SWT JARs in it and the ImageCapture program\nto use the \u0027copyArea(Image, int, int)\u0027.\n-----------------------------\nprotected Image getImageOfControl(Control control, int\nincludeChildren/*ignored*/){\n\tImage image \u003d new Image(control.getDisplay(), control.getBounds());\n\tGC gc \u003d new GC(control);\n\tgc.copyArea(image, 0, 0);\n\tgc.dispose();\n\treturn image;\n}\n------------------------------\n\nCould anyone test if this simple call works for MAC with offscreen / minimized\n/etc. widgets?",
    "I got a Mac. If you want me to test it just mail me the project and tell me what to do ;-)",
    "Attachment 26458 is the project itself. Please bring this project into an\nEclipse workspace and Run the\norg.eclipse.ve.internal.swt.targetvm.macosx.carbon.ImageGrabberTest_layout.java\nfile as an SWT application (Run\u003eRun As\u003eSWT Application). This will show two\nwindows - one with a lot of widgets and another with a Grab button on it.\nMinimize the first window (with widgets) and hit Grab on the second window.\nDoing this should paint a screencap of the widgets below the Grab button. This\nshould work when the window with widgets is offscreen and partially offscreen\netc. Thanks.",
    "Re comment # 57:  I\u0027m using Eclipse 3.1 build I20050624-1300 and ImageGrabberTest_layout works fine \nfor me. The capture works if the window is obscured by other windows, if it\u0027s minimized to the dock, etc.  \nOSX 10.4.2",
    "this is not the full trueth. it captures the window, but the captured image does not show the text inside \nthe table or the textbox.\n\nVersion: 3.1.0\nBuild id: I20050627-1435",
    "Does it only not capture the text when it\u0027s obscured or off screen, or does the\ntext not show all the time?\n\nThis problem sounds like a similar issue that we ran into GTK that there was an\nSWT optimization to not render text when it\u0027s obscured.  We were able to disable\nthis feature, but that code is not in the test code that Sri attached.",
    "Created an attachment (id\u003d26465)\nTestcase to test capture using SWT API itself (Text fixes)\n\ncomment 59: this is similar to a known problem with SWT/GTK text controls,\nwhere SWT blocks paint requests of the native text controls if they are hidden,\nas it is CPU intensive to paint text. Please try the new project and see if the\ntext controls paint properly when hidden/minimized etc.\n",
    "\nSorry for not catching the problem with the missing text in the table and text area...\n\nI\u0027ve just downloaded and tested the 2nd version of the Testcase, and it still exhibits the \"missing text\" \nbehaviour for me.  As with the 1st version, the text of the table and the two textblocks are missing from \nthe capture. Interestingly, in both versions the text in the list object (upper-right) is captured fine.\n\nI\u0027ll attach a screenshot which illustrates the behaviour.",
    "Created an attachment (id\u003d26475)\nIllustrates \"missing Text\" problem with capture\n",
    "Opened bug 108635 to track problem of SWT Text widgets not painting in MAC OSX.",
    "Jeff has released changes so that VE uses the correct capture mechanism. It\nwould be great if anyone could try the new \u0027N20051018\u0027 VE build to see if the\nexceptions go away regarding capture problems. With bug 108635 being fixed, the\ntext painting problems should go away once VE steps up to the latest Eclipse\nmilestone builds.",
    "Also you\u0027ll have to try it on the latest Eclipse 3.2 Integration build\n(I20051018-0932 or later) to get the changes made to resolve bug 108635.",
    "Is this still work in progress? \n\n\nI\u0027m a Mac OS X 1.4.2 User with Java 1.4.2 and Java 1.5.0 installed and since I loved VE on my linux I\u0027d be \nglad to help with the OS X gitches. I\u0027ll grab the 3.2 Integration build right away, just keep me updated \nwhat I have to do :)\n\nBR;\nMaC",
    "Created an attachment (id\u003d28777)\nIllustrating test grab problem on mac os x\n\nUsing latest VE and Eclipse Integration buils, the problem still exists :(",
    "Created an attachment (id\u003d28778)\nIllustrating text grab problem on mac os x\n\nUsing latest VE and Eclipse Integration buils, the problem still exists :(",
    "I\u0027ve obtained a Mac Mini, so now can work on supporting VE on OS X.\n\nUnfortunately, I\u0027ve come across a pretty big blocker of getting SWT working on\nOS X after a few hours of debugging.  Right now if you attempt to load an SWT\nfile in the VE, it stalls during loading at around 25% complete until the\nconnection to the beaninfo remote vm times out.  It appears the cause of this is\na bug with Apple\u0027s Java implementations in how it handles the Introspection of\njavabeans.  When Introspecting, it only looks for matching beaninfo based on the\nclass name, not the full package and class name.  So when we introspect SWT\u0027s\nDialog class it tries to load beaninfo for AWT\u0027s Dialog class instead.  And in\nintrospecting AWT\u0027s Dialog, it launches AWT, which causes the well known problem\nof SWT/AWT thread conflicts - which is why the VM freezes (see bug 67384 ).\n\nThe problem with the Introspector was present in Sun\u0027s JREs up till 1.4.2 (which\nis why SWT development with the VE on other platforms requires 1.4.2 or later).\n So it looks like we\u0027ll have to open a bug report against Apple and hope it gets\nlooked at soon.",
    "Thats bad news :(\n\nIt\u0027s the same behaviour with Java 1.5.0 too. Taken how long it took Apple to release 1.5.0 after Suns, I \nguess we will have to wait for a long time for this Bug to get fixed :(\n\nHave you already filed in the Bug, or should I take care of it?\n\nBR;\nMaC",
    "Oh and BTW: grats to your Mac Mini :)",
    "OK, it looks like I jumped the gun at blaming Apple :) Looking into the problem\na little further, I disccovered that AWT is being loaded by simply introspecting\na class with the same name as the SWT class being introspected.  When searching\nfor the explicitBeanInfo for the SWT Dialog class, it first finds the beaninfo\nfor the AWT Dialog class, who\u0027s BeanDescriptor loads the Dialog class itself. \nThis problem appears to be fixed by passing in -Djava.awt.headless\u003dtrue as an\nargument while launching the beaninfo remote vm.\n\nSo right now I have VE opening an SWT class with no errors, but nothing showing\nup in the graphical canvas.  Progress!\n",
    "I\u0027ve managed to get image capture of SWT semi-working within the VE.  However\nSWT switching to using HIView in 3.2 M3 has caused a regression with the capture\nmechanism that prevents the image being captured if the remote vm window is\nobscured or off screen.  See bug 115221.",
    "Created an attachment (id\u003d29400)\nScreenshot of initial working version of SWT\n\nI\u0027ve hacked up an ImageCapture class based on the code bill@hutten.org\nprovided.  The capture mechanism doesn\u0027t work perfectly, nor is it elegant, but\nit\u0027s a start.",
    "Adding Silenio to the CC for consideration of comment #74.",
    "For those interested in VE support for SWT development on OS X, an initial working out of the box version of this is available in the latest integration build of VE (I20051130).  Play around with it, and open bug reports with me (jeff.myers@eclipse.org) as the owner for issues that come up.",
    "Just to provide a status update on this bug report - many improvements towards support for OS X have been made for VE 1.2 M1 - see bug 119355, bug 119549, bug 120250.  On the Swing side, I just addressed bug 120279, so the appearance of JFrames and JDialogs will be much improved in the next VE builds.  I encourage everyone to try out the latest VE build on OS X and report problems in bugzilla.  Special attention should be given toward random lock ups that can occur - if you run into this problem please add a comment to bug 119530.",
    "We\u0027re decided to call OS X supported for SWT and Swing development in VE 1.2.  AWT is still not supported - see bug 123850",
    "Closing now that VE 1.2 is released."
  ],
  "commentCreationDates": [
    "2003-11-28T16:04:07+01:00",
    "2003-11-28T16:05:47+01:00",
    "2003-11-28T16:06:49+01:00",
    "2003-11-28T18:06:13+01:00",
    "2003-12-05T18:30:01+01:00",
    "2003-12-11T19:30:45+01:00",
    "2003-12-12T15:49:08+01:00",
    "2004-04-28T18:14:06+02:00",
    "2004-07-06T05:14:39+02:00",
    "2004-07-22T00:34:17+02:00",
    "2004-07-22T14:23:09+02:00",
    "2004-07-26T07:10:45+02:00",
    "2004-07-26T16:27:22+02:00",
    "2004-08-10T19:27:24+02:00",
    "2004-08-17T02:49:55+02:00",
    "2004-09-22T04:34:01+02:00",
    "2004-09-22T05:34:44+02:00",
    "2004-09-23T23:25:20+02:00",
    "2004-09-24T00:06:55+02:00",
    "2004-09-24T00:11:15+02:00",
    "2004-09-24T00:15:12+02:00",
    "2004-09-24T00:35:05+02:00",
    "2004-09-24T02:31:20+02:00",
    "2004-11-16T19:20:09+01:00",
    "2004-11-22T17:09:59+01:00",
    "2004-11-22T17:17:44+01:00",
    "2004-12-02T21:26:20+01:00",
    "2004-12-03T15:15:05+01:00",
    "2004-12-14T14:54:22+01:00",
    "2005-05-18T21:37:21+02:00",
    "2005-05-19T00:20:38+02:00",
    "2005-05-19T02:05:41+02:00",
    "2005-07-20T12:05:01+02:00",
    "2005-08-17T19:05:15+02:00",
    "2005-08-20T12:02:18+02:00",
    "2005-08-20T16:11:52+02:00",
    "2005-08-22T01:52:57+02:00",
    "2005-08-22T02:42:31+02:00",
    "2005-08-24T14:23:07+02:00",
    "2005-08-24T15:07:39+02:00",
    "2005-08-24T15:14:48+02:00",
    "2005-08-25T13:41:53+02:00",
    "2005-08-25T15:05:02+02:00",
    "2005-08-25T15:08:53+02:00",
    "2005-08-25T15:11:20+02:00",
    "2005-08-25T15:12:38+02:00",
    "2005-08-25T15:15:55+02:00",
    "2005-08-25T15:18:18+02:00",
    "2005-08-25T15:42:27+02:00",
    "2005-08-25T15:50:45+02:00",
    "2005-08-25T15:50:56+02:00",
    "2005-08-25T15:53:51+02:00",
    "2005-08-25T16:17:20+02:00",
    "2005-08-25T17:00:18+02:00",
    "2005-08-25T17:12:05+02:00",
    "2005-08-25T17:39:36+02:00",
    "2005-08-25T18:22:29+02:00",
    "2005-08-25T18:30:56+02:00",
    "2005-08-25T18:52:57+02:00",
    "2005-08-25T19:55:30+02:00",
    "2005-08-25T20:08:08+02:00",
    "2005-08-25T20:17:05+02:00",
    "2005-08-25T21:26:08+02:00",
    "2005-08-25T21:28:24+02:00",
    "2005-09-01T23:16:58+02:00",
    "2005-10-21T16:30:24+02:00",
    "2005-10-21T16:35:50+02:00",
    "2005-10-26T01:04:55+02:00",
    "2005-10-26T01:33:49+02:00",
    "2005-10-26T01:33:58+02:00",
    "2005-10-27T05:35:28+02:00",
    "2005-10-28T00:16:09+02:00",
    "2005-10-28T00:18:48+02:00",
    "2005-10-28T01:21:29+02:00",
    "2005-11-05T23:08:00+01:00",
    "2005-11-07T04:04:16+01:00",
    "2005-11-07T13:47:32+01:00",
    "2005-11-30T23:50:27+01:00",
    "2006-01-16T22:46:35+01:00",
    "2006-05-23T16:12:25+02:00",
    "2006-07-05T17:19:37+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.createProxyFactoryRegistry",
          "source": "Java VisualEditorPart.java:669"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initializeForProject",
          "source": "JavaV isualEditorPart.java:1800"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initialize",
          "source": "JavaVisualEdito rPart.java:1705"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run",
          "source": "JavaVisualEditorPart. java:1588"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:491"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "47716",
      "date": "2003-12-05T18:30:01+01:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart.createProxyFactoryRegistry",
          "source": "Java VisualEditorPart.java:669"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initializeForProject",
          "source": "JavaV isualEditorPart.java:1800"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initialize",
          "source": "JavaVisualEdito rPart.java:1705"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run",
          "source": "JavaVisualEditorPart. java:1588"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:491"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "47716",
      "date": "2003-12-05T18:30:01+01:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "enhancement"
    }
  ],
  "groupId": "47716",
  "bugId": "47716",
  "date": "2003-11-28T16:04:07+01:00",
  "product": "VE",
  "component": "Java Core",
  "severity": "enhancement"
}