{
  "comments": [
    "20020214; jdk 1.3.1\n\nWhen I use the Java browsing view to try to create getters/setters from the \ncontext menu on a class field, there is not entry.  I have to switch back to \nthe regular Java view\n\nI tried to use Self-encapsulate field, but received an internal error (listed \nbelow). This may have been because one of the classes I had open had a syntax \nerror (no closing bracket).\n\n\n\nLog: Wed Feb 20 19:19:09 PST 2002\n1 org.eclipse.help 0 Help System started.\nLog: Wed Feb 20 20:42:47 PST 2002\n4 org.eclipse.jdt.ui 1 Internal Error\njava.lang.reflect.InvocationTargetException: java.lang.ClassCastException: \norg.eclipse.jdt.internal.compiler.lookup.ProblemBinding\n\tat \norg.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForMessageSend\n(DefaultBindingResolver.java:121)\n\tat org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName\n(DefaultBindingResolver.java:100)\n\tat org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer.visit\n(AccessAnalyzer.java:74)\n\tat org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:85)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025)\n\tat org.eclipse.jdt.core.dom.MethodInvocation.accept0\n(MethodInvocation.java:91)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025)\n\tat org.eclipse.jdt.core.dom.ExpressionStatement.accept0\n(ExpressionStatement.java:76)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:76)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025)\n\tat org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:98)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025)\n\tat org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:99)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:76)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025)\n\tat org.eclipse.jdt.core.dom.MethodDeclaration.accept0\n(MethodDeclaration.java:183)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049)\n\tat org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0\n(ClassInstanceCreation.java:118)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025)\n\tat org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0\n(VariableDeclarationFragment.java:96)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049)\n\tat org.eclipse.jdt.core.dom.FieldDeclaration.accept0\n(FieldDeclaration.java:119)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049)\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0\n(TypeDeclaration.java:163)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049)\n\tat org.eclipse.jdt.core.dom.CompilationUnit.accept0\n(CompilationUnit.java:143)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:981)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring.\ncheckInput(SelfEncapsulateFieldRefactoring.java:206)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run\n(CheckConditionsOperation.java:58)\n\tat org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run\n(CreateChangeOperation.java:93)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)",
    "There are also other context menu items that show up in the Java browsing view\nFor example: class context menus should have \"Override methods\" and \"Add \nConstructors from superclass\"",
    "The code generation are in the latest version of the Java browser perspective.\n\nThe SEF problem needs to be investigated whether it still exists.",
    "I tested it in the latest build and it works for me. However the exception is \ngenerated deep inside JDT Core. Moving to JDT Core to clarify if problem could \nstill exist.",
    "That code completely changed since 0214. Now I return null when I got a \nProblemBinding. So this ClassCastException should not happen again.\nWould you have a reproducable test case to be sure this is fixed?\n",
    "Could not reproduce due to chnages in this code. The name resolution has been completely \nrewritten since this PR occured.\nI close this PR for now. If you find the same problem again, \ndon\u0027t hesitate to reopen it."
  ],
  "commentCreationDates": [
    "2002-02-21T01:38:59+01:00",
    "2002-02-21T01:49:06+01:00",
    "2002-03-11T15:04:47+01:00",
    "2002-03-11T15:46:24+01:00",
    "2002-03-11T15:53:46+01:00",
    "2002-03-12T17:52:56+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.compiler.lookup.ProblemBinding",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForMessageSend",
          "source": "DefaultBindingResolver.java:121"
        },
        {
          "method": "org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName",
          "source": "DefaultBindingResolver.java:100"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Name.resolveBinding",
          "source": "Name.java:75"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer.visit",
          "source": "AccessAnalyzer.java:74"
        },
        {
          "method": "org.eclipse.jdt.core.dom.SimpleName.accept0",
          "source": "SimpleName.java:85"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:1025"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodInvocation.accept0",
          "source": "MethodInvocation.java:91"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:1025"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ExpressionStatement.accept0",
          "source": "ExpressionStatement.java:76"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:1049"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:76"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:1025"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TryStatement.accept0",
          "source": "TryStatement.java:98"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:1025"
        },
        {
          "method": "org.eclipse.jdt.core.dom.IfStatement.accept0",
          "source": "IfStatement.java:99"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:1049"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:76"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:1025"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
          "source": "MethodDeclaration.java:183"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:1049"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0",
          "source": "ClassInstanceCreation.java:118"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:1025"
        },
        {
          "method": "org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0",
          "source": "VariableDeclarationFragment.java:96"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:1049"
        },
        {
          "method": "org.eclipse.jdt.core.dom.FieldDeclaration.accept0",
          "source": "FieldDeclaration.java:119"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:1049"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:163"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:1049"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:143"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:981"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring.checkInput",
          "source": "SelfEncapsulateFieldRefactoring.java:206"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:58"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:93"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "10031",
      "date": "2002-02-21T01:38:59+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "10031",
  "bugId": "10031",
  "date": "2002-02-21T01:38:59+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}