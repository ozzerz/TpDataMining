{
  "comments": [
    "Occurs during shutdown\n\nLog: Wed Jan 16 13:35:55 CST 2002\n4 org.eclipse.jdt.debug 120 Internal error logged from JDI Debug: \ncom.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine\n\tat org.eclipse.jdi.internal.request.EventRequestImpl.disable\n(EventRequestImpl.java:173)\n\tat \norg.eclipse.jdi.internal.request.EventRequestManagerImpl.deleteEventRequest\n(EventRequestManagerImpl.java:266)\n\tat org.eclipse.jdt.internal.debug.core.JavaBreakpoint.removeFromTarget\n(JavaBreakpoint.java:473)\n\tat \norg.eclipse.jdt.internal.debug.core.JDIDebugTarget.removeAllBreakpoints\n(JDIDebugTarget.java:1191)\n\tat org.eclipse.jdt.internal.debug.core.JDIDebugTarget.cleanup\n(JDIDebugTarget.java:1163)\n\tat org.eclipse.jdt.internal.debug.core.JDIDebugTarget.shutdown\n(JDIDebugTarget.java:1356)\n\tat org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.shutdown\n(JDIDebugPlugin.java:107)\n\tat org.eclipse.core.internal.plugins.PluginRegistry$2.run\n(PluginRegistry.java:265)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:821)\n\tat org.eclipse.core.internal.plugins.PluginRegistry$1.visit\n(PluginRegistry.java:274)\n\tat org.eclipse.core.internal.plugins.PluginRegistry.accept\n(PluginRegistry.java:45)\n\tat org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins\n(PluginRegistry.java:277)\n\tat org.eclipse.core.internal.plugins.PluginRegistry.shutdown\n(PluginRegistry.java:252)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown\n(InternalPlatform.java:532)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.shutdown\n(InternalBootLoader.java:954)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:883)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:321)\n\tat SlimLauncher.main(SlimLauncher.java:14)",
    "The sequence of events here is as follows:\n\n- JDIDebugTarget#shutdown\n- JDIDebugTarget#terminate (sends request to VM)\n- JDIDebugTarget#removeBreakpoint\n- VM terminates (packet does not reach us yet)\n- JavaBreakpoint checks if the VM is terminated (we don\u0027t know that it is yet)\nand then tries to remove the event request\n- We get a VMDisconnectedException and handle it quietly (writing to the log)\n- VMDeathEvent arrives\n- JDIDebugTarget\u0027s state is updated to terminated\nPossible fixes include:\n- JDIDebugTarget#isTerminated() can return true if isTerminating() is true (this\nwould negatively affect current logic inside the debug target)\n- The isTerminating() method can be promoted to API. Client could then check\nthis flag as well as isTerminated() and isDisconnected()\n- A new \"isAvailable()\" method could be added to the API. This method would\nanswer true if the debug target is available to handle requests. This would\nallow clients to check only one method. Our implementation could then return\nisTerminated() || isTerminating() || isDisconnected() || etc.\n\nI prefer the last option as I think it is what debug target clients want most of\nthe time. A quick browse of our code base shows that we call (isTerminated() ||\nisDisconnected()) all over the place. It would be nice to centralize this logic\nto answer the real question, isAvailable().",
    "The \"client\" (i.e. breakpoint) is internal to the implementation - no API is \nrequired.",
    "Implemented isAvailable() method on JDIDebugTarget and updated internal packages\nof org.eclipse.jdt.debug to call this method.",
    "Please verify.",
    "Verified.\nAdded targetRequestFailed call in JDIStackFrame#isObsolete()",
    "*** Bug 7975 has been marked as a duplicate of this bug. ***",
    "*** Bug 6659 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2002-01-16T19:41:54+01:00",
    "2002-01-29T14:00:03+01:00",
    "2002-01-29T14:26:30+01:00",
    "2002-01-29T19:18:04+01:00",
    "2002-01-29T19:18:16+01:00",
    "2002-01-31T17:50:24+01:00",
    "2002-02-26T19:25:07+01:00",
    "2002-02-26T19:29:03+01:00"
  ],
  "traces": [
    {
      "exceptionType": "com.sun.jdi.VMDisconnectedException",
      "message": "Got IOException from Virtual Machine",
      "elements": [
        {
          "method": "org.eclipse.jdi.internal.request.EventRequestImpl.disable",
          "source": "EventRequestImpl.java:173"
        },
        {
          "method": "org.eclipse.jdi.internal.request.EventRequestManagerImpl.deleteEventRequest",
          "source": "EventRequestManagerImpl.java:266"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.JavaBreakpoint.removeFromTarget",
          "source": "JavaBreakpoint.java:473"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.JDIDebugTarget.removeAllBreakpoints",
          "source": "JDIDebugTarget.java:1191"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.JDIDebugTarget.cleanup",
          "source": "JDIDebugTarget.java:1163"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.JDIDebugTarget.shutdown",
          "source": "JDIDebugTarget.java:1356"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.JDIDebugPlugin.shutdown",
          "source": "JDIDebugPlugin.java:107"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginRegistry$2.run",
          "source": "PluginRegistry.java:265"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:821"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginRegistry$1.visit",
          "source": "PluginRegistry.java:274"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginRegistry.accept",
          "source": "PluginRegistry.java:45"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins",
          "source": "PluginRegistry.java:277"
        },
        {
          "method": "org.eclipse.core.internal.plugins.PluginRegistry.shutdown",
          "source": "PluginRegistry.java:252"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown",
          "source": "InternalPlatform.java:532"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.shutdown",
          "source": "InternalBootLoader.java:954"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:883"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:321"
        },
        {
          "method": "SlimLauncher.main",
          "source": "SlimLauncher.java:14"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "7804",
      "date": "2002-01-16T19:41:54+01:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "7804",
  "bugId": "7804",
  "date": "2002-01-16T19:41:54+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}