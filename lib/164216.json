{
  "comments": [
    "A tester here encountered the following exception when starting an Eclipse session (will attach full stacktrace):\n\njava.lang.NullPointerException\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:357)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:262)\n\tat org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource(WorkbenchResourceHelper.java:387)\n\tat org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource(EditModel.java:680)\n\tat org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryResource(ModuleStructuralModel.java:256)\n\nI believe this can occur because of concurrent accesses to ModuleStructuralModel.getPrimaryResource(), which isn\u0027t thread safe. This stems from org.eclipse.emf.common.util.BasicEList.add() not being thread safe, which comes into play via the \"resources\" field in ResourceSetImpl which is accessed by EditModel.getResourceSet().  I\u0027m starting the bug in wst.common so those more familiar with the WTP code can help determine where synchronization should be added or some other approach taken.  I haven\u0027t examined the EMF documentation, but none of the Javadoc in these two EMF classes mentions whether they are or aren\u0027t thread safe.\n\nSteps to demonstrate in a debug environment:\n\n1. Using Eclipse 3.2.1 and WTP SDK 1.5.2 (assumes EMF 2.2.1), create a new workspace and import plug-ins org.eclipse.emf.common and org.eclipse.emf.ecore.\n\n2. Open types BasicEList and ResourceSetImpl from these plug-ins.\n\n3. Start an Eclipse Application session from this development environment.\n\n4. In this session, create a server runtime and a Dynamic Web Project.  Answer No when asked to switch to the J2EE perspective.\n\n5. Create a Java project and create a new Java class in this project.  At this point you should still be in the Java perspective, the Package Explorer view displayed, and the test class open in an editor.\n\n6. Exit this session.  This workspace is now similar to the one which generated the exception.\n\n7. Set a breakpoint at line 411 in ResourceSetImpl.createResource() (this line contains \"getResources().add(result);\")\n\nYou may need to repeat the following to get this break point to be hit on multiple threads.\n\n8. Delete the contents of the .metadata/.plugins/org.eclipse.jdt.core in the workspace for the prior Eclipse Application session (this ensures the JavaReconciler thread has something to do and helps make multiple thread accesses more reproducible)\n\n9. Start a debug session and hopefully the breakpoint will be hit on multiple threads.  If not, exit the debug session and retry starting at prior step. See attached thread dump.\n\n10. Set a breakpoint at line 1066 in BasicEList,grow() (this line contains \"data \u003d newData(newCapacity);\")\n\n11. Resume each suspended thread once.  The threads should all be stopped at the second break point with \"this\" as the same object (it was for me). See attached thread dump.\n\nThe suspended threads are now poised to corrupt each other\u0027s \"data\" field.  The exception encountered by our tester can occur when one thread sets \"data\" and increments the \"size\" field.  The next thread replaces the\n\"data\" field with a new array and stores its object at index 1 with index 0 now containing null.  This will lead to the null pointer exception.  In a regular WTP 1.5.2 install patched to add a debug println() near line 357 in ResourceSetImpl.getResource() once displayed the following for the \"resources\" EList field returned by ResourceSetImpl.getResources():\n\nBad resources: [null, org.eclipse.wst.common.componentcore.internal.impl.WTPModulesResourceplatform:/resource/InfoMapExample/.settings/org.eclipse.wst.common.component]\n\nAlso, if you import a Dynamic Web Project from WTP 1.0.x, it is easy to create a ConcurrentModificationException. \n\n1. Set a break point at line 356 in ResourceSetImpl (contains \"Resource resource \u003d (Resource)i.next();\")\n\n2. Perform step 8 above.\n\n3. Perform step 9 above.\n\n4. Assuming multiple threads are suspended at line 411, resume one thread.  It should now break at line 356.\n\n5. Resume one of the other threads, which will corrupt the iterator acquired by the thread in step 4.\n\nThis implies you are more likely to encounter this synchronization issue with imported 1.0.x Dynamic Web Projects because ResourceSetImpl.getResource() will be hit extra times while ModuleStructuralModel.getPrimaryResource() searches for the \"component\" file.  This was the case with the tester and the patched WTP 1.5.2 install mentioned above.  It would also seem the odds are increased at startup time since these objects are being recreated.  Plug-in load synchronization also may help funnel these threads into executing the thread unsafe code more concurrently under the right circumstances.\n\nDepending on how this synchronization issue is handled, the fact that ProjectResourceSetImpl\u0027s default constructor sets the ResourceSetImpl.uriResourceMap to an unsynchronized HashMap may also be an issue.  If multiple threads can get into ResouceSetImpl.getResource(), then unsynchronized gets and puts could occur on this HashMap.",
    "Created an attachment (id\u003d53684)\nFull stacktrace of tester\u0027s exception\n\n",
    "Created an attachment (id\u003d53685)\nThread dump for break point in ResourceSetImpl line 411\n\n",
    "Created an attachment (id\u003d53686)\nThread dump for break point in BasicEList line 1066\n\n",
    "Larry - thanks for the excellent step by step description how to recreate this case.\n\nI\u0027m assigning to 1.5.3 for investigation.",
    "Larry, Chuck: Any update on this? BEA is reviewing for possible product inclusion. Thanks.\n",
    "I\u0027m afraid I don\u0027t have anything to add at the moment.  My understanding of the details of the plug-ins involved is still somewhat limited relative to the complexity of this issue, so I\u0027m kind of punting on ideas of how to fix.  I\u0027ll be glad to help test any patches, though. :)",
    "Hi Larry,\n\nI am trying to reproduce this issue in my dev environment. I tried the steps 1-9 several times, but the ProjectResourceSetEditImpl(ResourceSetImpl).createResource(URI) line: 411\t\n\nis hit only in one thread. Is there any additoinal step i need to do, in order to ensure the scenario outlined in your defect occurs?\n\nThanks!",
    "Hi Hari,\n\nIs the development environment you are working with newer than the Eclipse 3.2.1 - WTP 1.5.2 that I used for the original report.  Assuming you are using newer code, if you can provide the details about what is in your workspace and your OS and JRE, I\u0027ll retest using an environment as close as I can to your environment.  Thanks.",
    "Hari,\n\nI retested this using my WTP 2.0 Development environment (running on Ubuntu Linux 6.0.6), which was just upgraded to current Eclipse 3.3M4 and dependencies.  Running the scenario as is, I was also seeing the ResourceSetImpl breakpoint hit on one thread.  However, switching to the J2EE perspective, exiting, and repeating steps 8 and 9 resulted in the breakpoint being hit on two threads.  See if this will work for you.  I\u0027ll attach my thread dump.  Note that in this environment, the ResourceSetImpl breakpoint is now at line 419 and the BasicElist breakpoint is now at line 1100, which are from emf-sdo-xsd-SDK-I200612141025.\n\nI\u0027ll also try a WTP 1.5.3 development environment when I get a chance to see what the story is there too.",
    "Created an attachment (id\u003d57050)\npatch\n\nHi Larry,\n\nI was finally able to reproduce the defect, and have added the synchronization. I have tested it, and was also hoping to see if this patch works in your environment, before I commit the same. I would appreciate it if you could also please test the same. Thanks!",
    "Tested the patch this morning with current WTP 2.0 code and it avoids the problem for me too.  A quick scan of the stacks concurrently hit at this synchronization point didn\u0027t appear to suggest a risk of deadlock.",
    "submitting for internal review before commit",
    "approve.  Checked into both 1.5.3 and 2.0 streams.",
    "fixed.",
    "Verified I\u0027m not seeing this problem any longer using wtp-sdk-M-1.5.3-200701261424.zip.  At this momement, this change has been released to WTP 2.0 HEAD, but not tagged and included in an I build yet.  Since I have previously tested the patch in a WTP 2.0 development environment, feel free to mark this bug verified.  If you want to wait, I\u0027ll verify it for WTP 2.0 when it appears in an I build.",
    "Closing Verified defects",
    "We hit this again using the final 1.5.3 release (contains the fix to StructureEdit)",
    "Changing the target milestone from 1.5.3 so that this doesn\u0027t get misrepresented - I\u0027ll set to 1.5.4 as a default but please change or unset as appropriate.",
    "I\u0027m untargetting this defect for now until we have a new scenario/testcase provided.  The latest fix did resolve the original issue.",
    "Not going to tackle this one now.....  moving to 202"
  ],
  "commentCreationDates": [
    "2006-11-11T12:57:42+01:00",
    "2006-11-11T12:59:20+01:00",
    "2006-11-11T13:00:42+01:00",
    "2006-11-11T13:01:42+01:00",
    "2006-11-15T15:32:47+01:00",
    "2006-11-27T18:20:17+01:00",
    "2006-11-27T19:27:16+01:00",
    "2006-12-12T20:17:44+01:00",
    "2006-12-12T22:05:09+01:00",
    "2006-12-16T16:32:08+01:00",
    "2007-01-17T22:57:22+01:00",
    "2007-01-18T15:31:05+01:00",
    "2007-01-18T15:37:41+01:00",
    "2007-01-23T20:09:34+01:00",
    "2007-01-23T21:46:49+01:00",
    "2007-01-30T19:05:40+01:00",
    "2007-02-07T19:40:07+01:00",
    "2007-03-15T19:39:42+01:00",
    "2007-03-15T19:42:10+01:00",
    "2007-03-16T17:52:30+01:00",
    "2007-09-11T15:56:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:357"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource",
          "source": "ProjectResourceSetImpl.java:262"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource",
          "source": "WorkbenchResourceHelper.java:387"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource",
          "source": "EditModel.java:680"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryResource",
          "source": "ModuleStructuralModel.java:256"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "164216",
      "date": "2006-11-11T12:57:42+01:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "major"
    }
  ],
  "groupId": "164216",
  "bugId": "164216",
  "date": "2006-11-11T12:57:42+01:00",
  "product": "Web Tools",
  "component": "wst.common",
  "severity": "major"
}