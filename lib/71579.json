{
  "comments": [
    "Opening bug to track investigation of latest round of test failures. Failures occur only on GTK and only \nin 3.1 stream (they pass on 3.0.1).\n\nFailures are the result of empty selections\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nVariable references empty selection: ${project_loc}\n\norg.eclipse.core.runtime.CoreException: Variable references empty selection: ${project_loc}\nat org.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.abort(ResourceResolver.java:104)\nat \norg.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.getSelectedResource(ResourceResolve\nr.java:117)\nat \norg.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.resolveValue(ResourceResolver.java:\n40)\nat org.eclipse.core.internal.variables.DynamicVariable.getValue(DynamicVariable.java:54)\nat org.eclipse.core.internal.variables.StringSubstitutionEngine.resolve(StringSubstitutionEngine.java:\n267)\nat org.eclipse.core.internal.variables.StringSubstitutionEngine.substitute(StringSubstitutionEngine.java:\n192)\nat \norg.eclipse.core.internal.variables.StringSubstitutionEngine.performStringSubstitution(StringSubstitution\nEngine.java:86)\nat \norg.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution(StringVariableMana\nger.java:549)\nat \norg.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution(StringVariableMana\nger.java:341)\nat org.eclipse.jdt.debug.tests.core.StringSubstitutionTests.doSubs(StringSubstitutionTests.java:171)\nat \norg.eclipse.jdt.debug.tests.core.StringSubstitutionTests.testProjectLocSelectFolder(StringSubstitutionTe\nsts.java:453)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:53)\nat java.lang.Thread.run(Thread.java:534)",
    "CC DarinS and Nick. Failures are similar to those resolved in bug 57642",
    "There\u0027ve been no recent changes to the areas fixed for bug 57642.  It should\nstill be avoiding opening ErrorDialogs when running the tests.  If you can\nreproduce the failures locally, you could try setting a breakpoint in\nErrorDialog.open to verify.  If that\u0027s not called, try Shell.open().\n",
    "I haven\u0027t been able to reproduce the errors, but I don\u0027t have a GTK machine to run the tests on. I also \ncan\u0027t find any difference between the debug code in HEAD and the R_3_0_maintenance branch, yet the \ntests are failing in the I builds and passing in the M builds. \nLuc, have you had any luck reproducing the test failures?",
    "And now the tests decide to pass for a few nightly builds :-)",
    "Finally able to reproduce some selection failures.\n\nLaunch test suite, in target turn off the following \"Run/Debug\" preferences:\n-Activate workbench when a breakpoint is hit\n-Activate the Debug View when a breakpoint is hit\n-Console/Show when program writes to standard out\n-Console/Show when program writes to standard err\nBring another window to the the top and allow test suite to run w/o focus.\n\nThese preferences should be on by default and shouldn\u0027t normally be changed for the test run. Could \nstarting the tests remotely have a similar effect?",
    "This looks similar to the problem in bug 57642 - i.e. when a window is \ndeactivated, the SelectedResourceManager removes itself as a selection \nlistener and no longer contains a selection.\n\nTo avoid the problem, I have changed the SelectedResourceManager to remove \nitself from selection change notifications only when a window is closed. \nOtherwise, a stack of windows is maintained, and the active or last opened \nwindow is placed on top of the stack. We only listen to selection changes in \nthe top window. This means that the manager works even when another \napplication/dialog is active.",
    "Please verify, Kevin.",
    "verified"
  ],
  "commentCreationDates": [
    "2004-08-06T17:55:21+02:00",
    "2004-08-06T17:57:35+02:00",
    "2004-08-06T18:40:27+02:00",
    "2004-08-06T21:18:36+02:00",
    "2004-08-09T16:01:42+02:00",
    "2004-08-09T21:51:15+02:00",
    "2004-08-09T23:00:52+02:00",
    "2004-08-09T23:03:25+02:00",
    "2004-08-10T04:46:58+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Variable references empty selection: ${project_loc}",
      "elements": [
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.abort",
          "source": "ResourceResolver.java:104"
        },
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.getSelectedResource",
          "source": "ResourceResolve r.java:117"
        },
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.resolveValue",
          "source": "ResourceResolver.java: 40"
        },
        {
          "method": "org.eclipse.core.internal.variables.DynamicVariable.getValue",
          "source": "DynamicVariable.java:54"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringSubstitutionEngine.resolve",
          "source": "StringSubstitutionEngine.java: 267"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringSubstitutionEngine.substitute",
          "source": "StringSubstitutionEngine.java: 192"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringSubstitutionEngine.performStringSubstitution",
          "source": "StringSubstitution Engine.java:86"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution",
          "source": "StringVariableMana ger.java:549"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution",
          "source": "StringVariableMana ger.java:341"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.core.StringSubstitutionTests.doSubs",
          "source": "StringSubstitutionTests.java:171"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.core.StringSubstitutionTests.testProjectLocSelectFolder",
          "source": "StringSubstitutionTe sts.java:453"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.DebugSuite$1.run",
          "source": "DebugSuite.java:53"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "71579",
      "date": "2004-08-06T17:55:21+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "71579",
  "bugId": "71579",
  "date": "2004-08-06T17:55:21+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}