{
  "comments": [
    "Please find the junit project attached below. You can run the \nTestStandaloneAdapter.java class to get the error ....\nException:\norg.eclipse.hyades.execution.runtime.datapool.DatapoolException: IWAT3056E \nDatapool could not be loaded from file \nD:\\eclipse\\workspace\\com.ibm.etools.logging.adapter.config.tests\\junit\\standalo\nne\\TestStandaloneAdapter.datapool\norg.eclipse.hyades.execution.runtime.datapool.DatapoolException: IWAT3056E \nDatapool could not be loaded from file \nD:\\eclipse\\workspace\\com.ibm.etools.logging.adapter.config.tests\\junit\\standalo\nne\\TestStandaloneAdapter.datapool\n\tat \norg.eclipse.hyades.models.common.datapool.impl.Common_DatapoolFactoryImpl.loadF\norEdit(Common_DatapoolFactoryImpl.java:272)\n\tat \norg.eclipse.hyades.models.common.datapool.impl.Common_DatapoolFactoryImpl.load\n(Common_DatapoolFactoryImpl.java:399)\n\tat \ncom.ibm.etools.logging.adapter.config.tests.DefaultTestCase.invokeTestCases\n(DefaultTestCase.java:39)\n\tat \ncom.ibm.etools.logging.adapter.config.tests.TestStandaloneAdapter.suite\n(TestStandaloneAdapter.java:35)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.getTest\n(RemoteTestRunner.java:403)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests\n(RemoteTestRunner.java:445)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run\n(RemoteTestRunner.java:344)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main\n(RemoteTestRunner.java:196)",
    "Created an attachment (id\u003d25057)\nProject containing the required files\n",
    "There were a couple of problems with this project, but I also found a few \nrelated defects which I will open and add references to.  Attached is a \nmodified version of your project that can properly use datapools.  The changes \nI made were:\n\n1) I created a deployment that maps an artifact (which references your test \nsuite and datapool) to a location (which is the machine on which you want the \ntest to run.)  Even if you\u0027re running on the local machine, you need to use a \ncustom deployment if you want to use a datapool, because otherwise the test \ninfrastructure doesn\u0027t know about the existance of your datapool.\n\n2) There was a change made in 4.0 to avoid conflicts when multiple users are \nrunning tests on the same machine.  The change appends the username of the \nuser running the test to the deployment directory.  Since the test script \nneeds to reference the datapool\u0027s location, and since the JVM\u0027s working \ndirectory is the deployment dir (without the username appended), this causes a \nproblem.  I\u0027ll file a defect to have this fixed properly, but for now, you can \naddress this by specifying the Username property in the location so the \nusrename is consistent when the test is run (look at the localhost.location \nfile I created to see this), and then including the username in the path you \npass as the datapool\u0027s path (see the change I made to line 39 of \nDefaultTestCase.java)\n\n3) I corrected the pathname of the iterator class in line 40 of \nDefaultTestCase.java\n\nI also moved the datapool to the root of your project, but that wasn\u0027t \nnecessary.  You should be able to move it back to the same directory that your \ntest suite is in (just be sure to modify the artifact to map the datapool from \nits new path, and to modify the test script to add back in those portions of \nthe path.)\n\nTo run the test in this project, it must be in your workspace root.  This is \nanother defect I will file today.  If you unzip the project into your \nworkspace and then open it, it will be fine.  If you unzip it to a location \nother than the workspace root and then import existing project into workspace, \nit will still fail.  That is not a regression, but should be fixed in 4.1.\n\nHaving said all that, you should be able to run the test now, by specifying \nthe TestrStandalone.deploy as your deployment.  I have atached the execution \nhistory I got when running it.\n\nI\u0027m closing this defect as WORKSFORME, but will open 3 others which will be \nspecific to the problems I encountered getting this to run.\n",
    "Created an attachment (id\u003d25178)\nProject with changes to that datapool will be used\n\nAdding modified project",
    "Created an attachment (id\u003d25179)\nExecution History from run that used datapool\n",
    "ACTION: Please verify/close this defect.",
    "closing"
  ],
  "commentCreationDates": [
    "2005-07-20T18:26:26+02:00",
    "2005-07-20T18:28:49+02:00",
    "2005-07-22T15:57:02+02:00",
    "2005-07-22T15:58:10+02:00",
    "2005-07-22T16:00:04+02:00",
    "2006-11-16T14:02:53+01:00",
    "2006-11-20T18:47:13+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.hyades.execution.runtime.datapool.DatapoolException",
      "message": "IWAT3056E  Datapool could not be loaded from file  D:\\eclipse\\workspace\\com.ibm.etools.logging.adapter.config.tests\\junit\\standalo ne\\TestStandaloneAdapter.datapool",
      "elements": [
        {
          "method": "org.eclipse.hyades.models.common.datapool.impl.Common_DatapoolFactoryImpl.loadForEdit",
          "source": "Common_DatapoolFactoryImpl.java:272"
        },
        {
          "method": "org.eclipse.hyades.models.common.datapool.impl.Common_DatapoolFactoryImpl.load",
          "source": "Common_DatapoolFactoryImpl.java:399"
        },
        {
          "method": "com.ibm.etools.logging.adapter.config.tests.DefaultTestCase.invokeTestCases",
          "source": "DefaultTestCase.java:39"
        },
        {
          "method": "com.ibm.etools.logging.adapter.config.tests.TestStandaloneAdapter.suite",
          "source": "TestStandaloneAdapter.java:35"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.getTest",
          "source": "RemoteTestRunner.java:403"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:445"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:344"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main",
          "source": "RemoteTestRunner.java:196"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "104524",
      "date": "2005-07-20T18:26:26+02:00",
      "product": "TPTP Testing",
      "component": "Test.Execution",
      "severity": "major"
    }
  ],
  "groupId": "104524",
  "bugId": "104524",
  "date": "2005-07-20T18:26:26+02:00",
  "product": "TPTP Testing",
  "component": "Test.Execution",
  "severity": "major"
}