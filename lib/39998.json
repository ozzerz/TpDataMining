{
  "comments": [
    "Eclipse 2.1, build 200303272130\n\nI have a Java project where all of the sudden \"synchronize\" shows \"bin\" \ndirectory as unadded, although it\u0027s been in .cvsignore forever (and is still \npresent in the file).",
    "Try and turn off auto-build, delete /bin then build and sync. Also double check\nthat .cvsignore is still as you expected.",
    "Yep, .cvsignore still contained \"bin\". Deleting bin directory, then rebuilding\nand syncing fixed the problem. I kept a copy of the workspace if you want to\ninvestigate this further.",
    "It just happened to me today. But was not able to debug because it was in my dev\neclipse.",
    "When this happens, it is usually because the bin folder exists remotely. On \ncheckout, the bin folder is pruned because it is empty and is then recreated \nby the builder. The CVS delta listener misses the create because it is \nlistening to pre-build deltas so the bin folder\u0027s folder-sync-info is not \nproperly reinstated but it is still managed by it\u0027s parent. ence, the folder \nis shown as an outgoing addition. I thought there was already a bug for this \nbut couldn\u0027t find it. However, bug 24982 looks related. ",
    "This is correct, an empty \"bin\" folder existed in the repository. I\u0027m not sure \nif you consider behaviour described in the previous comment something that \nneeds fixing or if the bug can be closed as invalid or wontfix.",
    "It is a bug that we would like to fix but is complicated.",
    "I believe this bug was fixed as a side effect of work for intermitant deltas \nand background build. Will verify.",
    "Build 200310230800\n\nI have seen this problem with respect to my bin directory - which is local - \nbut my project does point to source code remotely via linked resource folders.  \nSometimes when I synchronize some of the bin directory files are picked up as \nincoming changes - in particular files that are not class files and whose \ntimestamp hasn\u0027t changed.  I cannot reliably reproduce the behavior, so I\u0027m not \nsure what leads to the situation.",
    "Lynne, your problem is a differnet issue. Is your Linked source folder also \nmapped to CVS by another project in your workspace? Could you give more \ndetails on your project setup so we can try and duplicate the problem?",
    "I have verified that the original problem is fixed. Leaving open to address \nthe subsequent problem reported by Lynne.",
    "No my linked folders are not mapped to another project within my workspace.  \n\nI am working on an embedded platform version of SWT.  In my project, I have my \nplatform specific code locally and then I use linked resource folders to point \nto the non-platform specific code in the SWT project.  I use an ant script to \nanonymously check out a specific version of the SWT project and I put the code \nin a directory on the lan.  My linked folders point to subfolders in this \ndirectory.\n\nMy problem may have been due to me hacking.  I have 8 linked resource folders.  \nI needed to change the path specification for these (i.e., the locations were \nreferencing a mapped drive, I wanted to reference the network location \ndirectly) and instead of removing and adding back each linked folder I went to \nmy .project file and changed the locations by hand.  Could this somehow confuse \nCVS?  Didn\u0027t seem like it would to me, but if so, I realize this is not \nstandard operating procedure, so you can close the report.  I will reopen it if \nI see the behavior again (under normal usage scenarios).",
    "Just tried changing linked resource folder locations via the .project file on \nLinux (Build 20030823) and did not have any bin sync problems.",
    "Closing",
    "I still see this bug every so often with respect to my bin directory.  I also \nget the following walkback every so often - not sure if they\u0027re related.\n\nI\u0027m running with Build id: 200311211210.\n\n!ENTRY org.eclipse.team.cvs.core 4 0 Dec 03, 2003 17:07:40.701\n!MESSAGE The parent folder of managed \nfile /org.eclipse.swt.phx/bin/library/callback.c does not have sync info \nassociated with it.\n!STACK 1\norg.eclipse.team.internal.ccvs.core.CVSException: The parent folder of managed \nfile /org.eclipse.swt.phx/bin/library/callback.c does not have sync info \nassociated with it.\n\tat \norg.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResource\nFor(CVSWorkspaceRoot.java:474)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResource\nFor(CVSWorkspaceRoot.java:455)\n\tat \norg.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getRemoteResource\n(BaseSynchronizer.java:85)\n\tat \norg.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getBaseResource\n(CVSSyncTreeSubscriber.java:169)\n\tat org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo\n(CVSSyncTreeSubscriber.java:188)\n\tat org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit\n(CVSWorkspaceSubscriber.java:202)\n\tat org.eclipse.core.internal.resources.Resource$2.visit\n(Resource.java:103)\n\tat org.eclipse.core.internal.resources.Resource$1.visitElement\n(Resource.java:53)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration\n(ElementTreeIterator.java:76)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration\n(ElementTreeIterator.java:80)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration\n(ElementTreeIterator.java:80)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration\n(ElementTreeIterator.java:80)\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.iterate\n(ElementTreeIterator.java:119)\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:63)\n\tat org.eclipse.core.internal.resources.Resource.accept\n(Resource.java:101)\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:88)\n\tat \norg.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync\n(CVSWorkspaceSubscriber.java:198)\n\tat \norg.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOf\nSync(SubscriberEventHandler.java:183)\n\tat \norg.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEven\nt(SubscriberEventHandler.java:291)\n\tat \norg.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents\n(BackgroundEventHandler.java:248)\n\tat org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run\n(BackgroundEventHandler.java:122)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)\n!ENTRY org.eclipse.team.cvs.core 4 -6 Dec 03, 2003 17:07:40.701\n!MESSAGE The parent folder of managed \nfile /org.eclipse.swt.phx/bin/library/callback.c does not have sync info \nassociated with it.\n\n",
    "I suspect this is a problem with CVS folders in the linked directory being \ncopied to the bin directory. I\u0027ll have a look at this in M7.",
    "This bug still appears in M8. I have subfolders in my target directory that\nEclipse wants to add to cvs when i run \u0027synchronize with repository\u0027, but this\ndirectory is inside both .cvsignore and Eclipse\u0027s team/ignored resources.",
    "Could this have something to do with timestamps? For example, I have directories\nsuch as dist and conf that are created during the build process, and deleted\nduring a clean build. The directories are in .cvsignore, and they don\u0027t exist in\nthe repository. Nevertheless Eclipse wants to add them whenever I do a CVS\nsynch. I tried marking every jar as \"derived\", but this information seems to be\nlost when the jars are deleted and recreated.\nThe problem was present in the 2.1 branch, and now on 3.0 M7 (Build ID\n200402122000). I\u0027m using the Linux-GTK version on SuSE 8.2 Pro.\nThe \"Remove from View\" feature in 2.1 helped ameliorate this (see bug #53491).\n",
    "I have the same problem. I have a directory (target) that I have \nunintentionnally added to CVS. So it\u0027s there on the server side. However, I do \nnot want this directory to be considered when performing sync operations in \nEclipse. I have added it to my .cvsignore file. However, the Eclipse team \nintegration seem to trust the server side before it trusts a .cvsignore file. \nCould the logic be reversed (as in all other cvs clients I have used: \nTortoiseCVS, etc) so that if the dir is in .cvsignore it is not considered \nduring any CVS operations?\n\nThanks.\n-Vincent",
    "Re: Comment #18: Without this behavior, the synchronize operaton for CVS could \nbe extremely long running. If you created a directory that really souldn\u0027t be \nthere, you should delete it from the server and re-checkout your project. Then \neverything will work as you expect.",
    "We have added \"Remove from view\" back to the sync view. Our position on \nexternal copying of file structures contraining CVS meta-information into \nignord folders is that the builder or script doing the copying should try and \npurge the CVS folders before doing the refresh. If this is not possible, the \nCVS client in Eclipse does it\u0027s best to handle thew situation but in some \ncases entries may appear in the sync view. User should just perform a \"Remove \nfrom View\" on such entries."
  ],
  "commentCreationDates": [
    "2003-07-14T05:03:36+02:00",
    "2003-07-15T03:43:05+02:00",
    "2003-07-15T16:54:35+02:00",
    "2003-07-17T03:28:31+02:00",
    "2003-07-17T14:43:23+02:00",
    "2003-07-17T16:26:42+02:00",
    "2003-07-17T16:45:53+02:00",
    "2003-10-22T02:46:05+02:00",
    "2003-10-30T16:25:31+01:00",
    "2003-10-30T21:01:22+01:00",
    "2003-10-30T21:35:11+01:00",
    "2003-10-31T15:16:39+01:00",
    "2003-10-31T15:43:52+01:00",
    "2003-10-31T17:20:11+01:00",
    "2003-12-03T22:33:57+01:00",
    "2003-12-04T14:14:24+01:00",
    "2004-03-29T11:51:31+02:00",
    "2004-03-31T08:08:56+02:00",
    "2004-05-14T17:06:52+02:00",
    "2004-05-14T20:20:05+02:00",
    "2004-05-14T22:49:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.team.internal.ccvs.core.CVSException",
      "message": "The parent folder of managed  file /org.eclipse.swt.phx/bin/library/callback.c does not have sync info  associated with it.",
      "elements": [
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourceFor",
          "source": "CVSWorkspaceRoot.java:474"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteResourceFor",
          "source": "CVSWorkspaceRoot.java:455"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.syncinfo.BaseSynchronizer.getRemoteResource",
          "source": "BaseSynchronizer.java:85"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getBaseResource",
          "source": "CVSSyncTreeSubscriber.java:169"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo",
          "source": "CVSSyncTreeSubscriber.java:188"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber$1.visit",
          "source": "CVSWorkspaceSubscriber.java:202"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$2.visit",
          "source": "Resource.java:103"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$1.visitElement",
          "source": "Resource.java:53"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:76"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:80"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:80"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:80"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.iterate",
          "source": "ElementTreeIterator.java:119"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:63"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:101"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:88"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.getAllOutOfSync",
          "source": "CVSWorkspaceSubscriber.java:198"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.getAllOutOfSync",
          "source": "SubscriberEventHandler.java:183"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent",
          "source": "SubscriberEventHandler.java:291"
        },
        {
          "method": "org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents",
          "source": "BackgroundEventHandler.java:248"
        },
        {
          "method": "org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run",
          "source": "BackgroundEventHandler.java:122"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "39998",
      "date": "2003-12-03T22:33:57+01:00",
      "product": "Platform",
      "component": "Team",
      "severity": "normal"
    }
  ],
  "groupId": "39998",
  "bugId": "39998",
  "date": "2003-07-14T05:03:36+02:00",
  "product": "Platform",
  "component": "Team",
  "severity": "normal"
}