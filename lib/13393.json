{
  "comments": [
    "Steps to reproduce\n\n1. Start new workspace and import attached project p1 into it.\n\n2. Make sure that all jar files referenced by p1 are accessible. To be honest, \nI took arbitrary nine jar files and weblogic.jar (because of its gigantic size \nof 26 megs), you probably should not be too concerned about exact set of jar \nfiles.\n\n3. It takes more then 30 seconds to open p1/src/test1/Test1.java file in java \neditor, Cpu is 100% utilized but no disk trashing. Editing the file is also \nsomewhat awkward.\n\nI?m running Win2k/SP2, 512M RAM, PIII/600. Eclipse 20020409, Sun JDK 1.3.1-b24.\n\n\n\nPS: following is an example of thread dump available when running Eclipse with -\nconsoleLog option:\n\n\"main\" prio\u003d5 tid\u003d0x234778 nid\u003d0x724 runnable [0x6e000..0x6fc34]\n\tat org.eclipse.jdt.internal.core.util.LRUCache.privateAdd\n(LRUCache.java:295)\n\tat org.eclipse.jdt.internal.core.OverflowingLRUCache.put\n(OverflowingLRUCache.java:349)\n\tat org.eclipse.jdt.internal.core.JavaModelCache.putInfo\n(JavaModelCache.java:132)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.putInfo\n(JavaModelManager.java:858)\n\tat \norg.eclipse.jdt.internal.core.JarPackageFragmentRoot.computeJarChildren\n(JarPackageFragmentRoot.java:305)\n\tat org.eclipse.jdt.internal.core.JarPackageFragmentRoot.computeChildren\n(JarPackageFragmentRoot.java:183)\n\tat org.eclipse.jdt.internal.core.PackageFragmentRoot.generateInfos\n(PackageFragmentRoot.java:170)\n\tat org.eclipse.jdt.internal.core.Openable.buildStructure\n(Openable.java:63)\n\tat org.eclipse.jdt.internal.core.Openable.openWhenClosed\n(Openable.java:394)\n\tat org.eclipse.jdt.internal.core.PackageFragmentRoot.openWhenClosed\n(PackageFragmentRoot.java:325)\n\tat org.eclipse.jdt.internal.core.JarPackageFragmentRoot.openWhenClosed\n(JarPackageFragmentRoot.java:592)\n\tat org.eclipse.jdt.internal.core.JavaElement.openHierarchy\n(JavaElement.java:497)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo\n(JavaElement.java:287)\n\tat org.eclipse.jdt.internal.core.JavaElement.getChildren\n(JavaElement.java:244)\n\tat org.eclipse.jdt.internal.core.NameLookup.seekPackageFragments\n(NameLookup.java:501)\n\tat org.eclipse.jdt.internal.core.NameLookup.findType\n(NameLookup.java:355)\n\tat org.eclipse.jdt.internal.core.SearchableEnvironment.find\n(SearchableEnvironment.java:49)\n\tat org.eclipse.jdt.internal.core.SearchableEnvironment.findType\n(SearchableEnvironment.java:128)\n\tat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType\n(LookupEnvironment.java:85)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage\n(PackageBinding.java:166)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findOnDemandImport\n(CompilationUnitScope.java:272)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleTypeImpo\nrt(CompilationUnitScope.java:327)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports\n(CompilationUnitScope.java:222)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes\n(CompilationUnitScope.java:258)\n\tat org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:559)\n\tat org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.resolve\n(CompilationUnitProblemFinder.java:151)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.buildStructure\n(CompilationUnit.java:80)\n\tat org.eclipse.jdt.internal.core.Openable.openWhenClosed\n(Openable.java:394)\n\tat org.eclipse.jdt.internal.core.WorkingCopy.openWhenClosed\n(WorkingCopy.java:303)\n\tat org.eclipse.jdt.internal.core.Openable.open(Openable.java:330)\n\tat org.eclipse.jdt.internal.core.WorkingCopy.open(WorkingCopy.java:283)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy\n(CompilationUnit.java:587)\n\tat \norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle\nmentInfo(CompilationUnitDocumentProvider.java:355)\n\tat org.eclipse.ui.texteditor.AbstractDocumentProvider.connect\n(AbstractDocumentProvider.java:247)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput\n(AbstractTextEditor.java:1503)\n\tat org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput\n(JavaEditor.java:479)\n\tat \norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput\n(CompilationUnitEditor.java:932)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor.init\n(AbstractTextEditor.java:1146)\n\tat org.eclipse.ui.internal.EditorManager.createSite\n(EditorManager.java:485)\n\tat org.eclipse.ui.internal.EditorManager.access$1\n(EditorManager.java:483)\n\tat org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:467)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)\n\tat org.eclipse.ui.internal.EditorManager.openInternalEditor\n(EditorManager.java:460)\n\tat org.eclipse.ui.internal.EditorManager.openInternalEditor\n(EditorManager.java:529)\n\tat org.eclipse.ui.internal.EditorManager.openEditor\n(EditorManager.java:361)\n\tat org.eclipse.ui.internal.EditorManager.openEditor\n(EditorManager.java:274)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor\n(WorkbenchPage.java:1567)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor\n(WorkbenchPage.java:1474)\n\tat org.eclipse.ui.actions.OpenFileAction.openFile\n(OpenFileAction.java:91)\n\tat org.eclipse.ui.actions.OpenSystemEditorAction.run\n(OpenSystemEditorAction.java:91)\n\tat org.eclipse.ui.views.navigator.OpenActionGroup.runDefaultAction\n(OpenActionGroup.java:102)\n\tat \norg.eclipse.ui.views.navigator.ResourceNavigatorActionGroup.runDefaultAction\n(ResourceNavigatorActionGroup.java:152)\n\tat org.eclipse.ui.views.navigator.ResourceNavigator.handleOpen\n(ResourceNavigator.java:441)\n\tat org.eclipse.ui.views.navigator.ResourceNavigator$6.open\n(ResourceNavigator.java:245)\n\tat org.eclipse.jface.viewers.StructuredViewer.fireOpen\n(StructuredViewer.java:300)\n\tat org.eclipse.jface.viewers.StructuredViewer.handleOpen\n(StructuredViewer.java:460)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$2.handleOpen\n(AbstractTreeViewer.java:633)\n\tat org.eclipse.jface.util.OpenStrategy.handleOpen(OpenStrategy.java:134)\n\tat org.eclipse.jface.util.OpenStrategy.access$5(OpenStrategy.java:131)\n\tat org.eclipse.jface.util.OpenStrategy$8.handleEvent\n(OpenStrategy.java:299)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent\n(OpenStrategy.java:115)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:819)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:777)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:190)\n\tat org.eclipse.core.launcher.Main.run(Main.java:549)\n\tat org.eclipse.core.launcher.Main.main(Main.java:390)",
    "Created an attachment (id\u003d571)\nExample project\n",
    "I also have weblogic.jar on my classpath and am experiencing the same problems. \nBuild 0328 opened large or small files in the Java Editor in \u003c 2 seconds. \nBuilds 040x require 15-30 seconds to open even the smallest files. During the \nwait, the CPU is pegged 100%. The new builds are unusable in this state.",
    "Several issues here... currently, even when disabling temporary problems in \neditor, the infrastructure still computes them. We will make sure not to do so \nanymore (which should bring you back to previous performance if no problem is \ndisplayed).\n\nWe still need to optimize the computation of these problems (looks like it is \ncausing some heavy cache flushing - due to the nature of the compiler name \nenvironment used there - SearchableEnvironment against the JavaModel).\n\nLooks like UI also did perform tons of unnecessary refresh (this should be \nimproved in today\u0027s integration build too).\n\nKeeping this bug open until we have decent performance on big files with error \ndetection enabled.",
    "I downloaded the 20020411 build last night and experienced minimal if any \nperformance improvement. Note: I was running w/\"temporary problems\" disabled.",
    "I think that the performance slowdown has everything todo with the number of \nclasses in the projects build-path.\n\nWith weblogic.jar (which is about 25 megs) in the buildpath, it easily takes 30 \nseconds with 100% CPU to open a file containing a servlet.\n\nCode-assist is also equally unusable for such files - 20-30 seconds of 100% CPU \nto process a \"this.\u003cctrl-space\u003e\"\n\nIf I remove weblogic.jar from the classpath and replace it with servlet.jar \nfrom tomcat (40K) then it takes less than a second to open the file.\n\nUnfortunately, it makes builds \u003e\u003d 20020404 pretty much unusable it you are \nforced to have large .jar files in your build path.\n\nI have tried playing around with the settings in the editor that have to do \nwith parsing the file, but I didn\u0027t find anything that makes a difference.",
    "\u003ecurrently, even when disabling temporary problems in \n\u003eeditor, the infrastructure still computes them. We will make sure not to do so \n\u003eanymore (which should bring you back to previous performance if no problem is \n\u003edisplayed).\n\ncan you tell when this workaround will be fixed (build ??)  ???? \n\n\n\n",
    "Is it too late to get it in M5 ? In reality, it makes Eclipse nearly unusable, \nsince I have projects that depend heavily upon the weblogic.* classes.\n\nNot getting this fixed in M5 would really mean I have to wait for M6, and keep \nusing M4 until then.",
    "As soon as we have a good fix for this one, we will post it as a patch for M5 \non the JDT/Core dev page.\n\nFor M5, we did ensure that the editor would not attempt to compute errors if \nexplicitely told not to (temporary problems setting).\n\nNow on the good new, we think we know what is going on. The JavaModel cache \nisn\u0027t able to scale to address large workspaces, containing more than a 1000 \npackages at once. It will enter a mode where every single Java operation is \nreally expensive... we are working on a patch, and we plan to post it asap to \nget some feedback.\n\n",
    "Great, as long as I can turn it off in the settings, I can use it.\n\nThanks.",
    "A performance patch is posted on Jdt/Core resource dev page.\nFeedback would be much appreciated.\n\nLink to patch: http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-\nhome/org.eclipse.jdt.core239b.zip\n\n",
    "Philippe, am I correct that the \"\u003e1000 packages in workspace\" performance \nproblems experienced in all 040x builds thus far will only appear in M5 if \nthe \"temporary problems\" setting is enabled?",
    "Since M5 isn\u0027t available yet, I applied the patch to the latest integration \nbuild (0412).\n\nApart from an entry in the errorlog first time I restarted eclipse, it seems to \nwork perfectly.\n\nI have included the entry from the error-log, but it only occured the first \ntime I restarted, not subsequent times.\n\n\u003clog-entry date\u003d\"Mon Apr 15 20:11:57 CEST 2002\"\u003e\n  \u003cstatus\n     plugin-id\u003d\"org.eclipse.ui\"\n     severity\u003d\"WARNING\"\n     message\u003d\"Problems occurred when invoking code from plug-in: \norg.eclipse.ui.\"\n     code\u003d\"2\"\u003e\n    \u003cexception\n       message\u003d\"org.eclipse.jdt.internal.core.Buffer\"\n       trace\u003d\"\njava.lang.ClassCastException: org.eclipse.jdt.internal.core.Buffer\n        at \norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle\nmentInfo(CompilationUnitDocumentProvider.\njava:429)\n        at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect\n(AbstractDocumentProvider.java:247)\n        at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput\n(AbstractTextEditor.java:1503)\n        at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput\n(JavaEditor.java:479)\n        at \norg.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput\n(CompilationUnitEditor.java:932)\n        at org.eclipse.ui.texteditor.AbstractTextEditor.init\n(AbstractTextEditor.java:1146)\n        at org.eclipse.ui.internal.EditorManager.createSite\n(EditorManager.java:485)\n        at org.eclipse.ui.internal.EditorManager.access$1\n(EditorManager.java:483)\n        at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:467)\n        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)\n        at org.eclipse.ui.internal.EditorManager.openInternalEditor\n(EditorManager.java:460)\n        at org.eclipse.ui.internal.EditorManager.openInternalEditor\n(EditorManager.java:529)\n        at org.eclipse.ui.internal.EditorManager.access$3\n(EditorManager.java:524)\n        at org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:636)\n        at org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:838)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:411)\n        at org.eclipse.ui.internal.EditorManager.restoreState\n(EditorManager.java:590)\n        at org.eclipse.ui.internal.WorkbenchPage.restoreState\n(WorkbenchPage.java:1708)\n        at org.eclipse.ui.internal.WorkbenchPage.\u0026lt;init\u0026gt;\n(WorkbenchPage.java:308)\n        at org.eclipse.ui.internal.WorkbenchWindow.restoreState\n(WorkbenchWindow.java:940)\n        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:794)\n        at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:632)\n        at org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:838)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:411)\n        at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState\n(Workbench.java:610)\n        at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:667)\n        at org.eclipse.ui.internal.Workbench.init(Workbench.java:503)\n        at org.eclipse.ui.internal.Workbench.run(Workbench.java:816)\n        at org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:777)\n        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:190)\n        at org.eclipse.core.launcher.Main.run(Main.java:549)\n        at org.eclipse.core.launcher.Main.main(Main.java:390)\n\"\u003e\n    \u003c/exception\u003e\n  \u003c/status\u003e\n\u003c/log-entry\u003e",
    "I have seen this dump in the error log as well. Will see with JDT/UI who\u0027s \nresponsible for it. Thanks for the feedback.",
    "hmm... you should be careful about applying the patch - I got some weird errors \nafter applying it to the integration build 20020412.\n\nBasically, after applying it my .java files were never saved to the disk. \nEclipse claimed to have compiled them, but they never ended up getting saved to \nthe disk, so it took me a little time to track down why my changes were lost \nwhen I used ant to build outside of eclipse.",
    "after patching integration build 1204 motif-linux i can work with the\nweblogic.jar in the build path !!!!!\n\ni also checked the disk-saved objects and the commited cvs objects and they are\nall saved !!! \n\nwe will test it under windows2000 today... ",
    "i too appl?ied it to build 20024012 and experienced that my .java files was\u0027nt \nsaved.",
    "i\u0027m sorry for my last posting... \n\ni applied the patch to integration build 1104... not as posted soon 1204 \n\nwith build 1104 and the patch, the linux-motif and windows version work. if you\nchange a java object and save it, its written to the filesystem. \n\n\n\n",
    "We think we have resolved the other issues as well (ClassCastException + \nunsaved changes). Along with the performance patch, we fixed a leak in the \nbuffer caching, which would cause it to keep closed buffers. \n\nWhen fixing this, closed buffers were gone, but reaccessing such a buffer would \ncause the buffer type to become wrong and misbehave from there on. Buffer \nclosing opens when overflowing the buffer cache.\n\nImproved patch 239c got posted on Jdt/Core resource dev page.\n\nFixed.",
    "*** Bug 13468 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2002-04-10T18:54:55+02:00",
    "2002-04-10T18:55:52+02:00",
    "2002-04-11T00:44:17+02:00",
    "2002-04-11T15:50:46+02:00",
    "2002-04-12T16:26:12+02:00",
    "2002-04-14T11:02:02+02:00",
    "2002-04-15T14:03:05+02:00",
    "2002-04-15T15:36:35+02:00",
    "2002-04-15T16:29:36+02:00",
    "2002-04-15T18:49:32+02:00",
    "2002-04-15T18:57:34+02:00",
    "2002-04-15T19:05:33+02:00",
    "2002-04-15T19:10:02+02:00",
    "2002-04-15T20:22:48+02:00",
    "2002-04-15T22:39:19+02:00",
    "2002-04-16T08:25:14+02:00",
    "2002-04-16T11:22:16+02:00",
    "2002-04-16T13:16:28+02:00",
    "2002-04-16T13:26:07+02:00",
    "2002-04-17T09:44:44+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.core.Buffer",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createElementInfo",
          "source": "CompilationUnitDocumentProvider. java:429"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractDocumentProvider.connect",
          "source": "AbstractDocumentProvider.java:247"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput",
          "source": "AbstractTextEditor.java:1503"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput",
          "source": "JavaEditor.java:479"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput",
          "source": "CompilationUnitEditor.java:932"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.init",
          "source": "AbstractTextEditor.java:1146"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.createSite",
          "source": "EditorManager.java:485"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.access$1",
          "source": "EditorManager.java:483"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager$2.run",
          "source": "EditorManager.java:467"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:56"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openInternalEditor",
          "source": "EditorManager.java:460"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.openInternalEditor",
          "source": "EditorManager.java:529"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.access$3",
          "source": "EditorManager.java:524"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager$5.run",
          "source": "EditorManager.java:636"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:838"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:411"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.restoreState",
          "source": "EditorManager.java:590"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.restoreState",
          "source": "WorkbenchPage.java:1708"
        }
      ],
      "number": 0,
      "commentIndex": 12,
      "bugId": "13393",
      "date": "2002-04-15T19:10:02+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "13393",
  "bugId": "13393",
  "date": "2002-04-10T18:54:55+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}