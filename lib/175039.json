{
  "comments": [
    "I debugged this stack trace from load-time weaving (ajcore files are also available). I found that the signature argument to TypeFactory.createTypeFromSignature(String) is Pjava/lang/Enum\u003cLjavax/jws/soap/SOAPBinding$ParameterStyle;\u003e; but the method is erroneously using an empty array of parameters, because it thinks the $ relates to the generic type, not the parameter. It should be fairly easy to reproduce with a test case and to fix with a patch - I\u0027ll look at it some more tonight or this week.\n\njava.lang.ArrayIndexOutOfBoundsException\n\tat org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:698)\n\tat org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:406)\n\tat org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:65)\n\tat org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:182)\n\tat org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:169)\n\tat org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:119)\n\tat org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.accept(ClassLoaderWeavingAdaptor.java:621)\n\tat org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:253)\n\tat org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:78)\n\tat org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52)\n\tat sun.instrument.TransformerManager.transform(TransformerManager.java:122)\n\tat sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155)\n\tat java.lang.ClassLoader.defineClass(Ljava.lang.String;[BIILjava.security.ProtectionDomain;)Ljava.lang.Class;(Unknown Source)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:56)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat java.lang.ClassLoader.loadClass(Ljava.lang.String;Z)Ljava.lang.Class;(Unknown Source)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)\n\tat java.lang.ClassLoader.loadClass(Ljava.lang.String;)Ljava.lang.Class;(Unknown Source)\n\tat java.lang.ClassLoader.loadClassFromNative(Ljava.lang.String;)Ljava.lang.Class;(Unknown Source)\n\tat java.lang.Class.forName(Ljava.lang.String;ZLjava.lang.ClassLoader;)Ljava.lang.Class;(Unknown Source)\n\tat jrockit.reflect.MemberAccess.getClassFromFieldDesc(Ljava.lang.String;ILjava.lang.ClassLoader;)Ljava.lang.Class;(Unknown Source)\n\tat jrockit.reflect.MemberAccess.getReturnClassFromMethodDesc(Ljava.lang.String;Ljava.lang.ClassLoader;)Ljava.lang.Class;(Unknown Source)",
    "Created an attachment (id\u003d59664)\nFirst stab at fixing this\n\nThe tests show that the new code works better, fixing the case I encountered in a real system. But isn\u0027t PMyInterface\u003cLjava/lang/String;Ljava/lang/String;\u003e$MyOtherType\u003cLjava/lang/Object;\u003e; also a valid signature? I\u0027d like to rewrite these tests to get signatures from real types, but if someone could just verify the signatures I used to see if there\u0027s an actual problem beyond the one I fixe.",
    "patch is in, thanks Ron. that second signature looks a possible sig but I haven\u0027t time to explore with some real testcases.",
    "anything left to do here? check for 1.5.4",
    "*** Bug 169605 has been marked as a duplicate of this bug. ***",
    "*** Bug 178379 has been marked as a duplicate of this bug. ***",
    "*** Bug 180132 has been marked as a duplicate of this bug. ***",
    "*** Bug 202938 has been marked as a duplicate of this bug. ***",
    "The same stack trace is reported in many other bugs.  Looking across all of those I don\u0027t see anyone who was using an AspectJ level after 6-Mar-2007, when the patch went in at comment 2.  So I suspect this is now fixed for everyone in the development builds."
  ],
  "commentCreationDates": [
    "2007-02-21T21:02:15+01:00",
    "2007-02-23T15:45:07+01:00",
    "2007-03-06T11:37:49+01:00",
    "2007-10-26T12:35:01+02:00",
    "2007-11-06T15:50:27+01:00",
    "2007-11-06T15:52:29+01:00",
    "2007-11-06T15:55:12+01:00",
    "2007-11-06T15:57:17+01:00",
    "2007-11-06T16:00:20+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "elements": [
        {
          "method": "org.aspectj.weaver.ResolvedType.getMemberParameterizationMap",
          "source": "ResolvedType.java:698"
        },
        {
          "method": "org.aspectj.weaver.ReferenceType.getDeclaredInterfaces",
          "source": "ReferenceType.java:406"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.getDirectSupertypes",
          "source": "ResolvedType.java:65"
        },
        {
          "method": "org.aspectj.weaver.patterns.TypePattern.matchesSubtypes",
          "source": "TypePattern.java:182"
        },
        {
          "method": "org.aspectj.weaver.patterns.TypePattern.matchesSubtypes",
          "source": "TypePattern.java:169"
        },
        {
          "method": "org.aspectj.weaver.patterns.TypePattern.matchesStatically",
          "source": "TypePattern.java:119"
        },
        {
          "method": "org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.accept",
          "source": "ClassLoaderWeavingAdaptor.java:621"
        },
        {
          "method": "org.aspectj.weaver.tools.WeavingAdaptor.weaveClass",
          "source": "WeavingAdaptor.java:253"
        },
        {
          "method": "org.aspectj.weaver.loadtime.Aj.preProcess",
          "source": "Aj.java:78"
        },
        {
          "method": "org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform",
          "source": "ClassPreProcessorAgentAdapter.java:52"
        },
        {
          "method": "sun.instrument.TransformerManager.transform",
          "source": "TransformerManager.java:122"
        },
        {
          "method": "sun.instrument.InstrumentationImpl.transform",
          "source": "InstrumentationImpl.java:155"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "Ljava.lang.String;[BIILjava.security.ProtectionDomain;"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "175039",
      "date": "2007-02-21T21:02:15+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "175039",
  "bugId": "175039",
  "date": "2007-02-21T21:02:15+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}