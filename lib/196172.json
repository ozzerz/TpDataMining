{
  "comments": [
    "When having a linked ftp file from a project , its getLocation() method\nreturns null. This throws exception in WST.\n\nHere\u0027s how to reproduce :\n1) Create a project (I created Java)\n2) Create a new RSE location to an FTP to a folder\n   that contains HTML file\n3) In the project created (1) create a linked folder\n   to the FTP folder (with the HTML file)\n4) Now that you have the linked folder in the Explorer Tree view:\n   Double click the HTML file in the tree to be opened with \n   HTML editor.\n\nYou get an exception since Resource.getLocation() returns null :\n\npublic IPath getLocation() {\n    IProject project \u003d getProject();\n    if (project !\u003d null \u0026\u0026 !project.exists())\n        return null;\n    return getLocalManager().locationFor(this); --\u003e this returns null !!!\n}\n\nHere\u0027s the stack trace :\n----------------------\njava.lang.NullPointerException\nat org.eclipse.wst.sse.core.internal.FileBufferModelManager.createURIResolver(FileBufferModelManager.java:419)\nat org.eclipse.wst.sse.core.internal.FileBufferModelManager.getModel(FileBufferModelManager.java:624)\nat org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._getModelFor(ModelManagerImpl.java:393)\nat org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForEdit(ModelManagerImpl.java:1020)\nat org.eclipse.wst.sse.ui.StructuredTextEditor.doSetInput(StructuredTextEditor.java:2113)\nat org.eclipse.ui.texteditor.AbstractTextEditor$19.run(AbstractTextEditor.java:2995)\nat org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:369)\nat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:313)\nat org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:758)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\nat org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:755)\nat org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2437)\nat org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3013)\nat org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3040)\nat org.eclipse.wst.sse.ui.StructuredTextEditor.init(StructuredTextEditor.java:2615)\nat org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:794)\nat org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:643)\nat org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426)\nat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592)\nat org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:263)\nat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2661)\nat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2592)\nat org.eclipse.ui.internal.WorkbenchPage.access$12(WorkbenchPage.java:2584)\nat org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2569)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\nat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2564)\nat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2548)\nat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2539)\nat org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)\nat org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)\nat org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:285)\nat org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:138)\nat org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)\nat org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)\nat org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268)\nat org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244)\nat org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:316)\nat org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(PackageExplorerPart.java:613)\nat org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.core.runtime.Platform.run(Platform.java:850)\nat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\nat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:193)\nat org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818)\nat org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079)\nat org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183)\nat org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)\nat org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)\nat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3673)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3284)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nat java.lang.reflect.Method.invoke(Unknown Source)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:497)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:436)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1162)",
    "This is a bug in WST and not in RSE.\n\nEFS is defined that getLocation() can return null for remote resources. It\u0027s been broadly discussed on the EFS pages, e.g. \n\nhttp://help.eclipse.org/help32/index.jsp?topic\u003d/org.eclipse.platform.doc.isv/porting/3.2/incompatibilities.html\n\nhttp://wiki.eclipse.org/EFS_for_Platform_Committers\n\nLong story short, WST must be made EFS-aware.",
    "*** Bug 195768 has been marked as a duplicate of this bug. ***",
    "The only way a user can work is to open the HTML\nwith a plain text editor",
    "Created an attachment (id\u003d74312)\nSuggested patch for supporting RSE sources \n\nSince IResource.getLocation() can return null values when resources are not filesystem, I suggest to check if getLocation()\u003d\u003dnull then to use IResource.getLocationURI().\n(You retrieve the toString() value)",
    "*** Bug 199648 has been marked as a duplicate of this bug. ***",
    "As this issue is kind of a showstopper and the bug is one month old - does anyone know if and when the patch will go into a release? \n\nThank you.\n\n-- \nDaniel Khan",
    "Updated the summary to more clearly indicate what the source of the problem is, as per comment #1. Previous summary was:\n\nException thrown when opening a linked HTML ftp file\n",
    "I\u0027ve looked at this patch, and tried our JUnit tests on it, and they all seem to still run. (Which is not saying it\u0027s \"correct\" :) but at least does not indicate a big problem). \n\nThe SSE Junit tests can all be ran from a special project in CVS (not part of builds). \n\nSee the org.eclipse.wst.sse.unittests project from \nwst/components/sse/development/org.eclipse.wst.sse.unittests\n\nThen you can select the \nMasterListTestSuite \nclass and say \"run as plugin JUnit tests\" and it will run about 1500 tests. \n\nAnother \"tip\" about supplying patches ... I noticed you have different style rules applied for listing/fixing the import statements at the beginning of class files. \n\nWhen supplying patches, it\u0027s easier for committers to review and apply if the style and formatting matches exactly, except for the changes. \n\nI\u0027m surprised this doesn\u0027t work automatically from the project definitions, but if it helps, most of the SSE related projects use the formatting and style definitions that are held in that same \u0027development\u0027 directory, \nwst/components/sse/development \nin \nsse-team-format.xml\nSSETeamStyles.xml\n\nOne last thing, if it is (still) desired to get this in the maintenance release, it would be good to have JUnits with closed projects and other \"odd\" cases. I\u0027m not sure we currently have any, but sounds like the getLocationURI method _might_ behave a little differently than expected for closed projects. (Most of the time, for example, we should not create a model, if given a file from a closed project ... I don\u0027t believe). \n\n\n\n\nHope this helps\n",
    "*** Bug 200776 has been marked as a duplicate of this bug. ***",
    "\"if it is (still) desired to get this in the maintenance\nrelease\"\n\nIsn\u0027t an exception something you\u0027d always want to \"fix\"? Even if it\u0027s only catching it.\n\nStill though, isn\u0027t a patch that at least solves some of the problems better than nothing at all? The only reason I can think of why it shouldn\u0027t be is if the patch might actually mess things up (cause corruption, possible loss of data and the likes). Even so wouldn\u0027t it be something to at least commit to a testing version so that whatever may not fully function yet can be tried out.\n\nI must say I was rather surprised to see that this bug has actually been open for two months now with there apparently being no incentive at all to fix it also because for me it\u0027s a rather essential bug. I use Eclipse for PHP development and RSE gives me a great way to work directly on the development server where I can immediately test my code (sftp synchronization support is not included in Eclipse and the third-party plugins I have tried run into problems at one point or the other).\n\nRegards.",
    "Created an attachment (id\u003d77188)\nAdditional suggested patch (fixes new NullPointerException)\n\nToday I pulled in wst from the CVS repository and applied the suggested patch, however it still gave me a NullPointerException due to the fLocation in the CommonURIResolver still trying to use the original (null) location.\n\nI don\u0027t know how wst really works nor do I have a lot of experience with programming in Java so no guarantees this new patch I uploaded is without further problem nor that it doesn\u0027t create new problems.\n\nWhether or not this patch might cause other (additional) problems depends on the CommonURIResolver.setFileBaseLocation(). This method was a simple void doing nothing at all. If it was used in the past and now not meant to be used anymore but kept in for backwards compatability (which\u0027d be strange though since it\u0027d only be something where bugs can come from because it doesn\u0027t do its expected behaviour) it might be a problem.\n\nAh well, hope this helps people. At least now everything seems to work for me :).",
    "(In reply to comment #8)\n\u003e One last thing, if it is (still) desired to get this in the maintenance\n\u003e release, it would be good to have JUnits with closed projects and other \"odd\"\n\u003e cases. I\u0027m not sure we currently have any, but sounds like the getLocationURI\n\u003e method _might_ behave a little differently than expected for closed projects.\n\u003e (Most of the time, for example, we should not create a model, if given a file\n\u003e from a closed project ... I don\u0027t believe). \n\nI\u0027m not sure that\u0027ll be an issue, or at least it won\u0027t get that far.  The file buffers layer would throw all sorts of delightful CoreExceptions before that becomes an issue for us.\n\nI\u0027ve integrated a number of the suggested changes, but with extra care since IResource.getLocationURI() can *also* return null--I guess they\u0027re planning for the future.  The remaining problem spots are the ones that require the location--the WST Common Search, Hyperlinks in the editors, content settings (it looks deprecated), and any functionality that interacts with the Common URI Resolvers like the validators.  Files from a remote filesystem mapped into the workspace still look like IFiles, open in-workspace text file buffers as usual, and use the same editor input and document provider classes as any other.",
    "(In reply to comment #12)\n\u003e (In reply to comment #8)\n\u003e \u003e One last thing, if it is (still) desired to get this in the maintenance\n\u003e \u003e release, it would be good to have JUnits with closed projects and other \"odd\"\n\u003e \u003e cases. I\u0027m not sure we currently have any, but sounds like the getLocationURI\n\u003e \u003e method _might_ behave a little differently than expected for closed projects.\n\u003e \u003e (Most of the time, for example, we should not create a model, if given a file\n\u003e \u003e from a closed project ... I don\u0027t believe). \n\u003e I\u0027m not sure that\u0027ll be an issue, or at least it won\u0027t get that far.  The file\n\u003e buffers layer would throw all sorts of delightful CoreExceptions before that\n\u003e becomes an issue for us.\n\u003e I\u0027ve integrated a number of the suggested changes, but with extra care since\n\u003e IResource.getLocationURI() can *also* return null--I guess they\u0027re planning for\n\u003e the future.  \n\nI agree but in short term we are narrowing down the problems.\n\n\u003e The remaining problem spots are the ones that require the\n\u003e location--the WST Common Search, Hyperlinks in the editors, content settings\n\u003e (it looks deprecated), and any functionality that interacts with the Common URI\n\u003e Resolvers like the validators.  Files from a remote filesystem mapped into the\n\u003e workspace still look like IFiles, open in-workspace text file buffers as usual,\n\u003e and use the same editor input and document provider classes as any other.\n\nAccording to the discussion with David and yourself the goal was to fix the problems we know of as the integration build and then continue to solve additional problem such as you described for 3.0.\n\nWhen can we expect the integration build.  \n",
    "It already is in the latest integration build (2.0.1RC1). At least I\u0027m not getting any null pointers yet :)."
  ],
  "commentCreationDates": [
    "2007-07-11T17:24:56+02:00",
    "2007-07-11T17:40:30+02:00",
    "2007-07-16T09:02:06+02:00",
    "2007-07-18T10:19:25+02:00",
    "2007-07-22T16:21:05+02:00",
    "2007-08-13T08:48:44+02:00",
    "2007-08-13T09:30:43+02:00",
    "2007-08-13T11:31:44+02:00",
    "2007-08-21T04:35:47+02:00",
    "2007-08-26T14:41:40+02:00",
    "2007-08-27T11:28:15+02:00",
    "2007-08-28T23:54:05+02:00",
    "2007-09-06T13:12:33+02:00",
    "2007-09-10T17:20:09+02:00",
    "2007-09-11T01:22:37+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.wst.sse.core.internal.FileBufferModelManager.createURIResolver",
          "source": "FileBufferModelManager.java:419"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.FileBufferModelManager.getModel",
          "source": "FileBufferModelManager.java:624"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.model.ModelManagerImpl._getModelFor",
          "source": "ModelManagerImpl.java:393"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.model.ModelManagerImpl.getModelForEdit",
          "source": "ModelManagerImpl.java:1020"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.doSetInput",
          "source": "StructuredTextEditor.java:2113"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$19.run",
          "source": "AbstractTextEditor.java:2995"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:369"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:313"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow$1.run",
          "source": "ApplicationWindow.java:758"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow.run",
          "source": "ApplicationWindow.java:755"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.run",
          "source": "WorkbenchWindow.java:2437"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.internalInit",
          "source": "AbstractTextEditor.java:3013"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.init",
          "source": "AbstractTextEditor.java:3040"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.init",
          "source": "StructuredTextEditor.java:2615"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.createSite",
          "source": "EditorManager.java:794"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPartHelper",
          "source": "EditorReference.java:643"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPart",
          "source": "EditorReference.java:426"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:592"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.getEditor",
          "source": "EditorReference.java:263"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched",
          "source": "WorkbenchPage.java:2661"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor",
          "source": "WorkbenchPage.java:2592"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$12",
          "source": "WorkbenchPage.java:2584"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$10.run",
          "source": "WorkbenchPage.java:2569"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2564"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2548"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2539"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:644"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:603"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor",
          "source": "EditorUtility.java:285"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor",
          "source": "EditorUtility.java:138"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OpenAction.run",
          "source": "OpenAction.java:194"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OpenAction.run",
          "source": "OpenAction.java:175"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun",
          "source": "SelectionDispatchAction.java:268"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.run",
          "source": "SelectionDispatchAction.java:244"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen",
          "source": "PackageExplorerActionGroup.java:316"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open",
          "source": "PackageExplorerPart.java:613"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$2.run",
          "source": "StructuredViewer.java:820"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:850"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:193"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireOpen",
          "source": "StructuredViewer.java:818"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleOpen",
          "source": "StructuredViewer.java:1079"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$6.handleOpen",
          "source": "StructuredViewer.java:1183"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireOpenEvent",
          "source": "OpenStrategy.java:263"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$2",
          "source": "OpenStrategy.java:257"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:297"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3673"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3284"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:497"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:436"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1162"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "196172",
      "date": "2007-07-11T17:24:56+02:00",
      "product": "Web Tools",
      "component": "wst.sse",
      "severity": "major"
    }
  ],
  "groupId": "196172",
  "bugId": "196172",
  "date": "2007-07-11T17:24:56+02:00",
  "product": "Web Tools",
  "component": "wst.sse",
  "severity": "major"
}