{
  "comments": [
    "The test code:\n\npublic class EclipseBug {\n\n  private interface ReturnBase {\n    // Empty\n  }\n  \n  private interface ReturnDerived extends ReturnBase {\n    // Empty\n  }\n  \n  private interface Interface {\n    ReturnBase bar();\n  }\n  \n  private static class Implementation {\n    public final ReturnDerived bar() {\n      return null;\n    }\n  }\n  \n  private static class Child extends Implementation implements Interface {\n    // Empty\n  }\n  \n  private static class Grandchild extends Child implements Interface {\n    // Empty\n  }\n  \n  public static void main(String[] args) {\n    new Grandchild();\n  }\n}\n\nTrying to run this class results in\nException in thread \"main\" java.lang.VerifyError: class EclipseBug$Grandchild overrides final method bar.()LEclipseBug$ReturnBase;\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:260)\n\tat java.net.URLClassLoader.access$000(URLClassLoader.java:56)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:276)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat EclipseBug.main(EclipseBug.java:30)\n\nI expected it to do nothing (which is also what happens when using the Sun javac).\n\nThis happens in Eclipse 3.3M1 and 3.3M2. I have not tried it with earlier versions.",
    "Bridge methods are added to override a final method leading to the VerifyError.\ncompliance \u003e\u003d 1.5 is required to compile this code.",
    "I can confirm it happens in 3.2.1, too.",
    "The only difference between 3.2.0 and HEAD or 3.2.1 is that the bridge method is final.\nI\u0027ll check the diff between 3.2.0 and 3.2.1 to find out when this was introduced.",
    "In this case javac doesn\u0027t create a bridge method at all.",
    "The problem seems to come from the fix for bug 147690.\nI might have a fix for it that also passes the regression test for 147690, but we should investigate why we do have a bridge method in this case and javac doesn\u0027t.",
    "Created an attachment (id\u003d51792)\nProposed fix\n\n",
    "Please note that this is not for sure a regression bug, ie. I don\u0027t know whether it happens in 3.2.0 and Bas doesn\u0027t either, as far as I know. \n\nSo to my knowledge this bug might always have been there.",
    "From what I tried, it worked fine in 3.2.0, but failed in 3.2.1 due to the fix for bug 147690.\nDiscussing with Kent, we should have a bridge method on Child, but not on Grandchild, since Child has one.\nI\u0027ll test a better fix and if it is good, I\u0027ll attach it to the PR.\nThis would definitely be a candidate for 3.2.2.\nThe previous fix was passing the VerifyError, but I end up with a bridge method for Child and Grandchild. All tests should be done by tomorrow.\n",
    "+1 for 3.2.2.\nWe have been having the extra bridge method on GrandChild before 3.2.0.",
    "If we fix the extra bridge method, it is unclear we need to clear the final flag, other than for matching expectation. We would reject subsequent overrides anyway,\ne.g.\npublic class X {\n  private interface ReturnBase {}\n  private interface ReturnDerived extends ReturnBase {}\n  private interface ReturnLeaf extends ReturnDerived {}\n  private interface Interface {\n    ReturnBase bar();\n  }\n  private static class Implementation {\n    public final ReturnDerived bar() {\n      return null;\n    }\n  }\n  private static class Child extends Implementation implements Interface {}\n  private static class Grandchild extends Child implements Interface {\n\t\tpublic ReturnLeaf bar() { \n\t\t\treturn null; \n\t\t}\n  }\n  public static void main(String[] args) {\n    new Grandchild();\n  }\n}",
    "Pls make sure bridge fix is not order dependant:\ne.g.\npublic class X {\n  private interface ReturnBase {}\n  private interface ReturnDerived extends ReturnBase {}\n  private interface Interface {\n    ReturnBase bar();\n  }\n  private static class Implementation {\n    public final ReturnDerived bar() {\n      return null;\n    }\n  }\n  private static class Grandchild extends Child implements Interface {}\n  private static class Child extends Implementation implements Interface {}\n  public static void main(String[] args) {\n    new Grandchild();\n  }\n}",
    "Created an attachment (id\u003d51822)\nProposed fix\n\nThis patch removes the needs to clear the final bit since it generates only one bridge method.",
    "Created an attachment (id\u003d51823)\nRegression tests\n\nSeveral regression tests added to cover corner cases.",
    "The interface only check tricked me, so I wrote the following test case, which we pass, since another pass is followed for abstract method situations:\nwe still issue a bridge on Bar.\n\npublic class X {\n\tinterface A1 {}\n\tinterface A2 extends A1 {}\n\tabstract static class AbstractBar {\n\t\tabstract A1 bar();\n\t}\n\tstatic class Bar extends AbstractBar {\n\t\t@Override  \tA2 bar() { return null; }\n\t}\n}\n\nNow the patch should be improved to check for interface first, since this is the less expensive check.",
    "BTW, the fix doesn\u0027t work with generics.\n\npublic class X {\n  private interface ReturnBase {}\n  private interface ReturnDerived extends ReturnBase {}\n\n  private interface Interface\u003cE\u003e {\n    ReturnBase bar();\n  }\n  private static class Implementation\u003cT\u003e {\n    public final ReturnDerived bar() { return null; }\n  }\n  private static class Child\u003cU\u003e extends Implementation\u003cU\u003e implements Interface\u003cU\u003e {}\n  private static class Grandchild\u003cV\u003e extends Child\u003cV\u003e implements Interface\u003cV\u003e {}\n\n  public static void main(String[] args) {\n    new Grandchild();\n  }\n}",
    "Also in the proposed patch, the check on concreteMethod.declaringClass is subsumed by the next check on superclass.\n\n",
    "Created an attachment (id\u003d51836)\nBetter patch\n\nAlso you should check javac behavior for final bit clearance. Though not mandated, might still be a good idea for easing compatibility.",
    "Olivier - pls mirror all testcases with generics.\n\nWe should issue this fix for the 3.2.1 patch feature. Please talk with Frederic, once all our testing has completed.",
    "When javac adds a bridge method, it seems that the final bit is cleared.",
    "Released for 3.3M3.\nRegression tests added in org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest#test102-112",
    "Reopen for releasing in 3.2.2",
    "Released for 3.2.2.\nSame regression tests added.",
    "*** Bug 160254 has been marked as a duplicate of this bug. ***",
    "*** Bug 161442 has been marked as a duplicate of this bug. ***",
    "Verified for 3.3 M3 using build I20061030-0010",
    "Verified for 3.2.2 using build M20070112-1200."
  ],
  "commentCreationDates": [
    "2006-10-06T09:37:39+02:00",
    "2006-10-06T17:17:41+02:00",
    "2006-10-09T13:03:55+02:00",
    "2006-10-11T20:43:13+02:00",
    "2006-10-11T20:44:55+02:00",
    "2006-10-11T21:05:06+02:00",
    "2006-10-11T21:16:54+02:00",
    "2006-10-11T22:13:32+02:00",
    "2006-10-11T22:59:52+02:00",
    "2006-10-11T23:51:26+02:00",
    "2006-10-11T23:52:46+02:00",
    "2006-10-11T23:54:05+02:00",
    "2006-10-12T03:47:47+02:00",
    "2006-10-12T03:48:26+02:00",
    "2006-10-12T09:49:10+02:00",
    "2006-10-12T09:55:04+02:00",
    "2006-10-12T09:58:51+02:00",
    "2006-10-12T09:59:46+02:00",
    "2006-10-12T10:01:31+02:00",
    "2006-10-12T16:04:44+02:00",
    "2006-10-12T19:52:52+02:00",
    "2006-10-12T19:56:55+02:00",
    "2006-10-12T20:02:24+02:00",
    "2006-10-16T17:30:13+02:00",
    "2006-10-24T01:09:22+02:00",
    "2006-10-30T12:00:44+01:00",
    "2007-01-16T07:36:21+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "class EclipseBug$Grandchild overrides final method bar.()LEclipseBug$ReturnBase;",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:620"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:124"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:260"
        },
        {
          "method": "java.net.URLClassLoader.access$000",
          "source": "URLClassLoader.java:56"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:195"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:188"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:306"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:276"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        },
        {
          "method": "EclipseBug.main",
          "source": "EclipseBug.java:30"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "159973",
      "date": "2006-10-06T09:37:39+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "159973",
  "bugId": "159973",
  "date": "2006-10-06T09:37:39+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}