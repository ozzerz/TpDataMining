{
  "comments": [
    "To reproduce:\n- Open a .aj file in the editor\n- Delete the file\n- Create a new .aj file of the same name in the same package\n- An message appears saying \"The file has changed on disk - do you want to \nload the new version?\"\n\nTo reprodice with a project:\n- Install the TJP example\n- Open GetInfo in the editor\n- Delete the TJP project\n- Re-install the TJP example\n- Try to open GetInfo again. \n- The message described above pops up",
    "This also has consequences for refactoring in plain java projects:\n \n- create a java project that contains one class C\n- Install the TJP example\n- Open GetInfo in the editor\n- Delete the TJP project\n- Rename the class C by right clicking on C and do Refactor \u003e Rename\n\nThis causes a StringOutOfBoundsException:\n\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1\nat java.lang.String.substring(String.java:1768)\nat\norg.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)\nat\norg.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)\nat\norg.eclipse.jdt.internal.core.search.matching.PossibleMatch.\u003cinit\u003e(PossibleMatch.java:41)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)\nat\norg.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\nat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:208)\nat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:424)\nat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:532)\nat\norg.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.findAffectedCompilationUnits(RefactoringSearchEngine.java:72)\nat\norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor.checkConflictingTypes(RenameTypeProcessor.java:593)\nat\norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor.analyzeAffectedCompilationUnits(RenameTypeProcessor.java:584)\nat\norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor.checkFinalConditions(RenameTypeProcessor.java:330)\nat\norg.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor.checkFinalConditions(RenameCompilationUnitProcessor.java:258)\nat\norg.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)\nat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)\nat\norg.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:114)\nat\norg.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:189)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)\nat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)\nat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\n",
    "The problem that caused this bug was that dispose() was called on the editor \nafter the CompilationUnit had been deleted. This meant that the editor was \nunable to call discardWorkingCopy() on the CompilationUnit.  \n\nThis seems to have been fixed in Eclipse 3.1, so AJDT 1.3 will contain a \ncomplete fix for this bug.  \n\nI have added a partial fix in AJDT 1.2.1 by adding a DeleteParticipant.  The \nparticipant is notified of deletes and so it is able to close any open editors \nbefore the corresponding CompilationUnits are deleted.  \n\nUnfortunately DeleteParticipants do not seem to be able to be notified of \nprojects being deleted, which is why this is a partial fix. So if you have a \nfile open in the AspectJ editor and you delete either the file, its package or \nits source folder the working copy will also be deleted.  If you delete the \nparent project the working copy will not be deleted in AJDT 1.2.1.",
    "I\u0027ve just retried the steps in comment #1 and the StringOutOfBoundsException is\nstill happening (I\u0027ve tried with the latest AJDT on Eclipse 3.1). However, as\nSian said, the original problem has been fixed. Therefore, maybe my original\nthought on the relationship between these two issues is wrong. The stack trace I\nreported is the same as that on bug 98547 - I\u0027m therefore adding this comment to\nthat bug."
  ],
  "commentCreationDates": [
    "2005-06-03T14:16:47+02:00",
    "2005-07-14T12:12:48+02:00",
    "2005-08-03T13:48:44+02:00",
    "2005-08-05T13:30:08+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: -1",
      "elements": [
        {
          "method": "java.lang.String.substring",
          "source": "String.java:1768"
        },
        {
          "method": "org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension",
          "source": "Util.java:839"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName",
          "source": "PossibleMatch.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.PossibleMatch.\u003cinit\u003e",
          "source": "PossibleMatch.java:41"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1097"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:208"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:424"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:532"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.findAffectedCompilationUnits",
          "source": "RefactoringSearchEngine.java:72"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor.checkConflictingTypes",
          "source": "RenameTypeProcessor.java:593"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor.analyzeAffectedCompilationUnits",
          "source": "RenameTypeProcessor.java:584"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor.checkFinalConditions",
          "source": "RenameTypeProcessor.java:330"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor.checkFinalConditions",
          "source": "RenameCompilationUnitProcessor.java:258"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions",
          "source": "ProcessorBasedRefactoring.java:169"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:84"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:114"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.PerformChangeOperation.run",
          "source": "PerformChangeOperation.java:189"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1719"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:86"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "98261",
      "date": "2005-07-14T12:12:48+02:00",
      "product": "AJDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "98261",
  "bugId": "98261",
  "date": "2005-06-03T14:16:47+02:00",
  "product": "AJDT",
  "component": "UI",
  "severity": "normal"
}