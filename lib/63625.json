{
  "comments": [
    "The following simple file, can\u0027t be open with text editor with IBM\u0027s JRE, on M9. \nI believe it is because the sax parser with IBM\u0027s JRE throws \"file not found\" \nfor the non-existent invoice.dtd. This particular exception causes short circut \nin whole content type look up so the file can\u0027t even be read as text (much less \nany of my content types :) [I might note too, this exception is silent, there\u0027s \nno indication of it logged so its hard to \"see\". The message \"Error retrieving \ncontent description for resource: /Test2/test2.xml\" is displayed in \"editor \narea\", but the problem that\u0027s causing causing that error message is not logged.]\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003c!DOCTYPE Invoice PUBLIC \"InvoiceId\" \"Invoice.dtd\" \u003e\n\u003cInvoice\u003e\n\u003c/Invoice\u003e\n\nI marked as \"blocker\" even though one work-around is easy -- use another JRE --, \nbut that\u0027s not a viable option for some of us: ) I\u0027m actually not sure what the \nSAX API specifies, if there is one, but content type look up should be able to \ncontinue no matter what the content throws at it. \n\nI might note too, I think on a pure/fresh system, I could actually open the file \nonce (having only created simple project, and the one file), but then I create a \nplugin project and no longer could. I mention this in case there\u0027s some \ninteraction with cached information, or something. \n\nThe version of IBM\u0027s JRE I found this with was \njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2)\nClassic VM (build 1.4.2, J2RE 1.4.2 IBM Windows 32 build cndev-20040511 (JIT \nenabled: jitc))\n\nWhen running with Sun\u0027s JRE it seemed to open fine.",
    "The fix intended for bug 62443 will supposedly manage the problem with\nnon-resilience when a describer causes an IOException to be thrown.",
    "I\u0027m not sure it\u0027s the same problem, but I\u0027m seeing something like this with\nSun\u0027s 1.5.0beta1 JDK. My XML file looks like this:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003c!DOCTYPE menus SYSTEM \"dynamic_menu.dtd\"\u003e\n\u003cmenus\u003e\n\u003c/menus\u003e\n\nI *do* have a dynamic_menu.dtd in the same directory, however the SAX parser\nseems to look for in in the root directory.\n\nThis is the stack trace:\n\n!SUBENTRY 1 org.eclipse.core.resources 4 381 May 25, 2004 10:49:09.753\n!MESSAGE Error retrieving content description for resource:\n/Zar-v10/src/docroot/WEB-INF/dynamic_menu.xml.\n!STACK 0\njava.io.FileNotFoundException: \\dynamic_menu.dtd (The system cannot find the\nfile specified)\n\tat java.io.FileInputStream.open(Native Method)\n\tat java.io.FileInputStream.\u003cinit\u003e(FileInputStream.java:106)\n\tat java.io.FileInputStream.\u003cinit\u003e(FileInputStream.java:66)\n\tat sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:69)\n\tat\nsun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)\n\tat\ncom.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:948)\n\tat\ncom.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:883)\n\tat\ncom.sun.org.apache.xerces.internal.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:850)\n\tat\ncom.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:281)\n\tat\ncom.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(XMLDocumentScannerImpl.java:941)\n\tat\ncom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:345)\n\tat\ncom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:827)\n\tat\ncom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:757)\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\tat\ncom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1169)\n\tat javax.xml.parsers.SAXParser.parse(SAXParser.java:353)\n\tat\norg.eclipse.core.internal.content.XMLRootHandler.parseContents(XMLRootHandler.java:165)\n\tat\norg.eclipse.core.runtime.content.XMLRootElementContentDescriber.checkCriteria(XMLRootElementContentDescriber.java:72)\n\tat\norg.eclipse.core.runtime.content.XMLRootElementContentDescriber.describe(XMLRootElementContentDescriber.java:97)\n\tat org.eclipse.core.internal.content.ContentType.describe(ContentType.java:167)\n\tat\norg.eclipse.core.internal.content.ContentTypeManager.internalFindContentTypesFor(ContentTypeManager.java:294)\n\tat\norg.eclipse.core.internal.content.ContentTypeManager.getDescriptionFor(ContentTypeManager.java:260)\n\tat\norg.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:91)\n\tat\norg.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:56)\n\tat org.eclipse.core.internal.resources.File.getContentDescription(File.java:239)\n\tat org.eclipse.core.internal.resources.File.getCharset(File.java:218)\n\tat org.eclipse.core.internal.resources.File.getCharset(File.java:203)\n\tat\norg.eclipse.search.internal.core.text.TextSearchVisitor.visitFile(TextSearchVisitor.java:151)\n\tat\norg.eclipse.search.internal.core.text.TypedResourceVisitor.visit(TypedResourceVisitor.java:53)\n\tat\norg.eclipse.search.internal.core.text.TextSearchVisitor.visit(TextSearchVisitor.java:200)\n\tat org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:54)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:78)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)\n\tat\norg.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:123)\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:64)\n\tat\norg.eclipse.search.internal.core.text.TextSearchVisitor.process(TextSearchVisitor.java:91)\n\tat\norg.eclipse.search.internal.core.text.TextSearchEngine.search(TextSearchEngine.java:61)\n\tat org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:74)\n\tat\norg.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:82)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)\n",
    "The last remark, about Sun\u0027s 1.5 makes sense, as I have heard rumors that Sun\u0027s \n1.5 version of SAX (JAXP) would be \"closer to\" IBM\u0027s 1.4 version. I suggest \nthis particular bug be avoided by better setup/control over the parser.\nAs far as I know, its just intented to be a simple \"tag matcher\" and shouldn\u0027t \nneed validation or to load DTD\u0027s. \n\nI\u0027ll attach simple patch which avoid undesireable behavior. ",
    "Created an attachment (id\u003d11046)\none solution to above\n\nbesides avoid original bug, would probably be faster, if DTD\u0027s are not really\nneeded, as I suspect. I\u0027ve tested on Sun\u0027s 1.4 and IBm\u0027s 1.4. ",
    "That is cool... thanks, David!",
    "Fixed using David\u0027s patch. Should be in i200405251600.",
    "Fixing bug 64053 also solves the problem the fix for this bug is intended to.\nHowever, I kept this code in."
  ],
  "commentCreationDates": [
    "2004-05-24T04:41:41+02:00",
    "2004-05-24T19:59:51+02:00",
    "2004-05-25T13:56:13+02:00",
    "2004-05-25T15:13:26+02:00",
    "2004-05-25T15:15:10+02:00",
    "2004-05-25T15:29:06+02:00",
    "2004-05-25T19:40:04+02:00",
    "2004-06-03T22:00:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "\\dynamic_menu.dtd (The system cannot find the file specified)",
      "elements": [
        {
          "method": "java.io.FileInputStream.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.FileInputStream.\u003cinit\u003e",
          "source": "FileInputStream.java:106"
        },
        {
          "method": "java.io.FileInputStream.\u003cinit\u003e",
          "source": "FileInputStream.java:66"
        },
        {
          "method": "sun.net.www.protocol.file.FileURLConnection.connect",
          "source": "FileURLConnection.java:69"
        },
        {
          "method": "sun.net.www.protocol.file.FileURLConnection.getInputStream",
          "source": "FileURLConnection.java:161"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity",
          "source": "XMLEntityManager.java:948"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity",
          "source": "XMLEntityManager.java:883"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startDTDEntity",
          "source": "XMLEntityManager.java:850"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl.setInputSource",
          "source": "XMLDTDScannerImpl.java:281"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch",
          "source": "XMLDocumentScannerImpl.java:941"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "XMLDocumentFragmentScannerImpl.java:345"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:827"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:757"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XMLParser.parse",
          "source": "XMLParser.java:148"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse",
          "source": "AbstractSAXParser.java:1169"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "SAXParser.java:353"
        },
        {
          "method": "org.eclipse.core.internal.content.XMLRootHandler.parseContents",
          "source": "XMLRootHandler.java:165"
        },
        {
          "method": "org.eclipse.core.runtime.content.XMLRootElementContentDescriber.checkCriteria",
          "source": "XMLRootElementContentDescriber.java:72"
        },
        {
          "method": "org.eclipse.core.runtime.content.XMLRootElementContentDescriber.describe",
          "source": "XMLRootElementContentDescriber.java:97"
        },
        {
          "method": "org.eclipse.core.internal.content.ContentType.describe",
          "source": "ContentType.java:167"
        },
        {
          "method": "org.eclipse.core.internal.content.ContentTypeManager.internalFindContentTypesFor",
          "source": "ContentTypeManager.java:294"
        },
        {
          "method": "org.eclipse.core.internal.content.ContentTypeManager.getDescriptionFor",
          "source": "ContentTypeManager.java:260"
        },
        {
          "method": "org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription",
          "source": "ContentDescriptionManager.java:91"
        },
        {
          "method": "org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor",
          "source": "ContentDescriptionManager.java:56"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.getContentDescription",
          "source": "File.java:239"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.getCharset",
          "source": "File.java:218"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.getCharset",
          "source": "File.java:203"
        },
        {
          "method": "org.eclipse.search.internal.core.text.TextSearchVisitor.visitFile",
          "source": "TextSearchVisitor.java:151"
        },
        {
          "method": "org.eclipse.search.internal.core.text.TypedResourceVisitor.visit",
          "source": "TypedResourceVisitor.java:53"
        },
        {
          "method": "org.eclipse.search.internal.core.text.TextSearchVisitor.visit",
          "source": "TextSearchVisitor.java:200"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$1.visitElement",
          "source": "Resource.java:54"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:78"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:82"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:82"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:82"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:82"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.iterate",
          "source": "ElementTreeIterator.java:123"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:64"
        },
        {
          "method": "org.eclipse.search.internal.core.text.TextSearchVisitor.process",
          "source": "TextSearchVisitor.java:91"
        },
        {
          "method": "org.eclipse.search.internal.core.text.TextSearchEngine.search",
          "source": "TextSearchEngine.java:61"
        },
        {
          "method": "org.eclipse.search.internal.ui.text.FileSearchQuery.run",
          "source": "FileSearchQuery.java:74"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:82"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "63625",
      "date": "2004-05-25T13:56:13+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "blocker"
    }
  ],
  "groupId": "63625",
  "bugId": "63625",
  "date": "2004-05-24T04:41:41+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "blocker"
}