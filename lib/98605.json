{
  "comments": [
    "From N20050606\n\ntestFlood: Failure Wrong number of lines expected:\u003c10000\u003e but was:\u003c10001\u003e \n\njunit.framework.AssertionFailedError: Wrong number of lines expected:\u003c10000\u003e \nbut was:\u003c10001\u003e\nat org.eclipse.jdt.debug.tests.core.LineTrackerTests.testFlood\n(LineTrackerTests.java:136)\nat org.eclipse.jdt.debug.tests.DebugSuite$1.run(DebugSuite.java:53)\nat java.lang.Thread.run(Thread.java:534)",
    "The failures are caused by the document adapter believing there are two line \ndelimiters instead one when \"\\r\" is appended to the document separately \nfrom \"\\n\". \nIn this case it\u0027s happening because the OutputStreamMonitor read a full \nbuffers worth - 8192 bytes - and the last character happens to be \\r. The read \nappends the \\n as the first character.",
    "last sentance should have read, \"The next read appends \\n as the first \ncharacter\" ",
    "Test case to simulate problem:\n\tpublic static void main(String[] args) throws Exception {\n\t\tSystem.out.print(\"Hello\\r\");\n\t\tThread.sleep(1000);\n\t\tSystem.out.print(\"\\nWorld\");\n\t}\n\nprints three lines:\nHello\\r\n\\n\nWorld",
    "Created an attachment (id\u003d22465)\npatch\n\npatch removes \\r if it is the last characted in a write and prepends the\ncharacter to the next write or just writes it when the stream closes.",
    "Good find.",
    "Created an attachment (id\u003d22524)\nupdated patch\n",
    "comitted patch",
    "Darin, please verify",
    "When I run the sample from comment#3, I get the following output, notice the \nmissing \u0027o\u0027 in \u0027Hello\u0027.\n\nHell\nWorld",
    "Propose to fix for RC3. Problem is the following code:\n\nif (encodedString.endsWith(\"\\r\")) { //$NON-NLS-1$\n    prependCR \u003d true;\n    encodedString \u003d new String(encodedString.substring(0, encodedString.length\n()-2));\n}\n\nNote that it removes 2 chars from the EOL instead of 1 (as the range is not \ninclusive). \n\nCC\u0027ing Darin (S) for approval",
    "+1",
    "Fixed in IOConsoleOuputStream",
    "Please verify, Kevin.",
    "verified",
    "*** Bug 100479 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-06-07T00:28:32+02:00",
    "2005-06-07T00:36:18+02:00",
    "2005-06-07T00:37:41+02:00",
    "2005-06-07T00:45:53+02:00",
    "2005-06-07T01:25:06+02:00",
    "2005-06-07T03:36:43+02:00",
    "2005-06-07T18:50:49+02:00",
    "2005-06-07T18:51:50+02:00",
    "2005-06-07T18:52:09+02:00",
    "2005-06-16T00:06:46+02:00",
    "2005-06-16T00:13:00+02:00",
    "2005-06-16T00:16:44+02:00",
    "2005-06-16T00:25:01+02:00",
    "2005-06-16T00:25:12+02:00",
    "2005-06-16T21:44:36+02:00",
    "2005-06-17T15:01:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Wrong number of lines expected:\u003c10000\u003e  but was:\u003c10001\u003e",
      "elements": [
        {
          "method": "org.eclipse.jdt.debug.tests.core.LineTrackerTests.testFlood",
          "source": "LineTrackerTests.java:136"
        },
        {
          "method": "org.eclipse.jdt.debug.tests.DebugSuite$1.run",
          "source": "DebugSuite.java:53"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "98605",
      "date": "2005-06-07T00:28:32+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "98605",
  "bugId": "98605",
  "date": "2005-06-07T00:28:32+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}