{
  "comments": [
    "If you omit the @aspect annotation when using @pointcut you get a nice error but not if it\u0027s a pointcut library referenced from another aspect:\n\njava.lang.NullPointerException\nat org.aspectj.weaver.patterns.ReferencePointcut.concretize1(ReferencePointcut.java:361)\nat org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:233)\nat org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:220)\nat org.aspectj.weaver.Advice.concretize(Advice.java:353)\nat org.aspectj.weaver.bcel.BcelAdvice.concretize(BcelAdvice.java:86)\nat org.aspectj.weaver.CrosscuttingMembers.addShadowMu ... pter.java:107)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nNullPointerException thrown: null",
    "Created an attachment (id\u003d52829)\nTestcase\n\nThe NPE only seems to occur with the older version of AspectJ 1.5.3-200608290814 that I have installed with AJDT. This testcase just yields:\n\n\twarning at C:\\temp\\ajcSandbox\\org.aspectj-159854\\ajcTest11388.tmp\\test\\ataspectj\\pointcutlibrary\\AtAspect.java:15::0 advice defined in test.ataspectj.pointcutlibrary.AtAspect has not been applied [Xlint:adviceDidNotMatch]\n",
    "Is this anything to do with bug 158412 which was fixed on the 25th September?",
    "It does seem the same. Now if you omit the @aspect annotation the pointcut _sometime_ does not match. I think we should issue an error message.",
    "check this for 1.5.4 - is there still something to address here?",
    "although the npe is gone, there is a still a problem here where we fail to correctly resolve @AspectJ pointcuts - if they don\u0027t get resolved then they fail to match.  If they come in from a class in a .jar that is OK, the problem is when they are compiled all from source and exist as pointcuts in a regular class.  I have had to change resolution quite a bit to allow for this but I seem to almost have a solution ready to commit.",
    "Fixes committed for this.  I modified the resolution process for @AJ pointcuts to correctly build LazyResolvedPointcutDefinitions.  Also I changed a lot of the code that searches for @AspectJ annotations - that should be much faster now.",
    "Created an attachment (id\u003d83250)\nmylyn/context/zip\n\n",
    "fix will be in next dev build"
  ],
  "commentCreationDates": [
    "2006-10-27T11:33:32+02:00",
    "2006-10-27T12:08:13+02:00",
    "2006-10-27T12:20:37+02:00",
    "2006-10-30T15:14:18+01:00",
    "2007-10-25T14:25:40+02:00",
    "2007-11-09T16:49:08+01:00",
    "2007-11-19T16:36:00+01:00",
    "2007-11-19T16:36:50+01:00",
    "2007-11-19T16:38:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.patterns.ReferencePointcut.concretize1",
          "source": "ReferencePointcut.java:361"
        },
        {
          "method": "org.aspectj.weaver.patterns.Pointcut.concretize",
          "source": "Pointcut.java:233"
        },
        {
          "method": "org.aspectj.weaver.patterns.Pointcut.concretize",
          "source": "Pointcut.java:220"
        },
        {
          "method": "org.aspectj.weaver.Advice.concretize",
          "source": "Advice.java:353"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelAdvice.concretize",
          "source": "BcelAdvice.java:86"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "162539",
      "date": "2006-10-27T11:33:32+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "162539",
  "bugId": "162539",
  "date": "2006-10-27T11:33:32+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}