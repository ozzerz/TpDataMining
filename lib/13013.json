{
  "comments": [
    "I have an intermitent problem that occurs when I try to maximize the console\nview (it also occurs sometimes when I try to view java source code).\n\nI get the following pop-up messag box:\n\n    Internal Error\n        An internal error has occurred.  Argument not valid.  See error log\nfor more details.\n\nThe window title bar appears in maximized form but only a small rectangle of\ntext gets drawn mid-screen (the area underneath where the pop-up message box\nwas after I click OK).  I can usually view the rest of the text by\n\u0027selecting\u0027 it with the mouse, although I get the error message again and\nagain.\n\nI am runnig WSAD 4.03under Windows 2000 Advanced Server at 1280x1024\nresolution.\n\n\nLog entry follows:\n\nLog: Thu Apr 04 18:11:13 EST 2002\n4 org.eclipse.ui 0 Argument not valid\njava.lang.IllegalArgumentException: Argument not valid\n at org.eclipse.swt.SWT.error(SWT.java:1695)\n at org.eclipse.swt.SWT.error(SWT.java:1642)\n at org.eclipse.swt.graphics.GC.drawImage(GC.java:675)\n at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java(Compiled\nCode))\n at org.eclipse.swt.custom.StyledText$13.handleEvent(StyledText.java:4252)\n at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))\n at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))\n at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java(Compiled\nCode))\n at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))\n at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))\n at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)\n at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled\nCode))\n at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled\nCode))\n at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)\n at\norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.jav\na:815)\n at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)\n at java.lang.reflect.Method.invoke(Native Method)\n at org.eclipse.core.launcher.Main.basicRun(Main.java:151)\n at org.eclipse.core.launcher.Main.run(Main.java:442)\n at org.eclipse.core.launcher.Main.main(Main.java:315)",
    "Not sure why the GC.drawImage causes problems.\nIt only throws an IllegalArgumentException when the Image that is passed in is \ndisposed. We create the image just a few lines above the problem location so \nthat\u0027s not really possible.\nVerified that drawing at a negative location is not a problem.",
    "When you maximize the console and the error occurs, do you see any common \npattern? For example do you always have a lot of text in the console or a lot \nof long lines or maybe the console is always scrolled to the bottom or to the \nvery top. Is your workbench itself maximized when you maximize the console?\nI\u0027m looking for something to give me clue what to look for. Unfortunately the \nstack trace is not very helpful in this case.\n\nCan you provide more detail under what circumstances you see the error in the \nJava editor? Is it the exact same stack trace as in the console maximize \nproblem?",
    "Created an attachment (id\u003d572)\nLog file\n",
    "I can recreate the problem even with an empty console window (i.e. no text).  \nLog (attached to bug as separate activity)  is from starting product then \nswitching immeditately to java perspective and maximizing empty console \nwindow.  I now note a few \u0027startup\u0027 errors in the log but don\u0027t know whether \nthey are releated or not.  I am running at 1280x1024.  (I *cannot* recreate the \nproblem at 1024x768).  \n\nThe problem is not restricted to having the workbench maximized. HOWEVER, \nthrough experimentation, I have discovered the following: at 1280 horizontal, \nit is okay at 720, error at 721.  If I decrease the horizontal size to, for \nexample, 1196, I am okay at vertical 758 but fail at vertical 760.  \nUnfortunatley, these results are not 100% consistent (it occasionally works \nwhen it seems it shouldn\u0027t).  The number of open perspectives and source \nwindows does not seem to make a difference.\n\nSome analysis:\n\nAt 1280 horizontal, works at 720 v. (921,600 total pixels) but fails at 721 v. \n(922,880 total pixels).  At 1196 horizontal, works at 758 v. (906,598 total \npixels but fails at 760 v. (908,960 total pixels).  So... it\u0027s not simply a \nbuffer size issue.\n\nThere is no consistency in the ratio (horizontal to vertical) at which failure \noccurs.\n\nThe failure point does seem to consistently be when WSAD occupies somewhere \nbetween 60 and 70% (or more) of the total real estate, although this is \nprobably coincidental.\n\nI will attach an Excel spreadsheet that contains my analysis to the bug as well.",
    "Created an attachment (id\u003d573)\nError test analysis\n",
    "Not surprisingly, also happens when running at 1600x1200 resolution.",
    "Thanks for the data, you\u0027re great!\nUnfortunately I still can\u0027t reproduce the problem. I wrote a test case that \ndraws a 1280x952 (\u003d 1024 - trim) buffered bitmap to the screen at 32bit color \ndepth and it works fine.\nI also ran the current Eclipse build with the SWT version that ships with WSAD \n4.03 (which is v1_0_138) without any luck.\n\nA few more questions:\n-do you still see the problem if you close *all* editors and maximize the \nConsole?\n-what color depth are you running at? (does it fix the problem if you lower it?)\n-what graphics card/driver are you using?\n",
    "I was using 32-bit color level.  It seems to work ok at 24-bit color level!\n\nI can live with that.\n\nThanks for the help!\n\n[For future reference, graphics card is ATI XPERT 98 RXL AGP 2X w/ 8 MB.  BIOS \nversion is 4.026.  Driver is Ati2drad.dll, rel. J5.21.0B18]",
    "Tried running Eclipse with SWT v1_0_138 on WinNT at 1600x1200 and Truecolor \n(driver doesn\u0027t say whether that\u0027s 24bit or 32bit) and it works fine.\nThis may be related to the driver.",
    "SSQ, do you have any ideas?",
    "Assuming driver related.\nThe system I tested on actually has a 16m color (24bit) option in addition to \nthe TrueColor option so it\u0027s safe to assume that the TrueColor I tested on is \n32bit."
  ],
  "commentCreationDates": [
    "2002-04-08T18:57:47+02:00",
    "2002-04-09T17:29:43+02:00",
    "2002-04-10T16:34:48+02:00",
    "2002-04-10T18:56:25+02:00",
    "2002-04-10T18:58:18+02:00",
    "2002-04-10T18:59:33+02:00",
    "2002-04-10T21:27:51+02:00",
    "2002-04-10T23:52:55+02:00",
    "2002-04-11T00:15:30+02:00",
    "2002-04-11T00:21:31+02:00",
    "2002-04-12T16:16:58+02:00",
    "2002-04-30T17:01:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument not valid",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:1695"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:1642"
        },
        {
          "method": "org.eclipse.swt.graphics.GC.drawImage",
          "source": "GC.java:675"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handlePaint",
          "source": "StyledText.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$13.handleEvent",
          "source": "StyledText.java:4252"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_PAINT",
          "source": "Composite.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:656"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.jav a:815"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:285"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:151"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:442"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:315"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "13013",
      "date": "2002-04-08T18:57:47+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "13013",
  "bugId": "13013",
  "date": "2002-04-08T18:57:47+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}