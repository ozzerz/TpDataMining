{
  "comments": [
    "Currently the org.eclipse.jst.pagedesigner.jsp.core includes jsp-api.jar and servlet-api.jar files.  I might be mistaken, but shouldn\u0027t it be using the javax.servlet and javax.servet.jsp Orbit bundles in the WTP builds instead?",
    "The orbit map files in WTP has the version 1.2.0 and 2.0.0\nplugin@javax.servlet.jsp,1.2.0\u003dGET,http://download.eclipse.org/tools/orbit/downloads/drops/I200705130851/bundles/javax.servlet.jsp_1.2.0.v200612120445.jar\nplugin@javax.servlet.jsp,2.0.0\u003dGET,http://download.eclipse.org/tools/orbit/downloads/drops/I200705130851/bundles/javax.servlet.jsp_2.0.0.v200703221034.jar\n\n\nHow is the bundle version range relate to the version mentioned in the map file?\njavax.servlet.jsp;bundle-version\u003d\"[2.0.0,3.0.0)\"",
    "There are two versions available (in Orbit) for anyone to use, so the versions in the map files are the \"trick\" to get the desired one included. \n\nThose values are used to \"match up\" based on what is said in the feature.xml file. \n\nSo we could use \n   \u003cplugin\n         id\u003d\"javax.servlet\"\n         download-size\u003d\"100\"\n         install-size\u003d\"100\"\n         version\u003d\"1.2.0\"\n         unpack\u003d\"false\"/\u003e\n\nif that\u0027s the one we wanted. \n\nAnd, I see now we say just \"0.0.0\" ... what should be changed to the specific one we want ... is \"2.0.0\" ok with you? \n\n",
    "Created an attachment (id\u003d70435)\nUse Orbit bundles\n\n",
    "Use of Orbit bundles for javax.servlet, javax.servlet.jsp and org.apache.commons.el.\n\nDo we need to update releng-\u003eorbitbundle*.map file to include commons.el or is that file generated from the feature.xml?\n\nRelated issue: We(JSP+JSF) are not using the 2.5 version of the javax.servlet and the latest (1.2?) version of commons.el. These are not in the Orbit bundles. I suspect we will uncover some limitations.",
    "Yes, your patch is correct. And no, nothing you need to do for orbit map. That map is generated during the orbit build, and we simply snag what ever copy of it we want. (and then our reference in feature.xml is all that\u0027s needed to get the map to work). \n\nAs for your \"Related issue: \", are you saying that the lower levels is true whether we make this change or not? Right? If so, then yes ... good to be aware of that and get started on updates for next cycle (or service) but .... if you are saying you in JSF would be \"moving down\" because of using orbit stuff, then certainly I would not recommend this change and don\u0027t feel it\u0027s required if there\u0027s any change of losing function or introducing something different. \n\n",
    "Raising for PMC review. I have tested this locally and see no issues. The preview page of the WPE uses these jars when resolving references to resource bundle and they work fine. Note that all the jars that are bing replaced are already being included and installed due to other project dependencies.",
    "Sounds good to me ... I think less redundancy in shipped code is worthwhile. \n",
    "Fixed for RC3.",
    "\nthe build.properties file still contains\n\n               lib/,\\\n\nwhich can be removed now. \n\n",
    "Preview functionality is  broken in RC4. Investigating.",
    "java.lang.LinkageError: Class javax/servlet/jsp/el/VariableResolver violates loader constraints\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.defineClass(DefaultClassLoader.java:161)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass(ClasspathManager.java:501)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl(ClasspathManager.java:471)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl(ClasspathManager.java:430)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:413)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)\n\tat org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:396)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat org.apache.commons.el.NamedValue.evaluate(NamedValue.java:124)\n\tat org.apache.commons.el.ComplexValue.evaluate(ComplexValue.java:140)\n\tat org.apache.commons.el.ExpressionEvaluatorImpl.evaluate(ExpressionEvaluatorImpl.java:263)\n\tat org.apache.commons.el.ExpressionEvaluatorImpl.evaluate(ExpressionEvaluatorImpl.java:190)\n\tat org.eclipse.jst.pagedesigner.preview.PageExpressionContext.evaluateExpression(PageExpressionContext.java:115)\n\tat org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverterDecorator.resolveChildText(DTTagConverterDecorator.java:149)\n\tat org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverterDecorator.decorateFromDTInfo(DTTagConverterDecorator.java:82)\n\tat org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverterDecorator.decorate(DTTagConverterDecorator.java:52)\n\tat org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverter.convertRefresh(DTTagConverter.java:75)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement(PreviewConvertContext.java:93)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert(PreviewConvertContext.java:56)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement(PreviewConvertContext.java:100)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert(PreviewConvertContext.java:56)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement(PreviewConvertContext.java:100)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert(PreviewConvertContext.java:56)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement(PreviewConvertContext.java:100)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert(PreviewConvertContext.java:56)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement(PreviewConvertContext.java:100)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert(PreviewConvertContext.java:56)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement(PreviewConvertContext.java:100)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert(PreviewConvertContext.java:56)\n\tat org.eclipse.jst.pagedesigner.preview.PreviewHandlerNew.generatePreview(PreviewHandlerNew.java:97)\n\tat org.eclipse.jst.pagedesigner.editors.HTMLEditor.pageChange(HTMLEditor.java:942)\n\tat org.eclipse.ui.part.MultiPageEditorPart$2.widgetSelected(MultiPageEditorPart.java:239)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:962)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:947)\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:706)\n\tat org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3227)\n\tat org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:2005)\n\tat org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:316)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1144)",
    "Created an attachment (id\u003d71982)\nRolls back servlet and el dependencies to local jars instead of orbit\n\nThis patch is intended as plan B if we cannot resolve current LinkageError issues with the orbit jars for el-common and servlet.",
    "I would like to have PMC approval to rollback to using local jars. It is not clear if the versions of JSF required jars in Orbit are compatible with each other. We are continuing to investigate.",
    "BTW, if we go with Plan B, I\u0027d recommend you use the latest known tagged\nversion that used the jars, which I see as v200705302227. (instead of \"applying\nthe patch\" ... \"patching\" with binary data, as the jars are, may not always\nwork, I\u0027ve heard. \n\nDo you have a small sample project that demonstrates the problem? ",
    "+1 on rolling back if necessary.",
    "There are two versions of javax.servlet.jsp and javax.servlet bundles. David discovered  that removing one of the javax.servlet.jsp bundle fixes the issue. He is following up with the Platfrom folks to make sure we ship only one  version. We will wait for the feedback to decide if we need to rollback.\n\n(Thanks to David for working on this till 3.00 AM!)",
    "+1 pre-approval. I\u0027d prefer if we can resolve the current issue and keep using the Orbit jars, but if that\u0027s not going well then let\u0027s roll this back and open a new bug to track using Orbit for 3.0.",
    "(In reply to comment #16)\n\u003e There are two versions of javax.servlet.jsp and javax.servlet bundles. \n\nI should clarify that these are two installs of the same version with different file sizes! For example,\njavax.servlet.jsp_2.0.0.v200705231728.jar - 58KB\njavax.servlet.jsp_2.0.0.v200706191603.jar - 56KB\n",
    "The platform has confirmed they will move to the \"final\" orbit build, I think today, so until we re-synch with the Platform\u0027s RC5, or what ever they call it, \nwe\u0027ll have to \"manually\" delete the older one from installs. \n\nI\u0027d prefer then to leave as is now until we understand this better, and make sure we fix the correct way. Essentially, there\u0027s some code that does a live \"evaluation\" of some snippet of code, calling beaninfo even, so there are is another, non-OSGI classloader created to handle that, and I\u0027m not sure if that\u0027s the behavior we want. That non-OSGI classloader, I suspect, somehow finds the older javax.servlet.jar first, instead of the one with the higher qualifier, as OSGi does. \n\nAnd, just to document my quick glance at the code, there is some code in a jst.pagedesigner package that triggers this \"eval\", and also it\u0027s doing some funky stuff with jar files directly ... so it _might_ be in this \"find jar\" code that something is going wrong. \n\nMy main concern is that having our own \"private jar\" might actually be masking a larger classpath/lookup problem that will only surface later in another form. \n\nSo, since there\u0027s a known workaround that isn\u0027t too bad (and only needed in the off chance some one _else_ installs yet another javax.servlet.jsp bundle) ... then I\u0027d recommend we track this down for service release so it\u0027s more bullet proof. \n\nOf course, if something happens and the Platform doesn\u0027t line up ... then I\u0027d still recommend reverting, since \"out of the box\" experience would be bad. As it is, I suspect no one will hit this in practice ... at least, before the service release :) \n\nNext week, we\u0027ll need to monitor the \"total Europa install\" and make sure everyone is using the right bundle. \n\nSimilarly, this looks like a prime test case to install, with update manager, the platform in one location and all of WTP in another location. This then will end up purposely with two copies of the javax.servlet.jsp bundle, with exact same qualifier. Only one will be activated ... so would be important to see if the issue re-surfaces in that use-case. If so, I\u0027d still recommend a \"release note\" until we really understand it. \n\nOpps ... planes about to board :) \n",
    "The following versions (all others removed) are producing correct preview behaviour:\njavax.servlet.jsp_2.0.0.v200706191603.jar \njavax.servlet_2.4.0.v200706111738.jar \norg.apache.commons.el_1.0.0.v200706111724.jar\nThese are all the latest versions in the build S-2.0RC4-200706201726.\n\nI would like to make sure these are the jars that get picked in the final build.\n\n",
    "(In reply to comment #19)\n\n\u003e And, just to document my quick glance at the code, there is some code in a\n\u003e jst.pagedesigner package that triggers this \"eval\", and also it\u0027s doing some\n\u003e funky stuff with jar files directly ... so it _might_ be in this \"find jar\"\n\u003e code that something is going wrong. \n\nDavid, could you please provide more specific information on where we can find the code that\u0027s \"...doing some funky stuff with jar files directly...\"? We\u0027ve sifted through our code but have yet to find anything like this.\n\nThanks,\n - Ian",
    "(In reply to comment #21)\n\u003e (In reply to comment #19)\n\u003e \n\n\u003e the code that\u0027s \"...doing some funky stuff with jar files directly...\"? We\u0027ve\n\u003e sifted through our code but have yet to find anything like this.\n\u003e \n\nWell, looking at it again, not sure its about \"jars\", but I think what I saw was in LoadBundleOperation .. I saw some classpath entries, and some \"findMembers\" in project .... so, by \"funky\" I just meant I didn\u0027t understand what it was doing. \nIt seems a \"hard way\" to find resources on the classpath ... as opposed to \nclassloader.getResouce(). But, like I said, I just meant to be writing down some ideas ... I haven\u0027t studies it all that much. \n\n\n",
    "(In reply to comment #22)\n\u003e (In reply to comment #21)\n\u003e Well, looking at it again, not sure its about \"jars\", but I think what I saw\n\u003e was in LoadBundleOperation .. I saw some classpath entries, and some\n\u003e \"findMembers\" in project .... so, by \"funky\" I just meant I didn\u0027t understand\n\u003e what it was doing. \n\u003e It seems a \"hard way\" to find resources on the classpath ... as opposed to \n\u003e classloader.getResouce(). But, like I said, I just meant to be writing down\n\u003e some ideas ... I haven\u0027t studies it all that much. \n\nI agree, the code in LoadBundleOperation does seem oddly-structured for what it is doing, and I appreciate your mentioning it; looks like something for us to clean up in a future release. However, I don\u0027t feel that this would trigger loading of any specific plugin over any other.\n\nThanks for the clarification,\n - Ian",
    "JSF Web Page Editor Preview functionality works correctly with Eclipse I20070621-1340 and WTP S-2.0RC4-200706212235 (and prereqs).\n\nThe following files installed by Eclipse and WTP have the same file name but have different sizes.  Shouldn?t we be shipping the same bits? \n\njavax.servlet.jsp_2.0.0.v200706191603.jar ? 62 KB (Eclipse install), 56KB (WTP install)\njavax.servlet_2.4.0.v200706111738.jar ? 106 KB (Eclipse install),  99 KB (WTP install)\norg.apache.commons.el_1.0.0.v200706111724.jar ? 125 KB (Eclipse install), 118 KB (WTP install)\n\nMarking this as Fixed. We will open a new  bug to track jars with same name and different size."
  ],
  "commentCreationDates": [
    "2007-04-05T00:29:23+02:00",
    "2007-05-23T22:32:30+02:00",
    "2007-05-23T23:12:22+02:00",
    "2007-06-07T01:33:44+02:00",
    "2007-06-07T01:48:19+02:00",
    "2007-06-07T03:50:20+02:00",
    "2007-06-07T22:32:04+02:00",
    "2007-06-07T22:41:24+02:00",
    "2007-06-07T23:25:15+02:00",
    "2007-06-08T05:19:48+02:00",
    "2007-06-21T01:59:43+02:00",
    "2007-06-21T02:10:18+02:00",
    "2007-06-21T04:51:38+02:00",
    "2007-06-21T06:21:16+02:00",
    "2007-06-21T06:23:35+02:00",
    "2007-06-21T14:59:01+02:00",
    "2007-06-21T15:51:46+02:00",
    "2007-06-21T16:59:28+02:00",
    "2007-06-21T17:07:09+02:00",
    "2007-06-21T20:27:21+02:00",
    "2007-06-21T20:51:16+02:00",
    "2007-06-21T22:36:53+02:00",
    "2007-06-22T08:52:15+02:00",
    "2007-06-22T18:44:47+02:00",
    "2007-06-23T01:01:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.LinkageError",
      "message": "Class javax/servlet/jsp/el/VariableResolver violates loader constraints",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:620"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.defineClass",
          "source": "DefaultClassLoader.java:161"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass",
          "source": "ClasspathManager.java:501"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl",
          "source": "ClasspathManager.java:471"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl",
          "source": "ClasspathManager.java:430"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:413"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:340"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass",
          "source": "SingleSourcePackage.java:37"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "BundleLoader.java:396"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:369"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:357"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        },
        {
          "method": "org.apache.commons.el.NamedValue.evaluate",
          "source": "NamedValue.java:124"
        },
        {
          "method": "org.apache.commons.el.ComplexValue.evaluate",
          "source": "ComplexValue.java:140"
        },
        {
          "method": "org.apache.commons.el.ExpressionEvaluatorImpl.evaluate",
          "source": "ExpressionEvaluatorImpl.java:263"
        },
        {
          "method": "org.apache.commons.el.ExpressionEvaluatorImpl.evaluate",
          "source": "ExpressionEvaluatorImpl.java:190"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PageExpressionContext.evaluateExpression",
          "source": "PageExpressionContext.java:115"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverterDecorator.resolveChildText",
          "source": "DTTagConverterDecorator.java:149"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverterDecorator.decorateFromDTInfo",
          "source": "DTTagConverterDecorator.java:82"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverterDecorator.decorate",
          "source": "DTTagConverterDecorator.java:52"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.dtmanager.converter.internal.DTTagConverter.convertRefresh",
          "source": "DTTagConverter.java:75"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement",
          "source": "PreviewConvertContext.java:93"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert",
          "source": "PreviewConvertContext.java:56"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement",
          "source": "PreviewConvertContext.java:100"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert",
          "source": "PreviewConvertContext.java:56"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement",
          "source": "PreviewConvertContext.java:100"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert",
          "source": "PreviewConvertContext.java:56"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement",
          "source": "PreviewConvertContext.java:100"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert",
          "source": "PreviewConvertContext.java:56"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement",
          "source": "PreviewConvertContext.java:100"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert",
          "source": "PreviewConvertContext.java:56"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvertElement",
          "source": "PreviewConvertContext.java:100"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewConvertContext.previewConvert",
          "source": "PreviewConvertContext.java:56"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.preview.PreviewHandlerNew.generatePreview",
          "source": "PreviewHandlerNew.java:97"
        },
        {
          "method": "org.eclipse.jst.pagedesigner.editors.HTMLEditor.pageChange",
          "source": "HTMLEditor.java:942"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart$2.widgetSelected",
          "source": "MultiPageEditorPart.java:239"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:227"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:962"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:947"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java:706"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder.setSelection",
          "source": "CTabFolder.java:3227"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder.onMouse",
          "source": "CTabFolder.java:2005"
        },
        {
          "method": "org.eclipse.swt.custom.CTabFolder$1.handleEvent",
          "source": "CTabFolder.java:316"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3682"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3293"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1144"
        }
      ],
      "number": 0,
      "commentIndex": 11,
      "bugId": "181086",
      "date": "2007-06-21T02:10:18+02:00",
      "product": "Java Server Faces",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "181086",
  "bugId": "181086",
  "date": "2007-04-05T00:29:23+02:00",
  "product": "Java Server Faces",
  "component": "UI",
  "severity": "normal"
}