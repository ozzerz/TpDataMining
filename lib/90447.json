{
  "comments": [
    "3.1M6\n\n- run the snippet below and click on the Tree, which does a Tree.removeAll()\n\npublic static void main(String[] args) {\n\tDisplay display \u003d new Display();\n\tShell shell \u003d new Shell(display);\n\tshell.setBounds(10,10,200,200);\n\tfinal Tree tree \u003d new Tree(shell, SWT.NONE);\n\ttree.setBounds(10,10,100,100);\n\tfor (int i \u003d 0; i \u003c 9; i++) {\n\t\tfinal int index \u003d i;\n\t\tTreeItem item \u003d new TreeItem(tree, SWT.NONE);\n\t\titem.setText(\"item \" + i);\n\t\tif (i % 2 \u003d\u003d 0) {\n\t\t\titem.addDisposeListener(new DisposeListener() {\n\t\t\t\tpublic void widgetDisposed(DisposeEvent e) {\n\t\t\t\t\tSystem.out.println(\"created item\");\n\t\t\t\t\tnew TreeItem(tree, SWT.NONE).setText\n(\"bad guy \" + index);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\ttree.addListener(SWT.MouseDown, new Listener() {\n\t\tpublic void handleEvent(Event event) {\n\t\t\ttree.removeAll();\n\t\t}\n\t});\n\tshell.open();\n\twhile (!shell.isDisposed()) {\n\t\tif (!display.readAndDispatch()) display.sleep();\n\t}\n\tdisplay.dispose();\n}\n\nThe stack:\n\njava.lang.ArrayIndexOutOfBoundsException: 9\n\tat org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:3262)\n\tat org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3558)\n\tat org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:1021)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3080)\n\tat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1493)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1552)\n\tat org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:223)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3114)\n\tat org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2360)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3466)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1628)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525)\n\tat win32.Main.main(Main.java:36)",
    "This code is creating new TreeItems in a dispose callback.  Is Eclipse doing \nthis?",
    "Not that I know of, this is just a case that VI pointed out to me previously, \nand when I went to see how win32 handles this I saw the problem.  The expected \nbehaviour is for the newly-created items to also be disposed by the preceding \nremoveAll(), so there\u0027s no real benefit for a client to do this, but it\u0027s still \nvalid.\n",
    "Fixed \u003e 20050809"
  ],
  "commentCreationDates": [
    "2005-04-06T15:35:34+02:00",
    "2005-04-07T00:31:01+02:00",
    "2005-04-07T15:08:00+02:00",
    "2005-08-10T00:51:22+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "9",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.Tree.wmNotifyChild",
          "source": "Tree.java:3262"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_NOTIFY",
          "source": "Control.java:3558"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_NOTIFY",
          "source": "Composite.java:1021"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3080"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1493"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3466"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.CallWindowProc",
          "source": "OS.java:1552"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.callWindowProc",
          "source": "Tree.java:223"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3114"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.windowProc",
          "source": "Tree.java:2360"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3466"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1628"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2525"
        },
        {
          "method": "win32.Main.main",
          "source": "Main.java:36"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "90447",
      "date": "2005-04-06T15:35:34+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "90447",
  "bugId": "90447",
  "date": "2005-04-06T15:35:34+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}