{
  "comments": [
    "Urgent!\n\nI have a class that makes this call. The object in question is a method object\nthat I got from the Java Code model.\n\nthe method has the following signature:\n\n\"private int[][][][][] MethodName(int[][])\"\n\nIt works as expected under Eclipse 2.1.\n\nUnder 3.X it throws an exception.\n\nThe watch/inspect features of the code snippet fail also.\n\nI am assuming this is not a version incompatibility because it is not\nhighlighted as such by the IDE.\n\nThanks a lot!!",
    "The other method that could have helped me:\n\ngetSignature() also causes an exception.\n\nThe only method from org.eclipse.jdt.core.IMethod that has worked so far is \n\ngetNumberOfParameters()",
    "Could you please provide a complete test case? Or steps to reproduce.",
    "Ok these is the sequence of steps:\n\nget Workspace\nget Project members\nget Compilation Unit\nget Methods\nget individual org.eclipse.jdt.core.IMethod\n\nthen call\ngetNumberOfParameters() -\u003e Success 2.x and 3.x\ngetReturnType() -\u003e Success 2.x only\ngetSignature() -\u003e Success 2.x only",
    "Any news on this?",
    "Could not reproduce.\n\nHere is my test case:\npublic class X {\n    private int[][][][][] MethodName(int[][] tab) {\n    \treturn null;\n    }\n}\nI could get the type then the IMethod and retrieve its signature and return type.\nSignature is: ([[I)[[[[[I\nReturn type is: [[[[[I\n\nSo please provide a test case.",
    "Olivier:\n\nHow did you get the IMethod?\n\nDid you follow the same steps?\n\nObviously the problem is not on the target method. The problem most likely is on\nthe sequence of steps that provide the IMethod.\n\nThese are the steps that reproduced the problem. The app being developed is a\nplugin with an action that extends the Java perspective.\n\n1) get the Workspace.\n2) Workspace-\u003egetRoot\n3) Root-\u003emembers (PROJECT flag)\n4) Process members until it matches the java source file which needs processing.\n5) createCompilationU((IFile)member)\n6) CompilationUnit-\u003egetTypes()\n7) IType[X]-\u003e getMethods()\n8) IMethod-\u003egetReturnType() -\u003e Succeeds in 2.X fails in 3.X\n\nThere is nothing in the Docs or the IDE highlights that inidicates a change of\nbehavior from 2.x to 3.X on this particular API.\n\nHTH",
    "Why are you saying that the problem is not the target method?\nIf you get the IMethod and the call getReturnType() fails, this is where the\nproblem is.\nCould you please provide the stack trace and a reproducable test case? Thanks.",
    "Olivier:\n\nI assumed that tartget method is:\n\npublic class X {\n    private int[][][][][] MethodName(int[][] tab) {\n    \treturn null;\n    }\n}\n\nThis method does not belong to jdt in any shape or form. So using eclipse 2.X or\n3.X does not affect the target method. It does NOT belong to Eclipse.\n\nI provided you the sequence of steps (as you required at the beginning of the\nthread) twice, the first time not as specific as the second time.\n\nI am going to repeat the second sequence:\n\nThe app being developed is a plugin with an action that extends the Java\nperspective. Firing the action will set in motion the following:\n\n1) get the Workspace.\n2) Workspace-\u003egetRoot\n3) Root-\u003emembers (PROJECT flag)\n4) Process members until it matches the java source file which needs processing.\n5) createCompilationUnitFrom((IFile)member)\n6) CompilationUnit-\u003egetTypes()\n7) IType[X]-\u003e getMethods()\n8) IMethod[Y]-\u003egetReturnType() -\u003e Succeeds in 2.X fails in 3.X",
    "Could you please attach your exported plugin? I will give it a try.\nI saw your steps. If I ask more details, it means that I wasn\u0027t able to\nreproduce the failure using your steps.\n\nSo could you please provide your plugin (with source attached if possible) and I\nwill try it?\nMy comment 5 shows that it is not that obvious to reproduce the failure.",
    "Obviously, if I have not provided the source code, it\u0027s because I can\u0027t.\n\nI saw your comment 5 and I wanted to confirm that the steps were followed.\n\nAny suggestions that I can use from here to clarify the situation?",
    "At least give us the stack trace. For there, I can try to see what is going on.\nFrom your steps, I don\u0027t understand what is happening in step 8.\n\nIf you cannot provide source code, can you provide the plugin as a binary plugin?",
    "Reopen when you can provide either the stack trace or the binary plugin.",
    "Olivier:\n\nSorry, giving the binaries is a no go but this is the stack trace:\n\njava.lang.IllegalArgumentException\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:1665)\n\tat org.eclipse.jdt.core.Signature.appendArrayTypeSignature(Signature.java:1691)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:1629)\n\tat org.eclipse.jdt.core.Signature.appendArrayTypeSignature(Signature.java:1691)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:1629)\n\tat org.eclipse.jdt.core.Signature.toCharArray(Signature.java:1601)\n\tat org.eclipse.jdt.core.Signature.toString(Signature.java:1952)\n\tat org.eclipse.jdt.internal.core.SourceMethod.toStringName(SourceMethod.java:298)\n\tat org.eclipse.jdt.internal.core.SourceMethod.toStringInfo(SourceMethod.java:275)\n\tat\norg.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors(JavaElement.java:637)\n\tat\norg.eclipse.jdt.internal.core.JavaModelStatus.getMessage(JavaModelStatus.java:194)\n\tat org.eclipse.core.runtime.CoreException.\u003cinit\u003e(CoreException.java:37)\n\tat org.eclipse.jdt.core.JavaModelException.\u003cinit\u003e(JavaModelException.java:70)\n\tat\norg.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:561)\n\tat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:583)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:309)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:295)\n\tat org.eclipse.jdt.internal.core.SourceMethod.getReturnType(SourceMethod.java:166)\n\tat JOSE\u0027S Method2(IdePluginAction.java) \u003c- this makes the getReturnType() call\n\tat JOSE\u0027S Method1(IdePluginAction.java)\n\tat JOSE\u0027S run(IdePluginAction.java) \u003c- required by the Action Extension Point\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:276)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:206)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)\n\tat\norg.eclipse.jface.action.ActionContributionItem$8.handleEvent(ActionContributionItem.java:824)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)",
    "What build are you using?",
    "Olivier:\n\nI am using 200409161125.\n\nThanks a lot!",
    "Could you please try to reproduce with a newer build? I cannot retrieve your\nbuild anymore. It is pretty old and lots of fixes have been provided in this area.\nYou can try to reproduce with I20041208-1200.\nThanks.",
    "Olivier:\n\nTried this build. Same results. Maybe even worse: stack trace is not generated.",
    "Then it is really bad, because I cannot do anything. I cannot retrieve the first\nbuild you used.\nWhy is it a problem to get the binary plugin? I won\u0027t reverse-engineer it. I\nsimply want to reproduce the issue. I could put breakpoints and debug it, but\nright now I cannot even get a reproducable test case.\nDid you look into the .metadata folder? Don\u0027t you have a .log file in it?",
    "Closing as REMIND.\nReopen when you can provide more details or information to continue the\ninvestigation.",
    "Olivier:\n\nI manage to get a stack trace with the new code base:\n\njava.lang.IllegalArgumentException\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:2447)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:2357)\n\tat org.eclipse.jdt.core.Signature.appendArrayTypeSignature(Signature.java:2491)\n\tat org.eclipse.jdt.core.Signature.appendArrayTypeSignature(Signature.java:2465)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:2407)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:2357)\n\tat org.eclipse.jdt.core.Signature.appendArrayTypeSignature(Signature.java:2491)\n\tat org.eclipse.jdt.core.Signature.appendArrayTypeSignature(Signature.java:2465)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:2407)\n\tat org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:2357)\n\tat org.eclipse.jdt.core.Signature.toCharArray(Signature.java:2336)\n\tat org.eclipse.jdt.core.Signature.toString(Signature.java:2755)\n\tat org.eclipse.jdt.internal.core.SourceMethod.toStringName(SourceMethod.java:333)\n\tat org.eclipse.jdt.internal.core.SourceMethod.toStringName(SourceMethod.java:314)\n\tat org.eclipse.jdt.internal.core.SourceMethod.toStringInfo(SourceMethod.java:299)\n\tat\norg.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors(JavaElement.java:612)\n\tat\norg.eclipse.jdt.internal.core.JavaModelStatus.getMessage(JavaModelStatus.java:194)\n\tat org.eclipse.core.runtime.CoreException.\u003cinit\u003e(CoreException.java:42)\n\tat org.eclipse.jdt.core.JavaModelException.\u003cinit\u003e(JavaModelException.java:70)\n\tat\norg.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:527)\n\tat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:558)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:291)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:277)\n\tat org.eclipse.jdt.internal.core.SourceMethod.getReturnType(SourceMethod.java:190)\n\tat JOSE\u0027S Method 2(IdePluginAction.java)\u003c- this makes the getReturnType() call\n\tat JOSE\u0027S Method 1(IdePluginAction.java)\n\tat JOSE\u0027S run(IdePluginAction.java) \u003c- Plugin API requirement.\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:243)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:221)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)\n\tat\norg.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:814)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1578)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1549)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:281)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:710)\n\tat org.eclipse.core.launcher.Main.main(Main.java:694)\n\nIn addtion the code base that I originally used is at:\n\nhttp://www.mirror.ac.uk/mirror/download.eclipse.org/eclipse/downloads/drops/R-3.0.1-200409161125/\n\nBinaries and source.\n\nSorry for the inconvenience but I am not allowed to get the binaries out of the\ndoor. ",
    "J?r?me, this seems to be a case where a Java element is missing and we try to\nbuild the exception\u0027s message. During the creation of the message, an\nillegalArgumentException occurs.\nIt is unclear how we got into that state, but we might want to protect the code\nfrom failing when the exception is thrown.",
    "J?r?me,\n\nAs a summary, so you do not have to read the whole thread:\n\n*) This problem does NOT happen with 2.X.\n\n*) The other method that I could have used as a workaround: getSignature()\ncauses an exception too. It could be that these two methods (getSignature() and\ngetReturnType()) rely on the same java element.\n\nThe odd thing is that getNumberOfParameters() succeeds on the same IMethod.\n\nCould it be that the problem is not the java element per se but its handling of\nstrings?  (getNumberOfParameters() returns integers)\n\nHope this helps.",
    "Changed toStringName(StringBuffer, int) in SourceMethod and BinaryMethod to\ncatch the IllegalArgumentException.\nAdded regression test ExistenceTests#testMethodWithInvalidParameter().\n\njcornado (sorry I\u0027m not sure about your name), please try 3.1 M4 (to be out at\nthe end of the week). getReturnType() should now throw a JavaModelExeception\nindicating that the method doesn\u0027t exist with a more explicit message. From\nthere, please enter a new bug if you consider that the method should exist.",
    "Note that with the fix in, the following passes:\n\tcreateJavaProject(\"P\");\n\tcreateFile(\n\t\t\"P/X.java\", \n\t\t\"public class X {\\n\" + \n\t\t\"    private int[][][][][] MethodName(int[][] tab) {\\n\" + \n\t\t\"    \treturn null;\\n\" + \n\t\t\"    }\\n\" + \n\t\t\"}\"\n\t);\n\tIMethod method \u003d getCompilationUnit(\"P/X.java\").getType(\"X\").getMethods()[0];\n\tassertEquals(\"[[[[[I\", method.getReturnType()); ",
    "Verified for 3.1 M4 using build I200412142000.\n(ExistenceTests#testMethodWithInvalidParameter() \"correctly\" fails with 3.1 M3,\nwhich means that IAE is now well managed).",
    "Ok guys, is build M3 going to be out today? (I am in Austin, TX for time zone\npurposes) or next week?",
    "J?r?me:\n\nIf this is of any help (maybe for future reference):\n\nThis bug never showed in my Win XP SP2 or RH 9.0 running 2.X.\n\nBut this week I decided to upgrade the Linux box to Fedora Core 2.0 and managed\nto reproduce the problem with 2.X too.\n\nThe same stack trace.\n\nJos?",
    "I am going to try M4 with Windows XP.\n\nI just tried M4 running in a Fedora Core 2 box and it still fails.\n\nThe IMethod object is valid because when I call \"getNumberOfParameters\" it\ncorrectly returns 1.\n\nSo the underlying object exists and it is properly initialized (not a\nlazy-initialization problem for the IMethod)\n\nI can NOT provide the binaries.\n\nI will post the stack trace or close the bug depending on the results from the\nWin XP SP2 workstation.",
    "J?r?me,\n\nThe problem occurs also with an officially supported platform (Win XP SP2)\n\nI think the problem lies with the way strings are handled.\n\nIf we look at the following:\n\n*) The *.java file compiles successfully.\n\n*) getNumberOfParameters succeeds. So at least the method signature has been \nparsed inside the JDT in some form.\n\n*) getReturnType() and getSignature() both return strings.\n\nJos?\n\nSTACK TRACE:\n\nJava Model Exception: Java Model Status [TakeAndReturnMultiIntArray(*** invalid\nsignature: [[int) [in HelloCompaKcto [in [Working copy] HelloCompaKcto.java [in\ncom.efeKctive.demo [in src [in HelloCompaKcto]]]]] does not exist]\n\tat\norg.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:527)\n\tat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:558)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:291)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:277)\n\tat org.eclipse.jdt.internal.core.SourceMethod.getReturnType(SourceMethod.java:190)\n\tat JOSE\u0027s method 2(IdePluginAction.java)\n\tat JOSE\u0027s method 1(IdePluginAction.java)\n\tat JOSE\u0027s run(IdePluginAction.java) ---\u003e Required API\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:244)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:220)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)\n\tat\norg.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1569)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1540)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:285)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:710)\n\tat org.eclipse.core.launcher.Main.main(Main.java:694)\nJava Model Exception: Java Model Status [TakeAndReturnMultiIntArray(*** invalid\nsignature: [[int) [in HelloCompaKcto [in [Working copy] HelloCompaKcto.java [in\ncom.efeKctive.demo [in src [in HelloCompaKcto]]]]] does not exist]\n\tat\norg.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:527)\n\tat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:558)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:291)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:277)\n\tat org.eclipse.jdt.internal.core.SourceMethod.getReturnType(SourceMethod.java:190)\n\tat JOSE\u0027s method 2(IdePluginAction.java)\n\tat JOSE\u0027s method 1(IdePluginAction.java)\n\tat JOSE\u0027s run(IdePluginAction.java) ---\u003e Required API\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:244)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:220)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)\n\tat\norg.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1569)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1540)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:285)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:710)\n\tat org.eclipse.core.launcher.Main.main(Main.java:694)\nJava Model Exception: Java Model Status [TakeAndReturnMultiIntArray(*** invalid\nsignature: [[int) [in HelloCompaKcto [in [Working copy] HelloCompaKcto.java [in\ncom.efeKctive.demo [in src [in HelloCompaKcto]]]]] does not exist]\n\tat\norg.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:527)\n\tat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:558)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:291)\n\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:277)\n\tat org.eclipse.jdt.internal.core.SourceMethod.getSignature(SourceMethod.java:197)\n\tat JOSE\u0027s method 2(IdePluginAction.java)\n\tat JOSE\u0027s method 1(IdePluginAction.java)\n\tat JOSE\u0027s run(IdePluginAction.java) ---\u003e Required API\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:244)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:220)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:555)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:505)\n\tat\norg.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:460)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2803)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1569)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1540)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:285)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:220)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:710)\n\tat org.eclipse.core.launcher.Main.main(Main.java:694)",
    "Jose, how did you obtain the IMethod ? Did you use IType#getMethod(String,\nString[]) ?",
    "I called IMethod[] getMethods() then worked with each individual method.\n\nIt happens immediately with the first IMethod of the array.",
    "The \"IMethod[] getMethods()\" refers to the return type and method name.\n\nThe complete signature should be:\n\nIMethod[] IType.getMethods()\n",
    "Sorry but I cannot reproduce the problem. I created a compilation unit with the\nfollowing contents:\npublic class X {\n  private int[][][][][] foo(int[][]) {\n  }\n}\nthen got the IMethods using IType#getMethods(). When I ask for the return type\nof the first (and only) method, I get \"[[[[[I\" as expected.\n\nWhat is the content of the \"HelloCompaKcto.java\" compilation unit ?",
    "J?r?me:\n\nThese are the contents of the CU.\n\nIt is a JFrame with several TabbedPanes that hold most of the AWT and Swing widgets.\n\nPlus two methods that take annd return [[i ans [[[[[i\n\nDo you know where the problem comes from?\n\nFile contents:\n\npackage com.efeKctive.demo;\n\npublic class SampleCompaKcto extends javax.swing.JFrame {\n\t\n\tjava.lang.String InvocationResult\t\u003d \"\";\n\tjava.lang.String InvocationResult1 \t\u003d \"\";\n\n     public SampleCompaKcto() {\n        initComponents();\n    }\n    \n\tprivate int[][][][][] TakeAndReturnMultiIntArray(int[][][][][] test){\n\t\treturn test;\n\t}\n\n\tprivate int[][] TakeAndReturnTwoIntArray(int[][] test){\n\t\treturn test;\n\t}\n\n\tprivate void jTabbedPane1_StateChanged(javax.swing.event.ChangeEvent evt) {\n\t}\n\n\tprivate void button1_MouseClicked(java.awt.event.MouseEvent evt) {\n\t\tthis.InvocationResult \u003d \"AWT Button Clicked\";\n\t}\n\t\n\tprivate void checkbox1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d \"AWT Checkbox Checked\";\n\t}\n\n    private void choice1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d evt.getItem().toString();\n    }\n\n\tprivate void scrollbar1_AdjustmentValueChanged(java.awt.event.AdjustmentEvent\nevt) {\n\t\tthis.InvocationResult \u003d \"\" + evt.getValue();\n\t}\n\n\tprivate void list1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d list1_.getSelectedItem();\n\t}\n\n\tprivate void textField1_KeyTyped(java.awt.event.KeyEvent evt) {\n\t\tthis.InvocationResult \u003d textField1_.getText(); \t\t\n\t}\n\n\tprivate void textField1_TextValueChanged(java.awt.event.TextEvent evt) {\n\t\tthis.InvocationResult \u003d textField1_.getText(); \t\t\n\t}\n\n\tprivate void jButton1_MouseClicked(java.awt.event.MouseEvent evt) {\n\t\tthis.InvocationResult \u003d \"Swing Button Clicked\";\n\t}\n\n\tprivate void jToggleButton1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d java.lang.Boolean.toString(jToggleButton1_.isSelected());\n\t\tthis.InvocationResult1 \u003d java.lang.Boolean.toString(jToggleButton2_.isSelected());\n\t}\n\n\tprivate void jToggleButton2_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d java.lang.Boolean.toString(jToggleButton1_.isSelected());\n\t\tthis.InvocationResult1 \u003d java.lang.Boolean.toString(jToggleButton2_.isSelected());\n\t}\n\n\tprivate void jCheckBox1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t   this.InvocationResult \u003d java.lang.Boolean.toString(jCheckBox1_.isSelected());\n\t   this.InvocationResult1 \u003d java.lang.Boolean.toString(jCheckBox2_.isSelected());\n\t}\n\n\tprivate void jCheckBox2_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t   this.InvocationResult \u003d java.lang.Boolean.toString(jCheckBox1_.isSelected());\n\t   this.InvocationResult1 \u003d java.lang.Boolean.toString(jCheckBox2_.isSelected());\n\t}\n\n\tprivate void jRadioButton1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d java.lang.Boolean.toString(jRadioButton1_.isSelected());\n\t\tthis.InvocationResult1 \u003d java.lang.Boolean.toString(jRadioButton2_.isSelected());\n\t }\n\n\t private void jRadioButton2_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d java.lang.Boolean.toString(jRadioButton1_.isSelected());\n\t\tthis.InvocationResult1 \u003d java.lang.Boolean.toString(jRadioButton2_.isSelected());\n\t }\n\n\tprivate void jComboBox1_ItemStateChanged(java.awt.event.ItemEvent evt) {\n\t\tthis.InvocationResult \u003d evt.getItem().toString();\n\t }\n\n\tprivate void jTextField1_KeyReleased(java.awt.event.KeyEvent evt) {\n\t\tthis.InvocationResult \u003d jTextField1_.getText();\n\n\t}\n\n\tprivate void jPasswordField1_KeyReleased(java.awt.event.KeyEvent evt) {\n\t\tthis.InvocationResult \u003d java.lang.String.valueOf(jPasswordField1_.getPassword());\n\t}\n\n\tprivate void jSpinner1_StateChanged(javax.swing.event.ChangeEvent evt) {\n\t\tthis.InvocationResult \u003d jSpinner1_.getValue().toString();\n\t}\n\n\tprivate void jList1_ValueChanged(javax.swing.event.ListSelectionEvent evt){\n\t\tjTextPane1_.setText(jList1_.getSelectedValue().toString());\n\t\tthis.InvocationResult \u003d jList1_.getSelectedValue().toString();\n\t}\n\n    private void jTree1_TreeWillExpand(javax.swing.event.TreeExpansionEvent\nevt)throws javax.swing.tree.ExpandVetoException {\n\t\tthis.InvocationResult \u003d evt.getPath().toString(); \n    }\n\n\tprivate void jTree1_TreeExpanded(javax.swing.event.TreeExpansionEvent evt) {\n\t\tthis.InvocationResult \u003d evt.getPath().toString(); \n\t}\n\n    private void jTree1_TreeWillCollapse(javax.swing.event.TreeExpansionEvent\nevt)throws javax.swing.tree.ExpandVetoException {\n\t\tthis.InvocationResult \u003d evt.getPath().toString(); \n    }\n\n    private void jTree1_TreeCollapsed(javax.swing.event.TreeExpansionEvent evt) {\n\t\tthis.InvocationResult \u003d evt.getPath().toString(); \n    }\n\n    private void jTree1_ValueChanged(javax.swing.event.TreeSelectionEvent evt) {\n\t\tthis.InvocationResult \u003d evt.getPath().toString(); \n    }\n\n    /** Exit the Application */\n     private void exitForm(java.awt.event.WindowEvent evt) {\n        System.exit(0);\n    }\n    \n\tpublic static void main(String args[]) {\n\t\tSampleCompaKcto T \u003d new SampleCompaKcto();\n\t\tT.show();\n    }\n\n\tprivate void initComponents() {\n\t\t\tjava.awt.GridBagConstraints gridBagConstraints;\n\n\t\t\tbuttonGroup1 \u003d new javax.swing.ButtonGroup();\n\t\t\tbuttonGroup2 \u003d new javax.swing.ButtonGroup();\n\t\t\tbuttonGroup3 \u003d new javax.swing.ButtonGroup();\n\t\t\tjTabbedPane1_ \u003d new javax.swing.JTabbedPane();\n\t\t\tjPanel1_ \u003d new javax.swing.JPanel();\n\t\t\tbutton1_ \u003d new java.awt.Button();\n\t\t\ttextField1_ \u003d new java.awt.TextField(30);\n\t\t\tcheckbox1_ \u003d new java.awt.Checkbox();\n\t\t\tchoice1_ \u003d new java.awt.Choice();\n\t\t\tlist1_ \u003d new java.awt.List();\n\t\t\tscrollbar1_ \u003d new java.awt.Scrollbar();\n\t\t\tjPanel2_ \u003d new javax.swing.JPanel();\n\t\t\tjButton1_ \u003d new javax.swing.JButton();\n\t\t\tjToggleButton1_ \u003d new javax.swing.JToggleButton();\n\t\t\tjToggleButton2_ \u003d new javax.swing.JToggleButton();\n\t\t\tjCheckBox1_ \u003d new javax.swing.JCheckBox();\n\t\t\tjCheckBox2_ \u003d new javax.swing.JCheckBox();\n\t\t\tjRadioButton1_ \u003d new javax.swing.JRadioButton();\n\t\t\tjRadioButton2_ \u003d new javax.swing.JRadioButton();\n\t\t\tjPanel3_ \u003d new javax.swing.JPanel();\n\t\t\tjComboBox1_ \u003d new javax.swing.JComboBox();\n\t\t\tjTextField1_ \u003d new javax.swing.JTextField(30);\n\t\t\tjPasswordField1_ \u003d new javax.swing.JPasswordField(30);\n\t\t\tjSpinner1_ \u003d new javax.swing.JSpinner();\n\t\t\tjPanel4_ \u003d new javax.swing.JPanel();\n\t\t\tjSplitPane1_ \u003d new javax.swing.JSplitPane();\n\t\t\tjTextPane1_ \u003d new javax.swing.JTextPane();\n\t\t\tjScrollPane1_ \u003d new javax.swing.JScrollPane();\n\t\t\tjList1_ \u003d new javax.swing.JList();\n\t\t\tjSplitPane2_ \u003d new javax.swing.JSplitPane();\n\t\t\tjTextPane2_ \u003d new javax.swing.JTextPane();\n\t\t\tjScrollPane2_ \u003d new javax.swing.JScrollPane();\n\t\t\tjTree1_ \u003d new javax.swing.JTree();\n\n\t\t\tgetContentPane().setLayout(new java.awt.GridBagLayout());\n\n\t\t\tsetName(\"frame1_\");\n\t\t\taddWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\t\tpublic void windowClosing(java.awt.event.WindowEvent evt) {\n\t\t\t\t\texitForm(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tjTabbedPane1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjTabbedPane1_.setMinimumSize(new java.awt.Dimension(600, 300));\n\t\t\tjTabbedPane1_.setPreferredSize(new java.awt.Dimension(600, 300));\n\t\t\tjTabbedPane1_.addChangeListener(new javax.swing.event.ChangeListener() {\n\t\t\t\tpublic void stateChanged(javax.swing.event.ChangeEvent evt) {\n\t\t\t\t\tjTabbedPane1_StateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tjPanel1_.setLayout(new java.awt.GridBagLayout());\n\n\t\t\tjPanel1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjPanel1_.setMinimumSize(new java.awt.Dimension(600, 300));\n\t\t\tjPanel1_.setPreferredSize(new java.awt.Dimension(600, 300));\n\t\t\tbutton1_.setLabel(\"AWT Button\");\n\t\t\tbutton1_.addMouseListener(new java.awt.event.MouseAdapter() {\n\t\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt) {\n\t\t\t\t\tbutton1_MouseClicked(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.NORTHWEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 8, 8);\n\t\t\tjPanel1_.add(button1_, gridBagConstraints);\n\n\t\t\ttextField1_.setBackground(java.awt.Color.white);\n\t\t\ttextField1_.setForeground(java.awt.Color.black);\n\t\t\ttextField1_.addKeyListener(new java.awt.event.KeyAdapter() {\n\t\t\t\tpublic void keyTyped(java.awt.event.KeyEvent evt) {\n\t\t\t\t\ttextField1_KeyTyped(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\ttextField1_.addTextListener(new java.awt.event.TextListener() {\n\t\t\t\tpublic void textValueChanged(java.awt.event.TextEvent evt) {\n\t\t\t\t\ttextField1_TextValueChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 0;\n\t\t\tgridBagConstraints.gridy \u003d 3;\n\t\t\tgridBagConstraints.fill \u003d java.awt.GridBagConstraints.VERTICAL;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.NORTHWEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 8, 0);\n\t\t\tjPanel1_.add(textField1_, gridBagConstraints);\n\n\t\t\tcheckbox1_.setBackground(java.awt.Color.lightGray);\n\t\t\tcheckbox1_.setLabel(\"AWT Checkbox\");\n\t\t\tcheckbox1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tcheckbox1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 0;\n\t\t\tgridBagConstraints.gridy \u003d 1;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(2, 2, 2, 2);\n\t\t\tjPanel1_.add(checkbox1_, gridBagConstraints);\n\n\t\t\tchoice1_.add(\"Item One\");\n\t\t\tchoice1_.add(\"Item Two\");\n\t\t\tchoice1_.add(\"Item Three\");\n\t\t\tchoice1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tchoice1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 3;\n\t\t\tgridBagConstraints.gridy \u003d 0;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 0, 8);\n\t\t\tjPanel1_.add(choice1_, gridBagConstraints);\n\n\t\t\tlist1_.add(\"Item One\");\n\t\t\tlist1_.add(\"Item Two\");\n\t\t\tlist1_.add(\"Item Three\");\n\t\t\tlist1_.add(\"Item Four\");\n\t\t\tlist1_.add(\"Item Five\");\n\t\t\tlist1_.add(\"Item Six\");\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 7;\n\t\t\tgridBagConstraints.gridy \u003d 2;\n\t\t\tjPanel1_.add(list1_, gridBagConstraints);\n\t\t\tlist1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tlist1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscrollbar1_.addAdjustmentListener(new java.awt.event.AdjustmentListener() {\n\t\t\t\tpublic void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {\n\t\t\t\t\tscrollbar1_AdjustmentValueChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 3;\n\t\t\tgridBagConstraints.gridy \u003d 2;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 0, 8);\n\t\t\tjPanel1_.add(scrollbar1_, gridBagConstraints);\n\n\t\t\tjTabbedPane1_.addTab(\"AWT Widgets\", jPanel1_);\n\n\t\t\tjPanel2_.setLayout(new java.awt.GridBagLayout());\n\n\t\t\tjPanel2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjButton1_.setText(\"jButton1\");\n\t\t\tjButton1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjButton1_.addMouseListener(new java.awt.event.MouseAdapter() {\n\t\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent evt) {\n\t\t\t\t\tjButton1_MouseClicked(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 3;\n\t\t\tgridBagConstraints.gridy \u003d 0;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.NORTH;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 16, 16, 16);\n\t\t\tjPanel2_.add(jButton1_, gridBagConstraints);\n\n\t\t\tjToggleButton1_.setText(\"jToggleButton1\");\n\t\t\tbuttonGroup2.add(jToggleButton1_);\n\t\t\tjToggleButton1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjToggleButton1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjToggleButton1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 0;\n\t\t\tgridBagConstraints.gridy \u003d 2;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 4, 8);\n\t\t\tjPanel2_.add(jToggleButton1_, gridBagConstraints);\n\n\t\t\tjToggleButton2_.setText(\"jToggleButton2\");\n\t\t\tbuttonGroup2.add(jToggleButton2_);\n\t\t\tjToggleButton2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjToggleButton2_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjToggleButton2_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 0;\n\t\t\tgridBagConstraints.gridy \u003d 3;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(4, 0, 0, 8);\n\t\t\tjPanel2_.add(jToggleButton2_, gridBagConstraints);\n\n\t\t\tjCheckBox1_.setText(\"jCheckBox1\");\n\t\t\tbuttonGroup1.add(jCheckBox1_);\n\t\t\tjCheckBox1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjCheckBox1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjCheckBox1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 3;\n\t\t\tgridBagConstraints.gridy \u003d 2;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 4, 4, 4);\n\t\t\tjPanel2_.add(jCheckBox1_, gridBagConstraints);\n\n\t\t\tjCheckBox2_.setText(\"jCheckBox2\");\n\t\t\tbuttonGroup1.add(jCheckBox2_);\n\t\t\tjCheckBox2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjCheckBox2_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjCheckBox2_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 3;\n\t\t\tgridBagConstraints.gridy \u003d 3;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(4, 4, 0, 4);\n\t\t\tjPanel2_.add(jCheckBox2_, gridBagConstraints);\n\n\t\t\tjRadioButton1_.setText(\"jRadioButton1\");\n\t\t\tbuttonGroup3.add(jRadioButton1_);\n\t\t\tjRadioButton1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjRadioButton1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjRadioButton1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 6;\n\t\t\tgridBagConstraints.gridy \u003d 2;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 8, 4, 0);\n\t\t\tjPanel2_.add(jRadioButton1_, gridBagConstraints);\n\n\t\t\tjRadioButton2_.setText(\"jRadioButton2\");\n\t\t\tbuttonGroup3.add(jRadioButton2_);\n\t\t\tjRadioButton2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjRadioButton2_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjRadioButton2_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 6;\n\t\t\tgridBagConstraints.gridy \u003d 3;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(4, 8, 0, 0);\n\t\t\tjPanel2_.add(jRadioButton2_, gridBagConstraints);\n\n\t\t\tjTabbedPane1_.addTab(\"Swing Buttons\", jPanel2_);\n\n\t\t\tjPanel3_.setLayout(new java.awt.GridBagLayout());\n\n\t\t\tjComboBox1_.addItem(\"Item One\");\n\t\t\tjComboBox1_.addItem(\"Item Two\");\n\t\t\tjComboBox1_.addItem(\"Item Three\");\n\t\t\tjComboBox1_.setBorder(new\njavax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjComboBox1_.addItemListener(new java.awt.event.ItemListener() {\n\t\t\t\tpublic void itemStateChanged(java.awt.event.ItemEvent evt) {\n\t\t\t\t\tjComboBox1_ItemStateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 0;\n\t\t\tgridBagConstraints.gridy \u003d 4;\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 16, 8);\n\t\t\tjPanel3_.add(jComboBox1_, gridBagConstraints);\n\n\t\t\tjTextField1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjTextField1_.setMinimumSize(new java.awt.Dimension(100, 19));\n\t\t\tjTextField1_.setPreferredSize(new java.awt.Dimension(100, 19));\n\t\t\tjTextField1_.addKeyListener(new java.awt.event.KeyAdapter() {\n\t\t\t\tpublic void keyReleased(java.awt.event.KeyEvent evt) {\n\t\t\t\t\tjTextField1_KeyReleased(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 3;\n\t\t\tgridBagConstraints.gridy \u003d 4;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 4, 16, 4);\n\t\t\tjPanel3_.add(jTextField1_, gridBagConstraints);\n\n\t\t\tjPasswordField1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjPasswordField1_.setMinimumSize(new java.awt.Dimension(100, 19));\n\t\t\tjPasswordField1_.setPreferredSize(new java.awt.Dimension(100, 19));\n\t\t\tjPasswordField1_.addKeyListener(new java.awt.event.KeyAdapter() {\n\t\t\t\tpublic void keyReleased(java.awt.event.KeyEvent evt) {\n\t\t\t\t\tjPasswordField1_KeyReleased(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 6;\n\t\t\tgridBagConstraints.gridy \u003d 4;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 4, 16, 4);\n\t\t\tjPanel3_.add(jPasswordField1_, gridBagConstraints);\n\n\t\t\tjSpinner1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjSpinner1_.addChangeListener(new javax.swing.event.ChangeListener() {\n\t\t\t\tpublic void stateChanged(javax.swing.event.ChangeEvent evt) {\n\t\t\t\t\tjSpinner1_StateChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.gridx \u003d 9;\n\t\t\tgridBagConstraints.gridy \u003d 4;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 4, 16, 4);\n\t\t\tjPanel3_.add(jSpinner1_, gridBagConstraints);\n\n\t\t\tjTabbedPane1_.addTab(\"Swing Boxes and Fields\", jPanel3_);\n\n\t\t\tjPanel4_.setLayout(new java.awt.GridBagLayout());\n\n\t\t\tjSplitPane1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjSplitPane1_.setDividerLocation(97);\n\t\t\tjSplitPane1_.setDividerSize(5);\n\t\t\tjSplitPane1_.setMinimumSize(new java.awt.Dimension(200, 100));\n\t\t\tjSplitPane1_.setPreferredSize(new java.awt.Dimension(200, 100));\n\t\t\tjTextPane1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjTextPane1_.setPreferredSize(new java.awt.Dimension(75, 75));\n\t\t\tjSplitPane1_.setRightComponent(jTextPane1_);\n\n\t\t\tjScrollPane1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjScrollPane1_.setAutoscrolls(true);\n\t\t\tjava.lang.String[] Temp \u003d { \"Item One\"\n\t\t\t\t, \"Item Two\"\n\t\t\t\t, \"Item Three\"\n\t\t\t\t,\"Item Four\"\n\t\t\t\t,\"Item Five\"\n\t\t\t\t,\"Item Six\"\n\t\t\t};\n\t\t\tjList1_.setListData(Temp);\n\t\t\tjList1_.addListSelectionListener(new javax.swing.event.ListSelectionListener() {\n\t\t\t\tpublic void valueChanged(javax.swing.event.ListSelectionEvent evt) {\n\t\t\t\t\tjList1_ValueChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tjScrollPane1_.setViewportView(jList1_);\n\n\t\t\tjSplitPane1_.setLeftComponent(jScrollPane1_);\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.anchor \u003d java.awt.GridBagConstraints.WEST;\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 0, 0, 8);\n\t\t\tjPanel4_.add(jSplitPane1_, gridBagConstraints);\n\n\t\t\tjSplitPane2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjSplitPane2_.setDividerLocation(150);\n\t\t\tjSplitPane2_.setDividerSize(5);\n\t\t\tjSplitPane2_.setMinimumSize(new java.awt.Dimension(300, 250));\n\t\t\tjTextPane2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjSplitPane2_.setRightComponent(jTextPane2_);\n\n\t\t\tjScrollPane2_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjTree1_.setBorder(new\njavax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));\n\t\t\tjTree1_.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {\n\t\t\t\tpublic void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {\n\t\t\t\t\tjTree1_TreeCollapsed(evt);\n\t\t\t\t}\n\t\t\t\tpublic void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {\n\t\t\t\t\tjTree1_TreeExpanded(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\tjTree1_.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {\n\t\t\t\tpublic void valueChanged(javax.swing.event.TreeSelectionEvent evt) {\n\t\t\t\t\tjTree1_ValueChanged(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\tjTree1_.addTreeWillExpandListener(new\njavax.swing.event.TreeWillExpandListener() {\n\t\t\t\tpublic void treeWillCollapse(javax.swing.event.TreeExpansionEvent evt)throws\njavax.swing.tree.ExpandVetoException {\n\t\t\t\t\tjTree1_TreeWillCollapse(evt);\n\t\t\t\t}\n\t\t\t\tpublic void treeWillExpand(javax.swing.event.TreeExpansionEvent evt)throws\njavax.swing.tree.ExpandVetoException {\n\t\t\t\t\tjTree1_TreeWillExpand(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\tjTree1_.collapseRow(0);\n\t\t\tjScrollPane2_.setViewportView(jTree1_);\n\n\t\t\tjSplitPane2_.setLeftComponent(jScrollPane2_);\n\n\t\t\tgridBagConstraints \u003d new java.awt.GridBagConstraints();\n\t\t\tgridBagConstraints.insets \u003d new java.awt.Insets(0, 8, 0, 0);\n\t\t\tjPanel4_.add(jSplitPane2_, gridBagConstraints);\n\n\t\t\tjTabbedPane1_.addTab(\"Swing Complex Widgets\", jPanel4_);\n\n\t\t\tgetContentPane().add(jTabbedPane1_, new java.awt.GridBagConstraints());\n\t\t\tpack();\n\t}\n    \n    // Variables declaration - do not modify\n    private java.awt.Button button1_;\n    private javax.swing.ButtonGroup buttonGroup1;\n    private javax.swing.ButtonGroup buttonGroup2;\n    private javax.swing.ButtonGroup buttonGroup3;\n    private java.awt.Checkbox checkbox1_;\n    private java.awt.Choice choice1_;\n    private javax.swing.JButton jButton1_;\n    private javax.swing.JCheckBox jCheckBox1_;\n    private javax.swing.JCheckBox jCheckBox2_;\n    private javax.swing.JComboBox jComboBox1_;\n    private javax.swing.JList jList1_;\n    private javax.swing.JPanel jPanel1_;\n    private javax.swing.JPanel jPanel2_;\n    private javax.swing.JPanel jPanel3_;\n    private javax.swing.JPanel jPanel4_;\n    private javax.swing.JPasswordField jPasswordField1_;\n    private javax.swing.JRadioButton jRadioButton1_;\n    private javax.swing.JRadioButton jRadioButton2_;\n    private javax.swing.JScrollPane jScrollPane1_;\n    private javax.swing.JScrollPane jScrollPane2_;\n    private javax.swing.JSpinner jSpinner1_;\n    private javax.swing.JSplitPane jSplitPane1_;\n    private javax.swing.JSplitPane jSplitPane2_;\n    private javax.swing.JTabbedPane jTabbedPane1_;\n    private javax.swing.JTextField jTextField1_;\n    private javax.swing.JTextPane jTextPane1_;\n    private javax.swing.JTextPane jTextPane2_;\n    private javax.swing.JToggleButton jToggleButton1_;\n    private javax.swing.JToggleButton jToggleButton2_;\n    private javax.swing.JTree jTree1_;\n    private java.awt.List list1_;\n    private java.awt.Scrollbar scrollbar1_;\n    private java.awt.TextField textField1_;\n    // End of variables declaration\n}",
    "Even with your example, I still cannot reproduce the problem. So I don\u0027t know\nwhat\u0027s going on. Is the compilation unit consistent ? i.e. you can test this\nusing method.getCompilationUnit().isConsistent(). If it is consistent, can you\ncall IType.getSource() and see if the source is okay.",
    "The question I have:\n\nCan the CU be inconsistent and at the same time successfully compile?",
    "Yes since the Java builder doesn\u0027t use the Java model",
    "I followed you steps.\n\nEverything works as expected EXCEPT the following:\n\n1) method.getCompilationUnit().isConsistent() -\u003e returns TRUE. Expected.\n2) Extra step for assurance: method.getDeclaringType().toString() -\u003e shows:\n\nTakeAndReturnMultiIntArray(*** invalid signature:  [[int) (not open)\n\n3) method.getDeclaringType().getSource() -\u003e returns the source as expected.\n\nThe *.class files are there: 25 of them\n\nThere is a WARNING that the class does not declare \"static final\nserialVersionUID field of type long\"\n\nIt would be a stretch that the code model is affected by this since the IDE\nshows a successful build for the project.\n\nBut one never knows.\n\nThanks a lot!\n\nJos?",
    "If you debug your plugin, can you inspect the IMethod and confirm that the field\nSourceMethod#fParameterTypes contains \"[[[[[int\" (note that it should really be\n\"[[[[[I\") ? \n\nCan you put a breakpoint in the constructor of SourceMethod and see why the\nargument \u0027parameterTypes\u0027 is \"[[[[[int\" ?",
    "J?r?me:\n\nWe may be getting closer.\n\nI inspected method and the fParameterTypes array is of length 1 (which is\nexpected) but contains:\n\nfParameterTypes[0] \u003d \"[[int\"\n\nThis should be the root of the inconsistencies.\n\nJos?",
    "OK, then we need to find out why the fParameterTypes field has this value.Can\nyou put a breakpoint in the constructor of SourceMethod and see why the\nargument \u0027parameterTypes\u0027 is {\"[[int\"} ? \nIn particular I\u0027m interested in the call stack, and if the method\nSourceElementParser#notifySourceElementRequestor(AbstractMethodDeclaration) is\non the call stack, what is the value of the local variable \u0027methodDeclaration\u0027 ?",
    "I am not sure if these are the correct steps, but this is what I did:\n\n1) Break point on getMethods().\n\n2) Step-into repeatedly until JavaElement#getChildrenOfType.\n\n3) Step-over IJavaElement[] children \u003d getChildren();\n\n4) Verified that that SourceMethod-\u003efParameterTypes[0] \u003d\u003d \"[[[[[I\".\n\n5) Highlighted getChildrenOfType and generated Call Hierarchy: did not see the\nmentioned method (notifySourceElementRequestor)\n\n6) Highlighted getChildren() inside JavaElement#getChildrenOfType and generated\nCall Hierarchy: did not see the mentioned method (notifySourceElementRequestor)\n\nIs this the correct sequence of steps?",
    "Now I\u0027m confused. You\u0027re saying in step 4 that the fParameterType fiels is as\nexpected. Are you sure that it is the same method that you\u0027re using later on ?\n\nWhat I was suggesting was to put a breakpoint in the constructor\nSourceMethod(String, String[]) and look at the stack in the Debug view. But you\nwant to look at the stack only when the argument parameterTypes is {\"[[int\"}.",
    "I tried the same logic that is causing the problem.\n\nSince I am using getMethods() instead of the individually generated methods, I\nwanted to be sure that the method was at least created correctly.\n\nI will modify the code and make the call you suggested.",
    "I think found the steps:\n\nMy plugin does these two calls:\n\ngetParameterTypes() -\u003e at this point fParameterTypes[0] \u003d\u003d \"[[[[[I\"\n\nAfter this particular fParameterTypes[0] CHANGES to  \"[[I\".\n\nThen getReturnType() -\u003e Causes exception.\n\nI tried this outside my code in the Display view.\n\nTo summarize:\n\n\ngetMethods() Returns the IMethod \"mehtodA\" in a consistent state.\n\nmethodA.getCompilationUnit().isConsistent() returns true.\n\nfParameterTypes[0] \u003d\u003d \"[[[[[I\" before calling getParameterTypes()\ngetReturnType() returns \"[[[[[I\"\n\nmethodA.getParameterTypes() is called\n\nthen fParameterTypes[0] \u003d\u003d \"[[I\" \ngetReturnType() causes an exception",
    "This is the call stack at that particular point:\n\nThread [main] (Suspended)\n\tMyPlugIn.Method2(IMethod) line: 437\n\tMyPlugIn.Method1(IMethod) line: 307\n\tMyPlugIn.run(IAction) line: 144\n\tWWinPluginAction(PluginAction).runWithEvent(Event) line: 244\n\tWWinPluginAction.runWithEvent(Event) line: 220\n\tPluginActionCoolBarContributionItem(ActionContributionItem).handleWidgetSelection(Event,\nboolean) line: 555\n\tActionContributionItem.access$2(ActionContributionItem, Event, boolean) line: 505\n\tActionContributionItem$7.handleEvent(Event) line: 460\n\tEventTable.sendEvent(Event) line: 82\n\tToolItem(Widget).sendEvent(Event) line: 833\n\tDisplay.runDeferredEvents() line: 2803\n\tDisplay.readAndDispatch() line: 2448\n\tWorkbench.runEventLoop(Window$IExceptionHandler, Display) line: 1569\n\tWorkbench.runUI() line: 1540\n\tWorkbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 285\n\tPlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144\n\tIDEApplication.run(Object) line: 102\n\tPlatformActivator$1.run(Object) line: 220\n\tEclipseStarter.run(Object) line: 273\n\tEclipseStarter.run(String[], Runnable) line: 129\n\tNativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available\n[native method]\n\tNativeMethodAccessorImpl.invoke(Object, Object[]) line: 39\n\tDelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25\n\tMethod.invoke(Object, Object[]) line: 324\n\tMain.basicRun(String[]) line: 185\n\tMain.run(String[]) line: 710\n\tMain.main(String[]) line: 694\n\nIt is what the Debug view had in the only thread icon that was expandable.\n\nIt does not seem very useful to you, I think.\n\nJos?",
    "The code of getParameterTypes() is just: \n  return fParameterTypes;\nSo this cannot change fParameterTypes. You need to find who is changing this field.",
    "I think what I will do is to cache/parse as much as I need just after I call\ngetMethods(), I know that the info is in a good state there.\n\nThis would be a work-around to get me going. The behavior of my plugin and\neclipse 2.1.3 is consistent across several flavors of linux and Windows XP.\n\nThe JDT and the code model apis did not change from 2.1.3 to 3.X (as far as I know)\n\nThis assures me that there is something else lurking over here.\n\nIt\u0027s time to cut our \"loses\" and get going.\n\nI really appreciate your great help and patience.\n\nIf I have time I will comeback to the original code and try to figure out why.\n\nI will close the bug as invalid and *maybe* open it if it makes sense to do so\n\nThanks a lot!!"
  ],
  "commentCreationDates": [
    "2004-12-07T06:48:19+01:00",
    "2004-12-07T13:55:51+01:00",
    "2004-12-07T14:18:46+01:00",
    "2004-12-07T15:25:01+01:00",
    "2004-12-08T14:33:06+01:00",
    "2004-12-08T18:01:40+01:00",
    "2004-12-08T19:09:43+01:00",
    "2004-12-08T19:25:51+01:00",
    "2004-12-08T20:29:36+01:00",
    "2004-12-08T20:36:56+01:00",
    "2004-12-08T21:00:13+01:00",
    "2004-12-08T21:12:54+01:00",
    "2004-12-09T23:26:57+01:00",
    "2004-12-10T01:13:20+01:00",
    "2004-12-10T02:40:04+01:00",
    "2004-12-10T14:11:56+01:00",
    "2004-12-10T15:09:01+01:00",
    "2004-12-10T17:15:19+01:00",
    "2004-12-10T18:40:22+01:00",
    "2004-12-10T20:09:08+01:00",
    "2004-12-10T20:38:21+01:00",
    "2004-12-10T21:43:37+01:00",
    "2004-12-10T22:55:58+01:00",
    "2004-12-13T10:12:47+01:00",
    "2004-12-13T10:32:32+01:00",
    "2004-12-15T14:46:38+01:00",
    "2004-12-17T13:33:00+01:00",
    "2004-12-17T18:34:54+01:00",
    "2004-12-17T23:38:51+01:00",
    "2004-12-18T01:00:55+01:00",
    "2004-12-20T12:05:31+01:00",
    "2004-12-20T14:01:31+01:00",
    "2004-12-21T01:50:12+01:00",
    "2005-01-03T11:00:38+01:00",
    "2005-01-03T15:59:03+01:00",
    "2005-01-03T17:16:51+01:00",
    "2005-01-03T17:43:31+01:00",
    "2005-01-03T17:48:15+01:00",
    "2005-01-03T18:04:33+01:00",
    "2005-01-03T18:15:54+01:00",
    "2005-01-03T18:28:54+01:00",
    "2005-01-04T09:34:56+01:00",
    "2005-01-04T16:06:40+01:00",
    "2005-01-04T16:15:33+01:00",
    "2005-01-04T16:45:49+01:00",
    "2005-01-04T21:09:39+01:00",
    "2005-01-04T21:15:44+01:00",
    "2005-01-04T22:06:34+01:00",
    "2005-01-04T23:21:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:1665"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendArrayTypeSignature",
          "source": "Signature.java:1691"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:1629"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendArrayTypeSignature",
          "source": "Signature.java:1691"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:1629"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.toCharArray",
          "source": "Signature.java:1601"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.toString",
          "source": "Signature.java:1952"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.toStringName",
          "source": "SourceMethod.java:298"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.toStringInfo",
          "source": "SourceMethod.java:275"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors",
          "source": "JavaElement.java:637"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelStatus.getMessage",
          "source": "JavaModelStatus.java:194"
        },
        {
          "method": "org.eclipse.core.runtime.CoreException.\u003cinit\u003e",
          "source": "CoreException.java:37"
        },
        {
          "method": "org.eclipse.jdt.core.JavaModelException.\u003cinit\u003e",
          "source": "JavaModelException.java:70"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.newNotPresentException",
          "source": "JavaElement.java:561"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.openWhenClosed",
          "source": "JavaElement.java:583"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:309"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:295"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.getReturnType",
          "source": "SourceMethod.java:166"
        }
      ],
      "number": 0,
      "commentIndex": 13,
      "bugId": "80338",
      "date": "2004-12-10T01:13:20+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:2447"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:2357"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendArrayTypeSignature",
          "source": "Signature.java:2491"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendArrayTypeSignature",
          "source": "Signature.java:2465"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:2407"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:2357"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendArrayTypeSignature",
          "source": "Signature.java:2491"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendArrayTypeSignature",
          "source": "Signature.java:2465"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:2407"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.appendTypeSignature",
          "source": "Signature.java:2357"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.toCharArray",
          "source": "Signature.java:2336"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.toString",
          "source": "Signature.java:2755"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.toStringName",
          "source": "SourceMethod.java:333"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.toStringName",
          "source": "SourceMethod.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.toStringInfo",
          "source": "SourceMethod.java:299"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.toStringWithAncestors",
          "source": "JavaElement.java:612"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelStatus.getMessage",
          "source": "JavaModelStatus.java:194"
        },
        {
          "method": "org.eclipse.core.runtime.CoreException.\u003cinit\u003e",
          "source": "CoreException.java:42"
        },
        {
          "method": "org.eclipse.jdt.core.JavaModelException.\u003cinit\u003e",
          "source": "JavaModelException.java:70"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.newNotPresentException",
          "source": "JavaElement.java:527"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.openWhenClosed",
          "source": "JavaElement.java:558"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:291"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:277"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceMethod.getReturnType",
          "source": "SourceMethod.java:190"
        }
      ],
      "number": 1,
      "commentIndex": 20,
      "bugId": "80338",
      "date": "2004-12-10T20:38:21+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "80338",
  "bugId": "80338",
  "date": "2004-12-07T06:48:19+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}