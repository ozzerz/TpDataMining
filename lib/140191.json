{
  "comments": [
    "I20060504-0920\n\nI just started up the build, imported all required plugins as binary and let autobuild rebuild the workspace.\n\nGot the NPE below in the log, with a very long problem message, starting with this: ([..] are my omissions):\n\nException occurred during problem detection:----------------------------------- SOURCE BEGIN -------------------------------------\n/*******************************************************************************\n* Copyright (c) 2000, 2006 IBM Corporation and others.\n* All rights reserved. This program and the accompanying materials\n[..]\npackage org.eclipse.jdt.ui;\n[..]\npublic final class JavaUI {\n[.. full CU source ..]\n\njava.lang.NullPointerException\nat org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSourceName(ClassFileReader.java:567)\nat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.\u003cinit\u003e(BinaryTypeBinding.java:162)\nat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:561)\nat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:558)\nat org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:272)\nat org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:102)\nat org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:43)\nat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveUnresolvedType(BinaryTypeBinding.java:138)\nat org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass(BinaryTypeBinding.java:907)\nat org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsInterface(ReferenceBinding.java:808)\nat org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith0(ReferenceBinding.java:937)\nat org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(ReferenceBinding.java:890)\nat org.eclipse.jdt.internal.compiler.ast.Assignment.resolveType(Assignment.java:196)\nat org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:880)\nat org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:101)\nat org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:236)\nat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:432)\nat org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:179)\nat org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:403)\nat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1054)\nat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1101)\nat org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:353)\nat org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:650)\nat org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:689)\nat org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:176)\nat org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:248)\nat org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:152)\nat org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:71)\nat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:720)\nat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:779)\nat org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1123)\nat org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1095)\nat org.eclipse.jdt.internal.corext.util.JavaModelUtil.reconcile(JavaModelUtil.java:702)\nat org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset(SelectionConverter.java:210)\nat org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset(SelectionConverter.java:144)\nat org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset(SelectionConverter.java:136)\nat org.eclipse.jdt.internal.ui.text.JavaElementProvider.getInformation2(JavaElementProvider.java:84)\nat org.eclipse.jface.text.information.InformationPresenter.computeInformation(InformationPresenter.java:346)\nat org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:821)\nat org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:811)\nat org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:166)\nat org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:201)\nat org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:131)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\nat org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:129)\nat org.eclipse.jface.action.Action.runWithEvent(Action.java:499)\nat org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)\nat org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)\nat org.eclipse.core.commands.Command.executeWithChecks(Command.java:461)\nat org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424)\nat org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160)\nat org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466)\nat org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:799)\nat org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:846)\nat org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:564)\nat org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506)\nat org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Display.filterEvent(Display.java:982)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:927)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:952)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:937)\nat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:965)\nat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:961)\nat org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1275)\nat org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3346)\nat org.eclipse.swt.widgets.Control.windowProc(Control.java:3246)\nat org.eclipse.swt.widgets.Display.windowProc(Display.java:4025)\nat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\nat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1923)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2966)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\nat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\nat org.eclipse.core.launcher.Main.run(Main.java:977)\nat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "I will investigate.",
    "Closing as WORKSFORME. Since it is not possible to reproduce it and looking at the source code, we don\u0027t see how this is possible.",
    "*** Bug 166076 has been marked as a duplicate of this bug. ***",
    "Reopening since we need to understand how this can happened.",
    "(In reply to bug 166076 comment #3)\nMust be a concurrency issue then. The method is not synchronized and can be called from multiple threads (e.g. compiler and type hierarchy resolver). It is possible that one thread sets this.sourceName temporarily to null just before the arraycopy takes place.",
    "The creation of binding should be synchronized. I don\u0027t see why the class file reader would need to be synchronized.\nKent, is this doable?",
    "How is the instance of the ClassFileReader available to multiple threads?\n\nBinaryTypeBindings create \u0026 initialize themselves from the ClassFileReader then throw it away.\n\nIs this the source we\u0027re talking about on line 567?\n\n  this.sourceName \u003d new char[name.length - start];\n\u003e\u003eSystem.arraycopy(name, start, this.sourceName, 0, this.sourceName.length);\n\nLooks like a bogus VM/jit bug to me.\n\nWhat VM are you guys using?",
    "(In reply to comment #7)\n\u003e How is the instance of the ClassFileReader available to multiple threads?\n\u003e \n\u003e BinaryTypeBindings create \u0026 initialize themselves from the ClassFileReader then\n\u003e throw it away.\n\nAre you sure about that? I find it hard to verify that there is no aliasing. i.e. HierarchyResolver.remember stores the object in an array. The object is retrieved in LookupEnvironment.askForType(PackageBinding, char[]) from NameEvironmentAnswer#getBinaryType() which looks shared to me.\n\n\u003e \n\u003e Is this the source we\u0027re talking about on line 567?\n\u003e \n\u003e   this.sourceName \u003d new char[name.length - start];\n\u003e \u003e\u003eSystem.arraycopy(name, start, this.sourceName, 0, this.sourceName.length);\n\u003e \n\u003e Looks like a bogus VM/jit bug to me.\n\u003e \n\u003e What VM are you guys using?\n\njava version \"1.5.0_08\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_08-b03)\nJava HotSpot(TM) Client VM (build 1.5.0_08-b03, mixed mode)\n\n",
    "(In reply to comment #7)\n\u003e How is the instance of the ClassFileReader available to multiple threads?\nEasy to see in the debugger:\n- debug a cleaned runtime workspace\n- create an empty Java project\n- open editor for Integer\n- set a breakpoint in ClassFileReader on line 554 and restart the runtime\n\u003d\u003e debugger hangs in two threads\n- resume the thread that is building a type hierarchy\n\u003d\u003e now, you have two threads working on the same ClassFileReader, and the NPE can be provoked by \"stepwise refinement\"\n\n\u003e Is this the source we\u0027re talking about on line 567?\nYes",
    "Here are the stack traces from Markus\u0027 steps :\n\nThe LookupEnvironment \u0026 BinaryTypeBinding instances are not the same, but the ClassFileReader instances are.\n\nThread [Worker-1] (Suspended (breakpoint at line 554 in ClassFileReader))\nClassFileReader.getSourceName() line: 554\nBinaryTypeBinding.\u003cinit\u003e(PackageBinding, IBinaryType, LookupEnvironment) line: 150\nLookupEnvironment.createBinaryTypeFrom(IBinaryType, PackageBinding, boolean, AccessRestriction) line: 560\nLookupEnvironment.createBinaryTypeFrom(IBinaryType, PackageBinding, AccessRestriction) line: 557\nCompilationUnitResolver(Compiler).accept(IBinaryType, PackageBinding, AccessRestriction) line: 272\nLookupEnvironment.askForType(PackageBinding, char[]) line: 127\nPackageBinding.getTypeOrPackage(char[]) line: 178\nClassScope(Scope).getTypeOrPackage(char[], int) line: 2317\nClassScope(Scope).getType(char[]) line: 2057\nSingleTypeReference.getTypeBinding(Scope) line: 44\nSingleTypeReference(TypeReference).resolveType(ClassScope) line: 159\nSingleTypeReference(TypeReference).resolveSuperType(ClassScope) line: 110\nClassScope.findSupertype(TypeReference) line: 1106\nClassScope.connectSuperclass() line: 826\nClassScope.connectTypeHierarchy() line: 951\nCompilationUnitScope.connectTypeHierarchy() line: 290\nLookupEnvironment.completeTypeBindings() line: 197\nCompilationUnitResolver(Compiler).beginToCompile(ICompilationUnit[]) line: 387\nCompilationUnitResolver.resolve(CompilationUnitDeclaration, ICompilationUnit, NodeSearcher, boolean, boolean, boolean) line: 836\nCompilationUnitResolver.resolve(ICompilationUnit, IJavaProject, NodeSearcher, Map, WorkingCopyOwner, boolean, ...) line: 510\nASTParser.internalCreateAST(IProgressMonitor) line: 835\nASTParser.createAST(IProgressMonitor) line: 628\nASTProvider$1.run() line: 605\nSafeRunner.run(ISafeRunnable) line: 37\nASTProvider.createAST(IJavaElement, IProgressMonitor) line: 600\nASTProvider.getAST(IJavaElement, ASTProvider$WAIT_FLAG, IProgressMonitor) line: 514\nJavaEditor$8.run(IProgressMonitor) line: 3250\nWorker.run() line: 58\n\nThread [Worker-3] (Suspended (breakpoint at line 554 in ClassFileReader))\nClassFileReader.getSourceName() line: 554\nBinaryTypeBinding.\u003cinit\u003e(PackageBinding, IBinaryType, LookupEnvironment) line: 150\nLookupEnvironment.createBinaryTypeFrom(IBinaryType, PackageBinding, boolean, AccessRestriction) line: 560\nLookupEnvironment.createBinaryTypeFrom(IBinaryType, PackageBinding, AccessRestriction) line: 557\nHierarchyResolver.accept(IBinaryType, PackageBinding, AccessRestriction) line: 99\nLookupEnvironment.askForType(char[][]) line: 101\nUnresolvedReferenceBinding.resolve(LookupEnvironment, boolean) line: 43\nBinaryTypeBinding.resolveType(ReferenceBinding, LookupEnvironment, boolean) line: 97\nBinaryTypeBinding.superclass() line: 909\nHierarchyResolver.resolve(IGenericType) line: 528\nIndexBasedHierarchyBuilder(HierarchyBuilder).buildSupertypes() line: 115\nIndexBasedHierarchyBuilder.build(boolean) line: 134\nTypeHierarchy.compute() line: 300\nTypeHierarchy.refresh(IProgressMonitor) line: 1237\nCreateTypeHierarchyOperation.executeOperation() line: 90\nCreateTypeHierarchyOperation(JavaModelOperation).run(IProgressMonitor) line: 720\nCreateTypeHierarchyOperation(JavaModelOperation).runOperation(IProgressMonitor) line: 779\nBinaryType.newSupertypeHierarchy(WorkingCopyOwner, IProgressMonitor) line: 793\nBinaryType.newSupertypeHierarchy(IProgressMonitor) line: 745\nSuperTypeHierarchyCache.getTypeHierarchy(IType, IProgressMonitor) line: 120\nSuperTypeHierarchyCache.getTypeHierarchy(IType) line: 80\nSuperTypeHierarchyCache.getMethodOverrideTester(IType) line: 89\nOverrideIndicatorLabelDecorator.getOverrideIndicators(IMethod) line: 162\nOverrideIndicatorLabelDecorator.computeAdornmentFlags(Object) line: 129\nOverrideIndicatorLabelDecorator.decorate(Object, IDecoration) line: 261\nLightweightDecoratorDefinition.decorate(Object, IDecoration) line: 259\nLightweightDecoratorManager$LightweightRunnable.run() line: 71\nSafeRunner.run(ISafeRunnable) line: 37\nPlatform.run(ISafeRunnable) line: 850\nLightweightDecoratorManager.decorate(Object, DecorationBuilder, LightweightDecoratorDefinition) line: 336\nLightweightDecoratorManager.getDecorations(Object, DecorationBuilder) line: 322\nDecorationScheduler$1.ensureResultCached(Object, boolean, IDecorationContext) line: 357\nDecorationScheduler$1.run(IProgressMonitor) line: 322\nWorker.run() line: 58\n",
    "We 3 choices to fix this problem:\n\n1. Jerome -\u003e change your cache to hold onto the class file bytes instead of the ClassFileReader instances. ClassFileReader was never designed to be thread safe.\n\n2. Or set each accessor that uses lazy initialization to be a synchronized method.\n\n3. Or fix the problem for #getSourceName() by changing it to [and any other accessors]:\n\npublic char[] getSourceName() {\n  if (this.sourceName !\u003d null) \n    return this.sourceName;\n  \n  char[] name \u003d getInnerSourceName(); // member or local scenario\n  if (name \u003d\u003d null) {\n    name \u003d getName(); // extract from full name\n    int start;\n    if (isAnonymous()) {\n      start \u003d CharOperation.indexOf(\u0027$\u0027, name, CharOperation.lastIndexOf(\u0027/\u0027, name) + 1) + 1;      \n    } else {\n      start \u003d CharOperation.lastIndexOf(\u0027/\u0027, name) + 1;      \n    }\n    if (start \u003e 0) {\n      name \u003d new char[name.length - start];\n      System.arraycopy(name, start, name, 0, name.length);\n    }\n    this.sourceName \u003d name;\n  }\n  return this.sourceName;  \n}\n\n\nMy preference is #1",
    "The other potential fix is to pre-initialize all lazy fields when fullyInitialize is set to true (which it is in this case).\n\nThis would mean the cached ClassFileReader instance would basically be a read-only object.\n\nAny other choices? Any opinions on which one we should do?",
    "As discussed in JDT Core call, we should do option #3, which makes it thread safe and avoids deadlocks.",
    "Changed getSourceName() as described in comment #11.\n\nTo reproduce, follow the steps in comment #9.",
    "Released for 3.3 M4 in HEAD stream",
    "Verified for 3.3M4 with I20061212-0010."
  ],
  "commentCreationDates": [
    "2006-05-04T18:43:30+02:00",
    "2006-05-04T18:46:18+02:00",
    "2006-05-04T19:16:56+02:00",
    "2006-11-28T17:43:38+01:00",
    "2006-11-28T18:01:28+01:00",
    "2006-11-28T18:26:46+01:00",
    "2006-11-28T18:58:19+01:00",
    "2006-11-28T21:03:35+01:00",
    "2006-11-29T09:33:31+01:00",
    "2006-11-29T23:33:17+01:00",
    "2006-11-30T20:39:08+01:00",
    "2006-11-30T20:59:49+01:00",
    "2006-12-01T18:53:54+01:00",
    "2006-12-04T16:03:30+01:00",
    "2006-12-04T20:14:39+01:00",
    "2006-12-04T20:15:38+01:00",
    "2006-12-12T16:08:30+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSourceName",
          "source": "ClassFileReader.java:567"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.\u003cinit\u003e",
          "source": "BinaryTypeBinding.java:162"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:561"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:558"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.accept",
          "source": "Compiler.java:272"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:102"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve",
          "source": "UnresolvedReferenceBinding.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveUnresolvedType",
          "source": "BinaryTypeBinding.java:138"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass",
          "source": "BinaryTypeBinding.java:907"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.implementsInterface",
          "source": "ReferenceBinding.java:808"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith0",
          "source": "ReferenceBinding.java:937"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith",
          "source": "ReferenceBinding.java:890"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Assignment.resolveType",
          "source": "Assignment.java:196"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:880"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.resolve",
          "source": "Block.java:101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve",
          "source": "IfStatement.java:236"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:432"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:179"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:403"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1054"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1101"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:353"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.resolve",
          "source": "Compiler.java:650"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.resolve",
          "source": "Compiler.java:689"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process",
          "source": "CompilationUnitProblemFinder.java:176"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process",
          "source": "CompilationUnitProblemFinder.java:248"
        },
        {
          "method": "org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent",
          "source": "ReconcileWorkingCopyOperation.java:152"
        },
        {
          "method": "org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation",
          "source": "ReconcileWorkingCopyOperation.java:71"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:720"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:779"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.reconcile",
          "source": "CompilationUnit.java:1123"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.reconcile",
          "source": "CompilationUnit.java:1095"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.util.JavaModelUtil.reconcile",
          "source": "JavaModelUtil.java:702"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset",
          "source": "SelectionConverter.java:210"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset",
          "source": "SelectionConverter.java:144"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.actions.SelectionConverter.getElementAtOffset",
          "source": "SelectionConverter.java:136"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.JavaElementProvider.getInformation2",
          "source": "JavaElementProvider.java:84"
        },
        {
          "method": "org.eclipse.jface.text.information.InformationPresenter.computeInformation",
          "source": "InformationPresenter.java:346"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation",
          "source": "AbstractInformationControlManager.java:821"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.showInformation",
          "source": "AbstractInformationControlManager.java:811"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation",
          "source": "JavaSourceViewer.java:166"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation",
          "source": "CompilationUnitEditor.java:201"
        },
        {
          "method": "org.eclipse.ui.texteditor.TextOperationAction$1.run",
          "source": "TextOperationAction.java:131"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.texteditor.TextOperationAction.run",
          "source": "TextOperationAction.java:129"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:499"
        },
        {
          "method": "org.eclipse.ui.commands.ActionHandler.execute",
          "source": "ActionHandler.java:185"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute",
          "source": "LegacyHandlerWrapper.java:109"
        },
        {
          "method": "org.eclipse.core.commands.Command.executeWithChecks",
          "source": "Command.java:461"
        },
        {
          "method": "org.eclipse.core.commands.ParameterizedCommand.executeWithChecks",
          "source": "ParameterizedCommand.java:424"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.HandlerService.executeCommand",
          "source": "HandlerService.java:160"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:466"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:799"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:846"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:564"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3",
          "source": "WorkbenchKeyboard.java:506"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent",
          "source": "WorkbenchKeyboard.java:122"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java:982"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:927"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:952"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:937"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:965"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:961"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmChar",
          "source": "Widget.java:1275"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_CHAR",
          "source": "Control.java:3346"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3246"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4025"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1923"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2966"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "140191",
      "date": "2006-05-04T18:43:30+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "140191",
  "bugId": "140191",
  "date": "2006-05-04T18:43:30+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}