{
  "comments": [
    "In what is perhaps related to bug 169600, I am getting the following compilation error:\n\njava.lang.ArrayIndexOutOfBoundsException\nat org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:695)\nat org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:406)\nat org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:65)\nat org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1156)\nat org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.jav ... .java:102)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)\n\nArrayIndexOutOfBoundsException thrown: 0",
    "I am getting the same error. But not the one from bug 169000 (yet).",
    "Meanwhile I am getting the exception from bug 169600 as well. But the ArrayIndexOutOfBoundsException comes first. I am using WinXP, AspectJ 1.5.3 and AJDT 1.4.1.\n\nThis seems to be a AJDT Bug, not AspectJ, don\u0027t you think so?",
    "the stack trace doesnt involve any AJDT code - so I think it is an aspectj problem.",
    "this bug is because of something about your use of generic types.  Are you able to describe the hierarchy to any degree?  How are the type variables inherited through your declarations? Do you parameterize partial generic signatures in your subtypes?",
    "Everyone,\n\nThis is a full stack trace when running from Eclipse with AJDT in case it is any help:\n\njava.lang.ArrayIndexOutOfBoundsException: 0\n\tat org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:695)\n\tat org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:406)\n\tat org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:65)\n\tat org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1157)\n\tat org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1159)\n\tat org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers(ResolvedType.java:1136)\n\tat org.aspectj.weaver.ResolvedType.checkInterTypeMungers(ResolvedType.java:1203)\n\tat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:643)\n\tat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:519)\n\tat org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1060)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:480)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:190)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:111)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:43)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:53)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(BinaryTypeBinding.java:618)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport(CompilationUnitScope.java:444)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport(CompilationUnitScope.java:466)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports(CompilationUnitScope.java:331)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:400)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:512)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:973)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:290)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:184)\n\tat org.aspectj.ajde.core.internal.AjdeCoreBuildManager.doBuild(AjdeCoreBuildManager.java:88)\n\tat org.aspectj.ajde.core.AjCompiler.build(AjCompiler.java:96)\n\tat org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:219)\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:621)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:163)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:194)\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:243)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)\n\n\nFor me, this problem mostly occurs when I have incremental build on in Eclipse and make a change that is either:\n1) Non code modifying change. I.E. Changing whitespace, comments, etc.\n2) Save a file (and thus auto build triggers) which has errors in it.\n\nAs far as what the type hierarchy is like, it is a fairly large project, so I\u0027m not sure where to start. Anything specific you are looking for? The class that was auto-built and generated the above exception is not generic, but it does have/use member variables that are generic. Would this potentially affect it as well?",
    "Interesting find. So my previous bug report was running under JRockit JDK 5 Update 8 R27.1.0. I just tried changing back to JVM 1.6 and everything works fine. Auto compilation, everything. Kind of strange considering AspectWerks and AspectJ merged not to long ago. Not sure if it is an AspectJ or a JRockit thing, but it would nice to see this get fixed soon.",
    "\u003e The class that was auto-built and generated the above exception \n\u003e is not generic, but it does have/use member variables that are \n\u003e generic. Would this potentially affect it as well?\n\nYes.  It is also interesting that it happens on incremental builds.  Behaving differently at different VM levels can entirely be down to how they have implemented internal classes using generics.",
    "\u003e Yes.  It is also interesting that it happens on incremental builds.  \n\nI wouldn\u0027t say that it is not limited to auto builds, only. However, that is the most common/reproducible occurence. But it does also happen during a standard compile, all-be-it less frequently.\n\n\u003e Behaving\n\u003e differently at different VM levels can entirely be down to how they have\n\u003e implemented internal classes using generics.\n\nSo assume this is something that JRockit would need to fix? Or is this potentially something wrong with the implementation of generics in AspectJ\u0027s compiler?\n\n",
    "\u003e So assume this is something that JRockit would need to fix? Or is this\n\u003e potentially something wrong with the implementation of generics in AspectJ\u0027s\n\u003e compiler?\n\nNo fix in JRockit required - it is purely an AspectJ bug.  There is something in the way generics are being used in the classes upon which you depend which is perfectly valid but AspectJ hasn\u0027t seen it before and can\u0027t cope with it.",
    "Created an attachment (id\u003d63693)\nLTW on JRocket can cause the same exception\n\nInstalling Glassbox into WebLogic 10 running on JRocket generated the same exceptions with only weblogic and org.aspectj.weaver code in the stacktrace.\n\nHope this ajcore file helps!",
    "I am getting the same bug in Eclipse when changing a specific class file that has many references to generic types. It will happen either when I have Build Automatically set or when I compile explicitly. The only thing that fixes the problem is to clean my project and start a fresh compile. So far that has solved the problem every time. I am introducing AspectJ to our development team, and they are excited to use the technology but a little hesitant. Even though this bug is not fatal (we have a work-around), it\u0027s annoyance may cause our team to loose confidence in using AspectJ - so I am curious why the severity level on this is \"normal\"?",
    "Changing OS from Mac OS to Mac OS X as per bug 185991",
    "I am closing this as a dup of bug 175039.  That bug covers the same stack trace but also includes an explanation of the problem and a fix was put in under that bug on the 6Mar2007.  Of all these similar bugs I have yet to see one reported on an AspectJ level after the 6Mar2007\nComment 2 here mentions 1.5.3 (22Nov2006)\nComment 10 includes a core file for a build of 28Feb2007\n\n*** This bug has been marked as a duplicate of bug 175039 ***"
  ],
  "commentCreationDates": [
    "2007-01-04T22:50:50+01:00",
    "2007-01-08T14:33:19+01:00",
    "2007-01-10T11:23:21+01:00",
    "2007-01-10T11:29:07+01:00",
    "2007-01-10T11:57:17+01:00",
    "2007-02-05T22:51:15+01:00",
    "2007-02-08T00:54:20+01:00",
    "2007-02-08T08:10:12+01:00",
    "2007-02-08T08:37:02+01:00",
    "2007-02-08T08:54:36+01:00",
    "2007-04-13T06:34:11+02:00",
    "2007-06-08T16:54:35+02:00",
    "2007-07-29T15:21:24+02:00",
    "2007-11-06T15:50:27+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "elements": [
        {
          "method": "org.aspectj.weaver.ResolvedType.getMemberParameterizationMap",
          "source": "ResolvedType.java:695"
        },
        {
          "method": "org.aspectj.weaver.ReferenceType.getDeclaredInterfaces",
          "source": "ReferenceType.java:406"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.getDirectSupertypes",
          "source": "ResolvedType.java:65"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.collectInterTypeMungers",
          "source": "ResolvedType.java:1156"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.collectInterTypeMungers",
          "source": "ResolvedType.jav ... .java:102"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "169605",
      "duplicateId": "175039",
      "date": "2007-01-04T22:50:50+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "0",
      "elements": [
        {
          "method": "org.aspectj.weaver.ResolvedType.getMemberParameterizationMap",
          "source": "ResolvedType.java:695"
        },
        {
          "method": "org.aspectj.weaver.ReferenceType.getDeclaredInterfaces",
          "source": "ReferenceType.java:406"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.getDirectSupertypes",
          "source": "ResolvedType.java:65"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.collectInterTypeMungers",
          "source": "ResolvedType.java:1157"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.collectInterTypeMungers",
          "source": "ResolvedType.java:1159"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers",
          "source": "ResolvedType.java:1136"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.checkInterTypeMungers",
          "source": "ResolvedType.java:1203"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations",
          "source": "AjLookupEnvironment.java:643"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations",
          "source": "AjLookupEnvironment.java:519"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom",
          "source": "AjLookupEnvironment.java:1060"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:480"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept",
          "source": "Compiler.java:190"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:111"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve",
          "source": "UnresolvedReferenceBinding.java:43"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType",
          "source": "BinaryTypeBinding.java:53"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType",
          "source": "BinaryTypeBinding.java:618"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findImport",
          "source": "CompilationUnitScope.java:444"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.findSingleImport",
          "source": "CompilationUnitScope.java:466"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInImports",
          "source": "CompilationUnitScope.java:331"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes",
          "source": "CompilationUnitScope.java:400"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:512"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:329"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:973"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:290"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:184"
        },
        {
          "method": "org.aspectj.ajde.core.internal.AjdeCoreBuildManager.doBuild",
          "source": "AjdeCoreBuildManager.java:88"
        },
        {
          "method": "org.aspectj.ajde.core.AjCompiler.build",
          "source": "AjCompiler.java:96"
        },
        {
          "method": "org.eclipse.ajdt.core.builder.AJBuilder.build",
          "source": "AJBuilder.java:219"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:621"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:163"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:194"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:243"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:246"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "169605",
      "duplicateId": "175039",
      "date": "2007-02-05T22:51:15+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "175039",
  "bugId": "169605",
  "duplicateId": "175039",
  "date": "2007-01-04T22:50:50+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}