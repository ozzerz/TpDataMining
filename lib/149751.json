{
  "comments": [
    "Version: 3.1.1\nBuild id: M20050929-0840\n\nThe code below compiles, but fails at runtime with the exception given following the code. The Sun JDK instead fails to compile the same code, giving the error at the bottom. Ideally the annotation would simply be compiled with the enum value TWO instead of FOO, but the Java Language Specification (section 9.7) does say that only enum constants are allowed here.\n\n\u003d\u003d MyAnnotation.java \u003d\u003d\nimport java.lang.annotation.Retention;\nimport static java.lang.annotation.RetentionPolicy.RUNTIME;\n\n@Retention(RUNTIME) public @interface MyAnnotation {\n    public MyEnum value();\n}\n\n\u003d\u003d MyEnum.java \u003d\u003d\npublic enum MyEnum {\n    ONE, TWO, THREE\n}\n\n\u003d\u003d MyClass.java \u003d\u003d\n@MyAnnotation(MyMain.FOO) public class MyClass {\n}\n\n\u003d\u003d MyMain.java \u003d\u003d\npublic class MyMain {\n    public static final MyEnum FOO \u003d MyEnum.TWO;\n    public static void main(String[] args) {\n        MyAnnotation annotation \u003d\n                MyClass.class.getAnnotation(MyAnnotation.class);\n        System.out.println(annotation.value().toString());\n    }\n}\n\n\u003d\u003d java MyMain (Eclipse 3.1.1) \u003d\u003d\nException in thread \"main\" java.lang.EnumConstantNotPresentException: MyEnum.FOO\n\tat sun.reflect.annotation.EnumConstantNotPresentExceptionProxy.generateException(EnumConstantNotPresentExceptionProxy.java:28)\n\tat sun.reflect.annotation.AnnotationInvocationHandler.invoke(AnnotationInvocationHandler.java:56)\n\tat $Proxy1.value(Unknown Source)\n\tat MyMain.main(MyMain.java:6)\n\n\u003d\u003d javac *.java (Sun JDK 1.5.0_05) \u003d\u003d\nMyClass.java:1: an enum annotation value must be an enum constant\n@MyAnnotation(MyMain.FOO) public class MyClass {\n                    ^\n1 error",
    "Created an attachment (id\u003d45920)\nProposed fix\n\nThis fixes the following problem + improved the error message to include (enum) + fix the bug for the array initializer that can contain the null literal.",
    "Created an attachment (id\u003d45921)\nRegression tests\n\n",
    "Philippe,\n\nCould you please review it? I can adapt it for 3.2.1 if needed by changing back the error message.",
    "+1 for 3.2.2",
    "*** Bug 156891 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d49948)\nProposed fix\n\nMore complete fix.\nThis also covers the name reference that refers to an array initializer with a better error message.\nPhilippe,\nLet me know what you think. I can take care of releasing it.",
    "Created an attachment (id\u003d49974)\nBetter patch\n\nI believe this patch is more consistent with other error messages.",
    "Created an attachment (id\u003d49975)\nUpdated regression tests\n\n",
    "Fix looks good, however for 3.2 maintenance no new pb ID can be introduced. As to make it internal, or reuse an existing error msg (suboptimal, but no API change).",
    "This is the patch for 3.3 stream (HEAD).\nI\u0027ll prepare another one for 3.2 maintenance.",
    "Fixed and released in HEAD.\nRegression tests added in org.eclipse.jdt.core.tests.compiler.regression.AnnotationTest#test208/213.",
    "Released for 3.3M2.",
    "Created an attachment (id\u003d50002)\nPatch for 3.2 maintenance\n\n",
    "Created an attachment (id\u003d50003)\nRegression tests for 3.2 maintenance branch\n\n",
    "Created an attachment (id\u003d50036)\nRegression tests for 3.2 maintenance branch\n\nMissed one test case in org.eclipse.jdt.core.tests.dom.ASTConverter15Test#test0209.",
    "Reopen to fix for 3.2.2.",
    "In 3.2.2 the error message is not optimal since we have to reuse existing error messages.\nIn HEAD the error message is much better.",
    "Created an attachment (id\u003d51098)\nNew patch for 3.2 maintenance\n\nRemove new error message to reuse only the existing ones.",
    "Created an attachment (id\u003d51099)\nUpdated regression tests\n\n",
    "Released for 3.2.2.\nRegression tests added in org.eclipse.jdt.core.tests.compiler.regression.AnnotationTest#test208/211",
    "Verified for 3.3 M2 using build I200609220010.",
    "Verified for 3.2.2 using build M20070112-1200."
  ],
  "commentCreationDates": [
    "2006-07-05T23:39:46+02:00",
    "2006-07-07T16:34:32+02:00",
    "2006-07-07T16:35:22+02:00",
    "2006-07-07T16:44:15+02:00",
    "2006-09-11T09:20:53+02:00",
    "2006-09-12T17:35:58+02:00",
    "2006-09-12T18:20:13+02:00",
    "2006-09-12T21:07:14+02:00",
    "2006-09-12T21:07:45+02:00",
    "2006-09-12T21:15:43+02:00",
    "2006-09-12T22:30:02+02:00",
    "2006-09-13T04:20:01+02:00",
    "2006-09-13T04:21:10+02:00",
    "2006-09-13T04:46:48+02:00",
    "2006-09-13T04:47:19+02:00",
    "2006-09-13T16:23:00+02:00",
    "2006-09-13T16:23:36+02:00",
    "2006-09-28T17:58:44+02:00",
    "2006-09-28T18:04:45+02:00",
    "2006-09-28T18:05:08+02:00",
    "2006-09-28T18:07:51+02:00",
    "2006-10-29T12:15:31+01:00",
    "2007-01-15T14:50:53+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.EnumConstantNotPresentException",
      "message": "MyEnum.FOO",
      "elements": [
        {
          "method": "sun.reflect.annotation.EnumConstantNotPresentExceptionProxy.generateException",
          "source": "EnumConstantNotPresentExceptionProxy.java:28"
        },
        {
          "method": "sun.reflect.annotation.AnnotationInvocationHandler.invoke",
          "source": "AnnotationInvocationHandler.java:56"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "149751",
      "date": "2006-07-05T23:39:46+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "149751",
  "bugId": "149751",
  "date": "2006-07-05T23:39:46+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}