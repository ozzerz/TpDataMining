{
  "comments": [
    "I run 3.2rc1; I did not see this problem in 3.2M6 or before that.\n\nI cannot reproduce this problem at this time, but it occurred 5 times during a few minutes yesterday.\n\neclipse.buildId\u003dI20060413-1718\njava.version\u003d1.5.0_06\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86 -data E:\\Documents and Settings\\tma\\Favorites\\eclipse\n\nError\nMon Apr 24 10:55:57 CEST 2006\nFailed to execute runnable (java.lang.IllegalArgumentException: Index out of bounds)\n\norg.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException: Index out of bounds)\nat org.eclipse.swt.SWT.error(SWT.java:3374)\nat org.eclipse.swt.SWT.error(SWT.java:3297)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\nat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3323)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2969)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\nat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\nat org.eclipse.core.launcher.Main.run(Main.java:977)\nat org.eclipse.core.launcher.Main.main(Main.java:952)\nCaused by: java.lang.IllegalArgumentException: Index out of bounds\nat org.eclipse.swt.SWT.error(SWT.java:3358)\nat org.eclipse.swt.SWT.error(SWT.java:3297)\nat org.eclipse.swt.SWT.error(SWT.java:3268)\nat org.eclipse.swt.widgets.TreeItem.findPrevious(TreeItem.java:222)\nat org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e(TreeItem.java:189)\nat org.eclipse.jface.viewers.TreeViewer.newItem(TreeViewer.java:579)\nat org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:737)\nat org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:2411)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1634)\nat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:932)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1641)\nat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:932)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1641)\nat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:932)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1610)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1565)\nat org.eclipse.jface.viewers.StructuredViewer$8.run(StructuredViewer.java:1409)\nat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1317)\nat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1407)\nat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1364)\nat org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.reconcile(JavaOutlinePage.java:421)\nat org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$1.run(JavaOutlinePage.java:172)\nat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n... 20 more",
    "I am also getting this in 3.2 20060426 when I am trying to copy an icon from onr directory to another using the package explorer\n\n!ENTRY org.eclipse.ui 4 0 2006-04-26 10:43:01.312\n!MESSAGE Failed to execute runnable (java.lang.IllegalArgumentException: Index out of bounds)\n!STACK 0\norg.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException: Index out of bounds)\n\tat org.eclipse.swt.SWT.error(SWT.java:3374)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\nCaused by: java.lang.IllegalArgumentException: Index out of bounds\n\tat org.eclipse.swt.SWT.error(SWT.java:3358)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.SWT.error(SWT.java:3268)\n\tat org.eclipse.swt.widgets.TreeItem.findPrevious(TreeItem.java:222)\n\tat org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e(TreeItem.java:189)\n\tat org.eclipse.jface.viewers.TreeViewer.newItem(TreeViewer.java:582)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:737)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements(AbstractTreeViewer.java:348)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalAdd(AbstractTreeViewer.java:251)\n\tat org.eclipse.jface.viewers.TreeViewer.internalAdd(TreeViewer.java:890)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.add(AbstractTreeViewer.java:130)\n\tat org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$PackageExplorerProblemTreeViewer.add(PackageExplorerPart.java:253)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.add(AbstractTreeViewer.java:587)\n\tat org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$4.run(PackageExplorerContentProvider.java:629)\n\tat org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$7.run(PackageExplorerContentProvider.java:666)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\t... 20 more\n",
    "This could be a bug in SWT tree or the JFace TreeViewer.  It seems bad.  Tod, can you help me to reprocude it?",
    "I see this exception as well btw with 3.2 RC1. have not been able to reproduce, but I am doing some heavy refresh() / update() with a PatternFilter applied to a Tree.\n\nben",
    "I always got the exception while expanding a Node of my Tree btw.\n\nben",
    "There is code in SWT that attempt to optimize tree indexing by caching.  This code could be going wrong.  Any ideas?  I\u0027ll see when the code went in and report back.",
    "Does PatternFilter do lots of indexing?",
    "The PatternFiltern I use is checking the state of all leaf-elements on the Tree and either shows or hides these elements. In order to refilter leaf-elements that change their state, I call refresh() frequently. So basically what happens is that the entire Tree is rebuilt with an increasing number of TreeItems.\n\nI tried this scenario out with a simple SWT Snippet, but was not able to reproduce the problem. So there is more about it I guess.\n\nBen",
    "*** Bug 138118 has been marked as a duplicate of this bug. ***",
    "I have a reproducable case in my rcp-code, however it would really be tricky to get that amount of code into a Snippet.\n\nThe tree looks like that:\n\nFoo\n|___Obj1\n|___Obj2\n|___Obj3\n\nThen I perform an operation on the 3 Objects. 3 Jobs begin running, each of them resulting in a call to Viewer#refresh(false) when they are done. Each refresh results in 1 Object from Foo being added into a new Parent Bar, making it look like:\n\nBar\n|___Obj1\nFoo\n|___Obj2\n|___Obj3\n\nafter the first refresh() and\n\nBar\n|___Obj1\n|___Obj2\nFoo\n|___Obj3\n\nafter the second, and so on.\n\nIts still not happening everytime, so I guess this is an issue when the concurrent running Jobs do their refresh() at a certain moment.\n\nBen\n",
    "Ok, do you have the time to debug this with me through the bug report or sametime?  The first thing to do is disable the index caching code in Tree.\n\nReplace the following methods in Tree (does the problem go away?):\n\nint getItemCount (int hItem) {\n\tint count \u003d 0, hFirstItem \u003d hItem;\n\twhile (hFirstItem !\u003d 0) {\n\t\thFirstItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hFirstItem);\n\t\tcount++;\n\t}\n\tif (hItem \u003d\u003d hFirstIndexOf) itemCount \u003d count;\n\treturn count;\n}\n\nint findIndex (int hFirstItem, int hItem) {\n\tif (hFirstItem \u003d\u003d 0) return -1;\n\tint index \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n\t\thNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tindex++;\n\t}\n\tif (hNextItem \u003d\u003d hItem) {\n\t\titemCount \u003d -1;\n\t\thFirstIndexOf \u003d hFirstItem;\n\t\thLastIndexOf \u003d hNextItem;\n\t\treturn lastIndexOf \u003d index;\n\t}\n\treturn -1;\n}\n\nint findItem (int hFirstItem, int index) {\n\tif (hFirstItem \u003d\u003d 0) return 0;\n\tint nextIndex \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n\t\thNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tnextIndex++;\n\t}\n\tif (index \u003d\u003d nextIndex) {\n\t\titemCount \u003d -1;\n\t\tlastIndexOf \u003d nextIndex;\n\t\thFirstIndexOf \u003d hFirstItem;\n\t\treturn hLastIndexOf \u003d hNextItem;\n\t}\n\treturn 0;\n}",
    "I can confirm that disabling caching seems to fix this issue. I am not in the Sametime network though, but tracking this bug frequently (unless in this case where I was already sleeping when you posted ;) ).\n\nBen",
    "@!#$!@#$!#$@",
    "Ok.  Try replacing only the getItemCount().  Is the problem fixed?",
    "No its not. But just changing \n\nint findItem (int hFirstItem, int index)\n\nseems to be sufficient.\n\nBen",
    "btw I am in #eclipse @ freenode IRC if you want a more dynamic way of me testing what you suggest.\n\nBen",
    "So busy.  Can you try this:\n\nint findIndex1 (int hFirstItem, int hItem) {\n    if (hFirstItem \u003d\u003d 0) return -1;\n    int index \u003d 0, hNextItem \u003d hFirstItem;\n    while (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n            hNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n            index++;\n    }\n    if (hNextItem \u003d\u003d hItem) {\n            itemCount \u003d -1;\n            hFirstIndexOf \u003d hFirstItem;\n            hLastIndexOf \u003d hNextItem;\n            return lastIndexOf \u003d index;\n    }\n    return -1;\n}\n\nint findIndex2 (int hFirstItem, int hItem) {\n\tif (hFirstItem \u003d\u003d 0) return -1;\n\tif (hFirstItem \u003d\u003d hFirstIndexOf) {\n\t\tif (hFirstIndexOf \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hFirstIndexOf;\n\t\t\treturn lastIndexOf \u003d 0;\n\t\t}\n\t\tif (hLastIndexOf \u003d\u003d hItem) return lastIndexOf;\n\t\tint hPrevItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hLastIndexOf);\n\t\tif (hPrevItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hPrevItem;\n\t\t\treturn --lastIndexOf;\n\t\t}\n\t\tint hNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hLastIndexOf);\n\t\tif (hNextItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hNextItem;\n\t\t\treturn ++lastIndexOf;\n\t\t}\n\t\tint previousIndex \u003d lastIndexOf - 1;\n\t\twhile (hPrevItem !\u003d 0 \u0026\u0026 hPrevItem !\u003d hItem) {\n\t\t\thPrevItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hPrevItem);\n\t\t\t--previousIndex;\n\t\t}\n\t\tif (hPrevItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hPrevItem;\n\t\t\treturn lastIndexOf \u003d previousIndex;\n\t\t}\n\t\tint nextIndex \u003d lastIndexOf + 1;\n\t\twhile (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n\t\t\thNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\t\tnextIndex++;\n\t\t}\n\t\tif (hNextItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hNextItem;\n\t\t\treturn lastIndexOf \u003d nextIndex;\n\t\t}\n\t\treturn -1;\n\t}\n\tint index \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n\t\thNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tindex++;\n\t}\n\tif (hNextItem \u003d\u003d hItem) {\n\t\titemCount \u003d -1;\n\t\thFirstIndexOf \u003d hFirstItem;\n\t\thLastIndexOf \u003d hNextItem;\n\t\treturn lastIndexOf \u003d index;\n\t}\n\treturn -1;\n}\n\nint findIndex (int hFirstItem, int hItem) {\n\tint index1 \u003d findIndex1 (hFirstItem, hItem);\n\tint index2 \u003d findIndex2 (hFirstItem, hItem);\n\tif (index1 !\u003d index2) {\n\t\tSystem.out.println (\"BAD findIndex\");\n\t\tnew Error().printStackTrace (System.out);\n\t}\n\treturn index2;\n}\n\nint findItem1 (int hFirstItem, int index) {\n    if (hFirstItem \u003d\u003d 0) return 0;\n    int nextIndex \u003d 0, hNextItem \u003d hFirstItem;\n    while (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n            hNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n            nextIndex++;\n    }\n    if (index \u003d\u003d nextIndex) {\n            itemCount \u003d -1;\n            lastIndexOf \u003d nextIndex;\n            hFirstIndexOf \u003d hFirstItem;\n            return hLastIndexOf \u003d hNextItem;\n    }\n    return 0;\n}\n\nint findItem2 (int hFirstItem, int index) {\n\tif (hFirstItem \u003d\u003d 0) return 0;\n\tif (hFirstItem \u003d\u003d hFirstIndexOf) {\n\t\tif (index \u003d\u003d 0) {\n\t\t\tlastIndexOf \u003d 0;\n\t\t\treturn hLastIndexOf \u003d hFirstIndexOf;\n\t\t}\n\t\tif (lastIndexOf \u003d\u003d index) return hLastIndexOf;\n\t\tif (lastIndexOf - 1 \u003d\u003d index) {\n\t\t\t--lastIndexOf;\n\t\t\treturn hLastIndexOf \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hLastIndexOf);\n\t\t}\n\t\tif (lastIndexOf + 1 \u003d\u003d index) {\n\t\t\tlastIndexOf++;\n\t\t\treturn hLastIndexOf \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hLastIndexOf);\n\t\t}\n\t\tif (index \u003c lastIndexOf) {\n\t\t\tint previousIndex \u003d lastIndexOf - 1;\n\t\t\tint hPrevItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hLastIndexOf);\n\t\t\twhile (hPrevItem !\u003d 0 \u0026\u0026 index \u003c previousIndex) {\n\t\t\t\thPrevItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hPrevItem);\n\t\t\t\t--previousIndex;\n\t\t\t}\n\t\t\tif (index \u003d\u003d previousIndex) {\n\t\t\t\tlastIndexOf \u003d previousIndex;\n\t\t\t\treturn hLastIndexOf \u003d hPrevItem;\n\t\t\t}\n\t\t} else {\n\t\t\tint nextIndex \u003d lastIndexOf + 1;\n\t\t\tint hNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hLastIndexOf);\n\t\t\twhile (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n\t\t\t\thNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\t\t\tnextIndex++;\n\t\t\t}\n\t\t\tif (index \u003d\u003d nextIndex) {\n\t\t\t\tlastIndexOf \u003d nextIndex;\n\t\t\t\treturn hLastIndexOf \u003d hNextItem;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tint nextIndex \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n\t\thNextItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tnextIndex++;\n\t}\n\tif (index \u003d\u003d nextIndex) {\n\t\titemCount \u003d -1;\n\t\tlastIndexOf \u003d nextIndex;\n\t\thFirstIndexOf \u003d hFirstItem;\n\t\treturn hLastIndexOf \u003d hNextItem;\n\t}\n\treturn 0;\n}\n\nint findItem (int hFirstItem, int hItem) {\n\tint hItem1 \u003d findItem1 (hFirstItem, hItem);\n\tint hItem2 \u003d findItem2 (hFirstItem, hItem);\n\tif (hItem1 !\u003d hItem2) {\n\t\tSystem.out.println (\"BAD findItem\");\n\t\tnew Error().printStackTrace (System.out);\n\t}\n\treturn hItem2;\n}\n\nint getItemCount1 (int hItem) {\n    int count \u003d 0, hFirstItem \u003d hItem;\n    while (hFirstItem !\u003d 0) {\n            hFirstItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hFirstItem);\n            count++;\n    }\n    if (hItem \u003d\u003d hFirstIndexOf) itemCount \u003d count;\n    return count;\n}\n\nint getItemCount2 (int hItem) {\n\tint count \u003d 0, hFirstItem \u003d hItem;\n\tif (hItem \u003d\u003d hFirstIndexOf) {\n\t\tif (itemCount !\u003d -1) return itemCount;\n\t\thFirstItem \u003d hLastIndexOf;\n\t\tcount \u003d lastIndexOf;\n\t}\n\twhile (hFirstItem !\u003d 0) {\n\t\thFirstItem \u003d OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hFirstItem);\n\t\tcount++;\n\t}\n\tif (hItem \u003d\u003d hFirstIndexOf) itemCount \u003d count;\n\treturn count;\n}\n\nint getItemCount (int hItem) {\n\tint count1 \u003d getItemCount1 (hItem);\n\tint count2 \u003d getItemCount2 (hItem);\n\tif (count1 !\u003d count2) {\n\t\tSystem.out.println (\"BAD getItemCount\");\n\t\tnew Error().printStackTrace (System.out);\n\t}\n\treturn count2;\n}\n",
    "Your last code resolves the issue for me again. I dont see any \"BAD xy\" on the console.\n\nBtw most times this problem occurs, I am expanding the TreeItem \"Bar\", while some Jobs are still running. Then while (or more precisely shortly after, since its all in the one UIJob), the Tree is refreshing due to a background Job having completed work.\n\nBen",
    "I don\u0027t understand how the last code could have done this.  Basically, every operation is done twice, once the slow but correct way, and once the fast (and possibly bogus way).  The results are checked and \"BAD xxxx\" is printed as soon as the bad thing happens.  The result that is returned from each method is the result from the fast (and bogus?) code.  Therefore, the bug should still be there.\n\nWierd.  Does the patch look right to you?",
    "Steve asked me to try to reproduce the bug.  Where do I get the source for RSSOwl? From sourceforge.net? What version of RSSOwl is the bug occuring in?",
    "I have uploaded a project-export of the relevant RSSOwl 2.0 plugins into:\n\nhttp://www.rssowl.org/dl/rssowl2.zip\n\nImport them into your Eclipse Workspace.\n\nMake sure to setup a recent Eclipse as target, e.g. RC1. A launch config is automatically provided (\"Launch RSSOwl 2.0 Product\").\n\nOnce RSSOwl 2 started, do:\n- Bookmark Explorer (left view): Dropdown \"Group by\", select \"Popularity\"\n- Expand \"Unpopular\" in Tree\n- Select some BookMarks \u003e Right Click \u003e Reload\n- While the reloading is in progress a new Parent \"Very Popular\" is showing\n- Expand this Parent while some Bookmarks are still reloading\n- Shortly after you should see the exception\n\nLet me doublecheck Steves last snippet.\n\nBen",
    "I copy \u0026 paste\u0027d steves last snippet into Tree.java of my SWT from Head, commented out the duplicate methods:\n\n//int getItemCount (int hItem)\n//int findIndex (int hFirstItem, int hItem)\n//int findItem (int hFirstItem, int index)\n\nand its working with no error (and no sysout either). \n\nBen",
    "I\u0027m an idiot.  The snippet is bogus.  Hang on ...",
    "Try this:\n\n\nint findIndex1(int hFirstItem, int hItem) {\n\tif (hFirstItem \u003d\u003d 0) return -1;\n\tint index \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n\t\thNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tindex++;\n\t}\n\tif (hNextItem \u003d\u003d hItem) return index;\n\treturn -1;\n}\n\nint findIndex2(int hFirstItem, int hItem) {\n\tif (hFirstItem \u003d\u003d 0) return -1;\n\tif (hFirstItem \u003d\u003d hFirstIndexOf) {\n\t\tif (hFirstIndexOf \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hFirstIndexOf;\n\t\t\treturn lastIndexOf \u003d 0;\n\t\t}\n\t\tif (hLastIndexOf \u003d\u003d hItem)\n\t\t\treturn lastIndexOf;\n\t\tint hPrevItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hLastIndexOf);\n\t\tif (hPrevItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hPrevItem;\n\t\t\treturn --lastIndexOf;\n\t\t}\n\t\tint hNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hLastIndexOf);\n\t\tif (hNextItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hNextItem;\n\t\t\treturn ++lastIndexOf;\n\t\t}\n\t\tint previousIndex \u003d lastIndexOf - 1;\n\t\twhile (hPrevItem !\u003d 0 \u0026\u0026 hPrevItem !\u003d hItem) {\n\t\t\thPrevItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hPrevItem);\n\t\t\t--previousIndex;\n\t\t}\n\t\tif (hPrevItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hPrevItem;\n\t\t\treturn lastIndexOf \u003d previousIndex;\n\t\t}\n\t\tint nextIndex \u003d lastIndexOf + 1;\n\t\twhile (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n\t\t\thNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\t\tnextIndex++;\n\t\t}\n\t\tif (hNextItem \u003d\u003d hItem) {\n\t\t\thLastIndexOf \u003d hNextItem;\n\t\t\treturn lastIndexOf \u003d nextIndex;\n\t\t}\n\t\treturn -1;\n\t}\n\tint index \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 hNextItem !\u003d hItem) {\n\t\thNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tindex++;\n\t}\n\tif (hNextItem \u003d\u003d hItem) {\n\t\titemCount \u003d -1;\n\t\thFirstIndexOf \u003d hFirstItem;\n\t\thLastIndexOf \u003d hNextItem;\n\t\treturn lastIndexOf \u003d index;\n\t}\n\treturn -1;\n}\n\nint findIndex(int hFirstItem, int hItem) {\n\tint index1 \u003d findIndex1(hFirstItem, hItem);\n\tint index2 \u003d findIndex2(hFirstItem, hItem);\n\tif (index1 !\u003d index2) {\n\t\tSystem.out.println(\"BAD findIndex\");\n\t\tnew Error().printStackTrace(System.out);\n\t}\n\treturn index2;\n}\n\nint findItem1(int hFirstItem, int index) {\n\tif (hFirstItem \u003d\u003d 0) return 0;\n\tint nextIndex \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n\t\thNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tnextIndex++;\n\t}\n\tif (index \u003d\u003d nextIndex) return hNextItem;\n\treturn 0;\n}\n\nint findItem2(int hFirstItem, int index) {\n\tif (hFirstItem \u003d\u003d 0)\n\t\treturn 0;\n\tif (hFirstItem \u003d\u003d hFirstIndexOf) {\n\t\tif (index \u003d\u003d 0) {\n\t\t\tlastIndexOf \u003d 0;\n\t\t\treturn hLastIndexOf \u003d hFirstIndexOf;\n\t\t}\n\t\tif (lastIndexOf \u003d\u003d index)\n\t\t\treturn hLastIndexOf;\n\t\tif (lastIndexOf - 1 \u003d\u003d index) {\n\t\t\t--lastIndexOf;\n\t\t\treturn hLastIndexOf \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hLastIndexOf);\n\t\t}\n\t\tif (lastIndexOf + 1 \u003d\u003d index) {\n\t\t\tlastIndexOf++;\n\t\t\treturn hLastIndexOf \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hLastIndexOf);\n\t\t}\n\t\tif (index \u003c lastIndexOf) {\n\t\t\tint previousIndex \u003d lastIndexOf - 1;\n\t\t\tint hPrevItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hLastIndexOf);\n\t\t\twhile (hPrevItem !\u003d 0 \u0026\u0026 index \u003c previousIndex) {\n\t\t\t\thPrevItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hPrevItem);\n\t\t\t\t--previousIndex;\n\t\t\t}\n\t\t\tif (index \u003d\u003d previousIndex) {\n\t\t\t\tlastIndexOf \u003d previousIndex;\n\t\t\t\treturn hLastIndexOf \u003d hPrevItem;\n\t\t\t}\n\t\t} else {\n\t\t\tint nextIndex \u003d lastIndexOf + 1;\n\t\t\tint hNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hLastIndexOf);\n\t\t\twhile (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n\t\t\t\thNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\t\t\tnextIndex++;\n\t\t\t}\n\t\t\tif (index \u003d\u003d nextIndex) {\n\t\t\t\tlastIndexOf \u003d nextIndex;\n\t\t\t\treturn hLastIndexOf \u003d hNextItem;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tint nextIndex \u003d 0, hNextItem \u003d hFirstItem;\n\twhile (hNextItem !\u003d 0 \u0026\u0026 nextIndex \u003c index) {\n\t\thNextItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hNextItem);\n\t\tnextIndex++;\n\t}\n\tif (index \u003d\u003d nextIndex) {\n\t\titemCount \u003d -1;\n\t\tlastIndexOf \u003d nextIndex;\n\t\thFirstIndexOf \u003d hFirstItem;\n\t\treturn hLastIndexOf \u003d hNextItem;\n\t}\n\treturn 0;\n}\n\nint findItem(int hFirstItem, int hItem) {\n\tint hItem1 \u003d findItem1(hFirstItem, hItem);\n\tint hItem2 \u003d findItem2(hFirstItem, hItem);\n\tif (hItem1 !\u003d hItem2) {\n\t\tSystem.out.println(\"BAD findItem\");\n\t\tnew Error().printStackTrace(System.out);\n\t}\n\treturn hItem2;\n}\n\nint getItemCount1(int hItem) {\n\tint count \u003d 0, hFirstItem \u003d hItem;\n\twhile (hFirstItem !\u003d 0) {\n\t\thFirstItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hFirstItem);\n\t\tcount++;\n\t}\n\treturn count;\n}\n\nint getItemCount2(int hItem) {\n\tint count \u003d 0, hFirstItem \u003d hItem;\n\tif (hItem \u003d\u003d hFirstIndexOf) {\n\t\tif (itemCount !\u003d -1) return itemCount;\n\t\thFirstItem \u003d hLastIndexOf;\n\t\tcount \u003d lastIndexOf;\n\t}\n\twhile (hFirstItem !\u003d 0) {\n\t\thFirstItem \u003d OS.SendMessage(handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hFirstItem);\n\t\tcount++;\n\t}\n\tif (hItem \u003d\u003d hFirstIndexOf) itemCount \u003d count;\n\treturn count;\n}\n\nint getItemCount(int hItem) {\n\tint count1 \u003d getItemCount1(hItem);\n\tint count2 \u003d getItemCount2(hItem);\n\tif (count1 !\u003d count2) {\n\t\tSystem.out.println(\"BAD getItemCount\");\n\t\tnew Error().printStackTrace(System.out);\n\t}\n\treturn count2;\n}",
    "With the last snippet I get lots of:\n\nBAD findItem\njava.lang.Error\n\tat org.eclipse.swt.widgets.Tree.findItem(Tree.java:6500)\n\tat org.eclipse.swt.widgets.TreeItem.findPrevious(TreeItem.java:221)\n\tat org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e(TreeItem.java:189)\n\tat org.eclipse.jface.viewers.TreeViewer.newItem(TreeViewer.java:582)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:737)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:2421)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1634)\n\tat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:935)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1641)\n\tat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:935)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1610)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1565)\n\tat org.eclipse.jface.viewers.StructuredViewer$8.run(StructuredViewer.java:1409)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1317)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1407)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1364)\n\tat org.rssowl.ui.internal.views.explorer.BookMarkContentProvider$4$1.run(BookMarkContentProvider.java:438)\n\tat org.rssowl.ui.internal.JobRunner$1.runInUIThread(JobRunner.java:46)\n\tat org.eclipse.ui.progress.UIJob$1.run(UIJob.java:94)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.rssowl.ui.internal.Application.run(Application.java:42)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\nBen",
    "To be explicit: I only get \"BAD findItem\".\n\nInterestingly with that last snippet, its harder to reproduce the issue.\n\nBen",
    "+1 for RC3 if the code I reviewed fixes the problem.",
    "+1",
    "Fixed \u003e 20060505\n\nBen, we are using RSSOwl as the test case and we can\u0027t make it happen anymore with the steps you gave.  Please keep an eye out for it in future.  Thanks for all the great support you give us.",
    "*** Bug 139826 has been marked as a duplicate of this bug. ***",
    "Great to hear that!\n\nBen",
    "I can verify that this is fixed.\n\nBen",
    "Yay!"
  ],
  "commentCreationDates": [
    "2006-04-25T12:04:56+02:00",
    "2006-04-26T17:01:55+02:00",
    "2006-04-26T23:50:43+02:00",
    "2006-04-27T00:21:29+02:00",
    "2006-04-27T00:22:21+02:00",
    "2006-04-27T00:31:47+02:00",
    "2006-04-27T00:33:11+02:00",
    "2006-04-27T00:49:00+02:00",
    "2006-04-27T17:59:58+02:00",
    "2006-05-02T23:56:10+02:00",
    "2006-05-03T01:39:42+02:00",
    "2006-05-03T07:22:00+02:00",
    "2006-05-03T16:36:14+02:00",
    "2006-05-03T16:43:51+02:00",
    "2006-05-03T17:22:46+02:00",
    "2006-05-03T17:31:29+02:00",
    "2006-05-03T22:44:33+02:00",
    "2006-05-03T23:10:33+02:00",
    "2006-05-04T20:45:59+02:00",
    "2006-05-04T21:50:58+02:00",
    "2006-05-04T23:04:04+02:00",
    "2006-05-04T23:08:51+02:00",
    "2006-05-04T23:17:51+02:00",
    "2006-05-04T23:27:52+02:00",
    "2006-05-04T23:36:20+02:00",
    "2006-05-04T23:39:49+02:00",
    "2006-05-05T17:19:45+02:00",
    "2006-05-05T17:39:15+02:00",
    "2006-05-05T17:41:14+02:00",
    "2006-05-05T17:51:19+02:00",
    "2006-05-05T18:00:34+02:00",
    "2006-05-08T08:45:40+02:00",
    "2006-05-08T19:04:51+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3323"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2969"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:169"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IllegalArgumentException",
        "message": "Index out of bounds",
        "elements": [
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3358"
          },
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3297"
          },
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3268"
          },
          {
            "method": "org.eclipse.swt.widgets.TreeItem.findPrevious",
            "source": "TreeItem.java:222"
          },
          {
            "method": "org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e",
            "source": "TreeItem.java:189"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.newItem",
            "source": "TreeViewer.java:579"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
            "source": "AbstractTreeViewer.java:737"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren",
            "source": "AbstractTreeViewer.java:2411"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
            "source": "AbstractTreeViewer.java:1634"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
            "source": "TreeViewer.java:932"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
            "source": "AbstractTreeViewer.java:1641"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
            "source": "TreeViewer.java:932"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
            "source": "AbstractTreeViewer.java:1641"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
            "source": "TreeViewer.java:932"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
            "source": "AbstractTreeViewer.java:1610"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
            "source": "AbstractTreeViewer.java:1565"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer$8.run",
            "source": "StructuredViewer.java:1409"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
            "source": "StructuredViewer.java:1317"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
            "source": "StructuredViewer.java:1407"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
            "source": "StructuredViewer.java:1364"
          },
          {
            "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.reconcile",
            "source": "JavaOutlinePage.java:421"
          },
          {
            "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$1.run",
            "source": "JavaOutlinePage.java:172"
          },
          {
            "method": "org.eclipse.swt.widgets.RunnableLock.run",
            "source": "RunnableLock.java:35"
          },
          {
            "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
            "source": "Synchronizer.java:123"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "138319",
      "date": "2006-04-25T12:04:56+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Index out of bounds)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3325"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2971"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IllegalArgumentException",
        "message": "Index out of bounds",
        "elements": [
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3358"
          },
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3297"
          },
          {
            "method": "org.eclipse.swt.SWT.error",
            "source": "SWT.java:3268"
          },
          {
            "method": "org.eclipse.swt.widgets.TreeItem.findPrevious",
            "source": "TreeItem.java:222"
          },
          {
            "method": "org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e",
            "source": "TreeItem.java:189"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.newItem",
            "source": "TreeViewer.java:582"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
            "source": "AbstractTreeViewer.java:737"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createAddedElements",
            "source": "AbstractTreeViewer.java:348"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalAdd",
            "source": "AbstractTreeViewer.java:251"
          },
          {
            "method": "org.eclipse.jface.viewers.TreeViewer.internalAdd",
            "source": "TreeViewer.java:890"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.add",
            "source": "AbstractTreeViewer.java:130"
          },
          {
            "method": "org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$PackageExplorerProblemTreeViewer.add",
            "source": "PackageExplorerPart.java:253"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.add",
            "source": "AbstractTreeViewer.java:587"
          },
          {
            "method": "org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$4.run",
            "source": "PackageExplorerContentProvider.java:629"
          },
          {
            "method": "org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$7.run",
            "source": "PackageExplorerContentProvider.java:666"
          },
          {
            "method": "org.eclipse.swt.widgets.RunnableLock.run",
            "source": "RunnableLock.java:35"
          },
          {
            "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
            "source": "Synchronizer.java:123"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 1,
      "commentIndex": 1,
      "bugId": "138319",
      "date": "2006-04-26T17:01:55+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.Error",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.Tree.findItem",
          "source": "Tree.java:6500"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.findPrevious",
          "source": "TreeItem.java:221"
        },
        {
          "method": "org.eclipse.swt.widgets.TreeItem.\u003cinit\u003e",
          "source": "TreeItem.java:189"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.newItem",
          "source": "TreeViewer.java:582"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
          "source": "AbstractTreeViewer.java:737"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren",
          "source": "AbstractTreeViewer.java:2421"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
          "source": "AbstractTreeViewer.java:1634"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
          "source": "TreeViewer.java:935"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
          "source": "AbstractTreeViewer.java:1641"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
          "source": "TreeViewer.java:935"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1610"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1565"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$8.run",
          "source": "StructuredViewer.java:1409"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1317"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1407"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1364"
        },
        {
          "method": "org.rssowl.ui.internal.views.explorer.BookMarkContentProvider$4$1.run",
          "source": "BookMarkContentProvider.java:438"
        },
        {
          "method": "org.rssowl.ui.internal.JobRunner$1.runInUIThread",
          "source": "JobRunner.java:46"
        },
        {
          "method": "org.eclipse.ui.progress.UIJob$1.run",
          "source": "UIJob.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3325"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2971"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.rssowl.ui.internal.Application.run",
          "source": "Application.java:42"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 2,
      "commentIndex": 24,
      "bugId": "138319",
      "date": "2006-05-04T23:36:20+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "138319",
  "bugId": "138319",
  "date": "2006-04-25T12:04:56+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}