{
  "comments": [
    "Build ID: M20070921-1145\n\nSteps To Reproduce:\nOriginal query:\nI\u0027m getting a ClassNotFoundException when the template engine tries to load\nmy  pagesAfterTemplateSelectionProvider class.\nThe class is indeed there.\n\njava.lang.ClassNotFoundException:\norg.eclipse.ptp.pldt.wizards.wizardPages.MPIPageProvider\n   ....\n   at org.eclipse.cdt.ui.templateengine.Template.getExtraCreatedPages(\nTemplate.java:147)\n\n\u003ctemplate\n         filterPattern\u003d\" \"\n         id\u003d\"org.eclipse.ptp.pldt.projects.MPIhelloWorldCProject\"\n         location\u003d\"templates/MPIhelloWorldCproject/template.xml\"\n         pagesAfterTemplateSelectionProvider\u003d\n\"org.eclipse.ptp.pldt.wizards.wizardPages.MPIPageProvider\"\n         projectType\u003d.\"org.eclipse.cdt.build.core.buildArtefactType.exe\"\n\u003e\n   \u003c/template\u003e\n\nin Template.java it\u0027s using Class.forName instead of the eclipse class\nloader\n\n//e.g.\npagesProvider\u003d\"org.eclipse.ptp.pldt.wizards.wizardPages.MPIPageProvider\";\nClass clazz \u003d Class.forName(pagesProvider);\ninstead of something like.\n\nExtensionRegistry.createExecutableExtension()\n\n\n\n\nHave you been able to get this to work using a class in another project\nfrom template engine, as the pagesAfterTemplateSelectionProvider class?\n\nAre these changes what you were talking about that will be coming in 4.0.2?\n\n\n\n\nMore information:\nBala has a patch for this... opening this bugzilla as a home for it, plus to discuss how to use the pagesAfterTemplateSelectionProvider",
    "Created an attachment (id\u003d81159)\npatch applied to cdt_4_0\n\n",
    "I\u0027ve adapted Bala\u0027s initial patch and tested with the example template located at:\n   /org.eclipse.cdt.ui.tests/resources/projectTemplates/testExtraPages\n\nwith an example IPagesAfterTemplateSelectionProvider implementation:\n   org.eclipse.cdt.ui.tests.templateengine.TestExtraPagesProvider.java",
    "applied to HEAD, marking as FIXED\n",
    "Hi Andrew,\n\nI\u0027m getting a compile error in TestExtraPagesProvider$MyPage.createControl().  There\u0027s an @Override annotation on it but there isn\u0027t an existing implementation of createControl in the super type hierarchy so the check is failing.\n\nI noticed that you\u0027ve removed the annotation in cdt_4_0.  Would you mind if I stepped in and got rid of it on HEAD?",
    "\u003e I noticed that you\u0027ve removed the annotation in cdt_4_0.  Would you mind if I\n\u003e stepped in and got rid of it on HEAD?\n\nsorry Jason.. now fixed :)\n",
    "I\u0027m trying to run the sample template in org.eclipse.cdt.ui.tests.templateengine,\nto see how adding the extra page works.\nI can see the extra pages appear, and now see where the attr values specified\nin the pages get returned via getPageData().   Two questions:\n\n1. I get a popup, is it an error?\n\nNo Condition--\u003e Process 2 (org.eclipse.cdt.core.CreateSourceFolder)--\u003eError: Argument path has an unexpandable macro: sourceDir\nNo Condition--\u003e Process 2 (org.eclipse.cdt.core.CreateSourceFolder)--\u003eError: Argument path has an unexpandable macro: sourceDir\n  No Condition--\u003e Process 1 (org.eclipse.cdt.managedbuilder.core.NewManagedProject)--\u003eSuccess: Executed successfully with args: [name:extraPage, location:C:/ews/runtime-ptp-sc07-local, artifactExtension:exe, isCProject:true]\n\nThe project is created but with nothing but an Includes container, no source folder as I would expect.\n\n2. What I want is to specify include paths, lib name and lib path, and build commands via these template pages.   Is there a sample template somewhere to show me what the attrvalues I need for this are?\n\nThanks, I really want to get this working for our tutorial at Supercomputing on 11/11.\n\n",
    "(In reply to comment #6)\n\u003e 1. I get a popup, is it an error?\n\nyes sorry, I neglected to test the template.xml in a clean workspace.. now fixed on cdt_4_0 and HEAD.\n\n\u003e 2. What I want is to specify include paths, lib name and lib path, and build\n\u003e commands via these template pages.   Is there a sample template somewhere to\n\u003e show me what the attrvalues I need for this are?\n\nThe example template in the ISV docs uses some of the Managed Build setup processes:\nhttp://help.eclipse.org/help33/topic/org.eclipse.cdt.doc.isv/guide/projectTemplateEngine/exampletemplate.html#Corona%2ecustomguide%2eexampletemplate\n\nThe processes are documented here:\n\nhttp://help.eclipse.org/help33/topic/org.eclipse.cdt.doc.isv/guide/projectTemplateEngine/Howtodeveloptemplates.html#howto%2edevelop%2etemplates\n\nIt should be possible to define your own attribute names that have values assigned in the custom pages, and then are referenced as inputs to the Managed Build processes that do the actual setting of options etc..\n",
    "I\u0027ve been looking over this most of the afternoon and evening, and either I can\u0027t figure out how to use it, or else it can\u0027t do what I need.\n\nThere is so much variability in the way I need to set managed build project settings with the single wizard page I have now, such that, for example,\nto add and include path to the project, for a given configuration,\nit looks something like this:\n\nprivate void addIncludePath (IConfiguration cf, String newIncludePath) {\n  // note: could be \u003e 1 path in \u0027newIncludePath\u0027\n  String ext \u003d \"c\";\n  ITool cfTool \u003d cf.getToolFromInputExtension(ext);\n\n  String id \u003d cfTool.getId();  \n  String name \u003d cfTool.getName();// could be \"XL C Compiler\"\n  IOption option \u003d null;\n  if (name.startsWith(\"XL C\")) { // special case for XL C compiler; has \u003e1\n    option \u003d cfTool.getOptionById(\"xlc.c.compiler.option.include.paths\");\n    } else { // otherwise we assume there is only one include path option.\n    option \u003d getFirstOptionByType(cf, cfTool, IOption.INCLUDE_PATH);\n    }\n    if (option !\u003d null) {\n      String[] includePaths \u003d null;\n      try {\n\t  includePaths \u003d option.getIncludePaths();\n\t } catch (BuildException e) {\n\t // TODO Auto-generated catch block\n\t e.printStackTrace();\n\t }\n      String[] newIncludePaths \u003d add(includePaths, newIncludePath);//appends\n      ManagedBuildManager.setOption(cf, cfTool, option, newIncludePaths);\n     }\n      else{\n       System.out.println(\"no option for include paths found.\");\n      }\n}\n\nIs it my imagination, or are the templates available to set static values mostly?\n\nI basically want a different extra wizard page based on project type (MPI project vs. OpenMP project, for example) - now I\u0027m wondering if I would be better of twisting the MBS wizard page to give me a different page to throw up at the user depending on type, if that\u0027s possible.\n\nWhat do you think?  Am I missing something?\nThanks for all your help.\n",
    "hi Beth,\n\n sorry for the delay in replying, it was a Team Building day yesterday.\n\n\u003e Is it my imagination, or are the templates available to set static values  mostly?\n\nI think this is a yes - my understanding is that the use-case for the template engine is where you are able to specify statically most of the choices your project needs, and adjust the values within that static structure. Writing new process types is entirely legitimate though: from your comment above I think you could achieve whats necessary by a process type that sets the include-path based on a comma-delimited string found in the data store? That is getPageData() would return a map containing {projectIncludes \u003d\u003e \"a,b,c,d\"} and a process would be invoked\n\n\u003cprocess type\u003d\"...CustomSetIncludes\"\u003e\n        \u003csimple name\u003d\"projectName\" value\u003d \"$(projectName)\"/\u003e      \n        \u003csimple name\u003d\"includes\" value\u003d \"$(projectIncludes)\"/\u003e      \n        \u003csimple name\u003d\"includeOption\" value\u003d \"id_of_the_relevant_option\"/\u003e\n\u003c/process\u003e\n\n\u003e I basically want a different extra wizard page based on project type (MPI\n\u003e project vs. OpenMP project, for example) - now I\u0027m wondering if I would be\n\u003e better of twisting the MBS wizard page to give me a different page to throw up\n\u003e at the user depending on type, if that\u0027s possible.\n\nAre you able to define different templates for each project type? i.e.\n\n + Executable\n   - OpenMP \n   - MPI\n\n\u003e Thanks for all your help.\n\nno problem :) I\u0027m picking up maintenance of the template engine. Bala has recently moved on to a new job in finance, so none of the original development team are available, but I\u0027ll aim to fix high priority problems.\n"
  ],
  "commentCreationDates": [
    "2007-10-02T15:22:53+02:00",
    "2007-10-25T16:36:04+02:00",
    "2007-10-25T16:38:54+02:00",
    "2007-10-25T16:46:07+02:00",
    "2007-10-26T17:29:52+02:00",
    "2007-10-26T17:38:47+02:00",
    "2007-10-30T14:09:55+01:00",
    "2007-10-30T15:24:19+01:00",
    "2007-10-31T02:43:06+01:00",
    "2007-11-01T17:09:06+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "org.eclipse.ptp.pldt.wizards.wizardPages.MPIPageProvider    ....",
      "elements": [
        {
          "method": "org.eclipse.cdt.ui.templateengine.Template.getExtraCreatedPages",
          "source": " Template.java:147"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "205182",
      "date": "2007-10-02T15:22:53+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "normal"
    }
  ],
  "groupId": "205182",
  "bugId": "205182",
  "date": "2007-10-02T15:22:53+02:00",
  "product": "CDT",
  "component": "cdt-core",
  "severity": "normal"
}