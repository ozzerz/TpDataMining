{
  "comments": [
    "This occured while using EMF build 2.2.1.v200609210005 in WebSphere Process Server while attempting to save to XML. Stack trace is as follows:\n\njava.lang.ClassCastException: org.eclipse.emf.ecore.impl.EPackageImpl incompatible with org.eclipse.emf.ecore.EClass\n\tat org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getDocumentRoot(XMLSaveImpl.java:2494)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.writeTopObject(XMLSaveImpl.java:611)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.traverse(XMLSaveImpl.java:549)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.save(XMLSaveImpl.java:233)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doSave(XMLResourceImpl.java:203)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:993)\n\tat com.ibm.ws.sca.internal.sdo.impl.XMLFileServiceImpl.save(XMLFileServiceImpl.java:328)\n\n\nI am looking at the code for XMLSaveImpl. I took this from the web so perhaps it does not match exactly with my running class files. But I am able to see where a classcast is thrown, at least in this version: \n\n    public EClass getDocumentRoot(EPackage epackage)\n    {\n      for (int i \u003d 0; i \u003c docRoots.size(); i +\u003d 2)\n      {\n        if (docRoots.get(i) \u003d\u003d epackage)\n        {\n          return (EClass)docRoots.get(++i);\n        }\n      }\n      docRoots.add(epackage);\n      EClass docRoot \u003d extendedMetaData.getDocumentRoot(epackage);\n      docRoots.add(docRoot);\n      return docRoot;\n    }\n\nIt appears that the EPackage epackage can be added to the docRoots data structure here:\n\ndocRoots.add(epacakge)\n\nand later be casted to EClass:\n\nreturn (EClass)docRoots.get(++i)\n\nI looked over the class hierarchy for EPackageImpl for this level of EMF, and I do not see EClass in the class hierarchy. \n\nAnother aspect of note is that this seems to occur intermittently. One user seemed to think that if they \"prime\" the system but going down this code path once, then everything works, but if they send multiple simultaneous requests to our server (thus sending multipe threads down this path), only then does it misbehave.",
    "Kyle,\n\nI need a reproducible test case.  It sounds like you might be using OPTION_USE_CACHED_LOOKUP_TABLE with the same value on multiple threads which is not supported.  Be sure to have a different list per thread.",
    "Hi Ed. I checked the source, and the parameter used for OPTION_USE_CACHED_LOOKUP_TABLE was a synchronized data structure that could be shared across threads as you indicated. I changed it to a thread local structure. Thanks for pointing that out. "
  ],
  "commentCreationDates": [
    "2007-09-18T20:54:41+02:00",
    "2007-09-18T22:36:46+02:00",
    "2007-09-19T16:11:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.emf.ecore.impl.EPackageImpl incompatible with org.eclipse.emf.ecore.EClass",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl$Lookup.getDocumentRoot",
          "source": "XMLSaveImpl.java:2494"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.writeTopObject",
          "source": "XMLSaveImpl.java:611"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.traverse",
          "source": "XMLSaveImpl.java:549"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLSaveImpl.save",
          "source": "XMLSaveImpl.java:233"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doSave",
          "source": "XMLResourceImpl.java:203"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.save",
          "source": "ResourceImpl.java:993"
        },
        {
          "method": "com.ibm.ws.sca.internal.sdo.impl.XMLFileServiceImpl.save",
          "source": "XMLFileServiceImpl.java:328"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "203868",
      "date": "2007-09-18T20:54:41+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "203868",
  "bugId": "203868",
  "date": "2007-09-18T20:54:41+02:00",
  "product": "EMF",
  "component": "Core",
  "severity": "normal"
}