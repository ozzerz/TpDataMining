{
  "comments": [
    "I got an exception in the log when I deleted and then committed a shared \nlaunch configuration. The delta being processed is probably a sync info change \n(i.e. it\u0027s a change delta for a resource that doesn\u0027t exist). I believe the \nkind field of the delta has a flag indicating what the type of the change is \nalthough you could probably get away with ignoring the change if the delta is \na change and the resource doesn\u0027t exist.\n\norg.eclipse.debug.core.DebugException: Launch configuration CVS Tests at \nD:\\dev\\workspace\\org.eclipse.team.tests.cvs.core\\launchConfigurations\\CVS \nTests.launch does not exist.\n\tat org.eclipse.debug.internal.core.LaunchManager.createDebugException\n(LaunchManager.java:535)\n\tat org.eclipse.debug.internal.core.LaunchManager.getInfo\n(LaunchManager.java:524)\n\tat org.eclipse.debug.internal.core.LaunchConfiguration.getInfo\n(LaunchConfiguration.java:356)\n\tat org.eclipse.debug.internal.core.LaunchConfiguration.getType\n(LaunchConfiguration.java:279)\n\tat org.eclipse.debug.internal.core.LaunchManager.isValid\n(LaunchManager.java:290)\n\tat \norg.eclipse.debug.internal.core.LaunchManager.launchConfigurationChanged\n(LaunchManager.java:751)\n\tat \norg.eclipse.debug.internal.core.LaunchManager$LaunchManagerVisitor.visit\n(LaunchManager.java:1046)\n\tat org.eclipse.core.internal.events.ResourceDelta.accept\n(ResourceDelta.java:71)\n\tat org.eclipse.core.internal.events.ResourceDelta.accept\n(ResourceDelta.java:79)\n\tat org.eclipse.core.internal.events.ResourceDelta.accept\n(ResourceDelta.java:79)\n\tat org.eclipse.core.internal.events.ResourceDelta.accept\n(ResourceDelta.java:79)\n\tat org.eclipse.core.internal.events.ResourceDelta.accept\n(ResourceDelta.java:52)\n\tat org.eclipse.debug.internal.core.LaunchManager.resourceChanged\n(LaunchManager.java:915)\n\tat org.eclipse.core.internal.events.NotificationManager$2.run\n(NotificationManager.java:251)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:1127)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:464)\n\tat org.eclipse.core.internal.events.NotificationManager.notify\n(NotificationManager.java:244)\n\tat \norg.eclipse.core.internal.events.NotificationManager.broadcastChanges\n(NotificationManager.java:138)\n\tat org.eclipse.core.internal.resources.Workspace.broadcastChanges\n(Workspace.java:146)\n\tat org.eclipse.core.internal.resources.Workspace.endOperation\n(Workspace.java:847)\n\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run\n(InternalWorkspaceJob.java:44)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",
    "If I understand the report correctly... Why is CVS firing a resource changed delta of kind \n\"CHANGED\" for a resource that doesn\u0027t exist? This seems like a problem.",
    "CVS makes use of a Core API that allows synchronization information to be \nstored in the resource tree. This sync information can be stored no non-\nexistant resources (referred to as phantoms). Changes to the sync info result \nin deltas just as changes to the resources themselves do. Look at the \nIResourceDelta API for information on what types of changes are reported in a \ndelta. You are probably only interested in resource additions, deletions and \nthose with a change type of IResourceDelta .CONTENT.",
    "Thanks for the info. Moving to M6 as this is not a regression.",
    "We only respond to deltas on files that are named *.launch. If you fire a delta \nfor a CVS state file, we won\u0027t respond to that so it\u0027s not a problem.\n\nIf I understand this case correctly, though, we\u0027re talking about CHANGE deltas \nthat are fired for a resource after it\u0027s gone. I\u0027m just curious - why are these \ndeltas fired?",
    "Just to clearify, the changes are occurring to a file name *.launch that was \npreviously committed to CVS (we share our launch configs through our test \nplugin) but was being deleted (i.e. delete locally and then commit). CVS makes \nuse of a Core mechanism to store synchronization information with each \nresource (e.g. remote sychronization information). When this information \nchanges, a delta is fired. It has always been this way (since 1.0). Its \nprobably just that not many people store their launch configs in CVS so you \nhaven\u0027t seen the problem before.",
    "I\u0027m changing the severity since this is not all that important (shoudl have \nset it when I reported the bug). The fix would just avoid an unnecessary log \nentry.",
    "Well, this isn\u0027t really a problem. :-) If you read the code, we\u0027re actually \nhandling the case with no trouble. The only change here would be for us to not \nlog the exception.\n\nI just want to understand the CVS case because it seems strange to me. When a \nfile is deleted, I\u0027d expect a delta to be fired with a kind of REMOVED. I think \nCVS may not be fulfilling the resource API here. IResourceChangeDelta#CHANGED \nspecifies that the file must exist in the before and after states of the delta.",
    "On closer inspection, it does look like the LaunchManager is doing the right \nthing. The IResourceDelta#accept() method is speced not to include phantoms so \nyou should never see them. I will try to reproduce this again to see why the \nphantom is being included.",
    "This is caused by a bug in ResourceDelta#accept. It is ORing a mask and the \nkind instead of ANDing it. Moving to Core.",
    "Fix released and regression test added.\n\nSimilar bug existed in getAffectedChildren method, causing phantom changes to be\nincluded.\n\nMichael, you might want to verify that this fix isn\u0027t breaking you."
  ],
  "commentCreationDates": [
    "2003-11-20T21:20:24+01:00",
    "2003-11-20T22:26:35+01:00",
    "2003-11-21T14:11:12+01:00",
    "2003-11-21T16:53:08+01:00",
    "2003-11-21T17:36:34+01:00",
    "2003-11-21T18:16:25+01:00",
    "2003-11-21T18:20:41+01:00",
    "2003-11-21T18:23:58+01:00",
    "2003-11-21T18:41:51+01:00",
    "2003-11-21T19:11:02+01:00",
    "2003-11-21T21:11:35+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.debug.core.DebugException",
      "message": "Launch configuration CVS Tests at  D:\\dev\\workspace\\org.eclipse.team.tests.cvs.core\\launchConfigurations\\CVS  Tests.launch does not exist.",
      "elements": [
        {
          "method": "org.eclipse.debug.internal.core.LaunchManager.createDebugException",
          "source": "LaunchManager.java:535"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchManager.getInfo",
          "source": "LaunchManager.java:524"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfiguration.getInfo",
          "source": "LaunchConfiguration.java:356"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfiguration.getType",
          "source": "LaunchConfiguration.java:279"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchManager.isValid",
          "source": "LaunchManager.java:290"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchManager.launchConfigurationChanged",
          "source": "LaunchManager.java:751"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchManager$LaunchManagerVisitor.visit",
          "source": "LaunchManager.java:1046"
        },
        {
          "method": "org.eclipse.core.internal.events.ResourceDelta.accept",
          "source": "ResourceDelta.java:71"
        },
        {
          "method": "org.eclipse.core.internal.events.ResourceDelta.accept",
          "source": "ResourceDelta.java:79"
        },
        {
          "method": "org.eclipse.core.internal.events.ResourceDelta.accept",
          "source": "ResourceDelta.java:79"
        },
        {
          "method": "org.eclipse.core.internal.events.ResourceDelta.accept",
          "source": "ResourceDelta.java:79"
        },
        {
          "method": "org.eclipse.core.internal.events.ResourceDelta.accept",
          "source": "ResourceDelta.java:52"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchManager.resourceChanged",
          "source": "LaunchManager.java:915"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager$2.run",
          "source": "NotificationManager.java:251"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1127"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:464"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.notify",
          "source": "NotificationManager.java:244"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.broadcastChanges",
          "source": "NotificationManager.java:138"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastChanges",
          "source": "Workspace.java:146"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:847"
        },
        {
          "method": "org.eclipse.core.internal.resources.InternalWorkspaceJob.run",
          "source": "InternalWorkspaceJob.java:44"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "47175",
      "date": "2003-11-20T21:20:24+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "47175",
  "bugId": "47175",
  "date": "2003-11-20T21:20:24+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}