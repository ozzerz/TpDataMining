{
  "comments": [
    "If we don\u0027t have the library for a particular platform then we default the \nbehaviour to java.io.File.\n\nWe provide platform-specific libraries for 3 reasons:\n- timestamp granularities are better\n- can make several calls to the OS and return all information at once\n- java.io.File.setReadOnly() does nothing\n\nWe should look into compiling our libraries for other platforms now that more \nEclipse ports are starting to become available.\n\nNote that this also applies to ANT since we contribute the core libraries there.",
    "Closing for now. If it becomes an issue we can look at this later but in a\nperfect world we would like to not ship libraries if we don\u0027t have to.\n\nAlso note that Ant no longer contributes libraries as mentioned above.\n",
    "*** Bug 31411 has been marked as a duplicate of this bug. ***",
    "*** Bug 36315 has been marked as a duplicate of this bug. ***",
    "Note that the Core Library is now contributed to the following platforms:\n- win32\n- linux\n- qnx\n- macosx\n",
    "*** Bug 42405 has been marked as a duplicate of this bug. ***",
    "I needed a place to put some notes so this is where I chose...\n-----------------\nIn order to accept contributions of the Core library to other platforms, we need\nthe following to happen:\n\n- create new fragment project on eclipse.org (PMC request)\n- commit rights to project are Core committers plus person who is contributing\nand maintaining the code (webmaster request)\n- release the code to the repository\n- create new map file in org.eclipse.releng/maps\n- map file should contain the version of the project to include in the builds\n- commit rights to the map file should be the Core committers plus the code\ncontributor (webmaster request)\n\nAs a person contributing a library you are responsible for:\n- fixing the bugs\n- keeping the version name of the core library up to speed\n- doing your own build submissions\n\nSumit, I will send the request to the PMC to get the ball rolling for your HP-UX\ncontribution.",
    "I forgot to add to the above list that we have to ensure that the project gets\nadded to the appropriate RelEng build files to ensure that it is included in the\nbuild.",
    "Sumit, the project has been created in the repository on eclipse.org.\n  org.eclipse.core.resources.hpux\nI believe the webmaster will contact you with login information.\n\nI have released some initial files to the project. (fragment.xml, about.html, etc)\n\nI have also created the map file to be used for including the project in the\nbuild process:\n  org.eclipse.releng/maps/core-hpux.map\nThis file should include the version tag to include in the build. (I used HEAD\nfor now)\n",
    "*** Bug 65910 has been marked as a duplicate of this bug. ***",
    "I originally posted bug 65910, which is about non-existent libcore for amd 64. \nsince I am not running a non-supported OS, I don\u0027t know if this is really a \nnew core lib that needs to be developed however.   \n \nbut my first thought on this is, i can understand why this probably won\u0027t be \nincluded in the release. \n \nhaving said that, i was able to use the existing core.resource.linux plugin to \ncompile a shared object for amd 64 version.  i didn\u0027t look enough to figure \nout how to create a so for different architecture but same OS,  i would be \nhappy to send the SO file to the owner of linux resource plugin owner. \n \nbtw if i\u0027m not mistaken, there seems to be a minor update that needs to be \ndone to the make file.  it is assuming there\u0027s one jvm include dir while you \nneed to include two different path. \n ",
    "*** Bug 70686 has been marked as a duplicate of this bug. ***",
    "For the record, I grabbed the source for\n    org.eclipse.core.resources.linux\nfrom dev.eclipse.org CVS server, and was able to create a libcore for Solaris\n8/x86 with only minor changes to the Makefile. Putting this into a plugin solves\nthe CVS update problems I mentioned in Bug #70686.\n\nThe Makefile changes, which are not \"clean\" are two:\n(1) setting the JNI include path to include two directories\n    (I just used the quickest hack that worked)\n(2) Getting rid of the gld link option for the LIBNAME.\n    (My gcc uses Sun\u0027s ld, not gld.)\n    I don\u0027t like this change, but it doesn\u0027t prevent the .so\n    from working.  Perhaps someone who knows gld can see\n    what I should have done.\n\nThe actual diff (which includes my own JDK_HOME) are:\n\nretrieving revision 1.4\ndiff -c -r1.4 Makefile\n*** Makefile    23 Feb 2004 22:59:22 -0000      1.4\n--- Makefile    23 Jul 2004 14:52:29 -0000\n***************\n*** 8,13 ****\n--- 8,14 ----\n  #\n  # makefile for libcore.so\n  \n+ JDK_INCLUDE \u003d /opt/j2sdk1.4.2/include -I /opt/j2sdk1.4.2/include/solaris\n  CORE.C \u003d core.c\n  CORE.O \u003d core.o\n  LIB_NAME \u003d libcore.so\n***************\n*** 15,21 ****\n  \n  core :\n        gcc -fPIC -g -c -I$(JDK_INCLUDE) $(CORE.C) -o $(CORE.O)\n!       gcc -g -shared -Wl,-soname,$(LIB_NAME) -o $(LIB_NAME_FULL) $(CORE.O) -lc\n  \n  clean :\n        rm *.o\n--- 16,22 ----\n  \n  core :\n        gcc -fPIC -g -c -I$(JDK_INCLUDE) $(CORE.C) -o $(CORE.O)\n!       gcc -g -shared -o $(LIB_NAME_FULL) $(CORE.O) -lc\n  \n  clean :\n        rm *.o",
    "*** Bug 79020 has been marked as a duplicate of this bug. ***",
    "I have a libcore.so for amd 64 compiled and have been using it for good 2-3 months now without a \nproblem.  what\u0027s the best way to get them in the future release?\n\nsome explanation was given here as to how to submit a proposal for new project, but I don\u0027t think this \nis really a new project.  However if you do think this should be a new project, I guess you guys will have \nto decide how to handle the project naming convention since resource projects are just based on os \nright now.\n\nThanks\n ",
    "*** Bug 88711 has been marked as a duplicate of this bug. ***",
    "I\u0027m Sorry.\nMy searching was poor at and was not able to check.\nI hope that is modified with the next release.",
    "*** Bug 94488 has been marked as a duplicate of this bug. ***",
    "*** Bug 97502 has been marked as a duplicate of this bug. ***",
    "Note for those CCed on this bug: the native code from org.eclipse.core.resources\nhas been moved into a new plugin in Eclipse 3.2.  There is a separate bug report\nfor recompiling these natives in the new project: bug 111243.  I do not yet have\ncompiled libraries for Linux x86_64, qnx, or HPUX (ia64_32 and PA_RISC)...\nvolunteers to recompile on those platforms (and other supported eclipse\nplatforms) greatly appreciated; my ported Linux natives should compile without\nfurther changes on all *nix platforms.",
    "Created an attachment (id\u003d29583)\nCompiled on amd64 2.6.10-1.766_FC3\n\nJohn\n\nI am attaching the compiled filesystem library for amd64/x86_64.\nIt\u0027s compiled under fedora core 3 (2.6.10-1 kernel).\n\nCPU: AMD Athlon(tm) 64 Processor 3200+\nGCC: gcc version 3.4.3 20050227 (Red Hat 3.4.3-22.fc3)\n\nCompiled with no problem but i haven\u0027t had a chance to test it.\nI was trying to copy my custom built\norg.eclipse.core.filesystem.linux.x86_64_1.0.0.jar which includs the compiled\nfile to 3.2 m3 but it doesn\u0027t seem to pick it up.  i must not have built the\njar correctly.\tany suggestion on how to test this without having to rebuilt\nthe entire eclipse?\n",
    "Created an attachment (id\u003d29584)\nlocalfile.o\n\nlocalfile.o",
    "Hello, I have released your contributed library, so if you cannot test manually\nyou can wait for the next build and test it then. Here are the steps to test\nmanually.\n\n1) Select the fragment project in Navigator\n(org.eclipse.core.filesystem.linux.x86_64)\n\n2) Right click and choose Import/Export\n3) Select Export \u003e Plugin Development \u003e Deployable Plugins and Fragments\n4) Select the checkbox at the bottom, \"Package plugins as individual JAR archives\"\n5) Click finish.\n6) Copy the exported JAR into your install directory \"eclipse/plugins\".\n7) Restart with -clean argument: \"eclipse -clean\"\n8) Validate by creating a project and a file, and try setting the executable bit\non the resource info property page.",
    "I have tested with nightly build from 11/14/2005 and the startup itself failed\nwith the following error.  It looks like swt native library is not compiled\nproperly.  let me know if there\u0027s any additional native libraries that requires\nrecompilation for x86_64.  I\u0027ll try to take a look at other subprojects later,\nbut i guess until this issue is resolved, i can\u0027t test filesystem jni calls.\n\n\n!SESSION 2005-11-14 16:28:02.781 -----------------------------------------------\neclipse.buildId\u003dN20051114-0010\njava.version\u003d1.5.0_05\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dlinux, ARCH\u003dx86_64, WS\u003dgtk, NL\u003den_US\nCommand-line arguments:  -os linux -ws gtk -arch x86_64\n\n!ENTRY org.eclipse.osgi 2005-11-14 16:28:05.963\n!MESSAGE Application error\n!STACK 1\njava.lang.UnsatisfiedLinkError: GDK_EVENT_TYPE\n        at org.eclipse.swt.internal.gtk.OS.GDK_EVENT_TYPE(Native Method)\n        at org.eclipse.swt.widgets.Display.eventProc(Display.java:1009)\n        at org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)\n        at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1315)\n        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2741)\n        at org.eclipse.swt.widgets.Display.release(Display.java:2795)\n        at org.eclipse.swt.graphics.Device.dispose(Device.java:214)\n        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:121)\n        at\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\n        at\norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n        at\norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:165)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)\n        at org.eclipse.core.launcher.Main.basicRun(Main.java:282)\n        at org.eclipse.core.launcher.Main.run(Main.java:977)\n        at org.eclipse.core.launcher.Main.main(Main.java:952)",
    "Nightly builds are sometimes unstable.  If you get a failure like this in the\nnext integration build (due tomorrow), then please enter a bug report against\nPlatform SWT.",
    "Test went successfully.  I verified both read-only and executable bits get set\nand stick.  I also compared to the file system permission and they were set\ncorrectly.\nLet me know if there\u0027s anything else I can help with.",
    "Thanks Yujin, that\u0027s great to hear.",
    "*** Bug 141008 has been marked as a duplicate of this bug. ***",
    "*** Bug 167403 has been marked as a duplicate of this bug. ***",
    "*** Bug 176470 has been marked as a duplicate of this bug. ***",
    "(In reply to comment #25)\nYujin, you may be interested in hearing that I compiled an updated liblocalfile for x86_64 in order to support symbolic links. I compiled it on Redhat Enterprise Linux 5, and attached it on bug 184433. It was released for Eclipse 3.3M7.\n\nIf you still have your old system available (based on Fedora Core 3), it would be interesting to hear if the newer lib works on your system; and if not, if you could contribute a build on the old system.\n\nThanks!",
    "Also see the references on bug 184534 comment 1 for newer updates of the native code for liblocalfile."
  ],
  "commentCreationDates": [
    "2002-03-27T15:58:55+01:00",
    "2002-05-02T23:47:07+02:00",
    "2003-02-10T15:29:23+01:00",
    "2003-04-11T16:01:02+02:00",
    "2003-04-11T16:01:53+02:00",
    "2003-09-02T22:18:37+02:00",
    "2003-09-24T17:33:49+02:00",
    "2003-09-24T17:48:26+02:00",
    "2003-09-26T21:43:53+02:00",
    "2004-06-07T14:59:58+02:00",
    "2004-06-08T04:25:55+02:00",
    "2004-07-22T21:45:09+02:00",
    "2004-07-23T17:07:55+02:00",
    "2004-11-19T17:50:15+01:00",
    "2004-11-19T18:41:28+01:00",
    "2005-03-22T16:05:55+01:00",
    "2005-03-23T00:27:11+01:00",
    "2005-05-10T22:19:43+02:00",
    "2005-05-31T20:29:26+02:00",
    "2005-10-07T21:25:57+02:00",
    "2005-11-09T05:23:31+01:00",
    "2005-11-09T05:24:16+01:00",
    "2005-11-10T19:12:11+01:00",
    "2005-11-14T21:34:04+01:00",
    "2005-11-14T21:43:47+01:00",
    "2005-11-15T19:14:41+01:00",
    "2005-11-15T19:18:02+01:00",
    "2006-05-10T15:51:59+02:00",
    "2006-12-15T22:14:19+01:00",
    "2007-03-06T14:01:56+01:00",
    "2007-05-02T11:32:55+02:00",
    "2007-05-02T11:33:47+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.UnsatisfiedLinkError",
      "message": "GDK_EVENT_TYPE",
      "elements": [
        {
          "method": "org.eclipse.swt.internal.gtk.OS.GDK_EVENT_TYPE",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.eventProc",
          "source": "Display.java:1009"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS._g_main_context_iteration",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.g_main_context_iteration",
          "source": "OS.java:1315"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2741"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.release",
          "source": "Display.java:2795"
        },
        {
          "method": "org.eclipse.swt.graphics.Device.dispose",
          "source": "Device.java:214"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:121"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:165"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:338"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:282"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 23,
      "bugId": "12358",
      "date": "2005-11-14T21:34:04+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "12358",
  "bugId": "12358",
  "date": "2002-03-27T15:58:55+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}