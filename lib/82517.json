{
  "comments": [
    "Known Bugs:\n- PropertySources (Two-way references do not show the properties for both\nthe references; undo does not work properly except for TextCellEditors; no\nway to edit EParameters)\n- The outline does not refresh properly if you reparent a package\n- FanRouter at times re-routes connections upon selection (when there are \nmultiple connections between two nodes)\n\nImprovements/Missing Functionality:\n- Better routing\n- Properties\n- Diagram\u0027s imports should probably be Ecore resource files rather than\nEPackages\n- Validation\n- Context menus\n- Support for multiple inheritance\n- Direct interaction with the outline (deleting from the outline, dragging\nfrom the palette to the outline, etc.)\n- Awareness about external resource changes\n- Ability to move reference labels\n- Ability to rearrange operations, attributes, enumLiterals, etc.\n- Documentation\n\nBecause of time constraints, we\u0027re not going to be working on this example\nmuch anymore.  However, if anybody wants to contribute to this project,\nthey\u0027re more than welcome.  Any questions can be posted here.  Also, let us \nknow which problems you\u0027re tackling.  The existing bugs have a higher priority \nover new functionality.",
    "src/.../model/ediagram.genmodel refers to a \"src-ecore\" directory in the\no.e.emf.ecore project, which doesn\u0027t exist.  Specifically:\n\nusedGenPackages\u003d\"../../../../../../../../org.eclipse.emf.ecore/src-ecore/model/Ecore.genmodel#//ecore\"\n\nIdeas on why this is?",
    "Import the org.eclipse.emf.ecore plug-in in your workspace with source.\n\nAs described in Bug 72215, this is a known problem with EMF.",
    "not for 3.1",
    "Let\u0027s keep helpwanted bugs open (they don\u0027t show up from the website link \notherwise).\n\nEd, we\u0027ll take any changes that are justified and are improvements.  Just make \nsure we discuss them on here before you make the changes.\n\nAs for Java generics, it\u0027s better to stay away from them, at least for now.  \nEclipse and GEF don\u0027t officially support JRE 1.5 yet and we can\u0027t require that \nof our clients.",
    "An interesting list. Perhaps half concern me or seem easy to fix.\n\nEdiagram is an editor for a view (.ediagram) of a meta-model (.ecore).\nMy additional requirement is for a view (.umlx) of a pattern (.ucore)\nof elements from a meta-model (.ecore), where (.ucore) is my prototype\nQVT meta-model. The extra level of indirection requires better and\nmore extensive ergonomics, but most notably, distinctly more graphical\nelements, some of which have different semnatics when appearing in a\npattern and a meta-model. So I really need to split the underlying support\nfrom the diagram-specific content policies.\n\n\u003e Ed, we\u0027ll take any changes that are justified and are improvements.\n\u003e Just make sure we discuss them on here before you make the changes.\n\nDoes this mean that you propose to register me as a committer for ediagram?\n\nHitherto, I have been trying hard to avoid editing Ediagram so that I can\neasily track your fixes by simple CVS monitoring. I have recently unwound\nsome of my changes that ensured that requests could activate diagram element\nspecific behaviour from the creation factories. This imposed too many\ndifficulties in ensuring that the appropriate derived request got constructed.\nI seem to be getting on much better by introducing a new tree of singleton\npolicy classes that inherit from IRegime. These are appropriately used from\nthe creation factory by the artifice of defining an IRegime as the\ngetNewObjectType(). As stateless singletons, they are readily accessed in\nother contexts and activated by an extension point. The IRegimes have much\nin common with EditPolicys, but EditPolicy carries a large amount of stateful\ngraphical editing baggage. It therefore seems beneficial to delegate the\nmodel rather than graphic dependent policy from EditPolicy to the appropriate\nIRegime.\n\nIn order to give consistent response to class names, I find I need all names\nto exist, so I have to augment NamedElementView with DataTypeView, ClassView\netc. I have a .ediagram that defines all these. The extra class names are a\nbreaking change, unless the EMF reader is enhanced to provide compatibility.\nIntroduction of AttributeView provides the place for isShown annotations\nto be activated and display arrangements to be maintained.\n\nI have yet to discover whether it is trivial to ensure that a derived\ngetENamedElement() can be made to refer to the derived ENamedElement. I suspect\nit is, but isDerived is not in the EMF book. Any clues?\n\nRe generics. It is perhaps too early for GEF to use generics. It is perhaps\ntoo soon for EDiagram to use generics since EMF does not use generics. On the\nother hand, generics is a compile time only facility, so it does not impose\non anyone just using libraries. EDiagram has yet to be released, so there is\nno compatibility issue. I find it very convenient to have\n\nBaseEditPart\u003cV extends DiagramElement, M extends EObject, F extends IFigure\u003e\nCreateNodeCommand\u003cM extends EObject, V extends Node\u003e\nCreateLinkCommand\u003cM extends EObject, S extends Node, V extends Link, T extends Node\u003e\n\nsince they eliminate nearly all casts (and detected a number of type errors).\n\nHowever, if this really is a problem, I can probably organise things so\nthat the neutral support is typeless, my non-GEF diagrams are generic,\nand perhaps EDiagram is non-generic.\n\nI\u0027m off on holiday now for a week. I hope to have a coherent view of quite what\nI need to change in two weeks time.",
    "The goals of the eDiagram example are:\n1) To be a UML-ish GEF example\n2) To demonstrate split models (view and business)\n3) To provide some level of an ecore editor for EMF users\n\nEd, what are your goals? What are you trying to do with/to the example? The \nexample is _not_ a supported extensible framework currently. You should check \nout the proposed GMF project.",
    "My goal is to provide a comprehensive editing/execution/debugging environment\nfor the UMLX graphical transformation language. This is an extension of the\nMOF (meta-modelling) subset of UML to support model-to-model transformations.\n\n(See http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/gmt-\nhome/doc/umlx/SCICO2003.pdf for description plus example pictures)\n\nI therefore need an ability to edit meta-models (pictures of relations\nbetween classes and attributes); EDiagram is very close here.\n\nI also need an ability to edit patterns (pictures of relations between\nclass instances, attribute instances and attribute values). \n\nI very much hope that GMF will facilitate this, but I doubt that a stable\nGMF will be ready for use for a year.\n\nI want to progress with this now, so I would like EDiagram to be extensible\nnow. It is inconvenient to maintain a rival EDiagram as part of UMLX, so\nI would prefer to contribute to an extensible evolution of EDiagram within GEF,\nand to its eventual replacement by GMF.\n",
    "\u003e It is inconvenient to maintain a rival EDiagram as part of UMLX\n\nYou are assuming that the example is changing frequently?  I don\u0027t think it \nwill change much at all after the 3.1 release.",
    "No assumption. If the standard GEF EDiagram is instanceof based, and my\nvariant is extension point and IRegime based, then these are rival versions.\nI would like to avoid this.",
    "Adding to the list of missing functionality: SnapToGeometry can be quite \nuseful in this example.",
    "Since, it\u0027s very easy to do, I\u0027ve added the snap to geometry feature.\n\n~DiagramEditPart",
    "A couple of other minor changes:\n\n- Shift+Del is permanent delete now (~EDiagramEditor)\n- Mod1+MouseWheel is zooming now (instead of Ctrl+MouseWheel) (~EDiagramEditor)\n- When a superclass is renamed, the subclass updates in the outline to show \nthis (~ClassifierTreeEditPart)\n\nAdditional bugs noticed:\n- When you permanently delete a class, there\u0027s no way left to delete any \nreferences to it (they\u0027re in the outline, but not in the view anymore -- and \ncan\u0027t be created in the view again since one of its nodes is missing).  Undo \nwill suffice for now.",
    "When a Classifier is deleted, my revised delete code for 98410 goes up to the \nResourceSet and traverses all resources to find the dangling ends of \neSuperTypes that derive from the classifier and eReferences that refer (without \nan eOpposite) to the classifier.\n",
    "Plugin doesn\u0027t work in Eclipse 3.1. Compiled from CVS it has 11 warnings, 9 of\nthem start with:\nDiscouraged access: ... is not accessible due to restriction on required library ...\nWhen I open some .ediagram file following error appears:\nUnable to create this part due to an internal error. Reason for the failure: The\neditor class could not be instantiated. This usually indicates that the editor\u0027s\nclass name was mistyped in plugin.xml.\n\njava.lang.ClassNotFoundException:\norg.eclipse.gef.examples.ediagram.editor.EDiagramEditor\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:403)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)\n\tat\norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:275)\n\tat\norg.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\n\tat ...\n\nPlugin.xml seems to be OK.",
    "That sounds like some trivial error in setup on your part.  BTW, you need to \nbe using EMF 2.0.1 for now.  See bug 99500.",
    "\nI get the cannot find error too, but only on one out of two nominally\nidentical configurations! It is far from obvious. I assumed it was related to\nthe EMF GEF build correspondence late in the \u00273.1\u0027 release process.\nSince EDiagram never got released, I presume it never got the build fix.\n\n(I\u0027m using 3.1 level releases throughout and Java 5 - my only quibbles\nare with JDT. GEF and EMF seem fine.)\n\nThe discouraged accesses can be fixed by:\n\nBulk copying\n(4 fixes) StringMatcher to .property\n(3 fixes) \nResourceAndContainerGroup,ContainerSelectionGroup,ContainerContentProvider to \nwizards\n(2 fixes) Duplicating the 2 GEFMessages. Perhaps these two could be exported by \nGEF.\n\nRandy\u0027s conclusion to 100067 fixes the 2 deprecateds.\n\nSince the 3.1 Release Review claims EDiagram is shipped, and since EDiagram\nis a very useful example, would it not be better to provide an official\nfully built version now, so that we can all install the base version without\nhaving to go through the palava of CVS access and then exporting a plug-in\nfor self-installation. Perhaps you could keep it in a separate examples\ndownloadable if you\u0027re not happy that it is of as high a quality as the\nother examples.\n\nI expect to produce the 0.0 release of my extensible multi-sheet derivation\nof EDiagram this week on Eclipse/GMT/UMLX. If you decide that this is the\ninterim way forward until GMF takes over, it makes even more sense to just do\nthe absolute minimum to EDiagram to make it 3.1 compatible and put it to bed.\n\nThe snap to Geometry feature is fantastic. Is there a trivial variant to\ndo something for bendpoints too? These are particularly bad since the\nenlarged feedback bendpoint icon causes the eventual line to be about one\npixel lower; really hard to manually manhattan route, and there is no diagram\nlevel routing property.\n",
    "This bug report has become a dumping ground. We will try to update our build \nprocess so that the ediagram example gets built and distributed in 3.1.1. \nOpened bug 104845.\n\nPlease open specific bugs or feature requests and feel free to post the number \nhere in case others want to CC.\n\n"
  ],
  "commentCreationDates": [
    "2005-01-10T22:03:58+01:00",
    "2005-01-15T07:27:48+01:00",
    "2005-01-18T16:55:39+01:00",
    "2005-03-21T21:55:30+01:00",
    "2005-05-13T07:49:29+02:00",
    "2005-05-13T22:34:42+02:00",
    "2005-05-14T04:59:31+02:00",
    "2005-05-22T14:31:51+02:00",
    "2005-05-23T19:10:09+02:00",
    "2005-05-23T20:25:01+02:00",
    "2005-06-08T07:01:26+02:00",
    "2005-06-08T07:14:43+02:00",
    "2005-06-08T08:37:32+02:00",
    "2005-06-08T09:11:41+02:00",
    "2005-07-22T13:59:44+02:00",
    "2005-07-22T17:15:42+02:00",
    "2005-07-22T18:41:08+02:00",
    "2005-07-22T19:34:42+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "org.eclipse.gef.examples.ediagram.editor.EDiagramEditor",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:403"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:78"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:275"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "82517",
      "date": "2005-07-22T13:59:44+02:00",
      "product": "GEF",
      "component": "Examples",
      "severity": "normal"
    }
  ],
  "groupId": "82517",
  "bugId": "82517",
  "date": "2005-01-10T22:03:58+01:00",
  "product": "GEF",
  "component": "Examples",
  "severity": "normal"
}