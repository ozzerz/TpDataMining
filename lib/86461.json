{
  "comments": [
    "I wrote a testsuite class collecting an interesting for me subset of tests.\nIt is composed of a suite() method that invokes further suite-like methods.\nI can select any method in the ouline view and execute it with jniut, but only\nthe canonical suite() works, all others mySuite() fail because \na single synthesized \"warning\" test is executed :\n\njunit.framework.AssertionFailedError: Could not create test \u0027headlessSuite\u0027 \n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner$1.runTest(RemoteTestRunner.java:500)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:421)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:305)\n\tat\norg.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30)\n\tat\norg.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:92)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2572)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2301)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat\norg.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:33)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nthe Suite class is this :\n\npublic class EdoTestSuite {\n\n    public static Test suite() {\n        TestSuite suite \u003d new TestSuite(\"All my Tests blah blah \");\n        // $JUnit-BEGIN$\n        suite.addTest(headlessSuite());\n        suite.addTest(uiSuite());\n        suite.addTest(loooongSuite());\n        suite.addTest(brokenSuite());\n        // $JUnit-END$\n        return suite;\n    }\n\n    public static Test headlessSuite() {\n        TestSuite suite \u003d new TestSuite(\"headlessSuite\");\n        // $JUnit-BEGIN$\n        suite.addTestSuite(RuntimeEnvironmentTest.class);\n        suite.addTestSuite(JavaUtilsTest.class);\n        suite.addTestSuite(ModelFixtureTest.class);\n        suite.addTestSuite(EmfUtilsTest.class);\n        // omissis\n        // $JUnit-END$\n        return suite;\n    }\n\n    public static Test uiSuite() {\n        TestSuite suite \u003d new TestSuite(\"uiSuite\");\n        // $JUnit-BEGIN$\n        // omissis\n        suite.addTestSuite(DecoratorTest.class);\n        // $JUnit-END$\n        return suite;\n    }\n\n    public static Test loooongSuite() {\n        TestSuite suite \u003d new TestSuite(\"loooongSuite\");\n        suite.addTestSuite(HelloWorldTest.class);\n        // $JUnit-END$\n        return suite;\n    }\n\n    public static Test brokenSuite() {\n        TestSuite suite \u003d new TestSuite(\"brokenSuite\");\n        suite.addTest(new ProcessModelEditorTest(\"BROKEN_testGotoMarker\"));\n        // $JUnit-END$\n        return suite;\n    }\n\n    \n}",
    "PS I\u0027m running 3.1m5 on linux gtk",
    "oops 3.1M5a",
    "Erich, can you please comment.",
    "This is the expected behaviour. JUnit only recognizes static Test suite() as a\nsuite method. This is a JUnit issue and not an issue with the Eclipse JUnit\nintegration. Please file a enhancement request against org.junit.\n\nThe workaround is to create the suite() methods in separate classes.",
    "sorry to reopen it, \nI think the JDT UI should then not offer to run a method as a Junit suite if it\ncan\u0027t. the bug was opened against the UI in fact.",
    "adjusted priority",
    "Moving back to the JDT/UI inbox",
    "if you add method\n\tpublic static Test setUpTest(Test test) {\n\t}\nthen you can select a single test in this class and run it."
  ],
  "commentCreationDates": [
    "2005-02-24T12:44:21+01:00",
    "2005-02-24T12:45:50+01:00",
    "2005-02-24T12:46:19+01:00",
    "2005-02-25T13:21:32+01:00",
    "2005-04-26T11:24:02+02:00",
    "2005-04-26T11:29:04+02:00",
    "2005-04-26T15:12:47+02:00",
    "2006-05-24T11:48:35+02:00",
    "2006-06-24T23:52:44+02:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "message": "Could not create test \u0027headlessSuite\u0027",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner$1.runTest",
          "source": "RemoteTestRunner.java:500"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:127"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:118"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:421"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:305"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:30"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run",
          "source": "UITestApplication.java:92"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:106"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:2572"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2301"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1377"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1348"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:254"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.UITestApplication.run",
          "source": "UITestApplication.java:33"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "86461",
      "date": "2005-02-24T12:44:21+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "86461",
  "bugId": "86461",
  "date": "2005-02-24T12:44:21+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}