{
  "comments": [
    "200308281813\n\nWhen hovering over the quick diff ruler to display the diff hover. Not\nreproducable, but consistently failing for a certain hover (I suspect an empty\nhover message, but not sure).\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat\njava.lang.StringIndexOutOfBoundsException.\u003cinit\u003e(StringIndexOutOfBoundsException.java:67)\n\tat java.lang.String.substring(String.java)\n\tat org.eclipse.swt.custom.DisplayRenderer.getStyledTextWidth(DisplayRenderer.java)\n\tat org.eclipse.swt.custom.StyledTextRenderer.getTextWidth(StyledTextRenderer.java)\n\tat\norg.eclipse.swt.custom.StyledText$ContentWidthCache.contentWidth(StyledText.java)\n\tat org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate(StyledText.java)\n\tat org.eclipse.swt.custom.StyledText.computeSize(StyledText.java:2116)\n\tat org.eclipse.swt.layout.GridLayout.calculateGridDimensions(GridLayout.java)\n\tat org.eclipse.swt.layout.GridLayout.computeLayoutSize(GridLayout.java)\n\tat org.eclipse.swt.layout.GridLayout.computeSize(GridLayout.java)\n\tat org.eclipse.swt.widgets.Composite.computeSize(Composite.java)\n\tat org.eclipse.swt.widgets.Control.computeSize(Control.java)\n\tat\norg.eclipse.jdt.internal.ui.text.java.hover.SourceViewerInformationControl.computeSizeHint(SourceViewerInformationControl.java:315)\n\tat\norg.eclipse.jdt.internal.ui.text.CustomSourceInformationControl.computeSizeHint(CustomSourceInformationControl.java:70)\n\tat\norg.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:708)\n\tat\norg.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:677)\n\tat\norg.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:423)\n\tat\norg.eclipse.jface.text.AbstractInformationControlManager.setInformation(AbstractInformationControlManager.java:224)\n\tat\norg.eclipse.jface.text.source.AnnotationBarHoverManager.computeInformation(AnnotationBarHoverManager.java:97)\n\tat\norg.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:661)\n\tat\norg.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2036)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:2019)\n\tat\norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:207)\n\tat java.lang.reflect.Method.invoke(Method.java:271)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:295)\n\tat org.eclipse.core.launcher.Main.run(Main.java:751)\n\tat org.eclipse.core.launcher.Main.main(Main.java:587)",
    "I have a reproducable case: \n\n1. Hava a Java source, similar to this:\n\n/* comment\n * comment\n */\nJavaCode();\n\n2. dirty the last line in the multi-line commment, and the java line\n3. have quick diff on\n4. hover over the change bar to get the original source hover\n-\u003e exception thrown\n\nThe reason might be connected to how the content gets set on the StyledText -\nCustomSourceInformationControl.setInformation(String) prepends a fake comment\nstart to the displayed content. This might result somewhere in a bad index\ncomputation.",
    "Seems to be connected with line delimiters - changing the delimiter in the fake\ncomment fixed the problem - it might still be there though.",
    "It works for me.\nbuild 200308281813, windows xp.",
    "I\u0027m able to reproduce it in the 0910 build, but not in 0930.  However it \ndoesn\u0027t look like it\u0027s now working as a result of an swt change.  Will keep \nlooking.\n",
    "I have added a workaround in 20030930, so it\u0027s not reproducable via the steps\ndescribed in comment 1.\n\nThe workaround was to use a different line delimiter.",
    "This exception still happens in current builds on at least linux-motif and \nlinux-gtk, so it\u0027s still easy to reproduce.  There are two problems causing it:\n\n1. The root cause is an invalid set of StyleRanges being supplied to \nStyledText.setStyleRanges(StyleRange[]), since the first two of them overlap in \nthe test case.  The conflicting ranges are:\n  range #0: Green text (comment) with start\u003d0 and length\u003d8, so index range 0 -\u003e \n8 (I\u0027m guessing this should be 0 -\u003e 6)\n  range #1: Black text (for \"\u003e\") with start\u003d6 and length\u003d1, so index range 6 -\u003e \n7\nThese StyleRanges originate in jdt-ui, so they should investigate this (maybe \nthe jdt-core scanner is producing different token ranges based on the line \ndelimiter?).  Please log a report with them with the same test case and specify \nthe platforms where it happens in spite of your workaround.\n\n2. StyledText should handle such cases more gracefully, so I\u0027ve fixed \nDisplayRenderer to detect overlapping StyleRange cases and just ignore these \nstyles.  Fixed \u003e 1024.\n"
  ],
  "commentCreationDates": [
    "2003-09-02T11:38:54+02:00",
    "2003-09-30T10:37:09+02:00",
    "2003-09-30T10:50:47+02:00",
    "2003-09-30T21:23:10+02:00",
    "2003-09-30T22:12:23+02:00",
    "2003-10-01T09:32:53+02:00",
    "2003-10-24T18:05:46+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: -1",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.StringIndexOutOfBoundsException.\u003cinit\u003e",
          "source": "StringIndexOutOfBoundsException.java:67"
        },
        {
          "method": "java.lang.String.substring",
          "source": "String.java"
        },
        {
          "method": "org.eclipse.swt.custom.DisplayRenderer.getStyledTextWidth",
          "source": "DisplayRenderer.java"
        },
        {
          "method": "org.eclipse.swt.custom.StyledTextRenderer.getTextWidth",
          "source": "StyledTextRenderer.java"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$ContentWidthCache.contentWidth",
          "source": "StyledText.java"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate",
          "source": "StyledText.java"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.computeSize",
          "source": "StyledText.java:2116"
        },
        {
          "method": "org.eclipse.swt.layout.GridLayout.calculateGridDimensions",
          "source": "GridLayout.java"
        },
        {
          "method": "org.eclipse.swt.layout.GridLayout.computeLayoutSize",
          "source": "GridLayout.java"
        },
        {
          "method": "org.eclipse.swt.layout.GridLayout.computeSize",
          "source": "GridLayout.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.computeSize",
          "source": "Composite.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.computeSize",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.hover.SourceViewerInformationControl.computeSizeHint",
          "source": "SourceViewerInformationControl.java:315"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.CustomSourceInformationControl.computeSizeHint",
          "source": "CustomSourceInformationControl.java:70"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl",
          "source": "AbstractInformationControlManager.java:708"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.presentInformation",
          "source": "AbstractInformationControlManager.java:677"
        },
        {
          "method": "org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation",
          "source": "AbstractHoverInformationControlManager.java:423"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.setInformation",
          "source": "AbstractInformationControlManager.java:224"
        },
        {
          "method": "org.eclipse.jface.text.source.AnnotationBarHoverManager.computeInformation",
          "source": "AnnotationBarHoverManager.java:97"
        },
        {
          "method": "org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation",
          "source": "AbstractInformationControlManager.java:661"
        },
        {
          "method": "org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover",
          "source": "AbstractHoverInformationControlManager.java"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2036"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:2019"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:858"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "java.lang.reflect.AccessibleObject.invokeL",
          "source": "AccessibleObject.java:207"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:271"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:295"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:751"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:587"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "42367",
      "date": "2003-09-02T11:38:54+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "42367",
  "bugId": "42367",
  "date": "2003-09-02T11:38:54+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}