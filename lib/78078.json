{
  "comments": [
    "Starting with a clean install of 3.1M3 and a new workspace, I do Import \u003e\nExternal Plug-ins and Fragments \u003e Next \u003e Next \u003e Add All \u003e Finish.\n\nThen (from Java perspective) I do Run As \u003e Eclipse Application\nWhich gives me a launch error: \"Could not launch the configuration. Details are\nin the log...\". The log contains the following:\n\n!SESSION Mon Nov 08 15:45:30 GMT 2004 ------------------------------------------\n!ENTRY org.eclipse.core.launcher 4 0 Nov 08, 2004 15:45:30.78\n!MESSAGE Exception launching the Eclipse Platform:\n!STACK\njava.net.MalformedURLException: unknown protocol: e\n\tat java.net.URL.\u003cinit\u003e(URL.java:544)\n\tat java.net.URL.\u003cinit\u003e(URL.java:434)\n\tat org.eclipse.core.launcher.Main.addDevEntries(Main.java:371)\n\tat org.eclipse.core.launcher.Main.getDevPath(Main.java:284)\n\tat org.eclipse.core.launcher.Main.getBootPath(Main.java:406)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:174)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\n\nI\u0027ve reproduced this on two machines. This is how I set up a self-host\ndevelopment environment, and has always worked fine in the past, including with\n3.1M2. I tried changing various settings in the launch config, but nothing\nhelped. Any ideas for any workarounds? Without this I can\u0027t use M3 at all.",
    "I\u0027ve also tried this on two different machines, with the same error log (except \nI got a ...unknown protocol: e). Somebody is trying to interpret a file system \npath as an URL.",
    "Actually, it seems to be a result of the changes made to allow : (colon) and \\ \n(backslash) as legal characters in resource names on platforms where this is \nallowed. As far as I can tell, the config.ini written to .metadata/.plugins/org.\neclipse.pde.core/\u003cproject name\u003e seems to contain escaped : and \\.\n\nSo it seems like these changes didn\u0027t quite make it to the org.eclipse.core.\nlauncher.Main (or conversely, didn\u0027t get stripped from the code writing the \nconfig.ini file).",
    "I believe this has nothing to do with the Path changes.  When I add a breakpoint\ninside the path constructors, I see no Paths have been created at the time of\nfailure.  The dev.properties file contains escaped : characters because the\njava.util.Properties file format specifies : as a key/value separator, so\nliteral : characters must be escaped.  Again, this has nothing to do with Path\nobjects.\n\nHowever, I can easily reproduce the error.  I don\u0027t know enough about the\ndev.properties file to know what the specified format is and why it is failing.\nTo reproduce, just launch a test workspace when OSGi is in your workspace as a\nbinary plugin. As a workaround, don\u0027t import the OSGi projects or import them as\nsource.",
    "ok, this has nothing to do with : in paths.\nthe colons are correctly escaped in the properties file, because we use the \nProperties.save() API.\n\nThe problem occurs only when the plugin is imported WITH linking.  Regular \nbinary import is fine.\n\nWhen the plugin is imported with linking, the libraries for the plugin are not \nreally in the workspace, ie. they are linked, so PDE puts the full URLs of all \nlinked JARs in the org.eclipse.osgi entry in the dev.properties file.\n\nIt appears as though the runtime does not like a path like D:/...., it must be \nexpecting a protocol like file:D:/...\n\ncc one of the runtime guys to tell us exactly how they parse the keys and \nvalues in the dev.properties file.  I know how they handle the most common \ncase, which is the relative path.  The question is: how do they handle \nabsolute paths?\n\ncc RC as Jeff is gone this week.",
    "*** Bug 78097 has been marked as a duplicate of this bug. ***",
    "Thanks for the workaround, removing org.eclipse.osgi from the workspace works\nfor me.",
    "Wassim, Main assumes the paths in the dev entry for org.eclipse.osgi to be\nrelative. Is this assumption invalid? Why should binary plug-ins imported as\nlinks appear in the development mode class path? Shouldn\u0027t they be treated the\nsame as external plug-ins for runtime purposes?\n\nAdding Tom since he is more well versed in this matter than me.",
    "Two main motivations for moving to the -dev propertiesFile approach, instead \nof the old -dev binFolders approach:\n1. Efficiency:  We should be able to specify the output folder(s) on a per-\nplugin basis\n2. Linked Resources: We should be able absolute paths as output folders.  \nAbsolute paths have become more popular due to the fancy linked output folders \nand linked libraries.  Of course, the runtime has no concept of \"linked\" \nanything, so feeding it the absolute path addresses the problem.\n\nSo to answer RC\u0027s question, it is of course true that if somebody imported \norg.eclipse.osgi as binary with links into the workspace that if we give the \nruntime the URL of the corresponding osgi plugin in the installation, \neverything will be fine.  That is what we did up until some time in M3.\n\nThen came bug 74107 and bug 74595.\n\nPDE had a bug in handling case #2 (i.e. linked resources (both output folders \nnd libraries).  Since we can\u0027t make any assumptions on where linked resources \nare coming, we (PDE) started putting the absolute paths to all linked \nresources of a particular plug-in into the dev.properties file.\n\nThis works great for all plug-ins, except for org.eclipse.osgi.  If I recall a \nprevious conversation with Jeff correctly, there is a duplication of code for \nhow to handle -dev in Main and in the runtime code.  So I suspect the absolute \npath case is missing from Main, yet alive and well in the runtime code.",
    "Created an attachment (id\u003d15753)\nfor for Main to handle absolute entries in the -dev classpath\n\nI think the code Wassim is talking about is in DefaultClassLoader#getClassPath.\nThis is a fix for Main. \n\nJeff or who else has commit rights to org.eclipse.platform, please\nreview/release.",
    "Fix released in HEAD and map file updated.",
    "That is service!",
    "*** Bug 78247 has been marked as a duplicate of this bug. ***",
    "*** Bug 78316 has been marked as a duplicate of this bug. ***",
    "I thill have the problem with M4 when I use a 3.0 as target workspace.\nThe workaround is to remove the org.eclipse.osgi plugin from the workspace.",
    "Reopening due to latest comment.  Increasing priority so we don\u0027t lose track of it.",
    "Investigating...",
    "This bug was fixed for M5, so whenever you target previous versions of Eclipse\nyou will end up launching with the old code (that still has the bug). For users\nthat have to do that, the workaround is to not import org.eclipse.osgi into the\nworkspace *as linked folder*. Either not importing, importing as source, or\nimporting as binary project should work.\n\nAs a side note, for most scenarios it is not necessary to import plug-ins from\nthe target platform into the workspace. Debug with source code/Java search\nshould still work.\n\nClosing again as we cannot fix a previous build. Lowering priority since\nworkarounds abound.\u003cg\u003e",
    "M4, I meant M4...",
    "*** Bug 103077 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-11-08T16:11:40+01:00",
    "2004-11-08T18:30:28+01:00",
    "2004-11-08T19:09:36+01:00",
    "2004-11-08T19:52:20+01:00",
    "2004-11-08T20:43:06+01:00",
    "2004-11-08T20:45:53+01:00",
    "2004-11-08T21:01:30+01:00",
    "2004-11-09T16:40:49+01:00",
    "2004-11-09T17:56:08+01:00",
    "2004-11-09T18:39:16+01:00",
    "2004-11-09T19:22:56+01:00",
    "2004-11-09T19:27:50+01:00",
    "2004-11-10T14:07:32+01:00",
    "2004-11-10T18:01:03+01:00",
    "2004-12-23T22:07:42+01:00",
    "2005-01-04T16:25:29+01:00",
    "2005-02-25T20:05:59+01:00",
    "2005-02-25T20:27:01+01:00",
    "2005-02-25T20:29:09+01:00",
    "2005-07-14T22:13:08+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.MalformedURLException",
      "message": "unknown protocol: e",
      "elements": [
        {
          "method": "java.net.URL.\u003cinit\u003e",
          "source": "URL.java:544"
        },
        {
          "method": "java.net.URL.\u003cinit\u003e",
          "source": "URL.java:434"
        },
        {
          "method": "org.eclipse.core.launcher.Main.addDevEntries",
          "source": "Main.java:371"
        },
        {
          "method": "org.eclipse.core.launcher.Main.getDevPath",
          "source": "Main.java:284"
        },
        {
          "method": "org.eclipse.core.launcher.Main.getBootPath",
          "source": "Main.java:406"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:174"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78078",
      "date": "2004-11-08T16:11:40+01:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    }
  ],
  "groupId": "78078",
  "bugId": "78078",
  "date": "2004-11-08T16:11:40+01:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "normal"
}