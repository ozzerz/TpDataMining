{
  "comments": [
    "In several Classes that worked in 3.1M2 I got an internal compiler error:\n\n\n\nInternal compiler error java.lang.NoSuchFieldError: receiverType \tat\norg.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType(SingleNameReference.java:633)\n\tat\norg.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:236)\n\tat\norg.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve(FieldDeclaration.java:199)\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:966)\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1034)\n\tat\norg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:280)\n\tat org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:510) \tat\norg.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:335) \tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:209)\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:159)\n\tat\norg.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:49)\n\tat\norg.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:212) \nat\norg.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:140) \nat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:574) \nat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:747) \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:158) \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:192) \tat\norg.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:221) \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:616)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:747) \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:224) \tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:243)\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:272) \nat\norg.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:142) \tat\norg.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:203) \tat\norg.eclipse.core.internal.jobs.Worker.run(Worker.java:66) \n\n\nSettings:\nJava -\u003e Compiler -\u003e Compliance and Classfiles:\nCompiler Compliance Level   1.4\n-\u003e use default compliance settings\n[X] Add variable...\n[X] Add line number...\n[X] Add source file...\n[X] Preserve unused\n[ ] Inline finally\n\n\nI\u0027ve got a nice example that uses only \u0027standard\u0027 classes:\n\n\npackage org.xbto.util;\n\nimport java.io.BufferedWriter;\nimport java.io.PrintWriter;\nimport java.io.Writer;\n\nimport org.apache.log4j.Category;\nimport org.xml.sax.Attributes;\nimport org.xml.sax.Locator;\nimport org.xml.sax.SAXException;\nimport org.xml.sax.SAXParseException;\nimport org.xml.sax.helpers.DefaultHandler;\n\n/**\n * is a subclass of {@link org.xml.sax.helpers.DefaultHandler}that throws\n * Exceptions on errors and ignores Content.\n * @author Gerd Castan\n */\npublic class TestHandler extends DefaultHandler {\n\tprivate static Category cat \u003d Category.getInstance(TestHandler.class);\n\tprivate final PrintWriter printWriter;\n\t/**\n\t * TestHandler without Writer\n\t */\n\tpublic TestHandler() {\n\t\tthis(null);\n\t};\n\n\t/**\n\t * DefaultHandler for tests: writes content to writer and throws\n\t * warnings/errors\n\t * @param writer to write the content to.\n\t */\n\tpublic TestHandler(Writer writer) {\n\t\tif (writer \u003d\u003d null) {\n\t\t\tthis.printWriter \u003d null;\n\t\t} else {\n\t\t\tthis.printWriter \u003d new PrintWriter(new BufferedWriter(writer));\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Receive a Locator object for document events.\n\t *\n\t * @param locator A locator for all SAX document events.\n\t * @see org.xml.sax.ContentHandler#setDocumentLocator\n\t * @see org.xml.sax.Locator\n\t */\n\tpublic void setDocumentLocator (Locator locator) {\n\t\tthis.locator \u003d locator;\n\t}\n\tprivate Locator locator \u003d null;\n\tprivate String getLocatorString () {\n\t\tif (locator \u003d\u003d null) {\n\t\t\treturn \"locator\u003d\u003dnull, probably a problem in the grammar.\";\n\t\t} else {\n\t\t\treturn \"locator: line\u003d\" + locator.getLineNumber() \n\t\t\t       + \", column\u003d\" + locator.getColumnNumber();\n\t\t}\n\t}\n\n\t/**\n\t * @param e\n\t * @see org.xml.sax.ErrorHandler#warning(org.xml.sax.SAXParseException)\n\t * @throws SAXException\n\t */\n\tpublic void warning (SAXParseException e) throws SAXException {\n\t\tcat.warn(getLocatorString(), e);\n\t\tthrow e;\n\t}\n\t/**\n\t * @param e\n\t * @see org.xml.sax.ErrorHandler#error(org.xml.sax.SAXParseException)\n\t * @throws SAXException\n\t */\n\tpublic void error (SAXParseException e) throws SAXException {\n\t\tcat.error(getLocatorString(), e);\n\t\tthrow e;\n\t}\n\t/**\n\t * @param e\n\t * @see org.xml.sax.ErrorHandler#fatalError(org.xml.sax.SAXParseException)\n\t * @throws SAXException\n\t */\n\tpublic void fatalError (SAXParseException e) throws SAXException {\n\t\tcat.fatal(getLocatorString(), e);\n\t\tthrow e;\n\t}\n\n\n\n\t/**\n\t * @param uri the nameSpace\n\t * @param localName The element type name.\n\t * @param qName The qualified element type name.\n\t * @param attributes The specified or defaulted attributes.\n\t * @exception SAXException Any SAX exception, possibly wrapping another\n\t * exception.\n\t * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\njava.lang.String, java.lang.String, org.xml.sax.Attributes)\n\t */\n\tpublic void startElement (String uri, \n\t                          String localName, \n\t                          String qName, \n\t                          Attributes attributes) throws SAXException\t{\n\t\tif (printWriter !\u003d null) {\n\t\t\tif (!lastWasEnd) {\n\t\t\t\tprintWriter.println(\u0027\u003e\u0027);\n\t\t\t} else {\n\t\t\t\tlastWasEnd \u003d false;\n\t\t\t}\n\n\t\t\tprintWriter.print(\u0027\u003c\u0027);\n\t\t\tprintWriter.print(qName);\n\t\t\tif (attributes.getLength() \u003e 0) {\n\t\t\t\tfor (int i \u003d 0; i \u003c attributes.getLength(); i++) {\n\t\t\t\t\tprintWriter.print(\u0027 \u0027);\n\t\t\t\t\tprintWriter.print(attributes.getQName(i));\n\t\t\t\t\tprintWriter.print(\"\u003d\u0027\");\n\t\t\t\t\tprintWriter.print(escape(attributes.getValue(i)));\n\t\t\t\t\tprintWriter.print(\u0027\\\u0027\u0027);\n\t\t\t\t}\n\t\t\t}\n//\t\t\tprintWriter.println(\u0027\u003e\u0027);\n\t\t}\n\t}\n\t\n\t/**\n\t * TODO: needs some refinement\n\t * @param raw\n\t * @return\n\t */\n\tprotected String escape(String raw) {\n\t\tif (null \u003d\u003d raw) {\n\t\t\treturn \"\";\n\t\t}\n\t\tStringBuffer res \u003d new StringBuffer(raw.length());\n\t\tfor (int i\u003d0; i\u003craw.length(); i++) {\n\t\t\tchar key \u003d raw.charAt(i);\n\t\t\tswitch (key) {\n\t\t\t\tcase \u0027\\\u0027\u0027 : res.append(\"\u0026#34;\");\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \u0027\\\"\u0027 : res.append(\"\u0026#39;\");\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tdefault : res.append(key);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res.toString();\n\t}\n\n\tprivate boolean lastWasEnd \u003d true;    \n    \n\t/**\n\t * @param uri the nameSpace\n\t * @param localName The element type name.\n\t * @param qName The qualified element type name.\n\t * @exception SAXException Any SAX exception, possibly wrapping another\n\t * exception.\n\t * @see org.xml.sax.ContentHandler#endElement(java.lang.String,\njava.lang.String, java.lang.String)\n\t */\n\tpublic void endElement (String uri, \n\t                        String localName, \n\t                        String qName)\tthrows SAXException\t{\n\t\tif (printWriter !\u003d null) {\n\t\t\tif (lastWasEnd) {\n\t\t\t\tprintWriter.print(\"\u003c/\");\n\t\t\t\tprintWriter.print(qName);\n\t\t\t\tprintWriter.println(\u0027\u003e\u0027);\n\t\t\t} else {\n\t\t\t\tprintWriter.println(\"/\u003e\");\n\t\t\t\tlastWasEnd \u003d true;\n\t\t\t}\n\t\t}\n\t}\n    \n    \n\t/**\n\t * @param ch The characters.\n\t * @param start The start position in the character array.\n\t * @param length The number of characters to use from the\n\t *               character array.\n\t * @exception SAXException Any SAX exception, possibly wrapping another\n\t * exception.\n\t * @see org.xml.sax.ContentHandler#characters(char[], int, int)\n\t */\n\tpublic void characters (char ch[], int start, int length) throws SAXException {\n\t\tif (printWriter !\u003d null) {\n\t\t\tprintWriter.print(new String(ch, start, length));\n\t\t}\n\t}\n\n\t/**\n\t * @exception SAXException Any SAX exception, possibly wrapping another\n\t * exception.\n\t * @see org.xml.sax.ContentHandler#endDocument()\n\t */\n\tpublic void endDocument () throws SAXException\t{\n\t\tif (printWriter !\u003d null) {\n\t\t\tprintWriter.close();\n\t\t}\n\t}\n\n\t/**\n\t * Receive notification of a processing instruction.\n\t *\n\t * @param target The processing instruction target.\n\t * @param data The processing instruction data, or null if\n\t *             none is supplied.\n\t * @exception SAXException Any SAX exception, possibly wrapping another\n\t * exception.\n\t * @see org.xml.sax.ContentHandler#processingInstruction(java.lang.String,\njava.lang.String)\n\t */\n\tpublic void processingInstruction (String target, String data)\n\tthrows SAXException\t{\n\t\tif (printWriter !\u003d null) {\n\t\t\tprintWriter.print(\"\u003c?\");\n\t\t\tprintWriter.print(target);\n\t\t\tprintWriter.print(\" \");\n\t\t\tprintWriter.print(data);\n\t\t\tprintWriter.println(\"?\u003e\");\n\t\t}\n\t}\n}",
    "Could not reproduce on Windows XP. Might be a problem on Mac. receiverType is a\nfield of NameReference. The superclass of SingleNameReference. So I don\u0027t see\nhow that would be possible.\nDid you install M3 on top of M2?",
    "To answer your question I did...\n\n1) clean all projects again -\u003e same compiler errors\n2) unpacked eclipse again into a new folder (as I did last time)\n3) started new eclipase, selected old workspace, clean all projects\n   -\u003e no compiler errors\n4) nownloaded GEF SDK as I did last time, restart workbench, clean all projects\n   -\u003e no compiler errors\n5) then I shut down this eclipse and startet the one I had the compiler error,\n   cleaned all projects -\u003e no compiler errors.\n\nInstalling a second eclipse the same way as the first one and using the same\nworkspace soved the problem. I don\u0027t understand this.\n\nGerd"
  ],
  "commentCreationDates": [
    "2004-11-06T09:03:49+01:00",
    "2004-11-06T14:54:00+01:00",
    "2004-11-06T19:54:48+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "receiverType",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType",
          "source": "SingleNameReference.java:633"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType",
          "source": "MessageSend.java:236"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.resolve",
          "source": "FieldDeclaration.java:199"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:966"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:1034"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve",
          "source": "CompilationUnitDeclaration.java:280"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:510"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:335"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:209"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:159"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build",
          "source": "BatchImageBuilder.java:49"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll",
          "source": "JavaBuilder.java:212"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:140"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:574"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:616"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:747"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:158"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:192"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:221"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:616"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:747"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:224"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:243"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:272"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:142"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:203"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78012",
      "date": "2004-11-06T09:03:49+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "critical"
    }
  ],
  "groupId": "78012",
  "bugId": "78012",
  "date": "2004-11-06T09:03:49+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "critical"
}