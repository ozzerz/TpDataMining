{
  "comments": [
    "Build 20020321\n\nI have a class Foo which subclasses an abstract class Bar.  Foo doesn\u0027t \nimplement all of the abstract methods in Bar, so there are some compilation \nproblems.\n\nI tried to run the class on the knowledge that the unimplemented methods \nweren\u0027t used.  I had expected that the compiler would stub in those methods \nwith implementations which threw an Error with an Unresolved compilation \nproblem, or to allow the VM to catch the problems (AbstractMethodError).\n\nHowever, the compiler seems to throw the error in the class\u0027 constructor!  This \nprevents me from using the class at all, even though the methods are not used.\n\nI believe that the compiler should still allow me to use this class.",
    "This looks like a duplicate of 3179 which has been fixed in the build 20020326. I I tried the \nfollowing test case:\n\npublic abstract class Bar {\n\t\n\tabstract void \nfoo();\n\n}\n\npublic class Foo extends Bar {\n\n\tpublic static void main(String[] args) \n{\n\t\tFoo foo \u003d new Foo();\n\t\tSystem.out.println(foo);\n\t\tfoo.foo();\n\t}\n}\n\nIf I \ncomment out the line foo.foo(); I can successfully run the code. If I leave the code as is, I \ngot:\njava.lang.Error: Unresolved compilation problem: \n\tClass must implement the \ninherited abstract method Bar.foo()\n\n\tat \nsun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat \nsun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat \nsun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat \njava.lang.reflect.Constructor.newInstance(Constructor.java:274)\n\tat \nFoo.foo(Foo.java:9)\n\tat Foo.main(Foo.java:14)\nException in thread \"main\" \n\nSo this \nseems to be fixed.\nClosed.\n\n*** This bug has been marked as a duplicate of 3179 ***"
  ],
  "commentCreationDates": [
    "2002-04-04T17:41:45+02:00",
    "2002-04-04T17:52:24+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Error",
      "message": "Unresolved compilation problem:   Class must implement the  inherited abstract method Bar.foo()",
      "elements": [
        {
          "method": "sun.reflect.NativeConstructorAccessorImpl.newInstance0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeConstructorAccessorImpl.newInstance",
          "source": "NativeConstructorAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingConstructorAccessorImpl.newInstance",
          "source": "DelegatingConstructorAccessorImpl.java:27"
        },
        {
          "method": "java.lang.reflect.Constructor.newInstance",
          "source": "Constructor.java:274"
        },
        {
          "method": "Foo.foo",
          "source": "Foo.java:9"
        },
        {
          "method": "Foo.main",
          "source": "Foo.java:14"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "12809",
      "duplicateId": "3179",
      "date": "2002-04-04T17:52:24+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "3179",
  "bugId": "12809",
  "duplicateId": "3179",
  "date": "2002-04-04T17:41:45+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}