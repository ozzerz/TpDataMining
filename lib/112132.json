{
  "comments": [
    "I have 2 plugins, CORE and UI.\n\nThe UI plugin has a dependency on CORE.  I\u0027ve experimented with packaging both \nplugins as both JARs and Folders.\n\nCORE plugin is packaged as CORE_1.0.0.jar and contains an internal CORE.JAR \nalso referenced as Bundle-Classpath in MANIFEST.mf.  Core has only base \nEclipse dependencies.\n\nUI plugin is packaged as UI_1.0.0.jar and contains an internal UI.JAR also \nreferenced as Bundle-Classpath in MANIFEST.mf.  UI plugin is dependent on CORE \nplugin.\n\n\nWhat I am finding is that when the UI plugin is loaded and activated, any \nreference to a class in CORE throws a Class Not Found Exception.  \n\nI have done some experimentation and determined the following:\n\n1.  If the CORE_1.0.0 plugin is packaged as a folder structure (instead of \nJAR) containing CORE.JAR, the CNFE does NOT occur.\n\n2.  If the CORE_1.0.0 plugin is packaged as a JAR without an internal jar \n(CORE.JAR) but rather a simple set of class files (using classpath\u003d.) , the \nCNFE does NOT occur.\n\n3.  If the CORE_1.0.0 plugin is packaged as a JAR WITH an internal jar \n(CORE.JAR) with a MANFEST.MF Bundle-Classpath: CORE.JAR, the UI Plugin cannot \nload any classes from CORE.JAR and the CNFE occurs.\n\nI can find no documentation on any restrictions of packaging a plugin with \nnested JARs and in fact, the Eclipse 3.2 org.eclipse.platform.doc.isv plugin \nappears to contain an internal jar.  My assuption at this time is that this is \nan OSGI Bundle Loader issue.\n\nHere\u0027s an example partial stack trace showing the exception.\n\norg.eclipse.debug.core.DebugException[1]: java.lang.ClassNotFoundException: \ncom.intervoice.sdn.debug.core.scxml.breakpoints.SCXMLLineBreakpoint\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:403)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:350)\n\tat \norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass\n(AbstractClassLoader.java:78)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass\n(BundleLoader.java:275)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass\n(BundleHost.java:227)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass\n(AbstractBundle.java:1259)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:152)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:142)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:129)\n\tat \norg.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableE\nxtension(ConfigurationElementHandle.java:48)",
    "Option 2 is the recommended form for plug-ins going forward (3.1 and on).\nOption 1 is the 3.0 form for plug-ins and before (It is still supported in 3.1).\nOption 3 works but it is less optimal since at runtime the inner jar has to be\nextracted.\n\nI\u0027m suprised by the problem you get, please attach a test case as it is working\nfor me.",
    "(In reply to comment #1)\n\u003e Option 2 is the recommended form for plug-ins going forward (3.1 and on).\n\u003e Option 1 is the 3.0 form for plug-ins and before (It is still supported in \n3.1).\n\u003e Option 3 works but it is less optimal since at runtime the inner jar has to \nbe\n\u003e extracted.\n\u003e I\u0027m suprised by the problem you get, please attach a test case as it is \nworking\n\u003e for me.\n\nI\u0027m surprised as well.  I took a simple Hello World Plugin and could reproduce \neach and every time last Friday.  However, today, I\u0027m having difficulty doing \nso.  I\u0027m going to keep trying but as of now, I have Case #3 working.  \nBasically, there\u0027s nothing in my PDE environment that changed from the failed \ncase to the working case.  I\u0027m still doing some more research and will attach \na project when I can reproduce.  I\u0027m going to try a new workspace to see if I \ncan reproduce.",
    "In any event, structure 3 is less than optimal as Eclipse is going to have to \nextract CORE.JAR before it can run. The takes time and disk space.",
    "Sorry but I have not been able to reproduce. Please reopen with a test case.",
    "Pascal,\n\nAfter much time and testing, I finally figured out what was causing the issue.  The issue was caused because my plugin internal content was changing but the version number was not.  As a result, the new plugin was not being unbundled by OSGI.  During Debug, we were not clearing the runtime workspace and during runtime, after installing new plug-in update, we were not running eclipse -clean.  \n\nThis issue could have been resolved very easily by bumping the version number of the plugin.  \n\nThanks for looking into this."
  ],
  "commentCreationDates": [
    "2005-10-10T21:45:40+02:00",
    "2005-10-11T15:58:04+02:00",
    "2005-10-11T21:55:08+02:00",
    "2005-10-20T03:34:41+02:00",
    "2006-03-22T21:15:09+01:00",
    "2006-03-22T21:27:12+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "com.intervoice.sdn.debug.core.scxml.breakpoints.SCXMLLineBreakpoint",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:403"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:78"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:275"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1259"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:152"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:142"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:129"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:48"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "112132",
      "date": "2005-10-10T21:45:40+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "critical"
    }
  ],
  "groupId": "112132",
  "bugId": "112132",
  "date": "2005-10-10T21:45:40+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "critical"
}