{
  "comments": [
    "This is a regression caused by the fix to bug 67211. Currently, we are\nswallowing IOExceptions thrown while a describer reads the stream. That was done\nbefore, when we used to read a block of bytes right at the beginning, to avoid\nnon low-level IOExceptions (such as for bad encoding) causing the content type\ndetermination to fail. Now, we read lazily, so we may end up facing real\nlow-level IOExceptions later.\n\nA fix would be to throw a specialized IOException from LazyReader/InputStream\nwrapping the original IOException, and rethrow the inner exception. This way it\nwould be able to easily understand which exceptions are interesting and which\nones are not.",
    "Fixed. Test case added. Released to HEAD.",
    "The fix actually implemented (in the context of bug 62443) for this bug was:\nIOExceptions are always let go by the content description framework,\nXMLRootElementContentDescriber (which uses a SAX parser) swallows IOExceptions\nrelated to bad encodings (subclasses of CharConversionException), letting other\nIOExceptions flow to the caller, interrupting the content description loop.\n\nThis does not always work because there is no official single encoding-related\nIOException class. For instance, Xerces on latest IBM VM will throw a bare\nIOException if the following string is to be parsed:\n\n\u003c?xml version\u003d\u00271.0\u0027 encoding\u003d\u0027us-ascii\u0027?\u003e\n\u003c!-- ????? --\u003e\n\u003corg.eclipse.core.runtime.tests.root/\u003e\n\nWhen running with the mentioned VM, the test case added for this bug fails with\nthe following (root) exception:\n\njava.io.IOException: Byte \"225\" is not a member of the (7-bit) ASCII character set.\n\tat org.apache.xerces.impl.io.ASCIIReader.read(Unknown Source)\n\tat org.apache.xerces.impl.XMLEntityScanner.load(Unknown Source)\n\tat org.apache.xerces.impl.XMLEntityScanner.skipSpaces(Unknown Source)\n\tat\norg.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher.dispatch(Unknown\nSource)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown\nSource)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat javax.xml.parsers.SAXParser.parse(Unknown Source)\n\tat\norg.eclipse.core.internal.content.XMLRootHandler.parseContents(XMLRootHandler.java:176)\n\tat\norg.eclipse.core.runtime.content.XMLRootElementContentDescriber.checkCriteria(XMLRootElementContentDescriber.java)\n\tat\norg.eclipse.core.runtime.content.XMLRootElementContentDescriber.describe(XMLRootElementContentDescriber.java:114)\n\tat org.eclipse.core.internal.content.ContentType.describe(ContentType.java:189)\n\tat\norg.eclipse.core.internal.content.ContentTypeManager.internalFindContentTypesFor(ContentTypeManager.java:288)\n\tat\norg.eclipse.core.internal.content.ContentTypeManager.findContentTypesFor(ContentTypeManager.java:172)\n\tat\norg.eclipse.core.tests.runtime.content.IContentTypeManagerTest.testIOException(IContentTypeManagerTest.java)\n...\n\nIt seems the best way of reliably telling real IOExceptions apart from high\nlevel IOExceptions is to do something along the lines of what was originally\nsuggested in this bug\u0027s description.",
    "Fixed again, by using a special LowLevelIOException wrapper that allows us to\ntell apart exceptions generated by the stream a LazyInputStream/Reader reads\nfrom, from those generated by streams / readers reading from our streams."
  ],
  "commentCreationDates": [
    "2004-06-18T18:16:20+02:00",
    "2004-07-12T19:48:32+02:00",
    "2004-09-21T00:38:23+02:00",
    "2004-10-05T22:33:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "Byte \"225\" is not a member of the (7-bit) ASCII character set.",
      "elements": [
        {
          "method": "org.apache.xerces.impl.io.ASCIIReader.read",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLEntityScanner.load",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLEntityScanner.skipSpaces",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher.dispatch",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XMLParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.content.XMLRootHandler.parseContents",
          "source": "XMLRootHandler.java:176"
        },
        {
          "method": "org.eclipse.core.runtime.content.XMLRootElementContentDescriber.checkCriteria",
          "source": "XMLRootElementContentDescriber.java"
        },
        {
          "method": "org.eclipse.core.runtime.content.XMLRootElementContentDescriber.describe",
          "source": "XMLRootElementContentDescriber.java:114"
        },
        {
          "method": "org.eclipse.core.internal.content.ContentType.describe",
          "source": "ContentType.java:189"
        },
        {
          "method": "org.eclipse.core.internal.content.ContentTypeManager.internalFindContentTypesFor",
          "source": "ContentTypeManager.java:288"
        },
        {
          "method": "org.eclipse.core.internal.content.ContentTypeManager.findContentTypesFor",
          "source": "ContentTypeManager.java:172"
        },
        {
          "method": "org.eclipse.core.tests.runtime.content.IContentTypeManagerTest.testIOException",
          "source": "IContentTypeManagerTest.java"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "67841",
      "date": "2004-09-21T00:38:23+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "67841",
  "bugId": "67841",
  "date": "2004-06-18T18:16:20+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}