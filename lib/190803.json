{
  "comments": [
    "+++ This bug was initially created as a clone of Bug #190013 +++\n\nWhen trying to reproduce bug #190013, I did this:\n* connected to a Solaris dstore-unix server (szg-anar, Running).\n* Selected file \"hostname.txt file in the \"My Home\" folder (/folk/mober).\n* Choose Right-click \u003e Move.\n  --\u003e Move to: Dialog was shown\n* In the Move to: dialog, I went down to the \"Root\" folder and expanded\n  /folk/ which resulted in a very long-running operation (Showing \"Pending...\")\n* While still pending, I tried to also expand \"My Home\"/aatmp\n  which also showed Pending\n* After a while, cancel the \"Move To\" dialog. Go to the Eclpise Progress view.\n  Cancel job \"RSE Subsystem Operation: Expand /folk\"\n  --\u003e Get the exception below printed to stdout:\n* Select \"My Home\"/hostname.txt\" again, right-click \u003e Move To\n  --\u003e Eclipse freezes with sandclock (unusable) for about 4 minutes\n  --\u003e After that, \"Move To\" dialog is shown but \"My Home\" is not expandable\n      (there is no + sign below it)\n* Choosing \"Refresh\" on the \"My HOme\" item in the move to dialog starts another\n  VERY slow job -- perhaps it\u0027s trying to refresh too many parents? In which\n  case this might be a duplicate of bug #188160.\n\nHere is the InterruptedException printed:\n\n\njava.lang.InterruptedException\n\tat org.eclipse.rse.services.dstore.util.DStoreStatusMonitor.waitForUpdate(DStoreStatusMonitor.java:343)\n\tat org.eclipse.rse.services.dstore.util.DStoreStatusMonitor.waitForUpdate(DStoreStatusMonitor.java:249)\n\tat org.eclipse.rse.services.dstore.AbstractDStoreService.dsQueryCommand(AbstractDStoreService.java:88)\n\tat org.eclipse.rse.internal.services.dstore.files.DStoreFileService.fetch(DStoreFileService.java:1231)\n\tat org.eclipse.rse.internal.services.dstore.files.DStoreFileService.getFilesAndFolders(DStoreFileService.java:1177)\n\tat org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.getFilesAndFolders(FileServiceSubSystem.java:293)\n\tat org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.listFoldersAndFiles(FileServiceSubSystem.java:331)\n\tat org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.listFoldersAndFiles(RemoteFileSubSystem.java:948)\n\tat org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.internalResolveOneFilterString(RemoteFileSubSystem.java:841)\n\tat org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.internalResolveFilterString(RemoteFileSubSystem.java:782)\n\tat org.eclipse.rse.core.subsystems.SubSystem.resolveFilterString(SubSystem.java:2153)\n\tat org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.internalGetChildren(SystemViewRemoteFileAdapter.java:692)\n\tat org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.getChildren(SystemViewRemoteFileAdapter.java:567)\n\tat org.eclipse.rse.ui.operations.SystemFetchOperation.execute(SystemFetchOperation.java:236)\n\tat org.eclipse.rse.ui.operations.SystemFetchOperation.run(SystemFetchOperation.java:109)\n\tat org.eclipse.rse.ui.view.AbstractSystemViewAdapter.fetchDeferredChildren(AbstractSystemViewAdapter.java:1968)\n\tat org.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:196)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",
    "Eventually, the Refresh job for \"My Home\" returns but the My Home filter still has no children (no + icon shown). This makes dstore totally unusable for me.",
    "On the Server side, no exceptions are printed, but also in the SystemView, a refresh on \"My Home\" is now unresponsive.",
    "Discussed in committer meeting 5-jun-2007:\n\nProblem is that the dstore server is still busy running listFiles() query.\nIt\u0027s running in the same thread as all threads of the file system miner.\n\nMaking it cancelable is straightforward (we actually do it for other queries): java.io.listFiles() would need to run in a separate Thread and respond to dstore cancellation messages.\n\nWould need to add a new command for the miner, no change to dstore protocol or API. Unsure if doing this would lead to any performance issues with regular queries. \n\nAssigning RC3 in order to take out the \"InterruptedException\" printout; investigate but potentially defer to 2.0.1. Potentially reduce severity since it\u0027s dstore only.",
    "Created an attachment (id\u003d70494)\npatch to not print stack traces\n\nfirst part of this is to not show the stack traces",
    "Please review the patch for not printing the exception. ",
    "I\u0027m OK with catching away InterruptedException without logging it. \nBut other Exception cought should be logged.\nTherefore, at least the first two occurrences in the patch should be changed.\n\nSecond, I\u0027m wondering if there is any case where we have a progress monitor (that\u0027s probably not directly related to the InterruptedException) that we should set canceled:\n   monitor.setCanceled()\n\nThird, there is a problem with not being able to tell InterruptedException from operation cancellation. This will be addressed in the future through bug #190750. Therefore, I recommend the following for now: For the InterruptedException, please remove the commented-out stacktrace print and replace it by a comment e.g.\n  //InterruptedException is used to report user cancellation, so no need to log\n  //This should be reviewed (use OperationCanceledException) with bug #190750\n",
    "Created an attachment (id\u003d70695)\nupdated patch according to Martin\u0027s comments\n\n",
    "(In reply to comment #6)\n\u003e I\u0027m OK with catching away InterruptedException without logging it. \n\u003e But other Exception cought should be logged.\n\u003e Therefore, at least the first two occurrences in the patch should be changed.\n\nIt turns out that those first two occurrences can only be InterruptedExceptions as well, so I\u0027ve changed the catch to reflect that in my patch.\n\n\u003e \n\u003e Second, I\u0027m wondering if there is any case where we have a progress monitor\n\u003e (that\u0027s probably not directly related to the InterruptedException) that we\n\u003e should set canceled:\n\u003e    monitor.setCanceled()\n\u003e \n\nMy new patch takes care of that if the monitor has not yet been canceled.\n\n\u003e Third, there is a problem with not being able to tell InterruptedException from\n\u003e operation cancellation. This will be addressed in the future through bug\n\u003e #190750. Therefore, I recommend the following for now: For the\n\u003e InterruptedException, please remove the commented-out stacktrace print and\n\u003e replace it by a comment e.g.\n\u003e   //InterruptedException is used to report user cancellation, so no need to log\n\u003e   //This should be reviewed (use OperationCanceledException) with bug #190750\n\u003e \n\nI\u0027ve updated the catch statements with your suggestion.  Please review this again, thanks.",
    "Hm... patch looks better now, but when I browse from DStoreFileService into DownloadListener.waitForUpdate(0), I see that the code contradicts what you write in the comment:\n\nThis method returns when the user canceled, but throws an InterruptedException when the network is down. I\u0027m wondering if we shouldn\u0027t treat the \"Network Down\" situation differently.\n\nI\u0027m basically OK with applying the patch now since it doesn\u0027t seem to do harm to the codebase and improve the situation. But PLEASE review the docs to have them consistent with what the code does. Also, the docs \"what\u0027s being done\" should be BEFORE the \"thing that\u0027s done\" and not after it. \n\nYou can make these changes through a separate bug that you file (e.g. \"Review Documentation around DownloadStatusListener.waitForUpdate()\") or try doing it right away through this bug. \n\nSince I\u0027m asking for Doc changes only from here on, I\u0027m approving the patch.",
    "I\u0027ve applied the patch for the interrupted exception.  I\u0027ve lowered the priority of this defect and moved it\u0027s milestone to 2.0.1 to deal with the cancellation.  For the canceled vs network down stuff, I think I\u0027ll take care of this later in 2.0.1 since network down doesn\u0027t appear to be used right now and I may put the code for issuing the dstore cancel command in status monitor class.  The comments in the catch interrupted exception code are there to indicate why we\u0027re not logging anything, and are separate from the supplementary monitor.cancellation code.\n",
    "Support for cancellation of query commands are now supported for dstore files.  For other operations, such as delete, rename, etc, we\u0027ll need to handle on a case-by-case basis.  For the particular problem reported by Martin, the issue isn\u0027t resolved by the cancel, since the more likely problem is that the query was successful but the volume of file info that is transferred back was so large that there appeared to be a hang.  Since the cancellation support is now here, I\u0027ll mark this as fixed.",
    "Having cancellation support in RSE 2.0.1, what will happen if a 2.0.1 client operates against a 2.0 server? Or a 2.0 client against a 2.0.1 server? Could there be any issues that need to be looked at?",
    "(In reply to comment #12)\n\u003e Having cancellation support in RSE 2.0.1, what will happen if a 2.0.1 client\n\u003e operates against a 2.0 server? Or a 2.0 client against a 2.0.1 server? Could\n\u003e there be any issues that need to be looked at?\n\u003e \n\nIf a 2.0.1 client operates against a 2.0 server, when the user clicks cancel, the datastore status monitor looks for the cancel command to send to the host but can\u0027t find it, since, on the 2.0 server, the schema for file commands aren\u0027t described as allowing cancel.  Since no cancel command is found, no cancel command is issued and the behaviour remains as it did in 2.0.   \n\nIf a 2.0 client operations against a 2.0.1 server, when the user clicks cancel, the client does not attempt to send a cancel to the host.  The behaviour remains the same as it did in 2.0.\n\n"
  ],
  "commentCreationDates": [
    "2007-06-04T15:28:37+02:00",
    "2007-06-04T15:31:31+02:00",
    "2007-06-04T15:32:27+02:00",
    "2007-06-05T17:38:37+02:00",
    "2007-06-07T15:13:08+02:00",
    "2007-06-07T22:52:57+02:00",
    "2007-06-08T07:27:28+02:00",
    "2007-06-08T17:02:35+02:00",
    "2007-06-08T17:06:14+02:00",
    "2007-06-11T15:43:58+02:00",
    "2007-06-11T16:13:05+02:00",
    "2007-07-09T20:13:09+02:00",
    "2007-07-10T13:13:37+02:00",
    "2007-07-10T15:03:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.InterruptedException",
      "elements": [
        {
          "method": "org.eclipse.rse.services.dstore.util.DStoreStatusMonitor.waitForUpdate",
          "source": "DStoreStatusMonitor.java:343"
        },
        {
          "method": "org.eclipse.rse.services.dstore.util.DStoreStatusMonitor.waitForUpdate",
          "source": "DStoreStatusMonitor.java:249"
        },
        {
          "method": "org.eclipse.rse.services.dstore.AbstractDStoreService.dsQueryCommand",
          "source": "AbstractDStoreService.java:88"
        },
        {
          "method": "org.eclipse.rse.internal.services.dstore.files.DStoreFileService.fetch",
          "source": "DStoreFileService.java:1231"
        },
        {
          "method": "org.eclipse.rse.internal.services.dstore.files.DStoreFileService.getFilesAndFolders",
          "source": "DStoreFileService.java:1177"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.getFilesAndFolders",
          "source": "FileServiceSubSystem.java:293"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.listFoldersAndFiles",
          "source": "FileServiceSubSystem.java:331"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.listFoldersAndFiles",
          "source": "RemoteFileSubSystem.java:948"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.internalResolveOneFilterString",
          "source": "RemoteFileSubSystem.java:841"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.internalResolveFilterString",
          "source": "RemoteFileSubSystem.java:782"
        },
        {
          "method": "org.eclipse.rse.core.subsystems.SubSystem.resolveFilterString",
          "source": "SubSystem.java:2153"
        },
        {
          "method": "org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.internalGetChildren",
          "source": "SystemViewRemoteFileAdapter.java:692"
        },
        {
          "method": "org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.getChildren",
          "source": "SystemViewRemoteFileAdapter.java:567"
        },
        {
          "method": "org.eclipse.rse.ui.operations.SystemFetchOperation.execute",
          "source": "SystemFetchOperation.java:236"
        },
        {
          "method": "org.eclipse.rse.ui.operations.SystemFetchOperation.run",
          "source": "SystemFetchOperation.java:109"
        },
        {
          "method": "org.eclipse.rse.ui.view.AbstractSystemViewAdapter.fetchDeferredChildren",
          "source": "AbstractSystemViewAdapter.java:1968"
        },
        {
          "method": "org.eclipse.ui.progress.DeferredTreeContentManager$1.run",
          "source": "DeferredTreeContentManager.java:196"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "190803",
      "date": "2007-06-04T15:28:37+02:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    }
  ],
  "groupId": "190803",
  "bugId": "190803",
  "date": "2007-06-04T15:28:37+02:00",
  "product": "Target Management",
  "component": "RSE",
  "severity": "normal"
}