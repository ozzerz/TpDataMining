{
  "comments": [
    "java.lang.ClassCastException\nat org.aspectj.weaver.bcel.BcelClassWeaver.checkForOverride\n(BcelClassWeaver.java:607)\nat org.aspectj.weaver.bcel.BcelClassWeaver.calculateAnyRequiredBridgeMethods\n(BcelClassWeaver.java:676)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1537)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1485)\nat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1266)\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1088)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave\n(AjCompilerAdapter.java:300)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling\n(AjCompilerAdapter.java:178)\nat \norg.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspect\nj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation\n(AjBuildManager.java:809)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:254)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild\n(AjBuildManager.java:163)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:191)\n\ntrouble in: \npublic class ts.simul.client.AbstractClient$OptionSetter extends \nts.util.CmdLineProgram$OptionSetterBase:\n  final ts.simul.client.AbstractClient this$0\n  private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0\n  public void \u003cinit\u003e(ts.simul.client.AbstractClient)    \norg.aspectj.weaver.MethodDeclarationLineNumber: 59:1411\n:\n                    ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 60)\n                    ALOAD_1\n                    PUTFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n                    ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 59)\n                    ALOAD_1\n                    INVOKESPECIAL \nts.util.CmdLineProgram$OptionSetterBase.\u003cinit\u003e (Lts/util/CmdLineProgram;)V\n    constructor-execution(void \nts.simul.client.AbstractClient$OptionSetter.\u003cinit\u003e\n(ts.simul.client.AbstractClient))\n    |               RETURN\n    constructor-execution(void \nts.simul.client.AbstractClient$OptionSetter.\u003cinit\u003e\n(ts.simul.client.AbstractClient))\n  end public void \u003cinit\u003e(ts.simul.client.AbstractClient)\n\n  public boolean setOption_file(String) throws \nts.util.IllegalProgramArgumentException    \norg.aspectj.weaver.MethodDeclarationLineNumber: 62:1469\n:\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_file(java.lang.String))\n    |               ALOAD_1     // java.lang.String optParam   (line 65)\n    | method-call(int java.lang.String.length())\n    | |             INVOKEVIRTUAL java.lang.String.length ()I\n    | method-call(int java.lang.String.length())\n    |               IFLE L1\n    |               ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 66)\n    |               GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    |               ALOAD_1     // java.lang.String optParam\n    |               PUTFIELD ts.simul.client.AbstractClient.fileName \nLjava/lang/String;\n    |               NEW java.io.File   (line 67)\n    |               DUP\n    |               ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis\n    |               GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    |               GETFIELD ts.simul.client.AbstractClient.fileName \nLjava/lang/String;\n    | constructor-call(void java.io.File.\u003cinit\u003e(java.lang.String))\n    | |             INVOKESPECIAL java.io.File.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void java.io.File.\u003cinit\u003e(java.lang.String))\n    |               ASTORE_2\n    |               ALOAD_2     // java.io.File file   (line 68)\n    | method-call(boolean java.io.File.exists())\n    | |             INVOKEVIRTUAL java.io.File.exists ()Z\n    | method-call(boolean java.io.File.exists())\n    |               IFNE L0\n    |               NEW ts.util.IllegalProgramArgumentException   (line 69)\n    |               DUP\n    |               NEW java.lang.StringBuilder\n    |               DUP\n    |               LDC \"Cannot find file: [\"\n    | constructor-call(void java.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n    | |             INVOKESPECIAL java.lang.StringBuilder.\u003cinit\u003e \n(Ljava/lang/String;)V\n    | constructor-call(void java.lang.StringBuilder.\u003cinit\u003e(java.lang.String))\n    |               ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis\n    |               GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    |               GETFIELD ts.simul.client.AbstractClient.fileName \nLjava/lang/String;\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append\n(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.append \n(Ljava/lang/String;)Ljava/lang/StringBuilder;\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append\n(java.lang.String))\n    |               LDC \"]\"\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append\n(java.lang.String))\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.append \n(Ljava/lang/String;)Ljava/lang/StringBuilder;\n    | method-call(java.lang.StringBuilder java.lang.StringBuilder.append\n(java.lang.String))\n    | method-call(java.lang.String java.lang.StringBuilder.toString())\n    | |             INVOKEVIRTUAL java.lang.StringBuilder.toString ()\nLjava/lang/String;\n    | method-call(java.lang.String java.lang.StringBuilder.toString())\n    | constructor-call(void ts.util.IllegalProgramArgumentException.\u003cinit\u003e\n(java.lang.String))\n    | |             INVOKESPECIAL \nts.util.IllegalProgramArgumentException.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void ts.util.IllegalProgramArgumentException.\u003cinit\u003e\n(java.lang.String))\n    |               ATHROW\n    |           L0: ICONST_1   (line 70)\n    |               IRETURN\n    |           L1: ICONST_0   (line 73)\n    |               IRETURN\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_file(java.lang.String))\n  end public boolean setOption_file(String) throws \nts.util.IllegalProgramArgumentException\n\n  public boolean setOption_class(String) throws \nts.util.IllegalProgramArgumentException    \norg.aspectj.weaver.MethodDeclarationLineNumber: 76:1971\n:\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_class(java.lang.String))\n    |               ALOAD_1     // java.lang.String optParam   (line 79)\n    | method-call(int java.lang.String.length())\n    | |             INVOKEVIRTUAL java.lang.String.length ()I\n    | method-call(int java.lang.String.length())\n    |               IFLE L1\n    |               ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 80)\n    |               GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    |               ALOAD_1     // java.lang.String optParam\n    |               PUTFIELD ts.simul.client.AbstractClient.className \nLjava/lang/String;\n    | catch ts.simul.SimulationException -\u003e E0\n    | |             ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 82)\n    | |             GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    | |             ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis\n    | |             GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    | |             GETFIELD ts.simul.client.AbstractClient.className \nLjava/lang/String;\n    | | method-call(java.lang.Class ts.simul.SceneFactory.getSceneClass\n(java.lang.String))\n    | | |           INVOKESTATIC ts.simul.SceneFactory.getSceneClass \n(Ljava/lang/String;)Ljava/lang/Class;\n    | | method-call(java.lang.Class ts.simul.SceneFactory.getSceneClass\n(java.lang.String))\n    | |             PUTFIELD ts.simul.client.AbstractClient.sceneClass \nLjava/lang/Class;\n    | |             ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 83)\n    | |             GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    | | method-call(void ts.simul.client.AbstractClient.setBeanInfoSearchPath())\n    | | |           INVOKESTATIC ts.simul.Architecture.aspectOf ()\nLts/simul/Architecture;\n    | | |           GETSTATIC \nts.simul.client.AbstractClient$OptionSetter.ajc$tjp_0 \nLorg/aspectj/lang/JoinPoint$StaticPart;\n    | | |           INVOKEVIRTUAL \nts.simul.Architecture.ajc$before$ts_simul_Architecture$1$ae285a4d \n(Lorg/aspectj/lang/JoinPoint$StaticPart;)V\n    | | |           INVOKEVIRTUAL \nts.simul.client.AbstractClient.setBeanInfoSearchPath ()V\n    | | method-call(void ts.simul.client.AbstractClient.setBeanInfoSearchPath())\n    | |             GOTO L0\n    | catch ts.simul.SimulationException -\u003e E0\n    |           E0: ASTORE_2   (line 85)\n    |               NEW ts.util.IllegalProgramArgumentException   (line 86)\n    |               DUP\n    |               ALOAD_2     // ts.simul.SimulationException e\n    | method-call(java.lang.String ts.simul.SimulationException.getMessage())\n    | |             INVOKEVIRTUAL ts.simul.SimulationException.getMessage ()\nLjava/lang/String;\n    | method-call(java.lang.String ts.simul.SimulationException.getMessage())\n    | constructor-call(void ts.util.IllegalProgramArgumentException.\u003cinit\u003e\n(java.lang.String))\n    | |             INVOKESPECIAL \nts.util.IllegalProgramArgumentException.\u003cinit\u003e (Ljava/lang/String;)V\n    | constructor-call(void ts.util.IllegalProgramArgumentException.\u003cinit\u003e\n(java.lang.String))\n    |               ATHROW\n    |           L0: ICONST_1   (line 88)\n    |               IRETURN\n    |           L1: ICONST_0   (line 91)\n    |               IRETURN\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_class(java.lang.String))\n  end public boolean setOption_class(String) throws \nts.util.IllegalProgramArgumentException\n\n  public boolean setOption_name(String)    \norg.aspectj.weaver.MethodDeclarationLineNumber: 94:2593\n:\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_name(java.lang.String))\n    |               ALOAD_0     // ts.simul.client.AbstractClient$OptionSetter \nthis   (line 96)\n    |               GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 \nLts/simul/client/AbstractClient;\n    |               ALOAD_1     // java.lang.String optParam\n    |               PUTFIELD ts.simul.client.AbstractClient.sceneName \nLjava/lang/String;\n    |               ICONST_1   (line 97)\n    |               IRETURN\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_name(java.lang.String))\n  end public boolean setOption_name(String)\n\n  public boolean setOption_actors(String)    \norg.aspectj.weaver.MethodDeclarationLineNumber: 100:2739\n:\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_actors(java.lang.String))\n    | catch java.lang.NumberFormatException -\u003e E0\n    | |             ALOAD_1     // java.lang.String optParam   (line 103)\n    | | method-call(int java.lang.Integer.parseInt(java.lang.String))\n    | | |           INVOKESTATIC java.lang.Integer.parseInt (Ljava/lang/String;)\nI\n    | | method-call(int java.lang.Integer.parseInt(java.lang.String))\n    | |             ISTORE_2\n    | |             GOTO L0\n    | catch java.lang.NumberFormatException -\u003e E0\n    |           E0: ASTORE_2     // int n   (line 105)\n    |               ICONST_0   (line 106)\n    |               IRETURN\n    |           L0: ICONST_1   (line 108)\n    |               IRETURN\n    method-execution(boolean \nts.simul.client.AbstractClient$OptionSetter.setOption_actors(java.lang.String))\n  end public boolean setOption_actors(String)\n\nend public class ts.simul.client.AbstractClient$OptionSetter\n\nwhen weaving type ts.simul.client.AbstractClient$OptionSetter\nwhen weaving classes \nwhen weaving \nwhen incrementally building BuildConfig\n[c:\\Projects\\eclipse\\.metadata\\.plugins\\org.eclipse.ajdt.core\\TS.generated.lst] \n#Files\u003d79",
    "Seems the code is expecting a BcelTypeMunger but is encountering an\nEclipseTypeMunger.  I\u0027ve put in a guard - this will fix the ClassCastException.\n Fix checked in - waiting on build.",
    "fix available in latest AspectJ dev build - it will be in AJDT early next week.",
    "It seems that the new version dated 20051122132809 didn\u0027t fix the problem. After having installed the new version (and after having restarted Eclipse) I got exactly the same behavior (exception). \nOr was the fix not yet included in this AJDT build ?\n\nI tried to reproduce the problem on a simple example, but with no effect. The original code where the problem was observed is a part of a relatively large system, so I did not send it. I\u0027m going to continue trying to find a simplified example. ",
    "Important observation: it happens only when incremental compilation is turned on. ",
    "The fix is not in AJDT yet.",
    "Fix is in the latest 1.3 version of AJDT.",
    "Great, with this version (1.3.0.20051125115230) it is fixed !"
  ],
  "commentCreationDates": [
    "2005-11-17T22:09:48+01:00",
    "2005-11-18T09:17:26+01:00",
    "2005-11-18T12:10:24+01:00",
    "2005-11-22T23:46:42+01:00",
    "2005-11-22T23:59:39+01:00",
    "2005-11-23T08:34:56+01:00",
    "2005-11-24T10:35:34+01:00",
    "2005-11-25T23:49:43+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.checkForOverride",
          "source": "BcelClassWeaver.java:607"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.calculateAnyRequiredBridgeMethods",
          "source": "BcelClassWeaver.java:676"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1537"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:1485"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:1266"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1088"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:809"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:254"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:163"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "116949",
      "date": "2005-11-17T22:09:48+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "116949",
  "bugId": "116949",
  "date": "2005-11-17T22:09:48+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}