{
  "comments": [
    "At present the initialization of the constraints in XmlConstraintProvider is not thread-safe. Calling IBatchValidator.validate from two different threads can result in ConcurrentModificationExceptions: \n\njava.util.ConcurrentModificationException\nat java.util.AbstractList$Itr.checkForComodification(AbstractList.java:449)\nat java.util.AbstractList$Itr.next(AbstractList.java:420)\nat org.eclipse.emf.validation.xml.XmlConstraintProvider.getBatchConstraints(XmlConstraintProvider.java:272)\nat org.eclipse.emf.validation.internal.service.GetBatchConstraintsOperation.executeImpl(GetBatchConstraintsOperation.java:56)\nat org.eclipse.emf.validation.internal.service.AbstractGetConstraintsOperation.execute(AbstractGetConstraintsOperation.java:129)\nat org.eclipse.emf.validation.internal.service.ConstraintCache.execute(ConstraintCache.java:284)\nat org.eclipse.emf.validation.internal.service.ConstraintCache.getBatchConstraints(ConstraintCache.java:384)\nat org.eclipse.emf.validation.internal.service.GetBatchConstraintsOperation.executeImpl(GetBatchConstraintsOperation.java:56)\nat org.eclipse.emf.validation.internal.service.AbstractGetConstraintsOperation.execute(AbstractGetConstraintsOperation.java:129)\nat org.eclipse.emf.validation.service.ModelValidationService.execute(ModelValidationService.java:356)\nat org.eclipse.emf.validation.service.ModelValidationService.access$2(ModelValidationService.java:350)\nat org.eclipse.emf.validation.service.ModelValidationService$1.execute(ModelValidationService.java:121)\nat org.eclipse.emf.validation.internal.service.AbstractValidator.execute(AbstractValidator.java:268)\nat org.eclipse.emf.validation.internal.service.BatchValidator.validate(BatchValidator.java:236)\nat org.eclipse.emf.validation.internal.service.BatchValidator.validate(BatchValidator.java:192)\nat org.eclipse.emf.validation.internal.service.BatchValidator.doValidate(BatchValidator.java:137)\nat org.eclipse.emf.validation.internal.service.AbstractValidator.validate(AbstractValidator.java:136)\nat org.eclipse.emf.validation.internal.service.BatchValidator.validate(BatchValidator.java:121)\n\nIt would be nice if the initialization of constraints would be protected from concurrent access.",
    "Fix committed to CVS HEAD (1.2 branch).  ProviderDescriptors now synchronize the lazy initialization of their providers (not  just the XML provider) to ensure a single thread only performs the initialization.",
    "Oops -- wasn\u0027t assigned to me.",
    "Fixed in the EMF VALIDATION 1.2.0 I200712061217 build."
  ],
  "commentCreationDates": [
    "2007-10-29T14:59:17+01:00",
    "2007-12-02T05:23:11+01:00",
    "2007-12-02T05:25:10+01:00",
    "2007-12-06T18:54:27+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.ConcurrentModificationException",
      "elements": [
        {
          "method": "java.util.AbstractList$Itr.checkForComodification",
          "source": "AbstractList.java:449"
        },
        {
          "method": "java.util.AbstractList$Itr.next",
          "source": "AbstractList.java:420"
        },
        {
          "method": "org.eclipse.emf.validation.xml.XmlConstraintProvider.getBatchConstraints",
          "source": "XmlConstraintProvider.java:272"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.GetBatchConstraintsOperation.executeImpl",
          "source": "GetBatchConstraintsOperation.java:56"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.AbstractGetConstraintsOperation.execute",
          "source": "AbstractGetConstraintsOperation.java:129"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.ConstraintCache.execute",
          "source": "ConstraintCache.java:284"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.ConstraintCache.getBatchConstraints",
          "source": "ConstraintCache.java:384"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.GetBatchConstraintsOperation.executeImpl",
          "source": "GetBatchConstraintsOperation.java:56"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.AbstractGetConstraintsOperation.execute",
          "source": "AbstractGetConstraintsOperation.java:129"
        },
        {
          "method": "org.eclipse.emf.validation.service.ModelValidationService.execute",
          "source": "ModelValidationService.java:356"
        },
        {
          "method": "org.eclipse.emf.validation.service.ModelValidationService.access$2",
          "source": "ModelValidationService.java:350"
        },
        {
          "method": "org.eclipse.emf.validation.service.ModelValidationService$1.execute",
          "source": "ModelValidationService.java:121"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.AbstractValidator.execute",
          "source": "AbstractValidator.java:268"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.BatchValidator.validate",
          "source": "BatchValidator.java:236"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.BatchValidator.validate",
          "source": "BatchValidator.java:192"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.BatchValidator.doValidate",
          "source": "BatchValidator.java:137"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.AbstractValidator.validate",
          "source": "AbstractValidator.java:136"
        },
        {
          "method": "org.eclipse.emf.validation.internal.service.BatchValidator.validate",
          "source": "BatchValidator.java:121"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "207780",
      "date": "2007-10-29T14:59:17+01:00",
      "product": "EMF",
      "component": "Validation",
      "severity": "enhancement"
    }
  ],
  "groupId": "207780",
  "bugId": "207780",
  "date": "2007-10-29T14:59:17+01:00",
  "product": "EMF",
  "component": "Validation",
  "severity": "enhancement"
}