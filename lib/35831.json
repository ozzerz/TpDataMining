{
  "comments": [
    "Build id: 200303272130 (Platform binaries + JDT)\nIBM JRE 1.3.1 sr2\n\nI tried to see the implementation of a method called by the class I had open \nin the editor pressing Ctrl while hovering the method identifier, but it \nsimply didn\u0027t work. Tried selecting the identifier and opening declaration \n(through context menu) and did\u0027t work either.\n\nLooks like a duplicate of bug 35731. I cannot reproduce it anymore. \n\nFound dozens of pairs of entries like these in the log file.\n\n!ENTRY org.eclipse.ui 4 4 Mar 28, 2003 13:22:41.361\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Mar 28, 2003 13:22:41.361\n!MESSAGE java.lang.NullPointerException\n!STACK 0\njava.lang.NullPointerException\n\tat java.lang.String.\u003cinit\u003e(String.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage\n(Scope.java(Compiled Code))\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype\n(ClassScope.java:789)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces\n(ClassScope.java:627)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy\n(ClassScope.java:676)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierar\nchy(CompilationUnitScope.java:252)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings\n(LookupEnvironment.java:221)\n\tat org.eclipse.jdt.internal.codeassist.SelectionEngine.select\n(SelectionEngine.java:483)\n\tat org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:155)\n\tat org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:133)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.codeSelect\n(CompilationUnit.java:100)\n\tat \norg.eclipse.jdt.internal.ui.javaeditor.JavaEditor$MouseClickListener.getCurrent\nTextRegion(JavaEditor.java:484)\n\tat \norg.eclipse.jdt.internal.ui.javaeditor.JavaEditor$MouseClickListener.mouseMove\n(JavaEditor.java:706)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent\n(TypedListener.java:140)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:845)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:291)\n\tat org.eclipse.core.launcher.Main.run(Main.java:747)\n\tat org.eclipse.core.launcher.Main.main(Main.java:583)",
    "I could reproduce it with the standard SDK:\n\n1 - open a new workspace with i200303272130\n2 - open CVS repository exploring\n3 - checkout projects: core.resources, core.runtime, core.resources.win32, \ncore.boot and xerces\n4 - close all perspectives\n5 - exit Eclipse\n6 - open Eclipse - Resources perspective will be opened\n7 - using the resource navigator, open \norg.eclipse.core.resources/src/org/eclipse/resources/IProject.java\n8 - holding ctrl while hovering, open declaration for IProgressMonitor\n9 - do the same thing for other type identifiers - eventually identifiers \nwon\u0027t be underlined anymore, and lots of NPEs will occur.",
    "Reproduced.",
    "Can still workaround a little more against the JIT bug:\n\nreplacing\n...\nunitScope.recordReference(currentPackage.compoundName, name);\nBinding binding \u003d currentPackage.getTypeOrPackage(name);\n...\n\nwith the following (2 lines swapped)\n...\nBinding binding \u003d currentPackage.getTypeOrPackage(name);\nunitScope.recordReference(currentPackage.compoundName, name);\n...\n\nmakes it work !? Still the code is equivalent.\n\nReleased change for integration.",
    "Actually, the line swapping doesn\u0027t seem to solve it all the time (!?), but \nmoving the variable declaration right beside the unitScope local declaration \nseems to do the trick.\n\nWhat seems to be the offending pattern is the local declaration next to its \nusage (JIT is likely trying to inline the local value).",
    "Backported to 2.1 maintenance stream.",
    "Fixed in 2.2 stream as well.",
    "*** Bug 36497 has been marked as a duplicate of this bug. ***",
    "*** Bug 37426 has been marked as a duplicate of this bug. ***",
    "Vewrified.",
    "Verified for 3.0M1.",
    "*** Bug 42503 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2003-03-28T18:42:05+01:00",
    "2003-03-28T19:15:26+01:00",
    "2003-03-31T11:18:59+02:00",
    "2003-03-31T11:48:10+02:00",
    "2003-03-31T13:50:52+02:00",
    "2003-04-08T13:29:31+02:00",
    "2003-04-15T16:46:15+02:00",
    "2003-04-18T10:30:24+02:00",
    "2003-05-12T12:21:45+02:00",
    "2003-06-02T16:11:30+02:00",
    "2003-06-10T16:23:44+02:00",
    "2003-09-05T10:14:10+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.lang.String.\u003cinit\u003e",
          "source": "String.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:789"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces",
          "source": "ClassScope.java:627"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:676"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:252"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:221"
        },
        {
          "method": "org.eclipse.jdt.internal.codeassist.SelectionEngine.select",
          "source": "SelectionEngine.java:483"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Openable.codeSelect",
          "source": "Openable.java:155"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Openable.codeSelect",
          "source": "Openable.java:133"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.codeSelect",
          "source": "CompilationUnit.java:100"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$MouseClickListener.getCurrentTextRegion",
          "source": "JavaEditor.java:484"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$MouseClickListener.mouseMove",
          "source": "JavaEditor.java:706"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:140"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1385"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:291"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:747"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:583"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "35831",
      "date": "2003-03-28T18:42:05+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "35831",
  "bugId": "35831",
  "date": "2003-03-28T18:42:05+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}