{
  "comments": [
    "20030206\n\n1. select CUCorrectionProposal.createCompilationUnitChange\n pull up\n\njava.lang.reflect.InvocationTargetException: \njava.lang.StringIndexOutOfBoundsException: String index out of range: 122\n\tat java.lang.String.substring(String.java(Compiled Code))\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextInsert\n(ASTRewriteAnalyzer.java:681)\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteList\n(ASTRewriteAnalyzer.java:531)\n\tat \norg.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList\n(ASTRewriteAnalyzer.java:355)\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit\n(ASTRewriteAnalyzer.java:887)\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0\n(TypeDeclaration.java:154)\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visitList\n(ASTRewriteAnalyzer.java(Compiled Code))\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visitList\n(ASTRewriteAnalyzer.java(Compiled Code))\n\tat \norg.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList\n(ASTRewriteAnalyzer.java:350)\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit\n(ASTRewriteAnalyzer.java:806)\n\tat org.eclipse.jdt.core.dom.CompilationUnit.accept0\n(CompilationUnit.java:155)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))\n\tat org.eclipse.jdt.internal.corext.dom.ASTRewrite.rewriteNode\n(ASTRewrite.java:120)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoring.fillWith\nRewriteEdits(PullUpRefactoring.java:1573)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoring.createCh\nangeManager(PullUpRefactoring.java:1171)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoring.checkInp\nut(PullUpRefactoring.java:688)\n\tat org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run\n(CheckConditionsOperation.java:59)\n\tat org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run\n(CreateChangeOperation.java:94)\n\tat org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run\n(PerformChangeOperation.java:138)\n\tat org.eclipse.jface.operation.ModalContext.runInCurrentThread\n(ModalContext.java:296)\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)\n\tat org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:716)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactorin\ng(PerformRefactoringUtil.java:43)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish\n(RefactoringWizard.java:366)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish\n(UserInputWizardPage.java:113)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.PullUpInputPage2.performFinish\n(PullUpInputPage2.java:373)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish\n(RefactoringWizard.java:429)\n\tat org.eclipse.jface.wizard.WizardDialog.finishPressed\n(WizardDialog.java:570)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog.finishPressed\n(RefactoringWizardDialog.java:73)\n\tat org.eclipse.jface.wizard.WizardDialog.buttonPressed\n(WizardDialog.java:308)\n\tat org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:417)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled \nCode))\n\tat org.eclipse.jface.window.Window.open(Window.java:541)\n\tat \norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate\n(RefactoringStarter.java:59)\n\tat org.eclipse.jdt.ui.actions.PullUpAction.startRefactoring\n(PullUpAction.java:177)\n\tat org.eclipse.jdt.ui.actions.PullUpAction.run(PullUpAction.java:100)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun\n(SelectionDispatchAction.java:191)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.run\n(SelectionDispatchAction.java:169)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:804)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:450)\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat \norg.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent\n(ActionContributionItem.java(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java\n(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1272)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:845)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)",
    "Bug in the code formatter, positiosn retruned are greater than the length of \nthe string.\n\npublic void testBug31289() throws Exception {\n\t// str-len \u003d\u003d 100\n\tString str\u003d \"protected X createCompilationUnitChange(int MISSING,int \nMISSING,int MISSING) throws CoreException {}\");\n\n\tint[] pos\u003d  {10, 10, 40, 50, 52, 62, 64, 74, 98, 99 };\n\n\tICodeFormatter formatter\u003d ToolFactory.createDefaultCodeFormatter(null);\n\tString formatted\u003d formatter.format(str, 1, pos, \"\\r\\n\");\n\t\n\tint len\u003d formatted.length();\n\t\n\tfor (int i\u003d 0; i \u003c pos.length; i++) {\n\t\tassertTrue(pos[i] \u003c len);\n\t}\n}\n\n",
    "*** Bug 30880 has been marked as a duplicate of this bug. ***",
    "I tried your test case.\nWhen you format: \n\tString str\u003d \"protected X createCompilationUnitChange(int MISSING,int \nMISSING,int MISSING) throws CoreException {}\");\n\nI end up with:\n\"protected X createCompilationUnitChange(int MISSING, int MISSING, int MISSING)\n\tthrows CoreException {\n}\"\n\nwhich is 106 character long.\nThe positions are mapped to:\n[10, 10, 40, 50, 53, 63, 66, 76, 102, 105]\n\n98 and 99 are the positions of the \u0027{\u0027 and \u0027}\u0027 in the original source. They are\nmapped to 102 and 105 which are the corresponding positions in the formatted source.\n\nSo I see no problem. Let me know what are your settings for the formatter. I\nmight not test the same thing.\n\nLet me know what are the mapped positions you get and the formatted string.\n",
    "Without further information, I cannot fix it. What I get looks ok to me.",
    "public class DeclTest extends TestCase {\n\tpublic DeclTest(String name) {\n\t\tsuper(name);\n\t}\n\tpublic static Test suite() {\n\t\treturn new DeclTest(\"testBug31289\");\n\t}\n\tpublic void testBug31289() throws Exception {\n\t\tHashtable options\u003d JavaCore.getDefaultOptions();\n\t\toptions.put(JavaCore.FORMATTER_TAB_CHAR, JavaCore.SPACE);\n\t\toptions.put(JavaCore.FORMATTER_TAB_SIZE, \"4\");\n\t\tJavaCore.setOptions(options);\t\t\t\t\n\t\t\n\t\t// str-len \u003d\u003d 100\n\t\tString str\u003d \"protected X createCompilationUnitChange(\" +\n\t\t\t\"int MISSING,int MISSING,int MISSING) throws\" +\n\t\t\t\" CoreException {}\";\n\t\tSystem.out.println(\"orig-length: \" + str.length());\n\n\t\tint[] pos\u003d  {10, 10, 40, 50, 52, 62, 64, 74, 98, 99 };\n\n\t\tICodeFormatter formatter\u003d \n\t\t\tToolFactory.createDefaultCodeFormatter(null);\n\t\tString formatted\u003d formatter.format(str, 1, pos, \"\\r\\n\");\n\t\n\t\tint len\u003d formatted.length();\n\t\tboolean isTooBig\u003d false;\n\t\tSystem.out.println(\"length: \" + len + \"\\ncontent:\\n\" + \nformatted);\n\t\tfor (int i\u003d 0; i \u003c pos.length; i++) {\n\t\t\tSystem.out.print(\", \" + pos[i]);\n\t\t\tisTooBig\u003d isTooBig || (pos[i] \u003c len);\n\t\t}\n\t\tassertFalse(isTooBig);\n\t}\n}\n\nThe output is\norig-length: 100\nlength: 149\ncontent:\n    protected X createCompilationUnitChange(\n        int MISSING,\n        int MISSING,\n        int MISSING)\n        throws CoreException {\n    }\n, 14, 14, 54, 64, 76, 86, 98, 108, 149, 152\n",
    "Ok, I reproduced it. I will investigate.",
    "The bug is located in the mapping of positions during the line splitting. We\nknow that this doesn\u0027t work very well. So you have two solutions:\n1) don\u0027t try to map positions\n2) don\u0027t try to split (increase the line split value).\n\nIt is clearly to risky to change that code now. This code will disappear anyway\nas soon as the new code formatter is ready.",
    "I\u0027m required to get the positions (have to replace certain pieces in the code), \nso I will disable the splitting. \n\nKai, you might want to make sure that the editor can add a guard for the wrong \npositions out of range.\n\nfixed \u003e 200302",
    "Could you please verify this one as you fixed it?\nThanks."
  ],
  "commentCreationDates": [
    "2003-02-07T14:25:34+01:00",
    "2003-02-07T14:50:23+01:00",
    "2003-02-07T14:53:05+01:00",
    "2003-02-07T16:26:54+01:00",
    "2003-02-07T16:55:13+01:00",
    "2003-02-07T17:03:28+01:00",
    "2003-02-07T17:37:54+01:00",
    "2003-02-07T18:00:19+01:00",
    "2003-02-07T18:43:51+01:00",
    "2003-03-11T16:33:16+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: 122",
      "elements": [
        {
          "method": "java.lang.String.substring",
          "source": "String.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextInsert",
          "source": "ASTRewriteAnalyzer.java:681"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteList",
          "source": "ASTRewriteAnalyzer.java:531"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList",
          "source": "ASTRewriteAnalyzer.java:355"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:887"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:154"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visitList",
          "source": "ASTRewriteAnalyzer.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visitList",
          "source": "ASTRewriteAnalyzer.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList",
          "source": "ASTRewriteAnalyzer.java:350"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:806"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:155"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.dom.ASTRewrite.rewriteNode",
          "source": "ASTRewrite.java:120"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoring.fillWithRewriteEdits",
          "source": "PullUpRefactoring.java:1573"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoring.createChangeManager",
          "source": "PullUpRefactoring.java:1171"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoring.checkInput",
          "source": "PullUpRefactoring.java:688"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:59"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run",
          "source": "PerformChangeOperation.java:138"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:296"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:246"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.run",
          "source": "WizardDialog.java:716"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring",
          "source": "PerformRefactoringUtil.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish",
          "source": "RefactoringWizard.java:366"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish",
          "source": "UserInputWizardPage.java:113"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.PullUpInputPage2.performFinish",
          "source": "PullUpInputPage2.java:373"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish",
          "source": "RefactoringWizard.java:429"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.finishPressed",
          "source": "WizardDialog.java:570"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog.finishPressed",
          "source": "RefactoringWizardDialog.java:73"
        },
        {
          "method": "org.eclipse.jface.wizard.WizardDialog.buttonPressed",
          "source": "WizardDialog.java:308"
        },
        {
          "method": "org.eclipse.jface.dialogs.Dialog$1.widgetSelected",
          "source": "Dialog.java:417"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java(Compiled  Code)"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:541"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate",
          "source": "RefactoringStarter.java:59"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.PullUpAction.startRefactoring",
          "source": "PullUpAction.java:177"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.PullUpAction.run",
          "source": "PullUpAction.java:100"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun",
          "source": "SelectionDispatchAction.java:191"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.run",
          "source": "SelectionDispatchAction.java:169"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:804"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:450"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent",
          "source": "ActionContributionItem.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1272"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:845"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "31289",
      "date": "2003-02-07T14:25:34+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "31289",
  "bugId": "31289",
  "date": "2003-02-07T14:25:34+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}