{
  "comments": [
    "As discussed on bug 203106 Mylyn fails with http://jira.atlassian.com which runs JIRA 3.11 DEV due to a breaking change in the SOAP API. An upstream bug report has been filed:\n\nhttp://jira.atlassian.com/browse/JRA-13529\n\nStack trace:\n\n[ERROR] Call - Exception: \u003corg.xml.sax.SAXException: Invalid element in org.eclipse.mylyn.internal.jira.core.wsdl.beans.RemoteIssueType - subTask\u003eorg.xml.sax.SAXException: Invalid element in org.eclipse.mylyn.internal.jira.core.wsdl.beans.RemoteIssueType - subTask\n\tat org.apache.axis.encoding.ser.BeanDeserializer.onStartChild(BeanDeserializer.java:258)\n\tat org.apache.axis.encoding.DeserializationContext.startElement(DeserializationContext.java:1035)\n\tat org.apache.axis.message.SAX2EventRecorder.replay(SAX2EventRecorder.java:165)\n\tat org.apache.axis.message.MessageElement.publishToHandler(MessageElement.java:1141)\n\tat org.apache.axis.encoding.DeserializerImpl.startElement(DeserializerImpl.java:369)\n\tat org.apache.axis.encoding.DeserializationContext.startElement(DeserializationContext.java:1048)\n\tat org.apache.axis.message.SAX2EventRecorder.replay(SAX2EventRecorder.java:165)\n\tat org.apache.axis.message.MessageElement.publishToHandler(MessageElement.java:1141)\n\tat org.apache.axis.message.RPCElement.deserialize(RPCElement.java:236)\n\tat org.apache.axis.message.RPCElement.getParams(RPCElement.java:384)\n\tat org.apache.axis.client.Call.invoke(Call.java:2467)\n\tat org.apache.axis.client.Call.invoke(Call.java:2366)\n\tat org.apache.axis.client.Call.invoke(Call.java:1812)\n\tat org.eclipse.mylyn.internal.jira.core.wsdl.soap.JirasoapserviceV2SoapBindingStub.getIssueTypes(JirasoapserviceV2SoapBindingStub.java:5712)\n\tat org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient$13.run(JiraRpcClient.java:317)\n\tat org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient$13.run(JiraRpcClient.java:1)\n\tat org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient.call(JiraRpcClient.java:513)\n\tat org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient.call(JiraRpcClient.java:531)\n\tat org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient.getIssueTypesRemote(JiraRpcClient.java:315)\n\tat org.eclipse.mylyn.internal.jira.core.service.AbstractJiraClient.initializeIssueTypes(AbstractJiraClient.java:186)\n\tat org.eclipse.mylyn.internal.jira.core.service.AbstractJiraClient.refreshDetails(AbstractJiraClient.java:82)\n\tat org.eclipse.mylyn.internal.jira.ui.wizards.JiraQueryPage$23.run(JiraQueryPage.java:1309)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",
    "Should we simply add new field to our structures, so updated client would work on their version?",
    "I am not sure if we could still post to old API version then (in case we needed to transmit an IssueType through SOAP). Adding the field manually is a bit of a hustle but we could probably regenerate the classes from WSDL. But I don\u0027t think it\u0027s worth it as long as JIRA 3.11 is not released, yet. I still have some hope that they will revert that (breaking) change.",
    "Mik, can you please bring Jonathan\u0027s attention to this issue and/or make his developers to comment on http://jira.atlassian.com/browse/JRA-13529\nWe really need to know what to do about this ASAP.",
    "I sent a message to a technical contact at Atlassian.  Let\u0027s give them a few days before deciding on a course of action.",
    "Created an attachment (id\u003d78705)\nscript to add license header and suppress warning annotation\n\n",
    "Created an attachment (id\u003d78706)\nupdated SOAP stubs\n\nThe patch contains the SOAP stubs that were generated from the jira.atlassian.com. I have run the test suite and done a little bit of manual testing against mylyn.eclipse.org. It would be good to do more testing against older versions of JIRA as well.\n\nI haven\u0027t applied any mappings for the namespace so the stub package prefix is now com.atlassian.jira... which also separates the generated code more cleanly from the rest of the core. It might even be a good idea to put the generated classes into a separate source folder similar to the XPlanner plug-in. I can investigate the proper mappings tomorrow if that is not desired and we want to keep the current structure.\n\nI have committed a launch configuration to run WSDL2Java so these stubs can be regenerated when needed.",
    "Created an attachment (id\u003d78707)\nmylyn/context/zip\n\n",
    "Fantastic Steffen.  I\u0027ll keep you posted if I hear back about the 3.3.3 license and our server setup of that.",
    "Steffen, see comment 16 on bug 165389 for the command used to generate stubs in Mylyn namespace.\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d165389#c16",
    "Created an attachment (id\u003d78711)\nupdated patch\n\nRegenerated classes using Mylyn namespace.",
    "Eugene, does the JIRA connector transfer any data through the SOAP stubs or do we just receive data? If the latter is the case we should be save for backwards compatibility. I suppose when we want to switch to using SOAP instead of HTTP posts we will have to keep stubs for each version though.",
    "As far as I can see we only send data trough soap when logging in. It is also unlikely that we\u0027ll ever switch to soap for sending stuff, because it don\u0027t support all the features.",
    "BTW, you may also want to reformat generated source using project formatter configuration.",
    "Created an attachment (id\u003d78716)\nreformatted patch\n\nExcellent idea :).",
    "I did some quick testing with a JIRA 3.3.3 server which seemed to work. Any objections to submitting the latest patch?",
    "Steffen: please do commit the patch, then I\u0027ll put a dev build out, and we\u0027ll install a 3.3.3 locally to do more testing.",
    "Committed patch.",
    "Thanks again for prioritizing this Steffen, it\u0027s great that you fixed it for 2.1.  Is there any particular testing that you want us to do on 3.3.3 to further exercise this functionality?",
    "It would be helpful if you could confirm that changing the type of an issue in the task editor works as well as changing the isssue status (closing/reopening). ",
    "Just for the future reference, it would be nice if we only update changed classes and keep untouched those that have changes like:\n\n- @SuppressWarnings(\"unchecked\") -\u003e @SuppressWarnings(\"all\")\n- @Override -\u003e none\n\nPersonally I think using @SuppressWarnings(\"all\") on all classes is quite bold. I guess I should have reviewed suggested patch more close...",
    "(In reply to comment #20)\n\u003e Just for the future reference, it would be nice if we only update changed\n\u003e classes and keep untouched those that have changes like:\n\u003e \n\u003e - @SuppressWarnings(\"unchecked\") -\u003e @SuppressWarnings(\"all\")\n\u003e - @Override -\u003e none\n\u003e \n\u003e Personally I think using @SuppressWarnings(\"all\") on all classes is quite bold.\n\nThese classes are generated and should not be edited by hand. Please file a bug report against Axis if there are errors in the code. Adding this type of warning in a uniform way will in fact make it easier to track changes when the classes are updated. If you can provide a script or describe a semi-automated way of optimizing this procedure I\u0027ll be happy to follow that next time."
  ],
  "commentCreationDates": [
    "2007-09-14T06:30:05+02:00",
    "2007-09-14T06:48:29+02:00",
    "2007-09-14T06:56:52+02:00",
    "2007-09-14T15:29:27+02:00",
    "2007-09-15T04:54:50+02:00",
    "2007-09-19T05:55:18+02:00",
    "2007-09-19T06:04:16+02:00",
    "2007-09-19T06:04:18+02:00",
    "2007-09-19T06:06:35+02:00",
    "2007-09-19T06:46:39+02:00",
    "2007-09-19T07:28:07+02:00",
    "2007-09-19T07:32:29+02:00",
    "2007-09-19T07:59:44+02:00",
    "2007-09-19T08:02:05+02:00",
    "2007-09-19T08:09:38+02:00",
    "2007-09-19T17:17:18+02:00",
    "2007-09-20T00:47:14+02:00",
    "2007-09-20T06:17:01+02:00",
    "2007-09-20T06:38:32+02:00",
    "2007-09-20T06:42:39+02:00",
    "2007-09-20T07:04:19+02:00",
    "2007-09-20T07:26:02+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.xml.sax.SAXException",
      "message": "Invalid element in org.eclipse.mylyn.internal.jira.core.wsdl.beans.RemoteIssueType - subTask",
      "elements": [
        {
          "method": "org.apache.axis.encoding.ser.BeanDeserializer.onStartChild",
          "source": "BeanDeserializer.java:258"
        },
        {
          "method": "org.apache.axis.encoding.DeserializationContext.startElement",
          "source": "DeserializationContext.java:1035"
        },
        {
          "method": "org.apache.axis.message.SAX2EventRecorder.replay",
          "source": "SAX2EventRecorder.java:165"
        },
        {
          "method": "org.apache.axis.message.MessageElement.publishToHandler",
          "source": "MessageElement.java:1141"
        },
        {
          "method": "org.apache.axis.encoding.DeserializerImpl.startElement",
          "source": "DeserializerImpl.java:369"
        },
        {
          "method": "org.apache.axis.encoding.DeserializationContext.startElement",
          "source": "DeserializationContext.java:1048"
        },
        {
          "method": "org.apache.axis.message.SAX2EventRecorder.replay",
          "source": "SAX2EventRecorder.java:165"
        },
        {
          "method": "org.apache.axis.message.MessageElement.publishToHandler",
          "source": "MessageElement.java:1141"
        },
        {
          "method": "org.apache.axis.message.RPCElement.deserialize",
          "source": "RPCElement.java:236"
        },
        {
          "method": "org.apache.axis.message.RPCElement.getParams",
          "source": "RPCElement.java:384"
        },
        {
          "method": "org.apache.axis.client.Call.invoke",
          "source": "Call.java:2467"
        },
        {
          "method": "org.apache.axis.client.Call.invoke",
          "source": "Call.java:2366"
        },
        {
          "method": "org.apache.axis.client.Call.invoke",
          "source": "Call.java:1812"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.wsdl.soap.JirasoapserviceV2SoapBindingStub.getIssueTypes",
          "source": "JirasoapserviceV2SoapBindingStub.java:5712"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient$13.run",
          "source": "JiraRpcClient.java:317"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient$13.run",
          "source": "JiraRpcClient.java:1"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient.call",
          "source": "JiraRpcClient.java:513"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient.call",
          "source": "JiraRpcClient.java:531"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.soap.JiraRpcClient.getIssueTypesRemote",
          "source": "JiraRpcClient.java:315"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.AbstractJiraClient.initializeIssueTypes",
          "source": "AbstractJiraClient.java:186"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.core.service.AbstractJiraClient.refreshDetails",
          "source": "AbstractJiraClient.java:82"
        },
        {
          "method": "org.eclipse.mylyn.internal.jira.ui.wizards.JiraQueryPage$23.run",
          "source": "JiraQueryPage.java:1309"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "203401",
      "date": "2007-09-14T06:30:05+02:00",
      "product": "Mylyn",
      "component": "Jira",
      "severity": "critical"
    }
  ],
  "groupId": "203401",
  "bugId": "203401",
  "date": "2007-09-14T06:30:05+02:00",
  "product": "Mylyn",
  "component": "Jira",
  "severity": "critical"
}