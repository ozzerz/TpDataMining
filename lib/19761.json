{
  "comments": [
    "java.lang.NullPointerException\n\tat com.ibm.etools.draw2d.FigureUtilities.setFont\n(FigureUtilities.java:239)\n\tat com.ibm.etools.draw2d.FigureUtilities.getTextDimension\n(FigureUtilities.java:86)\n\tat com.ibm.etools.draw2d.FigureUtilities.getTextExtents\n(FigureUtilities.java:134)\n\tat com.ibm.etools.draw2d.Label.calculateTextSize(Label.java:217)\n\tat com.ibm.etools.draw2d.Label.getTextSize(Label.java:404)\n\tat com.ibm.etools.draw2d.Label.getPreferredSize(Label.java:291)\n\tat com.ibm.etools.draw2d.Label.getSubStringText(Label.java:310)\n\tat com.ibm.etools.draw2d.Label.calculateSubStringTextSize\n(Label.java:205)\n\tat com.ibm.etools.draw2d.Label.getSubStringTextSize(Label.java:337)\n\tat com.ibm.etools.draw2d.Label.calculateAlignment(Label.java:117)\n\tat com.ibm.etools.draw2d.Label.calculateLocations(Label.java:149)\n\tat com.ibm.etools.draw2d.Label.getIconLocation(Label.java:258)\n\tat com.ibm.etools.draw2d.Label.getIconBounds(Label.java:247)\n[...]\n\nI created the label this way:\n\n// create label for image\nimageLabel \u003d new Label();\n\n// config label\nimageLabel.setOpaque(false);\nimageLabel.setTextPlacement(imageLabel.SOUTH);\nimageLabel.setSize(getSize());\n\n// set icon\nimageLabel.setIcon(myImage);\n\n// add label\nadd(imageLabel);\n\nSystem.out.println( imageLabel.getIconBounds().toString() );",
    "The cause should be Label#getFont() which returns null.\n\nI think it shouldn\u0027t return null because the Label has a default font, which is \nused for displaying.\n\nI would like to try to set a font before calling getIconBounds but I can\u0027t \ndiscover how to get system/default fonts from eclipse.\n\n",
    "You shouldn\u0027t be calling Label.getIconBounds() until the Label is in a \nlightweight system with a Canvas.  Placing the label in a lightweight system \nwill cause it to inherit the Font from the Canvas.  Then you can call \ngetIconBounds().",
    "The label _IS_ in a lws with a canvas because it is used as a figure for an \nEditPart. I need the Label#getIconBounds to do a better calculate of \nConnectiopnAnchor locations.",
    "In you code, what does:\n  add(imageLabel);\ndo?  I don\u0027t see a LightweightSystem anywhere.",
    "put a breakpoint in calculateTextSize().\nstep into getFont().  You should eventually see a LightweightSystem$RootFigure \nin the parent chain that implements getFont() by getting the Canvas\u0027 Font.",
    "\"add(imageLabel)\" is call in the constructor of a subclass of Figure. This \nfigure is return GraphicalEditPart#createFigure.\n\nI thought GEF uses a lws with a canvas for displaying? If not, what do you \nsugest to get the bounds of the image of a Label?\n\nThe bounds are really necessary for doing additional ConnectionAnchor \ncalculation.",
    "I did debugging found out that the parent of the Label is my figure and that my \nfigure has no parent.\n\nWhy?\n\nDo I have to manually assign the parent to my figure? I thought the figure of \nthe parent EditPart is automatically assigned as _THE_ parent for the figure of \nthe child EditPart?\n\nI also noticed during debugging, that calculateTextSize() is called multiple \ntimes with no NullPointerException be thrown because it has a \nLightweightSystem$RootFigure as a parent.",
    "I also found another annoying thing. If I use the following code to catch the \nNullPointerException, the result gets corrupted.\n\ntry\n{\n\tSystem.out.println(this +\": \" + imageLabel.getIconBounds());\n}\ncatch (Exception e)\n{\n\tSystem.err.println(\"Error\");\n}\n\nCorrupted means the displayed output is not the same. It seems that something \nis modifying the label during imageLabel.getIconBounds(). I think it is the \nplacement option for the image inside the label. It seems the image inside the \nlabel is not centered anymore. Instead it is putted to the upper left corner of \nthe label. Not really nice if you want to do a fallback if icon bounds couldn\u0027t \nbe calculated.",
    "getIconBounds() is undefined until the figure has been \"layed out\".  It will \nnot layout until you put it in a LightweightSystem.  You EditPart\u0027s figure is \neventually added to its parent\u0027s figure (and therefore a LWS), but during \ncreateFigure() the figure is not parented.\n\nConnectionAnchors are used by Connections.  So, your connection and anchor \nshould not call getIconBounds() until after the Label has been validated."
  ],
  "commentCreationDates": [
    "2002-06-10T09:43:23+02:00",
    "2002-06-10T10:36:29+02:00",
    "2002-06-10T15:32:22+02:00",
    "2002-06-10T18:03:24+02:00",
    "2002-06-10T18:58:43+02:00",
    "2002-06-10T22:38:33+02:00",
    "2002-06-11T08:09:57+02:00",
    "2002-06-11T08:41:55+02:00",
    "2002-06-11T08:49:35+02:00",
    "2002-06-11T15:06:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "com.ibm.etools.draw2d.FigureUtilities.setFont",
          "source": "FigureUtilities.java:239"
        },
        {
          "method": "com.ibm.etools.draw2d.FigureUtilities.getTextDimension",
          "source": "FigureUtilities.java:86"
        },
        {
          "method": "com.ibm.etools.draw2d.FigureUtilities.getTextExtents",
          "source": "FigureUtilities.java:134"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.calculateTextSize",
          "source": "Label.java:217"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.getTextSize",
          "source": "Label.java:404"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.getPreferredSize",
          "source": "Label.java:291"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.getSubStringText",
          "source": "Label.java:310"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.calculateSubStringTextSize",
          "source": "Label.java:205"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.getSubStringTextSize",
          "source": "Label.java:337"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.calculateAlignment",
          "source": "Label.java:117"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.calculateLocations",
          "source": "Label.java:149"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.getIconLocation",
          "source": "Label.java:258"
        },
        {
          "method": "com.ibm.etools.draw2d.Label.getIconBounds",
          "source": "Label.java:247"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "19761",
      "date": "2002-06-10T09:43:23+02:00",
      "product": "GEF",
      "component": "draw2d",
      "severity": "normal"
    }
  ],
  "groupId": "19761",
  "bugId": "19761",
  "date": "2002-06-10T09:43:23+02:00",
  "product": "GEF",
  "component": "draw2d",
  "severity": "normal"
}