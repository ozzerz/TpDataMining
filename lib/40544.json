{
  "comments": [
    "I get a StackOverflowError when I want to rename a field in large classes (about\n800 lines), with smaller classes it works. The error occured in 2.1 and later. I\nwasn\u0027t able to reproduce the error with another project. I dint\u0027t try with\nanother OS. My project has about 2000 classes.\n\n!SESSION Jul 21, 2003 10:36:16.288 ---------------------------------------------\njava.version\u003d1.4.2\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dde_DE\nCommand-line arguments: -os win32 -ws win32 -arch x86 -data c:\\projekte2\n-install file:C:/Programme/eclipse3.0M2/eclipse/\n!ENTRY org.eclipse.ui 4 4 Jul 21, 2003 10:36:16.288\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Jul 21, 2003 10:36:16.304\n!MESSAGE java.lang.StackOverflowError\n!STACK 0\njava.lang.StackOverflowError",
    "is this the whole stacktrace? ",
    "yes",
    "I debuged the the latest Integration build(I20030723). I think the problem is \nin \"org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver\" in \nthe  \"subTypeOfType(ReferenceBinding, ReferenceBinding)\" method. I can catch \nthe Error there.",
    "Ralf, do you have a reproducable test case which you can attach. That would \nreally help.",
    "No I have not. As I said, I have a large projekt with about 2000 classes and \nseveral libs. The class I have problems with has the following Hierarchy\n\nClass1 implements Interface1, Serializable\nClass2 extends class1\nClass3 extends class2\nMyClass extends class3\n\nwith serveral other classes extending class1 and class2 and several classes \nextending my class. I just recognized that trying to open the Type Hierarchy \nfails with this Exception in the log, so perhaps the problem is because of the \ncomplex structure of that hierarchy. I\u0027ll try to reproduce it with other \nclasses.\n\n!ENTRY org.eclipse.jdt.ui 4 10001 Aug 04, 2003 10:30:55.838\n!MESSAGE Internal Error\n!STACK 0\njava.lang.reflect.InvocationTargetException\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)\n\tat org.eclipse.jface.window.ApplicationWindow$1.run\n(ApplicationWindow.java:444)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile\n(BusyIndicator.java:84)\n\tat org.eclipse.jface.window.ApplicationWindow.run\n(ApplicationWindow.java:441)\n\tat org.eclipse.ui.internal.WorkbenchWindow.run\n(WorkbenchWindow.java:1636)\n\tat \norg.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshe\ndTypeHierarchy(TypeHierarchyLifeCycle.java:122)\n\tat \norg.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput\n(TypeHierarchyViewPart.java:465)\n\tat \norg.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement\n(TypeHierarchyViewPart.java:446)\n\tat \norg.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart\n(OpenTypeHierarchyUtil.java:94)\n\tat org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open\n(OpenTypeHierarchyUtil.java:75)\n\tat org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run\n(OpenTypeHierarchyAction.java:175)\n\tat org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run\n(OpenTypeHierarchyAction.java:141)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun\n(SelectionDispatchAction.java:196)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.run\n(SelectionDispatchAction.java:172)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:842)\n\tat \norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:542)\n\tat org.eclipse.jface.action.ActionContributionItem.access$4\n(ActionContributionItem.java:496)\n\tat org.eclipse.jface.action.ActionContributionItem$6.handleEvent\n(ActionContributionItem.java:468)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:858)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:291)\n\tat org.eclipse.core.launcher.Main.run(Main.java:747)\n\tat org.eclipse.core.launcher.Main.main(Main.java:583)\nCaused by: java.lang.StackOverflowError",
    "Movingt o JDT/Core for comments since #3 indicates that it happens in \norg.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.\n\nRalf,\n\nyou mentioned that you can debug it. The debugger allows you to generate a \nstack trace as well (select the stack frame and simple copy it to clipboard). \nCan you attach the stack tract of the debugger so that we know the calling \nsequence that causes the failure.\n\nThanks Dirk",
    "Created an attachment (id\u003d5624)\nStackTrace in the debugger\n\nIt took me about 15 minutes of 100% CPU ;-), but here is the stack in the\ndebugger. I inserted a try catch:\nprivate boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding\ntypeBinding) {\n\tif (typeBinding \u003d\u003d null || subType \u003d\u003d null) return false;\n\tif (subType \u003d\u003d typeBinding) return true;\n\tReferenceBinding superclass \u003d subType.superclass();\n//\tif (superclass !\u003d null \u0026\u0026 superclass.id \u003d\u003d TypeIds.T_JavaLangObject \u0026\u0026\nsubType.isHierarchyInconsistent()) return false;\n\tif (this.subTypeOfType(superclass, typeBinding)) return true;\n\tReferenceBinding[] superInterfaces \u003d subType.superInterfaces();\n\tif (superInterfaces !\u003d null) {\n\t\tfor (int i \u003d 0, length \u003d superInterfaces.length; i \u003c length;\ni++) {\n\t\t\ttry {\n\t\t\t\tif (this.subTypeOfType(superInterfaces[i],\ntypeBinding))\n\t\t\t\t\treturn true;\n\t\t\t} catch (Error e) {\n\t\t\t\tSystem.out.println(\"Error:\");\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} \n\t}\n\treturn false;\n}\nThe stack is in the catch block.",
    "Thanks for taking the time to produce the stack trace.",
    "There is nothing obviously wrong in HierarchyResolver.subTypeOfType(...). \nUnless you can find a test case, I\u0027m not sure what we can do.\n\nAlso have you tried to increase the stack size (passing the -Xss argument to \nthe VM)?",
    "Yes I tried the -Xss argument with even large values, but with no effect. Could\nit be some kind of circular dependence of my classes or interfaces ? No idea\nwhat.    I tried to find a test case, but didnt\u0027t manage to create one until now. ",
    "Thanks for the info. The only solution to debug this problem would be either a \ntest case, or that you zip your workspace and post it somewhere I can download \nit.",
    "Okay, I\u0027ll try to find a test case. Could you give me a hint to some sample\nJunit tests which could be useful for me ? (Create a project, classes,\ninterfaces ...)\nI cant\u0027t send you my workspace, because it contains confidential classes.",
    "I didn\u0027t expect you write code that reproduce the problem. I just expected that \nyou would give me a set of classes (not the original ones, but classes that \nhave been renamed with no method bodies for example), so that with this set of \nclasses I could see the problem.",
    "Please reopen if you have a test case.",
    "Got a test case in e-mail. Verified this is fixed in M4.\nClosing."
  ],
  "commentCreationDates": [
    "2003-07-21T11:55:31+02:00",
    "2003-07-21T11:56:59+02:00",
    "2003-07-21T11:59:20+02:00",
    "2003-08-01T14:13:01+02:00",
    "2003-08-04T11:25:26+02:00",
    "2003-08-04T11:52:56+02:00",
    "2003-08-04T12:01:04+02:00",
    "2003-08-04T12:34:46+02:00",
    "2003-08-04T14:16:56+02:00",
    "2003-08-29T16:16:38+02:00",
    "2003-08-31T14:30:53+02:00",
    "2003-09-01T09:57:16+02:00",
    "2003-09-01T11:39:34+02:00",
    "2003-09-01T13:33:28+02:00",
    "2003-10-01T19:13:34+02:00",
    "2003-10-13T17:43:06+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:283"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow$1.run",
          "source": "ApplicationWindow.java:444"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:84"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow.run",
          "source": "ApplicationWindow.java:441"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.run",
          "source": "WorkbenchWindow.java:1636"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshedTypeHierarchy",
          "source": "TypeHierarchyLifeCycle.java:122"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput",
          "source": "TypeHierarchyViewPart.java:465"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement",
          "source": "TypeHierarchyViewPart.java:446"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart",
          "source": "OpenTypeHierarchyUtil.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open",
          "source": "OpenTypeHierarchyUtil.java:75"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run",
          "source": "OpenTypeHierarchyAction.java:175"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run",
          "source": "OpenTypeHierarchyAction.java:141"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun",
          "source": "SelectionDispatchAction.java:196"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.run",
          "source": "SelectionDispatchAction.java:172"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:842"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:542"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$4",
          "source": "ActionContributionItem.java:496"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$6.handleEvent",
          "source": "ActionContributionItem.java:468"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:848"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2188"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1680"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:858"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:291"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:747"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:583"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "40544",
      "date": "2003-08-04T11:52:56+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "40544",
  "bugId": "40544",
  "date": "2003-07-21T11:55:31+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}