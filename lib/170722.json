{
  "comments": [
    "I am getting errors like this quite often. It seems like platform auth info is used by multiple plugins (Team/CVS, Subclipse, Mylar, etc) and there could be some concurrency issues. I noticed that none of the methods Platform.*AuthorizationInfo() are synchronized, so it is possible that .keyring file can be written from multiple threads at the same time.\n\nHere is one of the stack traces:\n\nUnable to read authorization database: C:\\eclipse\\eclipse-3.3M4\\configuration\\org.eclipse.core.runtime\\.keyring.\n\njava.io.EOFException\nat java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2279)\nat java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:2748)\nat java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:780)\nat java.io.ObjectInputStream.\u003cinit\u003e(ObjectInputStream.java:280)\nat org.eclipse.core.internal.runtime.auth.AuthorizationDatabase.load(AuthorizationDatabase.java:292)\nat org.eclipse.core.internal.runtime.auth.AuthorizationDatabase.load(AuthorizationDatabase.java:275)\nat org.eclipse.core.internal.runtime.auth.AuthorizationDatabase.\u003cinit\u003e(AuthorizationDatabase.java:95)\nat org.eclipse.core.internal.runtime.auth.AuthorizationHandler.loadKeyring(AuthorizationHandler.java:58)\nat org.eclipse.core.internal.runtime.auth.AuthorizationHandler.getAuthorizationInfo(AuthorizationHandler.java:176)\nat org.eclipse.core.runtime.Platform.getAuthorizationInfo(Platform.java:608)\nat org.eclipse.mylar.tasks.core.TaskRepository.getAuthInfo(TaskRepository.java:255)\nat org.eclipse.mylar.tasks.core.TaskRepository.getAuthInfo(TaskRepository.java:274)\nat org.eclipse.mylar.tasks.core.TaskRepository.getUserNameFromKeyRing(TaskRepository.java:158)\nat org.eclipse.mylar.tasks.core.TaskRepository.getUserName(TaskRepository.java:152)\nat org.eclipse.mylar.tasks.ui.TaskListManager.isCompletedToday(TaskListManager.java:705)\nat org.eclipse.mylar.internal.context.ui.TaskListInterestFilter.isUninteresting(TaskListInterestFilter.java:58)\nat org.eclipse.mylar.internal.context.ui.TaskListInterestFilter.select(TaskListInterestFilter.java:41)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListContentProvider.filter(TaskListContentProvider.java:250)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListContentProvider.getFilteredChildrenFor(TaskListContentProvider.java:217)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListContentProvider.getChildren(TaskListContentProvider.java:71)\nat org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:1215)\nat org.eclipse.jface.viewers.TreeViewer.getRawChildren(TreeViewer.java:490)\nat org.eclipse.jface.viewers.AbstractTreeViewer.getFilteredChildren(AbstractTreeViewer.java:613)\nat org.eclipse.jface.viewers.AbstractTreeViewer.getSortedChildren(AbstractTreeViewer.java:579)\nat org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:2420)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1720)\nat org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct(TreeViewer.java:688)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1695)\nat org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1651)\nat org.eclipse.jface.viewers.StructuredViewer$8.run(StructuredViewer.java:1424)\nat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1332)\nat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1422)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListView.refresh(TaskListView.java:1433)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListView.refresh(TaskListView.java:1421)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListView.refresh(TaskListView.java:1414)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListView.access$2(TaskListView.java:1385)\nat org.eclipse.mylar.internal.tasks.ui.views.TaskListView$2$1.run(TaskListView.java:303)\nat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\nat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3442)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3082)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1945)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1909)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:425)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:597)\nat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:522)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:147)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:170)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:597)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:339)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:283)\nat org.eclipse.core.launcher.Main.run(Main.java:984)\nat org.eclipse.core.launcher.Main.main(Main.java:959)",
    "Please note that shown stack trace is just one of the consequences and probably the most severe one. Another quite annoying one is when credentials for some particular host are being lost.",
    "See also Bug 170346",
    "Seems similar to bug #170346.",
    "I had not seen comment #2, sorry for the noise.",
    "I have also experienced this credentials loss.",
    "Can owner of the org.eclipse.core.runtime.compatibility.auth module or someone from Platform Runtime please comment on this?\n\nI believe this is quite bad issue and should be addressed as soon as possible. \n\nCorrupted .keyring file can lead to all kind of really nasty issues. Few times I saw that broken .keyring file was causing OutOfMemoryException on Eclipse startup, so it won\u0027t even start and I had to delete broken .keyring file. But for inexperienced user that would mean loss of the whole Eclipse workspace or even Eclipse reinstall.",
    "I\u0027ll take this.",
    "Created an attachment (id\u003d58129)\nFix\n\nThis patch synchronizes access to the keyring. It also fixes a bug that was causing the keyring to be read too often. If you set authorization info, and then immediately read it back, there is no need to re-read the data from disk. The bug was that the cache timestamp was not updated on save (only on read).",
    "Fix released.",
    "(In reply to comment #8)\n\u003e Created an attachment (id\u003d58129) [details]\n\u003e Fix\n\nGreat stuff!\n\n\u003e This patch synchronizes access to the keyring. \n\nBy the way, do you like a junit test for that?\n\n\u003e It also fixes a bug that was\n\u003e causing the keyring to be read too often. If you set authorization info, and\n\u003e then immediately read it back, there is no need to re-read the data from disk.\n\u003e The bug was that the cache timestamp was not updated on save (only on read).\n\nJohn, while you are on it, may I also suggest to add a latency for checking timestamp on the file system? I.e. don\u0027t check it more often then every second. I don\u0027t want to finger anyone, but some plugins could abuse getAuthInfo() call, which is currently checks the file timestamp on every call.",
    "I\u0027m assuming the target milestone was cleared accidentally.  A JUnit test would certainly be welcome. I think the current optimization is appropriate for most users - if there are clients accessing this kind of data very frequently, might I suggest they hold it in memory rather than going to the keyring every time.  If someone was, for example, using auth data when filtering items in a UI view, they could easily hang onto the data they need themselves.  Note also that for thread safety getAuthorizationInfo clones the returned auth HashMap, so it won\u0027t be a fast operation in any case.",
    "Created an attachment (id\u003d58141)\nconcurrent test case\n\nHere is the concurrent test case that can be lauched as junit plugin test. It fail miserably with all kinds of exceptions (NPE, OOME, AIOBE, you name it) on Eclipse 3.3M4.",
    " (In reply to comment #11)\n\u003e I think the current optimization is appropriate for most\n\u003e users - if there are clients accessing this kind of data very frequently, might\n\u003e I suggest they hold it in memory rather than going to the keyring every time.\n\nRight. That is what we had to do for Mylar. Thanks.\nPerhaps it might be somehow reflected in the javadocs for the Platform.getAuthInfo() method...",
    "Excellent that this is fixed for M5!\n\nEugene: assuming that it won\u0027t have any bad behavior, let\u0027s leave the Mylar work-around for now, because mylar.tasks is not yet forked for 3.3.",
    "*** Bug 170346 has been marked as a duplicate of this bug. ***",
    "*** Bug 92887 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2007-01-17T03:25:42+01:00",
    "2007-01-23T05:37:24+01:00",
    "2007-02-01T22:20:28+01:00",
    "2007-02-01T22:31:42+01:00",
    "2007-02-01T22:32:37+01:00",
    "2007-02-01T22:39:05+01:00",
    "2007-02-02T02:05:33+01:00",
    "2007-02-02T18:29:51+01:00",
    "2007-02-02T18:31:43+01:00",
    "2007-02-02T18:32:26+01:00",
    "2007-02-02T18:37:46+01:00",
    "2007-02-02T18:54:19+01:00",
    "2007-02-02T19:19:11+01:00",
    "2007-02-02T19:21:35+01:00",
    "2007-02-02T21:18:40+01:00",
    "2007-02-12T15:34:21+01:00",
    "2007-04-19T14:17:49+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.EOFException",
      "elements": [
        {
          "method": "java.io.ObjectInputStream$PeekInputStream.readFully",
          "source": "ObjectInputStream.java:2279"
        },
        {
          "method": "java.io.ObjectInputStream$BlockDataInputStream.readShort",
          "source": "ObjectInputStream.java:2748"
        },
        {
          "method": "java.io.ObjectInputStream.readStreamHeader",
          "source": "ObjectInputStream.java:780"
        },
        {
          "method": "java.io.ObjectInputStream.\u003cinit\u003e",
          "source": "ObjectInputStream.java:280"
        },
        {
          "method": "org.eclipse.core.internal.runtime.auth.AuthorizationDatabase.load",
          "source": "AuthorizationDatabase.java:292"
        },
        {
          "method": "org.eclipse.core.internal.runtime.auth.AuthorizationDatabase.load",
          "source": "AuthorizationDatabase.java:275"
        },
        {
          "method": "org.eclipse.core.internal.runtime.auth.AuthorizationDatabase.\u003cinit\u003e",
          "source": "AuthorizationDatabase.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.auth.AuthorizationHandler.loadKeyring",
          "source": "AuthorizationHandler.java:58"
        },
        {
          "method": "org.eclipse.core.internal.runtime.auth.AuthorizationHandler.getAuthorizationInfo",
          "source": "AuthorizationHandler.java:176"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.getAuthorizationInfo",
          "source": "Platform.java:608"
        },
        {
          "method": "org.eclipse.mylar.tasks.core.TaskRepository.getAuthInfo",
          "source": "TaskRepository.java:255"
        },
        {
          "method": "org.eclipse.mylar.tasks.core.TaskRepository.getAuthInfo",
          "source": "TaskRepository.java:274"
        },
        {
          "method": "org.eclipse.mylar.tasks.core.TaskRepository.getUserNameFromKeyRing",
          "source": "TaskRepository.java:158"
        },
        {
          "method": "org.eclipse.mylar.tasks.core.TaskRepository.getUserName",
          "source": "TaskRepository.java:152"
        },
        {
          "method": "org.eclipse.mylar.tasks.ui.TaskListManager.isCompletedToday",
          "source": "TaskListManager.java:705"
        },
        {
          "method": "org.eclipse.mylar.internal.context.ui.TaskListInterestFilter.isUninteresting",
          "source": "TaskListInterestFilter.java:58"
        },
        {
          "method": "org.eclipse.mylar.internal.context.ui.TaskListInterestFilter.select",
          "source": "TaskListInterestFilter.java:41"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListContentProvider.filter",
          "source": "TaskListContentProvider.java:250"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListContentProvider.getFilteredChildrenFor",
          "source": "TaskListContentProvider.java:217"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListContentProvider.getChildren",
          "source": "TaskListContentProvider.java:71"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren",
          "source": "AbstractTreeViewer.java:1215"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.getRawChildren",
          "source": "TreeViewer.java:490"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getFilteredChildren",
          "source": "AbstractTreeViewer.java:613"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getSortedChildren",
          "source": "AbstractTreeViewer.java:579"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren",
          "source": "AbstractTreeViewer.java:2420"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct",
          "source": "AbstractTreeViewer.java:1720"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.internalRefreshStruct",
          "source": "TreeViewer.java:688"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1695"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh",
          "source": "AbstractTreeViewer.java:1651"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$8.run",
          "source": "StructuredViewer.java:1424"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1332"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1422"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListView.refresh",
          "source": "TaskListView.java:1433"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListView.refresh",
          "source": "TaskListView.java:1421"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListView.refresh",
          "source": "TaskListView.java:1414"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListView.access$2",
          "source": "TaskListView.java:1385"
        },
        {
          "method": "org.eclipse.mylar.internal.tasks.ui.views.TaskListView$2$1.run",
          "source": "TaskListView.java:303"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3442"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3082"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1945"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1909"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:425"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:522"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:147"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:104"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:74"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:354"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:170"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:339"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:283"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:984"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:959"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "170722",
      "date": "2007-01-17T03:25:42+01:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "critical"
    }
  ],
  "groupId": "170722",
  "bugId": "170722",
  "date": "2007-01-17T03:25:42+01:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "critical"
}