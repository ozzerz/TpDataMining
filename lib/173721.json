{
  "comments": [
    "When some extensions of the Connection Profile extension point happen to use the same profile id, a runtime exception occurs and the CP manager fails to load *all* the remaining profile extensions.  The internal cache is then left in a bad state, and may affect subsequent operations.\n\nIt should provide graceful error handling, so that *only* the problematic profile extensions get rejected.  The remaining \"good\" CP extensions should not be penalized for having bad company.\n\nBelow is the main stack trace of the runtime exception:\n\n!MESSAGE Could not acquire children from extension: org.eclipse.datatools.connectivity.dsexplorer.content\n!STACK 0\norg.eclipse.core.runtime.AssertionFailedException: assertion failed: Parsing error: invalid attribute (org.eclipse.core.internal.registry.ConfigurationElementHandle@1bef)\n\tat org.eclipse.core.runtime.Assert.isTrue(Assert.java:109)\n\tat org.eclipse.datatools.connectivity.internal.ConnectionProfileManager.processConnectionProfile(ConnectionProfileManager.java:177)\n\tat org.eclipse.datatools.connectivity.internal.ConnectionProfileManager.processExtensions(ConnectionProfileManager.java:132)\n\tat org.eclipse.datatools.connectivity.internal.ConnectionProfileManager.getCategories(ConnectionProfileManager.java:96)\n\tat org.eclipse.datatools.connectivity.internal.InternalProfileManager.getRootCategories(InternalProfileManager.java:106)\n\tat org.eclipse.datatools.connectivity.ProfileManager.getRootCategories(ProfileManager.java:61)\n\tat org.eclipse.datatools.connectivity.ui.dse.views.ConnectionProfileContentProvider.getChildren(ConnectionProfileContentProvider.java:132)\n\tat org.eclipse.datatools.connectivity.ui.dse.views.ConnectionProfileContentProvider.getElements(ConnectionProfileContentProvider.java:222)\n\tat org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.getElements(SafeDelegateTreeContentProvider.java:97)",
    "Created an attachment (id\u003d64505)\nPatch to ignore duplicated profile provider and factory id\n\nRob,\nPlease take a look at the supplied patch on whether the fix looks ok.  Thanks.\nLinda",
    "Hey Linda,\n\nThis looks good to me.  It will get things working.  I think it might be a little better if we disabled the original extension too.  My concern is that the \"wrong\" one might be loaded first, which might end up causing other problems down the line.\n\nGo ahead and check this in, but maybe leave this open so we can look at disabling both extensions in the future (assuming that\u0027s OK with you).\n\nThanks for taking care of this,\nRob\n",
    "Applied the patch in 1.5 RC0.\n\nRe: disabling both extensions in the future, that should be fine for the case of duplicated profile provider id.  \nHowever, the second case fixed here for reusing same \"connection factory id\" should be allowed; i.e. keep the original connection factory.",
    "Rob clarified that the uniqueness for the second case is on the combined profile provider id and its corresponding connection factory id.  So this problem will no longer exist when all the duplicated profile extensions get disabled in the future.",
    "Hey Linda,\n\nI\u0027ve added logic to disable the loaded connectionProfile extension if a duplicate was found.  Could you please run a quick test to make sure it meets your needs.\n\nThanks,\nRob"
  ],
  "commentCreationDates": [
    "2007-02-10T01:19:51+01:00",
    "2007-04-21T04:58:17+02:00",
    "2007-04-23T17:33:55+02:00",
    "2007-04-23T21:05:58+02:00",
    "2007-04-23T23:18:06+02:00",
    "2007-05-18T00:00:43+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.AssertionFailedException",
      "message": "assertion failed: Parsing error: invalid attribute (org.eclipse.core.internal.registry.ConfigurationElementHandle@1bef)",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Assert.isTrue",
          "source": "Assert.java:109"
        },
        {
          "method": "org.eclipse.datatools.connectivity.internal.ConnectionProfileManager.processConnectionProfile",
          "source": "ConnectionProfileManager.java:177"
        },
        {
          "method": "org.eclipse.datatools.connectivity.internal.ConnectionProfileManager.processExtensions",
          "source": "ConnectionProfileManager.java:132"
        },
        {
          "method": "org.eclipse.datatools.connectivity.internal.ConnectionProfileManager.getCategories",
          "source": "ConnectionProfileManager.java:96"
        },
        {
          "method": "org.eclipse.datatools.connectivity.internal.InternalProfileManager.getRootCategories",
          "source": "InternalProfileManager.java:106"
        },
        {
          "method": "org.eclipse.datatools.connectivity.ProfileManager.getRootCategories",
          "source": "ProfileManager.java:61"
        },
        {
          "method": "org.eclipse.datatools.connectivity.ui.dse.views.ConnectionProfileContentProvider.getChildren",
          "source": "ConnectionProfileContentProvider.java:132"
        },
        {
          "method": "org.eclipse.datatools.connectivity.ui.dse.views.ConnectionProfileContentProvider.getElements",
          "source": "ConnectionProfileContentProvider.java:222"
        },
        {
          "method": "org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.getElements",
          "source": "SafeDelegateTreeContentProvider.java:97"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "173721",
      "date": "2007-02-10T01:19:51+01:00",
      "product": "Data Tools",
      "component": "Connection Mgt Framework",
      "severity": "normal"
    }
  ],
  "groupId": "173721",
  "bugId": "173721",
  "date": "2007-02-10T01:19:51+01:00",
  "product": "Data Tools",
  "component": "Connection Mgt Framework",
  "severity": "normal"
}