{
  "comments": [
    "Build 2.0 IBM JRE 1.3.0 Win2k\n\nI was doing some debugging, and after awhile I noticed a stack trace on the \nconsole (nothing in the log file).  I unfortunately don\u0027t have steps to \nreproduce it.  Hopefully the stack trace has enough info to go on.  Things I was \ndoing that may have caused breakage:\n\n- modifying code from within the debugger while program was running.  I would \nthen kill the thread on failure to HCR\n- had a conditional breakpoint in a fairly tight loop.  The loop had roughly \n50,000 iterations, which is nowhere near the size reported in the exception.  \nThe conditional breakpoint seemed to functioning fine.\n\nHere is the stack trace:\n\njava.lang.ArrayIndexOutOfBoundsException: 376653368\n        at java.util.ArrayList.ensureCapacity(ArrayList.java(Compiled Code))\n        at java.util.ArrayList.add(ArrayList.java(Compiled Code))\n        at org.eclipse.jdt.internal.debug.core.model.JDIModificationVariable.\u003cin\nit\u003e(JDIModificationVariable.java(Compiled Code))\n        at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV\nalue.java(Compiled Code))\n        at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV\nalue.java(Compiled Code))\n        at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.findVariable(\nJDIStackFrame.java(Compiled Code))\n        at org.eclipse.jdt.internal.debug.core.model.JDIThread.findVariable(JDIT\nhread.java:1401)\n        at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.findVariable\n(JDIDebugTarget.java:1363)\n        at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo(JavaDeb\nugHover.java:91)\n        at org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInf\no(JavaTextHover.java:304)\n        at org.eclipse.jface.text.TextViewerHoverManager$2.run(TextViewerHoverMa\nnager.java:98)",
    "The stack trace shows that we\u0027re just calling ArrayList.add(Object). The fact \nthat the index is out of whack probably means that we\u0027ve got a multithreading \nproblem here.",
    "Marking as 2.1 for investigation.",
    "I experienced this again today with build 20021016 (M2).\n\nExact same stack trace, slightly different array size:\n\njava.lang.ArrayIndexOutOfBoundsException: 366080792\nI was not able to reproduce it.  Of possible correlation: I was in the middle of\ndebugging a runtime workspace, I left it paused at a breakpoint for a couple of\nhours while I worked on something else (still in Eclipse but different code).\nI\u0027m not sure if this is when the error occurred, but I thought it was worth\nmentioning.",
    "Fixed in JDIModificationVariable.\nA static initializer block was not declare static (was evaluated every time a\nnew instance was created).",
    "Please verify (darinW).",
    "Yikes. I guess we plugged a \"leak\". Good find. \n\nVerified."
  ],
  "commentCreationDates": [
    "2002-07-18T19:12:22+02:00",
    "2002-08-06T19:51:02+02:00",
    "2002-08-12T21:31:03+02:00",
    "2002-10-18T21:03:51+02:00",
    "2002-12-03T15:31:59+01:00",
    "2002-12-03T15:32:24+01:00",
    "2002-12-04T03:22:53+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "376653368",
      "elements": [
        {
          "method": "java.util.ArrayList.ensureCapacity",
          "source": "ArrayList.java(Compiled Code)"
        },
        {
          "method": "java.util.ArrayList.add",
          "source": "ArrayList.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIModificationVariable.\u003cinit\u003e",
          "source": "JDIModificationVariable.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0",
          "source": "JDIV alue.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0",
          "source": "JDIV alue.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.findVariable",
          "source": " JDIStackFrame.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.findVariable",
          "source": "JDIT hread.java:1401"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.findVariable",
          "source": "JDIDebugTarget.java:1363"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo",
          "source": "JavaDeb ugHover.java:91"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInfo",
          "source": "JavaTextHover.java:304"
        },
        {
          "method": "org.eclipse.jface.text.TextViewerHoverManager$2.run",
          "source": "TextViewerHoverMa nager.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "21701",
      "date": "2002-07-18T19:12:22+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "21701",
  "bugId": "21701",
  "date": "2002-07-18T19:12:22+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}