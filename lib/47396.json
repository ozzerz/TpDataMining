{
  "comments": [
    "the following text:\n-----------------------------------------\n//\n// Created      : 25-Nov-2003, 10:00:37\n// Description  : \n// Author       : Nikolay\n// Copyright    : (c) Teamphone.com Ltd. 2003 - All Rights Reserved\n//\n\n/**\n * @author Nikolay\n */\npublic class A\n{\n   public A()\n   {\n      \n   }\n\n}\ninterface B\n{\n   public method(final int parameter);\n}\n----------------------------------------------------------\ncauses a whole series of (if autobuild is on):\n-----------------------------------------------------------\njava.lang.IllegalArgumentException\n\tat org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:1486)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:701)\n\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations\n(ASTConverter.java:244)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:183)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:81)\n\tat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:354)\n\tat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:247)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartList\nenerGroup.computeAST(SelectionListenerWithASTManager.java:106)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartList\nenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:116)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run\n(SelectionListenerWithASTManager.java:92)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)\n------------------------------------------------------------------------",
    "M5",
    "I will investigate.",
    "Reproduced.",
    "The problem comes from the fact that the interface\u0027s method has no return type.",
    "Fixed and released in HEAD.\nRegression test added.\nIn case of an invalid constructor, the body end and the declaration source end\nwere not set when the invalid constructor had no body. The fixed needs to be\ndone in the parser.",
    "*** Bug 47326 has been marked as a duplicate of this bug. ***",
    "*** Bug 48195 has been marked as a duplicate of this bug. ***",
    "I can not reproduce the IllegalArgumentException in build 20031216\n\nVerified for 3.0M6",
    "Using integration build 200401271238 on win2k sp4 jdk 1.4.2_01 If I start typing\nprivate Key key;\nbetween the java doc for a method and the method body I get a popup saying\nError: Java Ast Creation etc. when I reach the \"v\". Typing the same information\nbefore the java doc does not give the error.\n\nhere is a typical log entry\n\njava.lang.IllegalArgumentException\nat org.eclipse.jdt.core.dom.ASTNode.checkNewChild(ASTNode.java:1101)\nat org.eclipse.jdt.core.dom.ASTNode.replaceChild(ASTNode.java:1055)\nat org.eclipse.jdt.core.dom.BodyDeclaration.setJavadoc(BodyDeclaration.java:87)\nat\norg.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:339)\nat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:268)\nat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:156)\nat org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:932)\nat\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.computeAST(SelectionListenerWithASTManager.java:125)\nat\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:144)\nat\norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run(SelectionListenerWithASTManager.java:99)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",
    "Could you please provide a test case?\nSimply attach the source of the compilation unit you are typing. I believe \nthis is not the same issue than the original problem.",
    "Created an attachment (id\u003d7611)\nThe source code that caused the ast creation error\n\nlook at the line\nprivate Key key \u003d new Key();\nIf the line is not complete I get the popup.",
    "Reproduced the problem.\nI am investigating.",
    "Created an attachment (id\u003d7629)\nReproducable test case\n\nFrederic, you can reproduce it by trying to parse this compilation unit.\nSimply add this test case in the ASTConverter2 tests:\n\t/**\n\t * http://dev.eclipse.org/bugs/show_bug.cgi?id\u003d47396\n\t */\n\tpublic void test0536() throws JavaModelException {\n\t\tICompilationUnit sourceUnit \u003d getCompilationUnit(\"Converter\",\n\"src\", \"test0536\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n//$NON-NLS-4$\n\t\tASTNode result \u003d runConversion(sourceUnit, false);\n\t\tassertNotNull(\"No compilation unit\", result);\n\t}\n\nAfter putting the attached file in the source folder src/test0536.",
    "*** Bug 50849 has been marked as a duplicate of this bug. ***",
    "Fixed.\n\nProblem while recovering, ASTConverter.convert(Javadoc) may be called several \ntimes on same Javadoc. Before we created each times a new Javadoc, but know we \nreuse the same in the global list commentsTable of CU.\n\nSo, before adding the javadoc to body declaration, verify that it has not \nalready a parent...\n\nTest cases added in ASTConverterTest2 and ASTConverterJavadocTest",
    "Question: what is special about the letter v that caused the problem?",
    "I\u0027ve no precise idea about this. My assumption is that jdt-ui at this peculiar \nmoment has requested a build of DOM AST nodes hierarchy on Compilation Unit and \nthen got the bug...\nBut, I\u0027m don\u0027t know jdt-ui code to be able to understand why it does it at this \nmoment.\n",
    "I don\u0027t like closing bugs under this situation. What is bothering me is that\nyour explanation doesn\u0027t account for enough of the symptoms. At the very least,\nit should be determined why the bug is reached only under special situations.\n\nI did a little more testing under Integration 20040128 and the original file\nthat I submitted.\nIf I alter the line \"private Key key \u003d new Key();\"\n1) erase everything on the line except the word private - no error\n2) erase everything on the line except part of the word private - error\n3) erase everything on the line except the word private and Key - error\n4) erase everything on the line except the word private and Key and some letters\nfrom key - no error\n\nThis seems to be dependent on the ability of the parser to make sense of what it\nencounters. But only if the bad line is where it is. If the bad line is before\nthe comment, no problem. I don\u0027t know if this is normal for the incremental\nparsing, but the question has to be asked.",
    "\u003e Question: what is special about the letter v that caused the problem?\n\nshmuel: The exact time of AST calculation is very timing and load dependent.\njdt-ui calculates the AST in the background shortly after the user has stopped\ntyping. So, nothing is special about the letter v, except if you stop typing\nafter it ...\n\nThe fix in comment 15 sounds reasonable and I\u0027m sure Fr?d?ric knows why it is\nfixed now, even if he didn\u0027t explain every detail about it.",
    "I was not clear enough with my answer, when I said \"I have no precise idea \nabout this...\", it was in fact to answer precisely to your question: why when I \ntype \"v\" I got the error...\n\nI didn\u0027t really know why it\u0027s \u0027v\u0027 and not \u0027i\u0027 or \u0027a\u0027 as for compiler, in this \ncase, there\u0027s no difference between \u0027pri\u0027 ,\u0027priv\u0027 , \u0027priva\u0027, \u0027privat\u0027: there \nare all identifiers. \u0027private\u0027 is different as it\u0027s considered as a keyword and \nparse will go through a different way (it\u0027s clear with your different test as \nthe error didn\u0027t occur when whole private is written)...\nIn fact Markus really answer your question.\n\nExplanation was given when I set the bug to fix, perhaps not clear enough, but \nthis explanation was more a reminder for me than an explanation for reporter...\n\n",
    "Explanation accepted. Please note that I did not reopen the bug. I was merely\nasking for clarification. \n\nMy intention was just to call attention to the fact that the error did not\nalways occur. If there was something wrong in the parse logic, this was a good\ntest case. By fixing the AST problem, you were masking the only visible\nmanifestation of such a problem. My experience says that finding reproducible\nproblems like this is 90% of the work, fixing them is 10%. I didn\u0027t want you to\nthrow out something that is a good test case for another group. I understand\nfrom your response that you didn\u0027t.\n\nI\u0027ll drop the subject now.",
    "Don\u0027t worry too much about the \u0027v\u0027. I guessed that the AST creation happened\nafter the user stopped typing. I simply created an example that a user can reach\neasily.\n\u0027v\u0027 as the beginning of \u0027void\u0027 :-).",
    "Verified for 3.0M7"
  ],
  "commentCreationDates": [
    "2003-11-25T10:05:40+01:00",
    "2003-11-25T10:06:40+01:00",
    "2003-11-25T13:57:34+01:00",
    "2003-11-25T14:17:11+01:00",
    "2003-11-25T14:22:39+01:00",
    "2003-11-25T14:59:27+01:00",
    "2003-11-26T13:38:49+01:00",
    "2003-12-07T16:58:30+01:00",
    "2003-12-17T12:05:09+01:00",
    "2004-01-28T15:11:17+01:00",
    "2004-01-28T15:20:20+01:00",
    "2004-01-28T16:04:44+01:00",
    "2004-01-29T16:44:15+01:00",
    "2004-01-29T16:55:10+01:00",
    "2004-01-29T21:48:04+01:00",
    "2004-01-29T23:19:38+01:00",
    "2004-01-29T23:55:29+01:00",
    "2004-01-30T08:42:15+01:00",
    "2004-01-30T10:16:53+01:00",
    "2004-01-30T10:45:31+01:00",
    "2004-01-30T11:59:27+01:00",
    "2004-01-30T12:30:25+01:00",
    "2004-01-30T15:15:52+01:00",
    "2004-02-11T16:08:37+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.setSourceRange",
          "source": "ASTNode.java:1486"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:701"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations",
          "source": "ASTConverter.java:244"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:183"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:81"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:354"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:247"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.computeAST",
          "source": "SelectionListenerWithASTManager.java:106"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java:116"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run",
          "source": "SelectionListenerWithASTManager.java:92"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "47396",
      "date": "2003-11-25T10:05:40+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.checkNewChild",
          "source": "ASTNode.java:1101"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.replaceChild",
          "source": "ASTNode.java:1055"
        },
        {
          "method": "org.eclipse.jdt.core.dom.BodyDeclaration.setJavadoc",
          "source": "BodyDeclaration.java:87"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations",
          "source": "ASTConverter.java:339"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:268"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:156"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:932"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.computeAST",
          "source": "SelectionListenerWithASTManager.java:125"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java:144"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run",
          "source": "SelectionListenerWithASTManager.java:99"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 1,
      "commentIndex": 9,
      "bugId": "47396",
      "date": "2004-01-28T15:11:17+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "47396",
  "bugId": "47396",
  "date": "2003-11-25T10:05:40+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}