{
  "comments": [
    "Using build 200405290105\n\nI\u0027m getting the following exception with a file I\u0027m working on. I can\u0027t seem to \nreplicate the exception in a test class where only the surrounding lines are \nadded.\n\n\npublic class Blah {\n\n\tpublic static void main(String[] args) {\n\t  // The following two lines are not exactly as in the class in \nquestion,\n          // but are here just to make things be syntactically correct\n          String[] lines \u003d new String[1];\n          int count \u003d 0;\n\n          // This is exactly as in the offending class - not sure which \ninstance triggers the exception\n          if ( (/*X:press_any_key_b*/\" \".length() \u003e 1))\n          {\n            lines[count++] \u003d /*X:press_any_key_b*/\" \";\n          }\n\t}\n}\n\n\n\n!MESSAGE An internal error occurred during: \"Java AST creation\".\n!STACK 0\njava.lang.IllegalArgumentException: Invalid string literal : \n\u003e/*X:press_any_key_b*/\" \"\u003c\n\tat org.eclipse.jdt.core.dom.StringLiteral.setEscapedValue\n(StringLiteral.java:179)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1450)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:889)\n\tat \norg.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression\n(ASTConverter.java:936)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:819)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1738)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:913)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1606)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:901)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2053)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1836)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1909)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1812)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2054)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1836)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1909)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1812)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2054)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1836)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:769)\n\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations\n(ASTConverter.java:335)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:273)\n\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:151)\n\tat org.eclipse.jdt.core.dom.ASTParser.convert(ASTParser.java:708)\n\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST\n(ASTParser.java:678)\n\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:574)\n\tat org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST\n(ASTProvider.java:437)\n\tat org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST\n(ASTProvider.java:389)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartList\nenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:125)\n\tat \norg.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run\n(SelectionListenerWithASTManager.java:102)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "If you remove the comment in front of the \" \" string it should work. I will see\nwhy this comment is included in the position of the string literal.",
    "OK, but it _is not_ generating an exception in the test class with the comment \nin place. BTW, it\u0027s not out source and I would rather not have to modify it \nsince we might get an updated version of it.",
    "Also, I forgot to mention that there are similar lines preceeding the ones \nlisted above that don\u0027t seem to trigger the exception.\n\ne.g. the following immediately precede the ones in the first comment\n\nif( !( mode \u003d\u003d gamemode_tournament || mode \u003d\u003d gamemode_head2head ) )\n{\n  if( place \u003d\u003d 0 )\n  {\n    lines[ count++ ] \u003d /*X:new_track*/\"NEW TRACK\";\n    lines[ count++ ] \u003d /*X:record!*/\"RECORD!\";\n  }\n  else if( place \u003c Race.get_top_count( mode ) )\n  {\n    lines[ count++ ] \u003d /*X:local_rank:*/\"RANK:\";\n    lines[ count++ ] \u003d rankstring(place);\n  }\n}\n\nlines[ count++ ] \u003d /*X:press_any_key_a*/\"press any key\";\n\n",
    "I could not reproduce the problem using your test case. Could you please provide\nthe full source of your class?",
    "I tried to add source code from comment 3, but I cannot reproduce. Please\nprovide the whole class. This would help us to reproduce the problem and fix it\nasap.",
    "Created an attachment (id\u003d11548)\nClass that generates exception\n\nI\u0027ve included the offending class - it\u0027s huge, I know, but that\u0027s how we got\nit. I\u0027ve renamed a few strings to protect the guilty and hopefully cover our\nbutts.",
    "Reproduced with this code:\npublic class A {\n\t\n\tvoid foo() {\n\t\tif( (/*X:press_any_key_b*/\" \").length() \u003e 1 );\n\t}\n}\n\nIt is important that the parenthesized expression is only the string literal and\nits comment.\nI am investigating.",
    "Could I ask that you remove the attachment now that you have reproduced the \nexception? I really should not have sent the source as I guess it\u0027s probably \ncovered by an NDA. Thanks",
    "I will ask the administrator to get rid of this attachment.",
    "I have a fix for it. It needs to be revised before being released.",
    "Attachment has been removed.",
    "Created an attachment (id\u003d11564)\nPatch to apply on HEAD\n",
    "Created an attachment (id\u003d11565)\nPatch for the converter tests\n\nNew regression tests. Also need to update the converter library.",
    "Fixed and released in HEAD.\nRegression tests added.",
    "Verified for 3.0RC2"
  ],
  "commentCreationDates": [
    "2004-06-03T17:40:07+02:00",
    "2004-06-03T17:43:53+02:00",
    "2004-06-03T17:47:14+02:00",
    "2004-06-03T17:52:52+02:00",
    "2004-06-03T18:03:16+02:00",
    "2004-06-03T18:18:10+02:00",
    "2004-06-03T19:07:57+02:00",
    "2004-06-03T19:59:02+02:00",
    "2004-06-03T20:09:20+02:00",
    "2004-06-03T20:15:49+02:00",
    "2004-06-03T20:40:33+02:00",
    "2004-06-03T21:19:42+02:00",
    "2004-06-03T21:56:10+02:00",
    "2004-06-03T22:00:04+02:00",
    "2004-06-07T18:02:43+02:00",
    "2004-06-11T13:29:24+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Invalid string literal :  \u003e/*X:press_any_key_b*/\" \"\u003c",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.dom.StringLiteral.setEscapedValue",
          "source": "StringLiteral.java:179"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:889"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression",
          "source": "ASTConverter.java:936"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:819"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1738"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:913"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1606"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:901"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:2053"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1836"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1909"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1812"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:2054"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1836"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1909"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1812"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:2054"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:1836"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:769"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations",
          "source": "ASTConverter.java:335"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:273"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTConverter.convert",
          "source": "ASTConverter.java:151"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.convert",
          "source": "ASTParser.java:708"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.internalCreateAST",
          "source": "ASTParser.java:678"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createAST",
          "source": "ASTParser.java:574"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST",
          "source": "ASTProvider.java:437"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST",
          "source": "ASTProvider.java:389"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform",
          "source": "SelectionListenerWithASTManager.java:125"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$1.run",
          "source": "SelectionListenerWithASTManager.java:102"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "65562",
      "date": "2004-06-03T17:40:07+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "65562",
  "bugId": "65562",
  "date": "2004-06-03T17:40:07+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}