{
  "comments": [
    "Good day,\n\nI have been trying to get the ChangeSummary to serialize both across the wire\nand to a file with no luck.  The problem presents itself when I try to\nendLogging() when it says that it is \"Not currently logging\":\n\nException in thread \"P\u003d216782:O\u003d0:CT\" java.lang.IllegalStateException: Not\ncurrently logging\n\tat\norg.eclipse.emf.ecore.sdo.impl.EChangeSummaryImpl.endLogging(EChangeSummaryImpl.java:240)\n\tat SDOPrototypeClient.main(SDOPrototypeClient.java:123)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)\n\tat java.lang.reflect.Method.invoke(Method.java:386)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:78)\n\nThe code that generated this is the following:\n\n\t\t\tRootObjectImpl rootImpl \u003d\n(RootObjectImpl)SDOPrototypeFactory.eINSTANCE.createRootObject();\n\t\t\tEDataGraph dataGraph \u003d SDOFactory.eINSTANCE.createEDataGraph();\n\t\t\tDataObject root \u003d dataGraph.createRootObject(rootImpl.getType().getURI(),\n\"RootObject\");\n\t\t\tdataGraph.getChangeSummary().beginLogging();\n\t\t\tCustomer customer \u003d (Customer)root.createDataObject(\"customer\");\n\n\t\t\tcustomer.setCustNum(12345);\n\t\t\tcustomer.setAddress(\"1234 Main Street\");\n\t\t\tcustomer.setFullName(\"Bob MacKenzie\");\n\t\t\tcustomer.setEmail(\"hoser@canada.ca\");\n\n\t\t\tcustomer.setFullName(\"blah\");\n\n\t\t\ttry {\n\t\t\t\tOutputStream out \u003d new FileOutputStream(\"C:\\\\order.ser\");\n\t\t\t\tObjectOutputStream oo \u003d new ObjectOutputStream(out);\n\t\t\t\too.writeObject(dg);\n\t\t\t\too.close();\n\t\t\t\tout.close();\n\n\t\t\t\tInputStream in \u003d new FileInputStream(\"C:\\\\order.ser\");\n\t\t\t\tObjectInputStream oi \u003d new ObjectInputStream(in);\n\t\t\t\tEDataGraph graph \u003d (EDataGraph)oi.readObject();\n\t\t\t\toi.close();\n\t\t\t\tin.close();\n\t\t\t\tgraph.getChangeSummary().endLogging(); // \u003c-- Line 123\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();  \n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\te.printStackTrace();  \n\t\t\t}\n\n\nI am running:\nEclipse Version: 3.0.1\nBuild id: 200409161125\n\nThe plugins for this I am using are:\norg.eclipse.emf.commonj.sdo_2.0.0\norg.eclipse.emf.ecore_2.0.1\norg.eclipse.emf.common_2.0.1\norg.eclipse.emf.ecore.change_2.0.1\norg.eclipse.emf.ecore.xmi_2.0.1\norg.eclipse.emf.ecore.sdo_2.0.1\n\nSean",
    "SDO 1.0 doesn\u0027t specify that the state of change logging should be serialized.\nThis is being addressed in SDO 1.1 (currently under development).\n\nHowever, EDataObject::summarize() is called before serialization occurs, so that\nthe change summary reflect changes that happened since logging began.\n\nSo, change logging is always off after deserialization, and the change summary\ncontains changes that happen between when logging began and serialization.",
    "Good day,\n\nI look forward to the SDO 1.1 release, hopefully it will be sooner rather than\nlater.\n\nHowever, when I ran a test of the ChangeSummary object it does not persist the\nChangeSummary object.  Using the code I posted as a template, I then grabbed the\nChangeSummary object and looked at its contents.  If I did this before the\nserialization step, the ChangeSummary object returned a list of length 2 (a\nchange to the RootObject and a change to the Customer object).  If I look at the\nChangeSummary after serialization, it is empty.  I turned off logging before\neach case to make sure the logging status did not interfere with the results.\n\nThe contents of the serialized file (minus the Java serialization overhead) are:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003csdo:datagraph xmlns:SDOPrototype\u003d\"http://SDOPrototype/SDOPrototype.ecore\"\n    xmlns:sdo\u003d\"commonj.sdo\"\u003e\n  \u003cchangeSummary/\u003e\n  \u003cSDOPrototype:Customer fullName\u003d\"first:663 last:3406\"\n      address\u003d\"333 Oak St.\" email\u003d\"idVal.0@66.com\" creditScore\u003d\"82-785-624-681\"/\u003e\n\u003c/sdo:datagraph\u003e\n\n",
    "The change summary does get serialized.\nCan I see your code, please?\nThe contents of order.ser when I run the code you posted is:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003csdo:datagraph xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\"\nxmlns:com\u003d\"http:///com.ecore\"\n    xmlns:sdo\u003d\"commonj.sdo\" xmlns:sdo_1\u003d\"http://www.eclipse.org/emf/2003/SDO\"\u003e\n  \u003cchangeSummary objectsToDetach\u003d\"#//@eRootObject/@customer\"\u003e\n    \u003cobjectChanges key\u003d\"#//@eRootObject\"\u003e\n      \u003cvalue xsi:type\u003d\"sdo_1:EChangeSummarySetting\" featureName\u003d\"customer\"\nset\u003d\"false\"/\u003e\n    \u003c/objectChanges\u003e\n    \u003cobjectChanges key\u003d\"#//@eRootObject/@customer\"\u003e\n      \u003cvalue xsi:type\u003d\"sdo_1:EChangeSummarySetting\" featureName\u003d\"custNum\"\ndataValue\u003d\"0\"\n          set\u003d\"false\"/\u003e\n      \u003cvalue xsi:type\u003d\"sdo_1:EChangeSummarySetting\" featureName\u003d\"address\"\nset\u003d\"false\"/\u003e\n      \u003cvalue xsi:type\u003d\"sdo_1:EChangeSummarySetting\" featureName\u003d\"fullName\"\nset\u003d\"false\"/\u003e\n      \u003cvalue xsi:type\u003d\"sdo_1:EChangeSummarySetting\" featureName\u003d\"eMail\"\nset\u003d\"false\"/\u003e\n    \u003c/objectChanges\u003e\n  \u003c/changeSummary\u003e\n  \u003ccom:RootObject\u003e\n    \u003ccustomer custNum\u003d\"12345\" address\u003d\"1234 Main Street\" fullName\u003d\"blah\"\neMail\u003d\"hoser@cw4anada.ca\"/\u003e\n  \u003c/com:RootObject\u003e\n\u003c/sdo:datagraph\u003e",
    "Created an attachment (id\u003d15631)\nTest client to show serialization\n\nThis code is the test client I have been using to investigate the uses of SDO\nand issues around serialization.\n",
    "Is it possible it is a version issue here?  I am using the 2.0.1 release code. \nWere your tests done on a more recent build?  If so, I can retest with that and\nsee if it solves the issue I am seeing.",
    "If you replace dg by dataGraph at line 100 in your code (oo.writeObject(dg)) you\nshould see the behavior you expect!\nThis is working with 2.0.1 too.\n"
  ],
  "commentCreationDates": [
    "2004-11-03T14:41:34+01:00",
    "2004-11-03T19:26:08+01:00",
    "2004-11-03T19:49:37+01:00",
    "2004-11-03T19:56:11+01:00",
    "2004-11-03T20:06:51+01:00",
    "2004-11-03T20:09:20+01:00",
    "2004-11-03T23:14:47+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Not currently logging",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.sdo.impl.EChangeSummaryImpl.endLogging",
          "source": "EChangeSummaryImpl.java:240"
        },
        {
          "method": "SDOPrototypeClient.main",
          "source": "SDOPrototypeClient.java:123"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:79"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:41"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:386"
        },
        {
          "method": "com.intellij.rt.execution.application.AppMain.main",
          "source": "AppMain.java:78"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "77629",
      "date": "2004-11-03T14:41:34+01:00",
      "product": "EMF",
      "component": "SDO",
      "severity": "major"
    }
  ],
  "groupId": "77629",
  "bugId": "77629",
  "date": "2004-11-03T14:41:34+01:00",
  "product": "EMF",
  "component": "SDO",
  "severity": "major"
}