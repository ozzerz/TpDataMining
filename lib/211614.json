{
  "comments": [
    "These tests should work (and in general we should support) running the system with an alternate source of trust, set via command line properties. Right now the cacerts file is defaulted in the frameworkStart method of SignedBundleHook.\n\nThere are a couple potential issues here:\n1. should we somehow parameterize the TrustEngine itself (ie: not a KeyStore)\n2. should we assume the default is a KeyStore, and if so we parameterize\n     a. Type\n     b. File (or should this be arbitrarily something that can be an inputstream , i.e.: a KeyStore is not necessarily file-based, although our current KeyStoreTrustEngine is)\n     c. Password (how do we gather this?)\n   \nTom, thoughts?\n\nEric, can you take a look at this one as you extend the SignedContent tests with more negative cases?\n\n\nGet the following exception:\n\njava.io.FileNotFoundException: /opt/SUN/jre1.5.0_12/lib/security/cacerts (Permission denied)\n\tat java.io.FileOutputStream.open(Native Method)\n\tat java.io.FileOutputStream.\u003cinit\u003e(Unknown Source)\n\tat java.io.FileOutputStream.\u003cinit\u003e(Unknown Source)\n\tat org.eclipse.osgi.internal.service.security.KeyStoreTrustEngine.getOutputStream(KeyStoreTrustEngine.java:243)\n\tat org.eclipse.osgi.internal.service.security.KeyStoreTrustEngine.doRemoveTrustAnchor(KeyStoreTrustEngine.java:167)\n\tat org.eclipse.osgi.service.security.TrustEngine.removeTrustAnchor(TrustEngine.java:96)\n\tat org.eclipse.equinox.security.junit.SignedBundleTest.testSignedContent02(SignedBundleTest.java:189)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat junit.framework.TestCase.runTest(TestCase.java:164)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:120)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:58)\n\tat org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:570)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:362)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:175)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:515)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:455)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1193)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1169)\n\tat org.eclipse.core.launcher.Main.main(Main.java:30)",
    "(In reply to comment #0)\n\u003e These tests should work (and in general we should support) running the system\n\u003e with an alternate source of trust, set via command line properties. Right now\n\u003e the cacerts file is defaulted in the frameworkStart method of SignedBundleHook.\n\u003e \n\u003e There are a couple potential issues here:\n\u003e 1. should we somehow parameterize the TrustEngine itself (ie: not a KeyStore)\n\u003e 2. should we assume the default is a KeyStore, and if so we parameterize\n\u003e      a. Type\n\u003e      b. File (or should this be arbitrarily something that can be an\n\u003e inputstream , i.e.: a KeyStore is not necessarily file-based, although our\n\u003e current KeyStoreTrustEngine is)\n\u003e      c. Password (how do we gather this?)\n\u003e \n\u003e Tom, thoughts?\n\nI think the default TrustEngine we support in the framework should have the following properties:\n\n1) File base KeyStore\n2) Default to a cacerts file found in the running VM.  Perhaps allow a path to be specified as a config property\n3) Read-only.  No way to configure with a password to add/remove trust anchors.\n4) If the path to the keystore file does not exist then an error should be logged and the trust engine should not be registered.\n5) Maybe a way to totally disable the default trust engine.\n\nLeave all other \"fancy\" trust engine flavors to a bundle to provide in their own TrustEngine service implementation.",
    "I released changes to the default trust engine to make it read-only.  The testcases have been updated to use their own trust engine by Eric.  I pulled out some of the common code for registering the testcase\u0027s trustengine into CoreSecurityTest.\n\nI made the tests directly use the KeyStoreTrustEngine implementation instead of a DummyTrustEngine for the tests.  It is ok to use the internal class from org.eclipse.osgi in the tests since we want to unit test this code.  Marking this bug as fixed."
  ],
  "commentCreationDates": [
    "2007-11-30T17:31:40+01:00",
    "2007-11-30T21:40:59+01:00",
    "2007-12-04T19:04:10+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "/opt/SUN/jre1.5.0_12/lib/security/cacerts (Permission denied)",
      "elements": [
        {
          "method": "java.io.FileOutputStream.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.internal.service.security.KeyStoreTrustEngine.getOutputStream",
          "source": "KeyStoreTrustEngine.java:243"
        },
        {
          "method": "org.eclipse.osgi.internal.service.security.KeyStoreTrustEngine.doRemoveTrustAnchor",
          "source": "KeyStoreTrustEngine.java:167"
        },
        {
          "method": "org.eclipse.osgi.service.security.TrustEngine.removeTrustAnchor",
          "source": "TrustEngine.java:96"
        },
        {
          "method": "org.eclipse.equinox.security.junit.SignedBundleTest.testSignedContent02",
          "source": "SignedBundleTest.java:189"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:164"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:130"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:120"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run",
          "source": "JUnit3TestReference.java:130"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.TestExecution.run",
          "source": "TestExecution.java:38"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:460"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:386"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:58"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run",
          "source": "CoreTestApplication.java:24"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:570"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:195"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:362"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:175"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:515"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:455"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1193"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1169"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:30"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "211614",
      "date": "2007-11-30T17:31:40+01:00",
      "product": "Equinox",
      "component": "Incubator",
      "severity": "normal"
    }
  ],
  "groupId": "211614",
  "bugId": "211614",
  "date": "2007-11-30T17:31:40+01:00",
  "product": "Equinox",
  "component": "Incubator",
  "severity": "normal"
}