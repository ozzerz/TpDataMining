{
  "comments": [
    "To begin testing and preparing for Callisto update sites, I\u0027ve create a test site, that uses 3.1.2 platform, and downloads a bunch of 3.1 features from the 10 projects participating in Callisto. \n\nIt get\u0027s started (but seems slower than expected) but always fails ... sometimes during \"validation\", more often somewhere between 30-70% done (judging from progress monitor, which may not be accurate). \n\nHere\u0027s the URL to the temporary test site (please ignore the \"webtools\" in the URL -- its also temporary :) \n\nhttp://download.eclipse.org/webtools/testUpdates/\n\nAfter severaly attempts I notice the svchost.exe process in Windows has grown to 35,000 handles .... so makes me guess some URL connections are being opened but not closed? \n\nThe actual erros in the log usually say something similar to \"timeout\" or \"address not found\" (even though all other forms and checks of internet connects are fine). \n\nI\u0027ll try rebooting :) ... but thought I\u0027d enter this now, since it is blocking the effort to test and prototype a Callisto update site. (and, we have the a deadline of getting a version working for M5).",
    "Denis, I\u0027m CCing you on this bug for your awareness of these tests. If my guess is correct,and connections being left open, that might look odd (or, even be harmful?) to Eclipes Infrastructure if keep-alive connections are being left open on that end ... so, please let us know if you seeing anything detrimental (and we could at least scale back the test if required). \n\n\n",
    "Kim, CCing you as I think you are doing similar, smaller scale tests, just for platform. \n\n\n\n\n",
    "Thanks for adding me to this.\n\nKeepAlives are enabled on both www.eclipse.org and download/update, but their idle timeout is fairly low (6 seconds). After that, Apache kills the connection.  I haven\u0027t seen anything unusual at my end.\n\nOne thing to check is whether UM created a new \"internal\" connection when it gets a redirect.  If that had been the case, I thought we would have seen it sooner than today because all of the ibm.com Update Manager accesses have been using redirects for years now. The only difference is that your site.xml is amazingly huge.\n\nD.",
    "David, if you go through our VPN you are not redirected to the IBM mirrors.  At least for us in Canada, this is the case.",
    "Thanks Kim. I\u0027ve tried it both ways (internal network and completely external ... unless Eclipse has some special mirroring with Time-Warner Cable :) \n\nSame symptoms both cases. \n\nOh, and a reboot didn\u0027t help, but I also didn\u0027t see the handles in svchost.exe process increase above a couple of thousand ... so, I guess that 35,000 number was a red-herring ... from some other buggy software :( and not related to this problem. \n\n",
    "(In reply to comment #3)\n\n\u003e The only difference is that your site.xml is\n\u003e amazingly huge.\n\u003e \n\nYes, and just to clarify, this site.xml is a quickly-cobbled-together listing of all features and plugins 3.1 related update, (where the \"listing\" is archive tags associating a \"request path\" and \"redirect URL\" (where it is redirected to nearest mirror that contains the file) ... I don\u0027t know if that size is related to this problem, but, I hope note. I figured it would be a good \"stress test\" if nothing else ... since I suspect the final Callisto site.xml might be smaller, say, 1/4th of this one ... but ... not an order of magnitude smaller. \n\n\n \n",
    "Note: I\u0027ve now moved this test to \n\nhttp://download.eclipse.org/callisto/testUpdates/\n\n(since it now exists, and I need the other site for other work). \n\nAlso, I\u0027ve removed some features, so the current set installs for me (at least, it usually does, but I\u0027ve only tried a few times). I can easily add more features back, if needed for testing/diagnosis, but I intend to prepare a more \"selectable\" set before long, since this problem with peformance is blocking forward progress on any sort of large update plan). ",
    "This is pretty big site, i don\u0027t think we ever tested on such a big site.\nhow many feature were selected for installation?\nCan you tell us more about the server?",
    "David I have an idea that might be worth investigating if you realize UM doesn\u0027t deal with redirects gracefully.\n\nAssuming site.xml, currently a static file, contains 300 url\u003d\"\".  For each of those url\u0027s, we\u0027re hitting eclipse.org to get the best mirror, then redirect UM to the mirror site for the download (for a total of 601 actual http requests, including site.xml).\n\nWhy don\u0027t we simply send the client a dynamically-generated \"site.xml\" when site.xml is requested?\n\nSay I transparently intercept an Update Manager request for site.xml, and pass that on to a PHP script. The static site.xml can be processed, sending it as-is back to the browser, but replacing each url\u003d\"...?r\u003d1\u0026file\u003d...\"  with url\u003d\"http://bestmirror.com/thefile.jar\" as it\u0027s parsed.  The result is one request for site.xml containing a bunch of url\u003d\"\" statements that UM can access directly - no redirects.\n\nWhat do you think?  The major drawback is that I wouldn\u0027t track the actual 300 downloads for stats... But the big plus is that it\u0027s more efficient for large UM sites.\n\nD.",
    "That\u0027s a great idea. However it might also worth checking that the site.xml is only obtained once.",
    "(In reply to comment #8)\n\u003e This is pretty big site, i don\u0027t think we ever tested on such a big site.\n\u003e how many feature were selected for installation?\n\u003e Can you tell us more about the server?\n\u003e \n\nI\u0027ve nearly forgotten what\u0027s at that test site, but do recall getting \nJDT, PDE, WTP,  GMF, EMF, GEF, JEM  \nto install fairly well, but when ever I tried to \"grow\" it to include anything \nfrom \nDTP, BIRT, TPTP, VE\n\nI would start getting the \"funny errors\". So, I\u0027d stay that\u0027s about \"half\" of what we need for Callisto. \n\n\nThe server? I can\u0027t say much ... Eclipse.org ... I tried from within IBM (which I think always goes to a fullmoon mirror and from my \"personal\" ISP (Time-Warner Cable, 3Mbs) with basically same results. \n",
    "(In reply to comment #10)\n\u003e That\u0027s a great idea. However it might also worth checking that the site.xml is\n\u003e only obtained once.\n\nNot only is that a great idea, it has always been supported by Update :-). Update has support for custom site types, of which the XML-backed one is just the default. It is possible to register a new site type (and a ISite object factory) so that features and other entries of the ISite object are obtained dynamically instead from a static XML file.\n\n",
    "(In reply to comment #9)\n\n\u003e \n\u003e Why don\u0027t we simply send the client a dynamically-generated \"site.xml\" when\n\u003e site.xml is requested?\n\u003e \n\nWell, the stat\u0027s are pretty important! But, I\u0027ve always assumed at some point this would all be done more dynamically, but assumed better to start off staticically and go from there. Also, there was two advantages to the \"semi-static\" approach, in addition to better stats. 1. That it could fit into mirrors system better (since the site.xml itself could be replicated) and 2. There\u0027s a certain comfort to a static file that you can have it, test it, feel someone warm and fuzzy with it, and then deploy when ready. None of these rule out your ideas, but that\u0027s just to explain my thinkng. \n\nPerhaps you could \"prototype\" a dynamic site.xml system .. if you were volunteering :) \n\nAnd .. recall .. my intent was not to test frequent re-directs, my (orignal) intent was to just start testing some big honking updates! :) \n\n\n",
    "If you are interested, there was another, more \"selectable\" prototype, still implemented via the same xml format, individual redirects, but at \n\nhttp://download.eclipse.org/callisto/testUpdates/proto2.xml\n\nIf I recall, it has various pieces of \nJDT, PDE, WTP,  EMF, GEF, and JEM \n\nThe few time I tried it, it always succeeded (but its intent was more for high level UI review .. nt so much \"load testing\".). \n",
    "So, how can we make progress on this bug. \nCan others reproduce it? \n\nIf it helps, I\u0027ve done another small test, one with \"direct\" http references, another using the \"nearest mirrored\" form. Its shows one has the problem, the other does not. This test uses only EMF \"pre-reqs\" for a 3.1.1 platform. \n\nI was hoping to use this for our WTP 1.0.1 update \nsite, so, since can not, it truly is blocking us on the 3.1.x streams and I\u0027ll have to find another solution ... I guess point everyone directly to eclipse.org?\nSince not all WTP pre-req\u0027d products are on all mirrors? \n\nSo, the two tests sites can be seen using \nhttp://download.eclipse.org/callisto/testUpdates/site-emf-direct.xml\nor \nhttp://download.eclipse.org/callisto/testUpdates/site-emf-mirrored.xml\n\nIt seems to me the first question is: Does this fail truely due to an \nissue in update mangager, or, could it be the \"nearest mirror\" script sometimes \nfails, or takes too long to return a response? Anyone know how \"we\" can tell? \nAny debug flags to turn on, or anything? \n\n\nThe \"nearest mirror\" form fails at different points, with \nerrors, such as, \n\n!ENTRY org.eclipse.update.core 4 0 2006-02-21 14:05:51.310\n!MESSAGE Unable to retrieve remote reference \"http://www.eclipse.org/downloads/download.php?r\u003d1\u0026file\u003d/tools/emf/updates/plugins/org.eclipse.emf.ecore.sdo.doc_2.1.1.jar\". [Operation timed out: connect:\ncould be due to invalid address]\n!STACK 0\njava.net.SocketException: Operation timed out: connect:could be due to invalid address\n        at java.net.PlainSocketImpl.socketConnect(Native Method)\n        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:372)",
    "To help troubleshoot, may I recommend the following:\n\n- add a reference to a jar file that you know for a fact doesn\u0027t exist, on a server that is known to respond (for instance, download.eclipse.org/somedarnupdate.jar) to see how UM handles 404 - file not found\n\n- add a reference to a jar file to some bogus site, to see how UM handles a host not being there alakazam.eclipse.org/someupdate.jar)\n\n- put a jar file in a location that typically returns \"forbidden\" to see how UM handles a tupical 4xx forbidden code - you may have to poke around for this\n\nD.",
    "And, do you mean these for \"nearest mirror\" form? Or direct http form? \n\nGranted I was not intentionally testing \"not found\", but due to typos, I\u0027ve often seen the \"not found\" (first in your list) ... and UM doesn\u0027t handle too well, but does does print a 404 not found error in console. (Guess maybe you wanted to compare exact errors?). \n\nI do know too, if there\u0027s absolutely nothing valid, the UM does not even get to the  \"select\" dialog ... gives an error that \"no valid features found on site\". \n\nThe \"nearest mirror\" errors I am seeing with the provided tests, occur after the selection list, and UM does indeed start validating and downloading some updates, and then fails later due to what\u0027s in an archive tag. \n",
    "(In reply to comment #17)\n\u003e And, do you mean these for \"nearest mirror\" form? Or direct http form? \n\nI meant directly, so you can see how UM deals with errors.  The fun part of dealing with mirrors is that they are wildly unpredictable.\n\nThere was a time when download.php used to attempt to fetch the remote file as a sanity check before sending the redirect to the client (making the process 100% accurate) but the cost of doing so (in time and cycles) was astronomical.\n\nIf UM doesn\u0027t gracefully deal with http errors, then I would recommend putting all the callisto files in the same directory and using the traditional \u003csite mirrorsURL\u003d\"\"\u003e as this has been proven to work so far - but even that is not foolproof. This does mean duplicate files, but whatcha gonna do.\n\nD.",
    "Just FYI ... I see the \"copy all to Callisto\" to be a good last-resort solution that solves Callisto specific problem, but does not really solve (one of) the problems that Eclipse.org has in general, that\u0027s how \"other\" projects (even non Callisto projects) can refer to other pre-req\u0027d projects in their own update sites ... to get pre-reqs more automatically, without them telling their users to simply go through several, multiple sites and several, multiple installs. Currently, those \"third party\" adopters have no choice but to do that, or to refer directly to eclipse.org ... not making use of mirrors. ASAIK. I was hoping Callisto would become a \"best practice\" way of doing update sites ... and everyone making copies of everything is not a best practice. \n\nSo, I\u0027m still holding out that UM and the \"nearest mirror\" script can be made more robust. \n\n",
    "(In reply to comment #19)\n\u003e Just FYI ... I see the \"copy all to Callisto\" to be a good last-resort solution\n\u003e that solves Callisto specific problem, but does not really solve (one of) the\n\u003e problems that Eclipse.org has in general, that\u0027s how \"other\" projects (even non\n\u003e Callisto projects) can refer to other pre-req\u0027d projects in their own update\n\u003e sites ... to get pre-reqs more automatically, without them telling their users\n\u003e to simply go through several, multiple sites and several, multiple installs.\n\nI completle agree with this. I\u0027ve already opened bug 111730 and bug 106281 a while back which request such capabilities. I think bug 115042 would also be a nice enhancement.\n\n\n",
    "(In reply to comment #18)\n\n\u003e There was a time when download.php used to attempt to fetch the remote file as\n\u003e a sanity check before sending the redirect to the client (making the process\n\u003e 100% accurate) but the cost of doing so (in time and cycles) was astronomical.\n\nBTW, did you mean \"get the remote file\" completely? I can see why that would be expensive! But what about smaller quicker requests ... such as to make a HEAD request, instead of a GET request, and just verify the size reported is \u003e 0, or similar? Think this would improve accuracy? (If, indeed, this is even the problem in this case). \n",
    "\u003e BTW, did you mean \"get the remote file\" completely?\n\nNo, I worded that really badly. Sorry.\n\nWe did what you said. It was absolutely accurate, but the extra overhead (small, but multiplied by the number of downloads we get per minute) made our site slow and sluggish so I stopped.\n\nD.",
    "BTW, a bit more \"data\". \n\nAfter seeing this problem in update manager, I tried simply pasting a specific \nrequest in my browser ... and it gave a little better error message :) \n\n\"The server at mirrors.cat.pdx.edu is taking too long to respond.\"\n\nThe URL I was attempting to use was \nhttp://www.eclipse.org/downloads/download.php?r\u003d1\u0026file\u003d/eclipse/updates/3.2milestones/plugins/org.apache.ant_1.6.5.200602171115.jar\n\nThe URL I was being redirected to was \nhttp://mirrors.cat.pdx.edu/eclipse/eclipse/updates/3.2milestones/plugins/org.apache.ant_1.6.5.200602171115.jar\n\n\nI tried a number of times, over and over, sometimes it worked and I got a jar (from anohter site) but sometimes it failed ... always at this same site! \n\nI hope this whole problem isn\u0027t just due to one or few \"bad mirrors\" out there. \nIs there anything \"we\" do to insure the mirror servers matches are data returned from the nearest mirror script? You know, a daily check or something? Seems like a \"HEAD\" request for file size would catch this sort of unresponsive problem. But, if done in \"real time\", the script would have to be \"smart\" enough to still give a fast response, if first HEAD request didn\u0027t respond quickly ... I guess just move down the list and try the next? Or, I\u0027m wondering, if the nature of this problem is such that sometimes mirror sites go down for a while, so we would not have to literally check during each request .... but once every hour or something? \n\nThanks for any info. \n\n\n\n\n\n\n\n",
    "\u003e I hope this whole problem isn\u0027t just due to one or few \"bad mirrors\" out there. \n\nLikely.  Like I said in Comment 18, The fun part of dealing with mirrors is that they are wildly unpredictable. The server can, and does, weed out the bulk of the problems by polling each mirror every hour to make sure they\u0027re up to date.\n\n\n\u003e Is there anything \"we\" do to insure the mirror servers matches are data\n\u003e returned from the nearest mirror script?\n\nAbsolutely not. In fact, any one mirror could introduce backdoors and worms into the code and repackage the JAR files.  That\u0027s why you run md5 checksums. Don\u0027t expect the server to run md5 sums against mirror files - we might as well just serve the files ourselves, and even there it wouldn\u0027t even account for any transmission errors from us to you.\n\n\n\u003e You know, a daily check or something?\n\u003e Seems like a \"HEAD\" request for file size would catch this sort of unresponsive\n\u003e problem. \n\nThis solves nothing, because any mirror could drop off the planet at any time. They can delete any file at any time. Determining correct transfer and transfer integrity is a task best suited for the client.\n\n\n\u003e But, if done in \"real time\", the script would have to be \"smart\"\n\u003e enough to still give a fast response, if first HEAD request didn\u0027t respond\n\u003e quickly \n\nHow can eclipse.org servers, in Canada, possibly determine that transfer between a mirror in Germany and a client the UK is fast enough?\n\nThe server is currently doing everything it realistically can to ensure you get a good mirror, but like any distributed system, it\u0027s not guaranteed to work 100% of the time. I believe the client needs to handle connection timeouts and File Not Found errors gracefully. Verifying data integrity is another bag of beans.\n\nD.",
    "(In reply to comment #24)\n\u003e \n\u003e \u003e Is there anything \"we\" do to insure the mirror servers matches are data\n\u003e \u003e returned from the nearest mirror script?\n\u003e \n\u003e Absolutely not. In fact, any one mirror could introduce backdoors and worms\n\u003e into the code and repackage the JAR files.  That\u0027s why you run md5 checksums.\n\nSorry, I wasn\u0027t clear. I didnt\u0027 mean that type of data. I meant the redirection host name (as \u0027data\u0027) ... the \"nearest neighbor\" script is telling us to go to \n\"mirrors.cat.pdx.edu\" ... but, it \"obvious\" that it can not even be connected to, to I\u0027d call that \"bad data\". \n\n\n\u003e \n\u003e \u003e Seems like a \"HEAD\" request for file size would catch this sort of \n\u003e\u003e unresponsive problem. \n\u003e \n\u003e This solves nothing, because any mirror could drop off the planet at any time.\n\u003e They can delete any file at any time. Determining correct transfer and transfer\n\u003e integrity is a task best suited for the client.\n\u003e \n\nI do not think its all one or the other. I suspect both the mirror scripts AND UM need to me made more robust. You can imagine that if UM keeps asking for a URL, and  the \"nearest mirror\" script keeps returning an unresponsive host, e.g. \"mirrors.cat.pdx.edu\" then no progress can ever be made by UM. Its one thing to handle some occasional odd file deletion, etc., but, seems our problem is one of probability over many attempts ... and, for the number of requests that Callisto will need (under current plan), the probability of failure durng any one of the hundreds of requests (for one whole install) is near 1. \n\nBut ... you do say, we \"polling each mirror every hour to make sure they\u0027re up to date\" ... so, maybe there is no more robustness that can be achieved in the mirroing system? If, hypothetically, some were to write a simple program independent of UM, to repeatedly ask for the nearest mirror, and then ask that mirror for a file, and we checked if the file was retrievable, what would you expect the error (failure) rate to be? That is, at what level of failure would you agree there was a problem with mirroring system? (I\u0027m just asking since I have no experience in this area). \n\n\nSimilarly .. UM should re-try a certain number of times and if the connection is bad .. then what? Or ... if the file has been delted from mirror, then what? Default back to eclipse.org? That might work. Then a high failure rate in mirrors, just gets translated to higher bandwidth on eclipse.org ... but, that is kind of the correct fall back, I think. Right? \n\n\n",
    "\u003e what would you\n\u003e expect the error (failure) rate to be?\n\n2.2% failure rate, measured in January 2005.\n\n\n\u003e Or ... if the file has been delted from mirror, then what?\n\u003e Default back to eclipse.org?\n\n+1 !!!\n\nI think this is bang on - totally acceptable, and most likely the simplest solution of them all. UM could even have a retry threshold before falling back to the main server, but that\u0027s getting fancy.\n\n\n\nD.",
    "So, as we near critical point for Callisto M5, the alternatives are\n\n1. Do not use \"nearest mirror\" URL for each jar file, but instead use only one \nmirror list at beginning, and let user pick one. \n\n2. Do not use mirrors at all. (I\u0027m sure this sounds outrageous to some, but ... \nfor a milestone? think there\u0027s a chance? If extra bandwidth purchased?). \n\nI do not much like option 1. since on the surface appears to require a big mass copy of all the project\u0027s individual update sites to the callisto directory. \nNot much of an achievement, if you ask me. \n\nBut, maybe there\u0027s an alternative to the mass copy. If we had something like bug 123009 implemented by download.php script, then we could handle \"internally\" with Callisto\u0027s site.xml file -- that is, still one mirror choice at the beginning, but we\u0027d know that mirror contained every project needed by Callisto, then archive tags could use simple relative URLs, as we do in WebTools project.  Or, similarly, we could send note to our beloved mirror partners and ask them (or specify to them, that \"mirroring /download.eclipse.org/callisto/.... \nMEANS THAT they have mirrored the 10 projects of Callisto, in matching (relative) directory structured.  Sound doable? \n\n\n",
    "This might be a good time (Tuesday morning) for core teams to observe \nupdating from Callisto update site. \n\nhttp://download.eclipse.org/callisto/releases/\n\nPerhaps servers are busy ... but status doesn\u0027t seem to show it. \nhttps://dev.eclipse.org/committers/help/status.php\n\nEverytime I try to install something it fails (well, 80% of the time). \nThe error is always either \"access forbidden\" or \"not found\" ... and always \na different jar. \n\n",
    "Changed title to reflect this is no longer a simulation. (Just pre-release). ",
    "Created an attachment (id\u003d35857)\nBjorn\u0027s Mar 7 Callisto install problems log\n\nI\u0027m having the same seemingly random problems with installing. I\u0027ve attached some notes of the problems I found along with screenshots of what I saw.",
    "Given the randomness of the failures, I would think that if the Update Manager did a retry on an IO failure that it would finally download the whole thing. Or does it retry already? From what it looks like to me, the server is throttling back the client (for some reason).",
    "Doug, DJ and I are actively looking into this area. There are already multiple bug reports about that.",
    "This looks to me as two problems:\n1. UM is not reporting errors correctly or not at all, which we should fix\n2. Server is not working correctly. In one of the attachment\u0027s (Bjorg) I saw that we were getting HTTP 403 which should not happen and somewhere else I saw other similar status codes. If you try to download each one of these technologies from their update site you have no problem, which from what Bjorg showed is not true with Callisto site.\n\nWhat UM should do in second case is read HTTP status code and most of 4XX and 5XX codes log it present it to the user. There is nothing else we can do since this is some kind of internal error on the server. If UM gets connection time-out then we should give user an option to restart downloads in the future not right there. I say in future not right there since the likely cause of time out is either \n\na) server being too busy which means if we would to restart download instantly we would just keep throttling server \nb) or there is a network problem. In this case chances are that network problems will go away in future but not right than\n\nIn general UM should be more descriptive about problems it encounters. This is important since now users are left in the dark which breeds frustration on their side. \n",
    "I have opened bug #131025 to ask the assistance of the eclipse webmaster on the 403 errors.",
    "I\u0027m moving this to \"major\" instead of \"blocker\" since we have worked around this issue in Callisto, partially by having copies of all jars in a common directory, so users can be able to pick one mirror, and as long as that\u0027s a good mirror, things should work. I think the focus of this bug should now be that update manager needs some relatively user friendly way to recover from \"not found\" or \"access forbidden\" errors, ... such as, perhaps \"pick another mirror and retry\", or similar. \n\nWithout such a fix, a \"bad mirror\" does become a blocking problem for that user, and currently there is few diagnostics or hints to user as to what the problem might be or what an appropriate remedy might be. \n\n",
    "\n\n*** This bug has been marked as a duplicate of 144876 ***"
  ],
  "commentCreationDates": [
    "2006-02-10T17:49:09+01:00",
    "2006-02-10T17:54:55+01:00",
    "2006-02-10T17:58:33+01:00",
    "2006-02-10T18:38:00+01:00",
    "2006-02-10T20:12:30+01:00",
    "2006-02-10T21:40:54+01:00",
    "2006-02-10T21:48:17+01:00",
    "2006-02-14T06:37:42+01:00",
    "2006-02-16T22:29:37+01:00",
    "2006-02-17T02:39:15+01:00",
    "2006-02-17T03:03:50+01:00",
    "2006-02-17T03:19:50+01:00",
    "2006-02-17T03:26:24+01:00",
    "2006-02-17T03:29:38+01:00",
    "2006-02-17T03:33:56+01:00",
    "2006-02-21T19:21:14+01:00",
    "2006-02-21T19:38:41+01:00",
    "2006-02-21T19:49:26+01:00",
    "2006-02-21T20:07:09+01:00",
    "2006-02-21T21:10:08+01:00",
    "2006-02-22T06:41:06+01:00",
    "2006-02-22T23:01:40+01:00",
    "2006-02-23T02:28:22+01:00",
    "2006-02-23T02:40:17+01:00",
    "2006-02-23T03:44:04+01:00",
    "2006-02-23T04:45:46+01:00",
    "2006-02-23T05:13:58+01:00",
    "2006-02-24T01:30:47+01:00",
    "2006-03-07T16:00:39+01:00",
    "2006-03-07T16:01:24+01:00",
    "2006-03-07T21:01:28+01:00",
    "2006-03-08T15:11:55+01:00",
    "2006-03-08T15:47:33+01:00",
    "2006-03-09T15:09:48+01:00",
    "2006-03-09T15:18:15+01:00",
    "2006-03-15T04:53:09+01:00",
    "2006-06-23T05:28:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.SocketException",
      "message": "Operation timed out: connect:could be due to invalid address",
      "elements": [
        {
          "method": "java.net.PlainSocketImpl.socketConnect",
          "source": "Native Method"
        },
        {
          "method": "java.net.PlainSocketImpl.doConnect",
          "source": "PlainSocketImpl.java:372"
        }
      ],
      "number": 0,
      "commentIndex": 15,
      "bugId": "127290",
      "duplicateId": "144876",
      "date": "2006-02-21T19:21:14+01:00",
      "product": "Platform",
      "component": "Update",
      "severity": "major"
    }
  ],
  "groupId": "144876",
  "bugId": "127290",
  "duplicateId": "144876",
  "date": "2006-02-10T17:49:09+01:00",
  "product": "Platform",
  "component": "Update",
  "severity": "major"
}