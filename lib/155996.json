{
  "comments": [
    "I get the following error when I do \"Source/Format\" on Java source. When I run Eclipse 3.2 with the same settings and plugins on the same file, I get no such error.\n\njava.lang.LinkageError: loader constraints violated when linking org/eclipse/text/edits/TextEdit class\n\tat org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:229)\n\tat org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format(JavaFormattingStrategy.java:64)\n\tat org.eclipse.jface.text.formatter.MultiPassContentFormatter.formatMaster(MultiPassContentFormatter.java:192)\n\tat org.eclipse.jface.text.formatter.MultiPassContentFormatter.format(MultiPassContentFormatter.java:134)\n\tat org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:822)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1519)\n\tat org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:178)\n\tat org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:200)\n\tat org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:131)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:129)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:499)\n\tat org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)\n\tat org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)\n\tat org.eclipse.core.commands.Command.executeWithChecks(Command.java:461)\n\tat org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424)\n\tat org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:799)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:846)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:564)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Display.filterEvent(Display.java:982)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:927)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:952)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:937)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:965)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:961)\n\tat org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1275)\n\tat org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3352)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3252)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:4054)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1928)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2995)\n\tat org.eclipse.jface.window.Window.runEventLoop(Window.java:820)\n\tat org.eclipse.jface.window.Window.open(Window.java:796)\n\tat org.eclipse.pde.internal.runtime.logview.EventDetailsDialog.open(EventDetailsDialog.java:183)\n\tat org.eclipse.pde.internal.runtime.logview.EventDetailsDialogAction.run(EventDetailsDialogAction.java:91)\n\tat org.eclipse.pde.internal.runtime.logview.LogView$13.doubleClick(LogView.java:403)\n\tat org.eclipse.jface.viewers.StructuredViewer$1.run(StructuredViewer.java:796)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:843)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:149)\n\tat org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:794)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect(AbstractTreeViewer.java:1227)\n\tat org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected(StructuredViewer.java:1158)\n\tat org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent(OpenStrategy.java:223)\n\tat org.eclipse.jface.util.OpenStrategy.access$0(OpenStrategy.java:220)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:281)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3377)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2997)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "Could you please provide a test case and the build id?\nThanks.",
    "Build id: I20060810-1230\n\n\nTest case:\n\nCreate new Java Project, create new class Test, type the following\npublic interface Test { }, go to Source/Format\n\n",
    "Closing as dup of bug 155981.\nIf you didn\u0027t install on top of an existing installation, please reopen.\n\n*** This bug has been marked as a duplicate of 155981 ***",
    "Hm, a duplicate, let\u0027s have a closer look:\nWhen you installed over the old version, did you extract the whole JAR or just a selection of plugins (e.g. on JDT)?\nDo you have other plugins installed?\n\nDo you still have the old install? Can start it again and attach here what you get from \u0027Help \u003e About Eclipse SDK \u003e Configuration Details\u0027?\n\nI tried to reproduce and extracted 3.3 M1 over 3.2 and then I20060830-1650 over that. Created a file and did organize import or format but didn\u0027t see a problem.\n\nMe and Dani were wondering if it is possible that an older version of org.eclipse.text could be loaded. The configuration details show a strange state: all 3 instanceof of org.eclipse.text are markes as resolved, but non active. Jeff, do you have any idea what be the problem here? TestEdit didn\u0027t have any API change, but private methods got added. A subclass of TextEdits got a \u0027toString\u0027 added.",
    "Moving to core.runtime for comments",
    "*** Bug 155981 has been marked as a duplicate of this bug. ***",
    "\u003e but non active\nThis might be because org.eclipse.text does not have an activator. However, I\u0027d then expect two listed as \u0027installed\u0027 and one as \u0027resolved\u0027.",
    "See also bug 155981 for more information",
    "Created an attachment (id\u003d49476)\nmy configuration details\n\nMy configuration details, but as mentioned, I couldn\u0027t reproduce this bug. But the scenario is the same as in bug 155981\n",
    "I also tried this:\n1. have R3.2\n2. replace (i.e. delete old version) org.eclipse.text with latest 3.3 plug-in\n\u003d\u003d\u003e no problems i.e. organize import and format work as expected.",
    "The following bundles:\n\norg.eclipse.jface (3.2.0.I20060605-1400) \"JFace\" [Resolved]\norg.eclipse.jface (3.3.0.I20060801-0800) \"JFace\" [Resolved]\norg.eclipse.jface (3.3.0.I20060829-0800) \"JFace\" [Resolved]\norg.eclipse.jface.databinding (1.0.0.I20060605-1400) \"JFace Data Binding\" [Resolved]\norg.eclipse.jface.databinding (1.0.100.I20060803-0010) \"JFace Data Binding\" [Resolved]\norg.eclipse.jface.databinding (1.0.100.I20060829-0800) \"JFace Data Binding\" [Resolved]\norg.eclipse.jface.text (3.2.0.v20060605-1400) \"JFace Text\" [Resolved]\norg.eclipse.jface.text (3.3.0.v20060809-1200) \"JFace Text\" [Resolved]\norg.eclipse.jface.text (3.3.0.v20060829-0800) \"JFace Text\" [Resolved]\norg.eclipse.text (3.2.0.v20060605-1400) \"Text\" [Resolved]\norg.eclipse.text (3.3.0.v20060809-1200) \"Text\" [Resolved]\norg.eclipse.text (3.3.0.v20060829-0800) \"Text\" [Resolved]\n\nAre not specified as singleton bundles.  This allows more than one version to be resolved at the same time.  Are there issues if multiple versions of jface and text are used in the same system?  Should these bundles be specified as singleton bundles?\n",
    "\u003eAre not specified as singleton bundles\nCan\u0027t tell for sure but I think someone ones said this is only needed if there\u0027s an activator.",
    "This is not really a reason to use singletons.  Here are the most common reasons:\n\n- The bundle specifies extensions or extension points.  The extension registry require these bundles to be singletons\n- The bundle uses a resource that cannot be shared between different versions of the bundle.  SWT declares itself a singleton because it does not want to share the display with other versions of SWT.\n\nThis does not really have anything to do with whether you have a bundle activator or not.  Non-singleton bundles are allowed to have bundle activators.\n\nWhat I expect is happening here is that different bundles are getting wired to different versions of jface and when they attempt to pass objects between to two clients things start to break.",
    "Yes, I can also remember all those other arguments but they don\u0027t apply to org.eclipse.text i.e. I would still mark it as no-singleton when following those rules.",
    "Jeff,\n\nthis sounds more serious to me. Might this be a 3.2.1 candidate?",
    "I\u0027m increasing the severity of this one, because it affects all clients where new versions of a bundle get installed into the same location as existing ones.\n\nI just run into a similar problem - no linkage error BUT it seems that Equinox loads classes from BOTH VERSIONS of the installed plug-ins. I have the following installed:\n  org.eclipse.jface.text_3.3.0.v20060926-0800.jar\n      Bundle-Version: 3.3.0.v20060926-0800\n  org.eclipse.jface.text_3.3.0.zzz20060927-1520.jar\n      Bundle-Version: 3.3.0.zzz20060927-1520\n\nand both got RESOLVED. I would expect that only the newest gets resolved.\n\nThis happens because singleton:\u003dtrue isn\u0027t specified which in my opinion should not cause the effect that an older bundle versions gets used.",
    "If a bundle is not a singleton bundle then it is \"by design\" that each bundle is allowed to resolve.  And both can be used by different clients.  If you want to prevent that then you should specify them as singletons.",
    "(In reply to comment #16)\n\n\u003e This happens because singleton:\u003dtrue isn\u0027t specified which in my opinion should\n\u003e not cause the effect that an older bundle versions gets used.\n\u003e \n\nIt is a key feature of OSGi to allow multiple versions of classes to be loaded if desired. This allows clients which require different versions of some class to run  in the same framework. If you don\u0027t want to allow this for your bundle, either don\u0027t install multiple versions of the bundle, or have all the versions of the bundle marked as singletons.",
    "I see this but shouldn\u0027t it always take the \"newest\" one that matches the client\u0027s requirement? Why does it load two different versions if the newest works for both clients? Or in other words: what is the algorithm to decide which version of the plug-in to load?",
    "Is there any work around for this bug until a new release fixes.  I am using eclipse and this bug in this last release is a major problem for using eclipse.  What can I do?\n",
    "Nevermind, I figured out, I just delete my old org.eclipse.text_3.1.1.jar.\n\n",
    "Can an equinox runtime expert comment on comment 19 i.e. is it really the case that if more than one version of a (non-singleton) bundle meets the version requirement an arbitrary version is taken each time and that this process is not deterministic?",
    "(In reply to comment #19 and comment #20)\n\nIt depends on a few things ...\n\nThe framework does not agressively rewire previously resolved bundles to new bundles when they get installed.  So if some clients are wired to the old version of your bundle and a new version of your bundle is installed along with a set of other bundles that use your new bundle then some of the bundles in the framework will be wired to your old version and other newly installed/resolved bundles will get wired to the new version of your bundle.  The only way the bundles wired to your old bundle will get wired to the new bundle is by forcing them to refresh.\n\nIs there a reason both versions are installed?  It seems like core.update should have uninstalled your old version so the other bundles are forced to re-resolve to use the newer version of your bundle.  Is this really a valid configuration?  If so then core.update needs to be smarter to make sure everyone starts using the highest versions possible.  This would involve them selectively refreshing bundles wired to older versions of the bundle.  \n\nBut this lead me to ask ... why do you want older versions of your bunlde installed if you do not want anyone to actually be wired to them?\n\n",
    "Just to clarify: does your comment only apply to a single run or is there a cache and subsequent runs are affected as well? Or in other words: if the workbench is restarted then the problem is gone (or not)?\n\n\u003eThe only way the\n\u003ebundles wired to your old bundle will get wired to the new bundle is by forcing\n\u003ethem to refresh.\nHow can I do that?\n\nI guess another thing we should do is mark the plug-ins as singletons, right?",
    "(In reply to comment #24)\n\u003e Just to clarify: does your comment only apply to a single run or is there a\n\u003e cache and subsequent runs are affected as well? Or in other words: if the\n\u003e workbench is restarted then the problem is gone (or not)?\n\nWe cache the resolution state of the bundles so we do not have to reparse and reresolve the state of the bundle wirings each startup.  This is a must when loading a configuration with potentially 1000s of bundles.  The problem should go away if you run with -clean after installing the new versions of the bundle.  This would force the newest possible bundles to be picked for each wiring.\n\n\u003e \u003eThe only way the\n\u003e \u003ebundles wired to your old bundle will get wired to the new bundle is by forcing\n\u003e \u003ethem to refresh.\n\u003e How can I do that?\n\nThis is something the management agent would need to do (core.update).  Unfortunately I\u0027m not sure there is a one size fits all policy for selecting what bundles need refreshed.  Instead I would like to focus on whether this is a valid configuration.  To me it seems like core.update should have noticed that the old bundles are not really needed anymore and probably should have uninstalled them from the configuration.\n\n\u003e I guess another thing we should do is mark the plug-ins as singletons, right?\n\nThat is one possibility, but we need to answer the question of whether it is valid to have more than one version of the library bundles installed at a time.  If it is and you make them singleton then you will prevent more than one version from ever being used at the same time in a configuration.",
    "\u003eIf it is and you make them singleton then you will prevent more than one\n\u003eversion from ever being used at the same time in a configuration.\nWell, almost all source plug-ins in the Eclipse SDK are marked as singletons (according to Jeff at least those that populate the plug-in registry should be) hence making org.eclipse.text shouldn\u0027t change much, should it? Note that org.eclipse.text is a source plug-in and not encapsulating a library.",
    "Thomas, can you or some other equinox runtime expert please comment on comment 26. Thanks.",
    "ping.",
    "I\u0027m not sure what you mean by \"source plug-in\".\n\nChanging org.eclipse.text to a singleton bundle should not effect too much other than preventing other org.eclipse.text bundles which are *also* singleton bundles from resolving.\n",
    "\u003eI\u0027m not sure what you mean by \"source plug-in\".\nI meant plug-ins that not only wrap some (external) library but is written by us (eclipse).",
    "Unless we find a better resolution for this critical bug for 3.2.2 I\u0027ll add the singleton statement into those plug-ins that are under my control.",
    "Moving to update for comment.\n\nI do not understand why more than one version of org.eclipse.text are being installed in this case.  I thought update would uninstall the old version of the bundles when a feature is updated.  Can some on the update team comment on what scenarios cause more than one version of a bundle to be installed?",
    "*** Bug 169593 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d56499)\n3.3 patch for the framework\n\nSee Bug 169593 comment 1 option 3\n\nThis patch changes the framework to force all old bundles to be refreshed when newly installed versions (with the same symbolic name) are installed.  Before we only did this for singleton bundles.  This patch will do this for all bundles that are being refreshed by update.configurator when it installs new bundles.  This will force the old bundles to be refreshed which will then make all bundles depending on the old bundles to be refreshed in a transitive closure graph.  Then when the bundles are resolved we will resolve them to the highest possible version of the bundles.  This should help solve the issue by allowing all bundles to use the same version of the installed bundle.\n\nThis patch is for 3.3.  I will attach a separate patch for 3.2.x stream if we feel this fix is necessary for 3.2.2.",
    "Created an attachment (id\u003d56500)\n3.2.x patch for the framework\n\nsame fix for 3.2.x.",
    "+1 for 3.2.2.  Just to clarify, this is a Framework change no?  Is there an Update bug at all in any of this?  if not, the bug should be moved.\n\nAlso, please be sure that there is a 3.2.2 bug for this.",
    "Patch reviewed, good to go.",
    "Moving to Equinox since we decided to fix this in the Framework for 3.2.2.",
    "Patch released to 3.2.2 and HEAD.",
    "*** Bug 181382 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2006-09-01T19:03:59+02:00",
    "2006-09-05T18:45:04+02:00",
    "2006-09-05T21:50:17+02:00",
    "2006-09-06T03:57:47+02:00",
    "2006-09-06T12:27:19+02:00",
    "2006-09-06T12:28:04+02:00",
    "2006-09-06T12:29:49+02:00",
    "2006-09-06T12:31:12+02:00",
    "2006-09-06T12:32:11+02:00",
    "2006-09-06T12:34:14+02:00",
    "2006-09-06T12:35:37+02:00",
    "2006-09-06T15:31:04+02:00",
    "2006-09-06T15:34:19+02:00",
    "2006-09-06T15:48:58+02:00",
    "2006-09-06T15:53:24+02:00",
    "2006-09-07T08:32:16+02:00",
    "2006-09-28T18:00:32+02:00",
    "2006-09-28T19:39:02+02:00",
    "2006-09-28T20:19:24+02:00",
    "2006-10-09T11:55:04+02:00",
    "2006-10-10T21:37:53+02:00",
    "2006-10-10T21:41:47+02:00",
    "2006-10-11T10:08:15+02:00",
    "2006-10-11T21:57:26+02:00",
    "2006-10-12T10:44:21+02:00",
    "2006-10-12T14:54:57+02:00",
    "2006-10-12T15:11:58+02:00",
    "2006-10-17T12:03:08+02:00",
    "2006-10-25T17:15:09+02:00",
    "2006-10-25T17:51:57+02:00",
    "2006-10-25T18:17:31+02:00",
    "2006-10-25T19:06:30+02:00",
    "2006-12-01T15:34:55+01:00",
    "2007-01-05T22:55:43+01:00",
    "2007-01-05T23:13:37+01:00",
    "2007-01-05T23:16:58+01:00",
    "2007-01-06T00:46:34+01:00",
    "2007-01-08T04:17:41+01:00",
    "2007-01-08T13:52:04+01:00",
    "2007-01-08T15:57:04+01:00",
    "2007-04-09T16:13:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.LinkageError",
      "message": "loader constraints violated when linking org/eclipse/text/edits/TextEdit class",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2",
          "source": "CodeFormatterUtil.java:229"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaFormattingStrategy.format",
          "source": "JavaFormattingStrategy.java:64"
        },
        {
          "method": "org.eclipse.jface.text.formatter.MultiPassContentFormatter.formatMaster",
          "source": "MultiPassContentFormatter.java:192"
        },
        {
          "method": "org.eclipse.jface.text.formatter.MultiPassContentFormatter.format",
          "source": "MultiPassContentFormatter.java:134"
        },
        {
          "method": "org.eclipse.jface.text.source.SourceViewer.doOperation",
          "source": "SourceViewer.java:822"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation",
          "source": "ProjectionViewer.java:1519"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation",
          "source": "JavaSourceViewer.java:178"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation",
          "source": "CompilationUnitEditor.java:200"
        },
        {
          "method": "org.eclipse.ui.texteditor.TextOperationAction$1.run",
          "source": "TextOperationAction.java:131"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.texteditor.TextOperationAction.run",
          "source": "TextOperationAction.java:129"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:499"
        },
        {
          "method": "org.eclipse.ui.commands.ActionHandler.execute",
          "source": "ActionHandler.java:185"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute",
          "source": "LegacyHandlerWrapper.java:109"
        },
        {
          "method": "org.eclipse.core.commands.Command.executeWithChecks",
          "source": "Command.java:461"
        },
        {
          "method": "org.eclipse.core.commands.ParameterizedCommand.executeWithChecks",
          "source": "ParameterizedCommand.java:424"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.HandlerService.executeCommand",
          "source": "HandlerService.java:160"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:466"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:799"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:846"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:564"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3",
          "source": "WorkbenchKeyboard.java:506"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent",
          "source": "WorkbenchKeyboard.java:122"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java:982"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:927"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:952"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:937"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:965"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:961"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmChar",
          "source": "Widget.java:1275"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_CHAR",
          "source": "Control.java:3352"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3252"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4054"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1928"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2995"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:820"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:796"
        },
        {
          "method": "org.eclipse.pde.internal.runtime.logview.EventDetailsDialog.open",
          "source": "EventDetailsDialog.java:183"
        },
        {
          "method": "org.eclipse.pde.internal.runtime.logview.EventDetailsDialogAction.run",
          "source": "EventDetailsDialogAction.java:91"
        },
        {
          "method": "org.eclipse.pde.internal.runtime.logview.LogView$13.doubleClick",
          "source": "LogView.java:403"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$1.run",
          "source": "StructuredViewer.java:796"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:843"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:44"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:149"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick",
          "source": "StructuredViewer.java:794"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.handleDoubleSelect",
          "source": "AbstractTreeViewer.java:1227"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$4.widgetDefaultSelected",
          "source": "StructuredViewer.java:1158"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireDefaultSelectionEvent",
          "source": "OpenStrategy.java:223"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$0",
          "source": "OpenStrategy.java:220"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:281"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:928"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3377"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2997"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:104"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:74"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:401"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "155996",
      "date": "2006-09-01T19:03:59+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "major"
    }
  ],
  "groupId": "155996",
  "bugId": "155996",
  "date": "2006-09-01T19:03:59+02:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "major"
}