{
  "comments": [
    "HierarchyRunView.endTest appears to contain a race condition, resulting in the\nfollowing abridged stack trace:\n\njava.lang.NullPointerException\n\tat\norg.eclipse.jdt.internal.junit.ui.HierarchyRunView.updateItem(HierarchyRunView.java:319)\n\tat\norg.eclipse.jdt.internal.junit.ui.HierarchyRunView.endTest(HierarchyRunView.java:271)\n\tat\norg.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$6.run(TestRunnerViewPart.java:727)\n\nThe problem appears to be that it is possible, in the following code, for\nfindTreeItem to return non-null, but getTestInfo to return null, if a reset\nhappens in-between.\n\npublic void endTest(String testId) {\t\n  TreeItem treeItem\u003d findTreeItem(testId);\n  if (treeItem \u003d\u003d null)  \n    return;\n\t\t\t\n  TestRunInfo testInfo\u003d fTestRunnerPart.getTestInfo(testId);\n\t\t\t\n  updateItem(treeItem, testInfo);\n...\n}",
    "\n\n*** This bug has been marked as a duplicate of 61709 ***"
  ],
  "commentCreationDates": [
    "2004-03-04T20:08:11+01:00",
    "2004-06-10T18:23:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.junit.ui.HierarchyRunView.updateItem",
          "source": "HierarchyRunView.java:319"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.HierarchyRunView.endTest",
          "source": "HierarchyRunView.java:271"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$6.run",
          "source": "TestRunnerViewPart.java:727"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "53797",
      "duplicateId": "61709",
      "date": "2004-03-04T20:08:11+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "61709",
  "bugId": "53797",
  "duplicateId": "61709",
  "date": "2004-03-04T20:08:11+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}