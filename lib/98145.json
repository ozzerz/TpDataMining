{
  "comments": [
    "Given the need to explicitly enumerate aspects that will be applied by load-\ntime weaving, it will be a significant benefit to allow auto-generating this \nlist when building an AspectJ system, e.g., by appending to a defined output \nfile when compiling.\n\nIt would then be very useful if an AOP.xml file could reference this as an \nexternal file with a list of aspects, so the list can be regenerated without \nreplacing human edited portions of an AOP.xml file.",
    "See also https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d93320\n",
    "Here is an example of the kind of error you can get if you forget to include, \nsay a static inner aspect for a perwithin aspect, from the explicit list in \naop.xml:\n\n2005-07-07 11:09:15,186 ERROR [org.apache.catalina.core.ContainerBase.\n[Catalina]\n.[localhost].[/petclinic].[petclinic]] - \u003cServlet.service() for servlet \npetclini\nc threw exception\u003e\njava.lang.AbstractMethodError: \norg.springframework.web.servlet.DispatcherServlet\n.ajc$interFieldGet$aspectPerfManage_monitor_operation_MonitorOperations$Initial\ni\nzeMonitoredOperation$aspectPerfManage_track_operation_MonitoredOperation$stats\n()\nLaspectPerfManage/track/operation/OperationStats;\n        at \naspectPerfManage.monitor.operation.MonitorOperations$InitializeMonito\nredOperation.ajc$interFieldGetDispatch$aspectPerfManage_monitor_operation_Monit\no\nrOperations$InitializeMonitoredOperation$aspectPerfManage_track_operation_Monit\no\nredOperation$stats(MonitorOperations.aj)\n        at \naspectPerfManage.monitor.operation.MonitorOperations.ajc$before$aspec\ntPerfManage_monitor_operation_MonitorOperations$1$573ff31c\n(MonitorOperations.aj:\n34)\n        at org.springframework.web.servlet.FrameworkServlet.doGet\n(FrameworkServl\net.java)",
    "I suggest closing this now bug 95516 is integrated.",
    "doing what matthew says..."
  ],
  "commentCreationDates": [
    "2005-06-02T18:58:25+02:00",
    "2005-06-02T18:59:20+02:00",
    "2005-07-08T00:02:35+02:00",
    "2005-11-15T14:59:55+01:00",
    "2006-05-30T16:03:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.AbstractMethodError",
      "message": "org.springframework.web.servlet.DispatcherServlet .ajc$interFieldGet$aspectPerfManage_monitor_operation_MonitorOperations$Initial i zeMonitoredOperation$aspectPerfManage_track_operation_MonitoredOperation$stats () LaspectPerfManage/track/operation/OperationStats;",
      "elements": [
        {
          "method": "aspectPerfManage.monitor.operation.MonitorOperations$InitializeMonitoredOperation.ajc$interFieldGetDispatch$aspectPerfManage_monitor_operation_MonitorOperations$InitializeMonitoredOperation$aspectPerfManage_track_operation_MonitoredOperation$stats",
          "source": "MonitorOperations.aj"
        },
        {
          "method": "aspectPerfManage.monitor.operation.MonitorOperations.ajc$before$aspectPerfManage_monitor_operation_MonitorOperations$1$573ff31c",
          "source": "MonitorOperations.aj: 34"
        },
        {
          "method": "org.springframework.web.servlet.FrameworkServlet.doGet",
          "source": "FrameworkServl et.java"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "98145",
      "date": "2005-07-08T00:02:35+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "enhancement"
    }
  ],
  "groupId": "98145",
  "bugId": "98145",
  "date": "2005-06-02T18:58:25+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "enhancement"
}