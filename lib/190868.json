{
  "comments": [
    "Build ID: M20060921-0945\n\nSteps To Reproduce:\n1. Obtain the IBM JDK version 1.6.0-internal-6u1b03\n(this problem was first reported on a LINUX AMD-64 machine with this java level.)\n\n2. Obtain a large set of bundles with are highly interdependant - create lots of cyclic dependencies between all the bundles using imports and exports.\n\n3. Run the following command: (-Xquickstart sets the opt level \u003d cold, you also could use a smaller value for -Xss)\n\njava -Xquickstart -Xss512K -classpath \u003cclasspath\u003e org.eclipse.core.launcher.Main -clean -nosplash -application com.ibm.ws.debug.osgi.Noop\n\n\n\nMore information:\nOutput should be:\nException in thread \"Refresh Packages\" java.lang.StackOverflowError\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveRequire(ResolverImpl.java:701)\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(ResolverImpl.java:591)\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveImport(ResolverImpl.java:804)\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(ResolverImpl.java:611)\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveImport(ResolverImpl.java:804)\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle(ResolverImpl.java:611)\n\tat org.eclipse.osgi.internal.module.ResolverImpl.resolveImport(ResolverImpl.java:804)\n\n\nThe IBM JDK team looked at it and concluded:\nThat the recursive nature of resolving our set of bundles\nare consistent with the stack overflow problem we are seeing when using the optlevel\u003dcold and an insufficient initial stack size.\nSetting the stack size higher (-Xss) will solve the problem\nOR not using the -Xquickstart (which allows the JDK to optimize the use of locals on the stack).\n\nThis problem may be related to another perfomance issue where an excessive amount of time is spent getting a semaphore.\n\nTom Watson is aware an looked at these issues.",
    "would be great if you could give us \n   \"a large set of bundles with are highly interdependant - create lots\n    of cyclic dependencies between all the bundles using imports and exports\"",
    "I am able to reproduce and I am investigating a fix.",
    "Created an attachment (id\u003d73567)\npatch\n\nThis patch breaks the recursion for bundle cycles.  This fix is simple for the 3.3.x codebase and higher because cycles are not checked for \"uses\" constraints as we go.  Instead they are checked at the end of a resolution phase.  A 3.2.x fix requires a bit more work.",
    "Fix released to HEAD for 3.4 M1.  Leaving bug open for 3.3.1 consideration.",
    "Created an attachment (id\u003d73590)\n3.2.x possible fix\n\nHere is a possible fix for 3.2.x.  This patch needs lots of testing.  The resolver in 3.2 depended on the recursive nature when resolving uses constraints in cycles.  This patch passes the large set of cyclic tests in the automated tests.  It also does fix the stack overflow issue for very large cycles.",
    "Created an attachment (id\u003d75442)\n3.3.x patch\n\nUpdated 3.3.x patch to sync with latest changes in the maintenance stream.",
    "Simon, please review for 3.3.x.",
    "Patch looks good.",
    "Fix released to 3.3.1."
  ],
  "commentCreationDates": [
    "2007-06-04T20:48:37+02:00",
    "2007-06-04T22:41:33+02:00",
    "2007-07-11T18:32:50+02:00",
    "2007-07-11T19:02:47+02:00",
    "2007-07-11T19:45:42+02:00",
    "2007-07-11T21:30:43+02:00",
    "2007-08-06T17:39:23+02:00",
    "2007-08-06T17:40:21+02:00",
    "2007-08-13T17:07:57+02:00",
    "2007-08-15T22:31:33+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveRequire",
          "source": "ResolverImpl.java:701"
        },
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle",
          "source": "ResolverImpl.java:591"
        },
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveImport",
          "source": "ResolverImpl.java:804"
        },
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle",
          "source": "ResolverImpl.java:611"
        },
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveImport",
          "source": "ResolverImpl.java:804"
        },
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveBundle",
          "source": "ResolverImpl.java:611"
        },
        {
          "method": "org.eclipse.osgi.internal.module.ResolverImpl.resolveImport",
          "source": "ResolverImpl.java:804"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "190868",
      "date": "2007-06-04T20:48:37+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "blocker"
    }
  ],
  "groupId": "190868",
  "bugId": "190868",
  "date": "2007-06-04T20:48:37+02:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "blocker"
}