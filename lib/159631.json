{
  "comments": [
    "While trying to refactor our large code base, the Cleanup wizard fails with \"An unexpected exception occurred while creating a change object. See the error log for more details\" in the Found problems page.\n\nAfter investigation, It fails when 2 very specific packages (our core.enumeration, core.event.bo) are selected for cleanup; however, I can\u0027t seem to isolate it further.  I\u0027ve tried just copying those two packages in another project but can\u0027t reproduce the behavior. I can cleanup each of these package individually.\n\nWill the log file and the list of settings be sufficient to isolate this? I\u0027m attaching those to this bug report.",
    "Created an attachment (id\u003d51367)\nscreenshots of cleanup configuration and results\n\n",
    "Created an attachment (id\u003d51369)\nthe eclipse log\n\n",
    "That looks like a problem when building an the AST.\n\nThe more you can find out where this happens the better. Did you try to invoke \u0027clean up\u0027 on every compilation unit to find out which one has the problem?\n\nMaybe this is releated to bug 156352.\n\nCaused by: java.lang.NullPointerException\nat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations(SourceTypeBinding.java:1434)\nat org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder(ReferenceBinding.java:1173)\nat org.eclipse.jdt.internal.compiler.lookup.MethodBinding.\u003cinit\u003e(MethodBinding.java:61)\nat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding(SourceTypeBinding.java:1074)\nat org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary(MessageSend.java:226)\nat org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(MessageSend.java:63)\nat org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode(IfStatement.java:65)\nat org.eclipse.jdt.internal.compiler.ast.Block.analyseCode(Block.java:40)\nat org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode(WhileStatement.java:115)\nat org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:84)\nat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:673)\nat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:256)\nat org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:106)\nat org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:597)\nat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:687)\nat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:464)\nat org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:707)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.parse(CleanUpRefactoring.java:518)\n",
    "I just tried isolating the problem further and I\u0027m down to two classes (our EnmEventTimeType and ObjEventTime).  I\u0027ve tried copying just these two classes to another project and doing \"Create class\" / \"Create method\" on dependencies until it compiled but still can\u0027t reproduce the exception. I then tried making these created methods more similar to the real thing but it didn\u0027t help.  The problem seems rather subtle...\n\nHowever, the exception I\u0027m getting now seems to follow a different path in the Cleanup code:\n\nAs reported in \"cleanup failure.log\":\n\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations(SourceTypeBinding.java:1434)\n\tat org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder(ReferenceBinding.java:1173)\n\tat org.eclipse.jdt.internal.compiler.lookup.MethodBinding.\u003cinit\u003e(MethodBinding.java:61)\n\tat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding(SourceTypeBinding.java:1074)\n\tat org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary(MessageSend.java:226)\n\tat org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(MessageSend.java:63)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode(IfStatement.java:65)\n\tat org.eclipse.jdt.internal.compiler.ast.Block.analyseCode(Block.java:40)\n\tat org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode(WhileStatement.java:115)\n\nNow:\n\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations(SourceTypeBinding.java:1434)\n\tat org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder(ReferenceBinding.java:1173)\n\tat org.eclipse.jdt.internal.compiler.lookup.MethodBinding.\u003cinit\u003e(MethodBinding.java:61)\n\tat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding(SourceTypeBinding.java:1074)\n\tat org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary(MessageSend.java:226)\n\tat org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(MessageSend.java:63)\n\tat org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.analyseCode(AND_AND_Expression.java:59)\n\tat org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode(IfStatement.java:65)\n\tat org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:84)",
    "Created an attachment (id\u003d51505)\nanother eclipse log extract (slightly different stack)\n\n",
    "Note also that with absolutely no refactoring ie 0 of 29 selected (funny that I can do that without an error message...) I get the same exception as comment #4.",
    "We\u0027d like to deploy an instrumented version of jdt core on your machine to narrow down the issue, if this is possible on your side. I\u0027ll prepare one in any case. I assume that you\u0027re using Eclipse 3.2.1, that is v_677_R32x of org.eclipse.jdt.core. Please let me know if it is not the case.",
    "Yes, that is the version I\u0027m using; 3.2.1.r321_v20060905.  I\u0027d be happy to try your instrumented version.",
    "(In reply to comment #8)\n\u003e Yes, that is the version I\u0027m using; 3.2.1.r321_v20060905.  I\u0027d be happy to try\n\u003e your instrumented version.\n\u003e \nThanks a lot. I have posted an instrumented version of JDT Core at http://www.eclipse.org/jdt/core/patches/org.eclipse.jdt.core_3.2.1.z20061023-1512.jar\nDropping that file into your eclipse/plugins directory should enable some more printing when you reproduce the problematic scenario. Please collect both standard output and standard error streams. You may consider adding some debug tracing by using the -debug \u003cdebug options file\u003e on the eclipse launch command - beware though that traces can grow pretty large. I will attach a typical debug options file to this bug, in which I have turned on a few significant ones.\n(Please note that this is an unofficial, unsupported version of JDT Core and that you should revert to the supported version for normal operation.)\n\nWe are interested in any information that this instrumented version can collect. \n\nThanks again for your help.",
    "Created an attachment (id\u003d52516)\nA sample debug options file\n\n",
    "Created an attachment (id\u003d52520)\nOutput I get when running Eclipse / Clean Up... as instructed\n\n",
    "Analysis: a call to SourceTypeBinding#storedAnnotations(true) happens after a cleanup() has been called upon the said source type binding (in the normal course of a reconcile operation). In such case, its scope is null and should not be accessed - hence we could simply protect against this. We should still make a decision regarding whether or not annotations should be initialized in such case, given the fact that it is currently subject to a test on the scope. My take would be that it\u0027s too late to add sensible annotations to the annotations store at that point in the binding lifecycle, hence we should return null.\nWill implement a patch along those lines and get it reviewed.",
    "Discussed the matter with Philippe, who says we should be a little bit subtler than that.\nWould it be possible for you to share the code on which the problems happen? We\u0027d like to nail down a reproduceable test case on our side and to assert that the scope null condition is a real indicator that the annotations are null as well.",
    "I have obtained permission to send you a zip of part of our sources directly to your email address with the understanding that it will be kept confidential and that you will destroy the source copies once you\u0027ve reproduced the test case. \n\nI\u0027m trying to cut down on what I\u0027ll be sending you as the archive is around 3MB right now.",
    "Sent email \"Subject: Bugzilla Bug #159631: source code\"",
    "Got it, thanks a lot. Will investigate today.",
    "Reproduced with 3.2.1.",
    "Released (inactive) BatchASTCreationTests#73 in HEAD that shows the problem in a matter of a few classes, thanks again for sharing the test case. I\u0027ll destroy all copies of it on my disk.\nI will check with Philippe the best way to tackle the bug, but I\u0027d consider that creating a method binding from another one into a given SourceTypeBinding when no more scope is available on the said SourceTypeBinding makes the attempt to store annotations superfluous. Hence protecting against scope being null should be adequate, in effect having the same effect as if the compiler had the storeAnnotations unset when resolving the SourceTypeBinding in the first place. ",
    "Created an attachment (id\u003d52666)\nSuggested fix - HEAD based\n\n",
    "Tests passed.",
    "Released for 3.3M3.\n\nMaxime - pls backport for 3.2.2.",
    "(In reply to comment #21)\n\u003e Released for 3.3M3.\n\u003e \n\u003d\u003e FIXED",
    "Verified for 3.3 M3 using build I20061030-1704",
    "Released for 3.2.2.\n(Same patch.)",
    "(In reply to comment #15)\n\u003e Sent email \"Subject: Bugzilla Bug #159631: source code\"\n\u003e \n\nAll copies destroyed here. Thx again for sharing.",
    "Verified for 3.2.2 using build M20070112-1200"
  ],
  "commentCreationDates": [
    "2006-10-03T20:56:32+02:00",
    "2006-10-03T20:58:05+02:00",
    "2006-10-03T20:58:57+02:00",
    "2006-10-05T17:45:06+02:00",
    "2006-10-05T23:40:58+02:00",
    "2006-10-05T23:42:00+02:00",
    "2006-10-12T23:17:14+02:00",
    "2006-10-20T09:11:27+02:00",
    "2006-10-20T15:23:06+02:00",
    "2006-10-23T17:01:23+02:00",
    "2006-10-23T17:02:50+02:00",
    "2006-10-23T18:09:15+02:00",
    "2006-10-24T09:42:22+02:00",
    "2006-10-24T11:03:49+02:00",
    "2006-10-24T22:44:05+02:00",
    "2006-10-24T23:11:33+02:00",
    "2006-10-25T08:35:18+02:00",
    "2006-10-25T09:34:50+02:00",
    "2006-10-25T15:04:01+02:00",
    "2006-10-25T16:05:24+02:00",
    "2006-10-26T08:39:54+02:00",
    "2006-10-30T10:50:19+01:00",
    "2006-10-31T08:50:23+01:00",
    "2006-10-31T09:09:27+01:00",
    "2006-11-07T10:32:25+01:00",
    "2006-11-07T10:48:14+01:00",
    "2007-01-16T10:25:04+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations",
          "source": "SourceTypeBinding.java:1434"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder",
          "source": "ReferenceBinding.java:1173"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.\u003cinit\u003e",
          "source": "MethodBinding.java:61"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding",
          "source": "SourceTypeBinding.java:1074"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary",
          "source": "MessageSend.java:226"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode",
          "source": "MessageSend.java:63"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode",
          "source": "IfStatement.java:65"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.analyseCode",
          "source": "Block.java:40"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode",
          "source": "WhileStatement.java:115"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode",
          "source": "MethodDeclaration.java:84"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode",
          "source": "TypeDeclaration.java:673"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode",
          "source": "TypeDeclaration.java:256"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode",
          "source": "CompilationUnitDeclaration.java:106"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.process",
          "source": "Compiler.java:597"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:687"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:464"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createASTs",
          "source": "ASTParser.java:707"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.parse",
          "source": "CleanUpRefactoring.java:518"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "159631",
      "date": "2006-10-05T17:45:06+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations",
          "source": "SourceTypeBinding.java:1434"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder",
          "source": "ReferenceBinding.java:1173"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.\u003cinit\u003e",
          "source": "MethodBinding.java:61"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding",
          "source": "SourceTypeBinding.java:1074"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary",
          "source": "MessageSend.java:226"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode",
          "source": "MessageSend.java:63"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode",
          "source": "IfStatement.java:65"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Block.analyseCode",
          "source": "Block.java:40"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.WhileStatement.analyseCode",
          "source": "WhileStatement.java:115"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "159631",
      "date": "2006-10-05T23:40:58+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.storedAnnotations",
          "source": "SourceTypeBinding.java:1434"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.storeAnnotationHolder",
          "source": "ReferenceBinding.java:1173"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.MethodBinding.\u003cinit\u003e",
          "source": "MethodBinding.java:61"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getUpdatedMethodBinding",
          "source": "SourceTypeBinding.java:1074"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.manageSyntheticAccessIfNecessary",
          "source": "MessageSend.java:226"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode",
          "source": "MessageSend.java:63"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression.analyseCode",
          "source": "AND_AND_Expression.java:59"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.IfStatement.analyseCode",
          "source": "IfStatement.java:65"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode",
          "source": "MethodDeclaration.java:84"
        }
      ],
      "number": 2,
      "commentIndex": 4,
      "bugId": "159631",
      "date": "2006-10-05T23:40:58+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "159631",
  "bugId": "159631",
  "date": "2006-10-03T20:56:32+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}