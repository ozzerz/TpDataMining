{
  "comments": [
    "The parser in the plugin seems to have several problems with my EMF-based UML2 models. Both global and project prefs are set to EMF metamodel, and UML2.ecore can be found in the classpath. All extensions and templates are syntactically correct - the generator produces the correct output without any errors. But my problem view shows 126 errors, many of the are surely interrelated somehow, so I post all of them in one single bug report instead of separate bugs for each issue.\n\n1) Builtin String-Type methods cannot be found for uml2::Strings. The following extension\n\nString getJavaName(uml2::Package p) :\n\tp.qualifiedName.replaceAll(\"::\", \".\")\n;\n\nproduces this error: Couldn\u0027t find operation \u0027replaceAll(String,String)\u0027 for type \u0027uml2::String\u0027.\n\np.qualifiedName returns a uml2::String, which is implemented as java.lang.String. The generator accepts all methods of the builtin String type. The plugin does not.\n\nThe same error applies to the \"+\" operator on Strings and the like, e.g. the \"\u003d\u003d\" operator for comparing uml2::UnlimitedNatural with Integers.\n\n2) Another problem occurs with this extension fragment, which uses the first extension:\n\nextension extensions::Package;\n\nString getImplBasePackageName(uml2::Class bo) :\n\tbo.package.getJavaName() + \".implbase\"\n;\n\nThe error is: couldn\u0027t resolve return type for extension String getJavaName(uml2::Package p)! Errors : [[Callable not found] - Couldn\u0027t find operation \u0027replaceAll(String,String)\u0027 for type \u0027uml2::String\u0027 : p.qualifiedName.replaceAll(\"::\",\".\")]\n\nI don\u0027t see why the return type cannot be resolved when it is written in the extension declaration. So even _if_ parsing one extension body produces errors, _using_ that extension in other places should not produce a problem marker. This behavior results in an explosion of error markers.\n\n3) Error parsing switch statement. The following extension\n\nString getJavaTypeName(uml2::Type t) :\n    ({t}.typeSelect(uml2::DataType)).size !\u003d 0 ?\n    \t(switch (t.name) {\n    \t    case \"Integer\": \"Integer\"\n    \t    case \"String\" : \"String\"\n    \t    case \"Boolean\" : \"Boolean\"\n    \t    case \"Real\" : \"java.math.BigDecimal\"\n    \t\tdefault: t.getFullyQualifiedJavaName()\n    \t})    \t\n    :\n        t.getFullyQualifiedJavaName()\n;\n\nproduces this NPE (taken from the Error Log view):\n\njava.lang.NullPointerException\nat org.openarchitectureware.expression.ast.SwitchExpression.analyze(SwitchExpression.java:71)\nat org.openarchitectureware.expression.ast.IfExpression.analyze(IfExpression.java:74)\nat org.openarchitectureware.xtend.ast.ExpressionExtensionStatement.analyzeInternal(ExpressionExtensionStatement.java:73)\nat org.openarchitectureware.xtend.ast.Extension.analyze(Extension.java:79)\nat org.openarchitectureware.xtend.ast.ExtensionFile.analyze(ExtensionFile.java:68)\nat org.openarchitectureware.xtend.core.internal.XtendFileImpl.analyze(XtendFileImpl.java:45)\nat org.openarchitectureware.xtend.core.internal.XtendFileImpl.analyze(XtendFileImpl.java:56)\nat org.openarchitectureware.core.internal.OawProject.findOawResource(OawProject.java:115)\nat org.openarchitectureware.core.builder.OawBuilder.reloadResource(OawBuilder.java:125)\nat org.openarchitectureware.core.builder.OawBuilder$XpandResourceVisitor.visit(OawBuilder.java:83)\nat org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:103)\nat org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:50)\nat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:81)\nat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:85)\nat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:85)\nat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:85)\nat org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:126)\nat org.eclipse.core.internal.resources.Resource.accept(Resource.java:60)\nat org.eclipse.core.internal.resources.Resource.accept(Resource.java:101)\nat org.eclipse.core.internal.resources.Resource.accept(Resource.java:80)\nat org.openarchitectureware.core.builder.OawBuilder.fullBuild(OawBuilder.java:143)\nat org.openarchitectureware.core.builder.OawBuilder.build(OawBuilder.java:103)\nat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\nat org.eclipse.core.runtime.Platform.run(Platform.java:783)\nat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\nat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\nat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\nat org.eclipse.core.runtime.Platform.run(Platform.java:783)\nat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)\nat org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)\nat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)\nat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:139)\nat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:200)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)\n\n4) Probably as a follow-up error of this, the following template definition\n\n?DEFINE Attribute FOR uml2::Property?\n\tprivate ?this.getJavaMemberTypeName()? ?this.name? \u003d\n\t\t?IF this.upperBound() \u003d\u003d 1?\n\t\t\tnull\n\t\t?ELSE?\n\t\t\t?IF this.isOrdered?\n\t\t\t\tnew java.util.LinkedList()\n\t\t\t?ELSE?\n\t\t\t\tnew java.util.HashSet()\n\t\t\t?ENDIF?\n\t\t?ENDIF?\n\t;\n?ENDDEFINE?\n\nwhich uses the above extension from extensions::Type.ext produces the following list of errors:\n\n* Line 2: Error parsing extensions : Unable to load extension file : extensions::Type\n* Line 3: Couldn\u0027t find operation \u0027\u003d\u003d(Integer)\u0027 for type \u0027uml2::UnlimitedNatural\u0027\n* Line 6: Boolean expected!\n\nWhat is the problem in line 6, \"?IF this.isOrdered?\"?\n\n5) Extension \"extensions::StringHelper\" defines this:\n\nString buildUppercaseName(String name) :\n\tJAVA de.exxcellent.plexx.util.StringHelper.buildUppercaseName(java.lang.String);\n;\n\nAnother extension is defined as follows:\n\nextension extensions::StringHelper;\n\nString getUppercaseName(uml2::NamedElement e) :\n\tbuildUppercaseName(e.name);\n;\n\nBut I receive the following error:\n\nCouldn\u0027t find extensions : buildUppercaseName(e.name). Even changing the signature from \"buildUppercaseName(String name)\" to \"buildUppercaseName(uml2::String name)\" does not help.\n\nSo, that\u0027s it for the moment. Let me know if you need any more information.",
    "There are different issues:\n\n1) we cannot use the EMFMetamodel implementation for UML2, because UML2 uses it\u0027s own primitive types, which have to be mapped to oAW\u0027s built in types accordingly.\nAt least for static analyzation. Working on it.\n\n2) The analyzation of extensions was context sensitive so far (even if you have specified a return type). I changed this. Now, the return type will be used if exists.\n\n3) The NPE issue in the switchAST is fixed.",
    "FIXED",
    "RESOLVED",
    "CLOSED"
  ],
  "commentCreationDates": [
    "2006-03-20T14:40:57+01:00",
    "2006-03-23T13:52:39+01:00",
    "2006-03-30T11:28:25+02:00",
    "2006-07-02T22:38:22+02:00",
    "2006-07-02T22:38:49+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.openarchitectureware.expression.ast.SwitchExpression.analyze",
          "source": "SwitchExpression.java:71"
        },
        {
          "method": "org.openarchitectureware.expression.ast.IfExpression.analyze",
          "source": "IfExpression.java:74"
        },
        {
          "method": "org.openarchitectureware.xtend.ast.ExpressionExtensionStatement.analyzeInternal",
          "source": "ExpressionExtensionStatement.java:73"
        },
        {
          "method": "org.openarchitectureware.xtend.ast.Extension.analyze",
          "source": "Extension.java:79"
        },
        {
          "method": "org.openarchitectureware.xtend.ast.ExtensionFile.analyze",
          "source": "ExtensionFile.java:68"
        },
        {
          "method": "org.openarchitectureware.xtend.core.internal.XtendFileImpl.analyze",
          "source": "XtendFileImpl.java:45"
        },
        {
          "method": "org.openarchitectureware.xtend.core.internal.XtendFileImpl.analyze",
          "source": "XtendFileImpl.java:56"
        },
        {
          "method": "org.openarchitectureware.core.internal.OawProject.findOawResource",
          "source": "OawProject.java:115"
        },
        {
          "method": "org.openarchitectureware.core.builder.OawBuilder.reloadResource",
          "source": "OawBuilder.java:125"
        },
        {
          "method": "org.openarchitectureware.core.builder.OawBuilder$XpandResourceVisitor.visit",
          "source": "OawBuilder.java:83"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$2.visit",
          "source": "Resource.java:103"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource$1.visitElement",
          "source": "Resource.java:50"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:81"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:85"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:85"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.doIteration",
          "source": "ElementTreeIterator.java:85"
        },
        {
          "method": "org.eclipse.core.internal.watson.ElementTreeIterator.iterate",
          "source": "ElementTreeIterator.java:126"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:60"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:101"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.accept",
          "source": "Resource.java:80"
        },
        {
          "method": "org.openarchitectureware.core.builder.OawBuilder.fullBuild",
          "source": "OawBuilder.java:143"
        },
        {
          "method": "org.openarchitectureware.core.builder.OawBuilder.build",
          "source": "OawBuilder.java:103"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:593"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:202"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:231"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:234"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:253"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:282"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:139"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:200"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "132547",
      "date": "2006-03-20T14:40:57+01:00",
      "product": "GMT",
      "component": "OAW",
      "severity": "normal"
    }
  ],
  "groupId": "132547",
  "bugId": "132547",
  "date": "2006-03-20T14:40:57+01:00",
  "product": "GMT",
  "component": "OAW",
  "severity": "normal"
}