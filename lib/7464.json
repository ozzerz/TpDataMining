{
  "comments": [
    "0109.\n\n1. Start with a new workspace/turn autobuild off.\n2. Use the plugin import tool:\nimport binary projects for all, except\nimport source projects for ui, swt.\n3. build.\n4. exit the workspace.\n5. restart eclipse.\n6. press the build button.\nA dialog appears: Errors during build.\n\nThe following trace is in the log:\n\nLog: Thu Jan 10 18:14:28 CST 2002\n2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-\nin: org.eclipse.core.resources.\norg.eclipse.core.internal.runtime.AssertionFailedException: assertion failed: \nInvalid parameter to Path.uptoSegment\n\tat org.eclipse.core.internal.runtime.Assert.isTrue(Assert.java:95)\n\tat org.eclipse.core.runtime.Path.uptoSegment(Path.java:844)\n\tat \norg.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.addDependentsOf\n(IncrementalImageBuilder.java:161)\n\tat \norg.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.findAffectedSou\nrceFiles(IncrementalImageBuilder.java:212)\n\tat \norg.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.findAffectedSou\nrceFiles(IncrementalImageBuilder.java:196)\n\tat \norg.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.build\n(IncrementalImageBuilder.java:75)\n\tat org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.buildDeltas\n(JavaBuilder.java:121)\n\tat org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build\n(JavaBuilder.java:76)\n\tat org.eclipse.core.internal.events.BuildManager$2.run\n(BuildManager.java:356)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:821)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:395)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:114)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:179)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:189)\n\tat org.eclipse.core.internal.events.BuildManager$1.run\n(BuildManager.java:138)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:821)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:395)\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild\n(BuildManager.java:152)\n\tat org.eclipse.core.internal.events.BuildManager.build\n(BuildManager.java:214)\n\tat org.eclipse.core.internal.resources.Workspace.build\n(Workspace.java:130)\n\tat org.eclipse.ui.internal.GlobalBuildAction.build\n(GlobalBuildAction.java:57)\n\tat org.eclipse.ui.internal.GlobalBuildAction$1.run\n(GlobalBuildAction.java:141)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)",
    "This is the problem I mentionned over the phone to Kent. Surprisinly I had lost \nthe log.",
    "This problem has been introduced since 1219...\n\nSteps\n1. Start with a new workspace/turn autobuild off.\n2. Use the plugin import tool:\n  select \"Create projects for plugins in default location\"\n  then import binary projects for everything.\n\nLook in the plugins directory \u0026 notice that each binary plugin does NOT have a \nbin folder even though its Java Build Path page says it should.\n\nIn 1219, the bin folder was created when the binary project was created. Now \nits not even though the plugin importer has not changed.\n\nI tried 1219 AND 1219 with the latest jdt.core plugin jar... in both cases the \nbin folder is created when the binary project is created.\n\nSo continuing with the above steps:\n\n2b. import source projects for ui, swt. (delete contents from previous step)\n3. build.\n4. exit the workspace.\n5. restart eclipse.\n6. press the build button. A dialog appears has described above.\n\nThe error is caused by the JavaBuilder being told that the output folder for \neach binary project is actually Added.\n\nWhen the first build was done (in 0109 ONLY), the bin folders were created for \neach binary project since they did not already exist. But since this is in the \ncontext of a build, the bin folders should not show up as added during the next \nbuild, which they do not if that build is performed before the workspace is \nsaved.\n\nSo something has changed b/w 1219 \u0026 0109... the bin folder of a binary project \nis no longer being created when the project is... but it would appear not to be \nin jdt.core. This isn\u0027t necessarily a problem if the delta tree when saved \u0026 \nrestored would not see each bin folder as \u0027Added\u0027.\n\nI\u0027m going to change the incremental builder so it never looks in an Added \nsrc/output folder \u0026 JA will investigate why the delta tree does not restore \nitself properly.",
    "Verified that with the very latest jdt.core\u0027s IncremenatalJavaBuilder, a 0109 \ndrop no longer produces the walkback.\n\nThe bin folder still shows up in the delta as added but is ignored.",
    "Fixed.  There was a problem on restore, where the builders were not receiving \nthe correct deltas.  Essentially, it was an off-by-one error on reading the \narray of trees in WorkspaceTreeReader.  It used trees[++index], so trees[0] \nnever got used.  Changed to trees[index++] to correct the behaviour.\n\nAfter combing over the ElementTree serialization for a couple of days, I also \nrealized there were some inefficiencies that dated from the time when each \nsolution was stored as a separate tree.  I improved this so we no longer do tree \nlinking on restore of the workspace (WorkspaceTreeReader#readTrees).  \nElementTreeReader was also coalescing deltas on restore \n(ElementTreeReaderImpl_1#readDelta), which I\u0027ve removed.  The coalescing \noperation copies data down from the parent, preserving outward appearance \nbut adding unnecessary bulk.  This should translate to a nice improvement in \ntree restore time for large workspaces.",
    "Fixed and tested.  To be released in build 20020122."
  ],
  "commentCreationDates": [
    "2002-01-10T23:58:32+01:00",
    "2002-01-11T11:31:17+01:00",
    "2002-01-11T21:54:03+01:00",
    "2002-01-11T22:32:14+01:00",
    "2002-01-22T15:54:40+01:00",
    "2002-01-22T15:55:49+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.runtime.AssertionFailedException",
      "message": "assertion failed:  Invalid parameter to Path.uptoSegment",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isTrue",
          "source": "Assert.java:95"
        },
        {
          "method": "org.eclipse.core.runtime.Path.uptoSegment",
          "source": "Path.java:844"
        },
        {
          "method": "org.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.addDependentsOf",
          "source": "IncrementalImageBuilder.java:161"
        },
        {
          "method": "org.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.findAffectedSourceFiles",
          "source": "IncrementalImageBuilder.java:212"
        },
        {
          "method": "org.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.findAffectedSourceFiles",
          "source": "IncrementalImageBuilder.java:196"
        },
        {
          "method": "org.eclipse.jdt.internal.core.newbuilder.IncrementalImageBuilder.build",
          "source": "IncrementalImageBuilder.java:75"
        },
        {
          "method": "org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.buildDeltas",
          "source": "JavaBuilder.java:121"
        },
        {
          "method": "org.eclipse.jdt.internal.core.newbuilder.JavaBuilder.build",
          "source": "JavaBuilder.java:76"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:356"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:821"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:395"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:114"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:179"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:189"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:138"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:821"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:395"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:152"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:214"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.build",
          "source": "Workspace.java:130"
        },
        {
          "method": "org.eclipse.ui.internal.GlobalBuildAction.build",
          "source": "GlobalBuildAction.java:57"
        },
        {
          "method": "org.eclipse.ui.internal.GlobalBuildAction$1.run",
          "source": "GlobalBuildAction.java:141"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "7464",
      "date": "2002-01-10T23:58:32+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "7464",
  "bugId": "7464",
  "date": "2002-01-10T23:58:32+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}