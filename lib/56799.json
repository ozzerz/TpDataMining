{
  "comments": [
    "Found this in my log, not sure how to reproduce:\n\n!ENTRY org.eclipse.ui 4 0 Mar 30, 2004 13:10:52.541\n!MESSAGE java.lang.NullPointerException\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3389)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:2971)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3146)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1450)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2254)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1562)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:257)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:90)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:277)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:239)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:267)\n\tat org.eclipse.core.launcher.Main.run(Main.java:692)\n\tat org.eclipse.core.launcher.Main.main(Main.java:676)",
    "I was using the 3.0 M8 release.",
    "Obviously you can\u0027t repeat it.  Looking at the source, there is no way \nthat \"display\" could become null because no callbacks run.  The only theory I \nhave is that there is message peek look that is looking for WM_DEADCHAR to \nprocess accent keys properly.  This peek look is somehow allowing async\u0027s to \nrun and one is running that disposes the control.",
    "Fixed \u003e 20040331\n\nEven though it cannot be reproduced, I changed the message peek loop to use \nPM_NO_YIELD.  This should stop any cross thread asyncs from happening \n(although I\u0027m not sure how they could happen in the first place).  The change \n*should* be harmless.  Please reopen if you ever see the problem again.  \nThanks."
  ],
  "commentCreationDates": [
    "2004-03-30T20:18:57+02:00",
    "2004-03-30T20:19:21+02:00",
    "2004-03-31T15:21:05+02:00",
    "2004-03-31T15:27:24+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.swt.widgets.Control.WM_KEYDOWN",
          "source": "Control.java:3389"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:2971"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3146"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1450"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2254"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1562"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1536"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:257"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:277"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:239"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:267"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:692"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:676"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "56799",
      "date": "2004-03-30T20:18:57+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "56799",
  "bugId": "56799",
  "date": "2004-03-30T20:18:57+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}