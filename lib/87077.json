{
  "comments": [
    "3.1M5a\n\npublic class TypeParams6\u003cT\u003e {\n  private T f1(T t1){\n  \tVector v\u003d new Vector();\n  \tv.add(foo(t1));\n  \tVector ll\u003d (Vector)v.get(0);\n  \treturn (T)ll.get(0);\n  }\n Vector foo(T t){\n\t  Vector vs\u003d new Vector();\n\t  vs.add(t);\n\t  return vs;\n  }\n}\n\nRoot exception:\njava.lang.NullPointerException\nat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.getConstraintVariable(InferTypeArgumentsConstraintCreator.java:628)\nat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.doVisitMethodInvocationArguments(InferTypeArgumentsConstraintCreator.java:388)\nat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.endVisit(InferTypeArgumentsConstraintCreator.java:307)\nat org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\nat org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\nat\norg.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:143)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\nat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\nat org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:503)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\nat org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:486)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\nat org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:291)\nat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\nat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST(InferTypeArgumentsRefactoring.java:137)\nat\norg.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:641)\nat\norg.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:436)\nat org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:651)\nat\norg.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions(InferTypeArgumentsRefactoring.java:132)\nat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)\nat\norg.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:114)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1702)\nat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)\nat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:111)",
    "another one - with no type params:\n\npublic class ExtendsStack extends Stack{\n    void newOne() throws Exception{\n\tnew Vector().add(new ExtendsStack());\n    }\n\t\n    Object foo(){\n\treturn push(new ExtendsStack());\n    }\n}",
    "Moving Milestone.",
    "I20050527-0010\n\nExample from comment 1 works for me. Comment 0 does not throw an NPE any more,\nbut infers this:\n\npublic class TypeParams6\u003cT\u003e {\n\tprivate T f1(T t1) {\n\t\tVector\u003cVector\u003cT\u003e\u003e v\u003d new Vector\u003cVector\u003cT\u003e\u003e();\n\t\tv.add(foo(t1));\n\t\tVector ll\u003d v.get(0);\n\t\treturn (T) ll.get(0);\n\t}\n\n\tVector\u003cT\u003e foo(T t) {\n\t\tVector\u003cT\u003e vs\u003d new Vector\u003cT\u003e();\n\t\tvs.add(t);\n\t\treturn vs;\n\t}\n}\n\nThe type of Vector ll should be inferred to be Vector\u003cT\u003e.",
    "Deferring.",
    "See also bug 87078."
  ],
  "commentCreationDates": [
    "2005-03-03T15:39:01+01:00",
    "2005-03-18T00:21:10+01:00",
    "2005-03-29T14:49:47+02:00",
    "2005-05-27T11:39:32+02:00",
    "2005-06-09T17:28:53+02:00",
    "2006-05-30T17:39:16+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.getConstraintVariable",
          "source": "InferTypeArgumentsConstraintCreator.java:628"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.doVisitMethodInvocationArguments",
          "source": "InferTypeArgumentsConstraintCreator.java:388"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator.endVisit",
          "source": "InferTypeArgumentsConstraintCreator.java:307"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodInvocation.accept0",
          "source": "MethodInvocation.java:247"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodInvocation.accept0",
          "source": "MethodInvocation.java:245"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ExpressionStatement.accept0",
          "source": "ExpressionStatement.java:143"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:135"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
          "source": "ASTNode.java:2497"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
          "source": "MethodDeclaration.java:503"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:486"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
          "source": "ASTNode.java:2520"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:291"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST",
          "source": "InferTypeArgumentsRefactoring.java:137"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:641"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:436"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createASTs",
          "source": "ASTParser.java:651"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions",
          "source": "InferTypeArgumentsRefactoring.java:132"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:84"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:114"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1702"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:86"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:111"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "87077",
      "date": "2005-03-03T15:39:01+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "87077",
  "bugId": "87077",
  "date": "2005-03-03T15:39:01+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}