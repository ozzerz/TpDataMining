{
  "comments": [
    "With M6 and also with build  I20050414-1107 i get the stacktrace below now and\nthen when wanting the place a breakpoint when double clicking in the editor bar.\nif i close the editor and reopen it again it goes ok.\n\n!MESSAGE Error within Debug UI: \n!STACK 0\norg.eclipse.jface.text.BadLocationException\n\tat\norg.eclipse.jface.text.AbstractLineTracker.getLineInformation(AbstractLineTracker.java:251)\n\tat\norg.eclipse.jface.text.AbstractDocument.getLineInformation(AbstractDocument.java:827)\n\tat\norg.eclipse.debug.ui.actions.ToggleBreakpointAction.run(ToggleBreakpointAction.java:70)\n\tat\norg.eclipse.ui.texteditor.AbstractRulerActionDelegate.run(AbstractRulerActionDelegate.java:99)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:246)\n\tat org.eclipse.ui.internal.PluginAction.run(PluginAction.java:208)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor$12.triggerAction(AbstractTextEditor.java:2222)\n\tat\norg.eclipse.ui.texteditor.AbstractTextEditor$12.mouseDoubleClick(AbstractTextEditor.java:2236)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:140)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2895)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2528)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1570)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1534)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:306)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:156)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:316)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:269)\n\tat org.eclipse.core.launcher.Main.run(Main.java:948)\n\tat org.eclipse.core.launcher.Main.main(Main.java:932)",
    "What\u0027s in your editor? (It works for me)",
    "yes i believe that it works for you\nIt sometimes just happens And then i see that line of code\nIt is a normal java file. And as i said if i reopen that same file and place a\nbreakpoint on the same point i tried previosly it works..\n\nI can\u0027t reproduce it consistently.. It sometimes just happens..",
    "Dani, do you know of anything in the text framework that might be causing the \nIVerticalRulerInfo to be reporting an invalid \"last line of mouse activity\". \nWe do this, which is causing the \"bad location\":\n\nint line \u003d fRulerInfo.getLineOfLastMouseButtonActivity();\ntry {\n\tIRegion region \u003d fDocument.getLineInformation(line);\n\n",
    "No. I would have to have a test case in order to see why we get an invalid line\nthere.",
    "*** Bug 92323 has been marked as a duplicate of this bug. ***",
    "*** Bug 92376 has been marked as a duplicate of this bug. ***",
    "I\u0027m getting this too. Are there any trace options I can enable to assist with\ndebugging?",
    "I\u0027m also seeing this in I20050419-1200\n\nFor me, it happens when I\u0027m debugging, and I click on another stack frame to\nopen a different editor (actually reuse the one that was open).  In this other\neditor, creating a breakpoint fails with the BadLocationException.  I\u0027m\nwondering if this is related to the recent event problems around editor input\nchanges?",
    "Not really, since this bug appeared before that.",
    "*** Bug 92767 has been marked as a duplicate of this bug. ***",
    "*** Bug 93101 has been marked as a duplicate of this bug. ***",
    "*** Bug 94427 has been marked as a duplicate of this bug. ***",
    "I\u0027m getting this in 3.1M7.\nI\u0027ve got one source file where I can set breakpoints in the top half of the file\nbut not the bottom half.\n\nBut now I just restarted the program and I can set breakpoints everywhere. It\u0027s\nvery odd.\n\nI don\u0027t know if it matters but I did get this error 60 seconds before the first\nUI error in the log. I\u0027m running an ea version of JDK6.\n\nError 2005-05-18 14:54:47.843 Internal error logged from JDI Debug:\ncom.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine\nat\norg.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:78)\nat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:170)\nat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:192)\nat org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:222)\nat org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:351)\nat\norg.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:128)\nat\norg.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:242)\nat\norg.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:51)\nat\norg.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:97)\nat org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:666)\nat\norg.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getLogicalValue(DeferredVariable.java:161)\nat\norg.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getLogicalValue(DeferredVariable.java:145)\nat\norg.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getValueChildren(DeferredVariable.java:107)\nat\norg.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getChildren(DeferredVariable.java:47)\nat\norg.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.fetchDeferredChildren(DeferredVariable.java:62)\nat\norg.eclipse.debug.internal.ui.views.RemoteTreeContentManager$FetchJob.run(RemoteTreeContentManager.java:81)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:67)",
    "I don\u0027t think the VM disconnected error is related - it just looks like a \ndebug session ended as we were in the midst of computing a logical structure \nfor a variable.",
    "Any news about this problem?\n\nI got it really often and it\u0027s really annoying (see duplicate bug 93101).\nNote that now it also happens using popup menu. The only workaround which always\nworks is to go in another perspective window than debugger one...\n\nI would like to see severity/priority increased as it gives a really bad idea of\ndebugger behavior in eclipse...",
    "*** Bug 95925 has been marked as a duplicate of this bug. ***",
    "Steps to reproduce.\n\n* A calls B.\n* A is a samller source file than B (less lines)\n* breakpoint in A before calling B\n* debug to breakpoint\n* step into B\n* select frame for A (2nd on stack)\n* remove breakpoint in A\n* select frame for B (1st on stack)\n* create a breakpoint in B, on a line number that is greater than the range of \nA\n\u003e error\n\nExample A:\n\npublic class A {\n   public static void main(String[] args) {\n       new B().foo();\n   }\n}\n\nExample B:\n\npublic class B {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t}\n\n\tpublic void foo() {\n\t\tSystem.out.println(\"foo\");\n\t}\n}",
    "It appears the wrong delegate action is being invoked. See the following trace \nI created. Actions are created as editors are changed. The first \"invoke\" \ntrace is to remove the breakpoint from A, the second invoke is to add a \nbreakpoint in B, which is the wrong delegate. The delegate for A (@1d12a00) is \ninvoked even though a new delegate has been created for B (@15fe218).\n\n* Create action [org.eclipse.debug.ui.actions.ToggleBreakpointAction@1ba2ad8] \nfor org.eclipse.ui.part.FileEditorInput(/JUnit/junit3.8.1/A.java)\n\n* Create action [org.eclipse.debug.ui.actions.ToggleBreakpointAction@95df7] \nfor \norg.eclipse.jdt.internal.ui.javaeditor.InternalClassFileEditorInput@b16e041e\n\n* Create action [org.eclipse.debug.ui.actions.ToggleBreakpointAction@d20d2a] \nfor org.eclipse.ui.part.FileEditorInput(/JUnit/junit3.8.1/A.java)\n\n* Create action [org.eclipse.debug.ui.actions.ToggleBreakpointAction@5e35ee] \nfor org.eclipse.ui.part.FileEditorInput(/JUnit/junit3.8.1/A.java)\n\n* Create action [org.eclipse.debug.ui.actions.ToggleBreakpointAction@1d12a00] \nfor org.eclipse.ui.part.FileEditorInput(/JUnit/junit3.8.1/A.java)\n\n* invoke org.eclipse.debug.ui.actions.ToggleBreakpointAction@1d12a00\n\n* Create action [org.eclipse.debug.ui.actions.ToggleBreakpointAction@15fe218] \nfor org.eclipse.ui.part.FileEditorInput(/JUnit/junit3.8.1/B.java)\n\n* invoke org.eclipse.debug.ui.actions.ToggleBreakpointAction@1d12a00\n\nRe-assigning to text for investigation. I think there may be race issues. \nSometimes trying to debug this with breakpoints, the correct behavior did \noccurr.",
    "Just to eliminate some variables, are perspective switches happening in your\nsteps above?  If you do it all from the Debug perspective, does the problem\nstill occur?\n",
    "Simpler steps without debugging or perspective switching involved:\n\nHave described setup, Java perspective, all editors closed.\n0. enable editor reuse and set count to 1\n1. open A\n2. set a breakpoint\n3. open B\n4. set a breakpoint below end of A\n\u003d\u003d\u003e BLE",
    "It works for other markers and it also works if I don\u0027t add a breakpoint to the\nsmall file first.",
    "Created an attachment (id\u003d21720)\nPatch against org.eclipse.debug.ui\n\nThe bug is in ToggleBreakpointAction: it keeps state related to the editor\ninput (the document) but does not update it. Editor actions must get their\nstate from the editor when they\u0027re run or do their own bookkeeping when the\neditor input changes.\n\nThe attached patch fixes the problem. Please note that the document in the\nconstructor is currently not used but I left it because otherwise you would\nneed to get API change approval. Also note, that if a client specifies a\nnon-null document, it will be used.\n",
    "Applied patch. Also allowed for the part to provide an IDocument adapter in \nthe case it is not an ITextEditor.",
    "Please verify, Kevin.",
    "verified",
    "*** Bug 96972 has been marked as a duplicate of this bug. ***",
    "*** Bug 98112 has been marked as a duplicate of this bug. ***",
    "*** Bug 99134 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-04-15T16:48:17+02:00",
    "2005-04-18T22:59:31+02:00",
    "2005-04-18T23:49:52+02:00",
    "2005-04-20T18:12:17+02:00",
    "2005-04-20T18:45:26+02:00",
    "2005-04-22T14:40:00+02:00",
    "2005-04-22T16:40:54+02:00",
    "2005-04-23T00:36:36+02:00",
    "2005-04-25T21:00:23+02:00",
    "2005-04-25T22:08:03+02:00",
    "2005-04-26T16:03:04+02:00",
    "2005-04-28T16:16:14+02:00",
    "2005-05-11T22:31:51+02:00",
    "2005-05-18T21:08:15+02:00",
    "2005-05-18T21:38:48+02:00",
    "2005-05-19T10:13:02+02:00",
    "2005-05-19T15:56:43+02:00",
    "2005-05-19T18:17:17+02:00",
    "2005-05-19T19:00:31+02:00",
    "2005-05-19T20:15:13+02:00",
    "2005-05-25T15:24:17+02:00",
    "2005-05-25T15:38:35+02:00",
    "2005-05-25T17:24:55+02:00",
    "2005-05-25T18:12:33+02:00",
    "2005-05-25T18:12:47+02:00",
    "2005-05-25T22:48:08+02:00",
    "2005-05-27T16:01:50+02:00",
    "2005-06-02T16:44:02+02:00",
    "2005-06-09T15:01:57+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.text.BadLocationException",
      "elements": [
        {
          "method": "org.eclipse.jface.text.AbstractLineTracker.getLineInformation",
          "source": "AbstractLineTracker.java:251"
        },
        {
          "method": "org.eclipse.jface.text.AbstractDocument.getLineInformation",
          "source": "AbstractDocument.java:827"
        },
        {
          "method": "org.eclipse.debug.ui.actions.ToggleBreakpointAction.run",
          "source": "ToggleBreakpointAction.java:70"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractRulerActionDelegate.run",
          "source": "AbstractRulerActionDelegate.java:99"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:246"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.run",
          "source": "PluginAction.java:208"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$12.triggerAction",
          "source": "AbstractTextEditor.java:2222"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$12.mouseDoubleClick",
          "source": "AbstractTextEditor.java:2236"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:140"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2895"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2528"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1570"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1534"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:306"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:228"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:344"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:156"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:316"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:269"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:948"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:932"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "91543",
      "date": "2005-04-15T16:48:17+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "major"
    },
    {
      "exceptionType": "com.sun.jdi.VMDisconnectedException",
      "message": "Got IOException from Virtual Machine",
      "elements": [
        {
          "method": "org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket",
          "source": "PacketSendManager.java:78"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:170"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:192"
        },
        {
          "method": "org.eclipse.jdi.internal.MirrorImpl.requestVM",
          "source": "MirrorImpl.java:222"
        },
        {
          "method": "org.eclipse.jdi.internal.ClassTypeImpl.superclass",
          "source": "ClassTypeImpl.java:351"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass",
          "source": "JDIClassType.java:128"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes",
          "source": "JavaLogicalStructures.java:242"
        },
        {
          "method": "org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures",
          "source": "LogicalStructureProvider.java:51"
        },
        {
          "method": "org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes",
          "source": "LogicalStructureManager.java:97"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes",
          "source": "DebugPlugin.java:666"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getLogicalValue",
          "source": "DeferredVariable.java:161"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getLogicalValue",
          "source": "DeferredVariable.java:145"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getValueChildren",
          "source": "DeferredVariable.java:107"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.getChildren",
          "source": "DeferredVariable.java:47"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.DeferredVariable.fetchDeferredChildren",
          "source": "DeferredVariable.java:62"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.RemoteTreeContentManager$FetchJob.run",
          "source": "RemoteTreeContentManager.java:81"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:67"
        }
      ],
      "number": 1,
      "commentIndex": 13,
      "bugId": "91543",
      "date": "2005-05-18T21:08:15+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "major"
    }
  ],
  "groupId": "91543",
  "bugId": "91543",
  "date": "2005-04-15T16:48:17+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "major"
}