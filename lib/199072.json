{
  "comments": [
    "public class QualifiedIncrements {\n\tprivate int test;\n\tprivate void foo() {\n\t\tQualifiedIncrements qi \u003d new QualifiedIncrements();\n\t\tqi.test++;\n\t}\n}\nUse Extract Class on all fields with getters\u0026setters.",
    "Silent semantic change\n\nKarsten, can you fix for M1 please?",
    "The new code will cause wrong code without a compile error for a statement like:\nnew QualifiedIncrements().test++;\nwill result in:\nnew QualifiedIncrements().parameterObject.setTest(new QualifiedIncrements().parameterObject.getTest() + 1);\nMaybe generating a incrementNode method would not be so bad.",
    "\nnew Q().test++;\nequals:\nnew Q().pO.test++;\nequals:\nnew Q().pO.setTest(new Q().pO.getTest() + 1);\n\nNot?\n\nIf it is difficult to convert just generate the \u0027Can not convert node error\u0027\nCode like\nnew Q().test++;\nis pretty useless anyway.",
    "I guess  I will insert a check and give a warning if the qualifier is some kind of method.",
    "Created an attachment (id\u003d75649)\nPatch\n\n",
    "Given:\npackage test;\npublic class E1 {\n\tprivate int i;\n\tpublic void foo() {\n\t\tnew E1().i\u003d 1;\n\t}\n}\n1. Extract Class...\n2. Generate Setters\n3. Preview\u003e\n4. Select node \u0027E1.java\u0027 on preview page:\n\norg.eclipse.text.edits.MalformedTreeException: No target edit provided.\n\tat org.eclipse.text.edits.CopySourceEdit.performConsistencyCheck(CopySourceEdit.java:239)\n\tat org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:870)\n\tat org.eclipse.text.edits.CopySourceEdit.traverseConsistencyCheck(CopySourceEdit.java:214)\n\tat org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:866)\n\tat org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:866)\n\tat org.eclipse.text.edits.TextEdit.traverseConsistencyCheck(TextEdit.java:866)\n\tat org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo(TextEditProcessor.java:168)\n\tat org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity(TextEdit.java:740)\n\tat org.eclipse.text.edits.TextEditProcessor.performEdits(TextEditProcessor.java:149)\n\tat org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument(TextChange.java:507)\n\tat org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument(TextChange.java:376)\n\tat org.eclipse.ltk.core.refactoring.TextChange.getPreviewContent(TextChange.java:384)\n\tat org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput(TextEditChangePreviewViewer.java:208)\n\tat org.eclipse.ltk.internal.ui.refactoring.AbstractChangeNode.feedInput(AbstractChangeNode.java:101)\n\tat org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview(PreviewWizardPage.java:600)\n\tat org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$6(PreviewWizardPage.java:585)\n\tat org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$7.selectionChanged(PreviewWizardPage.java:576)\n\tat org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:162)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:857)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:193)\n\tat org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:160)\n\tat org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2045)\n\tat org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:1138)\n\tat org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect(CheckboxTreeViewer.java:271)\n\tat org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:1168)\n\tat org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:227)\n\tat org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:221)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:388)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3708)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3319)\n\tat org.eclipse.jface.window.Window.runEventLoop(Window.java:825)\n\tat org.eclipse.jface.window.Window.open(Window.java:801)\n\tat org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:142)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:154)\n\tat org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:49)\n\tat org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startExtractClassRefactoring(RefactoringExecutionStarter.java:516)\n\tat org.eclipse.jdt.ui.actions.ExtractClassAction.run(ExtractClassAction.java:124)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:272)\n\tat org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:498)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:545)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)\n\tat org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3708)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3319)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1173)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1148)",
    "I still don\u0027t get why you show a \u0027semantic may change\u0027 warning. I.e. why does the semantic not change here:\nE1 e1\u003d new E1();\ne1.i\u003d 1;\nBug here:\nE1 e1\u003d new E1();\n(e1).i\u003d 1;\n\nHow can you possibly convert a method/super method invocation?",
    "The target edit thing is hard to fix. But I will discuss with Markus what is possible there.\nI included the (i) case because in a braced Expression quite everything is possible. It could be as easy as a cast, but it also could be a method invocation.\nFor a method invocation look at the testcases:\nnext().test++;\n\nprivate QualifiedIncrements next() {\n return new QualifiedIncrements();\n}\nQuite the same for super method invocations. If next is declared in a super class it would be super.next().test++;",
    "Created an attachment (id\u003d75669)\nUpated Patch\n\nThe patch now inserts a dummy Node for the Qualifier and replaces it with the copied Node if it is found to be used. This way I can check if the node has been used and can thus don\u0027t give a warning if the assignment is a simple literal.",
    "(In reply to comment #9)\n\u003e Created an attachment (id\u003d75669) [details]\n\u003e Upated Patch\n\u003e \n\u003e The patch now inserts a dummy Node for the Qualifier and replaces it with the\n\u003e copied Node if it is found to be used. This way I can check if the node has\n\u003e been used and can thus don\u0027t give a warning if the assignment is a simple\n\u003e literal.\n\u003e \n\nThis patch is not minimal. ",
    "Created an attachment (id\u003d75672)\nRemoved some formatting changes\n\nThe patch itself is a significant change in how I generate the code, it thus can not be \"minimal\". As the old code was hard to read and thus to maintain I added some readibility that I needed to understand for myself what I was doing there. In ParameterObjectFactory are some methods namely createReadAcces and createWriteAccess that need a rewrite because they are extremly hard to understand.",
    "(In reply to comment #11)\n\u003e Created an attachment (id\u003d75672) [details]\n\u003e Removed some formatting changes\n\u003e \n\u003e The patch itself is a significant change in how I generate the code, it thus\n\u003e can not be \"minimal\". As the old code was hard to read and thus to maintain I\n\u003e added some readibility that I needed to understand for myself what I was doing\n\u003e there. In ParameterObjectFactory are some methods namely createReadAcces and\n\u003e createWriteAccess that need a rewrite because they are extremly hard to\n\u003e understand.\n\u003e \n\nThis patch is not minimal. Do not extract methods, do not change formatting. I can\u0027t see the significant change because of all the noise. ",
    "Created an attachment (id\u003d75682)\nMinimalPatch\n\nI don\u0027t want to see this patch in a post M1 environment. This is just for being minimal.",
    "Created an attachment (id\u003d75686)\nfix\n\nReplaced term \u0027dummy\u0027 with \u0027marker\u0027",
    "fixed \u003e I20070807-0010",
    "verified in I20070808-1800"
  ],
  "commentCreationDates": [
    "2007-08-07T14:59:44+02:00",
    "2007-08-07T17:10:35+02:00",
    "2007-08-07T17:55:02+02:00",
    "2007-08-08T10:11:49+02:00",
    "2007-08-08T10:58:38+02:00",
    "2007-08-08T11:48:44+02:00",
    "2007-08-08T14:03:20+02:00",
    "2007-08-08T14:07:00+02:00",
    "2007-08-08T14:26:26+02:00",
    "2007-08-08T15:42:38+02:00",
    "2007-08-08T16:06:05+02:00",
    "2007-08-08T16:31:53+02:00",
    "2007-08-08T17:00:16+02:00",
    "2007-08-08T17:39:11+02:00",
    "2007-08-08T18:17:49+02:00",
    "2007-08-08T18:19:31+02:00",
    "2007-08-09T14:39:03+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.text.edits.MalformedTreeException",
      "message": "No target edit provided.",
      "elements": [
        {
          "method": "org.eclipse.text.edits.CopySourceEdit.performConsistencyCheck",
          "source": "CopySourceEdit.java:239"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.traverseConsistencyCheck",
          "source": "TextEdit.java:870"
        },
        {
          "method": "org.eclipse.text.edits.CopySourceEdit.traverseConsistencyCheck",
          "source": "CopySourceEdit.java:214"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.traverseConsistencyCheck",
          "source": "TextEdit.java:866"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.traverseConsistencyCheck",
          "source": "TextEdit.java:866"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.traverseConsistencyCheck",
          "source": "TextEdit.java:866"
        },
        {
          "method": "org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo",
          "source": "TextEditProcessor.java:168"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity",
          "source": "TextEdit.java:740"
        },
        {
          "method": "org.eclipse.text.edits.TextEditProcessor.performEdits",
          "source": "TextEditProcessor.java:149"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument",
          "source": "TextChange.java:507"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.TextChange.getPreviewDocument",
          "source": "TextChange.java:376"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.TextChange.getPreviewContent",
          "source": "TextChange.java:384"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput",
          "source": "TextEditChangePreviewViewer.java:208"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.AbstractChangeNode.feedInput",
          "source": "AbstractChangeNode.java:101"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.showPreview",
          "source": "PreviewWizardPage.java:600"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.access$6",
          "source": "PreviewWizardPage.java:585"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage$7.selectionChanged",
          "source": "PreviewWizardPage.java:576"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer$2.run",
          "source": "Viewer.java:162"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:193"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:160"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateSelection",
          "source": "StructuredViewer.java:2045"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleSelect",
          "source": "StructuredViewer.java:1138"
        },
        {
          "method": "org.eclipse.jface.viewers.CheckboxTreeViewer.handleSelect",
          "source": "CheckboxTreeViewer.java:271"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected",
          "source": "StructuredViewer.java:1168"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireSelectionEvent",
          "source": "OpenStrategy.java:227"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$3",
          "source": "OpenStrategy.java:221"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:388"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3708"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3319"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java:825"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:801"
        },
        {
          "method": "org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run",
          "source": "RefactoringWizardOpenOperation.java:142"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run",
          "source": "RefactoringWizardOpenOperation.java:154"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate",
          "source": "RefactoringStarter.java:49"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startExtractClassRefactoring",
          "source": "RefactoringExecutionStarter.java:516"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.ExtractClassAction.run",
          "source": "ExtractClassAction.java:124"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun",
          "source": "SelectionDispatchAction.java:272"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.run",
          "source": "SelectionDispatchAction.java:244"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:498"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:545"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:490"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:402"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3708"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3319"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:169"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:508"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:447"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1173"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1148"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "199072",
      "date": "2007-08-08T14:03:20+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "199072",
  "bugId": "199072",
  "date": "2007-08-07T14:59:44+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "major"
}