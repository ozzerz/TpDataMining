{
  "comments": [
    "It seems that there are situations where the javadoc attachment cannot be removed.\nSee bug 133348 for further details.",
    "bug 133348 is rather long. Can you give reproducable steps for the bug here?",
    "Damien,\n\nCould you please indicate the steps you tried to get rid of the javadoc attachment?\nFrom what I understood, you tried the following steps:\n1) Start a new workspace\n2) Start a new java project\n3) Edit the JRE libraries and try to remove the javadoc attachment for the rt.jar.\nI tried and the javadoc attachment was removed.\nIn one case, I had the same problem, but I could not reproduce.",
    "With Eclipse 3.2M6\n1) Start a new workspace\n2) Start a new java project\n3) Edit the JRE libraries and try to remove the javadoc attachment for the\nrt.jar\n\nJavadoc attachement is removed in HMI, but then, if I try to get \u0027l\u0027 class completion, I again get this error :\n\nJava Model Exception: Java Model Status [Cannot retrieve the attached javadoc for l [in l.class [in sun.security.krb5.internal.ktab [in C:\\Program Files\\Java\\jre1.5.0_06\\lib\\rt.jar [in Test]]]]java.net.ConnectException: Connection timed out: connect\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.PlainSocketImpl.doConnect(Unknown Source)\n\tat java.net.PlainSocketImpl.connectToAddress(Unknown Source)\n\tat java.net.PlainSocketImpl.connect(Unknown Source)\n\tat java.net.Socket.connect(Unknown Source)\n\tat java.net.Socket.connect(Unknown Source)\n\tat sun.net.NetworkClient.doConnect(Unknown Source)\n\tat sun.net.www.http.HttpClient.openServer(Unknown Source)\n...\n\nIf I configure a http proxy (via -Dhttp.proxyHost ...), no problem (a bit slow, but no exception).",
    "Martin,\n\nThis is pretty serious. If we cannot improve the connection when behind a firewall, it is important to be able to disable it.\nIt looks like it is possible to remove the javadoc attachment from the UI, but it is still set in the classpath entry. JDT/Core doesn\u0027t cache this information, we check if the javadoc attachment is set before we try to retrieve the javadoc for a type.",
    "Note that the Javadoc lcoations for entries in container is not stored in the .classpath, but provided by the entries for the classpath container.\n\nI can\u0027t reproduce this in N20060418-0010\n\nHow exactly did you remove the Javadoc location from the rt.jar?\n\na.) property page on rt.jar (in JRE contains): clear the field and press ok\nb.) preferences - installed JRE\u0027s\n\nFrom the UI it looks as if the JRE container correctly updates it\u0027s entries.\n\n",
    "I cannot reproduce problem with Eclipse 3.2RC1 I20060413-1718.\n\nIf I remove javadoc attachement ( a) or b) solution), no problem with completion anymore.\n\nBy the way, firewall configuration UI should be provided, instead of defining -Dhttp.proxyHost... or using internal javadoc URL.\n\nThanks",
    "Olivier, can you still reproduce it?\n\nI think we should provide a way to disable the Javadoc lookup somehow, e.g. a preference setting. ",
    "No I can\u0027t. I could only get it once. A preference would actually be the best solution. But this would need to be done at the UI level.\nThe good point with a preference is that it would take one change to disable it instead of manually changing all javadoc attachment.\nThe problem is that I don\u0027t know if we can add a preference for RC2. Might be too late for 3.2.",
    "This should be a polish item.\nAdding a preference in the UI to disable the javadoc attachment globally would be an improvement for the user.\nNo need to manually edit each entry of the classpaths or the JRE container.\nMartin,\nWe should add an option on the UI side. The JDT/Core API would be called only if the preference is set.\n",
    "-1 for a UI only solution. We don\u0027t want to check that flag.",
    "I more thought of a jdt.core setting where people that not online could prevent unnecessary web accesses with one click.\nJavadoc settings are shared in a team and removing the location isn\u0027t a good solution (information is lost).\n\nThis can\u0027t be UI option as the access embedded in calls like IMethod.getParameterNames or code assist.",
    "The current API doesn\u0027t say anything about a preference.\nSo changing the core side would require to modify the existing API.",
    "The API\u0027s can\u0027t guarantee results as everyting depends if a web location can be reached or not. So I don\u0027t think there\u0027s a need to mention such an option (do you mention the timeout option?). \n\nMaybe this option can be folded together with the timeout option, e.g. timeout \u003d\u003d -1",
    "I added bug 137975.\nPlease continue the discussion there. Having a project\u0027s specific option should be good enough. Of course the ui should then expose it.",
    "closing this bug as worksforme, can\u0027t reproduce anymore.\n\nDamien, for the proxy configuration, I agree. Can you file this in a new bug against platform.ui?",
    "In fact, it has been discussed many times, so I won\u0027t fill in a new bug\nSee bug #97423, bug #119278, bug #92897, ..."
  ],
  "commentCreationDates": [
    "2006-04-07T18:58:39+02:00",
    "2006-04-10T23:39:29+02:00",
    "2006-04-11T03:02:29+02:00",
    "2006-04-13T10:08:30+02:00",
    "2006-04-18T22:47:25+02:00",
    "2006-04-19T11:37:16+02:00",
    "2006-04-20T11:06:37+02:00",
    "2006-04-20T14:41:04+02:00",
    "2006-04-20T15:52:56+02:00",
    "2006-04-21T16:55:06+02:00",
    "2006-04-21T17:11:50+02:00",
    "2006-04-21T17:17:33+02:00",
    "2006-04-21T17:21:34+02:00",
    "2006-04-21T17:32:43+02:00",
    "2006-04-21T17:59:39+02:00",
    "2006-04-23T22:44:15+02:00",
    "2006-04-25T18:27:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.ConnectException",
      "message": "Connection timed out: connect",
      "elements": [
        {
          "method": "java.net.PlainSocketImpl.socketConnect",
          "source": "Native Method"
        },
        {
          "method": "java.net.PlainSocketImpl.doConnect",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.PlainSocketImpl.connectToAddress",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.PlainSocketImpl.connect",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.Socket.connect",
          "source": "Unknown Source"
        },
        {
          "method": "java.net.Socket.connect",
          "source": "Unknown Source"
        },
        {
          "method": "sun.net.NetworkClient.doConnect",
          "source": "Unknown Source"
        },
        {
          "method": "sun.net.www.http.HttpClient.openServer",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "135604",
      "date": "2006-04-13T10:08:30+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "135604",
  "bugId": "135604",
  "date": "2006-04-07T18:58:39+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}