{
  "comments": [
    "Would you please remove the dependency on the mylar jar files from the bugzilla core? I\u0027d like to be able to use it as a stand-alone jar file without having to import a lot of eclipse and mylar jars.\n\nFor example, I was trying to use bugzilla.core to do a search and got this error:\n\n...\nCaused by: java.lang.IllegalStateException: Workspace is closed.\nat org.eclipse.core.resources.ResourcesPlugin.getWorkspace(ResourcesPlugin.java:328)\n\tat org.eclipse.mylar.bugzilla.core.search.BugzillaSearchResultCollector.\u003cclinit\u003e(BugzillaSearchResultCollector.java:58)",
    "I will agree, it would be nice if there was an eclipse core jar that only had dependancies on java (and maybe some other jar that is not eclipse).  I feel that this very useful so that other tools that are not eclipse based can benefit from the basic bugzilla support of searching and downloading bugs.",
    "There appear to be 2 issues here:\n\n1) Support using the bugzilla.core stuff in headless mode (i.e. without the Workbench running).  This involves creating a JAR library for others to depend on, will take some restructuring, but should be more feasible now that I\u0027ve done a bit of additional de-coupling of the core stuff from UI.\n\n2) Improve/reduce the dependency on the mylar.core and mylar.tasklist plug-ins.  The tasklist dependency was added in order to support a generic notion of repositories and for bugzilla.core to be aware of multiple repositories.  But those parts are actually de coupled from the Eclipse UI, and tasklist could potentially be split into core and UI plug-ins.\n\nJohn, so far your case is the only driver that I know of for this, so please summarize how you would like this to work, and what functionality in bugzilla.core you depend on.",
    "I will also be using this too.\n\nWhat I will need is the functionality to perform a search with some query parameters, and then get each bug in xml form from the server (and maybe some other information in the future).",
    "My requirements are similar to those of Shawn; make search queries on a Bugzilla server (like all resolved bugs in the last month) and collect the reports as objects.",
    "Since I needed to use this now, I went and got the core search and downloading funcitonality from bugzilla core.  This posed to be more of a problem then previously due to the multiple repository support being within the tasklist and the bugzilla core has it tightly woven into it.  It would be good to see a very simple api, getBug, search and getBugAsStream.  This could easily be used by mylar to perform the required tasks, but would also allow for others to use the functionality.",
    "Do you need it this week or can it wait until next?  I\u0027d definitely like to do it asap but need to figure out if there should be a mylar.tasklist.core plug-in that bugzilla.core can depend on, or whether to make a seperate Bugzilla API that\u0027s not repository aware.  But the latter is wierd because a repository is a necessary concept, and a user of the API can just specify one (all it takes is a URL, username, and password).",
    "I don\u0027t need it right away since I currently have a work around.  What you are saying seems like it should be a good way to set it up.",
    "Scheduling for 0.6 phase, at which point we will refactor both tasklist and bugzilla (probably in time for 0.5.1).",
    "What is the status on the progress of this report since it has been a month since it has seen any activity?",
    "It has had to take a back-seat to the move from HTML to RDF based bugzilla integration (e.g. bug 136219).  But I\u0027m still hoping to get this done for 0.5.2 (next Friday).",
    "Done, bugzilla.core now only depends on org.eclipse.core.runtime.  This involved major refactoring since there was a lot of coupling to eclipse.ui and plug-ins that depended on eclipse.ui.  One thing that\u0027s still not in core is the BugzillaSearchEngine which is coupled to search UI classes.  If you need that feel free to make a seperate report.",
    "Created an attachment (id\u003d41390)\nmylar/context/zip\n\n",
    "Created an attachment (id\u003d41392)\nmylar/context/zip\n\n",
    "Created an attachment (id\u003d41393)\nmylar/context/zip\n\n",
    "When I use BugzillaRepositoryUtil.getBug(), I get the following exception:\n \norg.eclipse.mylar.internal.bugzilla.core.AbstractReportFactory.collectResults(AbstractReportFactory.java:58)\norg.eclipse.mylar.internal.bugzilla.core.RepositoryReportFactory.populateReport(RepositoryReportFactory.java:56)\norg.eclipse.mylar.internal.bugzilla.core.BugzillaRepositoryUtil.getBug(BugzillaRepositoryUtil.java:136)\n\nThe problem appears to be the following line in collectResults():\n\nURLConnection cntx \u003d BugzillaPlugin.getDefault().getUrlConnection(url, proxySettings);\n\nThe problem stems from BugzillaPlugin.getDefault() returning null because Bugzilla Core jar is being used outside of the Eclipse plugin environment. This means that the start() method which sets the plugin instance is never called. Since the use of the plugin is to get a connection, perhaps pass in the connection instead?",
    "Bugzilla core depends on more than just eclipse.core.runtime. When I used it I found I had to also include commons-httpclient (a reasonable dependency), org.eclipse.equinox.common (not sure if this is reasonable) and org.eclipse.osgi (again not sure if this is reasonable).\n\nAlso, when I updated the source to create a new jar I discovered that Bugzilla Core now also depends on the Mylar TaskList, which in turn relies on Mylar Core. I don\u0027t think this is a good idea (and the reason for the original request). I don\u0027t want to have to include all of Mylar (or a large part of Mylar) just to get some bug reports from a server.",
    "Yes, we need to fix this by adding a new component now that we moved the repository task data to be generic, and plan on doing so soon..  Are you happy using the 0_5_2 branch for now or is this blocking you?",
    "After reverting to 5_2 things seem to be working fine with the projects I\u0027m using (for the time being).",
    "Scheduling this for start of July when we plan on restructuring the plug-ins since we will no longer need to merge back to 3.1.  John, if it is holding you up just let us know.",
    "Done.  As an example using the support in headless mode (e.g. on a server) use the following unit test, which does not require the workbench to run:\n\n   org.eclipse.mylar.bugzilla.tests.headless.BugzillaQueryTest.java"
  ],
  "commentCreationDates": [
    "2006-02-10T18:08:38+01:00",
    "2006-02-10T18:11:25+01:00",
    "2006-02-10T18:26:06+01:00",
    "2006-02-10T18:32:42+01:00",
    "2006-02-10T18:58:15+01:00",
    "2006-02-14T21:56:29+01:00",
    "2006-02-14T23:40:39+01:00",
    "2006-02-15T01:21:40+01:00",
    "2006-04-04T04:10:31+02:00",
    "2006-05-08T20:28:28+02:00",
    "2006-05-09T18:30:20+02:00",
    "2006-05-13T03:38:08+02:00",
    "2006-05-13T03:38:22+02:00",
    "2006-05-13T04:17:29+02:00",
    "2006-05-13T04:17:48+02:00",
    "2006-06-06T01:31:45+02:00",
    "2006-06-06T01:59:34+02:00",
    "2006-06-09T04:16:20+02:00",
    "2006-06-10T01:55:24+02:00",
    "2006-06-19T21:57:22+02:00",
    "2006-07-14T04:35:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Workspace is closed.",
      "elements": [
        {
          "method": "org.eclipse.core.resources.ResourcesPlugin.getWorkspace",
          "source": "ResourcesPlugin.java:328"
        },
        {
          "method": "org.eclipse.mylar.bugzilla.core.search.BugzillaSearchResultCollector.\u003cclinit\u003e",
          "source": "BugzillaSearchResultCollector.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "127293",
      "date": "2006-02-10T18:08:38+01:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    }
  ],
  "groupId": "127293",
  "bugId": "127293",
  "date": "2006-02-10T18:08:38+01:00",
  "product": "Mylyn",
  "component": "Bugzilla",
  "severity": "enhancement"
}