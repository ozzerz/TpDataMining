{
  "comments": [
    "I found this in eclipse 3.2 RC2. Debugging the code shows that when displaying my JSP variable, eclipse is calling my variable for its value, and calling getValueString() on the value. Because this JSP variable is just a bogus variable, it does not have a real value associated with it. Therefore, I returned null when getValueString() is called.\n\n\nHere is the error log:\neclipse.buildId\u003dunknown\njava.fullversion\u003dJ2RE 1.4.2 IBM Windows 32 build cn142-20050609 (JIT disabled)\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_CA\nFramework arguments:  -product org.eclipse.sdk.ide -pdelaunch\nCommand-line arguments:  -product org.eclipse.sdk.ide -data D:\\eclipse32RC1\\runtime-workspace -dev file:D:/eclipse/workspace/.metadata/.plugins/org.eclipse.pde.core/runtime-workspace/dev.properties -pdelaunch -os win32 -ws win32 -arch x86 -clean\n\nError\nTue May 02 10:44:55 EDT 2006\nAn internal error occurred during: \"Retrieving labels\".\n\njava.lang.NullPointerException\nat org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.escapeSpecialChars(VariableLabelAdapter.java:168)\nat org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.getValueText(VariableLabelAdapter.java:124)\nat org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.getColumnText(VariableLabelAdapter.java:74)\nat org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.getLabels(VariableLabelAdapter.java:46)\nat org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter.computeLabels(AsynchronousLabelAdapter.java:94)\nat org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.computeLabels(AsynchronousDebugLabelAdapter.java:66)\nat org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter$2.run(AsynchronousLabelAdapter.java:51)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "This error only surface when \"Layout-\u003eShow Columns\" is selected.",
    "IValue.getValueString() is not documented to allow null as a return value. I think this is a bug in your debug model. It should return the empty string.",
    "With that said, a simple null check on our end will avoid problems like this.\n\n+1 from DW. Marking as RC3 candidate, CC\u0027ing Markus for approval.",
    "I don\u0027t think you should accept null if this is not spec\u0027d. If you want to accept null, then this should be spec\u0027d in the method\u0027s Javadoc. If you just hide the fact that the implementor violates the spec, this may provoke further problem that are hard to detect.",
    "Markus is right. Marking as invalid. The spec does not say null is a valid return value. The model should not return null.",
    "Darin,\n\nI agree that if the spec does not say that null is valid, the model should not return null.  I looked at JDT code.  JDIValue#getValueString could potentially return null if there is an exception.  You may want to consider fixing that in JDT.  Otherwise, you may run into the same exception.  I also noticed that the platform has null checks in the code for IValue#getValueString(..). \n\nIn addition, #escapeSpecialChars is also called in VariableLabelAdpater#getLabel().  It calls super.getLabel before calling #escapeSpecialChars.  Contrary to #getValueText, its super class\u0027s #getLabel could potentially create a null string in the array.  AsynchronousDebugLabelAdapter calls IDebugModelPresentation#getText which specifies that null value is valid.\n\nReopening for your consideration.\n\nThanks...\nSamantha\n\n",
    "marking as RC3 again. Needs investigation before getting approval.",
    "Correct, because IDebugModelPresentation#getText() can return null, we need to add the null check here.\n\nping\u0027ing Markus for approval for RC3.",
    "You\u0027ve lost me in comment 6 - I don\u0027t know your code good enough to judge the impact. But if it helps prevent NPEs in other places, then go for it for 3.2 RC3.",
    "Fixed in VariableLabelAdapter.",
    "Please verify, Samantha.",
    "verified",
    "*** Bug 140927 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2006-05-02T17:36:08+02:00",
    "2006-05-02T17:37:47+02:00",
    "2006-05-02T18:07:55+02:00",
    "2006-05-02T18:20:21+02:00",
    "2006-05-02T18:45:57+02:00",
    "2006-05-02T18:54:03+02:00",
    "2006-05-02T19:51:34+02:00",
    "2006-05-04T04:13:22+02:00",
    "2006-05-04T17:24:35+02:00",
    "2006-05-04T18:16:25+02:00",
    "2006-05-04T18:52:26+02:00",
    "2006-05-04T18:52:46+02:00",
    "2006-05-04T22:31:13+02:00",
    "2006-05-19T00:31:18+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.escapeSpecialChars",
          "source": "VariableLabelAdapter.java:168"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.getValueText",
          "source": "VariableLabelAdapter.java:124"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.getColumnText",
          "source": "VariableLabelAdapter.java:74"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.VariableLabelAdapter.getLabels",
          "source": "VariableLabelAdapter.java:46"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter.computeLabels",
          "source": "AsynchronousLabelAdapter.java:94"
        },
        {
          "method": "org.eclipse.debug.internal.ui.elements.adapters.AsynchronousDebugLabelAdapter.computeLabels",
          "source": "AsynchronousDebugLabelAdapter.java:66"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AsynchronousLabelAdapter$2.run",
          "source": "AsynchronousLabelAdapter.java:51"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "139718",
      "date": "2006-05-02T17:36:08+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "major"
    }
  ],
  "groupId": "139718",
  "bugId": "139718",
  "date": "2006-05-02T17:36:08+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "major"
}