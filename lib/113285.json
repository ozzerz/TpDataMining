{
  "comments": [
    "We have a headless application based on Eclipse 3.1. This application ships \nwith just a config.ini in the configuration directory. We ran into a strange \nexception inside an ant script:\n\n[scheduler.cal/ejbdeploy/wsejbdeploy] Error executing deployment: \norg.eclipse.core.runtime.CoreException. Error is Plug-in \ncom.ibm.etools.ejbdeploy was unable to load class \ncom.ibm.etools.ejbdeploy.batch.plugin.BatchExtension..\n[scheduler.cal/ejbdeploy/wsejbdeploy] org.eclipse.core.runtime.CoreException\n[1]: java.lang.ClassNotFoundException: \ncom.ibm.etools.ejbdeploy.batch.plugin.BatchExtension\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:403)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.osgi.framework.internal.core.BundleLoader.findClass\n(BundleLoader.java:350)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass\n(AbstractClassLoader.java:78)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat java.lang.ClassLoader.loadClass\n(ClassLoader.java:517)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.osgi.framework.internal.core.BundleLoader.loadClass\n(BundleLoader.java:275)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.osgi.framework.internal.core.BundleHost.loadClass\n(BundleHost.java:227)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass\n(AbstractBundle.java:1259)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:152)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:142)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtensi\non(ConfigurationElement.java:129)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableE\nxtension(ConfigurationElementHandle.java:48)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:222)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \nsun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:43)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat java.lang.reflect.Method.invoke\n(Method.java:615)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \ncom.ibm.etools.ejbdeploy.batch.impl.BootLoaderLoader.run(Unknown Source)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \ncom.ibm.etools.ejbdeploy.batch.impl.BatchDeploy.execute(Unknown Source)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \ncom.ibm.etools.ejbdeploy.EJBDeploy.execute(Unknown Source)\n[scheduler.cal/ejbdeploy/wsejbdeploy] \tat \ncom.ibm.etools.ejbdeploy.EJBDeploy.main(Unknown Source)\n\nThe only thing I can see from our logging facilities is that this application \nmay have been launched twice and almost simultaneously. Could it be that one \nof these launches was still writing information in the configuration directory \nwhile the second launch was trying to read it? Are Eclipse headless \napplications safe under these conditions? If not, is there anything we can do \nto make it safe?",
    "The information written by runtime and osgi are multiprocess safe.\nHowever if your component is writing into it it has to protect the area it is\nwriting in itself.",
    "We\u0027re not explicitly writing any information to the configuration directory at \nleast not with our headless app. In fact, the exception is complaining that \nEclipse cannot find our headless application so it doesn\u0027t even get to execute.",
    "We just confirmed that when we serialize our headless app so that it only runs \none at a time, the problem goes away. I think this is a strong indicator of \nsome non-multiprocess safe issues with how Eclipse initializes the \nconfiguration area.",
    "Please provide a reproduceable test case.",
    "Ok. We\u0027ve determined there is indeed something in our code deep down which \nwrites configuration information and this is not multiprocess safe. I\u0027m \ncancelling this for now."
  ],
  "commentCreationDates": [
    "2005-10-20T22:42:25+02:00",
    "2005-10-20T23:05:03+02:00",
    "2005-10-20T23:08:54+02:00",
    "2005-10-21T17:07:51+02:00",
    "2005-10-21T17:29:08+02:00",
    "2005-10-21T17:32:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "com.ibm.etools.ejbdeploy.batch.plugin.BatchExtension [scheduler.cal/ejbdeploy/wsejbdeploy]",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:403"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "113285",
      "date": "2005-10-20T22:42:25+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "major"
    }
  ],
  "groupId": "113285",
  "bugId": "113285",
  "date": "2005-10-20T22:42:25+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "major"
}