{
  "comments": [
    "Build ID: I20070625-1500\n\nSteps To Reproduce:\n1. open (specific) php-file (double-click in navigator)\n\n\nMore information:\njava.lang.NullPointerException\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createPosition(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createCodeDataAnnotations(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createFileAnnotations(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.updateAdapter(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterHTML.updateAdapter(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterFactoryPHP.createAdapter(Unknown Source)\n\tat org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adaptNew(AbstractAdapterFactory.java:120)\n\tat org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adapt(AbstractAdapterFactory.java:64)\n\tat org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.getAdapterFor(AbstractNotifier.java:93)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAdapterToNodeAndChildren(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAllAdapters(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.initialize(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.projectionEnabled(Unknown Source)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled(ProjectionViewer.java:481)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection(ProjectionViewer.java:529)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1419)\n\tat org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:502)\n\tat org.eclipse.php.internal.ui.editor.PHPStructuredTextViewer.doOperation(Unknown Source)\n\tat org.eclipse.wst.sse.ui.StructuredTextEditor.installProjectionSupport(StructuredTextEditor.java:2777)\n\tat org.eclipse.wst.sse.ui.StructuredTextEditor.initializeSourceViewer(StructuredTextEditor.java:2722)\n\tat org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1726)\n\tat org.eclipse.php.internal.ui.editor.PHPStructuredEditor.createPartControl(Unknown Source)\n\tat org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661)\n\tat org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592)\n\tat org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:263)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2721)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2633)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$12(WorkbenchPage.java:2625)\n\tat org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2577)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2572)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2556)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2547)\n\tat org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)\n\tat org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)\n\tat org.eclipse.ui.actions.OpenFileAction.openFile(OpenFileAction.java:98)\n\tat org.eclipse.ui.actions.OpenSystemEditorAction.run(OpenSystemEditorAction.java:98)\n\tat org.eclipse.ui.views.navigator.OpenActionGroup.runDefaultAction(OpenActionGroup.java:125)\n\tat org.eclipse.ui.views.navigator.MainActionGroup.runDefaultAction(MainActionGroup.java:328)\n\tat org.eclipse.ui.views.navigator.ResourceNavigator.handleOpen(ResourceNavigator.java:694)\n\tat org.eclipse.ui.views.navigator.ResourceNavigator$6.open(ResourceNavigator.java:437)\n\tat org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:857)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:193)\n\tat org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818)\n\tat org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079)\n\tat org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183)\n\tat org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)\n\tat org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1101)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3319)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)",
    "PDT version is: 1.0.0.v20070816-79--E7QYGHEHNQ6",
    "I am also experiencing this problem, only on select files though. My stack trace:\n\njava.lang.NullPointerException\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createPosition(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createCodeDataAnnotations(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createFileAnnotations(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.updateAdapter(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterHTML.updateAdapter(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterFactoryPHP.createAdapter(Unknown Source)\n\tat org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adaptNew(AbstractAdapterFactory.java:120)\n\tat org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adapt(AbstractAdapterFactory.java:64)\n\tat org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.getAdapterFor(AbstractNotifier.java:93)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAdapterToNodeAndChildren(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAllAdapters(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.initialize(Unknown Source)\n\tat org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.projectionEnabled(Unknown Source)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled(ProjectionViewer.java:481)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection(ProjectionViewer.java:529)\n\tat org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1419)\n\tat org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation(StructuredTextViewer.java:502)\n\tat org.eclipse.php.internal.ui.editor.PHPStructuredTextViewer.doOperation(Unknown Source)\n\tat org.eclipse.wst.sse.ui.StructuredTextEditor.installProjectionSupport(StructuredTextEditor.java:2777)\n\tat org.eclipse.wst.sse.ui.StructuredTextEditor.initializeSourceViewer(StructuredTextEditor.java:2722)\n\tat org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl(StructuredTextEditor.java:1726)\n\tat org.eclipse.php.internal.ui.editor.PHPStructuredEditor.createPartControl(Unknown Source)\n\tat org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661)\n\tat org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592)\n\tat org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:263)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2721)\n\tat org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2633)\n\tat org.eclipse.ui.internal.WorkbenchPage.access$12(WorkbenchPage.java:2625)\n\tat org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2577)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2572)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2556)\n\tat org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2547)\n\tat org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)\n\tat org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)\n\tat org.eclipse.php.internal.ui.util.EditorUtility.openInEditor(Unknown Source)\n\tat org.eclipse.php.internal.ui.util.EditorUtility.openInEditor(Unknown Source)\n\tat org.eclipse.php.internal.ui.actions.OpenActionUtil.open(Unknown Source)\n\tat org.eclipse.php.internal.ui.actions.OpenAction.run(Unknown Source)\n\tat org.eclipse.php.internal.ui.actions.OpenAction.run(Unknown Source)\n\tat org.eclipse.php.internal.ui.actions.SelectionDispatchAction.dispatchRun(Unknown Source)\n\tat org.eclipse.php.internal.ui.actions.SelectionDispatchAction.run(Unknown Source)\n\tat org.eclipse.php.internal.ui.explorer.ExplorerActionGroup.handleOpen(Unknown Source)\n\tat org.eclipse.php.internal.ui.explorer.ExplorerPart$5.open(Unknown Source)\n\tat org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:857)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:193)\n\tat org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818)\n\tat org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079)\n\tat org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183)\n\tat org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)\n\tat org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)\n\tat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:504)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:443)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1169)\n",
    "My Eclipse version is:\n\nVersion: 3.3.0\nBuild id: I20070625-1500\n\nPDT version:\n\n1.0.0.v20070816-79--E7QYGHEHNQ6\n\nI\u0027m running Windows Vista Business (32-bit).\n\nExample code from a file which exhibits this issue:\n\n\u003c?php\n\n/**\n* A base class for controllers\n* @ingroup Core\n*/\nclass Core_Controller {\n\n\t/**\n\t* Storing of parameters from dispatcher (e.g. Playlist, Edit from \u0027/Playlist/Edit/123\u0027)\n\t*/\n\tprivate $_params \u003d array ();\n\n\t/**\n\t* Storing of arguments from dispatcher (e.g. 123 from \u0027/Playlist/Edit/123\u0027)\n\t*/\n\tprivate $_args \u003d array ();\n\n\t/**\n\t* Storing of arbitary state values for view\n\t*/\n\tprotected $_state \u003d array ();\n\n\t/**\n\t* Default method of parsing arguments via HTTP request\n\t*/\n\tpublic $argumentFormat \u003d \u0027value_value\u0027;\n\n\t/**\n\t* The helpful message that is shown if we aren\u0027t logged in\n\t*/\n\tpublic $loginMsg \u003d \u0027This page can only be accessed by logging in. Please enter your details.\u0027;\n    \n    /**\n     * If the controller logs users activity\n     */\n    public $logActivity \u003d true;\n\n    \n    /**\n     * Constructor\n     */\n\tpublic function __construct() { }\n    \n\t/**\n\t* Checks that a user is logged in.\n\t* (If login credentials exist in $_POST, logs user in.)\n\t*\n\t* If the user isn\u0027t logged in, the user is redirected to a suitable login page.\n\t* \n\t* Use this to \"protect\" code which requires an authenticated user;\n\t*  for checking specific permissions, use ::mustHaveCapability\n\t*/\n\tpublic function mustBeLoggedIn($loginMsg \u003d null) {\n\t\t$logged_in \u003d false;\n\n\t\tif (!isset ($_SESSION[\u0027user\u0027])) {\n\t\t\t$_SESSION[\u0027user\u0027] \u003d new Core_User;\n\t\t}\n\n\t\tif (!$_SESSION[\u0027user\u0027]-\u003eisLoggedIn()) {\n\t\t\t$model \u003d new Model_User;\n\n\t\t\t//lets see if we are processing a login?\n\t\t\tif (isset ($_POST[\u0027username\u0027])) {\n\n\t\t\t\tif ($model-\u003eloadFromLogin($_POST[\u0027username\u0027], $_POST[\u0027password\u0027])) {\n\t\t\t\t\t//credentials are good  -store in session\n\t\t\t\t\t//and return!\t\n\t\t\t\t\t$_SESSION[\u0027user\u0027]-\u003einit($model);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//credentials are bad - details are in the model\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$_SESSION[\u0027user\u0027]-\u003eisLoggedIn()) {\n\t\t\t\t//show a login screen\n\n\t\t\t\t$view \u003d new View_HTML_User_Login;\n\n\t\t\t\t//if we don\u0027t have a loginMsg, find one from the controller that called this \n\t\t\t\tif (!$loginMsg) {\n\t\t\t\t\t$bt \u003d debug_backtrace();\n\t\t\t\t\tif ((isset ($bt[0][\u0027object\u0027])) \u0026\u0026 ($bt[0][\u0027object\u0027] instanceOf Core_Controller)) {\n\t\t\t\t\t\t$loginMsg \u003d $bt[0][\u0027object\u0027]-\u003eloginMsg;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$view-\u003eset(\u0027loginMsg\u0027, $loginMsg);\n\t\t\t\t$view-\u003esetModel(new Model_User);\n\n\t\t\t\t$view-\u003erender();\n\t\t\t\t$this-\u003epostRequest();\n\t\t\t\t// exit;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Guaranteed not to return unless user has given capability. \n\t * Will display suitable error message\n\t */\n\tpublic function mustHaveCapability($cap) {\n\t\t$db \u003d MUCO :: getDB();\n\t\t$capname \u003d $db-\u003eGetOne(\"select name from capability where code\u003d?\", $cap);\n\t\tif (strlen($capname) \u003d\u003d 0) {\n\t\t\t$capname \u003d $cap;\n\t\t}\n\t\t$loginMsg \u003d \"Your account needs \u0027$capname\u0027 rights in order to access this page.\";\n\t\t//if user is not logged in, whisk \u0027em away to login page\n\n\t\tif (!$_SESSION[\u0027user\u0027]-\u003eisLoggedIn()) {\n\t\t\t$this-\u003emustBeLoggedIn(); //($loginMsg) to show $loginMsg on login page\n\t\t}\n\t\t//if we reach this, user is logged in\n\n\t\tif (!$_SESSION[\u0027user\u0027]-\u003ehasCapability($cap)) {\n\t\t\t$view \u003d new View_HTML_User_Denied;\n\t\t\t$view-\u003esetReason($loginMsg);\n\t\t\t$view-\u003erender();\n\t\t\t$this-\u003epostRequest();\n\t\t\t// exit;\n\t\t}\n\t}\n\n\t/**\n\t* Override for perform actions before the controller handler starts - you should\n\t* call the base class too, as it performs useful actions for all controllers\n\t*/\n\tfunction preRequest() {\n\t\t@ session_start();\n\n\t\t//do we have a user object?\n\t\tif (!isset ($_SESSION[\u0027user\u0027])) {\n\t\t\tCore_User :: initNewUser();\n\t\t}\n\n\t\t//put user object into global scope and this object\n\t\t$GLOBALS[\u0027USER\u0027] \u003d \u0026 $_SESSION[\u0027user\u0027];\n\t\t$this-\u003euser \u003d \u0026 $_SESSION[\u0027user\u0027];\n\n\t\t//tell apache our ID, handy for logs\n\t\t@ apache_note(\u0027user_id\u0027, $GLOBALS[\u0027USER\u0027]-\u003euser_id);\n\n\t\t//now we need to see if we need to authorize - don\u0027t need to\n\t\t//disturb the lovely Authorization Fairy if we\u0027ve already done it\n\t\tif ((!isset($_SESSION[\u0027authorization\u0027]))) {\n\t\t\tAuthorization_Fairy :: authorize();\n\t\t}\n\n\t\t//if authorized, we should have a product configured in our session\n\t\t//which allows us to pull in a product configuration\n\t\tif (isset($_SESSION[\u0027product_code\u0027]))\n\t\t{\n\t\t\tMUCO::setProductCode($_SESSION[\u0027product_code\u0027]);\n\t\t}\n\n        if ($this-\u003elogActivity){\n            MUCO::logActivity();\n        }\n\n\t}\n\n\t/**\n\t* Override for perform actions after the controller handler starts - you should\n\t* call the base class too, as it performs useful actions for all controllers\n\t*/\n\tpublic function postRequest() {\n\t}\n\n\t/**\n\t* Creates the view and informs it about the model \u0026 controller\n\t* MUCO follows a \u0027hungry view\u0027 pattern - \n\t* instead of the controller passing huge chunks of data to the View,\n\t* the View is made aware of the Model \u0026 Controller state \u0026 only takes what is needed\n\t* (so if a given state is cached, little processing takes place)\n\t* Model state \u003d\u003e data objects\n\t* Controller state \u003d\u003e outcome of processing, e.g. an editor shows a form or results of form\n\t* You can pass either an object, or its class name if manipulation not needed  \n\t* @param mixed $view any valid view (object or class name, created as needed)\n\t* @param mixed $model any valid model (object or class name, created as needed)\n\t*/\n\tpublic function prepView($view, $model \u003d null) {\n\t\t//create the view/model if not supplied\n\t\tif (is_string($view)) {\n\t\t\t$view \u003d new $view;\n\t\t}\n\t\tif (is_string($model)) {\n\t\t\t$model \u003d new $model;\n\t\t}\n\t\t//attach controller\n\n\t\t$view-\u003esetController($this);\n\n\t\t//tell it the score\n\t\t$view-\u003esetModel($model);\n\n\t\t//set the URL-requested arguments (e.g. field ID)\n\t\t$this-\u003eset(\u0027requestArgs\u0027, $this-\u003egetRequestArgs());\n\n\t\t//pass along the controller\u0027s process state (e.g. operation result)\n\t\t$view-\u003esetState($this-\u003egetState());\n\n\t\treturn $view;\n\t}\n\n\t/**\n\t* Sets an arbitary state value to be passed to the view\n\t* Examples: page title, success of an action\n\t* @param string $key camelCase identifier (e.g. \u0027pageTitle\u0027)\n\t* @param mixed $val state value\n\t*/\n\tpublic function set($key, $val \u003d null) {\n\t\t$this-\u003e_state[$key] \u003d $val;\n\t}\n\n\t/**\n\t* Gets an arbitary state value that would be passed to the view\n\t* Examples: page title, success of an action \t\n\t* @param string $key camelCase identifier (e.g. \u0027pageTitle\u0027)\n\t*/\n\tpublic function get($key) {\n\n\t\tif ($this-\u003eexists($key)) {\n\t\t\treturn $this-\u003e_state[$key];\n\t\t}\n\t\telse {\n\t\t\tthrow new Exception(\"View state \u0027$key\u0027 was requested by the controller but not set\");\n\t\t}\n\t}\n\n\t/**\n\t* Checks if an arbitary state value has been set\n\t*/\n\tpublic function exists($key) {\n\t\treturn (array_key_exists($key, $this-\u003e_state));\n\t}\n\n\t/**\n\t* Gets all view-destined state\n\t*/\n\tpublic function getState() {\n\t\treturn $this-\u003e_state;\n\t}\n\n\t/**\n\t* Sets all view-destined state, overwriting existing state\n\t* @param array $state identifier\n\t*/\n\tpublic function setState($state) {\n\t\treturn $this-\u003e_state;\n\t}\n\n\t/**\n\t* Clears a state value from being passed to the view\n\t* Examples: page title, success of an action \t\n\t* @param string $key identifier\n\t*/\n\tpublic function reset($key) {\n\t\tunset ($this-\u003e_state[$key]);\n\t}\n\n\t/**\n\t * invoke ::handleDefault if a handle* method isn\u0027t defined\n\t * \n\t * Override this class to enable dynamic methods (e.g. Controller_Search)\n\t */\n\tpublic function __call($idx, $args) {\n\t\tif (substr($idx, 0, strlen(\u0027handle\u0027)) \u003d\u003d \u0027handle\u0027) {\n\t\t\t//method not found, call handleDefault\n\t\t\t$this-\u003ehandleDefault();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Exception(get_class($this) . \"::$idx not defined\");\n\t\t}\n\t}\n\n\t/**\n\t* Override to handle unknown methods\n\t*/\n\tpublic function handleDefault() {\n\t\tif (method_exists($this, \u0027handleIndex\u0027))\n\t\t\t$this-\u003ehandleIndex();\n\t\telse\n\t\t\t$this-\u003e_error(\"Invalid request\");\n\t}\n\n\tprotected function _error($msg) {\n\t\tdie($msg);\n\t}\n\n\t/**\n\t* Set request parameters, which can be accessed by model \u0026 view\n\t* @param array args\n\t*/\n\tpublic function setRequestParams($controller, $method) {\n\t\t$this-\u003e_params \u003d array (\n\t\t\t$controller,\n\t\t\t$method\n\t\t);\n\t}\n\n\t/**\n\t* Get request parameters (e.g. Playlist, Edit from \u0027/Playlist/Edit/123\u0027)\n\t*/\n\tpublic function getRequestParams() {\n\t\treturn $this-\u003e_params;\n\t}\n\n\t/**\n\t* Set request arguments, which can be accessed by model \u0026 view\n\t* @param array args\n\t*/\n\tpublic function setRequestArgs(array $args \u003d null) {\n\t\t($args) ? $this-\u003e_args \u003d $args : 0;\n\t}\n\n\t/**\n\t* Get request arguments (e.g. 123 from \u0027/Playlist/Edit/123\u0027)\n\t*/\n\tpublic function getRequestArgs() {\n\t\treturn $this-\u003e_args;\n\t}\n\t/**\n\t* Get a specific request argument. \n\t* If arguments are requested in value/value/value format,\n\t* care should be taken to obtain them in the [numeric] order contained in the request\n\t* @param string $key\n\t*/\n\tpublic function getRequestArg($key) {\n\t\tif (isset ($this-\u003e_args[$key])) {\n\t\t\treturn $this-\u003e_args[$key];\n\t\t}\n\t}\n\t/**\n\t* Determine the arguments passed in by HTTP request\n\t* Parameters generally are value/value/value or param/value/param/value/param/value\n\t* \n\t* If you want to handle mixed formats (e.g. View_HTML_Backoffice_Entity_QuickCreate),\n\t* extract some values and then re-invoke, overridding format\n\t* @param array $args argument array\n\t* @param string $paramFormat parameter format to override (optional)  \n\t* @return array parsed arguments\n\t*/\n\tpublic function parseRequestArgs($args\u003dnull, $paramFormat \u003d null, $ignoreOddTerms \u003d false) {\n\t\t$parsedArgs \u003d array ();\n        if (!$args)\n        {\n            $args \u003d $this-\u003egetRequestArgs();\n        }\n\t\tif (!$paramFormat) {\n\t\t\t$paramFormat \u003d $this-\u003eargumentFormat;\n\t\t}\n\n\t\tswitch ($paramFormat) {\n\t\t\tcase \u0027value_value\u0027 :\n\t\t\t\t{\n\t\t\t\t\t$parsedArgs \u003d $args;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase \u0027param_value\u0027 :\n\t\t\t\t{\n\t\t\t\t\t//split into key/value pairs\n\n\t\t\t\t\tif ((count($args) % 2) \u003d\u003d 1) {\n\t\t\t\t\t\t//hmm, we have an odd number of arguments,\n\t\t\t\t\t\t//which doesn\u0027t make sense for a key/value pair\n\t\t\t\t\t\t//e.g. \u0027story\u0027 from URI /search/title/story\n\t\t\t\t\t\t//TODO refactor the below to take into account handling of search URLS\n\t\t\t\t\t\tif (!$ignoreOddTerms) {\n\t\t\t\t\t\t\t//assume the first term is what Core_Dispatcher\n\t\t\t\t\t\t\t//thought was the method call (\u0027title\u0027) \u0026 add it\n\t\t\t\t\t\t\tif (isset ($this-\u003e_params[1])) {\n\t\t\t\t\t\t\t\tarray_unshift($args, $this-\u003e_params[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t//there wasn\u0027t one, the last argument\u0027ll be ignored\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$count \u003d count($args);\n\t\t\t\t\tfor ($i \u003d 0; $i \u003c $count; $i +\u003d 2) {\n\t\t\t\t\t\tif (isset ($args[$i +1])) {\n\t\t\t\t\t\t\t$parsedArgs[$args[$i]] \u003d htmlentities($args[$i +1], ENT_QUOTES);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($ignoreOddTerms \u0026\u0026 (count($args) % 2) \u003d\u003d 1) {\n\t\t\t\t\t\t$parsedArgs[$args[count($args) - 1]] \u003d null;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault :\n\t\t\t\t{\n\t\t\t\t\tMUCO :: halt(\u0027Format \u0027 . $paramFormat . \u0027not known when parsing URL request\u0027);\n\t\t\t\t}\n\t\t}\n        return $parsedArgs;\n\n\t}\n\n\t/**\n\t * EXPERIMENTAL\n     * As ::parseRequestArgs, but operates on the entire URI\n\t * Could be used when a URI needs to be deciphered on a method-by-method basis\n     * and can be case-insensitive, e.g. search\n\t * Or for when a URI isn\u0027t in the standard\n\t *  /Controller/Method/Arg/Arg format (e.g. for search)\n\t * e.g. /Browse/Composer/123/Genre \u003d\u003e (\u0027Composer\u0027\u003d\u003e\u0027123\u0027,\u0027Genre\u0027\u003d\u003enull);\n\t * TODO review, refactor this method, maybe replace the URL handling in Search \u0027($params, $args)\u0027\n\t */\n\tpublic function parseRequestURI() {\n\t\t$path \u003d html_entity_decode($_SERVER[\u0027SCRIPT_URL\u0027]);\n\t\t//chomp trailing slash\n\t\tif (substr($path, -1, 1) \u003d\u003d \u0027/\u0027) {\n\t\t\t$path \u003d substr($path, 0, strlen($path) - 1);\n\t\t}\n\n\t\t$path \u003d explode(\u0027/\u0027, $path);\n\n\t\t//eat the first element, always blank\n\t\tarray_shift($path);\n\t\t//eat controller\n\t\tarray_shift($path);\n        \n        $parsedArgs \u003d $this-\u003eparseRequestArgs($path, \u0027param_value\u0027, true);\n        $return \u003d array();\n        foreach($parsedArgs as $idx\u003d\u003e$p)\n        {\n            $return[strtolower($idx)]\u003dstrtolower($p);\n        }\n\n        return $return;\n\t\t\n\t}\n\n\t/**\n\t* Determine the argument format suitable for HTTP request\n\t* Parameters generally are value/value/value/ or param/value/param/value/param/value/\n\t\n\t*/\n\n\tpublic function buildArguments(array $args) //, $method\u003dnull\n\t{\n\t\tswitch ($this-\u003eargumentFormat) {\n\t\t\tcase \u0027value_value\u0027 :\n\t\t\t\t{\n\t\t\t\t\t$builtArgs \u003d join(\u0027/\u0027, $args) . \u0027/\u0027;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t/*\n\t\t\t\t\t\n\t\t\t\t\tif (!$method){\n\t\t\t\t\t$builtArgs \u003d join(DIRECTORY_SEPARATOR, $args);\n\t\t\t\t\tbreak;}\n\t\t\t\t\t//hey we know the method to be called, try and order the params\n\t\t\t\t\t$method \u003d new ReflectionMethod(get_class($this), $method);\n\t\t\t\t\t\n\t\t\t\t\t*/\n\n\t\t\t\t}\n\t\t\tcase \u0027param_value\u0027 :\n\t\t\t\t{\n\t\t\t\t\t//order doesn\u0027t matter as request is parsed as an array on reciept\n\t\t\t\t\tforeach ($args as $k \u003d\u003e $v) {\n\t\t\t\t\t\t$builtArgs .\u003d \"$k/$v/\";\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault :\n\t\t\t\t{\n\t\t\t\t\tMUCO :: halt($this-\u003e_parseMethod . \u0027not known\u0027);\n\t\t\t\t}\n\t\t}\n\t\treturn $builtArgs;\n\t}\n\n/**\n * Show a not found / 404. You can invoke this from any view\u0027s _controller\n * (if no page output first!)\n */\n    public function handleNotFound($msg\u003dnull) {\n        header(\"HTTP/1.0 404 Not Found\");\n        $view \u003d $this-\u003eprepview(\u0027View_HTML_MUCO_Notfound\u0027);\n        $view-\u003eset(\u0027title\u0027,$msg);\n        $view-\u003eset(\u0027msg\u0027,$msg);\n        $view-\u003erender();\n        exit();\n    }\n\n}\n",
    "fixed in CVS,\n\nThanx",
    "seem to be fix on latest build"
  ],
  "commentCreationDates": [
    "2007-08-24T14:47:00+02:00",
    "2007-08-24T14:49:47+02:00",
    "2007-08-24T18:06:58+02:00",
    "2007-08-24T18:58:09+02:00",
    "2007-08-26T07:15:34+02:00",
    "2007-08-27T15:50:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createPosition",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createCodeDataAnnotations",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createFileAnnotations",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.updateAdapter",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterHTML.updateAdapter",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterFactoryPHP.createAdapter",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adaptNew",
          "source": "AbstractAdapterFactory.java:120"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adapt",
          "source": "AbstractAdapterFactory.java:64"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.getAdapterFor",
          "source": "AbstractNotifier.java:93"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAdapterToNodeAndChildren",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAllAdapters",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.initialize",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.projectionEnabled",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled",
          "source": "ProjectionViewer.java:481"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection",
          "source": "ProjectionViewer.java:529"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation",
          "source": "ProjectionViewer.java:1419"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation",
          "source": "StructuredTextViewer.java:502"
        },
        {
          "method": "org.eclipse.php.internal.ui.editor.PHPStructuredTextViewer.doOperation",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.installProjectionSupport",
          "source": "StructuredTextEditor.java:2777"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.initializeSourceViewer",
          "source": "StructuredTextEditor.java:2722"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl",
          "source": "StructuredTextEditor.java:1726"
        },
        {
          "method": "org.eclipse.php.internal.ui.editor.PHPStructuredEditor.createPartControl",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPartHelper",
          "source": "EditorReference.java:661"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPart",
          "source": "EditorReference.java:426"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:592"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.getEditor",
          "source": "EditorReference.java:263"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched",
          "source": "WorkbenchPage.java:2721"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor",
          "source": "WorkbenchPage.java:2633"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$12",
          "source": "WorkbenchPage.java:2625"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$10.run",
          "source": "WorkbenchPage.java:2577"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2572"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2556"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2547"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:644"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:603"
        },
        {
          "method": "org.eclipse.ui.actions.OpenFileAction.openFile",
          "source": "OpenFileAction.java:98"
        },
        {
          "method": "org.eclipse.ui.actions.OpenSystemEditorAction.run",
          "source": "OpenSystemEditorAction.java:98"
        },
        {
          "method": "org.eclipse.ui.views.navigator.OpenActionGroup.runDefaultAction",
          "source": "OpenActionGroup.java:125"
        },
        {
          "method": "org.eclipse.ui.views.navigator.MainActionGroup.runDefaultAction",
          "source": "MainActionGroup.java:328"
        },
        {
          "method": "org.eclipse.ui.views.navigator.ResourceNavigator.handleOpen",
          "source": "ResourceNavigator.java:694"
        },
        {
          "method": "org.eclipse.ui.views.navigator.ResourceNavigator$6.open",
          "source": "ResourceNavigator.java:437"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$2.run",
          "source": "StructuredViewer.java:820"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:193"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireOpen",
          "source": "StructuredViewer.java:818"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleOpen",
          "source": "StructuredViewer.java:1079"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$6.handleOpen",
          "source": "StructuredViewer.java:1183"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireOpenEvent",
          "source": "OpenStrategy.java:263"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$2",
          "source": "OpenStrategy.java:257"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:297"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:1101"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3319"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2971"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "201078",
      "date": "2007-08-24T14:47:00+02:00",
      "product": "PDT",
      "component": "Core",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createPosition",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createCodeDataAnnotations",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.createFileAnnotations",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterPHP.updateAdapter",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterHTML.updateAdapter",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.projection.ProjectionModelNodeAdapterFactoryPHP.createAdapter",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adaptNew",
          "source": "AbstractAdapterFactory.java:120"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.provisional.AbstractAdapterFactory.adapt",
          "source": "AbstractAdapterFactory.java:64"
        },
        {
          "method": "org.eclipse.wst.sse.core.internal.provisional.AbstractNotifier.getAdapterFor",
          "source": "AbstractNotifier.java:93"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAdapterToNodeAndChildren",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.addAllAdapters",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.initialize",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.folding.StructuredTextFoldingProviderPHP.projectionEnabled",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.fireProjectionEnabled",
          "source": "ProjectionViewer.java:481"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.enableProjection",
          "source": "ProjectionViewer.java:529"
        },
        {
          "method": "org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation",
          "source": "ProjectionViewer.java:1419"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.StructuredTextViewer.doOperation",
          "source": "StructuredTextViewer.java:502"
        },
        {
          "method": "org.eclipse.php.internal.ui.editor.PHPStructuredTextViewer.doOperation",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.installProjectionSupport",
          "source": "StructuredTextEditor.java:2777"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.initializeSourceViewer",
          "source": "StructuredTextEditor.java:2722"
        },
        {
          "method": "org.eclipse.wst.sse.ui.StructuredTextEditor.createPartControl",
          "source": "StructuredTextEditor.java:1726"
        },
        {
          "method": "org.eclipse.php.internal.ui.editor.PHPStructuredEditor.createPartControl",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPartHelper",
          "source": "EditorReference.java:661"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPart",
          "source": "EditorReference.java:426"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:592"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.getEditor",
          "source": "EditorReference.java:263"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched",
          "source": "WorkbenchPage.java:2721"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor",
          "source": "WorkbenchPage.java:2633"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.access$12",
          "source": "WorkbenchPage.java:2625"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage$10.run",
          "source": "WorkbenchPage.java:2577"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2572"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2556"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.openEditor",
          "source": "WorkbenchPage.java:2547"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:644"
        },
        {
          "method": "org.eclipse.ui.ide.IDE.openEditor",
          "source": "IDE.java:603"
        },
        {
          "method": "org.eclipse.php.internal.ui.util.EditorUtility.openInEditor",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.util.EditorUtility.openInEditor",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.actions.OpenActionUtil.open",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.actions.OpenAction.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.actions.OpenAction.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.actions.SelectionDispatchAction.dispatchRun",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.actions.SelectionDispatchAction.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.explorer.ExplorerActionGroup.handleOpen",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.php.internal.ui.explorer.ExplorerPart$5.open",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$2.run",
          "source": "StructuredViewer.java:820"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:193"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireOpen",
          "source": "StructuredViewer.java:818"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleOpen",
          "source": "StructuredViewer.java:1079"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$6.handleOpen",
          "source": "StructuredViewer.java:1183"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireOpenEvent",
          "source": "OpenStrategy.java:263"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$2",
          "source": "OpenStrategy.java:257"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:297"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3682"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3293"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:504"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:443"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1169"
        }
      ],
      "number": 1,
      "commentIndex": 2,
      "bugId": "201078",
      "date": "2007-08-24T18:06:58+02:00",
      "product": "PDT",
      "component": "Core",
      "severity": "critical"
    }
  ],
  "groupId": "201078",
  "bugId": "201078",
  "date": "2007-08-24T14:47:00+02:00",
  "product": "PDT",
  "component": "Core",
  "severity": "critical"
}