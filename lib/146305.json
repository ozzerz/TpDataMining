{
  "comments": [
    "RC6a:\n\nAn attempt to load an EMOF file with an opposite to another EMOF file\nin the Sample Ecore Model Editor produces:\n\norg.eclipse.emf.ecore.xmi.IllegalValueException: Value \u0027org.eclipse.emf.ecore.impl.EAttributeImpl@a9d1ac (eProxyURI: platform:/resource/Temp/test/qvtbase.emof#//Pattern/whenOwner)\u0027 is not legal. (platform:/resource/Temp/test/qvtrelation.emof, 8, 58)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:2380)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:2365)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType(XMLHandler.java:1902)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject(XMLHandler.java:1770)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature(XMLHandler.java:1548)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement(XMLHandler.java:876)\n\tat org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement(XMIHandler.java:82)\n\tat org.eclipse.emf.ecore.xmi.impl.EMOFHandler.processElement(EMOFHandler.java:89)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:854)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:626)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:533)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:220)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:872)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)\n\tat javax.xml.parsers.SAXParser.parse(SAXParser.java:375)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:179)\n\ncaused by:\n\njava.lang.ClassCastException: org.eclipse.emf.ecore.impl.EAttributeImpl\n\tat org.eclipse.emf.ecore.impl.EReferenceImpl.eSet(EReferenceImpl.java:372)\n\tat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eSet(BasicEObjectImpl.java:642)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.setValue(XMLHelperImpl.java:1091)\n\tat org.eclipse.emf.ecore.xmi.impl.EMOFHelperImpl.setValue(EMOFHelperImpl.java:77)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:2375)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:2365)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType(XMLHandler.java:1902)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject(XMLHandler.java:1770)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature(XMLHandler.java:1548)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement(XMLHandler.java:876)\n\tat org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement(XMIHandler.java:82)\n\tat org.eclipse.emf.ecore.xmi.impl.EMOFHandler.processElement(EMOFHandler.java:89)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:854)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:626)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:533)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:220)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:872)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\nThe problem may be reproduced with the following pair of files:\n\nqvtbase.emof:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cemof:Package xmi:version\u003d\"2.0\"\n    xmlns:xmi\u003d\"http://www.omg.org/XMI\" xmlns:emof\u003d\"http://schema.omg.org/spec/mof/2.0/emof.xmi\" xmi:id\u003d\"qvtbase\"\n    name\u003d\"qvtbase\" uri\u003d\"http:///qvtbase.emof\"\u003e\n  \u003cownedType xmi:type\u003d\"emof:Class\" xmi:id\u003d\"qvtbase.Pattern\" name\u003d\"Pattern\"\u003e\n    \u003cownedAttribute xmi:id\u003d\"qvtbase.Pattern.whenOwner\" name\u003d\"whenOwner\"\u003e\n      \u003ctype xmi:type\u003d\"emof:Class\" href\u003d\"qvtrelation.emof#//Relation\"/\u003e\n      \u003copposite href\u003d\"qvtrelation.emof#//Relation/when\"/\u003e\n      \u003cxmi:Extension extender\u003d\"http://www.eclipse.org/emf/2002/Ecore\"\u003e\n        \u003ctransient\u003etrue\u003c/transient\u003e\n      \u003c/xmi:Extension\u003e\n    \u003c/ownedAttribute\u003e\n    \u003cownedAttribute xmi:id\u003d\"qvtbase.Pattern.whereOwner\" name\u003d\"whereOwner\"\u003e\n      \u003ctype xmi:type\u003d\"emof:Class\" href\u003d\"qvtrelation.emof#//Relation\"/\u003e\n      \u003copposite href\u003d\"qvtrelation.emof#//Relation/where\"/\u003e\n      \u003cxmi:Extension extender\u003d\"http://www.eclipse.org/emf/2002/Ecore\"\u003e\n        \u003ctransient\u003etrue\u003c/transient\u003e\n      \u003c/xmi:Extension\u003e\n    \u003c/ownedAttribute\u003e\n  \u003c/ownedType\u003e\n  \u003cxmi:Extension extender\u003d\"http://www.eclipse.org/emf/2002/Ecore\"\u003e\n    \u003cnsPrefix\u003eqvtbase\u003c/nsPrefix\u003e\n  \u003c/xmi:Extension\u003e\n\u003c/emof:Package\u003e\n\nqvtrelation.emof:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cemof:Package xmi:version\u003d\"2.0\"\n    xmlns:xmi\u003d\"http://www.omg.org/XMI\" xmlns:emof\u003d\"http://schema.omg.org/spec/mof/2.0/emof.xmi\" xmi:id\u003d\"qvtrelation\"\n    name\u003d\"qvtrelation\" uri\u003d\"http:///qvtrelation.emof\"\u003e\n  \u003cownedType xmi:type\u003d\"emof:Class\" xmi:id\u003d\"qvtrelation.Relation\" name\u003d\"Relation\"\u003e\n    \u003cownedAttribute xmi:id\u003d\"qvtrelation.Relation.when\" name\u003d\"when\" isComposite\u003d\"true\"\u003e\n      \u003ctype xmi:type\u003d\"emof:Class\" href\u003d\"qvtbase.emof#//Pattern\"/\u003e\n      \u003copposite href\u003d\"qvtbase.emof#//Pattern/whenOwner\"/\u003e\n    \u003c/ownedAttribute\u003e\n    \u003cownedAttribute xmi:id\u003d\"qvtrelation.Relation.where\" name\u003d\"where\" isComposite\u003d\"true\"\u003e\n      \u003ctype xmi:type\u003d\"emof:Class\" href\u003d\"qvtbase.emof#//Pattern\"/\u003e\n      \u003copposite href\u003d\"qvtbase.emof#//Pattern/whereOwner\"/\u003e\n    \u003c/ownedAttribute\u003e\n  \u003c/ownedType\u003e\n  \u003cxmi:Extension extender\u003d\"http://www.eclipse.org/emf/2002/Ecore\"\u003e\n    \u003cnsPrefix\u003eqvtrelation\u003c/nsPrefix\u003e\n  \u003c/xmi:Extension\u003e\n\u003c/emof:Package\u003e",
    "Created an attachment (id\u003d44053)\nChanges to fix the problem.\n\nThe fix was quite tricky.  I made changes in EMOFExtendedMetaData to ensure that an EReferenceImpl is created instead of an EAttributeImpl to represent a Property.  I also had to make changes in EMOFHelperImpl to avoid resolving proxies. \n\nWould you be able to test patch for regressions before I commit the changes?",
    "The patch applied to EMF I200606080000 with Eclipse RC5 certainly fixes this bug\non my original 8 file EMOF model. The Sample Ecore Model Editor now displays a model rather than problem view..\n\nBut since this is my first foray into EMOF models, I cannot say that I have\nmanaged to regress a very great deal.\n\nThe ArrayStoreException from 145239#4 remains and might be the same problem;\na reference from an EMOF model must be resolved as an Ecore representation of an EMOF concept rather than an Ecore representation of an Ecore concept.\n\n[Very dubiously: would it be valid for an Ecore and EMOF model to have mutual opposites?]",
    "Ed,\n\nThe fix is committed to CVS.  You\u0027re the first person I know of who has done anything interesting with the EMOF support so this level of testing you are providing is extremely helpful.\n\nWhile reading EMOF as Ecore is very useful, it\u0027s not the same as having an actual EMOF model which is needed if you are going to try to work with EMOF itself as a model.  I.e., direct references to EMOF things will require an EMOF model to resolve it in a properly typed way and Ecore cannot be that.  Just as an XSDComplexType maps to an EClass without EClass being a complex type, so too an emof:Package maps to an ecore:EPackage without that ecore:EPackge actually being an emof:EPackage.  I.e., it\u0027s a mapping/correspondence relation not an \"is-a\" relation.",
    "Fortunately I can disagree with you.\n\nBy resolving 2 major EMOF/Ecore incompatibilities as bugs or at least incomplete implementations, I am now quite confident that my current problem with non top-level references is likely to be of similar form.\n\nI have the Sample Ecore Model Editor relatively happily viewing a QVT model that references the QVT model, with the QVT model registered and defined in EMOF. (QVT is an extension of EMOF.)\n\nYou may be correct that a Java programmer is in trouble working with EMOF,\nbut a model user now seems ok, because if all models are exclusively EMOF,\nthen the underlying Ecore implementation in some tools is hidden.\n\nTo rescue the Java usage, there might need to be an EMOFAccessHelper that is responsible for providing an EMOF Adapter to the Ecore object. I didn\u0027t study your fix, but it may be that there is a more generic approach based on AccessHelpers so that I can then introduce my XYZZYAccessHelper for my XYZZY modelling notation...\n",
    "I could certainly imagine a design (as in SDO 1.0) where adapters can automatically wrap/adapt an Ecore model as an EMOF model.  The SDO 2.0 design that extends Ecore is a bit more compelling in that it has much better performance, but is also more problematic in that generated models will need special generation support to implement all the necessary APIs.",
    "Hi Ed\n\nI think you should retract this fix till post Callisto. No change is better than an erroneous change.\n\nI started trying to debug my residual problem, and so set some breakpoints in your fix to gain insight into the magic.\n\nI think your change just moves a problem sideways.\n\nFormerly a Property mapped to an EAttribute. Now a Property maps to an EReference.\n\nYou cannot do this. A Property is both. Maybe you can get away with a map to EStructuralFeature but that\u0027s abstract. So maybe the API must give some context for \u0027name\u0027.\n\nMy residual problem turns out to be a silent CCE:\n\nThe value of type \u0027class org.eclipse.emf.ecore.impl.EClassImpl\u0027 must be of type \u0027org.eclipse.emf.ecore.impl.EClassImpl@19bc338 (name: Class) (instanceClassName: null) (abstract: false, interface: false)\u0027\n\nwhich is silently discarded in org.eclipse.emf.edit.provider.getValue() after generation by\n\norg.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObjectResolving(org.eclipse.emf.ecore.impl.EStructuralFeatureImpl$InternalSettingDelegateSingleEObject).dynamicGet(org.eclipse.emf.ecore.InternalEObject, org.eclipse.emf.ecore.EStructuralFeature$Internal$DynamicValueHolder, int, boolean, boolean) line: 2255\t\norg.eclipse.emf.ecore.impl.DynamicEObjectImpl(org.eclipse.emf.ecore.impl.BasicEObjectImpl).eGet(int, boolean, boolean) line: 598\t\norg.eclipse.emf.ecore.impl.DynamicEObjectImpl(org.eclipse.emf.ecore.impl.BasicEObjectImpl).eGet(org.eclipse.emf.ecore.EStructuralFeature, boolean, boolean) line: 583\t\norg.eclipse.emf.ecore.impl.DynamicEObjectImpl(org.eclipse.emf.ecore.impl.BasicEObjectImpl).eGet(org.eclipse.emf.ecore.EStructuralFeature, boolean) line: 575\t\norg.eclipse.emf.ecore.impl.DynamicEObjectImpl(org.eclipse.emf.ecore.impl.BasicEObjectImpl).eGet(org.eclipse.emf.ecore.EStructuralFeature) line: 570\t\norg.eclipse.emf.edit.provider.ItemPropertyDescriptor.getValue(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EStructuralFeature) line: 1086\t\n\nwhich looks as if perhaps nameToClassifierMap should have been invoked to convert an emof:Class to an ecore:EClass.\n\nThe original proxy: referredClass\u003d\"emof:Class http://www.eclipse.org/gmt/umlx/qvtrelation#//RelationDomain\"\n\ndid reference an emof:Class, not an ecore:Class, in the registered EMOF model\n\n\u003cemof:Package xmi:version\u003d\"2.0\"\n    xmlns:xmi\u003d\"http://www.omg.org/XMI\" xmlns:emof\u003d\"http://schema.omg.org/spec/mof/2.0/emof.xmi\" xmi:id\u003d\"qvtrelation\"\n    name\u003d\"qvtrelation\" uri\u003d\"http://www.eclipse.org/gmt/umlx/qvtrelation\"\u003e\n  \u003cownedType xmi:type\u003d\"emof:Class\" xmi:id\u003d\"qvtrelation.RelationDomain\" name\u003d\"RelationDomain\"\u003e\n\n",
    "What does the change in this bugzilla have to do with the problem you describe, which sounds just like another version of the problem with attempting to reference an emof:Package using a URI that resolves to an ecore:Package.  In this case, just as an ecore:EPackage is not an emof:Package an ecore:EClass is not an emof:Class. Does your latest new problem manifest itself only if this fix is applied?  I\u0027d expect what you describe to be a problem regardless of this fix.\n\nAs for the EAttribute verses EReference thing, you\u0027ll note there is a dynamic class called EMOFProperty that is created to be both an EAttribute and an EReference so that it can hold features for either.  But this is only needed for contained features not for cross references to features and the contained EMOFProperty instances are post processed to be replaced by either an EAttribute or an EReference at the end of the document processing.",
    "EAttribute/EReference: excellent, not enough code reading on my part, suggestion withdrawn.\n\nMy second problem is definitely a different issue. The smart EMOFProperty is resolving a difficulty during read. My problem is one of access/proxy resolution. Since it works at the top level for a reference to an emof:Package I should be able to compare the control flow to see why it fails for an emof:Class. I\u0027ll come back with another Bugzilla (or just possibly another apologetic retraction) once I\u0027ve investigated.\n",
    "Fixed in I200606150000."
  ],
  "commentCreationDates": [
    "2006-06-09T19:58:07+02:00",
    "2006-06-09T22:27:50+02:00",
    "2006-06-10T08:56:57+02:00",
    "2006-06-10T15:22:14+02:00",
    "2006-06-10T15:59:19+02:00",
    "2006-06-10T16:11:11+02:00",
    "2006-06-12T10:59:11+02:00",
    "2006-06-12T13:00:56+02:00",
    "2006-06-12T19:52:09+02:00",
    "2006-06-15T07:16:07+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.emf.ecore.xmi.IllegalValueException",
      "message": "Value \u0027org.eclipse.emf.ecore.impl.EAttributeImpl@a9d1ac (eProxyURI: platform:/resource/Temp/test/qvtbase.emof#//Pattern/whenOwner)\u0027 is not legal. (platform:/resource/Temp/test/qvtrelation.emof, 8, 58)",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue",
          "source": "XMLHandler.java:2380"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue",
          "source": "XMLHandler.java:2365"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType",
          "source": "XMLHandler.java:1902"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject",
          "source": "XMLHandler.java:1770"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature",
          "source": "XMLHandler.java:1548"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement",
          "source": "XMLHandler.java:876"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement",
          "source": "XMIHandler.java:82"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.EMOFHandler.processElement",
          "source": "EMOFHandler.java:89"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java:854"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java:626"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement",
          "source": "AbstractSAXParser.java:533"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement",
          "source": "AbstractXMLDocumentParser.java:220"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement",
          "source": "XMLDocumentFragmentScannerImpl.java:872"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch",
          "source": "XMLDocumentFragmentScannerImpl.java:1693"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "XMLDocumentFragmentScannerImpl.java:368"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:834"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:764"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XMLParser.parse",
          "source": "XMLParser.java:148"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse",
          "source": "AbstractSAXParser.java:1242"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "SAXParser.java:375"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load",
          "source": "XMLLoadImpl.java:179"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "146305",
      "date": "2006-06-09T19:58:07+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.emf.ecore.impl.EAttributeImpl",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.impl.EReferenceImpl.eSet",
          "source": "EReferenceImpl.java:372"
        },
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eSet",
          "source": "BasicEObjectImpl.java:642"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.setValue",
          "source": "XMLHelperImpl.java:1091"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.EMOFHelperImpl.setValue",
          "source": "EMOFHelperImpl.java:77"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue",
          "source": "XMLHandler.java:2375"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue",
          "source": "XMLHandler.java:2365"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType",
          "source": "XMLHandler.java:1902"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject",
          "source": "XMLHandler.java:1770"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature",
          "source": "XMLHandler.java:1548"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement",
          "source": "XMLHandler.java:876"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement",
          "source": "XMIHandler.java:82"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.EMOFHandler.processElement",
          "source": "EMOFHandler.java:89"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java:854"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java:626"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement",
          "source": "AbstractSAXParser.java:533"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement",
          "source": "AbstractXMLDocumentParser.java:220"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement",
          "source": "XMLDocumentFragmentScannerImpl.java:872"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch",
          "source": "XMLDocumentFragmentScannerImpl.java:1693"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "XMLDocumentFragmentScannerImpl.java:368"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:834"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse",
          "source": "XML11Configuration.java:764"
        },
        {
          "method": "com.sun.org.apache.xerces.internal.parsers.XMLParser.parse",
          "source": "XMLParser.java:148"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "146305",
      "date": "2006-06-09T19:58:07+02:00",
      "product": "EMF",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "146305",
  "bugId": "146305",
  "date": "2006-06-09T19:58:07+02:00",
  "product": "EMF",
  "component": "Core",
  "severity": "normal"
}