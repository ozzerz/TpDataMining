{
  "comments": [
    "We are seeing this exception during runs of bea internal tests:\n\n[java] !ENTRY org.eclipse.jdt.core 4 2 2005-08-23 12:31:21.923\n     [java] !MESSAGE Problems occurred when invoking code from plug-in:\n\"org.eclipse.jdt.core\".\n     [java] !STACK 0\n     [java] java.util.EmptyStackException\n     [java] \tat java.util.Stack.peek(Stack.java:79)\n     [java] \tat java.util.Stack.pop(Stack.java:61)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.handleClasspathChange(TaglibIndex.java:115)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:81)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:75)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:68)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1432)\n     [java] \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n     [java] \tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1422)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1270)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1245)\n     [java] \tat\norg.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:758)\n     [java] \tat\norg.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:777)\n     [java] \tat\norg.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:871)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslation.createCompilationUnit(JSPTranslation.java:405)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslation.getCompilationUnit(JSPTranslation.java:338)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslation.setProblemCollectingActive(JSPTranslation.java:467)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.validation.JSPValidator.validateFile(JSPValidator.java:161)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.validation.JSPValidator.validate(JSPValidator.java:133)\n     [java] \tat\norg.eclipse.wst.validation.internal.core.ValidatorLauncher.start(ValidatorLauncher.java:90)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.launchValidator(ValidationOperation.java:1196)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.internalValidate(ValidationOperation.java:1022)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.validate(ValidationOperation.java:928)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.run(ValidationOperation.java:639)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationBuilder.performFullBuild(ValidationBuilder.java:262)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationBuilder.performFullBuild(ValidationBuilder.java:254)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationBuilder.build(ValidationBuilder.java:195)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n     [java] \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n     [java] \tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n\n     [java] !ENTRY org.eclipse.jdt.core 4 4 2005-08-23 12:31:21.939\n     [java] !MESSAGE Exception occurred in listener of Java element change\nnotification\n     [java] !STACK 0\n     [java] java.util.EmptyStackException\n     [java] \tat java.util.Stack.peek(Stack.java:79)\n     [java] \tat java.util.Stack.pop(Stack.java:61)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.handleClasspathChange(TaglibIndex.java:115)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:81)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:75)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.contentmodel.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:68)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1432)\n     [java] \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n     [java] \tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1422)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1270)\n     [java] \tat\norg.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1245)\n     [java] \tat\norg.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:758)\n     [java] \tat\norg.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:777)\n     [java] \tat\norg.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:871)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslation.createCompilationUnit(JSPTranslation.java:405)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslation.getCompilationUnit(JSPTranslation.java:338)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslation.setProblemCollectingActive(JSPTranslation.java:467)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.validation.JSPValidator.validateFile(JSPValidator.java:161)\n     [java] \tat\norg.eclipse.jst.jsp.core.internal.validation.JSPValidator.validate(JSPValidator.java:133)\n     [java] \tat\norg.eclipse.wst.validation.internal.core.ValidatorLauncher.start(ValidatorLauncher.java:90)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.launchValidator(ValidationOperation.java:1196)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.internalValidate(ValidationOperation.java:1022)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.validate(ValidationOperation.java:928)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationOperation.run(ValidationOperation.java:639)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationBuilder.performFullBuild(ValidationBuilder.java:262)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationBuilder.performFullBuild(ValidationBuilder.java:254)\n     [java] \tat\norg.eclipse.wst.validation.internal.operations.ValidationBuilder.build(ValidationBuilder.java:195)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)\n     [java] \tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n     [java] \tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)\n     [java] \tat\norg.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)\n     [java] [lockReleased] Lock R/ was already released by thread Worker-10",
    "Scott, is this still a problem in M9 or newer?  Can you send me the test that reproduces this?",
    "Nitin,\n\nThis is still a problem in the current (RC1) code.  It routinely happens for use because the wizard we are developing can add jars to the classpath and create JSP filed in the same task or operation.  I think it would be very difficult to cause manually because of the timing issues involved.  As a result, only ISV adopters may suffer from this bug.  As my employer, SAS Institute, is one such adopter, I would be in favor of increasing the severity to major.\n\nThe EmptyStackException is occurs because the TaglibIndex.ClasspathChangeListener can be called concurrently on multiple threads.  After all, it is installed as a resource listener.  Because it uses an instance variable for the \"classpathStack\" field, there is a window while handleClasspathChange() processes jars that a concurrent call to this listener will invoke \"classpathStack.clear()\" in the first level elementChanged() method.  This sets up the exception to occur when handleClasspathChange() tries to exit with \"classpathStack.pop()\".  Maybe handleClasspathChange() could be passed a local Stack argument instead.\n\nThanks,\nLarry",
    "Deferring to 1.0.1.  The preferred solution would be to process one update at a time through synchronization, but we need to review the impact of that (and threat of deadlock) before changing things.  The solution will most likely be mixed with the solution to bug 118251, then.",
    "Larry, can you confirm if you still see this easily in the final released 1.0? \nOr, Soctt, do you? \n\nIf not, I\u0027d like to defer this (so as to not mess with threading in a point release), but if you are, we\u0027ll review some potential fixes. \n\n",
    "If anyone is still seeing this on 1.0 release, please re-open. \nI\u0027m reluctant to \"fix a thread bug\" that we can\u0027t reproduce. ",
    "Sorry, I neglected to add myself to the CC list and hadn\u0027t checked this one for a while.\n\nInspecting the code shows that my explanation still applies and this is still a potential problem.  Tripping over this involves changing the classpath and adding, or I assume modifying, a resource, such that the classpath change and the resource change get handled on separate threads.  In WTP 0.7x, this situation was occurring in a wizard we are developing.  I forget at the moment what was causing change notifications to get triggered on a separate thread.  It wasn\u0027t due to anything we were doing specifically.  It was just the way things were working.  The more jars in the classpath change that need to be scanned for taglibs, the larger the window that the change notification thread can recursively invoke the ClasspathChangeListener.  In our case, we were adding close to 70 jars.\n\nAs of WTP 1.0, we have changed our approach such that the classpath gets modified as part of adding a facet, and other resources gets added later in a separate operation.  The two actions appear to be occurring far enough apart to avoid this problem.  I\u0027ll try to recreate a patch I tried a while back that seemed to fix it and didn\u0027t seem to cause any side effect.  Unfortunately, I can\u0027t claim to know the code well enough to be certain there can\u0027t be any side effects.\n",
    "here at BEA we are still seeing this intermittently in our automated test runs",
    "We are still seeing this in our automateds tests as of today:\n\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Stack.java:79)\n\tat java.util.Stack.pop(Stack.java:61)\n\tat org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.handleClasspathChange(TaglibIndex.java:123)\n\tat org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:80)\n\tat org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:73)\n\tat org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.elementChanged(TaglibIndex.java:66)\n\tat org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1432)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1422)\n\tat org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1270)\n\tat org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1245)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:758)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:777)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:871)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslation.createCompilationUnit(JSPTranslation.java:405)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslation.getCompilationUnit(JSPTranslation.java:338)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslation.getJavaPath(JSPTranslation.java:125)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getPath(JSPSearchDocument.java:153)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JavaSearchDocumentDelegate.\u003cinit\u003e(JavaSearchDocumentDelegate.java:30)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.createSearchDocument(JSPSearchSupport.java:401)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.addJspFile(JSPSearchSupport.java:295)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPIndexManager$ProcessFilesJob.run(JSPIndexManager.java:262)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "Created an attachment (id\u003d39105)\nziip containing repro plugin and workspace\n\nThis zip contains the source for a plugin (wtp.repro) that can be added to a WTP install to generate the exception on starup, and a sample workspace.  (Thanks to Tom Stamm for providing this.)\n\nThe plugin implements earlyStartup, and for each project in the workspace, kicks off 3 jobs:\n1) ?scan? the web projects; in this case just get the virtual components and call some random methods to get things like the web.xml file. \n2) make some JDT calls; in this case just start at each source package fragment root and recursively walk all the packages \n3) futz with the classpath; each either add or remove a jar in a project \"lib\" directory from the classpath (if it was already there it would remove it, otherwise it would add it)\n\nIt\u0027s #3 that appears to cause the TaglibIndex$ClasspathChangeListener exception pretty consistently.\n\nThe included workspace may be used to repro.  It requires a configured Tomcat 5.5 install and JDK 1.5 install.\n\nTwo factors appear to make the exception more likely to occur on startup\n1) fast machine\n2) more jars on the project classpath (if you\u0027re having trouble repro\u0027ing, add jars to WEB-INF/lib dirs)",
    "chuck and david, FYI, the attached plugin was developed to attempt to repro\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d112925\nBut more consistenly generates this stack",
    "Thanks to changes, I believe to address other bugs, the Stack field no longer exists in TaglibIndex.  Thus, this particular exception can\u0027t occur anymore.  This is true for the released WTP 1.5.1 and for the current WTP 2.0 build.  This bug could be marked fixed.",
    "Marking as fixed (indirectly).",
    ".",
    "Closing as fixed since M2.  Please reopen if closed in error."
  ],
  "commentCreationDates": [
    "2005-08-23T21:40:48+02:00",
    "2005-12-01T19:42:22+01:00",
    "2005-12-02T14:22:40+01:00",
    "2005-12-07T21:17:00+01:00",
    "2006-01-09T05:16:57+01:00",
    "2006-01-18T20:55:34+01:00",
    "2006-02-02T14:03:07+01:00",
    "2006-03-02T22:23:11+01:00",
    "2006-03-16T16:48:48+01:00",
    "2006-04-20T22:54:20+02:00",
    "2006-04-20T22:57:47+02:00",
    "2006-10-03T18:11:36+02:00",
    "2007-03-01T19:14:45+01:00",
    "2007-03-01T19:23:04+01:00",
    "2007-04-03T18:07:28+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.EmptyStackException",
      "elements": [
        {
          "method": "java.util.Stack.peek",
          "source": "Stack.java:79"
        },
        {
          "method": "java.util.Stack.pop",
          "source": "Stack.java:61"
        },
        {
          "method": "org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.handleClasspathChange",
          "source": "TaglibIndex.java:123"
        },
        {
          "method": "org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.elementChanged",
          "source": "TaglibIndex.java:80"
        },
        {
          "method": "org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.elementChanged",
          "source": "TaglibIndex.java:73"
        },
        {
          "method": "org.eclipse.jst.jsp.core.taglib.TaglibIndex$ClasspathChangeListener.elementChanged",
          "source": "TaglibIndex.java:66"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessor$3.run",
          "source": "DeltaProcessor.java:1432"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners",
          "source": "DeltaProcessor.java:1422"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta",
          "source": "DeltaProcessor.java:1270"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessor.fire",
          "source": "DeltaProcessor.java:1245"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:758"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:777"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy",
          "source": "CompilationUnit.java:871"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslation.createCompilationUnit",
          "source": "JSPTranslation.java:405"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslation.getCompilationUnit",
          "source": "JSPTranslation.java:338"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslation.getJavaPath",
          "source": "JSPTranslation.java:125"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getPath",
          "source": "JSPSearchDocument.java:153"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JavaSearchDocumentDelegate.\u003cinit\u003e",
          "source": "JavaSearchDocumentDelegate.java:30"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.createSearchDocument",
          "source": "JSPSearchSupport.java:401"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.addJspFile",
          "source": "JSPSearchSupport.java:295"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPIndexManager$ProcessFilesJob.run",
          "source": "JSPIndexManager.java:262"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 8,
      "bugId": "107776",
      "date": "2006-03-16T16:48:48+01:00",
      "product": "Web Tools",
      "component": "jst.jsp",
      "severity": "normal"
    }
  ],
  "groupId": "107776",
  "bugId": "107776",
  "date": "2005-08-23T21:40:48+02:00",
  "product": "Web Tools",
  "component": "jst.jsp",
  "severity": "normal"
}