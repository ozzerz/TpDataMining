{
  "comments": [
    "We have a headless eclipse application which, when executed multiple times in \nsequence using a script sometimes produces the following:\n\nWorker thread ended job: Compacting memory(10), but still holds rule: ThreadJob\n(\nCompacting memory(10),[R/,])\njava.lang.IllegalArgumentException: endRule without matching beginRule: R/\n        at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:58)\n        at org.eclipse.core.internal.jobs.ImplicitJobs.end\n(ImplicitJobs.java:114\n)\n        at org.eclipse.core.internal.jobs.JobManager.endRule\n(JobManager.java:487\n)\n        at org.eclipse.core.internal.utils.StringPoolJob.run\n(StringPoolJob.java:\n95)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "Can you describe your setup a bit - is your script running the application\nmultiple times in the same VM, or does it launch a separate Java VM each time?\nDo you get this error on shutdown?",
    "We have a JVM for the test program and that spawns a new JVM\nfor each test.  And yes this error shows up some time in shut down.\n\n",
    "I found a possible source of the problem.  The code in StringPoolJob does this:\n\ntry {\n\tPlatform.getJobManager().beginRule(rule, monitor);\n\tstart \u003d System.currentTimeMillis();\n\tsavings \u003d shareStrings(toRun, monitor);\n} finally {\n\tPlatform.getJobManager().endRule(rule);\n}\n\nIf shutdown starts before the finally block is run, then the JobManager instance\nis nulled out.  The finally block would then cause a new JobManager to be\ncreated. This would cause the mismatched end rule.  The fix is:\n\nfinal IJobManager jobManager \u003d Platform.getJobManager();\ntry {\n\tjobManager.beginRule(rule, monitor);\n\tstart \u003d System.currentTimeMillis();\n\tsavings \u003d shareStrings(toRun, monitor);\n} finally {\n\tjobManager.endRule(rule);\n}\n\nI\u0027m not certain if this will fix your case, but it is certainly cleaner.  I will\nalso investigate if the runtime shutdown sequence can be improved to ensure a\nJobManager instance isn\u0027t recreated (which would be very bad in any case).",
    "*** Bug 112125 has been marked as a duplicate of this bug. ***",
    "*** Bug 100615 has been marked as a duplicate of this bug. ***",
    "I have made several changes to attempt to fix this:\n\n - Avoided multiple calls to Platform.getJobManager() (comment #3)\n - Canceled the StringPoolJob in the workspace shutdown\n - Within the StringPoolJob run method, check if the platform is shutting down\nat the beginning of the run method, and cancel if it is shutting down.\n\nI will leave this open for awhile to see if further problems occur.",
    "We need this problem fixed in version 3.1.2. Please make sure you applied the \nsame fixes to Eclipse 3.1.2.  Thanks.",
    "Maintenance releases are generally reserved for fixing critical bugs that have\nsignificant impact. Can you describe the impact of this bug on your product?",
    "I have entered bug 112786 to track the request to backport this fix into the\n3.1.x stream.",
    "Closing. Please reopen if anyone can reproduce in I20051018 or newer.",
    "*** Bug 114346 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-09-29T19:56:43+02:00",
    "2005-10-05T20:59:32+02:00",
    "2005-10-05T21:29:44+02:00",
    "2005-10-05T22:50:57+02:00",
    "2005-10-11T16:15:08+02:00",
    "2005-10-12T19:42:48+02:00",
    "2005-10-12T19:53:46+02:00",
    "2005-10-12T20:39:23+02:00",
    "2005-10-12T22:24:25+02:00",
    "2005-10-17T16:08:14+02:00",
    "2005-10-20T21:36:51+02:00",
    "2006-03-27T17:21:39+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "endRule without matching beginRule: R/",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.Assert.isLegal",
          "source": "Assert.java:58"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs.end",
          "source": "ImplicitJobs.java:114 "
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.endRule",
          "source": "JobManager.java:487 "
        },
        {
          "method": "org.eclipse.core.internal.utils.StringPoolJob.run",
          "source": "StringPoolJob.java: 95"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "111106",
      "date": "2005-09-29T19:56:43+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    }
  ],
  "groupId": "111106",
  "bugId": "111106",
  "date": "2005-09-29T19:56:43+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "normal"
}