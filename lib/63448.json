{
  "comments": [
    "I05201226 (sorry if I have the wrong component)\n\nI\u0027m running with a set of preferences that\u0027s been totally changed from the \ndefault settings, just to get more code coverage during testing.  Some of my \npreferences may not even make sense, but they\u0027re all valid.  They\u0027re attached \nin the next comment because they\u0027re probably responsible for me seeing this.\n\n- from a fresh install create a cvs connection to dev.eclipse.org and retrieve \nthe org.eclipse.swt project\n- import my attached preferences (Window -\u003e Preferences, push Import button at \nbottom)\n- right-click on org.eclipse.swt\u0027s contained build.xml file, Run -\u003e Ant Build \n(default target)\n- the following will be written to .log:\n\n!MESSAGE Error logged from Ant Core: \n!STACK 1\norg.eclipse.core.runtime.CoreException: Variable references non-existent \nresource : ${workspace_loc:/org.eclipse.swt.tests/build.properties}\n\tat \norg.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.abort\n(ResourceResolver.java:104)\n\tat \norg.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.resolveValue\n(ResourceResolver.java:50)\n\tat org.eclipse.core.internal.variables.DynamicVariable.getValue\n(DynamicVariable.java:54)\n\tat org.eclipse.core.internal.variables.StringSubstitutionEngine.resolve\n(StringSubstitutionEngine.java:267)\n\tat \norg.eclipse.core.internal.variables.StringSubstitutionEngine.substitute\n(StringSubstitutionEngine.java:192)\n\tat \norg.eclipse.core.internal.variables.StringSubstitutionEngine.performStringSubsti\ntution(StringSubstitutionEngine.java:86)\n\tat \norg.eclipse.core.internal.variables.StringVariableManager.performStringSubstitut\nion(StringVariableManager.java:549)\n\tat \norg.eclipse.core.internal.variables.StringVariableManager.performStringSubstitut\nion(StringVariableManager.java:341)\n\tat org.eclipse.ant.core.AntCorePreferences.getCustomPropertyFiles\n(AntCorePreferences.java:1022)\n\tat org.eclipse.ant.core.AntCorePreferences.getCustomPropertyFiles\n(AntCorePreferences.java:1037)\n\tat \norg.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.generateComma\nndLine(AntLaunchDelegate.java:300)\n\tat \norg.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.launch\n(AntLaunchDelegate.java:156)\n\tat org.eclipse.debug.internal.core.LaunchConfiguration.launch\n(LaunchConfiguration.java:569)\n\tat org.eclipse.debug.internal.core.LaunchConfiguration.launch\n(LaunchConfiguration.java:150)\n\tat org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch\n(DebugUIPlugin.java:796)\n\tat org.eclipse.debug.internal.ui.DebugUIPlugin$6.run\n(DebugUIPlugin.java:959)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)\n!SUBENTRY 1 org.eclipse.debug.ui 4 120 May 21, 2004 12:17:58.286\n!MESSAGE Variable references non-existent resource : \n${workspace_loc:/org.eclipse.swt.tests/build.properties}",
    "Created an attachment (id\u003d10959)\npreferences file\n",
    "So the swt tests build.properties file is not in the workspace?\nYou have an invalid preference. In your preferences you have set a property \nfile reference to build.properties. You are now trying to use these preferences \nin a workspace that does not have build.properties.\nIf I understand this correctly I am not sure what the bug is...you are in an \nerror case and your preferences are not valid.",
    "No preferences export/import is actually required.  If a .properties file in \nsome project is set to be a global property file, and then in the future its \nproject is deleted, the same error will occur with subsequent Ant runs.  It \ncould be said that once the project was deleted then the preference setting \nbecame invalid, but spewing an exception because the user didn\u0027t think to \nremove this preference setting seems harsh.\n",
    "We will see if we can improve this for 3.0",
    "I get a \"Editor cannot be initialized\" dialog and the same exception in \nmy .log when there are jars on the Ant classpath which are non-existent on the \nfilesystem.\n",
    "The dialog opens when I double click an .xml file (I have all .xml files \nassociated with the Ant editor).",
    "That would be bad.\nGlad to see you associate all xml files with the Ant editor :-)",
    "I am looking at Grant\u0027s problem first and I do not plan to change the current \nbehavior. The user needs to be notified that a file cannot be resolved. A \ndialog is not an option as the resolution occurs in a non-UI plugin. \nI am open to other ideas on how to let the user know that they have a \nconfiguration problem?",
    "In this case can a missing global properties file just be ignored, and a \nwarning about this written to the Ant console?  Or is the Ant console reserved \nfor direct Ant output only?\n\n(thinking out loud) I don\u0027t think that writing a message (even a nicer one than \na stack trace \u003cg\u003e) to the .log is an option because this isn\u0027t the .log\u0027s \npurpose, and most users never see this.\n",
    "Good idea Grant...I can make Ant do the work for us. If the expansion of the \nvariable fails (for whatever reason), I will pass it through to the Ant build \nand it will happily report the missing file. Thanks.",
    "So for Grant\u0027s case we pass through the missing property file, the Ant build \ncomplains about it and does the build.\n\nFor Sonia\u0027s case, the debug framework pops up an error dialog when you attempt \nto do a build and a classpath entry is missing.\nYou can open an Ant editor with no error for this case.\n\nI have logged and deferred bug 63993 to improve the presentation in the UI\n\nChanges to:\nAntCorePreferences: refactoring and handle when a classpath entry returns null \nfor its URL\nAntClasspathEntry: returns the unexpanded entry string as the URL if a core \nexception occurs attempting to expand the string.\nAntJavaLaunchDelegate: returns the arguments in raw form if a core exception \noccurs attempting to expand the arguments.\nContributedClasspathEntriesEntry: reworked to not call \nIAntClasspathEntry#getEntryURL as it can use the label to check for the \ntools.jar.",
    "Please verify DarinW.",
    "Verified."
  ],
  "commentCreationDates": [
    "2004-05-21T19:40:37+02:00",
    "2004-05-21T19:40:59+02:00",
    "2004-05-21T20:22:34+02:00",
    "2004-05-21T20:50:32+02:00",
    "2004-05-21T20:57:08+02:00",
    "2004-05-25T21:05:55+02:00",
    "2004-05-25T21:06:58+02:00",
    "2004-05-25T21:08:24+02:00",
    "2004-05-25T21:52:21+02:00",
    "2004-05-25T22:05:46+02:00",
    "2004-05-25T22:11:00+02:00",
    "2004-05-25T23:40:52+02:00",
    "2004-05-25T23:46:06+02:00",
    "2004-05-27T17:42:26+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Variable references non-existent  resource : ${workspace_loc:/org.eclipse.swt.tests/build.properties}",
      "elements": [
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.abort",
          "source": "ResourceResolver.java:104"
        },
        {
          "method": "org.eclipse.debug.internal.ui.stringsubstitution.ResourceResolver.resolveValue",
          "source": "ResourceResolver.java:50"
        },
        {
          "method": "org.eclipse.core.internal.variables.DynamicVariable.getValue",
          "source": "DynamicVariable.java:54"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringSubstitutionEngine.resolve",
          "source": "StringSubstitutionEngine.java:267"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringSubstitutionEngine.substitute",
          "source": "StringSubstitutionEngine.java:192"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringSubstitutionEngine.performStringSubstitution",
          "source": "StringSubstitutionEngine.java:86"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution",
          "source": "StringVariableManager.java:549"
        },
        {
          "method": "org.eclipse.core.internal.variables.StringVariableManager.performStringSubstitution",
          "source": "StringVariableManager.java:341"
        },
        {
          "method": "org.eclipse.ant.core.AntCorePreferences.getCustomPropertyFiles",
          "source": "AntCorePreferences.java:1022"
        },
        {
          "method": "org.eclipse.ant.core.AntCorePreferences.getCustomPropertyFiles",
          "source": "AntCorePreferences.java:1037"
        },
        {
          "method": "org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.generateCommandLine",
          "source": "AntLaunchDelegate.java:300"
        },
        {
          "method": "org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchDelegate.launch",
          "source": "AntLaunchDelegate.java:156"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfiguration.launch",
          "source": "LaunchConfiguration.java:569"
        },
        {
          "method": "org.eclipse.debug.internal.core.LaunchConfiguration.launch",
          "source": "LaunchConfiguration.java:150"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch",
          "source": "DebugUIPlugin.java:796"
        },
        {
          "method": "org.eclipse.debug.internal.ui.DebugUIPlugin$6.run",
          "source": "DebugUIPlugin.java:959"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "63448",
      "date": "2004-05-21T19:40:37+02:00",
      "product": "Platform",
      "component": "Ant",
      "severity": "normal"
    }
  ],
  "groupId": "63448",
  "bugId": "63448",
  "date": "2004-05-21T19:40:37+02:00",
  "product": "Platform",
  "component": "Ant",
  "severity": "normal"
}