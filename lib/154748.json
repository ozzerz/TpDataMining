{
  "comments": [
    "- Create plugin with Editor implementation inside\n- On runtime open editor instance\n- Call Bundle.uninstall() -\u003e EditorManager.removeExtension fails with the following exception:\n\norg.eclipse.core.runtime.InvalidRegistryObjectException: Invalid registry object\n\tat org.eclipse.core.internal.registry.RegistryObjectManager.basicGetObject(RegistryObjectManager.java:271)\n\tat org.eclipse.core.internal.registry.RegistryObjectManager.getObject(RegistryObjectManager.java:261)\n\tat org.eclipse.core.internal.registry.ConfigurationElementHandle.getConfigurationElement(ConfigurationElementHandle.java:26)\n\tat org.eclipse.core.internal.registry.ConfigurationElementHandle.getAttribute(ConfigurationElementHandle.java:34)\n\tat org.eclipse.gmf.runtime.common.core.service.Service$ProviderDescriptor.toString(Service.java:279)\n\tat java.lang.String.valueOf(Unknown Source)\n\tat java.lang.StringBuffer.append(Unknown Source)\n\tat org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy.safeProvides(ExecutionStrategy.java:334)\n\tat org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy.getUncachedProviders(ExecutionStrategy.java:259)\n\tat org.eclipse.gmf.runtime.common.core.service.Service.getProviders(Service.java:528)\n\tat org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy$4.execute(ExecutionStrategy.java:183)\n\tat org.eclipse.gmf.runtime.common.core.service.Service.execute(Service.java:642)\n\tat org.eclipse.gmf.runtime.common.ui.services.action.contributionitem.ContributionItemService.execute(ContributionItemService.java:288)\n\tat org.eclipse.gmf.runtime.common.ui.services.action.contributionitem.ContributionItemService.disposeContributions(ContributionItemService.java:256)\n\tat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramActionBarContributor.dispose(DiagramActionBarContributor.java:96)\n\tat org.eclipse.ui.internal.EditorActionBars.dispose(EditorActionBars.java:148)\n\tat org.eclipse.ui.internal.EditorManager.disposeEditorActionBars(EditorManager.java:357)\n\tat org.eclipse.ui.internal.EditorReference.doDisposePart(EditorReference.java:250)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.dispose(WorkbenchPartReference.java:642)\n\tat org.eclipse.ui.internal.WorkbenchPage.disposePart(WorkbenchPage.java:1541)\n\tat org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents(WorkbenchPage.java:1311)\n\tat org.eclipse.ui.internal.WorkbenchPage.deferUpdates(WorkbenchPage.java:1295)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditors(WorkbenchPage.java:1269)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:1333)\n\tat org.eclipse.ui.internal.EditorManager.removeExtension(EditorManager.java:1586)\n\tat org.eclipse.ui.internal.registry.UIExtensionTracker$1.run(UIExtensionTracker.java:46)\n\nIn other words, it is not possible to close editor (this method called form EditorManager.removeExtension implementation) because the bundle was already uninstalled.\n\nIf I try to close editor before uninstalling the bundle, following exception occur on trying to exit workbench:\n\norg.eclipse.core.runtime.InvalidRegistryObjectException: Invalid registry object\n\tat org.eclipse.core.internal.registry.TemporaryObjectManager.getObject(TemporaryObjectManager.java:98)\n\tat org.eclipse.core.internal.registry.ConfigurationElementHandle.getConfigurationElement(ConfigurationElementHandle.java:26)\n\tat org.eclipse.core.internal.registry.ConfigurationElementHandle.getAttribute(ConfigurationElementHandle.java:34)\n\tat org.eclipse.ui.internal.registry.EditorDescriptor.getId(EditorDescriptor.java:260)\n\tat org.eclipse.ui.internal.EditorHistoryItem.saveState(EditorHistoryItem.java:225)\n\tat org.eclipse.ui.internal.EditorHistory.saveState(EditorHistory.java:152)\n\tat org.eclipse.ui.internal.Workbench.saveState(Workbench.java:1953)\n\nThe reason: IEditorPart instance passed into EditorManager.removeExtension() in this case has no IEditorInput (null returned from editor.getEditorInput() call) as a result, corresponding IEditorInput will not be removed from EditorHistory on attempt to uninstall bundle with Editor and Workbench fails on saving the state.\n\nShouldn\u0027t we remove EditorHistoryItem from EditorHistory on closing corresponding editor to get rid of these problems?",
    "Created bug 154765 and bug 154767 in Platform/UI to track problems on our side.\n\nMoving this one to GMF since DiagramActionBarContributor.dispose should not access the runtime registry.",
    "Changing component.",
    "Created an attachment (id\u003d48873)\nFixes all problems found while editor plugin uninstallation\n\n",
    "In addition attached patch contains correction for StorageEditorInputProxy.equals() method. This modification important for correct comparison of different EditorInputs in EditorHistory.remove(input) method. EditorHistory.fifoList contains EditorHistoryItems referencing original editorInputs, as parameter of this method StorageEditorInputProxy proxying original editorInput will be passed.",
    "Is there any chance to commit these fixes to HEAD branch ASAP? We have a problems running whole set of unit-tests for HEAD without this patch.",
    "Found a workaround for this problem: using FileEditorInput returning null from getPersistable() for tests.\n\nSo, this problem is not so urgent anymore.",
    "Can I commit the patch without the fix to StorageEditorInputProxy?\nSince you found a workaround and it\u0027s been decided to get rid of proxied editor inputs, the issue with StorageEditorInput not being equal to StorageEditorInputProxy will be resolved.",
    "I think, fixing StorageEditorInputProxy is important wor all the clients of this API. Since generated code not using it anymore, it\u0027s up to you to decide if you\u0027d like to improve existing API and fix problems there or not.",
    "Fix committed to head. The fix wasn\u0027t exactly the same as patch due to the fact that contribution providers need to provide dispose operation although the plugin they belong to is unloaded.",
    "Currently it is possible to uninstall bundles with open editors (first stack trace).\n\nUsing this trick in tests."
  ],
  "commentCreationDates": [
    "2006-08-22T21:31:52+02:00",
    "2006-08-22T23:35:50+02:00",
    "2006-08-23T14:19:48+02:00",
    "2006-08-28T13:21:48+02:00",
    "2006-08-28T13:30:31+02:00",
    "2006-08-28T13:31:39+02:00",
    "2006-11-15T20:06:01+01:00",
    "2007-04-17T23:27:47+02:00",
    "2007-04-18T13:05:23+02:00",
    "2007-04-18T20:07:09+02:00",
    "2007-04-25T15:23:33+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.InvalidRegistryObjectException",
      "message": "Invalid registry object",
      "elements": [
        {
          "method": "org.eclipse.core.internal.registry.RegistryObjectManager.basicGetObject",
          "source": "RegistryObjectManager.java:271"
        },
        {
          "method": "org.eclipse.core.internal.registry.RegistryObjectManager.getObject",
          "source": "RegistryObjectManager.java:261"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.getConfigurationElement",
          "source": "ConfigurationElementHandle.java:26"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.getAttribute",
          "source": "ConfigurationElementHandle.java:34"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.service.Service$ProviderDescriptor.toString",
          "source": "Service.java:279"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy.safeProvides",
          "source": "ExecutionStrategy.java:334"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy.getUncachedProviders",
          "source": "ExecutionStrategy.java:259"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.service.Service.getProviders",
          "source": "Service.java:528"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy$4.execute",
          "source": "ExecutionStrategy.java:183"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.service.Service.execute",
          "source": "Service.java:642"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.ui.services.action.contributionitem.ContributionItemService.execute",
          "source": "ContributionItemService.java:288"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.ui.services.action.contributionitem.ContributionItemService.disposeContributions",
          "source": "ContributionItemService.java:256"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramActionBarContributor.dispose",
          "source": "DiagramActionBarContributor.java:96"
        },
        {
          "method": "org.eclipse.ui.internal.EditorActionBars.dispose",
          "source": "EditorActionBars.java:148"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.disposeEditorActionBars",
          "source": "EditorManager.java:357"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.doDisposePart",
          "source": "EditorReference.java:250"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.dispose",
          "source": "WorkbenchPartReference.java:642"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.disposePart",
          "source": "WorkbenchPage.java:1541"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents",
          "source": "WorkbenchPage.java:1311"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.deferUpdates",
          "source": "WorkbenchPage.java:1295"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditors",
          "source": "WorkbenchPage.java:1269"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditor",
          "source": "WorkbenchPage.java:1333"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.removeExtension",
          "source": "EditorManager.java:1586"
        },
        {
          "method": "org.eclipse.ui.internal.registry.UIExtensionTracker$1.run",
          "source": "UIExtensionTracker.java:46"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "154748",
      "date": "2006-08-22T21:31:52+02:00",
      "product": "GMF",
      "component": "Runtime Diagram",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.core.runtime.InvalidRegistryObjectException",
      "message": "Invalid registry object",
      "elements": [
        {
          "method": "org.eclipse.core.internal.registry.TemporaryObjectManager.getObject",
          "source": "TemporaryObjectManager.java:98"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.getConfigurationElement",
          "source": "ConfigurationElementHandle.java:26"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.getAttribute",
          "source": "ConfigurationElementHandle.java:34"
        },
        {
          "method": "org.eclipse.ui.internal.registry.EditorDescriptor.getId",
          "source": "EditorDescriptor.java:260"
        },
        {
          "method": "org.eclipse.ui.internal.EditorHistoryItem.saveState",
          "source": "EditorHistoryItem.java:225"
        },
        {
          "method": "org.eclipse.ui.internal.EditorHistory.saveState",
          "source": "EditorHistory.java:152"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.saveState",
          "source": "Workbench.java:1953"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "154748",
      "date": "2006-08-22T21:31:52+02:00",
      "product": "GMF",
      "component": "Runtime Diagram",
      "severity": "normal"
    }
  ],
  "groupId": "154748",
  "bugId": "154748",
  "date": "2006-08-22T21:31:52+02:00",
  "product": "GMF",
  "component": "Runtime Diagram",
  "severity": "normal"
}