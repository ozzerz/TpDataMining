{
  "comments": [
    "A generation option to target RCP application should be provided in the \ngenerator model, to complement that provided by EMF.",
    "Updated Version/Milestone.",
    "Created an attachment (id\u003d38918)\nFixes the subj for the Lite Generator case\n\nThe option itself has not been added, instead it is taken from the corresponding .genmodel model (it seems reasonable to align values of this option for the diagram editor and the underlying domain model, anyway)",
    "Patch for Lite generator reviewed and committed.",
    "Sounds great for my project! Could we have details on what this RCP flag generates as an RCP application? Also, when will this be released, 3.2 RC1?",
    "Hello,\nCan you explain how to generate an RCP application instead of an eclipse editor for GMF",
    "Hi,\nFirst, you need to obtain the GMF SDK Experimental (available as a separate download) and use it along with the GMF SDK proper, because the RCP generation is currently available only for the pure-GEF (\"Lite\") version of the generator.\n\nIn the .genmodel for your domain model, check the option to generate RCP application. \nProduce all .gmf* models as you would do for a non-RCP application (while creating the generator model, specify that enhanced figures should NOT be used). \nFinally, as the last generation step, use the action \"Generate pure-GEF diagram code\" instead of \"Generate diagram code\". This will activate the \"lite\" version of the generator and will produce the RCP application.\n\nOf course, being RCP does not mean that it will run with org.eclipse.rcp feature only. You will need at least GEF and EMF features as well. Depending on the complexity of your model (e.g., whether you have feature initializers and/or constraints), you may also have to bundle OCL-related features. ",
    "Hi Boris,\n\nThanks for the detailled steps. I was able to run my GMF application as a RCP product. I had a couple of small issues with the generated editor plugin:\n - Collections used without import (java.util)\n - gmf.runtime.draw2d dependencies not added to the plugin.xml causing compliation errors\n - usage of deprecated API: getSite().getKeyBindingService()\n - import of some unused package generating a warning\n\nAlso, when trying to run the RCP application, I realized that many dependencies were required. Below is a complete list of the plugins I had to include. Is everything really required?\n\n   \u003cplugins\u003e\n      \u003cplugin id\u003d\"com.ibm.icu\"/\u003e\n      \u003cplugin id\u003d\"com.si.designer\"/\u003e\n      \u003cplugin id\u003d\"com.si.designer.model\"/\u003e\n      \u003cplugin id\u003d\"com.si.designer.model.edit\"/\u003e\n      \u003cplugin id\u003d\"com.si.designer.model.editor\"/\u003e\n      \u003cplugin id\u003d\"com.si.designer.source.editor\"/\u003e\n      \u003cplugin id\u003d\"org.apache.batik\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ant.core\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.commands\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.contenttype\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.expressions\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.filesystem\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.filesystem.win32.x86\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.jobs\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.resources\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.resources.compatibility\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.resources.win32\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.runtime\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.runtime.compatibility\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.runtime.compatibility.auth\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.runtime.compatibility.registry\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.core.variables\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.draw2d\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.common\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.common.ui\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.ecore\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.ecore.change\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.ecore.edit\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.ecore.xmi\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.edit\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.emf.edit.ui\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.equinox.common\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.equinox.preferences\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.equinox.registry\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gef\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.common.core\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.common.ui\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.draw2d.ui\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.draw2d.ui.render\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.draw2d.ui.render.awt\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.notation\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.gmf.runtime.notation.edit\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.help\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.jface\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.jface.text\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.osgi\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.swt\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.swt.win32.win32.x86\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.team.core\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.text\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui.console\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui.forms\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui.views\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui.win32\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui.workbench\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.ui.workbench.texteditor\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.update.configurator\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.update.core\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.update.core.win32\" fragment\u003d\"true\"/\u003e\n      \u003cplugin id\u003d\"org.eclipse.update.ui\"/\u003e\n   \u003c/plugins\u003e",
    "Hi Jerome,\nIn recent builds, there is an option not to generate figures that reference gmf.runtime.ui. In this case, only org.eclipse.gmf.runtime.* plugins that are needed are .notation and .notation.edit. This will also eliminate the need for org.apache.batik, org.eclipse.core.resources (and related plugins), org.eclipse.ant.core, org.eclipse.core.filesystem (and the related fragment), org.eclipse.team.core, org.eclipse.ui.console, org.eclipse.ui.forms and org.eclipse.update.* -- unless your plugins require them.\n\nAlso, since recently, references to gmf.runtime.draw2d should be added automatically if \"use enhanced figures\" option is used, so the code should stay compilable (although the very idea of pure-GEF approach does not fit well with using gmf.runtime figures). \n\nI should note, however, that the use of ocl will add the requirement to have org.eclipse.core.resources and everything it depends on. Also, a planned change to introduce transaction support into the pure-GEF generator will make org.eclipse.core.resources a required plugin, because org.eclipse.emf.transaction requires it.",
    "Boris,\n\nAfter playing a little more with the pure-GEF option, it seems that we are losing many interesting GMF options in this mode, like the layout tools or the contextual links creation...\n\nPersonnaly, I\u0027m looking for a mode that would allow me to run a fully-featured GMF diagram as an RCP application with any plugin that makes sense (like core.resources) but without all the IDE related plugins as my application has nothing to do with a fully-feature IDE like Eclipse.\n\nIs something like this on your road-map?\n\nThanks,\nJerome",
    "Milestone updated. No RCP option in 1.0",
    "(In reply to comment #9)\n\u003e Boris,\n\u003e \n\u003e After playing a little more with the pure-GEF option, it seems that we are\n\u003e losing many interesting GMF options in this mode, like the layout tools or the\n\u003e contextual links creation...\n\u003e \n\u003e Personnaly, I\u0027m looking for a mode that would allow me to run a fully-featured\n\u003e GMF diagram as an RCP application with any plugin that makes sense (like\n\u003e core.resources) but without all the IDE related plugins as my application has\n\u003e nothing to do with a fully-feature IDE like Eclipse.\n\u003e \n\u003e Is something like this on your road-map?\n\u003e \n\u003e Thanks,\n\u003e Jerome\n\u003e \n\nHi Jerome/Boris,\n\nI went thru the exact steps mentioned, and when I run through it, the code throws a class cast exception... I am using the mindmap example...\nOn a little investigation, I found that \ndiagramRoot \u003d (Map) diagram.getElement();\nwas causing that exception. diagram.getElement() returns DocumentRootImpl where as the casting expects a map object. I am not sure abt how it internally works and whats causing it.\n\nIt looks like I am missing something...\n\nAny ideas??\n\nRegards\nEswar\n\n\njava.lang.ClassCastException: org.eclipse.gmf.examples.mindmap.impl.DocumentRootImpl\n\tat org.eclipse.gmf.examples.mindmap.diagram.part.MindmapDiagramEditor.load(MindmapDiagramEditor.java:1111)\n\tat org.eclipse.gmf.examples.mindmap.diagram.part.MindmapDiagramEditor.setInput(MindmapDiagramEditor.java:1013)\n\tat org.eclipse.gmf.examples.mindmap.diagram.part.MindmapDiagramEditor.init(MindmapDiagramEditor.java:987)\n\tat org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:839)\n\tat org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:583)\n\tat org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:372)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:566)\n\tat org.eclipse.ui.internal.EditorAreaHelper.setVisibleEditor(EditorAreaHelper.java:263)\n\tat org.eclipse.ui.internal.EditorManager.setVisibleEditor(EditorManager.java:1420)\n\tat org.eclipse.ui.internal.EditorManager$5.run(EditorManager.java:1005)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:843)\n\tat org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:1000)\n\tat org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2836)\n\tat org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1936)\n\tat org.eclipse.ui.internal.Workbench.doRestoreState(Workbench.java:2857)\n\tat org.eclipse.ui.internal.Workbench.access$14(Workbench.java:2805)\n\tat org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1681)\n\tat org.eclipse.ui.internal.Workbench.runStartupWithProgress(Workbench.java:1421)\n\tat org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1679)\n\tat org.eclipse.ui.internal.Workbench.access$12(Workbench.java:1650)\n\tat org.eclipse.ui.internal.Workbench$17.run(Workbench.java:1529)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1473)\n\tat org.eclipse.ui.internal.WorkbenchConfigurer.restoreState(WorkbenchConfigurer.java:183)\n\tat org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:702)\n\tat org.eclipse.ui.internal.Workbench.init(Workbench.java:1085)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1847)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\n",
    "Please confirm the RCP option will support both the light and the runtime configurations\n",
    "Confirmed, for sure.",
    "full runtime is supported"
  ],
  "commentCreationDates": [
    "2005-10-28T21:17:13+02:00",
    "2006-04-14T17:00:34+02:00",
    "2006-04-19T13:01:29+02:00",
    "2006-04-20T20:39:26+02:00",
    "2006-04-21T10:38:13+02:00",
    "2006-04-27T11:01:10+02:00",
    "2006-04-27T11:40:26+02:00",
    "2006-04-27T16:17:06+02:00",
    "2006-04-27T17:23:42+02:00",
    "2006-04-28T15:33:50+02:00",
    "2006-05-29T20:30:14+02:00",
    "2006-07-07T11:55:19+02:00",
    "2006-07-11T16:06:46+02:00",
    "2006-07-11T16:10:22+02:00",
    "2006-11-28T13:53:20+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.gmf.examples.mindmap.impl.DocumentRootImpl",
      "elements": [
        {
          "method": "org.eclipse.gmf.examples.mindmap.diagram.part.MindmapDiagramEditor.load",
          "source": "MindmapDiagramEditor.java:1111"
        },
        {
          "method": "org.eclipse.gmf.examples.mindmap.diagram.part.MindmapDiagramEditor.setInput",
          "source": "MindmapDiagramEditor.java:1013"
        },
        {
          "method": "org.eclipse.gmf.examples.mindmap.diagram.part.MindmapDiagramEditor.init",
          "source": "MindmapDiagramEditor.java:987"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.createSite",
          "source": "EditorManager.java:839"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPartHelper",
          "source": "EditorReference.java:583"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPart",
          "source": "EditorReference.java:372"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:566"
        },
        {
          "method": "org.eclipse.ui.internal.EditorAreaHelper.setVisibleEditor",
          "source": "EditorAreaHelper.java:263"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.setVisibleEditor",
          "source": "EditorManager.java:1420"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager$5.run",
          "source": "EditorManager.java:1005"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:843"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.restoreState",
          "source": "EditorManager.java:1000"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.restoreState",
          "source": "WorkbenchPage.java:2836"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.restoreState",
          "source": "WorkbenchWindow.java:1936"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.doRestoreState",
          "source": "Workbench.java:2857"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$14",
          "source": "Workbench.java:2805"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$19.run",
          "source": "Workbench.java:1681"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runStartupWithProgress",
          "source": "Workbench.java:1421"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.restoreState",
          "source": "Workbench.java:1679"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$12",
          "source": "Workbench.java:1650"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$17.run",
          "source": "Workbench.java:1529"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.restoreState",
          "source": "Workbench.java:1473"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.restoreState",
          "source": "WorkbenchConfigurer.java:183"
        },
        {
          "method": "org.eclipse.ui.application.WorkbenchAdvisor.openWindows",
          "source": "WorkbenchAdvisor.java:702"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:1085"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1847"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 11,
      "bugId": "114200",
      "date": "2006-07-07T11:55:19+02:00",
      "product": "GMF",
      "component": "Definition",
      "severity": "enhancement"
    }
  ],
  "groupId": "114200",
  "bugId": "114200",
  "date": "2005-10-28T21:17:13+02:00",
  "product": "GMF",
  "component": "Definition",
  "severity": "enhancement"
}