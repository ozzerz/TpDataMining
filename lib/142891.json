{
  "comments": [
    "Bugzilla search query dialog used to show results in a Search view, should remember values user enter previous time and maybe even allow to edit query before reruning the search.",
    "Rob, I recall asking for this too, so please mark duplicate if you already have a report for this.  Please put it on for this week since it\u0027s really hard to iterate on queries otherwise.",
    "Jeff, is this something that you could have done by end of day next Tuesday?  It would be great to have in 0.6, but note that the changes would need to be pretty well localized because for the most part we\u0027re limiting ourselves to polish items.",
    "So the issue is persisting the query values and restoring them the next time the dialog is opened, or storing the values per query and allowing editing?",
    "It is simply remembering the last selected values for every item in the search dialog (repository, product, component, etc).  This will enable iteratively refining the search as we currently do with Bugzilla by hitting \"back\".  It may be appropriate to save these as dialog settings or some sort of memento like that, if not they can just go into the BugzillaUiPlugin preferences.",
    "(In reply to comment #4)\n\u003e It is simply remembering the last selected values for every item in the search\n\u003e dialog (repository, product, component, etc).  This will enable iteratively\n\u003e refining the search as we currently do with Bugzilla by hitting \"back\".\n\nNot sure what you meant by hitting \"back\", but it would be really handy if we would be able to refine query for search results. Though it might be a separate issue/report...",
    "By back I mean that in the Web UI you can create a query, see results, then hit the \"Back\" browser button and refine the query.  \n\nResolving this report will allow us to do the same: hit Ctrl+H to search, see too many results, hit Ctrl+H again and refine query...",
    "(In reply to comment #6)\n\u003e By back I mean that in the Web UI you can create a query, see results, then hit\n\u003e the \"Back\" browser button and refine the query.  \n\u003e \n\u003e Resolving this report will allow us to do the same: hit Ctrl+H to search, see\n\u003e too many results, hit Ctrl+H again and refine query...\n\nRight, but that will create new instance in a Search history. It would be nice to avoid that and be able to edit query...\n\n",
    "Jeff, are you planning on having a patch for this for 0.6?  It would be great to have and is definitely the next highest priority item on your bug list since we won\u0027t be able to incorporate more disruptive patches than this since we\u0027re trying to limit ourselves to polish items now.",
    "Sure, I\u0027ll start on this one tonight.",
    "Created an attachment (id\u003d45404)\nPersist query options\n\nAdds persistence to query option values on a per repository basis (each repo persists its last query values).\n\nThe only widgets which are not persisted are:\nSummary and Comment Text: These will likely change from query to query and already have combos to facilitate selecting previous values (though this doesn\u0027t seem to implemented yet)\n\nEmail address Text: If a user submits a query with an email constraint, then submits another query and doesn\u0027t notice this field was auto-restored, it will cause confusion with unexpeced (overfiltered) results. This also has a Combo to store previous values in the UI.\n\nX last days Text: For same reson as Email address Text",
    "Patch failed with the following exception when I open up the Bugzilla search page and attempt to select a repository (non are shown).  This patch should come with at least one unit test for ensuring that the search page is initialized with the repository once a repository has been added by the test (see TaskRepositoryManagerTest for adding repositories programatically in a test).  Also please attach a context when re-submitting.\n\nYour UI desicisions sound good.  We\u0027ll get a better sense for any tweaks that need to be made to them once we use it more.\n\njava.lang.IllegalArgumentException: Argument cannot be null\n\tat org.eclipse.swt.SWT.error(SWT.java:3358)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.SWT.error(SWT.java:3268)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:435)\n\tat org.eclipse.swt.widgets.List.setSelection(List.java:1335)\n\tat org.eclipse.mylar.internal.bugzilla.ui.search.BugzillaSearchPage.restoreWidgetValues(BugzillaSearchPage.java:1675)\n\tat org.eclipse.mylar.internal.bugzilla.ui.search.BugzillaSearchPage.setVisible(BugzillaSearchPage.java:973)\n\tat org.eclipse.search.internal.ui.SearchDialog.turnToPage(SearchDialog.java:526)\n\tat org.eclipse.search.internal.ui.SearchDialog.access$1(SearchDialog.java:500)\n\tat org.eclipse.search.internal.ui.SearchDialog$7.widgetSelected(SearchDialog.java:408)",
    "Created an attachment (id\u003d45485)\npersist query options\n\nMik, I wasn\u0027t able to reproduce the exact behaviour you described. I did find the IllegalArgument exception though. I have fixed that and added a test case to verify the search dialog is initialized with the repository.\n\nHopefully this works better.",
    "Created an attachment (id\u003d45486)\nmylar/context/zip\n\n",
    "This doesn\u0027t work for me, i.e.:\n1) hit Ctrl+H, click Bugzilla Search tab\n2) set some search prefs, search\n3) repeat (1), no settings are restored\n\nWhat I\u0027ve noticed (in part thanks to the context, thanks) is that your saveWidgetValues() is called from NewBugzillaQueryWizard.performFinish() which isn\u0027t right.  The prefs should only be saved if we run the query from the search page.\n\nHopefully this is a small change on your end because it would be great to have this in for tonight\u0027s freeze...",
    "Btw, the test looks good.",
    "oh wow, i didn\u0027t even know you could search from there! I\u0027ve been using the \"New Repository Query\" all this time (in which the stored prefs do work). I\u0027ll fix it so it works with both.",
    "I bet others don\u0027t know about it either, but assuming this gets into 0.6 this integrated search page will get to go into the New \u0026 Noteworthy.\n\nFor now could you make it just work for the search page?  I\u0027m not sure it makes sense to for the New Repository Query wizard becaue creating repository queries is a rare action so the saved values could be confusing.  If it turns out we want it it will be easy to add, but I think that we\u0027re more likely to offer some query templates first (e.g. all open tasks assigned to someone).",
    "Created an attachment (id\u003d45505)\npersist query options\n\nOk, I think I\u0027ve got it. Options are only persisted/restored in the search and not in the repository query. Everything seems to work now, let me know how it looks.",
    "Created an attachment (id\u003d45506)\nmylar/context/zip\n\n",
    "Good stuff Jeff, patch applied.  We just need two more things to make this useful (I realize you omitted these intentionally and should have noticed earlier).\n1) persist \"Summary/id contains\"\n2) persist \"Comment contains\"\n\nI\u0027m also leaning towards persisting the email address too?  I often run repeated queries on email addresses to get tallies of total resolved, etc.   \n",
    "Created an attachment (id\u003d45511)\nPersist patterns\n\nOk, this patch persists the summary, comment, and email patterns.\n\nThe only reason I was hesitant about email was just because the user might not notice/expect it will drastically change the search results. I guess its just preference, if we get bugs filed about it we can always change it back.\n\n\nNote: If you test this patch with the same workspace you\u0027ve tested with before you will get an exception the first time you search each repository. Its just because the search assumes you have all or none of the persisted options (in this case you don\u0027t have the 3 I just added and they will be null until you submit a search). In regular a usage situation this won\u0027t happen.",
    "Patch applied and some manual testing done.  \n\nNice work Jeff and it\u0027s great that we will have this in 0.6.",
    "Jeff, there\u0027s just one more nit: the search page should also remember what repository was last selected, otherwise this has to be reset everytime (i.e. if it\u0027s not the first).",
    "Created an attachment (id\u003d45515)\npersist repo selection\n\nThis patch will persist repo selection",
    "Patch applied and verified."
  ],
  "commentCreationDates": [
    "2006-05-20T16:36:58+02:00",
    "2006-05-22T18:14:03+02:00",
    "2006-06-23T21:09:57+02:00",
    "2006-06-23T21:20:32+02:00",
    "2006-06-23T22:12:39+02:00",
    "2006-06-23T22:19:02+02:00",
    "2006-06-23T22:46:17+02:00",
    "2006-06-23T22:49:04+02:00",
    "2006-06-26T23:02:14+02:00",
    "2006-06-26T23:26:05+02:00",
    "2006-06-27T21:42:05+02:00",
    "2006-06-28T00:54:46+02:00",
    "2006-06-28T19:43:44+02:00",
    "2006-06-28T19:44:16+02:00",
    "2006-06-28T20:47:46+02:00",
    "2006-06-28T20:48:13+02:00",
    "2006-06-28T21:24:15+02:00",
    "2006-06-28T21:42:15+02:00",
    "2006-06-28T23:10:34+02:00",
    "2006-06-28T23:13:28+02:00",
    "2006-06-29T00:32:41+02:00",
    "2006-06-29T00:51:33+02:00",
    "2006-06-29T01:13:58+02:00",
    "2006-06-29T02:03:04+02:00",
    "2006-06-29T02:23:23+02:00",
    "2006-06-29T02:51:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument cannot be null",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3358"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3268"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:435"
        },
        {
          "method": "org.eclipse.swt.widgets.List.setSelection",
          "source": "List.java:1335"
        },
        {
          "method": "org.eclipse.mylar.internal.bugzilla.ui.search.BugzillaSearchPage.restoreWidgetValues",
          "source": "BugzillaSearchPage.java:1675"
        },
        {
          "method": "org.eclipse.mylar.internal.bugzilla.ui.search.BugzillaSearchPage.setVisible",
          "source": "BugzillaSearchPage.java:973"
        },
        {
          "method": "org.eclipse.search.internal.ui.SearchDialog.turnToPage",
          "source": "SearchDialog.java:526"
        },
        {
          "method": "org.eclipse.search.internal.ui.SearchDialog.access$1",
          "source": "SearchDialog.java:500"
        },
        {
          "method": "org.eclipse.search.internal.ui.SearchDialog$7.widgetSelected",
          "source": "SearchDialog.java:408"
        }
      ],
      "number": 0,
      "commentIndex": 11,
      "bugId": "142891",
      "date": "2006-06-28T00:54:46+02:00",
      "product": "Mylyn",
      "component": "Bugzilla",
      "severity": "enhancement"
    }
  ],
  "groupId": "142891",
  "bugId": "142891",
  "date": "2006-05-20T16:36:58+02:00",
  "product": "Mylyn",
  "component": "Bugzilla",
  "severity": "enhancement"
}