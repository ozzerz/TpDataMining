{
  "comments": [
    "I base on the GEF Shape sample and create a graphical editor where a Text editpart can be placed on the editor.  When this editpart is double-clicked, it enters the text edit mode where it uses the GEF DirectEditManager to show a CellEditor.  A Swing JTextPane is placed inside this CellEditor using SWT_AWT bridge for text editing.  I also create a TableView and it can DND item from this SWT TableView to the Swing JTextPane using TextTransfer.  When ESC is pressed on the JTextPane, the DirectEditManager#bringDown will be called to dispose the CellEditor to exit edit mode.\n\nOn Windows, everything works fine.  But on SUSE Linux (GTK), after DND the text and exit edit mode, DND again or reentering the edit mode may crashes the Eclipse with the following error:\n\nThe program \u0027Eclipse\u0027 received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was \u0027BadWindow (invalid Window parameter)\u0027.\n  (Details: serial 1913 error_code 3 request_code 40 minor_code 0)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the --sync command line\n   option to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\n\nIt occurs only if I DND the text from the TableView to the JTextPane and exit the edit mode.  If I enter the edit mode, type text and then exit edit mode without the DND, it does not crash.\n\nI turn those SWT\u0027s debug flag, but it displays nothing.  It once shows the \n\nThread [AWT-XAWT] (Suspended (exception StackOverflowError))\n\tXErrorEvent.\u003cinit\u003e(long) line: 18\n\tXToolkit.GlobalErrorHandler(long, long) line: 137\n\tXlibWrapper.CallErrorHandler(long, long, long) line: not available [native method]\n\tXToolkit.SAVED_ERROR_HANDLER(long, XErrorEvent) line: 131\n\tXToolkit.GlobalErrorHandler(long, long) line: 142\n\tXlibWrapper.CallErrorHandler(long, long, long) line: not available [native method]\n\tXToolkit.SAVED_ERROR_HANDLER(long, XErrorEvent) line: 131\n\tXToolkit.GlobalErrorHandler(long, long) line: 142\n\tXlibWrapper.CallErrorHandler(long, long, long) line: not available [native method]\n\tXToolkit.SAVED_ERROR_HANDLER(long, XErrorEvent) line: 131\n\tXToolkit.GlobalErrorHandler(long, long) line: 142\n\tXlibWrapper.CallErrorHandler(long, long, long) line: not available [native method]\n\tXToolkit.SAVED_ERROR_HANDLER(long, XErrorEvent) line: 131\n\tXToolkit.GlobalErrorHandler(long, long) line: 142\n\tXlibWrapper.CallErrorHandler(long, long, long) line: not available [native method]\n\tXToolkit.SAVED_ERROR_HANDLER(long, XErrorEvent) line: 131\n\tXToolkit.GlobalErrorHandler(long, long) line: 142\n\tXlibWrapper.CallErrorHandler(long, long, long) line: not available [native method]\n\tXToolkit.SAVED_ERROR_HANDLER(long, XErrorEvent) line: 131\n\nI am not sure if it is related to https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d74095 or https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d110163.\n\nIt also happens once I get the NPE:\n\njava.lang.NullPointerException\n\tat javax.swing.plaf.basic.BasicTextUI$TextDropTargetListener.updateInsertionLocation(BasicTextUI.java:2124)\n\tat javax.swing.plaf.basic.BasicDropTargetListener.dragOver(BasicDropTargetListener.java:233)\n\tat javax.swing.TransferHandler$SwingDropTarget.dragOver(TransferHandler.java:590)\n\tat sun.awt.dnd.SunDropTargetContextPeer.processMotionMessage(SunDropTargetContextPeer.java:439)\n\tat sun.awt.dnd.SunDropTargetContextPeer.access$600(SunDropTargetContextPeer.java:53)\n\tat sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchMotionEvent(SunDropTargetContextPeer.java:784)\n\tat sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchEvent(SunDropTargetContextPeer.java:730)\n\tat sun.awt.dnd.SunDropTargetEvent.dispatch(SunDropTargetEvent.java:29)\n\tat java.awt.Component.dispatchEventImpl(Component.java:3826)\n\tat java.awt.Container.dispatchEventImpl(Container.java:2024)\n\tat java.awt.Component.dispatchEvent(Component.java:3803)\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4212)\n\tat java.awt.LightweightDispatcher.processDropTargetEvent(Container.java:3963)\n\tat java.awt.LightweightDispatcher.dispatchEvent(Container.java:3817)\n\tat java.awt.Container.dispatchEventImpl(Container.java:2010)\n\tat java.awt.Window.dispatchEventImpl(Window.java:1774)\n\tat java.awt.Component.dispatchEvent(Component.java:3803)\n\tat java.awt.EventQueue.dispatchEvent(EventQueue.java:463)\n\tat java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:242)\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:163)\n\tat java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:157)\n\tat java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:149)\n\tat java.awt.EventDispatchThread.run(EventDispatchThread.java:110)\n\nI am using SUSE LINUX Enterprise Server 9 (i586), Eclipse 3.2M6, jdk1.5.0_05.",
    "Created an attachment (id\u003d41954)\nSample plugin to show the bugs\n\nThe attached plugin shows the bug.  You have to create a new file with extension .dndtext (e.g. mytext.dndtext).  Double click on it to open the Graphical Editor I create.  Open the Show View dialog, double-click on the the Sample View in the Sample Category. This Sample View contains the TableView where there are 3 items \"One\", \"Two\" and \"Three\".\n\nDo the following steps to reproduce the bug:\n1) In the Graphical editor, open the Palette view and click on the Text item, move the mouse on the editor area, click and drag to create the text element.  2) While this text element is selected, double click on it to enter the edit mode.  Click on the JTextPane, you can see the caret blinking.\n3) Drag one of the items on the Sample View and drop to the JTextPane, the text will be inserted.  Click on the JTextPane again to get the focus.  Press ESC to exit the edit mode\n4) Drag the item on the Sample View again and move around OR Enter the text edit mode again and drag the item on it.  \n\nYou should see the crashing.  If not, repeat the steps 1-4 again for several times.",
    "Looks like a problem in the JDK but let\u0027s investigate it on our side first.",
    "Looks like a problem in the JDK but let\u0027s investigate it on our side first.",
    "I am able to recreate it.",
    "Ok, after some supreme hacking way down deep in SWT to get the DEBUG flag to work and to make sure that the SWT handlers were called rather than the GTK or AWT/Swing ones, here is the result:\n\norg.eclipse.swt.SWTError: Unspecified error\n\tat org.eclipse.swt.graphics.Device.XErrorProc(Device.java:821)\n\tat sun.awt.X11.XlibWrapper.XTranslateCoordinates(Native Method)\n\tat sun.awt.X11.XTranslateCoordinates.execute(XTranslateCoordinates.java:45)\n\tat sun.awt.X11.XDropTargetRegistry$EmbeddedDropSiteEntry.getSite(XDropTargetRegistry.java:136)\n\tat sun.awt.X11.XDropTargetRegistry.getEmbeddedDropSite(XDropTargetRegistry.java:401)\n\tat sun.awt.X11.XDnDDropTargetProtocol.processXdndPosition(XDnDDropTargetProtocol.java:486)\n\tat sun.awt.X11.XDnDDropTargetProtocol.processClientMessageImpl(XDnDDropTargetProtocol.java:612)\n\tat sun.awt.X11.XDropTargetProtocol.processClientMessage(XDropTargetProtocol.java:62)\n\tat sun.awt.X11.XDropTargetEventProcessor.doProcessEvent(XDropTargetEventProcessor.java:62)\n\tat sun.awt.X11.XDropTargetEventProcessor.processEvent(XDropTargetEventProcessor.java:106)\n\tat sun.awt.X11.XToolkit.run(XToolkit.java:468)\n\tat sun.awt.X11.XToolkit.run(XToolkit.java:438)\n\tat java.lang.Thread.run(Thread.java:595)\nThe program \u0027SWT\u0027 received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was \u0027BadWindow (invalid Window parameter)\u0027.\n  (Details: serial 3212 error_code 3 request_code 40 minor_code 0)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the --sync command line\n   option to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)",
    "To get this output, I had to hack SWT such that the SWT handlers were installed before and after every event was dispatch and I had to make sure that the AWT/Swing handlers were installed before SWT by touching AWT/Swing before the first Display was created.",
    "Oleg, this looks like a problem somewhere in the drag and drop code of AWT?  Do you agree?",
    "Steve,\n\nwe do expect to get BadWindow in the code you pointed, so we register\nour own handler to suppress this error.  So, this shouldn\u0027t be the cause\nof the problem.\n\nBTW can someone provide standalong application which will reproduce the problem\n(it is too heavyweight for me to run Eclipse with the plugin. because I need to download Exclipse first :)\n\nOleg.",
    "You expect to get a BadWindow from XTranslateCoordinates()?  Seems wierd to me.  Normally, people are forced to patch X errors around XSetInputFocus() because the X window must be viewable when it is called.  In any case, are you sure that you are stopping X error around this call?  Do you expect to stop all X errors or just this one?\n\nI would prefer a simple example too.  Is it possible that the default handler is being reinstalled by GTKbehind your back?  I hacked SWT never to install any handlers and the problem happened as soon as you double click to bring up the AWT/Swing control.",
    "\u003e You expect to get a BadWindow from XTranslateCoordinates()?  Seems wierd to me.\n\nWell, it is cheaper, than check if all params are valid.\n\n\u003e Normally, people are forced to patch X errors around XSetInputFocus() because\n\u003e the X window must be viewable when it is called.  In any case, are you sure\n\u003e that you are stopping X error around this call?  Do you expect to stop all X\n\u003e errors or just this one?\n\nwe use the following code:\n\nXToolkit.WITH_XERROR_HANDLER(XToolkit.IgnoreBadWindowHandler);\nint status \u003d XlibWrapper.XGetWindowAttributes(XToolkit.getDisplay(), window, wattr.pData);\nXToolkit.RESTORE_XERROR_HANDLER();\n\nIt suppres only BadWindow error (I hope it really suppress it :)\nLet me know if you know better way to suppres XErrors.\n\n\u003e I would prefer a simple example too.  Is it possible that the default handler\n\u003e is being reinstalled by GTK behind your back?\n\nWell it is possible is someone ask GTK to reinstall it, I do not think GTK has \nAI to do this w/i requests :)\n                       ",
    "Not sure how to proceed.  We can\u0027t fix this for 3.2.1 (or 3.3).  There is a BadWindow error coming from sun.awt.X11.XlibWrapper.XTranslateCoordinates().  We can\u0027t patch this code to ignore X errors.  It\u0027s part of the JDK.\n\nOleg?",
    "I\u0027ve reread the report and I have a question: why Eclipse exists as soon as it \nreceives XError?  Based on my experience with XErrors sometimes it is very hard\nto write a program which will not cause any XErrors, why eclipse consider them\nas critical problem?",
    "By default, SWT does the default.  If X thinks they are critical, then we do what X does.  Generally, we want to see these warnings during development, just like you do.\n\nReading the bug report closely, it looks like somehow the GTK error handles are installed and they are exiting (see bug 110163).\n\nThere is an API, Display.setWarnings() that can be used to turn this off for an application.  I\u0027m pretty sure this won\u0027t help because the exit() is comming from GTK.",
    "Well, since almost anyone may add XErrorHandler and exit upon receiveing some\nXError, we ned to have XError free application.\nNot sure about others, but it have never been a target for AWT.\nSO, we could consider this change (and, perhaps, we implement this at some point).\nBut it may take a long period of time (and perhaps it will not be done at all :(\n\nAnyway, I\u0027m going to file bug against this and will publish its number here so\nanyone who is interested in such change could vote for it.",
    "Ok, Sun\u0027s bug id is 6461488 (should be visible on bugparade in a few days)",
    "This problem also happens with IBM\u0027s J9 JVM.  The error message is similar except serial is 2075 instead of 1913.\n\nJVM version:\nJ9VM - 20060802_07338_lHdSMR\nJIT - 20060728_1808_r8\nGC - 20060724_AA)\nJCL - 20060803\n\nRunning under SUSE Enterprise Linux 9 SP3.",
    "With regard to comment 16, I don\u0027t think this is surprising since this is not a VM issue but is an AWT implementation issue.  It is logically a class library issue although the code in question is probably in the \u0027C\u0027 implementation layer of AWT.  I do not believe IBM replaces that implementation when it creates IBM JDKs and JREs.\n\nSteve N and Oleg, do I basically have this correct?\n",
    "yep.",
    "Steve N, can you or someone on your team help an eclipse based product figure out a way to mitigate or work around the impact of this issue (adding their own XERROR_HANDLER, validating parms to X calls more throughly to avoid BadWindow erros, etc...)?  The result of this bug is a crash with loss of application data.  Very nasty...",
    "Ok, I\u0027m going to see whether the code in https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d110163#c65 helps.  Right now, I can\u0027t run the !@#$!@#$ plugin anymore to test it.  Stand by.",
    "I can confirm that the event queue hack does not fix the problem (I should have seen that right away from the stack trace that the GTK error trapping push/pop code wouldn\u0027t run).",
    "\n\n*** This bug has been marked as a duplicate of 110163 ***"
  ],
  "commentCreationDates": [
    "2006-05-18T23:24:46+02:00",
    "2006-05-18T23:51:48+02:00",
    "2006-06-14T18:38:28+02:00",
    "2006-06-14T18:48:01+02:00",
    "2006-06-14T19:19:35+02:00",
    "2006-06-15T19:15:07+02:00",
    "2006-06-15T22:44:51+02:00",
    "2006-06-15T22:48:26+02:00",
    "2006-06-16T15:12:46+02:00",
    "2006-06-16T15:30:54+02:00",
    "2006-06-16T16:09:29+02:00",
    "2006-08-16T18:31:55+02:00",
    "2006-08-17T22:08:31+02:00",
    "2006-08-18T00:48:19+02:00",
    "2006-08-18T06:45:07+02:00",
    "2006-08-18T09:46:45+02:00",
    "2006-08-23T20:05:53+02:00",
    "2006-08-28T20:30:09+02:00",
    "2006-08-29T10:50:43+02:00",
    "2006-08-29T14:36:37+02:00",
    "2006-08-29T18:20:38+02:00",
    "2006-08-29T19:11:28+02:00",
    "2006-08-29T21:16:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "javax.swing.plaf.basic.BasicTextUI$TextDropTargetListener.updateInsertionLocation",
          "source": "BasicTextUI.java:2124"
        },
        {
          "method": "javax.swing.plaf.basic.BasicDropTargetListener.dragOver",
          "source": "BasicDropTargetListener.java:233"
        },
        {
          "method": "javax.swing.TransferHandler$SwingDropTarget.dragOver",
          "source": "TransferHandler.java:590"
        },
        {
          "method": "sun.awt.dnd.SunDropTargetContextPeer.processMotionMessage",
          "source": "SunDropTargetContextPeer.java:439"
        },
        {
          "method": "sun.awt.dnd.SunDropTargetContextPeer.access$600",
          "source": "SunDropTargetContextPeer.java:53"
        },
        {
          "method": "sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchMotionEvent",
          "source": "SunDropTargetContextPeer.java:784"
        },
        {
          "method": "sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchEvent",
          "source": "SunDropTargetContextPeer.java:730"
        },
        {
          "method": "sun.awt.dnd.SunDropTargetEvent.dispatch",
          "source": "SunDropTargetEvent.java:29"
        },
        {
          "method": "java.awt.Component.dispatchEventImpl",
          "source": "Component.java:3826"
        },
        {
          "method": "java.awt.Container.dispatchEventImpl",
          "source": "Container.java:2024"
        },
        {
          "method": "java.awt.Component.dispatchEvent",
          "source": "Component.java:3803"
        },
        {
          "method": "java.awt.LightweightDispatcher.retargetMouseEvent",
          "source": "Container.java:4212"
        },
        {
          "method": "java.awt.LightweightDispatcher.processDropTargetEvent",
          "source": "Container.java:3963"
        },
        {
          "method": "java.awt.LightweightDispatcher.dispatchEvent",
          "source": "Container.java:3817"
        },
        {
          "method": "java.awt.Container.dispatchEventImpl",
          "source": "Container.java:2010"
        },
        {
          "method": "java.awt.Window.dispatchEventImpl",
          "source": "Window.java:1774"
        },
        {
          "method": "java.awt.Component.dispatchEvent",
          "source": "Component.java:3803"
        },
        {
          "method": "java.awt.EventQueue.dispatchEvent",
          "source": "EventQueue.java:463"
        },
        {
          "method": "java.awt.EventDispatchThread.pumpOneEventForHierarchy",
          "source": "EventDispatchThread.java:242"
        },
        {
          "method": "java.awt.EventDispatchThread.pumpEventsForHierarchy",
          "source": "EventDispatchThread.java:163"
        },
        {
          "method": "java.awt.EventDispatchThread.pumpEvents",
          "source": "EventDispatchThread.java:157"
        },
        {
          "method": "java.awt.EventDispatchThread.pumpEvents",
          "source": "EventDispatchThread.java:149"
        },
        {
          "method": "java.awt.EventDispatchThread.run",
          "source": "EventDispatchThread.java:110"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "142644",
      "duplicateId": "110163",
      "date": "2006-05-18T23:24:46+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.swt.SWTError",
      "message": "Unspecified error",
      "elements": [
        {
          "method": "org.eclipse.swt.graphics.Device.XErrorProc",
          "source": "Device.java:821"
        },
        {
          "method": "sun.awt.X11.XlibWrapper.XTranslateCoordinates",
          "source": "Native Method"
        },
        {
          "method": "sun.awt.X11.XTranslateCoordinates.execute",
          "source": "XTranslateCoordinates.java:45"
        },
        {
          "method": "sun.awt.X11.XDropTargetRegistry$EmbeddedDropSiteEntry.getSite",
          "source": "XDropTargetRegistry.java:136"
        },
        {
          "method": "sun.awt.X11.XDropTargetRegistry.getEmbeddedDropSite",
          "source": "XDropTargetRegistry.java:401"
        },
        {
          "method": "sun.awt.X11.XDnDDropTargetProtocol.processXdndPosition",
          "source": "XDnDDropTargetProtocol.java:486"
        },
        {
          "method": "sun.awt.X11.XDnDDropTargetProtocol.processClientMessageImpl",
          "source": "XDnDDropTargetProtocol.java:612"
        },
        {
          "method": "sun.awt.X11.XDropTargetProtocol.processClientMessage",
          "source": "XDropTargetProtocol.java:62"
        },
        {
          "method": "sun.awt.X11.XDropTargetEventProcessor.doProcessEvent",
          "source": "XDropTargetEventProcessor.java:62"
        },
        {
          "method": "sun.awt.X11.XDropTargetEventProcessor.processEvent",
          "source": "XDropTargetEventProcessor.java:106"
        },
        {
          "method": "sun.awt.X11.XToolkit.run",
          "source": "XToolkit.java:468"
        },
        {
          "method": "sun.awt.X11.XToolkit.run",
          "source": "XToolkit.java:438"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "142644",
      "duplicateId": "110163",
      "date": "2006-06-15T19:15:07+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "110163",
  "bugId": "142644",
  "duplicateId": "110163",
  "date": "2006-05-18T23:24:46+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}