{
  "comments": [
    "When evaluating expression:\n  1.0 \u003c null\nthe following exception raises:\njava.lang.NullPointerException\n\tat java.lang.Double.compareTo(Double.java:876)\n\tat java.lang.Double.compareTo(Double.java:32)\n\tat org.eclipse.ocl.internal.evaluation.EvaluationVisitorImpl.visitOperationCallExp(EvaluationVisitorImpl.java:1067)\n\n\nWhen evaluating:\n  1.0 \u003c OclInvalid\nthe following exception raises:\njava.lang.ClassCastException: org.eclipse.emf.ecore.impl.DynamicEObjectImpl\nat java.lang.Double.compareTo(Double.java:32)\nat org.eclipse.ocl.internal.evaluation.EvaluationVisitorImpl.visitOperationCallExp(EvaluationVisitorImpl.java:1067)",
    "Yes, both of these should result in OclInvalid.  However, I would have expected that the run-time exception causes the entire evaluation to return OclInvalid anyway.  Does it not?",
    "Of course it does. However normal evaluation resulting in OclInvalid is preferable.",
    "Also consider all other operations on Real and Integer (and String) with OclInvalid. Two of them (namely \u0027\u003d\u0027 and \u0027\u003c\u003e\u0027) results in Boolean while the rest results in OclInvalid. \nSo at the time being:\n  1 + OclInvalid     -\u003e  OclInvaild\n  1 - OclInvalid     -\u003e  OclInvaild\n  1 * OclInvalid     -\u003e  OclInvaild\n  1 / OclInvalid     -\u003e  OclInvaild\n  1.mod(OclInvalid)  -\u003e  OclInvaild\n  1.div(OclInvalid)  -\u003e  OclInvaild\n  1.max(OclInvalid)  -\u003e  OclInvaild\n  1.min(OclInvalid)  -\u003e  OclInvaild\n  1 \u003c OclInvalid     -\u003e  OclInvaild\n  1 \u003e OclInvalid     -\u003e  OclInvaild\n  1 \u003d OclInvalid    -\u003e  Boolean\n  1 \u003c\u003d OclInvalid    -\u003e  OclInvaild\n  1 \u003e\u003d OclInvalid    -\u003e  OclInvaild\n  1 \u003c\u003e OclInvalid   -\u003e  Boolean\n\nI think execution of all operations should result in OclInvalid.",
    "(in reply to comment #2)\nYes, creating and throwing exceptions doesn\u0027t perform very well.\n\n(in reply to comment #3)\nWell, all of these expressions should result in OclInvalid except for the two that result in a Boolean type, which value should be false.\n\nReal inherits \"\u003d (OclAny)\" and \"\u003c\u003e (OclAny)\" operations from the OclAny type, thus equality tests with any object including the special OclInvalid token (which conforms to OclAny) are permitted; only collections and tuples are excluded.  Note that \"1 \u003d OclInvalid\" is equivalent to \"1.oclIsInvalid()\"",
    "Should fix this in the first Europa maintenance release.",
    "Moving to 1.2 release; low severity."
  ],
  "commentCreationDates": [
    "2007-06-05T15:33:20+02:00",
    "2007-06-05T15:47:19+02:00",
    "2007-06-05T16:11:07+02:00",
    "2007-06-05T16:26:38+02:00",
    "2007-06-05T17:00:27+02:00",
    "2007-06-15T19:53:55+02:00",
    "2007-09-20T21:26:49+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.lang.Double.compareTo",
          "source": "Double.java:876"
        },
        {
          "method": "java.lang.Double.compareTo",
          "source": "Double.java:32"
        },
        {
          "method": "org.eclipse.ocl.internal.evaluation.EvaluationVisitorImpl.visitOperationCallExp",
          "source": "EvaluationVisitorImpl.java:1067"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "191027",
      "date": "2007-06-05T15:33:20+02:00",
      "product": "MDT",
      "component": "OCL",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.emf.ecore.impl.DynamicEObjectImpl",
      "elements": [
        {
          "method": "java.lang.Double.compareTo",
          "source": "Double.java:32"
        },
        {
          "method": "org.eclipse.ocl.internal.evaluation.EvaluationVisitorImpl.visitOperationCallExp",
          "source": "EvaluationVisitorImpl.java:1067"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "191027",
      "date": "2007-06-05T15:33:20+02:00",
      "product": "MDT",
      "component": "OCL",
      "severity": "normal"
    }
  ],
  "groupId": "191027",
  "bugId": "191027",
  "date": "2007-06-05T15:33:20+02:00",
  "product": "MDT",
  "component": "OCL",
  "severity": "normal"
}