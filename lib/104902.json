{
  "comments": [
    "3.1 on Macintel:\nPassword fields don\u0027t show echo characters.\n\nIt seems that the UniChar passed to OS.TXNEchoMode is interpreted as a 2-byte string!\nOn big endian systems (PPC) the default value of \u0027\\245\u0027 results in the string \u0027\\245\u0027 \u0027\\0\u0027 which works fine.\nOn small endian systems (Intel) the default value results in the string \u0027\\0\u0027 \u0027\\245\u0027\nSince the first character \u0027\\0\u0027 is treated as a string terminator, no echo character is shown.\n\nThe following experiment proves this: if I use this declaration:\n\tstatic final char PASSWORD \u003d (\u0027a\u0027 \u003c\u003c 8) + \u0027b\u0027;\nthen the first echo character will be \u0027b\u0027 and the second \u0027a\u0027\n\nThe workaround for this problem is the following declaration:\n\tstatic final char PASSWORD \u003d (\u0027\\245\u0027 \u003c\u003c 8) + \u0027\\245\u0027;",
    "Created an attachment (id\u003d25207)\npatch for Text.java\n",
    "Wow.  Are we sure it\u0027s not a problem in our PI?",
    "Fixed \u003e 20060213.\n\nNeed to pass kTextEncodingMacUnicode instead of kTextEncodingMacRoman",
    "Hi,\nI encounter an issue when trying to setEchochar on a text created by a StringFieldEditor in a preference Panel.\nCode snippet for editor creation\n\nStringFieldEditor passwordFieldEditor \u003d new StringFieldEditor(PreferenceConstants.P_PASSWORD, Messages.getString(\"preference.existpassword\"), groupExist); //$NON-NLS-1$\nText text \u003d passwordFieldEditor.getTextControl(groupExist);\ntext.setEchoChar(\u0027*\u0027);\n\nEvery go smoothly the first time and echo char are well displayed. But when i open a second time the preference panel, (with this time not empty preference value) i have the following exception:\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: 6\nat java.lang.String.getChars(String.java:484)\nat org.eclipse.swt.widgets.Text.getEditText(Text.java:1062)\nat org.eclipse.swt.widgets.Text.getText(Text.java:1008)\nat org.eclipse.jface.preference.StringFieldEditor.getStringValue(StringFieldEditor.java:301)\n\nI\u0027m quite confident with my code since i do the same things with the login field and it work. The only differrence is the echoChar.\n\nIs there any workaround to change echochar on a FieldEditor",
    "What version of SWT are you using?\n3.2 or 3.1.2?",
    "3.2RC1\n(In reply to comment #5)\n\u003e What version of SWT are you using?\n\u003e 3.2 or 3.1.2?\n\u003e ",
    "Mathias, your problem is different from this one. Please open a new bug report for it.",
    "(In reply to comment #7)\n\u003e  Please open a new bug report for it.\n\nOk, new bug #137236"
  ],
  "commentCreationDates": [
    "2005-07-23T00:28:34+02:00",
    "2005-07-23T00:31:26+02:00",
    "2005-07-28T22:13:40+02:00",
    "2006-02-13T19:54:33+01:00",
    "2006-04-18T13:27:42+02:00",
    "2006-04-18T14:32:59+02:00",
    "2006-04-18T15:02:17+02:00",
    "2006-04-18T17:02:39+02:00",
    "2006-04-18T17:19:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: 6",
      "elements": [
        {
          "method": "java.lang.String.getChars",
          "source": "String.java:484"
        },
        {
          "method": "org.eclipse.swt.widgets.Text.getEditText",
          "source": "Text.java:1062"
        },
        {
          "method": "org.eclipse.swt.widgets.Text.getText",
          "source": "Text.java:1008"
        },
        {
          "method": "org.eclipse.jface.preference.StringFieldEditor.getStringValue",
          "source": "StringFieldEditor.java:301"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "104902",
      "date": "2006-04-18T13:27:42+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "104902",
  "bugId": "104902",
  "date": "2005-07-23T00:28:34+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}