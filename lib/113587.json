{
  "comments": [
    "LTW fails when weaving an external jar with the above error.\n\nAttached is a test case containing all required dependencies.\nUnfortunately I cannot clean up any 3rd party libs, since the bug is only\nreproducible using the jars in question (LTW on my own classes works just fine).\n\nSimply run ant on the supplied build file (using JDK 1.5) to see the exception.",
    "Created an attachment (id\u003d28709)\nTest case\n\nNOTE:\nDue to attachment size limit you need to add the following to the lib dir:\nlog4j-1.2.8.jar\nxerces-2.6.2.jar\nconcurrent-1.3.4.jar\naspectjrt.jar",
    "Due to attachment size limit you need to add the following to the lib dir:\nlog4j-1.2.8.jar\nxerces-2.6.2.jar\nconcurrent-1.3.4.jar\naspectjrt.jar",
    "may be due to include use (aspect does not go in weaver type munging)",
    "yes it is\nproblem: if goes within weaver, then may apply other aspects to the aspect\nitself, and we don\u0027t want that.\n\nPerhaps need to detect that (mustNotWeaveButIsAspect) and then force the munging\nthru a new BcelPerClauseAspectAdder\n",
    "done\nIClassFileProvider.isApplyAtAspectJMungersOnly()\nand some custom logic in BcelWeaver\n\ntry to get a next published build and give it a try\nas a workaround, don\u0027t use an \u003cinclude directive that contains your aspect, or\ncompile the aspect with AJC and not javaC.\n\n",
    "Created an attachment (id\u003d61771)\ntest case that throw exception\n\njust execute run.sh or run.bat",
    "With annotation i have same error with 1.5.3 version, NoSuchMethodError aspectOf(). I have join script to compile and run in test case. \n\nthe result is:\n\nException in thread \"main\" java.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at Test.main(Test.java:40)\nCaused by: java.lang.NoSuchMethodError: Test$MyTestAspect.aspectOf()LTest$MyTestAspect;\n        at toto.Toto.getToto(Toto.java:5)\n        ... 5 more\n"
  ],
  "commentCreationDates": [
    "2005-10-24T21:59:45+02:00",
    "2005-10-24T22:17:06+02:00",
    "2005-10-24T22:18:05+02:00",
    "2005-10-25T15:13:07+02:00",
    "2005-10-25T15:56:20+02:00",
    "2005-10-25T17:34:44+02:00",
    "2007-03-23T00:59:51+01:00",
    "2007-03-23T01:03:50+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:597"
        },
        {
          "method": "Test.main",
          "source": "Test.java:40"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.NoSuchMethodError",
        "message": "Test$MyTestAspect.aspectOf()LTest$MyTestAspect;",
        "elements": [
          {
            "method": "toto.Toto.getToto",
            "source": "Toto.java:5"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 7,
      "bugId": "113587",
      "date": "2007-03-23T01:03:50+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "113587",
  "bugId": "113587",
  "date": "2005-10-24T21:59:45+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}