{
  "comments": [
    "When starting a workbench which had a project created using EFS, I notice that the project fails to open. This is the stacktrace I see in my debug environment:\n\njava.lang.IllegalStateException: Workbench has not been created yet.\n\tat org.eclipse.ui.PlatformUI.getWorkbench(PlatformUI.java:92)\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.getShell(StandardCredentialsProvider.java:332)\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.access$0(StandardCredentialsProvider.java:331)\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider$PromptForCredentials.run(StandardCredentialsProvider.java:69)\n\tat org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)\n\tat org.eclipse.swt.widgets.Display.syncExec(Display.java:3880)\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.promptForCredentials(StandardCredentialsProvider.java:356)\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.acquireCredentials(StandardCredentialsProvider.java:200)\n\tat org.eclipse.rse.core.subsystems.AuthenticatingConnectorService.acquireCredentials(AuthenticatingConnectorService.java:176)\n\tat org.eclipse.rse.internal.eclipse.filesystem.RSEFileSystem.getStore(RSEFileSystem.java:136)\n\tat org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore(InternalFileSystemCore.java:107)\n\tat org.eclipse.core.filesystem.EFS.getStore(EFS.java:294)\n\tat org.eclipse.core.internal.localstore.FileStoreRoot.toLocalPath(FileStoreRoot.java:124)\n\tat org.eclipse.core.internal.localstore.FileStoreRoot.\u003cinit\u003e(FileStoreRoot.java:57)\n\tat org.eclipse.core.internal.localstore.FileSystemResourceManager.setLocation(FileSystemResourceManager.java:810)\n\tat org.eclipse.core.internal.resources.Project.internalSetDescription(Project.java:660)\n\tat org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:796)\n\tat org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:759)\n\tat org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:650)\n\tat org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1313)\n\tat org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1889)\n\tat org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1659)\n\tat org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:363)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:327)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)\n\tat org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:415)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:350)\n\tat org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:415)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:379)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:367)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClassInternal(Unknown Source)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:522)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:147)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:170)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:339)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:283)\n\tat org.eclipse.core.launcher.Main.run(Main.java:984)\n\tat org.eclipse.core.launcher.Main.main(Main.java:959)",
    "Dave, I\u0027m assigning the bug to you. It might be better for the credential provider to not get the shell itself.",
    "StandardCredentialsProvider now gets its own shell rather than relying on the workbench. The shell is attached to the default display and is application modal.",
    "Kushal, back to you for testing.",
    "(In reply to comment #2)\n\u003e StandardCredentialsProvider now gets its own shell rather than relying on the\n\u003e workbench. The shell is attached to the default display and is application\n\u003e modal.\n\nWhat does this mean when a user has e.g. 4 connections open, the quits Eclipse and Restarts with \"restore system tree\" preference switched on.\n\nRSE will try to reconnect all 4 connections. Assuming that passwords have not been saved, would 4 modal dialogs pop up? - I\u0027ve heard rumors about severe issues with modal dialogs nested in other modal dialogs, due to the way how the event loop works. Perhaps this has been fixed but I\u0027m not sure. At any rate, it should be tested.\n",
    "Dave, that particular problem is fixed, but now I see an InterruptedException on restore. The stack trace is below.\n\nHere is what the code looks like (fs is file subsystem):\n\t\t\t\t\tfs.getConnectorService().acquireCredentials(false);\t\t\t\t\tfs.getConnectorService().connect(new NullProgressMonitor());\n\nException trace:\njava.lang.InterruptedException\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.promptForCredentials(StandardCredentialsProvider.java:359)\n\tat org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.acquireCredentials(StandardCredentialsProvider.java:200)\n\tat org.eclipse.rse.core.subsystems.AuthenticatingConnectorService.acquireCredentials(AuthenticatingConnectorService.java:176)\n\tat org.eclipse.rse.internal.eclipse.filesystem.RSEFileSystem.getStore(RSEFileSystem.java:136)\n\tat org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore(InternalFileSystemCore.java:107)\n\tat org.eclipse.core.filesystem.EFS.getStore(EFS.java:294)",
    "(In reply to comment #4)\n\u003e (In reply to comment #2)\n\u003e \u003e StandardCredentialsProvider now gets its own shell rather than relying on the\n\u003e \u003e workbench. The shell is attached to the default display and is application\n\u003e \u003e modal.\n\u003e \n\u003e What does this mean when a user has e.g. 4 connections open, the quits Eclipse\n\u003e and Restarts with \"restore system tree\" preference switched on.\n\u003e \n\u003e RSE will try to reconnect all 4 connections. Assuming that passwords have not\n\u003e been saved, would 4 modal dialogs pop up? - I\u0027ve heard rumors about severe\n\u003e issues with modal dialogs nested in other modal dialogs, due to the way how the\n\u003e event loop works. Perhaps this has been fixed but I\u0027m not sure. At any rate, it\n\u003e should be tested.\n\u003e \n\n\nYou\u0027re correct that it should be tested. However, it uncovers a bug in that only one of the open connections is reopened, so its impossible to test that scenario yet. I\u0027ve written 180313 to cover this.",
    "(In reply to comment #5)\n\u003e Dave, that particular problem is fixed, but now I see an InterruptedException\n\u003e on restore. The stack trace is below.\n\u003e \n\u003e Here is what the code looks like (fs is file subsystem):\n\u003e                                        \n\u003e fs.getConnectorService().acquireCredentials(false);                            \n\u003e         fs.getConnectorService().connect(new NullProgressMonitor());\n\u003e \n\u003e Exception trace:\n\u003e java.lang.InterruptedException\n\u003e         at\n\u003e org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.promptForCredentials(StandardCredentialsProvider.java:359)\n\u003e         at\n\u003e org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.acquireCredentials(StandardCredentialsProvider.java:200)\n\u003e         at\n\u003e org.eclipse.rse.core.subsystems.AuthenticatingConnectorService.acquireCredentials(AuthenticatingConnectorService.java:176)\n\u003e         at\n\u003e org.eclipse.rse.internal.eclipse.filesystem.RSEFileSystem.getStore(RSEFileSystem.java:136)\n\u003e         at\n\u003e org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore(InternalFileSystemCore.java:107)\n\u003e         at org.eclipse.core.filesystem.EFS.getStore(EFS.java:294)\n\u003e \n\n\nI cannot reproduce this. I\u0027m not sure how to create an EFS based project and this exception is either happening due to a cancel or some other condition. Can you provide more detail?",
    "I was able to reproduce a few times, but not recently. I am not sure what is causing this. I had multiple connections in RSE when I saw the problem. I haven\u0027t  seen the problem with a single connection. I\u0027ll update if I can reproduce consistently.",
    "I think that this problem comes from an incorrect implementation in RSEFileStore and RSEFileSystem. Javadoc of\n  IFileSystem#getStore() and\n  IFileStore#getChild()\nsays \"This is a handle-only method\". It is NOT expected to make any kind of connection to the remote side yet! But the stack trace in comment #0 shows, that the RSEFileSystem already tries to connect to the remote side. It should not yet do this, but only store the handle internally!\n\nOnly on methods like\n  fetchInfo()\n  delete()\n  openInputStream()\netc. may the file system wrapper access the remote side. These methods all throw a CoreException.\n\nI think that we should be able to keep the old implementation of the StandardCredentialsProvider, which threw an exception on connect when the Workbench was not yet intialized. In each of the methods mentioned, we could then wrap this exception in a CoreException and throw it to the caller. Doing so, we would practically deny access to any remote files during early startup, but be able to access them once the Workbench has come up.\n\nBecause of the problems found in bug 180313 (which I believe are regressions), I would vote for restoring the previous way how the StandardCredentialsProvider worked.",
    "(In reply to comment #9)\n\u003e I think that this problem comes from an incorrect implementation in\n\u003e RSEFileStore and RSEFileSystem. Javadoc of\n\u003e   IFileSystem#getStore() and\n\u003e   IFileStore#getChild()\n\u003e says \"This is a handle-only method\". It is NOT expected to make any kind of\n\u003e connection to the remote side yet! But the stack trace in comment #0 shows,\n\u003e that the RSEFileSystem already tries to connect to the remote side. It should\n\u003e not yet do this, but only store the handle internally!\n\u003e \n\u003e Only on methods like\n\u003e   fetchInfo()\n\u003e   delete()\n\u003e   openInputStream()\n\u003e etc. may the file system wrapper access the remote side. These methods all\n\u003e throw a CoreException.\n\u003e \n\u003e I think that we should be able to keep the old implementation of the\n\u003e StandardCredentialsProvider, which threw an exception on connect when the\n\u003e Workbench was not yet intialized. In each of the methods mentioned, we could\n\u003e then wrap this exception in a CoreException and throw it to the caller. Doing\n\u003e so, we would practically deny access to any remote files during early startup,\n\u003e but be able to access them once the Workbench has come up.\n\u003e \n\u003e Because of the problems found in bug 180313 (which I believe are regressions),\n\u003e I would vote for restoring the previous way how the StandardCredentialsProvider\n\u003e worked.\n\u003e \n\nI will use bug report 180313 to restore the previous StandardCredentialsProvider behavior. Kushal can make the suggested corrections under this bug.",
    "Ok changed as per comment. Now only return a handle on workbench startup instead of trying to connect. This means that an EFS project will be closed on workbench startup since we return a handle representing the project, which does not exist according to Eclipse. The user will have to right click on the project and select Open Project.",
    "Setting fixed since the original exception is no longer seen with using handles. Created new bug 181460 for the problem of having to manually open the project after startup."
  ],
  "commentCreationDates": [
    "2007-03-30T00:36:25+02:00",
    "2007-03-30T00:38:23+02:00",
    "2007-03-30T15:33:57+02:00",
    "2007-03-30T15:34:28+02:00",
    "2007-03-30T15:54:35+02:00",
    "2007-03-30T22:12:28+02:00",
    "2007-03-30T23:55:49+02:00",
    "2007-03-31T00:04:16+02:00",
    "2007-03-31T00:17:21+02:00",
    "2007-04-02T18:42:36+02:00",
    "2007-04-02T20:14:00+02:00",
    "2007-04-05T22:48:28+02:00",
    "2007-04-06T21:56:04+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Workbench has not been created yet.",
      "elements": [
        {
          "method": "org.eclipse.ui.PlatformUI.getWorkbench",
          "source": "PlatformUI.java:92"
        },
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.getShell",
          "source": "StandardCredentialsProvider.java:332"
        },
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.access$0",
          "source": "StandardCredentialsProvider.java:331"
        },
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider$PromptForCredentials.run",
          "source": "StandardCredentialsProvider.java:69"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.syncExec",
          "source": "Synchronizer.java:152"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.syncExec",
          "source": "Display.java:3880"
        },
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.promptForCredentials",
          "source": "StandardCredentialsProvider.java:356"
        },
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.acquireCredentials",
          "source": "StandardCredentialsProvider.java:200"
        },
        {
          "method": "org.eclipse.rse.core.subsystems.AuthenticatingConnectorService.acquireCredentials",
          "source": "AuthenticatingConnectorService.java:176"
        },
        {
          "method": "org.eclipse.rse.internal.eclipse.filesystem.RSEFileSystem.getStore",
          "source": "RSEFileSystem.java:136"
        },
        {
          "method": "org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore",
          "source": "InternalFileSystemCore.java:107"
        },
        {
          "method": "org.eclipse.core.filesystem.EFS.getStore",
          "source": "EFS.java:294"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileStoreRoot.toLocalPath",
          "source": "FileStoreRoot.java:124"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileStoreRoot.\u003cinit\u003e",
          "source": "FileStoreRoot.java:57"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.setLocation",
          "source": "FileSystemResourceManager.java:810"
        },
        {
          "method": "org.eclipse.core.internal.resources.Project.internalSetDescription",
          "source": "Project.java:660"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo",
          "source": "SaveManager.java:796"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo",
          "source": "SaveManager.java:759"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.restore",
          "source": "SaveManager.java:650"
        },
        {
          "method": "org.eclipse.core.internal.resources.SaveManager.startup",
          "source": "SaveManager.java:1313"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.startup",
          "source": "Workspace.java:1889"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.open",
          "source": "Workspace.java:1659"
        },
        {
          "method": "org.eclipse.core.resources.ResourcesPlugin.start",
          "source": "ResourcesPlugin.java:363"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
          "source": "BundleContextImpl.java:999"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "BundleContextImpl.java:993"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:974"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:327"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:260"
        },
        {
          "method": "org.eclipse.osgi.framework.util.SecureAction.start",
          "source": "SecureAction.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass",
          "source": "EclipseLazyStarter.java:111"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:415"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass",
          "source": "SingleSourcePackage.java:37"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "BundleLoader.java:415"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:379"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:367"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:522"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:147"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:104"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:74"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:354"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:170"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:339"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:283"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:984"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:959"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "180091",
      "date": "2007-03-30T00:36:25+02:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.InterruptedException",
      "elements": [
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.promptForCredentials",
          "source": "StandardCredentialsProvider.java:359"
        },
        {
          "method": "org.eclipse.rse.ui.subsystems.StandardCredentialsProvider.acquireCredentials",
          "source": "StandardCredentialsProvider.java:200"
        },
        {
          "method": "org.eclipse.rse.core.subsystems.AuthenticatingConnectorService.acquireCredentials",
          "source": "AuthenticatingConnectorService.java:176"
        },
        {
          "method": "org.eclipse.rse.internal.eclipse.filesystem.RSEFileSystem.getStore",
          "source": "RSEFileSystem.java:136"
        },
        {
          "method": "org.eclipse.core.internal.filesystem.InternalFileSystemCore.getStore",
          "source": "InternalFileSystemCore.java:107"
        },
        {
          "method": "org.eclipse.core.filesystem.EFS.getStore",
          "source": "EFS.java:294"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "180091",
      "date": "2007-03-30T22:12:28+02:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    }
  ],
  "groupId": "180091",
  "bugId": "180091",
  "date": "2007-03-30T00:36:25+02:00",
  "product": "Target Management",
  "component": "RSE",
  "severity": "normal"
}