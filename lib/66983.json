{
  "comments": [
    "RC2 on xp with sun\u0027s jre1.4.2\n\nI\u0027m not sure if this is a bug or just something that user\u0027s should not try.  \nHowever, I set my breakpoint condition to \"java.lang.Void.class\" and clicked \n\"when value of expression changes\" and got an exception which crashed my target \neclipse.  The target eclipse window is still open but is not repainting, the \nwindows task manager shows it as \"not responding\" (after hitting continue in my \nhost session).\n\nHere are the details from the error log:\n\n!ENTRY org.eclipse.jdt.debug 4 120 Jun 14, 2004 11:25:08.234\n!MESSAGE Exception processing async thread queue\n!SUBENTRY 1 org.eclipse.jdt.debug 4 120 Jun 14, 2004 11:25:08.234\n!MESSAGE Exception processing async thread queue\n!STACK 0\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Unknown Source)\n\tat java.util.Stack.pop(Unknown Source)\n\tat org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.\npop(Interpreter.java:89)\n\tat org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.\npop(Instruction.java:107)\n\tat org.eclipse.jdt.internal.debug.eval.ast.instructions.\nPushClassLiteralValue.execute(PushClassLiteralValue.java:28)\n\tat org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.\nexecute(Interpreter.java:50)\n\tat org.eclipse.jdt.internal.debug.eval.ast.engine.\nASTEvaluationEngine$1$EvaluationRunnable.run(ASTEvaluationEngine.java:317)\n\tat org.eclipse.jdt.internal.debug.core.model.JDIThread.\nrunEvaluation(JDIThread.java:659)\n\tat org.eclipse.jdt.internal.debug.eval.ast.engine.\nASTEvaluationEngine$EvalRunnable.run(ASTEvaluationEngine.java:351)\n\tat org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.\nrun(JDIThread.java:2516)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "It\u0027s a valid condition, not usually really usefull, but valid.\nIs it a reproducable problem ? it works without problem on linux-gtk, j9sc/sun142.",
    "After raising the bug I wasn\u0027t able to reproduce with that condition, but can \nreliably reproduce it with the slightly longer \"void.class.equals(Void.TYPE)\" (I \njust did it again to check).",
    "Can reproduce (comment #2). Luc, please investigate - marking as RC3 candidate.",
    "Ok, I can reproduce the problem.\nThe problem is when trying to evaluate an expression type \u0027\u003cprimitivetype\u003e.class\u0027. \n\nThe problem has always been there. It would be nice to fix it, but I don\u0027t think\nit\u0027s critical for 3.0.",
    "Agreed. Not critical. Deferred.",
    "re-open",
    "Created an attachment (id\u003d71514)\npatch\n\nAdds support for \u003cprimitive\u003e.class",
    "Applied patch",
    "Please verify, Curtis.",
    "Verified"
  ],
  "commentCreationDates": [
    "2004-06-14T17:32:42+02:00",
    "2004-06-14T20:21:10+02:00",
    "2004-06-14T20:26:18+02:00",
    "2004-06-15T16:45:02+02:00",
    "2004-06-15T23:23:00+02:00",
    "2004-06-15T23:32:50+02:00",
    "2007-06-15T22:19:45+02:00",
    "2007-06-15T22:20:32+02:00",
    "2007-06-19T17:50:54+02:00",
    "2007-06-19T17:51:10+02:00",
    "2007-06-19T18:57:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.EmptyStackException",
      "elements": [
        {
          "method": "java.util.Stack.peek",
          "source": "Unknown Source"
        },
        {
          "method": "java.util.Stack.pop",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.pop",
          "source": "Interpreter.java:89"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.instructions.Instruction.pop",
          "source": "Instruction.java:107"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.instructions.PushClassLiteralValue.execute",
          "source": "PushClassLiteralValue.java:28"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute",
          "source": "Interpreter.java:50"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1$EvaluationRunnable.run",
          "source": "ASTEvaluationEngine.java:317"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation",
          "source": "JDIThread.java:659"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable.run",
          "source": "ASTEvaluationEngine.java:351"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run",
          "source": "JDIThread.java:2516"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "66983",
      "date": "2004-06-14T17:32:42+02:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "66983",
  "bugId": "66983",
  "date": "2004-06-14T17:32:42+02:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "normal"
}