{
  "comments": [
    "First, I can\u0027t reproduce this in vanilla Eclipse base, but in our XML editor \n(for WSAD) being developed on top of M5. (found on 4/12 and 4/16 integration \nbuilds). Second, it seems to be a \"change in behavior\" from M4 which still \ndoesn\u0027t mean its your bug (may be ours that just didn\u0027t occur before), but I \nwanted to go ahead and file report, in case the scenerio or stack trace \nsuggests a way to reproduce and/or repair. \n\nThe scenerio is that we have our LineNumberRuler \"on\", and that text is deleted \nsuch that the ruler should \"changes widths\". For example, the end of file is at \nline 105, and user deleletes lines 90 to 103, so the new \"last line\" is only 2 \ndigits instead of 3 so we change the ruler size to be smaller ... the point \nbeing that we call composite.layout() if we\u0027ve noticed the width of the ruler \nshould change.\n\nUnder these condiditions, as the stack trace shows, StyledText.setCaretLocation \nis called, but with an with an \"old\" caret position that doesn\u0027t \"exist\" \nanymore in the text ... that is, its already been deleted, so a \nBadLocationException occurs. \n\nHas there been changes in M5 that might account for this change?\n\n\u003d \u003d \u003d\n\n\n\nnull  Original Error: org.eclipse.jface.text.BadLocationException\n\tat com.ibm.sed.editor.FlatModelToTextAdapter.getOffsetAtLine\n(FlatModelToTextAdapter.java:247)\n\tat org.eclipse.swt.custom.StyledText.setCaretLocation\n(StyledText.java:6031)\n\tat org.eclipse.swt.custom.StyledText.setVerticalScrollOffset\n(StyledText.java:6914)\n\tat org.eclipse.swt.custom.StyledText.claimBottomFreeSpace\n(StyledText.java:1647)\n\tat org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:4714)\n\tat org.eclipse.swt.custom.StyledText$14.handleEvent\n(StyledText.java:4332)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)\n\tat org.eclipse.swt.widgets.Control.WM_SIZE(Control.java:3745)\n\tat org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java:302)\n\tat org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:695)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:2701)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:1799)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1206)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:2713)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:1799)\n\tat org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)\n\tat org.eclipse.swt.widgets.Composite.layout(Composite.java:296)\n\tat org.eclipse.swt.widgets.Composite.layout(Composite.java:265)\n\tat com.ibm.sed.editor.LineNumberRulerImpl.updateWidth\n(LineNumberRulerImpl.java:427)\n\tat com.ibm.sed.editor.LineNumberRulerImpl.doPaint\n(LineNumberRulerImpl.java:214)\n\tat com.ibm.sed.editor.LineNumberRulerImpl.doubleBufferPaint\n(LineNumberRulerImpl.java:247)\n\tat com.ibm.sed.editor.LineNumberRulerImpl.redraw\n(LineNumberRulerImpl.java:355)\n\tat com.ibm.sed.editor.StructuredTextLineNumberRulerImpl.redraw\n(StructuredTextLineNumberRulerImpl.java:26)\n\tat com.ibm.sed.editor.LineNumberRulerImpl$InternalListener.textChanged\n(LineNumberRulerImpl.java:49)\n\tat org.eclipse.jface.text.TextViewer.updateTextListeners\n(TextViewer.java:1397)\n\tat com.ibm.sed.editor.StructuredTextViewer.updateTextListeners\n(StructuredTextViewer.java:1482)\n\tat org.eclipse.jface.text.TextViewer$DocumentListener.documentChanged\n(TextViewer.java:276)\n\tat com.ibm.sed.flatmodel.impl.FlatModel._fireDocumentChanged\n(FlatModel.java:193)\n\tat com.ibm.sed.flatmodel.impl.FlatModel.fireFlatModelEvent\n(FlatModel.java:651)\n\tat com.ibm.sed.flatmodel.impl.FlatModel.replaceText(FlatModel.java:1310)\n\tat com.ibm.sed.editor.FlatModelToTextAdapter.replaceTextRange\n(FlatModelToTextAdapter.java:502)\n\tat org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5095)\n\tat org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:5807)\n\tat org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2087)\n\tat org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:4977)\n\tat org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:4585)\n\tat org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:4557)\n\tat org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:4302)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)\n\tat org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:836)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:819)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:777)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)\n\tat EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:14)",
    "We have found an \"workaround\" for our problem ... we just post our ruler re-\ndraw on the UI thread with async exec, so I guess that get\u0027s it \"behind\" what \never other tasks are on there waiting to finish so all is in a valid state by \nthe time it executes. We were triggering it off of \"documentChanged\" which I \nsee is called during \"modify content\" (not after, like I thought). I \nput \"workaround\" in quotes, since this is (probably) the correct way to do it, \nnot a real workaround. [In other words, normally I\u0027d cancel this defect, but \ndoesn\u0027t seem to be a value for that.]",
    "Who is sending the TextChanging/TextChanged events and when?\nThe caret position should be up to date when the TextChanged event notification \nreturns and at that point you should be able to do a relayout/resize.\nIt looks like the FlatModel#_fireDocumentChanged is invoked before the \nTextChanged event is sent which would be wrong because StyledText would not \nfully reflect the text change yet at that point.\nIdeally you would redraw your ruler when the Modify event is sent by \nStyledText. At that point you are guaranteed to have a consistent widget state. \nDuring the StyledTextContent.replaceTextRange you really only want to update \nyour model and refreh styles if applicable.\nHowever, your asyncExec has essentially the same effect.\nI don\u0027t know how we would have changed this behavior with out changes between \nM4 and M5."
  ],
  "commentCreationDates": [
    "2002-04-17T08:36:01+02:00",
    "2002-04-19T07:47:02+02:00",
    "2002-04-24T23:41:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.text.BadLocationException",
      "elements": [
        {
          "method": "com.ibm.sed.editor.FlatModelToTextAdapter.getOffsetAtLine",
          "source": "FlatModelToTextAdapter.java:247"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.setCaretLocation",
          "source": "StyledText.java:6031"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.setVerticalScrollOffset",
          "source": "StyledText.java:6914"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.claimBottomFreeSpace",
          "source": "StyledText.java:1647"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handleResize",
          "source": "StyledText.java:4714"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$14.handleEvent",
          "source": "StyledText.java:4332"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:75"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:841"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:827"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_SIZE",
          "source": "Control.java:3745"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.WM_SIZE",
          "source": "Scrollable.java:302"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_SIZE",
          "source": "Composite.java:695"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:2701"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:1799"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java:1206"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java:70"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:2713"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:1799"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.EndDeferWindowPos",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.layout",
          "source": "Composite.java:296"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.layout",
          "source": "Composite.java:265"
        },
        {
          "method": "com.ibm.sed.editor.LineNumberRulerImpl.updateWidth",
          "source": "LineNumberRulerImpl.java:427"
        },
        {
          "method": "com.ibm.sed.editor.LineNumberRulerImpl.doPaint",
          "source": "LineNumberRulerImpl.java:214"
        },
        {
          "method": "com.ibm.sed.editor.LineNumberRulerImpl.doubleBufferPaint",
          "source": "LineNumberRulerImpl.java:247"
        },
        {
          "method": "com.ibm.sed.editor.LineNumberRulerImpl.redraw",
          "source": "LineNumberRulerImpl.java:355"
        },
        {
          "method": "com.ibm.sed.editor.StructuredTextLineNumberRulerImpl.redraw",
          "source": "StructuredTextLineNumberRulerImpl.java:26"
        },
        {
          "method": "com.ibm.sed.editor.LineNumberRulerImpl$InternalListener.textChanged",
          "source": "LineNumberRulerImpl.java:49"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer.updateTextListeners",
          "source": "TextViewer.java:1397"
        },
        {
          "method": "com.ibm.sed.editor.StructuredTextViewer.updateTextListeners",
          "source": "StructuredTextViewer.java:1482"
        },
        {
          "method": "org.eclipse.jface.text.TextViewer$DocumentListener.documentChanged",
          "source": "TextViewer.java:276"
        },
        {
          "method": "com.ibm.sed.flatmodel.impl.FlatModel._fireDocumentChanged",
          "source": "FlatModel.java:193"
        },
        {
          "method": "com.ibm.sed.flatmodel.impl.FlatModel.fireFlatModelEvent",
          "source": "FlatModel.java:651"
        },
        {
          "method": "com.ibm.sed.flatmodel.impl.FlatModel.replaceText",
          "source": "FlatModel.java:1310"
        },
        {
          "method": "com.ibm.sed.editor.FlatModelToTextAdapter.replaceTextRange",
          "source": "FlatModelToTextAdapter.java:502"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.modifyContent",
          "source": "StyledText.java:5095"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.sendKeyEvent",
          "source": "StyledText.java:5807"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.doBackspace",
          "source": "StyledText.java:2087"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.invokeAction",
          "source": "StyledText.java:4977"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handleKey",
          "source": "StyledText.java:4585"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText.handleKeyDown",
          "source": "StyledText.java:4557"
        },
        {
          "method": "org.eclipse.swt.custom.StyledText$8.handleEvent",
          "source": "StyledText.java:4302"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:75"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.notifyListeners",
          "source": "Widget.java:637"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:1412"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1208"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:836"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:819"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:777"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:319"
        },
        {
          "method": "EclipseRuntimeLauncher.main",
          "source": "EclipseRuntimeLauncher.java:14"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "13970",
      "date": "2002-04-17T08:36:01+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "13970",
  "bugId": "13970",
  "date": "2002-04-17T08:36:01+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}