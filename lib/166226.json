{
  "comments": [
    "I have a method with the following signature:\n\n    public void myMethod(List\u003cObject[]\u003e list)\n\nI am using JEM 1.2.2, it does not appear to handle/tolerate this case, an exception is thrown at the beginning of the array, here\u0027s a stack trace:\n\n+++ Warning +++: Wed Nov 29 12:27:19 EST 2006    java.lang.IllegalArgumentException: List\u003cObject\n    \tat org.eclipse.jdt.core.Signature.checkNextChar(Signature.java:719)\n    \tat org.eclipse.jdt.core.Signature.encodeTypeSignature(Signature.java:848)\n    \tat org.eclipse.jdt.core.Signature.createCharArrayTypeSignature(Signature.java:623)\n    \tat org.eclipse.jdt.internal.codeassist.SelectionEngine.selectType(SelectionEngine.java:1037)\n    \tat org.eclipse.jdt.internal.core.SourceType.resolveType(SourceType.java:854)\n    \tat org.eclipse.jdt.internal.core.SourceType.resolveType(SourceType.java:800)\n    \tat org.eclipse.jem.internal.adapters.jdom.JDOMSearchHelper.getTypeNameInfo(JDOMSearchHelper.java:72)\n    \tat org.eclipse.jem.internal.adapters.jdom.JDOMSearchHelper.resolveSimpleTypeName(JDOMSearchHelper.java:181)\n    \tat org.eclipse.jem.internal.adapters.jdom.JDOMSearchHelper.getResolvedTypeName(JDOMSearchHelper.java:309)\n    \tat org.eclipse.jem.internal.adapters.jdom.JDOMAdaptor.computeMethodID(JDOMAdaptor.java:130)\n    \tat org.eclipse.jem.internal.adapters.jdom.JDOMAdaptor.createJavaMethod(JDOMAdaptor.java:190)\n    \tat org.eclipse.jem.internal.adapters.jdom.JavaClassJDOMAdaptor.addMethods(JavaClassJDOMAdaptor.java:177)\n    \tat org.eclipse.jem.internal.adapters.jdom.JavaClassJDOMAdaptor.reflectMethodsIfNecessary(JavaClassJDOMAdaptor.java:530)\n    \tat org.eclipse.jem.java.internal.impl.JavaClassImpl.reflectMethods(JavaClassImpl.java:831)\n    \tat org.eclipse.jem.java.internal.impl.JavaClassImpl.getMethods(JavaClassImpl.java:559)\n    \tat org.eclipse.jem.java.internal.impl.JavaClassImpl.getPublicMethods(JavaClassImpl.java:696)",
    "Comment from Dan Berg:\n\nThe generic toleration code was only added to JavaMethodJDOMAdaptor but the method JDOMAdaptor#computeMethodID(...) was not updated (this is called from JavaClassJDOMAdaptor).  The problem is that computeMethodID(...) is not using the erasure type only for the parameter types when computing the method ID.  I think this slipped by since JDOMSearchHelper was (by chance) filtering the generic content but JDOMSearchHelper cannot do it since it is expecting a readable type name at that moment and not a signature",
    "We are building our adopter product based on eclipse 3.2.1 and this level of JEM, and this problem is hitting us in common usage scenario; therefore, I am raising the severity.",
    "Dan,\nSince you were in the code for the JEM tolerance for 1.5, can you make the change to fix this and commit the code (or send Rich a patch).\nWe\u0027ll build when you are ready and do a quick sniff test.\nThanks... Peter",
    "Dan, please note that we need this to be fixed for the Callisto Winter maintenance release which GAs on Feb 16th.  We would, or course, want the fix weeks before that to allow for testing.",
    "Dan, any news on this one?\n",
    "Created an attachment (id\u003d57319)\npatch\n\n",
    "Sorry...I didn\u0027t realize this defect was assigned to me.  I have created a patch and attached it to the defect.  I ran a test with the same method signature and it works for me.  Could we get some sniff testing with this patch?",
    "I gave the patch a try, my orignal scenario now works.  Thanks for the patch.",
    "This has been released in to VE Release 1.2.3-jem",
    "Closing as part of mass query to clean up old resolved bugs in untargetted milestones."
  ],
  "commentCreationDates": [
    "2006-11-29T17:37:19+01:00",
    "2006-11-29T17:38:54+01:00",
    "2006-11-30T21:23:38+01:00",
    "2007-01-08T17:41:15+01:00",
    "2007-01-11T15:35:16+01:00",
    "2007-01-18T13:58:33+01:00",
    "2007-01-23T04:41:36+01:00",
    "2007-01-23T04:42:01+01:00",
    "2007-01-23T16:49:21+01:00",
    "2007-01-30T15:56:12+01:00",
    "2007-04-03T17:48:45+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "List\u003cObject",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.Signature.checkNextChar",
          "source": "Signature.java:719"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.encodeTypeSignature",
          "source": "Signature.java:848"
        },
        {
          "method": "org.eclipse.jdt.core.Signature.createCharArrayTypeSignature",
          "source": "Signature.java:623"
        },
        {
          "method": "org.eclipse.jdt.internal.codeassist.SelectionEngine.selectType",
          "source": "SelectionEngine.java:1037"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceType.resolveType",
          "source": "SourceType.java:854"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SourceType.resolveType",
          "source": "SourceType.java:800"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JDOMSearchHelper.getTypeNameInfo",
          "source": "JDOMSearchHelper.java:72"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JDOMSearchHelper.resolveSimpleTypeName",
          "source": "JDOMSearchHelper.java:181"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JDOMSearchHelper.getResolvedTypeName",
          "source": "JDOMSearchHelper.java:309"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JDOMAdaptor.computeMethodID",
          "source": "JDOMAdaptor.java:130"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JDOMAdaptor.createJavaMethod",
          "source": "JDOMAdaptor.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JavaClassJDOMAdaptor.addMethods",
          "source": "JavaClassJDOMAdaptor.java:177"
        },
        {
          "method": "org.eclipse.jem.internal.adapters.jdom.JavaClassJDOMAdaptor.reflectMethodsIfNecessary",
          "source": "JavaClassJDOMAdaptor.java:530"
        },
        {
          "method": "org.eclipse.jem.java.internal.impl.JavaClassImpl.reflectMethods",
          "source": "JavaClassImpl.java:831"
        },
        {
          "method": "org.eclipse.jem.java.internal.impl.JavaClassImpl.getMethods",
          "source": "JavaClassImpl.java:559"
        },
        {
          "method": "org.eclipse.jem.java.internal.impl.JavaClassImpl.getPublicMethods",
          "source": "JavaClassImpl.java:696"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "166226",
      "date": "2006-11-29T17:37:19+01:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "critical"
    }
  ],
  "groupId": "166226",
  "bugId": "166226",
  "date": "2006-11-29T17:37:19+01:00",
  "product": "Web Tools",
  "component": "jst.jem",
  "severity": "critical"
}