{
  "comments": [
    "In target on latest code.\nI have an external tool set to log to a file (and console) to temp.txt.\nClicking on the link in the console correctly opens the file.\n\nWith that file editor open attempt to shutdown Eclipse:\n\nThread [main] (Suspended (exception NullPointerException))\n\tEditorManager$11.run() line: 1795\n\tInternalPlatform.run(ISafeRunnable) line: 616\n\tPlatform.run(ISafeRunnable) line: 747\n\tEditorManager.saveEditorState(IMemento, IEditorReference, MultiStatus) \nline: 1754\n\tEditorManager.saveState(IMemento) line: 1314\n\tWorkbenchPage.saveState(IMemento) line: 2692\n\tWorkbenchWindow.saveState(IMemento) line: 2075\n\tWorkbench.saveState(IMemento) line: 1604\n\tWorkbench.recordWorkbenchState() line: 1360\n\tWorkbench.access$5(Workbench) line: 1357\n\tWorkbench$9.run() line: 471\n\tInternalPlatform.run(ISafeRunnable) line: 616\n\tPlatform.run(ISafeRunnable) line: 747\n\tWorkbench.busyClose(boolean) line: 469\n\tWorkbench.access$8(Workbench, boolean) line: 433\n\tWorkbench$12.run() line: 618\n\tBusyIndicator.showWhile(Display, Runnable) line: 69\n\tWorkbench.close(int, boolean) line: 616\n\tWorkbench.close() line: 591\n\tQuitAction.run() line: 55\n\tQuitAction(Action).runWithEvent(Event) line: 989\n\tActionContributionItem.handleWidgetSelection(Event, boolean) line: 555\n\tActionContributionItem.access$2(ActionContributionItem, Event, \nboolean) line: 505\n\tActionContributionItem$6.handleEvent(Event) line: 419\n\tEventTable.sendEvent(Event) line: 82\n\tMenuItem(Widget).sendEvent(Event) line: 814\n\tDisplay.runDeferredEvents() line: 2803\n\tDisplay.readAndDispatch() line: 2448\n\tWorkbench.runEventLoop(Window$IExceptionHandler, Display) line: 1579\n\tWorkbench.runUI() line: 1550\n\tWorkbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 282\n\tPlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 144\n\tIDEApplication.run(Object) line: 102\n\tPlatformActivator$1.run(Object) line: 220\n\tEclipseStarter.run(Object) line: 273\n\tEclipseStarter.run(String[], Runnable) line: 129\n\tNativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not \navailable [native method]\n\tNativeMethodAccessorImpl.invoke(Object, Object[]) line: 39\n\tDelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25\n\tMethod.invoke(Object, Object[]) line: 324\n\tMain.basicRun(String[]) line: 185\n\tMain.run(String[]) line: 710\n\tMain.main(String[]) line: 694",
    "ProcessConsole.ConsoleLogFileHyperlink opens the file, but the NPE is coming from EditorManager on \nshut down. Moving to UI for comment.",
    "Hrm.  This is a very odd place for an NPE... the line in question is: \n\n                   editorMem.putString(IWorkbenchConstants.TAG_ACTIVE_PART,\n                            \"true\"); //$NON-NLS-1$\n\nif editorMem were null the NPE would be a few lines prior as we access it there\nas well.\n\nCan you attach code/a launch/whatever that can reproduce this?",
    "\nThe new linenumber is 1804. Looks like the path of the input is null.\n\nTo reproduce: \nRun any Java program that produces output and on the Common tab for that launch \nconfiguration, set to log to a file as well as to the console. \nSet the file name to ONLY something like temp.txt (do not make fully specified \npath).\nRun the program\nClick on the top level link to the output file to open the file\nExit Eclipse\n\nMy suspsion would be that we are not setting up the editor input correctly",
    "Quite right, and finally a bug I didn\u0027t introduce! :)\n\nIFile.getLocation() returns null for files not in the workspace.  You\u0027re\ncreating a FileEditorInput with just such a file, and we\u0027re kaking.  I\u0027m not\nsure what our options are here... perhaps we just don\u0027t save such files to the\nworkbench state?    The text guys don\u0027t use a file editor input - they use a\nJavaFileEditorInput (not a subclass of FileEditorInput).  Perhaps we need an\nExternalFileEditorInput that behaves in a similar way?",
    "Reading the spec, an IFile should be a resource within the workspace, and \nFileEditorInput acts on an IFile.  Does Debug want us to add an editor input \nthat will handle java.io.File instances? \n ",
    "I do not believe that debug is currently doing the right thing...we blindly \ncreate a FileEditorInput no matter whether the location is in the workspace or \nnot.\n\nUI code should handle this error case but I believe that debug needs to come \nup with the correct editor input. \n\nFrom my understanding we have to reference internals or create our own version \nof JavaFileEditorInput to achieve this?",
    "Having the workbench provide a simple editor input for File seems reasonable to me. I\u0027d prefer that \nsolution to creating one specific to Debug.",
    "In talking with John, the \"recommended\" approach for opening files external to \nthe workbench is currently to copy the code from \"org.eclipse.ui.editors\".  \nThis is far from ideal. \n \n \nFrom Nick: \n\"If we do so, I think the semantics of ILocationProvider needs to be \nclarified. ?It\u0027s currently ambiguous as to whether it deals with a file-system \npath or a workspace-relative path.  Also note that the workbench already \ndefines IPathEditorInput for referring to external files. ?Not sure if the \ntext editors understand it.\" \n \nIn response to Nick: \nI don\u0027t believe you understand the problem Nick.  It is specifically the \n\"getPath()\" call in FileEditorInput that is returning null.  Either \nFileEditorInput cannot be an IPathEditorInput (since it relies on IFile, which \nmust exists within the workspace), or IPathEditorInput is specified \nincorrectly. \n ",
    "Users of editors care about creating an IEditorInput that they can pass to\nIWorkbenchPage.openEditor(...).  The text editor framework cares mainly about\ndocuments.  The org.eclipse.ui.editors.documentProviders extension point\ndecouples this relationship between inputs and documents. Anyone can plug in a\ndocument provider that knows how to map a given input to a corresponding document. \n\nThe org.eclipse.ui.editors plugin supplies document providers for\nIStorageEditorInput and JavaFileEditorInput (which is not API).  It feels like\nthe editors plugin just needs to add a document provider for the existing\nIPathEditorInput.  It would also help for someone (perhaps workbench) to provide\na concrete implementation of IPathEditorInput as API (which is essentially what\nJavaFileEditorInput is). This is a common enough case that it doesn\u0027t make much\nsense for everyone to roll this themselves (or copy the existing implementation\nfrom the ui.editors plugin).",
    "I may not understand the problem, but fortunately it sounds like John does.\n\n\u003e It is specifically the \"getPath()\" call in FileEditorInput that is returning\nnull.  \n\nAs Darin said, this is because they\u0027re using FileEditorInput incorrectly.  \n\n\u003e Either FileEditorInput cannot be an IPathEditorInput (since it relies on\nIFile, which must exists within the workspace) or IPathEditorInput is specified \nincorrectly. \n\nFileEditorInput can be an IPathEditorInput.  Any properly-specified\nFileEditorInput should return the file-system path for the file via its\nIPathEditorInput.getPath() method.  I believe IPathEditorInput is specified \ncorrectly.  But we probably could benefit from a concrete implementation, as\nJohn suggests.\n",
    "released a work-around for M4 in ProcessConsole - it now creates a valid editor input. Will move to \nworkbench solution when it\u0027s available",
    "*** Bug 94517 has been marked as a duplicate of this bug. ***",
    "Moving Dougs bugs",
    "Can happen also if I delete file resources currently opened in an editor.\n\nThis is rather rare, but I found a funny way to reproduce:\n\n- open e.g. some .java files from project \"foo\"\n- delete the \"foo\" project (but do *not* hit the [OK] button by now)\n- move the mouse to the [X] of the workbench\n- now press [OK] and instantly try to click the [X] to close the workbench ;-)\n\nResult:\n\njava.lang.NullPointerException\nat org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:1328)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\nat org.eclipse.core.runtime.Platform.run(Platform.java:783)\nat org.eclipse.ui.internal.EditorManager.saveEditorState(EditorManager.java:1287)\nat org.eclipse.ui.internal.EditorManager.saveState(EditorManager.java:1208)\nat org.eclipse.ui.internal.WorkbenchPage.saveState(WorkbenchPage.java:2779)\nat org.eclipse.ui.internal.WorkbenchWindow.saveState(WorkbenchWindow.java:2288)\nat org.eclipse.ui.internal.Workbench.saveState(Workbench.java:1733)\nat org.eclipse.ui.internal.Workbench.recordWorkbenchState(Workbench.java:1469)\nat org.eclipse.ui.internal.Workbench.access$5(Workbench.java:1466)\nat org.eclipse.ui.internal.Workbench$10.run(Workbench.java:559)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)\nat org.eclipse.core.runtime.Platform.run(Platform.java:783)\nat org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:557)\nat org.eclipse.ui.internal.Workbench.access$8(Workbench.java:522)\nat org.eclipse.ui.internal.Workbench$13.run(Workbench.java:713)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\nat org.eclipse.ui.internal.Workbench.close(Workbench.java:711)\nat org.eclipse.ui.internal.Workbench.close(Workbench.java:686)\nat org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:643)\nat org.eclipse.ui.internal.WorkbenchWindow.access$0(WorkbenchWindow.java:627)\nat org.eclipse.ui.internal.WorkbenchWindow$2.run(WorkbenchWindow.java:728)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\nat org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:726)\nat org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:727)\nat org.eclipse.jface.window.Window$3.shellClosed(Window.java:674)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:159)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)\nat org.eclipse.swt.widgets.Decorations.closeWidget(Decorations.java:257)\nat org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1649)\nat org.eclipse.swt.widgets.Control.windowProc(Control.java:3040)\nat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)\nat org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)\nat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\nat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)\nat org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)\nat org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)\nat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)\nat org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)\nat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\nat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)\nat org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)\nat org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)\nat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)\nat org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)\nat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\nat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2756)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\nat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nat java.lang.reflect.Method.invoke(Unknown Source)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\nat org.eclipse.core.launcher.Main.run(Main.java:973)\nat org.eclipse.core.launcher.Main.main(Main.java:948) \n\n\nThe affected code states:\n\n// TODO - DDW - dynamic UI - a check for a null input was deliberately removed here.\nif (input instanceof IPathEditorInput) {\n    editorMem.putString(IWorkbenchConstants.TAG_PATH,\n    ((IPathEditorInput) input).getPath().toString());\n}\n\nSo, i assume that \"getPath()\" returns null at this time ....",
    "Florian, I think your bug is different.  Can you enter a new bug with this stack trace, and say what build of Eclipse you are using?",
    "Created bug #142749",
    "This has been done: there is a new FileStoreEditorInput, and IFileStore can be created on arbitrary files in the file system.  Darin W, do you know if you have an open bug report in debug for this?  If not, feel free to reopen and take this bug to track the issue on your side.\n\n*** This bug has been marked as a duplicate of 111887 ***",
    "John, in debug, we started using an implementation of IStorage for files in the local file system now. We do this for source lookup (when it results in an external file, as well). Is there any reason that this needs to be changed to use the IFileStore from a local file system? Do we need to deprecate org.eclipse.debug.core.sourcelookup.containers.LocalFileStorage?",
    "Darin, in the case of source lookup outside the workspace, I think LocalFileStorage and friends are fine.  If you ever wanted to support external source lookup on non-local file systems (an arbitrary URI), you could move to FileStoreEditorInput, but I\u0027m guessing that would be a significant change on your end."
  ],
  "commentCreationDates": [
    "2004-12-06T19:04:33+01:00",
    "2004-12-07T22:29:39+01:00",
    "2004-12-08T00:40:32+01:00",
    "2004-12-08T00:50:59+01:00",
    "2004-12-08T14:54:17+01:00",
    "2004-12-08T18:32:09+01:00",
    "2004-12-08T18:46:09+01:00",
    "2004-12-08T19:01:50+01:00",
    "2004-12-08T19:43:52+01:00",
    "2004-12-08T20:42:02+01:00",
    "2004-12-08T21:00:34+01:00",
    "2004-12-09T21:57:45+01:00",
    "2005-05-11T16:48:07+02:00",
    "2006-04-21T19:19:31+02:00",
    "2006-05-19T11:28:54+02:00",
    "2006-05-19T15:53:11+02:00",
    "2006-05-19T16:25:58+02:00",
    "2006-11-17T18:25:24+01:00",
    "2006-11-17T22:30:16+01:00",
    "2006-11-20T16:06:28+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.EditorManager$7.run",
          "source": "EditorManager.java:1328"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.saveEditorState",
          "source": "EditorManager.java:1287"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.saveState",
          "source": "EditorManager.java:1208"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.saveState",
          "source": "WorkbenchPage.java:2779"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.saveState",
          "source": "WorkbenchWindow.java:2288"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.saveState",
          "source": "Workbench.java:1733"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.recordWorkbenchState",
          "source": "Workbench.java:1469"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$5",
          "source": "Workbench.java:1466"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$10.run",
          "source": "Workbench.java:559"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.busyClose",
          "source": "Workbench.java:557"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$8",
          "source": "Workbench.java:522"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$13.run",
          "source": "Workbench.java:713"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.close",
          "source": "Workbench.java:711"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.close",
          "source": "Workbench.java:686"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.busyClose",
          "source": "WorkbenchWindow.java:643"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.access$0",
          "source": "WorkbenchWindow.java:627"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$2.run",
          "source": "WorkbenchWindow.java:728"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.close",
          "source": "WorkbenchWindow.java:726"
        },
        {
          "method": "org.eclipse.jface.window.Window.handleShellCloseEvent",
          "source": "Window.java:727"
        },
        {
          "method": "org.eclipse.jface.window.Window$3.shellClosed",
          "source": "Window.java:674"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:159"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:843"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:867"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:852"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.closeWidget",
          "source": "Decorations.java:257"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.WM_CLOSE",
          "source": "Decorations.java:1649"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3040"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1582"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3751"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java:1651"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.callWindowProc",
          "source": "Shell.java:410"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3123"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1582"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3751"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java:1651"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.callWindowProc",
          "source": "Shell.java:410"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3123"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1582"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3751"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1656"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2756"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1699"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:367"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 0,
      "commentIndex": 14,
      "bugId": "80291",
      "duplicateId": "111887",
      "date": "2006-05-19T11:28:54+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "111887",
  "bugId": "80291",
  "duplicateId": "111887",
  "date": "2004-12-06T19:04:33+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "enhancement"
}