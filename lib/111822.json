{
  "comments": [
    "Stack trace:\njava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.compiler.ast.FieldReference.getConstantFor\n(FieldReference.java:408)\n\tat \norg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getOtherFieldBindi\nngs(QualifiedNameReference.java:657)\n\tat \norg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType\n(QualifiedNameReference.java:880)\n\tat \norg.eclipse.jdt.internal.compiler.ast.MemberValuePair.resolveTypeExpecting\n(MemberValuePair.java:70)\n\tat org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType\n(Annotation.java:255)\n\tat org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations\n(ASTNode.java:466)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getAnnotationTagBits\n(SourceTypeBinding.java:720)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForField\nsAndMethods(SourceTypeBinding.java:618)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes\n(CompilationUnitScope.java:420)\n\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve\n(CompilationUnitResolver.java:721)\n\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve\n(CompilationUnitResolver.java:460)\n\tat org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:664)\n\tat fp.MyAnnoProcessor.process(MyAnnoProcessor.java:45)\n\tat \norg.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPTInFileBasedMode\n(APTDispatchRunnable.java:309)\n\tat org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT\n(APTDispatchRunnable.java:536)\n\tat org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT\n(APTDispatchRunnable.java:442)\n\tat org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run\n(APTDispatchRunnable.java:192)\n\tat org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT\n(APTDispatch.java:99)\n\tat org.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringReconcile\n(APTDispatch.java:58)\n\tat \norg.eclipse.jdt.apt.core.internal.AptCompilationParticipant.preReconcileNotify\n(AptCompilationParticipant.java:180)\n\tat org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify\n(AptCompilationParticipant.java:88)\n\tat \norg.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.notifyCompilationPa\nrticipants(ReconcileWorkingCopyOperation.java:144)\n\tat \norg.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation\n(ReconcileWorkingCopyOperation.java:58)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run\n(JavaModelOperation.java:718)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation\n(JavaModelOperation.java:777)\n\tat org.eclipse.jdt.internal.core.CompilationUnit.reconcile\n(CompilationUnit.java:1081)\n\tat org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run\n(JavaReconcilingStrategy.java:98)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:1044)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:783)\n\tat \norg.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile\n(JavaReconcilingStrategy.java:82)\n\tat \norg.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile\n(JavaReconcilingStrategy.java:147)\n\tat \norg.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile\n(CompositeReconcilingStrategy.java:86)\n\tat \norg.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile\n(JavaCompositeReconcilingStrategy.java:94)\n\tat org.eclipse.jface.text.reconciler.MonoReconciler.process\n(MonoReconciler.java:75)\n\tat org.eclipse.jdt.internal.ui.text.JavaReconciler.process\n(JavaReconciler.java:339)\n\tat \norg.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run\n(AbstractReconciler.java:204)\n\n\nRepro: \nCreate a java project with the following three java files.\npackage pkg;\nRefAnnoAndClassWithAnno.java :\npublic class RefMyAnnoAndClassWithAnno {\n\tfinal Class anno \u003d MyAnno.class;\n\tfinal Class withAnno \u003d ClassWithAnnotation.class;\t\n}\n\nMyAnno.java :\npublic @interface MyAnno {\t\n\tpublic enum EnumColor{\n\t\tBLUE, RED, WHITE;\n\t}\t\n\tEnumColor aEnum();\n}\n\nClassWithAnnotation.java:\npackage pkg;\nimport pkg.MyAnno.EnumColor;\n\n@MyAnno(aEnum \u003d EnumColor.BLUE)\npublic class ClassWithAnnotation {}\n\n\nIf you invoke the following code against the project you just created, you \nwill get the NPE.\n\n/* Ask for type \"pkg.RefMyAnnoAndClassWithAnno\" through \n DOMParser.createASTs() passing in only the binding key and no compilation \nunit*/\nvoid process(){\n    class BindingRequestor extends ASTRequestor{}\n    String key \u003d BindingKey.createTypeBindingKey\n(\"pkg.RefMyAnnoAndClassWithAnno\");\n    final ASTParser parser \u003d ASTParser.newParser(AST.JLS3);\n    final BindingRequestor requestor \u003d new BindingRequestor();\n    parser.setResolveBindings(true);\t\t\n    parser.setProject(/*the java project with the three java files*/);\n    parser.createASTs(new ICompilationUnit[0], new String[]{key}, requestor, \nnull);\n}\n\nOn my machine, i used APT to dispatch to an annotation processor that runs the \nabove process() code that\u0027s why the stack trace contains APT in it. APT does \nnot do anything that would influence the behavior of the bug. \n(Let me know if you need anything else to repro the problem.)\n\nIt does not matter whether the process() code is invoked during reconcile or \nbuild. \n\nWhat I observed:\n1) CompilationUnitResolver.resolve(ICompilationUnit[], String[], ASTRequestor \nastRequestor, int, Map, WorkingCopyOwner) calls Compiler.process(..) and \nresolve type \"pkg.RefMyAnnoAndClassWithAnno\".\n2) Compiler.process() puts \"pkg.MyAnno\" and \"pkg.ClassWithAnnotation\" on the \nqueue (unitsToProcess) to be processed.\n3) resolution of \"pkg.RefMyAnnoAndClassWithAnno\" completes, reports the \nbinding. Then cuts the reference to the AST for the type.\n4) calls faultInTypes() on \"pkg.MyAnno\". At completion, cuts the AST.\n5) calls faultInTypes() on \"pkg.ClassWithAnnotation\".\n6) Since \"pkg.ClassWithAnnotation\" has an annotation, then the compiler go \nresolve the annotations. \n7) NPE occurs since the annotation reference an enum constant in \"pkg.MyAnno\" \nand the constant has never been resolved and the AST for it is already cut.",
    "correction to the repro:\nAll three java files are in the same package \"pkg\". ",
    "Thanks for the test case Theodora.\n\nIndeed the problem happens because the constant has not been initialized when\nMyAnno.java since it was not injected in the loop.\n\nChanged CompilationUnitResolver#resolve(ICompilationUnit[], ...) to force a\nresolve() after the faultInTypes(). I confirm that I don\u0027t see any performance\ndegration (for example, the refactoring performance tests are not impacted).\n\nAdded regression test BatchASTCreationTests#test069().",
    "Thanks Jerome for the quick turn around. \nI noticed that the fix is slate for 3.2 M3, is it possible to have the fix \nalso checked into the APT jdt.core branch?  thanks. ",
    "(In reply to comment #3)\n\u003e Thanks Jerome for the quick turn around. \n\u003e I noticed that the fix is slate for 3.2 M3, is it possible to have the fix \n\u003e also checked into the APT jdt.core branch?  thanks. \n\nNo problem. I just checked in the fix and regression test in the APT branch.",
    "Fix verified in APT land. "
  ],
  "commentCreationDates": [
    "2005-10-06T20:21:46+02:00",
    "2005-10-06T20:23:16+02:00",
    "2005-10-10T11:39:57+02:00",
    "2005-10-10T21:57:02+02:00",
    "2005-10-11T15:36:00+02:00",
    "2005-10-14T01:40:25+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.FieldReference.getConstantFor",
          "source": "FieldReference.java:408"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.getOtherFieldBindings",
          "source": "QualifiedNameReference.java:657"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType",
          "source": "QualifiedNameReference.java:880"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MemberValuePair.resolveTypeExpecting",
          "source": "MemberValuePair.java:70"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType",
          "source": "Annotation.java:255"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations",
          "source": "ASTNode.java:466"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getAnnotationTagBits",
          "source": "SourceTypeBinding.java:720"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods",
          "source": "SourceTypeBinding.java:618"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes",
          "source": "CompilationUnitScope.java:420"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:721"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:460"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createASTs",
          "source": "ASTParser.java:664"
        },
        {
          "method": "fp.MyAnnoProcessor.process",
          "source": "MyAnnoProcessor.java:45"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPTInFileBasedMode",
          "source": "APTDispatchRunnable.java:309"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT",
          "source": "APTDispatchRunnable.java:536"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.runAPT",
          "source": "APTDispatchRunnable.java:442"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatchRunnable.run",
          "source": "APTDispatchRunnable.java:192"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatch.runAPT",
          "source": "APTDispatch.java:99"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.APTDispatch.runAPTDuringReconcile",
          "source": "APTDispatch.java:58"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.preReconcileNotify",
          "source": "AptCompilationParticipant.java:180"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.AptCompilationParticipant.notify",
          "source": "AptCompilationParticipant.java:88"
        },
        {
          "method": "org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.notifyCompilationParticipants",
          "source": "ReconcileWorkingCopyOperation.java:144"
        },
        {
          "method": "org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation",
          "source": "ReconcileWorkingCopyOperation.java:58"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:718"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:777"
        },
        {
          "method": "org.eclipse.jdt.internal.core.CompilationUnit.reconcile",
          "source": "CompilationUnit.java:1081"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run",
          "source": "JavaReconcilingStrategy.java:98"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:1044"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:783"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile",
          "source": "JavaReconcilingStrategy.java:82"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile",
          "source": "JavaReconcilingStrategy.java:147"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile",
          "source": "CompositeReconcilingStrategy.java:86"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile",
          "source": "JavaCompositeReconcilingStrategy.java:94"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.MonoReconciler.process",
          "source": "MonoReconciler.java:75"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.text.JavaReconciler.process",
          "source": "JavaReconciler.java:339"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run",
          "source": "AbstractReconciler.java:204"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "111822",
      "date": "2005-10-06T20:21:46+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "111822",
  "bugId": "111822",
  "date": "2005-10-06T20:21:46+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}