{
  "comments": [
    "If substitutions groups are being used in the model definition that drives the use of feature map in the EMF generated code, the CrossReferenceAdaptor-\u003egetInverseReferences throws the following exception. The cause is the usage of eContainmentFeature method instead of eContainingFeature method, in the following code. The eContainmentFeature method will not work for elements with substitution groups. This fix should also be pushed to the ECrossReferenceUtil in the ecore.util package.\nThe patch is enlcosed.\n\nCode:\npublic Collection getInverseReferences(EObject eObject, boolean resolve) {\n\t\tCollection result \u003d new ArrayList();\n\n\t\tif (resolve) {\n\t\t\tresolveAll(eObject);\n\t\t}\n\n\t\tEObject eContainer \u003d eObject.eContainer();\n\t\tif (eContainer !\u003d null) {\n\t\t\tresult.add(((InternalEObject) eContainer).eSetting(eObject\n\t\t\t\t\t.eContainingFeature()));\n\t\t}\nException caused:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\njava.lang.IllegalArgumentException: The feature \u0027unitTomcatWebServer\u0027 is not a valid feature\n\tat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eSetting(BasicEObjectImpl.java:1127)\n\tat org.eclipse.gmf.runtime.emf.core.util.CrossReferenceAdapter.getInverseReferences(CrossReferenceAdapter.java:837)\n\tat org.eclipse.emf.ecore.util.ECrossReferenceAdapter.getInverseReferences(ECrossReferenceAdapter.java:298)\n\tat org.eclipse.gmf.runtime.emf.core.util.CrossReferenceAdapter.getInverseReferencers(CrossReferenceAdapter.java:677)\n\tat org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil.getReferencers(EMFCoreUtil.java:212)\n\tat com.ibm.ccl.soa.deploy.core.ui.decorators.DuplicateViewDecorator.getReferencingViews(DuplicateViewDecorator.java:73)\n\tat com.ibm.ccl.soa.deploy.core.ui.decorators.DuplicateViewDecorator.addDecorationFigure(DuplicateViewDecorator.java:63)\n\tat com.ibm.ccl.soa.deploy.core.ui.decorators.DuplicateViewDecorator.refresh(DuplicateViewDecorator.java:53)\n\tat org.eclipse.gmf.runtime.diagram.ui.editpolicies.DecorationEditPolicy.refresh(DecorationEditPolicy.java:187)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart$3.run(GraphicalEditPart.java:743)\n\tat org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive(TransactionalEditingDomainImpl.java:258)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refresh(GraphicalEditPart.java:736)\n\tat org.eclipse.gef.editparts.AbstractEditPart.addNotify(AbstractEditPart.java:235)\n\tat org.eclipse.gef.editparts.AbstractGraphicalEditPart.addNotify(AbstractGraphicalEditPart.java:212)\n\tat org.eclipse.gef.editparts.AbstractEditPart.addChild(AbstractEditPart.java:198)\n\tat org.eclipse.gef.editparts.AbstractEditPart.refreshChildren(AbstractEditPart.java:727)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.handleNotificationEvent(GraphicalEditPart.java:1243)\n\tat org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.notifyChanged(GraphicalEditPart.java:1217)\n\tat org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker.fireNotification(DiagramEventBroker.java:347)\n\tat org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker.handleElementEvent(DiagramEventBroker.java:673)\n\tat org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker.resourceSetChanged(DiagramEventBroker.java:305)\n\tat org.eclipse.gmf.runtime.diagram.ui.internal.DiagramEventBrokerThreadSafe.resourceSetChanged(DiagramEventBrokerThreadSafe.java:72)\n\tat org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl$1.run(TransactionalEditingDomainImpl.java:684)\n\tat org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive(TransactionalEditingDomainImpl.java:258)\n\tat org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.postcommit(TransactionalEditingDomainImpl.java:674)\n\tat org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.deactivate(TransactionalEditingDomainImpl.java:470)\n\tat org.eclipse.emf.transaction.impl.TransactionImpl.close(TransactionImpl.java:474)\n\tat org.eclipse.emf.transaction.impl.TransactionImpl.commit(TransactionImpl.java:330)\n\tat org.eclipse.emf.workspace.AbstractEMFOperation.execute(AbstractEMFOperation.java:130)\n\tat org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult(CompositeCommand.java:400)\n\tat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:129)\n\tat org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult(CompositeCommand.java:400)\n\tat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:129)\n\tat org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult(CompositeCommand.java:400)\n\tat org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:129)\n\tat org.eclipse.core.commands.operations.DefaultOperationHistory.execute(DefaultOperationHistory.java:509)\n\tat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute(DiagramCommandStack.java:206)\n\tat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute(DiagramCommandStack.java:169)\n\tat org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute(DiagramCommandStack.java:156)\n\tat org.eclipse.gef.tools.AbstractTool.executeCommand(AbstractTool.java:388)\n\tat org.eclipse.gef.tools.AbstractTool.executeCurrentCommand(AbstractTool.java:400)\n\tat org.eclipse.gmf.runtime.diagram.ui.tools.CreationTool.performCreation(CreationTool.java:133)\n\tat com.ibm.ccl.soa.deploy.core.ui.tools.ShapeCreationTool.performCreation(ShapeCreationTool.java:196)\n\tat org.eclipse.gef.tools.CreationTool.handleButtonUp(CreationTool.java:178)\n\tat org.eclipse.gef.tools.AbstractTool.mouseUp(AbstractTool.java:1053)\n\tat org.eclipse.gef.EditDomain.mouseUp(EditDomain.java:259)\n\tat org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMouseReleased(DomainEventDispatcher.java:374)\n\tat org.eclipse.draw2d.LightweightSystem$EventHandler.mouseUp(LightweightSystem.java:538)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:137)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3348)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2968)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "Created an attachment (id\u003d48924)\nPatch for the Defect\n\nThis patch shows the line of code that needs to be changed.",
    "public void updateImportsAndExports(Resource resource, EObject value,\n\t\t\tboolean register) {\n\t\tCrossReferenceAdapter adapter \u003d getExistingCrossReferenceAdapter(value);\n\n\t\tif (register) {\n\t\t\tif (adapter !\u003d null) {\n\t\t\t\t// now, register incoming unidirectional references and\n\t\t\t\t// opposites\n\t\t\t\tfor (Iterator iter \u003d adapter.getInverseReferences(value).iterator();\n                        iter.hasNext();) {\n                    EStructuralFeature.Setting next \u003d (EStructuralFeature.Setting) iter.next();\n                    EReference ref \u003d (EReference) next.getEStructuralFeature();\n                    EObject owner \u003d next.getEObject();\n                    \n                    if (isImportExportCapable(ref, owner)) {\n                        registerReference(owner.eResource(), resource);\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// deregister the outgoing references and incoming bidirectionals\n            EContentsEList.FeatureIterator crossReferences \u003d getOptimizedCrossReferenceIterator(\n            \t\tvalue);\n            \n\t\t\twhile (crossReferences.hasNext()) {\n\t\t\t\tEObject referent \u003d (EObject) crossReferences.next();\n\nOnce the previous part is done .. the casting to cast to EReference has to be changed. The groups are type of EAttribute and not EReference.\n\n    EReference ref \u003d (EReference) next.getEStructuralFeature();\n    EObject owner \u003d next.getEObject();\n                ",
    "We are invistigating this problem to see what is the best way to fix it; specially that the same code exist in the ECrossReferenceAdapter class in EMF we might need to fix the problm in both of GMF and EMF or we may just skip the FeatureMap entries",
    "since ECrossReferenceAdapter in EMF implements getInverseReferences in the same way as we do in CrossReferenceAdapter, where it calls \n      result.add(((InternalEObject)eContainer).eSetting(eObject.eContainmentFeature()));\n    }\n\nSo, i\u0027m not sure if this is a problem in the implementation of eSetting (it might be a general problem in eSettig with Wild card features)\n\nadding Ed to the CC list to see what he thinks\n\n\n    ",
    "It\u0027s certainly intentional that the containment feature be used not the containing feature.  Perhaps the eSetting method doesn\u0027t handle this case right.   Could someone provide a simple example that reproduces the problem?  Ideally just a generated model and the generated *.test project with the XyxExample.java modified to reproduce the problem. ",
    "I\u0027ve opened https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d156798 and committed the patch attached to that bug (for the 2.2.1 stream) to ensure that eSetting(EStructuralFeature) works properly for open content features.  There\u0027s also a test case attached to that bugzilla.  That probably solves the whole problem, in which case you could make this bugzilla a duplicate of that one.  For now I\u0027m just made it depend on that one.",
    "Even with Ed\u0027s fix the comment from Saurabh is still a problem and needs to be fixed.  With Ed\u0027s change the open feature is properly handled in the eSetting(...) method but we will still see a ClassCastException in the code below since it assumes an EReference and the features backing a FeatureMap are EAttributes.\n\n(In reply to comment #2)\n\u003e public void updateImportsAndExports(Resource resource, EObject value,\n\u003e                         boolean register) {\n\u003e                 CrossReferenceAdapter adapter \u003d\n\u003e getExistingCrossReferenceAdapter(value);\n\u003e \n\u003e                 if (register) {\n\u003e                         if (adapter !\u003d null) {\n\u003e                                 // now, register incoming unidirectional\n\u003e references and\n\u003e                                 // opposites\n\u003e                                 for (Iterator iter \u003d\n\u003e adapter.getInverseReferences(value).iterator();\n\u003e                         iter.hasNext();) {\n\u003e                     EStructuralFeature.Setting next \u003d\n\u003e (EStructuralFeature.Setting) iter.next();\n\u003e                     EReference ref \u003d (EReference) next.getEStructuralFeature();\n\u003e                     EObject owner \u003d next.getEObject();\n\u003e \n\u003e                     if (isImportExportCapable(ref, owner)) {\n\u003e                         registerReference(owner.eResource(), resource);\n\u003e                     }\n\u003e                                 }\n\u003e                         }\n\u003e                 } else {\n\u003e                         // deregister the outgoing references and incoming\n\u003e bidirectionals\n\u003e             EContentsEList.FeatureIterator crossReferences \u003d\n\u003e getOptimizedCrossReferenceIterator(\n\u003e                         value);\n\u003e \n\u003e                         while (crossReferences.hasNext()) {\n\u003e                                 EObject referent \u003d (EObject)\n\u003e crossReferences.next();\n\u003e \n\u003e Once the previous part is done .. the casting to cast to EReference has to be\n\u003e changed. The groups are type of EAttribute and not EReference.\n\u003e \n\u003e     EReference ref \u003d (EReference) next.getEStructuralFeature();\n\u003e     EObject owner \u003d next.getEObject();\n\u003e \n\u003e \n\n",
    "I\u0027m a bit doubtful about the last comment.  These cross references should only be considering references to EObjects and a reference to an EObject should always be via an EReference.  Even for the case of a feature map, it\u0027s the feature of the FeatureMap.Entry that should be the feature for which eSetting is created, not the feature map feature itself, which would be an EAttribute for sure.  So I think it\u0027s important to determine how an eSetting for a non-EReference ends up showing up, because that\u0027s probably the error...",
    "Will investigate further.  I looked at Ed\u0027s fix a bit closer and it is correct that we should not be getting the ClassCastException anymore since the eSetting(...) logic will delegate into a FeatureMap when detected.",
    "(In reply to comment #9)\n\u003e Will investigate further.  I looked at Ed\u0027s fix a bit closer and it is correct\n\u003e that we should not be getting the ClassCastException anymore since the\n\u003e eSetting(...) logic will delegate into a FeatureMap when detected.\n\nHi we need to close on this bugzilla\ni\u0027ve tried the patch provided by ED, modified the test he had to use CrossReferenceAdaptor instead of eCrossReferenceAdapter and called updateImportsAndExports; did not get any class cast exceptions \ndo we need to try something else ?\nor can we close this bugzilla as a duplicate of the EMF bugzilla ?",
    "We are evaluating the patch with our scenario\u0027s. Will close by end of this week, based on how this goes.",
    "The patch supplied for this defect works fine.",
    "Narinder,\n\nDo you mean the patch in this defect, or the change I made in BasicEObjectImpl?  I really don\u0027t think the patch in this defect is appropriate and it\u0027s quite likely to cause downstream client problems if it\u0027s applied. I.e., folks will expect that they can get that setting and use EcoreUtil.remove(Setting, value) to remove the value, but that won\u0027t work if the feature map\u0027s setting is returned.  Folks should also be able to assume that the feature of the setting is an EReference....",
    "The patch that you have sent to Dan works fine.\norg.eclipse.emf.ecore_2.2.1.v200608311032.jar",
    "Cool.  That\u0027s a relief. ;-)  My fix is in yesterday\u0027s RC maintenance build...",
    "closing the defect as a duplicate of 156798\n\n*** This bug has been marked as a duplicate of 156798 ***"
  ],
  "commentCreationDates": [
    "2006-08-28T22:12:15+02:00",
    "2006-08-28T22:14:22+02:00",
    "2006-09-05T18:12:21+02:00",
    "2006-09-05T20:02:21+02:00",
    "2006-09-08T22:37:21+02:00",
    "2006-09-08T22:52:39+02:00",
    "2006-09-09T15:30:10+02:00",
    "2006-09-11T22:28:28+02:00",
    "2006-09-11T22:51:06+02:00",
    "2006-09-12T19:48:14+02:00",
    "2006-09-13T21:46:36+02:00",
    "2006-09-14T00:21:33+02:00",
    "2006-09-15T18:11:14+02:00",
    "2006-09-15T18:24:31+02:00",
    "2006-09-15T18:31:01+02:00",
    "2006-09-15T18:32:40+02:00",
    "2006-09-15T18:54:18+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "The feature \u0027unitTomcatWebServer\u0027 is not a valid feature",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eSetting",
          "source": "BasicEObjectImpl.java:1127"
        },
        {
          "method": "org.eclipse.gmf.runtime.emf.core.util.CrossReferenceAdapter.getInverseReferences",
          "source": "CrossReferenceAdapter.java:837"
        },
        {
          "method": "org.eclipse.emf.ecore.util.ECrossReferenceAdapter.getInverseReferences",
          "source": "ECrossReferenceAdapter.java:298"
        },
        {
          "method": "org.eclipse.gmf.runtime.emf.core.util.CrossReferenceAdapter.getInverseReferencers",
          "source": "CrossReferenceAdapter.java:677"
        },
        {
          "method": "org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil.getReferencers",
          "source": "EMFCoreUtil.java:212"
        },
        {
          "method": "com.ibm.ccl.soa.deploy.core.ui.decorators.DuplicateViewDecorator.getReferencingViews",
          "source": "DuplicateViewDecorator.java:73"
        },
        {
          "method": "com.ibm.ccl.soa.deploy.core.ui.decorators.DuplicateViewDecorator.addDecorationFigure",
          "source": "DuplicateViewDecorator.java:63"
        },
        {
          "method": "com.ibm.ccl.soa.deploy.core.ui.decorators.DuplicateViewDecorator.refresh",
          "source": "DuplicateViewDecorator.java:53"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editpolicies.DecorationEditPolicy.refresh",
          "source": "DecorationEditPolicy.java:187"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart$3.run",
          "source": "GraphicalEditPart.java:743"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive",
          "source": "TransactionalEditingDomainImpl.java:258"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.refresh",
          "source": "GraphicalEditPart.java:736"
        },
        {
          "method": "org.eclipse.gef.editparts.AbstractEditPart.addNotify",
          "source": "AbstractEditPart.java:235"
        },
        {
          "method": "org.eclipse.gef.editparts.AbstractGraphicalEditPart.addNotify",
          "source": "AbstractGraphicalEditPart.java:212"
        },
        {
          "method": "org.eclipse.gef.editparts.AbstractEditPart.addChild",
          "source": "AbstractEditPart.java:198"
        },
        {
          "method": "org.eclipse.gef.editparts.AbstractEditPart.refreshChildren",
          "source": "AbstractEditPart.java:727"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.handleNotificationEvent",
          "source": "GraphicalEditPart.java:1243"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart.notifyChanged",
          "source": "GraphicalEditPart.java:1217"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker.fireNotification",
          "source": "DiagramEventBroker.java:347"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker.handleElementEvent",
          "source": "DiagramEventBroker.java:673"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.core.listener.DiagramEventBroker.resourceSetChanged",
          "source": "DiagramEventBroker.java:305"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.internal.DiagramEventBrokerThreadSafe.resourceSetChanged",
          "source": "DiagramEventBrokerThreadSafe.java:72"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl$1.run",
          "source": "TransactionalEditingDomainImpl.java:684"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.runExclusive",
          "source": "TransactionalEditingDomainImpl.java:258"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.postcommit",
          "source": "TransactionalEditingDomainImpl.java:674"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionalEditingDomainImpl.deactivate",
          "source": "TransactionalEditingDomainImpl.java:470"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionImpl.close",
          "source": "TransactionImpl.java:474"
        },
        {
          "method": "org.eclipse.emf.transaction.impl.TransactionImpl.commit",
          "source": "TransactionImpl.java:330"
        },
        {
          "method": "org.eclipse.emf.workspace.AbstractEMFOperation.execute",
          "source": "AbstractEMFOperation.java:130"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult",
          "source": "CompositeCommand.java:400"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
          "source": "AbstractCommand.java:129"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult",
          "source": "CompositeCommand.java:400"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
          "source": "AbstractCommand.java:129"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.CompositeCommand.doExecuteWithResult",
          "source": "CompositeCommand.java:400"
        },
        {
          "method": "org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute",
          "source": "AbstractCommand.java:129"
        },
        {
          "method": "org.eclipse.core.commands.operations.DefaultOperationHistory.execute",
          "source": "DefaultOperationHistory.java:509"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute",
          "source": "DiagramCommandStack.java:206"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute",
          "source": "DiagramCommandStack.java:169"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.parts.DiagramCommandStack.execute",
          "source": "DiagramCommandStack.java:156"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.executeCommand",
          "source": "AbstractTool.java:388"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.executeCurrentCommand",
          "source": "AbstractTool.java:400"
        },
        {
          "method": "org.eclipse.gmf.runtime.diagram.ui.tools.CreationTool.performCreation",
          "source": "CreationTool.java:133"
        },
        {
          "method": "com.ibm.ccl.soa.deploy.core.ui.tools.ShapeCreationTool.performCreation",
          "source": "ShapeCreationTool.java:196"
        },
        {
          "method": "org.eclipse.gef.tools.CreationTool.handleButtonUp",
          "source": "CreationTool.java:178"
        },
        {
          "method": "org.eclipse.gef.tools.AbstractTool.mouseUp",
          "source": "AbstractTool.java:1053"
        },
        {
          "method": "org.eclipse.gef.EditDomain.mouseUp",
          "source": "EditDomain.java:259"
        },
        {
          "method": "org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMouseReleased",
          "source": "DomainEventDispatcher.java:374"
        },
        {
          "method": "org.eclipse.draw2d.LightweightSystem$EventHandler.mouseUp",
          "source": "LightweightSystem.java:538"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:137"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:928"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3348"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2968"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "155463",
      "duplicateId": "156798",
      "date": "2006-08-28T22:12:15+02:00",
      "product": "GMF",
      "component": "Runtime EMF",
      "severity": "blocker"
    }
  ],
  "groupId": "156798",
  "bugId": "155463",
  "duplicateId": "156798",
  "date": "2006-08-28T22:12:15+02:00",
  "product": "GMF",
  "component": "Runtime EMF",
  "severity": "blocker"
}