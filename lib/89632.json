{
  "comments": [
    "Testcase:\n\n        Collection\u003cString\u003e c \u003d new ArrayList\u003cString\u003e();\n        c.add(\"a\");\n        c.add(\"b\");\n        c.add(\"c\");\n\n        for (Iterator\u003cString\u003e i \u003d c.iterator(); i.hasNext(); )\n            if (i.next().length() \u003d\u003d 4)\n            {\n                String x \u003d i.next();\n                System.out.println(x);\n            }\n        \n        return c;\n\nI added the testcase to the snippet editor.  I then did a \"Set Imports...\" to \ninclude java.util.* to resolve collection and iterator.  Trying a \"Display\" \nor \"Inspect\" resulted in the following error in the console:\n\njava.lang.VerifyError: arguments are not type compatible (class: CodeSnippet_2 \nmethod: run()V) at pc: 57\n\tat java.lang.Class.verifyImpl(Native Method)\n\tat java.lang.Class.verify(Class.java:254)\n\tat java.lang.Class.initialize(Class.java:317)\n\tat java.lang.Class.forNameImpl(Native Method)\n\tat java.lang.Class.forName(Class.java:128)\n\tat org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain1.eval\n(ScrapbookMain1.java:20)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:46)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:611)\n\tat \norg.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain.evalLoop\n(ScrapbookMain.java:54)\n\tat org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain.main\n(ScrapbookMain.java:35)",
    "I think this may be due to the fact that the snippet support jar is compiled \nagainst 1.4, and is running on 1.5 (however, I thought a 1.5 VM would run 1.4 \nfiles...).",
    "This simpler snippet also causes the problem:\n\n        Collection\u003cString\u003e c \u003d new ArrayList\u003cString\u003e();\n        c.add(\"a\");\n        c.add(\"b\");\n        c.add(\"c\");  \n        Iterator\u003cString\u003e i \u003d c.iterator();\n        while (i.hasNext()) {\n        \tSystem.out.println(i.next());\n        }\n\nIf I remove the \u003cString\u003e qualifier from Iterator, then it works. Moving to \nJCORE for investigation. It looks like the problem is coming from the \nclassfile generated by the IEvaluationContext.\n\nThe scrapbook page is created in a Java project with 1.5 compilation options.",
    "Reproduced. I am investigating.",
    "The code generated for the code snippet missed a checkcast.\n     0  new java/util/ArrayList [19]\n     3  dup\n     4  invokespecial java/util/ArrayList.\u003cinit\u003e()V [20]\n     7  astore_1 [c]\n     8  aload_1 [c]\n     9  ldc \u003cString \"a\"\u003e [22]\n    11  invokeinterface java/util/Collection.add(Ljava/lang/Object;)Z [28]\n[nargs: 2]\n    16  pop\n    17  aload_1 [c]\n    18  ldc \u003cString \"b\"\u003e [30]\n    20  invokeinterface java/util/Collection.add(Ljava/lang/Object;)Z [28]\n[nargs: 2]\n    25  pop\n    26  aload_1 [c]\n    27  ldc \u003cString \"c\"\u003e [32]\n    29  invokeinterface java/util/Collection.add(Ljava/lang/Object;)Z [28]\n[nargs: 2]\n    34  pop\n    35  aload_1 [c]\n    36  invokeinterface java/util/Collection.iterator()Ljava/util/Iterator; [36]\n[nargs: 1]\n    41  astore_2 [i]\n    42  goto 57\n    45  getstatic java/lang/System.out Ljava/io/PrintStream; [42]\n    48  aload_2 [i]\n    49  invokeinterface java/util/Iterator.next()Ljava/lang/Object; [48] [nargs: 1]\n// CHECKCAST NEEDED HERE TO CONVERT TO A STRING\n    54  invokevirtual java/io/PrintStream.println(Ljava/lang/String;)V [54]\n    57  aload_2 [i]\n    58  invokeinterface java/util/Iterator.hasNext()Z [58] [nargs: 1]\n    63  ifne 45\n    66  return\n\nI will investigate why the checkcast is missing.",
    "Update CodeSnippetMessageSend.\nFixed and released in HEAD.\nRegression test added in\norg.eclipse.jdt.core.tests.eval.CodeSnippetTest.testFor89632",
    "Verified for 3.1 RC1 with build I20050527-0010.\n"
  ],
  "commentCreationDates": [
    "2005-03-30T19:10:38+02:00",
    "2005-03-30T23:46:44+02:00",
    "2005-04-25T17:21:17+02:00",
    "2005-05-17T20:18:25+02:00",
    "2005-05-17T20:39:55+02:00",
    "2005-05-17T21:55:56+02:00",
    "2005-05-27T10:51:52+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "arguments are not type compatible (class: CodeSnippet_2  method: run()V) at pc: 57",
      "elements": [
        {
          "method": "java.lang.Class.verifyImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.verify",
          "source": "Class.java:254"
        },
        {
          "method": "java.lang.Class.initialize",
          "source": "Class.java:317"
        },
        {
          "method": "java.lang.Class.forNameImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Class.java:128"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain1.eval",
          "source": "ScrapbookMain1.java:20"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:46"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:611"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain.evalLoop",
          "source": "ScrapbookMain.java:54"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain.main",
          "source": "ScrapbookMain.java:35"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "89632",
      "date": "2005-03-30T19:10:38+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "89632",
  "bugId": "89632",
  "date": "2005-03-30T19:10:38+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}