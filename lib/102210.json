{
  "comments": [
    "Hello,\n\n  I am getting a NullPointerException when trying to compile my project. I am \njust using pointcuts with before and after advice. I have a pointcut which \nmatches 6 methods in a class and when it\u0027s included in the aspect, I get this \nerror ... and when I comment it out, everything compiles. It was working fine \nand then I restarted Eclipse and now I see this error.\n\nThanks,\nMark\n\n\n!ENTRY org.eclipse.ajdt.ui 4 0 Jun 29, 2005 16:42:43.516\n\n!MESSAGE NullPointerException thrown: null\n\n!STACK 0\n\njava.lang.NullPointerException\n\n\tat org.aspectj.weaver.bcel.BcelWeaver.validateOrBranch\n(BcelWeaver.java:584)\n\n\tat org.aspectj.weaver.bcel.BcelWeaver.validateBindings\n(BcelWeaver.java:552)\n\n\tat org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts\n(BcelWeaver.java:490)\n\n\tat org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave\n(BcelWeaver.java:426)\n\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave\n(AjCompilerAdapter.java:248)\n\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling\n(AjCompilerAdapter.java:129)\n\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:385)\n\n\tat \norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation\n(AjBuildManager.java:727)\n\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:206)\n\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBuildManager.java:140)\n\n\tat org.aspectj.ajde.internal.CompilerAdapter.compile\n(CompilerAdapter.java:121)\n\n\tat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:191)",
    "To help us solve the problem, could you possibly include in this bug report the\npointcuts that you are using?",
    "The pointcut called checkClientWorkspace is the one causing the problem. I \ncomment it out and I can compile again.\n\nThanks,\nMark\n\n/**\n * \n */\npackage com.ugs.plm.dms.aspects;\n\nimport com.ugs.plm.dms.hibernate.tables.ClientWorkspace;\nimport com.ugs.plm.dms.webservices.ClientWorkspaceServices;\n\npublic aspect ClientWorkspaceServicesContract\n{\n    pointcut checkNameNotNull(String name):\n            ((execution(public * ClientWorkspaceServices.*(String, String, !\nString, String)) \u0026\u0026 args(*, *, *, name)) ||\n             (execution(public * ClientWorkspaceServices.*(String, String, \nString)) \u0026\u0026 args(*, *, name)));\n    \n    before(String name): checkNameNotNull(name)\n    {\n        if (name \u003d\u003d null || name.length() \u003d\u003d 0)\n        {\n            throw new IllegalArgumentException(\"The name cannot be null. Please \npass in a valid name.\");\n        }\n    }\n    \n//    pointcut checkTwoNamesNotNull(String name1, String name2):\n//        ((execution(public * ClientWorkspaceServices.*(String, String, \nString, String)) \u0026\u0026 args(*, *, name1, name2)));\n//    \n//    before (String name1, String name2): checkTwoNamesNotNull(name1, name2)\n//    {\n//        if (name1 \u003d\u003d null || name2 \u003d\u003d null)\n//        {\n//            throw new IllegalArgumentException(\"The name cannot be null. \nPlease pass in a valid name.\");\n//        }\n//    }\n    \n//    pointcut checkClientWorkspace(ClientWorkspace client):\n//        ((execution(public * ClientWorkspaceServices.*(String, String, \nClientWorkspace)) \u0026\u0026 args(*, *, client)) ||\n//         (execution(public * ClientWorkspaceServices.*(String, String, \nClientWorkspace, String)) \u0026\u0026 args(*, *, client, *)) ||\n//         (execution(public * ClientWorkspaceServices.*(String, String, String\n[], ClientWorkspace, String)) \u0026\u0026 args(*, *, *, client, *)));\n//\n//    before (ClientWorkspace client): checkClientWorkspace(client)\n//    {\n//        if (client \u003d\u003d null)\n//        {\n//            throw new IllegalArgumentException(\"The client cannot be null. \nPlease pass in a valid client.\");\n//        }\n//    }\n}\n",
    "to investigate in M4",
    "Recreated with:\n\nimport java.util.*;\n\npublic aspect PR102210 {\n\n pointcut checkClientWorkspace(List client):\n   ((execution(public * *(String, String, List)) \u0026\u0026 args(*, *, client)) ||\n    (execution(public * *(String, String, List, String)) \u0026\u0026 args(*, *, client,\n*)) ||\n    (execution(public * *(String, String, String [], List, String)) \u0026\u0026 args(*, *\n, *, client, *)));\n\n  before(List l): checkClientWorkspace(l) {}\n}\n\nbased on the supplied code (thanks!)\n\nmore up to date stack trace is:\n\n\njava.lang.NullPointerException\n\tat org.aspectj.weaver.bcel.BcelWeaver.validateOrBranch(BcelWeaver.java:593)\n\tat org.aspectj.weaver.bcel.BcelWeaver.validateBindings(BcelWeaver.java:561)\n\tat org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts(BcelWeaver.java:499)\n\tat org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:434)\n\tat\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:269)\n\tat\norg.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:165)\n\tat\norg.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\n\tat\norg.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)\n\tat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:728)\n\tat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:206)\n\tat\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:140)\n\tat org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:114)\n\tat org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)\n\tat org.aspectj.tools.ajc.Main.run(Main.java:324)\n\tat org.aspectj.tools.ajc.Main.runMain(Main.java:238)\n\tat org.aspectj.tools.ajc.Main.main(Main.java:82)",
    "ok ... I\u0027m making some progress - it is related to the use of more than one ||\nand binding.\n\nThe pointcut passed in for rewriting, looks something like this:\n\n(persingleton(PR102210) \u0026\u0026 ((execution(public * *(java.lang.String,\njava.lang.String, java.util.List)) \u0026\u0026 args(*, *,\nBindingTypePattern(java.util.List, 0))) || ((execution(public *\n*(java.lang.String, java.lang.String, java.util.List, java.lang.String)) \u0026\u0026\nargs(*, *, BindingTypePattern(java.util.List, 0), *)) || (execution(public *\n*(java.lang.String, java.lang.String, java.lang.String[], java.util.List,\njava.lang.String)) \u0026\u0026 args(*, *, *, BindingTypePattern(java.util.List, 0), *)))))\n\nmost unpleasant, effectively it is basically this:\n\nA \u0026\u0026 (B || (C || D))\n\nthere is a rewriter stage that distributes ANDs, after it runs, we get:\n\n(A \u0026\u0026 B) || (A \u0026\u0026 (C || D))\n\nwhich isn\u0027t quite finished, what we really want (I think) is:\n\n(A \u0026\u0026 B) || ((A \u0026\u0026 C) || (A \u0026\u0026 D))\n\nInvoking the ANDdistribution logic a 2nd time does indeed return this (perhaps\nwe need to iterate on distribution until nothing changes?)\n\nThose extra parentheses around the last two terms indicate that what you really\nhave is an OR node with \"(A \u0026\u0026 B)\" on its left (an AND node) and \"((A \u0026\u0026 C) ||\n(A \u0026\u0026 D))\" on its right (an OR node).  You don\u0027t have an OR node with 3 terms in it.\n\nAdding the secondary call to the AND distribution logic gets rid of the\nNullPointerException.  Instead it fails:\n\nC:\\temp\\PR102210.java:15 [error] ambiguous binding of parameter(s) l across \u0027||\u0027\nin pointcut\n(execution(public * *(String, String, List)) \u0026\u0026 args(*, *, client)) ||\n   (execution(public * *(String, String, List, String)) \u0026\u0026 args(*, *, client,*)) ||\n   (execution(public * *(String, String, String [], List, String)) \u0026\u0026 args(*, *,\n*, client, *));\n\nNotice in the test program I attached, the binding is complicated but not\nambiguous.  We shouldn\u0027t be reporting an ambiguous error because the call to\ncouldEverMatchSameJoinPoints() in validateOrBranch() shouldn\u0027t be returning true\n(each branch requires execution of a method with a different number of\nparameters)... still looking at it...\n\n",
    "Ok.  I\u0027ve fixed this - but I\u0027ve *not* checked in the fix.  ADRIAN, can you take\na look at the attached patch and verify its OK - you know the rewriter better\nthan me.  The testcase is all checked in - you just need to uncomment line 198\nin Ajc150Tests.java to invoke the test.\n\nThe fix is in two parts.  One part does as I mentioned previously - it repeats\npulling up the disjunctions until no further change occurs, this is the bit I\u0027m\nworried about as you may have been expecting the recursion in the pullup method\nalready to handle this?  The second part looks like a good change in\n\u0027couldEverMatchSameJoinPoints\u0027 which recurses down OR pointcuts rather than\nabandoning if it sees any.\n\nThe full version of the test program uses the complex pointcut and weaves\nagainst methods that match all 3 possible binding cases for the argument.  It\ndoes actually work with the patch in place (cool!).",
    "Created an attachment (id\u003d27124)\nPatch for weaver module that fixes pr102210.\n",
    "I\u0027ve applied a variant of the patch that recurses down sub-branches when pulling\nup disjunctions. This avoids the need to repeatedly call the routine until\nnothing changes by doing the right thing first time!\n\nFix commited in tree, will close bug when available in published AspectJ build\nfrom download page.",
    "fix now available",
    "*** Bug 103645 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-06-29T23:06:18+02:00",
    "2005-06-30T18:04:05+02:00",
    "2005-06-30T18:23:46+02:00",
    "2005-08-26T17:31:13+02:00",
    "2005-09-14T13:57:47+02:00",
    "2005-09-14T15:11:40+02:00",
    "2005-09-14T19:39:52+02:00",
    "2005-09-14T19:40:28+02:00",
    "2005-09-21T17:46:19+02:00",
    "2005-09-22T16:51:37+02:00",
    "2006-01-10T17:52:28+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateOrBranch",
          "source": "BcelWeaver.java:584"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateBindings",
          "source": "BcelWeaver.java:552"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts",
          "source": "BcelWeaver.java:490"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave",
          "source": "BcelWeaver.java:426"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:248"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:129"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:385"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:727"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:206"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:140"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:121"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "102210",
      "date": "2005-06-29T23:06:18+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateOrBranch",
          "source": "BcelWeaver.java:593"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.validateBindings",
          "source": "BcelWeaver.java:561"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts",
          "source": "BcelWeaver.java:499"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave",
          "source": "BcelWeaver.java:434"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:269"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:165"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:728"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:206"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:140"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:114"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:60"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:324"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.runMain",
          "source": "Main.java:238"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.main",
          "source": "Main.java:82"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "102210",
      "date": "2005-09-14T13:57:47+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "102210",
  "bugId": "102210",
  "date": "2005-06-29T23:06:18+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}