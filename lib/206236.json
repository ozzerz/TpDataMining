{
  "comments": [
    "Build ID: M20070921-1145\n\nSteps To Reproduce:\n1. Download Eclipse Classic 3.3.1\n2. Install MyLYN and Web Standard Tools (plus dependencies)\n3. Set Eclipse.ini \n\n-showsplash\norg.eclipse.platform\n--launcher.XXMaxPermSize\n512m\n-vmargs\n-Xms40m\n-Xmx1024m\n\nRun on Sun\u0027s Java \njava version \"1.6.0_03\"\nJava(TM) SE Runtime Environment (build 1.6.0_03-b05)\nJava HotSpot(TM) Client VM (build 1.6.0_03-b05, mixed mode, sharing)\n\nWorkbench is 173 meg with 1655 Folders and 13,860 Files of which about 1049 are java class files. \n\nThe rest is unpredictable. I frequently get this on boot:\n\n\nError\nSat Oct 13 16:45:15 EDT 2007\nException launching the Eclipse Platform:\n\njava.lang.OutOfMemoryError: PermGen space\n\nWith NO STACK TRACE WHATSOSEVER... When this happens I\u0027m only a mouse click or two away from a complete workbench crash.\n\nAlthough I have a number of superflous logs (I don;t think they are a problem however they are avaialbel upon request I do have these culprits that might be the root cuase or at least point in the right direction. When the following occurs it\u0027s only a matter of minutes before a complete crash follows. \n\nI\u0027ve seen this particular issue mentioned in a newsgroup as \"unpredictable\" and no resolution found. \n\nCurrent crashing anywhere from 5 minutes to 2 hours apart.\n\n\n\nMore information:\neclipse.buildId\u003dM20070921-1145\njava.version\u003d1.6.0_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\nError\nSat Oct 13 16:44:51 EDT 2007\nUnhandled event loop exception\n\njava.lang.OutOfMemoryError: PermGen space\nat java.lang.ClassLoader.defineClass1(Native Method)\nat java.lang.ClassLoader.defineClass(Unknown Source)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.defineClass(DefaultClassLoader.java:161)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass(ClasspathManager.java:501)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl(ClasspathManager.java:471)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl(ClasspathManager.java:430)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:413)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:408)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\nat java.lang.ClassLoader.loadClass(Unknown Source)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:289)\nat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\nat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1269)\nat org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:160)\nat org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:788)\nat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)\nat org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)\nat org.eclipse.ui.internal.ide.registry.MarkerHelpRegistry.hasResolution(MarkerHelpRegistry.java:178)\nat org.eclipse.ui.internal.ide.registry.MarkerHelpRegistry.hasResolutions(MarkerHelpRegistry.java:154)\nat org.eclipse.ui.views.markers.internal.ActionResolveMarker.selectionChanged(ActionResolveMarker.java:148)\nat org.eclipse.ui.actions.SelectionProviderAction.selectionChanged(SelectionProviderAction.java:143)\nat org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:162)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.core.runtime.Platform.run(Platform.java:857)\nat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\nat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)\nat org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:160)\nat org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2047)\n\neclipse.buildId\u003dM20070921-1145\njava.version\u003d1.6.0_03\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\nError\nSat Oct 13 16:45:01 EDT 2007\nUnhandled event loop exception\n\norg.eclipse.swt.SWTException: Failed to execute runnable (java.lang.OutOfMemoryError: PermGen space)\nat org.eclipse.swt.SWT.error(SWT.java:3563)\nat org.eclipse.swt.SWT.error(SWT.java:3481)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\nat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3659)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3296)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\nat null\nat null\nat null\nat null\nat null\nat null\nat null\nat null\nat null\nat null\nat null\nat null\nCaused by: java.lang.OutOfMemoryError: PermGen space\nat java.lang.Class.getDeclaredMethods0(Native Method)\nat java.lang.Class.privateGetDeclaredMethods(Unknown Source)\nat java.lang.Class.getDeclaredMethod(Unknown Source)\nat org.eclipse.mylyn.internal.ide.ui.actions.FocusProblemsListAction.getViewers(FocusProblemsListAction.java:39)\nat org.eclipse.mylyn.context.ui.AbstractFocusViewAction$1.preShutdown(AbstractFocusViewAction.java:86)\nat org.eclipse.ui.internal.Workbench$7.run(Workbench.java:706)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.core.runtime.Platform.run(Platform.java:857)\nat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)\nat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)\nat org.eclipse.ui.internal.Workbench.firePreShutdown(Workbench.java:704)\nat org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:844)\nat org.eclipse.ui.internal.Workbench.access$15(Workbench.java:834)\nat org.eclipse.ui.internal.Workbench$22.run(Workbench.java:1078)\nat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\nat org.eclipse.ui.internal.Workbench.close(Workbench.java:1076)\nat org.eclipse.ui.internal.WorkbenchConfigurer.emergencyClose(WorkbenchConfigurer.java:165)\nat org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler.closeWorkbench(IDEWorkbenchErrorHandler.java:236)\nat org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler.handleException(IDEWorkbenchErrorHandler.java:140)\nat org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler.access$0(IDEWorkbenchErrorHandler.java:131)\nat org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler$1.runInUIThread(IDEWorkbenchErrorHandler.java:106)\nat org.eclipse.ui.progress.UIJob$1.run(UIJob.java:94)\nat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\nat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3659)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3296)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)\nat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)\nat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\nat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)",
    "I\u0027m guessing this is a Mylyn problem.",
    "I have disabled all of the MyLYN components and will run in this mode for a while to verify your theory.",
    "Before blaming Mylyn it would be nice if you could open up jconsole and check what is the actual permgen size is used.\n\nIn fact, there is a regression bug in Eclipse 3.3.1, so it is not using parameter --launcher.XXMaxPermSize. See bug 203325\nIn a mean time you could use the following setting instead of that.\n\n-vmargs\n-XX:MaxPermSize\u003d120m",
    "As far as we know, Mylyn is only related to PermGen errors in that it requires the loading of additional classes.  In this scenario I\u0027m guessing that you\u0027re either seeing the problem that Eugene described, or that the VM is not accepting a PermSize of 512M given how much physical memory you have.  I have updated the Mylyn FAQ entry on this with additional steps that you can take to resolve the problem.  If you see Mylyn implicated in any way please feel free to reopen.\n\nhttp://wiki.eclipse.org/index.php/Mylyn_FAQ#I_am_seeing_java.lang.OutOfMemoryError:_PermGen_space_errors.2C_what.27s_wrong.3F\n\nEugene: fyi, I recently learned that the setting needs to be a power of two otherwise it will silently fall to the standard size (32M).  Added that note to the FAQ as well.",
    "According to the version, error message and configuration, I could say there is a 99% probability this is a dup of bug#203325.\n\nI saw a lot of people having this problem (myself included) and blaming Eclipse for letting this bug pass through the release.",
    "(In reply to comment #4)\n\u003e Eugene: fyi, I recently learned that the setting needs to be a power of two\n\u003e otherwise it will silently fall to the standard size (32M).  Added that note to\n\u003e the FAQ as well.\n\nOut of curiosity, where did you learned that? My recollection is that it need to not exceed some threshold derived from the physical memory size but there is none about the value.",
    "Having read the bug log I concur with the strong possibility of this being a dupe of bug#203325 as suggested. I\u0027m closing this as such so as not to waste anyone limited resources.\n\nI\u0027m not a newbie to programming in general as I make my living with code. Yes I \"sell\" my soul to corporations so I know that doesn\u0027t count as real programming to with a lot of you so in this context I\u0027ll consider myself \"joe avegae user\" of the Eclipse product. \n\nJoe averages\u0027 opinion of the product plummeted over this issue for several reasons.  #1 I did not find the original bug and I DID do my homework first looking for it. #2 the product crashes hard when you hit this bug in an my case had several \"rewinds\" of code edits that I had to refigure out. As I do a LOT of refactoring AND I had a major release on the way out the door the confidence in my code started waning. I can\u0027t delay a release once a commitment is made - it must be delivered and it must work. Having a crashing editor was EXTREMELY STRESSFUL on top of an extremely stressful situation at the best of times.\n\nIDE crashes are the reason I wrote in a brain dead simple text editor for about 10 years. Based on this experience I seriously considered moving back.  \n\nMy vote is also for option 3 (bug#203325) - make the default downloads for the basic product stable in as many situations as possible. Failing to do that will result in a LOT of wasted resources at your end dealing with people like me.\n\nPS: Is there any pay-for consulting available for Eclipse? A way to get answers faster when needed in a commercial context? Don\u0027t get me wrong - you guys do wonders and Eclipse is an ncredible product when it\u0027s stable, however there are times when people need an answer faster than can be achieved through the community process.\n\nPPS: To the webmaster here - Joe user typically does stupid things in data entry - like cutting and pasting bug#203325 in the duplicate bug box. How about a simple data scrubber that strips all but numerical characters out of the entered data so the request goes still though? (Pet peeve - just like web sites that can\u0027t understand Visa card numbers with spaces in them - man you guys need to deal with my users and see how much data scrubbing I have to do!)\n\n*** This bug has been marked as a duplicate of bug 203325 ***",
    "Gary, please submit a separate bug reports for any improvements you could think of.",
    "Gary: sorry if comment#8 sounded a bit dismissive, it probably wasn\u0027t intentional.\n\nIn terms of Mylyn support, note that there is no \"us and them\" with open vs. closed source developers.  In fact, for the 3.0 cycle of Mylyn we are trying to incorporate as much newcomer feedback as possible because the tool has evolved around open source early adopters and is now being used by far more people.  \n\nYes, bug bug#203325 is the kind of bug that\u0027s very problematic and can make the entire Platform seem unstable.  I ask that you post these comments, less the P.S.\u0027s, on bug bug#203325 so that others can get your fresh perspective on this, which will help them prioritize the resolution.  Once you comment there I can also back up your opinion because I agree, but it would be good to first have an outsider\u0027s input.\n\nRegarding for-pay consulting and support for Eclipse, feel free to contact me directly about this and I can point you at some commercial resources that I have encountered, but I don\u0027t have a balanced enough sense of all available to list them here without bias.  \n\nRegarding the data entry issue, you have two options: either file a new bug report on Mylyn requesting that our rich Bugzilla editor support this, or file a bug against Community requesting that the Web UI support it.",
    "(In reply to comment #9)\n\u003e Gary: sorry if comment#8 sounded a bit dismissive, it probably wasn\u0027t\n\u003e intentional.\n\nSorry if it sounded dismissive. I meant to say that we really need a separate bug reports to be able to track enhancement requests. That is part of the workflow and allow us to use task context.",
    "Agreed that additional enhancement requests should be tracked in new bugs, and in general we prefer users creating .\n\n(In reply to comment #6)\n\u003e Out of curiosity, where did you learned that? My recollection is that it need to\n\u003e not exceed some threshold derived from the physical memory size but there is\n\u003e none about the value.\n\nShawn Minto told me that he read this on a post on the apache mailing lists, where someone\u0027s setting was not being accepted, and defaulting to 32M, when they weren\u0027t using a power of 2.  I\u0027m not sure what VM they were using and on a quick search could not find evidence of this.  I have updated the FAQ entry accordingly to indicate that it \"may need to be\", not \"must be\" be a power of 2: http://wiki.eclipse.org/Mylyn_FAQ#Why_am_seeing_java.lang.OutOfMemoryError:_PermGen_space_errors.3F",
    "Thank you everyone for the chatter on this issue. I\u0027m learning how the community works :)\n\nI will take it upon myself to test the power of 2 theory. Consider it my tiny contribution to the community. It will take a few days to come back with any definitive results. \n\nSomeone pointed me towards JConsole and I thank them for that. Nice to see EXACTLY what is happening instead of guessing. Took me a few more unexpected crashes before I figured out exactly WHICH session I should have been watching and then it took me more than a few attempts to actually get the ini file to accept what I was feeding it. The current winning version of my eclipse.in is here for what it is worth.\n\n-showsplash\norg.eclipse.platform\n-vmargs\n-Xms40m\n-Xmx1024m\n-XX:MaxPermSize\u003d128M\n\nAlthough several people have mentioned that the -XX:MaxPermSize\u003d128M must come AFTER the -vmargs tag (and yes I can confirm it must) this sample makes it easier to see this for those us us blessed with inductive (versus deductive) reasoning skills.\n\nThe above ini file is working with Suns JVM:\n\njava version \"1.6.0_03\"\nJava(TM) SE Runtime Environment (build 1.6.0_03-b05)\nJava HotSpot(TM) Client VM (build 1.6.0_03-b05, mixed mode, sharing)\n\nI have been crash free since I got the setting *correct*.\n\nIt would also be very nice to have eclipse ratify those settings upon boot and/or at least report in the workspace log that an expected or asked for setting was not realised. Do NOT hold up getting the suggested patch out now for that nicety however.",
    "Gary: since this is a Mylyn bug you will need to post your comments on bug 203325 for them to be noticed by people who can address them.  Mylyn does try to provide relevant support information like this in its FAQ, so if you could take a look at the following entry, and make sure that it is clear to someone in your shoes, that would be great: http://wiki.eclipse.org/index.php/Mylyn_FAQ#Why_am_seeing_java.lang.OutOfMemoryError:_PermGen_space_errors.3F",
    "2B or not 2B a power of 2 - eh?\n\n-XX:MaxPermSize\u003d131M\n\nTo date my minuscule sample of my testings indicate that this is NOT an issue to be concerned with. \n\nEclipse\u0027s motility is fine using the above value :)\n\nI\u0027ve been gradually incrementing the value by 1M on each restart (which for me used to be a week or more apart before this bug blew me out of the water). With each launch I connected with JConsole and confirmed that the values do increase, although there is some minor rounding of the values going on it is small enough to be statistically irrelevant.\n\nWorkspace appears to run fine in *real world usage mode* with these non-power-of-2-values. \n\nThis is only empirical evidence and by no means a definitive answer and I do not (yet) have any idea of where a top end might be and technically it would only apply to the exact version of the JVM (build 1.6.0_03-b05) I am working with now I do expect this would apply to at least any 1.6 Java build.\n\n",
    "Gary: thanks, that\u0027s a useful data point.  If we find evidence that the Sun 1.5 VM works without powers of 2 as well I\u0027ll remove the corresponding cautionary statement from the FAQ."
  ],
  "commentCreationDates": [
    "2007-10-13T23:16:38+02:00",
    "2007-10-15T09:45:48+02:00",
    "2007-10-15T13:36:01+02:00",
    "2007-10-15T19:18:27+02:00",
    "2007-10-16T05:21:08+02:00",
    "2007-10-16T06:47:59+02:00",
    "2007-10-16T07:11:19+02:00",
    "2007-10-16T15:20:30+02:00",
    "2007-10-16T18:57:41+02:00",
    "2007-10-17T05:23:23+02:00",
    "2007-10-17T17:32:47+02:00",
    "2007-10-17T19:40:52+02:00",
    "2007-10-17T20:07:35+02:00",
    "2007-10-18T01:39:09+02:00",
    "2007-10-18T15:48:19+02:00",
    "2007-10-18T23:05:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.OutOfMemoryError",
      "message": "PermGen space",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass1",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.defineClass",
          "source": "DefaultClassLoader.java:161"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass",
          "source": "ClasspathManager.java:501"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl",
          "source": "ClasspathManager.java:471"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl",
          "source": "ClasspathManager.java:430"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:413"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:189"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:340"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal",
          "source": "BundleLoader.java:408"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:369"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:357"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:289"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1269"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "RegistryStrategyOSGI.java:160"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "ExtensionRegistry.java:788"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:243"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:51"
        },
        {
          "method": "org.eclipse.ui.internal.ide.registry.MarkerHelpRegistry.hasResolution",
          "source": "MarkerHelpRegistry.java:178"
        },
        {
          "method": "org.eclipse.ui.internal.ide.registry.MarkerHelpRegistry.hasResolutions",
          "source": "MarkerHelpRegistry.java:154"
        },
        {
          "method": "org.eclipse.ui.views.markers.internal.ActionResolveMarker.selectionChanged",
          "source": "ActionResolveMarker.java:148"
        },
        {
          "method": "org.eclipse.ui.actions.SelectionProviderAction.selectionChanged",
          "source": "SelectionProviderAction.java:143"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer$2.run",
          "source": "Viewer.java:162"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:199"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:160"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateSelection",
          "source": "StructuredViewer.java:2047"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "206236",
      "duplicateId": "203325",
      "date": "2007-10-13T23:16:38+02:00",
      "product": "Mylyn",
      "component": "UI",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.OutOfMemoryError",
      "message": "PermGen space)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3563"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3481"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3659"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3296"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "206236",
      "duplicateId": "203325",
      "date": "2007-10-13T23:16:38+02:00",
      "product": "Mylyn",
      "component": "UI",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.OutOfMemoryError",
      "message": "PermGen space",
      "elements": [
        {
          "method": "java.lang.Class.getDeclaredMethods0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.privateGetDeclaredMethods",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.Class.getDeclaredMethod",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.mylyn.internal.ide.ui.actions.FocusProblemsListAction.getViewers",
          "source": "FocusProblemsListAction.java:39"
        },
        {
          "method": "org.eclipse.mylyn.context.ui.AbstractFocusViewAction$1.preShutdown",
          "source": "AbstractFocusViewAction.java:86"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$7.run",
          "source": "Workbench.java:706"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:857"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:46"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:199"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.firePreShutdown",
          "source": "Workbench.java:704"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.busyClose",
          "source": "Workbench.java:844"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$15",
          "source": "Workbench.java:834"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$22.run",
          "source": "Workbench.java:1078"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.close",
          "source": "Workbench.java:1076"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.emergencyClose",
          "source": "WorkbenchConfigurer.java:165"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler.closeWorkbench",
          "source": "IDEWorkbenchErrorHandler.java:236"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler.handleException",
          "source": "IDEWorkbenchErrorHandler.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler.access$0",
          "source": "IDEWorkbenchErrorHandler.java:131"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEWorkbenchErrorHandler$1.runInUIThread",
          "source": "IDEWorkbenchErrorHandler.java:106"
        },
        {
          "method": "org.eclipse.ui.progress.UIJob$1.run",
          "source": "UIJob.java:94"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3659"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3296"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2389"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2353"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2219"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        }
      ],
      "number": 2,
      "commentIndex": 0,
      "bugId": "206236",
      "duplicateId": "203325",
      "date": "2007-10-13T23:16:38+02:00",
      "product": "Mylyn",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "203325",
  "bugId": "206236",
  "duplicateId": "203325",
  "date": "2007-10-13T23:16:38+02:00",
  "product": "Mylyn",
  "component": "UI",
  "severity": "major"
}