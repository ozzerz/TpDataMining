{
  "comments": [
    "In my effort to use the new javaStream file, I am getting null names loading resulting in an error in NamedDefnList. If I correct this logic to support null names, then my segment names become unrecognized and fail validation. This code sequence was supported under the db file load.\n\nException in thread \"main\" org.eclipse.ohf.ihe.pdq.consumer.PdqConsumerException: java.lang.NullPointerException\n\tat org.eclipse.ohf.ihe.pdq.consumer.test.OtherPdqQuery.main(OtherPdqQuery.java:77)\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.ohf.hl7v2.core.definitions.model.NamedDefnList.namedItemByName(NamedDefnList.java:32)\n\tat org.eclipse.ohf.hl7v2.core.definitions.model.SegmentDefnList.itemByCode(SegmentDefnList.java:30)\n\tat org.eclipse.ohf.hl7v2.core.message.model.Segment.checkDefinition(Segment.java:121)\n\tat org.eclipse.ohf.hl7v2.core.message.model.Segment.setOwner(Segment.java:78)\n\tat org.eclipse.ohf.hl7v2.core.message.model.NodeList.add(NodeList.java:91)\n\tat org.eclipse.ohf.hl7v2.core.message.model.SegmentList.add(SegmentList.java:119)\n\n\nHere is a JUNIT:\n\npublic class NameNullTest extends TestCase {\n\n\tpublic NameNullTest(String name) {\n\t\tsuper(name);\n\t}\n\t\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t}\n\t\n\tpublic void testNullBug() throws HL7V2Exception {\n\t\t\n\t\t//set-up with javaStream (vs access db)\t\t\n\t\tStream loadFile \u003d new Stream(new File(\"hl7Definitions.javaStream\"));\n\t\tMessageManager globalFactory \u003d MessageManager.getFactory();\n\t\tglobalFactory.setVersionDefinitions(loadFile.load());\n\t\t\t\t\n\t\t//create message object\n\t\tMessage msg \u003d globalFactory.createMessage();\n\t\tmsg.clear();\n\t\tmsg.setDefinitions(globalFactory.getVersionDefinitions());\n\t\tmsg.setVersion(VersionDefnList.hv25);\n\n\t\t//create MSH segment\n\t\tSegment mshSegment \u003d new Segment();\n\t\tmshSegment.setCode(\"MSH\");         // \u003c\u003c remove population of segment and this it works\n\t\tmsg.getSegments().add(mshSegment);\n\t\t\n\t}\n\t\n}",
    "The exception happens in the method:\n\tpublic NamedDefn namedItemByName(String value) {\n\t\tfor (int i \u003d 0; i \u003c size() ; i++ )\n\t\t\tif (namedItem(i).getName().equals(value))\n\t\t\t\treturn namedItem(i);\n\t\treturn null;\n\t}\nWhen \ni \u003d\u003d 0\n(the first iteration) the \"namedItem\" method returns a NamedDefn object with \npathName \u003d seg-[\nand the fields \"name\" and \"description\" are null.\nThe \"fields\" vector is empty.\n\nSo the null pointer exception happens because the \"equals(value)\" method is calling a null object.",
    "I reconfigured the tests, and was able to create this error in the tests, but I got it while loading the stream, not while trying to use a message.\n\nI updated the stream, and now everything works again.\n\nEverything is committed now, please try again. I\u0027m a little skeptical that I\u0027ve fixed the same problem though.",
    "Running with the newest updates in CVS, this bug is still at issue; although now I receive a different error - not during message create but rather at message validation. My former workaround in place resolves it for now:\n\n\tpublic String getName() {\n\t\t\n\t\tint lastSep \u003d getPath().lastIndexOf(PATH_SEPARATOR);\n\t\treturn getPath().substring(lastSep+1);\n\t\t//return name;\n\t}\n\nHere is a good getName call result:\ngetname: 83 out of 162 MSH (value)* MSH (name) ^ null-2.5-seg-MSH (path)\n\nHere is what I get using javaStream:\ngetname: 83 out of 162 null (value) * MSH (name) ^ test-2.5-seg-MSH (path)\n\nHere is an update to the JUNIT:\n\n\tpublic void testNullBug() throws HL7V2Exception {\n\t\t\n\t\t//set-up with javaStream (vs access db)\t\t\n\t\tStream loadFile \u003d new Stream(new File(\"C:\\\\workspace\\\\hl7Definitions.javaStream\"));\n\t\tMessageManager globalFactory \u003d MessageManager.getFactory();\n\t\tglobalFactory.setVersionDefinitions(loadFile.load());\n\t\tDefinitionValidator defVal \u003d new DefinitionValidator();\n\t\t\t\t\n\t\t//create message object\n\t\tMessage msg \u003d globalFactory.createMessage();\n\t\tmsg.clear();\n\t\tmsg.setDefinitions(globalFactory.getVersionDefinitions());\n\t\tmsg.setVersion(VersionDefnList.hv25);\n\n\t\t//create MSH segment\n\t\tSegment mshSegment \u003d new Segment();\n\t\tmshSegment.setCode(\"MSH\");         // \u003c\u003c remove population of segment and this it works\n\t\tmsg.getSegments().add(mshSegment);\n\t\t\n\t\t//verify segment\n\t\tdefVal.validate(msg);\n\t\tValidationItemList defItems \u003d defVal.getItems();\n\t\tfor (int i\u003d0; i \u003c defItems.size(); i++) {\n\t\t\tSystem.out.println(\"Client: verifyMessage - level \" + defItems.item(i).getType() + \" - \" + defItems.item(i).getMessage());\n\t\t}\n\t\tif (defItems.size() \u003e 0) {\n\t\t\tthrow new HL7V2Exception(\"validate error\",0);\n\t\t}\n\t}",
    "Having taken a new copy of the hl7v2.core in CVS, I get a new location for this same error. The \"name\" variable is null and this causes a nullPointerException.\n\nException in thread \"main\" java.lang.NullPointerException\n at org.eclipse.ohf.hl7v2.core.definitions.model.DataTypeDefn.escapable(DataTypeDefn.java:47)\n\nchanging this:\npublic boolean escapable() {\n     return name.equals(\"ST\") || name.equals(\"TX\") || name.equals(\"FT\") || name.equals(\"CF\") || name.charAt(0) \u003d\u003d \u0027*\u0027;\n}\nto:\npublic boolean escapable() {\n\tif (name \u003d\u003d null) {\n\t\tint lastSep \u003d getPath().lastIndexOf(PATH_SEPARATOR);\n\t\tname \u003d getPath().substring(lastSep+1);\n\t}\n\treturn name.equals(\"ST\") || name.equals(\"TX\") || name.equals(\"FT\") || name.equals(\"CF\") || name.charAt(0) \u003d\u003d \u0027*\u0027;\n}\n\n(ie working off the path variable instead of the name variable keeps the program running)",
    "Right. This was a lovely bug. It\u0027s some issue in the 1.4 object serialization. Sondra and I were running with the same code but different jre\u0027s and it bugged differently. Always worked under jre 5. \n\nFixed by replacing that piece of code entirely. I believe that this will fix all the related issues",
    "The new rewrite indeed appears to fix my problem. A revision note would be great to know what changed in the future! :)\n\nHere is what I think I had to change:\n\nFor others the old use:\nimport org.eclipse.ohf.hl7v2.core.definitions.formats.Stream\nConfig.SERIALIZED_PATH \u003d \\\\org.eclipse.ohf.hl7v2.ui\\\\Resources\\\\hl7Definitions.javaStream\nStream javaStream \u003d new Stream(new File(Config.SERIALISED_PATH));\nglobalFactory.setVersionDefinitions(javaStream.load());\n\nNew use:\nimport org.eclipse.ohf.hl7v2.core.definitions.formats.PrivateFormat\nConfig.SERIALIZED_PATH \u003d \\\\org.eclipse.ohf.hl7v2.ui\\\\Resources\\\\hl7Definitions.stream\nPrivateFormat javaStream \u003d new PrivateFormat(new File(Config.SERIALISED_PATH));\nglobalFactory.setVersionDefinitions(javaStream.load());"
  ],
  "commentCreationDates": [
    "2006-07-19T01:27:21+02:00",
    "2006-07-23T09:25:06+02:00",
    "2006-07-24T02:43:30+02:00",
    "2006-07-26T07:18:58+02:00",
    "2006-08-14T20:40:55+02:00",
    "2006-08-18T06:48:07+02:00",
    "2006-08-18T23:07:41+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ohf.ihe.pdq.consumer.test.OtherPdqQuery.main",
          "source": "OtherPdqQuery.java:77"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.NullPointerException",
        "elements": [
          {
            "method": "org.eclipse.ohf.hl7v2.core.definitions.model.NamedDefnList.namedItemByName",
            "source": "NamedDefnList.java:32"
          },
          {
            "method": "org.eclipse.ohf.hl7v2.core.definitions.model.SegmentDefnList.itemByCode",
            "source": "SegmentDefnList.java:30"
          },
          {
            "method": "org.eclipse.ohf.hl7v2.core.message.model.Segment.checkDefinition",
            "source": "Segment.java:121"
          },
          {
            "method": "org.eclipse.ohf.hl7v2.core.message.model.Segment.setOwner",
            "source": "Segment.java:78"
          },
          {
            "method": "org.eclipse.ohf.hl7v2.core.message.model.NodeList.add",
            "source": "NodeList.java:91"
          },
          {
            "method": "org.eclipse.ohf.hl7v2.core.message.model.SegmentList.add",
            "source": "SegmentList.java:119"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "151023",
      "date": "2006-07-19T01:27:21+02:00",
      "product": "OHF",
      "component": "HL7V2",
      "severity": "blocker"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ohf.hl7v2.core.definitions.model.DataTypeDefn.escapable",
          "source": "DataTypeDefn.java:47"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "151023",
      "date": "2006-08-14T20:40:55+02:00",
      "product": "OHF",
      "component": "HL7V2",
      "severity": "blocker"
    }
  ],
  "groupId": "151023",
  "bugId": "151023",
  "date": "2006-07-19T01:27:21+02:00",
  "product": "OHF",
  "component": "HL7V2",
  "severity": "blocker"
}