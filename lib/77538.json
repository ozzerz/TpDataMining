{
  "comments": [
    "I get an assertion error using latest when trying to modify an existing\ncompilation unit.\nThis is critical for SWT. They would like to add statements inside existing code\nand this small plugin should do the work, but it fails because of a bug in the\nDefaultCommentMapper.\n\nSteps to reproduce:\n1) Install the attached plugin\n2) Start a self-hosting workspace\n3) Create a project P in which you add a compilation A with the contents attached.\n4) Click on the banana icon\n5) You should get the following stack trace in the .log:\norg.eclipse.jface.text.Assert$AssertionFailedException: Assertion failed: \n\tat org.eclipse.jface.text.Assert.isTrue(Assert.java:177)\n\tat org.eclipse.jface.text.Assert.isTrue(Assert.java:162)\n\tat org.eclipse.text.edits.TextEdit.\u003cinit\u003e(TextEdit.java:149)\n\tat org.eclipse.text.edits.MoveSourceEdit.\u003cinit\u003e(MoveSourceEdit.java:59)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCopySourceEdit(ASTRewriteAnalyzer.java:124)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(ASTRewriteAnalyzer.java:1209)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTRewriteAnalyzer.java:1192)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2448)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:249)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:241)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteMethodBody(ASTRewriteAnalyzer.java:916)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1436)\n\tat org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:489)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:249)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList(ASTRewriteAnalyzer.java:280)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTRewriteAnalyzer.java:298)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1249)\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:469)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:249)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList(ASTRewriteAnalyzer.java:280)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren(ASTRewriteAnalyzer.java:298)\n\tat\norg.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1229)\n\tat org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:286)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat\norg.eclipse.jdt.core.dom.InternalASTRewrite.rewriteAST(InternalASTRewrite.java:71)\n\tat org.eclipse.jdt.core.dom.AST.rewrite(AST.java:2709)\n\tat org.eclipse.jdt.core.dom.CompilationUnit.rewrite(CompilationUnit.java:834)\n\tat actions.SampleAction.run(SampleAction.java:94)\n\tat org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:298)\n\tat org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:221)\n\tat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:946)\n\tat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:896)\n\tat\norg.eclipse.jface.action.ActionContributionItem$8.handleEvent(ActionContributionItem.java:851)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:800)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2794)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2448)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1527)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1498)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:276)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:684)\n\tat org.eclipse.core.launcher.Main.main(Main.java:668)",
    "Created an attachment (id\u003d15577)\nInstall in your workspace\n",
    "Created an attachment (id\u003d15578)\nA.java test case\n",
    "As soon as we have a comment in the code, it is failing.",
    "Pls investigate:\n1. is this a regression from M2 ?\n2. can it be fixed (easily) for M3 ?",
    "Already happens in 3.1 M2 and 3.0.1...",
    "Understand what happens...\nDefaultCommentMapper return extended positions of parent for some specific nodes.\nThis is the case in this example: a TryStatement with one child Block.\nBut the block was this of foo method body (so ORIGINAL) but its parent was\ncreated and its start position \u003d -1 and length \u003d 0...!\n\u003d\u003e modify algorithm in DefaultCommentMapper not to return parent extended\npositions when parent is NOT ORIGINAL:\n\npublic int getExtendedEnd(ASTNode node) {\n  int end \u003d node.getStartPosition() + node.getLength();\n  if (this.trailingComments !\u003d null) {\n    int[] range \u003d (int[]) this.trailingComments.get(node);\n    if (range !\u003d null) {\n      if (range[0] \u003d\u003d -1 \u0026\u0026 range[1] \u003d\u003d -1) {\n        ASTNode parent \u003d node.getParent();\n        if (parent !\u003d null \u0026\u0026 ((parent.getFlags() \u0026 ASTNode.ORIGINAL) !\u003d 0)) {\n          return getExtendedEnd(parent);\n        }\n      } else {\n        Comment lastComment \u003d this.comments[range[1]];\n        end \u003d lastComment.getStartPosition() + lastComment.getLength();\n      }\n    }\n  }\n  return end-1;\n}",
    "All tests are green:\n- JDT/Core\n- DefaultCommentMapper\n- JDT/UI\n\n\u003d\u003e I think it\u0027s a good candidate for M3...",
    "Created an attachment (id\u003d15599)\nMore complete fix\n\nPrevious change was not enough as while rewriting parent may be original but\ndifferent. Then, returned extended position would be wrong although not equals\nto -1!\nA better solution is to resolved extended positions for this kind of nodes\nduring the initialzation and first visit of the ASTNodes hierarchy...\n",
    "Using this new patch, all JDT/Core tests are green but DefaultCommentMapper\nspecific tests failed...\n\nFurthermore, this may be time consuming. So for M3, as deeper investigation is\nneeded to complete this fix, only first version can be released and I\u0027d open a\nnew bug in case this one was fixed...",
    "Ok for me.",
    "In case a block has a new statement, I don\u0027t think it should be considered as\norignal anymore.",
    "Olivier, the problem is on parent, not on node itself.\nSo, even if you keep the same block content but just move it to a new parent\ncreated by the parser (ie. ORIGINAL), then you \u0027ll get wrong extended positions\nwith the fix written in comment 6...\nI\u0027ve opened bug 77644 to track this issue and put you in CC list",
    "Fixed.\n\nClick on banana icon now modifies correctly the file A.java...\n\n[jdt-core-internal]\nChange done in DefaultCommentMapper.getExtendedEnd(ASTNode) as described in\ncomment 6.\nTest case added: ASTRewritingMethodDeclTests#testMethodDeclChangesBug77538()",
    "Ok for M3",
    "Verified with build I200411040100 for 3.1M3"
  ],
  "commentCreationDates": [
    "2004-11-02T20:59:24+01:00",
    "2004-11-02T21:02:58+01:00",
    "2004-11-02T21:03:26+01:00",
    "2004-11-02T21:25:11+01:00",
    "2004-11-02T21:32:31+01:00",
    "2004-11-03T10:07:41+01:00",
    "2004-11-03T11:04:07+01:00",
    "2004-11-03T12:50:17+01:00",
    "2004-11-03T14:02:19+01:00",
    "2004-11-03T14:29:03+01:00",
    "2004-11-03T14:32:05+01:00",
    "2004-11-03T15:19:37+01:00",
    "2004-11-03T15:36:14+01:00",
    "2004-11-03T17:02:31+01:00",
    "2004-11-04T10:28:50+01:00",
    "2004-11-04T17:03:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.text.Assert$AssertionFailedException",
      "message": "Assertion failed:",
      "elements": [
        {
          "method": "org.eclipse.jface.text.Assert.isTrue",
          "source": "Assert.java:177"
        },
        {
          "method": "org.eclipse.jface.text.Assert.isTrue",
          "source": "Assert.java:162"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.\u003cinit\u003e",
          "source": "TextEdit.java:149"
        },
        {
          "method": "org.eclipse.text.edits.MoveSourceEdit.\u003cinit\u003e",
          "source": "MoveSourceEdit.java:59"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.getCopySourceEdit",
          "source": "ASTRewriteAnalyzer.java:124"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit",
          "source": "ASTRewriteAnalyzer.java:1209"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit",
          "source": "ASTRewriteAnalyzer.java:1192"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2448"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit",
          "source": "ASTRewriteAnalyzer.java:249"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit",
          "source": "ASTRewriteAnalyzer.java:241"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteMethodBody",
          "source": "ASTRewriteAnalyzer.java:916"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:1436"
        },
        {
          "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
          "source": "MethodDeclaration.java:489"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit",
          "source": "ASTRewriteAnalyzer.java:249"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList",
          "source": "ASTRewriteAnalyzer.java:280"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren",
          "source": "ASTRewriteAnalyzer.java:298"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:1249"
        },
        {
          "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
          "source": "TypeDeclaration.java:469"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisit",
          "source": "ASTRewriteAnalyzer.java:249"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitList",
          "source": "ASTRewriteAnalyzer.java:280"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doVisitUnchangedChildren",
          "source": "ASTRewriteAnalyzer.java:298"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:1229"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.accept0",
          "source": "CompilationUnit.java:286"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2450"
        },
        {
          "method": "org.eclipse.jdt.core.dom.InternalASTRewrite.rewriteAST",
          "source": "InternalASTRewrite.java:71"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.rewrite",
          "source": "AST.java:2709"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnit.rewrite",
          "source": "CompilationUnit.java:834"
        },
        {
          "method": "actions.SampleAction.run",
          "source": "SampleAction.java:94"
        },
        {
          "method": "org.eclipse.ui.internal.PluginAction.runWithEvent",
          "source": "PluginAction.java:298"
        },
        {
          "method": "org.eclipse.ui.internal.WWinPluginAction.runWithEvent",
          "source": "WWinPluginAction.java:221"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:946"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:896"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$8.handleEvent",
          "source": "ActionContributionItem.java:851"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:800"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2794"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2448"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1527"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1498"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:276"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:144"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:102"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:684"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:668"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "77538",
      "date": "2004-11-02T20:59:24+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "blocker"
    }
  ],
  "groupId": "77538",
  "bugId": "77538",
  "date": "2004-11-02T20:59:24+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "blocker"
}