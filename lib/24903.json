{
  "comments": [
    "Build 20021016\n\nWhen I upgraded my 20021015 workspace by importing external plugins on top of \nthe 20021015 plugins, I got the following stack trace in the console and all my \nbreakpoints were removed.\n\nI cannot reproduce the problem though.\n\n!ENTRY org.eclipse.debug.core 4 120 Oct 17, 2002 10:53:04.808\n!MESSAGE Error logged from Debug Core:\n!STACK 1\norg.eclipse.core.internal.resources.ResourceException: The resource tree is \nlocked for modifications.\n        at org.eclipse.core.internal.resources.Workspace.beginOperation\n(Workspace.java:116)\n        at org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1377)\n        at org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints\n(BreakpointManager.java:412)\n        at org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints\n(BreakpointManager.java:150)\n        at \norg.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints\n(BreakpointManager.java:277)\n        at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0\n(BreakpointManager.java:248)\n        at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints\n(BreakpointManager.java:257)\n        at org.eclipse.jdt.internal.debug.ui.JavaModelListener.elementChanged\n(JavaModelListener.java:48)\n        at org.eclipse.jdt.internal.core.JavaModelManager$3.run\n(JavaModelManager.java:710)\n        at org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:839)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:413)\n        at org.eclipse.jdt.internal.core.JavaModelManager.fire\n(JavaModelManager.java:705)\n        at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged\n(DeltaProcessor.java:1445)\n        at org.eclipse.core.internal.events.NotificationManager$1.run\n(NotificationManager.java:128)\n        at org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:839)\n        at org.eclipse.core.runtime.Platform.run(Platform.java:413)\n        at org.eclipse.core.internal.events.NotificationManager.notify\n(NotificationManager.java:143)\n        at org.eclipse.core.internal.events.NotificationManager.broadcastChanges\n(NotificationManager.java:67)\n        at org.eclipse.core.internal.resources.Workspace.broadcastChanges\n(Workspace.java:133)\n        at org.eclipse.core.internal.resources.Workspace.endOperation\n(Workspace.java:753)\n        at org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1383)\n        at org.eclipse.pde.internal.ui.wizards.imports.PluginImportWizard$2.run\n(PluginImportWizard.java:136)\n        at org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:98)\n!ENTRY org.eclipse.core.resources 1 4 Oct 17, 2002 10:53:04.808\n!MESSAGE The resource tree is locked for modifications.",
    "\n\n*** This bug has been marked as a duplicate of 16817 ***",
    "This is not a duplicate. The breakpoint manager listens to resource deltas \nvia \"POST_AUTO_BUILD\", but this request to load breakpoints is coming from the \njava debug UI, when the resource tree is locked. It does not appear that the \njava model support java element changes for \"POST_AUTO_BUILD\" as the core does. \nIs this true Jerome?",
    "Need an alternative way to fix this one.",
    "Yes this is true. However it supports PRE_AUTO_BUILD. Would this work for you?",
    "I do not think that PRE_AUTO_BUILD will work for us, as the Java model will not \nbe consistent. For example, when a method is removed, we also remove any method \nentry breakpoints on that method. If the model is not consistent, the method \nwill not appear as removed.",
    "We want to make sure that the java model is always consistent. Please open a \nbug if you have a case where it is not consistent.",
    "I\u0027m just looking at the javadoc - which states that it can be inconsistent. Is \nthis incorrect (ElementChangedEvent.PRE_AUTO_BUILD)\n\n\t * Note: this notification occurs during the corresponding \nPRE_AUTO_BUILD\n\t * resource change notification. The delta, which is notified here, \nonly contains\n\t * information relative to the previous JavaModel operations (i.e. \nignores the\n\t * possible resources which have changed outside Java operations). In\n\t * particular, it is possible that the JavaModel be inconsistent with \nrespect to\n\t * resources, which got modified outside JavaModel operations (it will \nonly be\n\t * fully consistent once the POST_CHANGE notification has occurred).",
    "You\u0027re right. Sorry. We talked about changing this, but we never did it. \nMoreover if a builder was to modify a .java file, PRE_AUTO_BUILD would not \nwork. Could you please enter a feature request for a POST_AUTO_BUILD \nnotification (where we would ensure that the java model is consistent)?",
    "*** Bug 25511 has been marked as a duplicate of this bug. ***",
    "*** Bug 24750 has been marked as a duplicate of this bug. ***",
    "I experienced this problem again when starting build 20021113 for the first\ntime.  I will attach the log file.",
    "Never mind, I realize now that this isn\u0027t the error I got on startup.  It\noccurred with the 20021105 build when I was doing plugin imports.  The stack\ntrace I got today is identical to the one in the original bug report, so I won\u0027t\nbother attaching it.",
    "We need to find an alternate solution to this problem, if bug 25513 will not be \nfixed for 2.1",
    "*** Bug 28661 has been marked as a duplicate of this bug. ***",
    "Fixed. This particular problem is caused by the fact that we were explicitly \nsetting the \"registered\" attribute for all breakpoints when the breakpoint \nmarkers are loaded and breakpoint objects are created. Since the default value \nof the registered attribute is \"true\", there is no reason to set it.\n\nModified the code to only update those breakpoints that have an \nincorrect \"registered\" value (which should not happen). The only way it can \nhappen is if a client adds an unregistered breakpoint to the breakpoint manager.\n\n ",
    "Please verify, Darin (S).",
    "Verified code."
  ],
  "commentCreationDates": [
    "2002-10-17T11:32:03+02:00",
    "2002-10-17T14:40:28+02:00",
    "2002-10-23T17:53:09+02:00",
    "2002-10-23T17:53:48+02:00",
    "2002-10-23T18:04:43+02:00",
    "2002-10-23T18:27:50+02:00",
    "2002-10-24T09:46:58+02:00",
    "2002-10-24T14:28:59+02:00",
    "2002-10-24T14:54:53+02:00",
    "2002-10-29T20:15:08+01:00",
    "2002-11-12T20:23:33+01:00",
    "2002-11-13T15:13:13+01:00",
    "2002-11-13T15:15:38+01:00",
    "2002-11-14T18:30:08+01:00",
    "2002-12-19T13:58:35+01:00",
    "2003-01-21T22:48:26+01:00",
    "2003-01-21T22:49:00+01:00",
    "2003-01-23T00:12:43+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "The resource tree is  locked for modifications.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Workspace.beginOperation",
          "source": "Workspace.java:116"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1377"
        },
        {
          "method": "org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints",
          "source": "BreakpointManager.java:412"
        },
        {
          "method": "org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints",
          "source": "BreakpointManager.java:150"
        },
        {
          "method": "org.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints",
          "source": "BreakpointManager.java:277"
        },
        {
          "method": "org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0",
          "source": "BreakpointManager.java:248"
        },
        {
          "method": "org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints",
          "source": "BreakpointManager.java:257"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.JavaModelListener.elementChanged",
          "source": "JavaModelListener.java:48"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager$3.run",
          "source": "JavaModelManager.java:710"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:839"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.fire",
          "source": "JavaModelManager.java:705"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged",
          "source": "DeltaProcessor.java:1445"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager$1.run",
          "source": "NotificationManager.java:128"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:839"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:413"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.notify",
          "source": "NotificationManager.java:143"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.broadcastChanges",
          "source": "NotificationManager.java:67"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastChanges",
          "source": "Workspace.java:133"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:753"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1383"
        },
        {
          "method": "org.eclipse.pde.internal.ui.wizards.imports.PluginImportWizard$2.run",
          "source": "PluginImportWizard.java:136"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:98"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "24903",
      "date": "2002-10-17T11:32:03+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "24903",
  "bugId": "24903",
  "date": "2002-10-17T11:32:03+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}