{
  "comments": [
    "Right now help button is optional in JFace wizards and preference dialogs but \nit only shows up if any of the pages have help available.\n\nThis enhancement allows products to enable help with a master switch and make \nit show up all the time. When the button is pressed, the event is fired that \nis equivalent to the help key (F1 on Windows). In Eclipse 3.1+, this event \nopens the new help pane.\n\nThe attached implementation adds a master switch to the JFaceResources class. \nThis switch can be turned on from the workbench advisor. The attached patch \nalso turns it on from IDEWorkbenchAdvisor for the Eclipse platform. RCP \napplications are not required to do it. By default, the flag is off, which is \nthe current behaviour.\n\nThe button is rendered as an image link if the help image is supplied, or a \ntext hyperlink otherwise.",
    "Created an attachment (id\u003d26732)\nJFace patch\n",
    "Created an attachment (id\u003d26733)\nUI IDE patch\n",
    "Created an attachment (id\u003d26734)\nThe help link image (image in the CVS patch is likely corrupted)\n",
    "Just to add additional context, this work is a result of the concern that it \nis not obvious that the new dynamic help pane is available for dialogs. In \n3.1, it can only be opened using the help keyboard trigger (e.g. F1). The \nfeeling is that there should be a more explicit way of performing the action \n(also more visible to the user), so that keyboard trigger becomes just an \naccelerator for it.",
    "Curtis, please review the patch, make sure it still works and update it if went out of sync with the UI code in HEAD.",
    "Created an attachment (id\u003d32999)\npatch for both projects\n\nUpdated the patch. It seems to work fine. However, in the New wizard there is already a help icon below the tree, and I\u0027ve never seen it enabled. I think it would confuse the user to have two here. Does it have a different purpose than this one?\n\nAlso, to comment on the placement of the help icon, I would actually prefer to see it where the existing one is in the new wizard (just my opinion). Having it in the button bar at the bottom makes it look slightly out of place. ",
    "Once the initial patch is confirmed to be working well, we will remove the help icon in the \u0027New\u0027 dialog by making the help icon in the button bar assume that responsibility.\n\nThe location of the help icon in the button bar was chosen after a long debate and still not completely fixed. Note that Mac has the help icon in the far left location. This was one of the options but it does not work well for some use cases in Eclipse (Search dialog, for example) that have buttons in the far left side of the button bar.\n\nI suggest we go ahead with the updated patch and tweak the code as necessary based on feedback from users.",
    "Kim, typically on a mac where is the help button located in a dialog? button bar? top left?  I wonder if we need JFace to be aware of button location",
    "Mmm.  I cant find any at the moment but IIRC they\u0027re located in the bottom right corner.",
    "Created an attachment (id\u003d33071)\nmacosx screenshots\n\nSome Mac dialogs to look at.. the help button placement doesn\u0027t appear to be consistent.",
    "When designing the help button/link solution for this patch, we used the following rationale:\n\n1) The solution should just work for all the current dialogs\n2) The solution must not mess with the muscle memory of the current users (i.e. the current buttons must stay where they are today)\n3) The solution must be subtle i.e. not the full-sized Help button\n4) The solution must support two modes - an optional help image and a simple hyperlink if no image is provided.\n5) Applications should have some control over the \u0027master switch\u0027.\n\nWe addressed 5) by adding static API to JFace that must be activated by the application configurer in order to show up. This allows us to use it in Eclipse SDK while other products/applications can elect to pass\n\nWe addressed 1) and 2) by adding the button/link to the left of the existing buttons but not hard left because it would affect 2) for a class of dialogs that already have buttons hard left.",
    "Susan I will take this one.",
    "I don\u0027t think we want the ? button floating in the middle of the dialog next to the Back button - it should be right justified and the others left justified.\n\nI also tried it with not setting and image but enabling help (I commented out the image setting code).\n\nI got the hyperlink no problem but clicking on it generated two exceptions\n\n!ENTRY org.eclipse.help.base 4 0 2006-01-18 16:57:17.578\n!MESSAGE Errors while indexing\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.ui.internal.intro.impl.model.IntroSearchParticipant.getAllDocuments(IntroSearchParticipant.java:70)\n\tat org.eclipse.help.internal.search.IndexingOperation.getAddedDocuments(IndexingOperation.java:383)\n\tat org.eclipse.help.internal.search.IndexingOperation.execute(IndexingOperation.java:81)\n\tat org.eclipse.help.internal.search.SearchManager.updateIndex(SearchManager.java:582)\n\tat org.eclipse.help.internal.search.SearchManager.ensureIndexUpdated(SearchManager.java:546)\n\tat org.eclipse.help.internal.search.federated.IndexerJob.run(IndexerJob.java:27)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n\n!ENTRY org.eclipse.core.jobs 4 2 2006-01-18 16:57:17.812\n!MESSAGE An internal error occurred during: \"Dynamic Help Search\".\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.ui.internal.intro.impl.model.IntroSearchParticipant.getAllDocuments(IntroSearchParticipant.java:70)\n\tat org.eclipse.help.internal.search.IndexingOperation.getAddedDocuments(IndexingOperation.java:383)\n\tat org.eclipse.help.internal.search.IndexingOperation.execute(IndexingOperation.java:81)\n\tat org.eclipse.help.internal.search.SearchManager.updateIndex(SearchManager.java:582)\n\tat org.eclipse.help.internal.search.SearchManager.ensureIndexUpdated(SearchManager.java:546)\n\tat org.eclipse.help.internal.search.SearchManager.search(SearchManager.java:472)\n\tat org.eclipse.help.ui.internal.views.DynamicHelpPart.performSearch(DynamicHelpPart.java:264)\n\tat org.eclipse.help.ui.internal.views.DynamicHelpPart.access$5(DynamicHelpPart.java:258)\n\tat org.eclipse.help.ui.internal.views.DynamicHelpPart$3.run(DynamicHelpPart.java:247)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",
    "Tod, we investigated hard left image placement. When we did it, we found some use cases of dialogs that place buttons in that position. There used to be more, but right now I can only find Search dialog. In that case, it is not worth preserving and I agree with you on moving it hard left.\n\nThe second problem you encountered looks like a problem in Help, not in the patch itself. We should address it separately as a help bug since the stack info does not imply any problems with the hyperlink itself.\n\nCurtis, can you do the following:\n\n1) Modify the patch so that the help control is left justified\n2) Investigate the NPE when hyperlink is used (odd though - it should also happen for the image)\n3) Attach the new patch and also attach the Search dialog once the modification is made",
    "Tod, can you confirm it fails only when you run as an eclipse application, as opposed to a product? This search participant was assuming we were running in a product - see bug 124412.",
    "It was fine when I ran it as a product.",
    "Curtis what is the status of this",
    "I had a first crack at it and reviewed it with Dejan, and we both noticed a fair amount of code being duplicated in each dialog, and insufficient coverage - only some of the dialogs were covered. So we decided to try and push this down one level for more coverage and less duplication.\n\nI am currently working on having this at the TrayDialog level. The rationale being, if your dialog is non-trivial enough to warrant a tray, it is also non-trivial enough to deserve help. Any dialog that subclasses TrayDialog would get the button, and the button would behave exactly as if you hit F1 (the button will not receive focus). This does not apply if you override the createButtonBar implementation, but you can still override and explicitly add the button in a specific place in the dialog if you want. This is for dialogs that have more complicated button bars like the SelectionStatusDialog.\n\nThere are some complications in dialogs like the launch config dialog and selection status dialog that have progress bars and status lines in the button bar, so I am going through these to make sure they are ok.\n\nLet me know if you have any concerns with this approach. If not, I will have a patch ready for you soon.",
    "Your approach sounds fine to me.",
    "(In reply to comment #18)\n\u003e button will not receive focus). This does not apply if you override the\n\u003e createButtonBar implementation, but you can still override and explicitly add\n\u003e the button in a specific place in the dialog if you want.\n\nCurtis, I assume the above means that TrayDialog will have a useful protected method to create a help control (button/link) that subclasses which elect to override \u0027createButtonBar\u0027 can call themselves. Is it correct?",
    "Correct",
    "Created an attachment (id\u003d33608)\nproposed patch\n\n\nHere\u0027s the patch for:\n\norg.eclipse.debug.ui\norg.eclipse.jface\norg.eclipse.search\norg.eclipse.ui.ide\norg.eclipse.ui.workbench\n\nRemember to add the image after applying as placing it in a patch corrupts it.\n\nNotes:\n\n- Moved help control support into TrayDialog. The TrayDialog implementation of createButtonBar checks whether the help control should be added, and if so, adds it. It also provides a new API method createHelpControl for those special dialogs that have a custom button bar, so that they don\u0027t have to reimplement the control and do the logic themselves.\n- Using Control instead of Widget for the help button/link because it has to be something that can accept a layout data (i.e. we have to be able to lay it out), and this is only introduced at the Control level.\n- The behavior of the help control is identical to the keyboard context help (e.g. F1 on windows). The control does not receive focus. After searching for who does the logic of climbing the widget tree looking for context help, it appears to be the OS itself doing this, as it\u0027s going through low level SWT callbacks. I\u0027ve seen SWT emulate this behavior to avoid problems in the browser widget, and I do the same with the help button. The logic is quite simple and short anyway.\n- Added the isHelpAvailable and setHelpAvailable API at the TrayDialog level. Also, PreferenceDialog was already providing this as they would show a help push button at the right of the button bar. I removed these two methods in PreferenceDialog even though they\u0027re API, as it won\u0027t break anyone - I\u0027m taking it out and putting it at a lower level. I don\u0027t think this is API breakage, but correct me if I\u0027m wrong.\n- Modified WizardDialog to no longer assume that the composite returned by createButtonBar is only one level deep. It doesn\u0027t state this anywhere in API and is in fact no longer true with the addition of the help button. We are allowed to assume the parent composite passed into createButtonsForButtonBar has a grid layout. This isn\u0027t directly stated but is implied by the createButton method javadoc.\n- Made the superclass of the SearchDialog (ExtendedDialogWindow) subclass TrayDialog instead of Dialog. The search team hasn\u0027t yet migrated their dialogs to TrayDialog.. there are others but I wanted to do this one now because SearchDialog needs to have the help control so needs to be a subclass of TrayDialog somewhere along the line.\n- There are two instances where code is still duplicated: SelectionStatusDialog and LaunchConfigurationsDialog have special button bars, and they previously called super.createButtonBar but we don\u0027t want this anymore because that will create the help button in the wrong place. So for special dialogs like these (I\u0027ve only seen two), you have to copy the Dialog implementation of createButtonBar. It\u0027s not that long though, and not that frequent.\n\nI don\u0027t think you have access to debug and search so this will have to be coordinated a little. If you apply all but debug and search you won\u0027t see any problems in the search (just no help button) but in the launch config dialog the help button will show up in the wrong place - in the middle of the dialog instead of to the far left. This is because it assumes all the button bar buttons are to the far right and places an invisible progress bar and label to the left of them. The patch to debug no longer makes this assumption and explicitly adds the help control in the right place.\n\nTODOs for me:\n\n- Fix the short dialog problem - see bug 116197.\n- Report missing context help. I found quite a few cases as I was testing.\n",
    "Tod, how is the patch application going? Since we are adding new APIs in this patch and touching some existing ones, we should give ourselves extra margin to be done in time for M5.",
    "I was waiting until Curtis thought it was ready to apply it. See comment 22",
    "Ah... :-)\n\nCurtis\u0027s TODOs are in the UA space - things we will address in parallel. No need to wait on their resolution.",
    "Some issues I have.\n\nJFaceResources getHelpButtonImage leaks an image and creates it even if it is not required. You should be storing the image in the image registry via a descriptor and looking it up like all of the others.\n\nI don\u0027t like that API anyways as it is inconsistent with how we do images in general. You should have a public constant for the key for that image and use JFaceResources#getImage(). Look at other references to getImage().\n\nThe code in SelectionStatusDialog looks pretty messy - casting layour data etc. when you have it right there makes things pretty hard to follow\n\n  fStatusLine \u003d new MessageLine(composite);\n        fStatusLine.setAlignment(SWT.LEFT);\n        fStatusLine.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n        fStatusLine.setErrorStatus(null);\n        fStatusLine.setFont(font);\n        if (fStatusLineAboveButtons \u0026\u0026 (isHelpAvailable() || JFaceResources.isDialogHelpAvailable())) {\n        \t((GridData)fStatusLine.getLayoutData()).horizontalSpan \u003d 2;\n        \tcreateHelpControl(composite);\n        }",
    "Image leak - will fix, thanks\n\nJFaceResources API - This image is special because it is customizable (setHelpButtonImage). We still need a way for products and/or applications to set this.. any suggestions?\n\nMessy code - This is a complicated button bar (has a status line with two modes/arrangements), so there\u0027s only so much I can do. I\u0027ll simplify as much as I can though, and comment what is least obvious.\n",
    "Make the key API. Then they can replace the descriptor at the key with thier own if they want. We would end up with special API for all of our icons if we did that.\n\nLook at Dialog to see examples - this is how we handle other special images like the info, warning and error images.\n\nHere is what I meant by avoiding all of that nasty casting:\n\nfStatusLine \u003d new MessageLine(composite);\n        fStatusLine.setAlignment(SWT.LEFT);\nGridData statusData \u003d new GridData(GridData.FILL_HORIZONTAL);\n       \n        fStatusLine.setErrorStatus(null);\n        fStatusLine.setFont(font);\n        if (fStatusLineAboveButtons \u0026\u0026 (isHelpAvailable() ||\nJFaceResources.isDialogHelpAvailable())) {\n               statusData.horizontalSpan \u003d 2;\n                createHelpControl(composite);\n\n fStatusLine.setLayoutData(statusData);\n        }",
    "Created an attachment (id\u003d33900)\nrevised patch\n\nRevised patch. Tod, can you review \u0026 submit along with icon?\n\n- switch help image API to id only (added in Dialog as there are already other image ids in Dialog that are not used directly in Dialog).\n- leak fixed by using image registry\n- removed ugly casting\n- updated launch config part (patch was stale)",
    "I have released the final patch with one change - I moved the dialogHelpAvailable flag to TrayDialog as it really doesn\u0027t have anything to do with the JFaceResources.",
    "As long as it is static and can serve as a master switch for the entire app, I am fine with it.",
    "Hmm.. looks like only part of the patch was released - the debug and search parts are not there yet. As a result, the help button is not in the correct position for the launch config dialog, and does not appear in search dialog. Who do I talk to in order to get these parts in?\n",
    "I am not a committer for debug or search. Please log a report to them.\n\nDani Megert owns search and Darin Wright owns debug.",
    "Verified in 20060113-1200"
  ],
  "commentCreationDates": [
    "2005-08-31T21:26:17+02:00",
    "2005-08-31T21:27:32+02:00",
    "2005-08-31T21:27:49+02:00",
    "2005-08-31T21:31:10+02:00",
    "2005-08-31T22:25:01+02:00",
    "2006-01-13T17:12:13+01:00",
    "2006-01-13T19:16:35+01:00",
    "2006-01-13T19:25:30+01:00",
    "2006-01-13T19:33:15+01:00",
    "2006-01-13T20:00:13+01:00",
    "2006-01-16T15:10:05+01:00",
    "2006-01-16T18:44:25+01:00",
    "2006-01-18T14:54:02+01:00",
    "2006-01-18T21:56:47+01:00",
    "2006-01-18T22:05:29+01:00",
    "2006-01-18T22:54:20+01:00",
    "2006-01-19T13:31:16+01:00",
    "2006-01-24T16:28:05+01:00",
    "2006-01-24T16:40:11+01:00",
    "2006-01-24T16:44:00+01:00",
    "2006-01-24T16:50:21+01:00",
    "2006-01-24T17:11:19+01:00",
    "2006-01-25T16:41:03+01:00",
    "2006-01-31T19:08:02+01:00",
    "2006-01-31T19:14:29+01:00",
    "2006-01-31T19:27:26+01:00",
    "2006-01-31T20:11:38+01:00",
    "2006-01-31T21:01:23+01:00",
    "2006-01-31T21:23:58+01:00",
    "2006-01-31T22:36:02+01:00",
    "2006-02-03T19:08:22+01:00",
    "2006-02-03T19:56:14+01:00",
    "2006-02-07T20:58:00+01:00",
    "2006-02-07T21:02:49+01:00",
    "2006-02-13T19:56:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.intro.impl.model.IntroSearchParticipant.getAllDocuments",
          "source": "IntroSearchParticipant.java:70"
        },
        {
          "method": "org.eclipse.help.internal.search.IndexingOperation.getAddedDocuments",
          "source": "IndexingOperation.java:383"
        },
        {
          "method": "org.eclipse.help.internal.search.IndexingOperation.execute",
          "source": "IndexingOperation.java:81"
        },
        {
          "method": "org.eclipse.help.internal.search.SearchManager.updateIndex",
          "source": "SearchManager.java:582"
        },
        {
          "method": "org.eclipse.help.internal.search.SearchManager.ensureIndexUpdated",
          "source": "SearchManager.java:546"
        },
        {
          "method": "org.eclipse.help.internal.search.federated.IndexerJob.run",
          "source": "IndexerJob.java:27"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 13,
      "bugId": "108509",
      "date": "2006-01-18T21:56:47+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.ui.internal.intro.impl.model.IntroSearchParticipant.getAllDocuments",
          "source": "IntroSearchParticipant.java:70"
        },
        {
          "method": "org.eclipse.help.internal.search.IndexingOperation.getAddedDocuments",
          "source": "IndexingOperation.java:383"
        },
        {
          "method": "org.eclipse.help.internal.search.IndexingOperation.execute",
          "source": "IndexingOperation.java:81"
        },
        {
          "method": "org.eclipse.help.internal.search.SearchManager.updateIndex",
          "source": "SearchManager.java:582"
        },
        {
          "method": "org.eclipse.help.internal.search.SearchManager.ensureIndexUpdated",
          "source": "SearchManager.java:546"
        },
        {
          "method": "org.eclipse.help.internal.search.SearchManager.search",
          "source": "SearchManager.java:472"
        },
        {
          "method": "org.eclipse.help.ui.internal.views.DynamicHelpPart.performSearch",
          "source": "DynamicHelpPart.java:264"
        },
        {
          "method": "org.eclipse.help.ui.internal.views.DynamicHelpPart.access$5",
          "source": "DynamicHelpPart.java:258"
        },
        {
          "method": "org.eclipse.help.ui.internal.views.DynamicHelpPart$3.run",
          "source": "DynamicHelpPart.java:247"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 1,
      "commentIndex": 13,
      "bugId": "108509",
      "date": "2006-01-18T21:56:47+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "enhancement"
    }
  ],
  "groupId": "108509",
  "bugId": "108509",
  "date": "2005-08-31T21:26:17+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "enhancement"
}