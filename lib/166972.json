{
  "comments": [
    "The IPlatformRunnable interface has been deprecated with the release of the new app model in bug 109893.  I will attach a patch to migrate the org.eclipse.ui.ide.workbench application to the new IApplication interface.",
    "Created an attachment (id\u003d55146)\npatch\n\nThis patch adds the new stop method to IDEApplication.  The main advantage to moving to the new IApplication interface is to give an external way to shutdown the application.  Currently there is no way to force an application to shutdown.  This causes problems when the framework is shutdown because it leaves the application running and does not give it a chance to shutdown.\n\nI\u0027m not sure if the code I put in the stop() method is the best way to force the workbench to shutdown.  Can someone on the UI team review this and let me know what the best practice would be here.  We have updated the RCP templates to use this approach.  Please let me know if there is a better way.  Thanks.",
    "See WorkbenchWindow line 597 for how we close the Workbench. I would be very reluctant to make any changes to this without a strong reason.\n\nI\u0027ll commit the rest of the patch however.",
    "The test suites will not run if I apply this patch. You can replicate this by loading org.eclipse.platform.ui.tests from HEAD and running the UiTestSuite configuration\n\nHere is the exception.\n\n\n!ENTRY org.eclipse.equinox.app 4 0 2006-12-07 18:59:22.184\n!MESSAGE Error in invoking method.\n!STACK 0\njunit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat junit.framework.Assert.assertNotNull(Assert.java:217)\n\tat junit.framework.Assert.assertNotNull(Assert.java:210)\n\tat org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:41)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:522)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:147)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:170)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:339)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:283)\n\tat org.eclipse.core.launcher.Main.run(Main.java:984)\n\tat org.eclipse.core.launcher.Main.main(Main.java:959)\n",
    "This is because org.eclipse.pde.internal.junit.runtime.UITestApplication needs to be migrated to an IApplication also.  I will attach a patch to the org.eclipse.pde.junit.runtime project.\n\nTod I don\u0027t really understand comment 2.  Do you have a recommended approach we should use in the IApplication.stop() method or is the patch good enough here?  (it does call IWorkbench.close())",
    "tom, I am not sure pde junit applications can migrate.\n\nsometimes people target an RCP drop and want to run plugin junit tests.  In this case, pde launches the junit apps that are in the host.\n\nIf the rcp target is 3.2 based or earlier, the pde junit apps will not run if they are upgraded to implement IApplication.",
    "Created an attachment (id\u003d55273)\npde.junit.runtime patch\n\nHere is a patch to UITestApplication to allow it to handle both the old IPlatformRunnable objects and IApplication objects as application types.\n\nWassim, can you please release this fix?",
    "I pointed you to how we do it. You should not close the workbench yourself - the workbench plug-in stop() will handle it for you.\n\nCould you log a bug to PDE about the PDE changes? I would like to make this dependant on it and I want to wait until they are ready before I release it.",
    "Opened PDE bug 167163",
    "Tod and I discussed this a bit more.  It looks like the javadoc for IApplication needs to be improved.  It was unclear when the stop() method would be called.  This method is *only* called to force an application to exit.  It is not called under normal conditions when an application exits normally.\n\nI updated the IApplication javadoc to clear this up (hopefully).\n\nGiven that I think the patch is a reasonable way to force the ide application to exit.",
    "I will apply Toms patch when Bug 167163 is fixed.",
    "will this patch go into M4?  Also, what, if anything, will happen if the PDE fix is in and the workbench fix is not?",
    "No - as I am dependant on Bug 167163 I had to wait until it was in and it is too late now for M4.\n\nTom is there any issue with this?",
    "It should not pose any functional issues for M4.  The motivation behind migrating the IDE was to get more testing on the M4 build on the new app model (and get rid of your deprecation errors).  The fix in PDE is able to handle both old IPlatformRunnables and IApplicaitons.",
    "Patch released for build \u003e20060109",
    "Verified in 20070206-0010"
  ],
  "commentCreationDates": [
    "2006-12-06T17:14:55+01:00",
    "2006-12-06T17:20:27+01:00",
    "2006-12-07T18:41:50+01:00",
    "2006-12-07T19:14:31+01:00",
    "2006-12-07T20:33:28+01:00",
    "2006-12-07T20:36:41+01:00",
    "2006-12-07T20:40:25+01:00",
    "2006-12-07T20:51:55+01:00",
    "2006-12-07T21:08:01+01:00",
    "2006-12-07T22:09:59+01:00",
    "2006-12-08T13:28:09+01:00",
    "2006-12-12T06:21:26+01:00",
    "2006-12-12T13:07:26+01:00",
    "2006-12-12T13:48:48+01:00",
    "2007-01-09T15:02:58+01:00",
    "2007-02-06T18:52:12+01:00"
  ],
  "traces": [
    {
      "exceptionType": "junit.framework.AssertionFailedError",
      "elements": [
        {
          "method": "junit.framework.Assert.fail",
          "source": "Assert.java:47"
        },
        {
          "method": "junit.framework.Assert.assertTrue",
          "source": "Assert.java:20"
        },
        {
          "method": "junit.framework.Assert.assertNotNull",
          "source": "Assert.java:217"
        },
        {
          "method": "junit.framework.Assert.assertNotNull",
          "source": "Assert.java:210"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.UITestApplication.run",
          "source": "UITestApplication.java:41"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod",
          "source": "EclipseAppContainer.java:522"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:147"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:104"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:74"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:354"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:170"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:339"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:283"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:984"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:959"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "166972",
      "date": "2006-12-07T19:14:31+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "166972",
  "bugId": "166972",
  "date": "2006-12-06T17:14:55+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}