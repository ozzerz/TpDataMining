{
  "comments": [
    "Build ID: tptp.sdk-TPTP-4.4.0-200705080100A.zip\n\nSteps To Reproduce:\n1.Import the WAS Symptom Catalog\n2.Used getExpressionJavaSource api to convert XPATH to JAVA code.\n3.Following exception get thrown.\norg.eclipse.tptp.platform.provisional.fastxpath.compiler.CodeGenerationError: ----------\n1. ERROR in C:\\Documents and Settings\\Administrator\\Local Settings\\Temp\\fastxpath-temp\\TestXPath_1384.java (at line 7)\n\tif ( (  (  obj.getMsg() .indexOf( \"SRVE0020E:\u0026quot;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"JSP 1.1 Processor\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"class: org/apache/jasper/compiler/JspUtil, method: parseXMLDoc signature: (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;) Incompatible object argument for function call\u0026quot;: com.ibm.servlet.engine.webapp.WebAppErrorReport: (class: org/apache/jasper/compiler/JspUtil, method: parseXMLDoc signature: (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;) Incompatible object argument for function call\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"javax.servlet.ServletException.\u0026lt;init\u0026gt;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.websphere.servlet.error.ServletErrorReport.\u0026lt;init\u0026gt;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppErrorReport.\u0026lt;init\u0026gt;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppDispatcherResponse.sendError\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"org.apache.jasper.runtime.JspServlet.unknownException\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"org.apache.jasper.runtime.JspServlet.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"javax.servlet.http.HttpServlet.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.StrictServletInstance.doService\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.StrictLifecycleServlet._service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.IdleServletState.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.StrictLifecycleServlet.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.ServletInstance.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.ValidServletReferenceState.dispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.ServletInstanceReference.dispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.handleWebAppDispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.dispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.forward\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.srt.WebAppInvoker.handleInvocationHook\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.invocation.CachedInvocation.handleInvocation\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.invocation.CacheableInvocationContext.invoke\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.srp.ServletRequestProcessor.dispatchByURI\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.OSEListenerDispatcher.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.SQEventListenerImp$ServiceRunnable.run\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.SQEventListenerImp.notifySQEvent\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.serverqueue.SQEventSource.notifyEvent\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.serverqueue.SQWrapperEventSource$SelectRunnable.notifyService\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.serverqueue.SQWrapperEventSource$SelectRunnable.run\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.outofproc.OutOfProcThread$CtlRunnable.run\") \u003e -1 )) \u0026\u0026 (  (  obj.getMsg() .indexOf( \"java.lang.Thread.run\") \u003e -1 )))))))))))))))))))))))))))))))) ^\nSyntax error, insert \") Statement\" to complete IfStatement\n----------\n1 problem (1 error)\n\tat org.eclipse.tptp.platform.provisional.fastxpath.compiler.JDTCompiler.generateClass(JDTCompiler.java:252)\n\tat org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerHelper.buildCompiledExpression(CompilerHelper.java:308)\n\tat org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource(FastXPathEngine.java:294)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlTransformer.transformXpathToACTL(ActlTransformer.java:47)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.ConvertXpathToACTL(ActlConverter.java:274)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.createACTEventSelector(ActlConverter.java:213)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.createACTFilterRule(ActlConverter.java:149)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.createACTRule(ActlConverter.java:130)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convertAndAppendXpathToAct(ActlConverterUtils.java:711)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convertXpathsToAct(ActlConverterUtils.java:195)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convertXpathToActRule(ActlConverterUtils.java:131)\n\tat com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convert(ActlConverterUtils.java:111)\n\tat com.ibm.etools.ac.act.actions.ConvertAction$ConvertJob.run(ConvertAction.java:142)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n\nMore information:",
    "I think this one is for you Marius.",
    "Please can you post the XPath expressions that have problems.\nWhich WAS Symptom catalog did you use?",
    "\u003cexpression:xpathExpression\u003e/CommonBaseEvent [contains(@msg, \u0027SRVE0020E:\u0026amp;quot;\u0027) and contains(@msg, \u0027JSP 1.1 Processor\u0027) and contains(@msg, \u0027class: org/apache/jasper/compiler/JspUtil, method: parseXMLDoc signature: (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;) Incompatible object argument for function call\u0026amp;quot;: com.ibm.servlet.engine.webapp.WebAppErrorReport: (class: org/apache/jasper/compiler/JspUtil, method: parseXMLDoc signature: (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;) Incompatible object argument for function call\u0027) and contains(@msg, \u0027javax.servlet.ServletException.\u0026amp;lt;init\u0026amp;gt;\u0027) and contains(@msg, \u0027com.ibm.websphere.servlet.error.ServletErrorReport.\u0026amp;lt;init\u0026amp;gt;\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.WebAppErrorReport.\u0026amp;lt;init\u0026amp;gt;\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.WebAppDispatcherResponse.sendError\u0027) and contains(@msg, \u0027org.apache.jasper.runtime.JspServlet.unknownException\u0027) and contains(@msg, \u0027org.apache.jasper.runtime.JspServlet.service\u0027) and contains(@msg, \u0027javax.servlet.http.HttpServlet.service\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.StrictServletInstance.doService\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.StrictLifecycleServlet._service\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.IdleServletState.service\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.StrictLifecycleServlet.service\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.ServletInstance.service\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.ValidServletReferenceState.dispatch\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.ServletInstanceReference.dispatch\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.handleWebAppDispatch\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.dispatch\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.forward\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.srt.WebAppInvoker.handleInvocationHook\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.invocation.CachedInvocation.handleInvocation\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.invocation.CacheableInvocationContext.invoke\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.srp.ServletRequestProcessor.dispatchByURI\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.OSEListenerDispatcher.service\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.SQEventListenerImp$ServiceRunnable.run\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.SQEventListenerImp.notifySQEvent\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.serverqueue.SQEventSource.notifyEvent\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.serverqueue.SQWrapperEventSource$SelectRunnable.notifyService\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.serverqueue.SQWrapperEventSource$SelectRunnable.run\u0027) and contains(@msg, \u0027com.ibm.servlet.engine.oselistener.outofproc.OutOfProcThread$CtlRunnable.run\u0027) and contains(@msg, \u0027java.lang.Thread.run\u0027)]\u003c/expression:xpathExpression\u003e\n\nIts from IBM_WebSphere_Application_Server_Standard.symptom catalog.",
    "Moving this to the Models compoment which includes the FastXPath library.",
    "Created an attachment (id\u003d68651)\nPatch for the problem\n\nThe problem occurs because the code is generated with a space between the \u0027(\u0027 and the \u0027\"\u0027 characters. In the CompilerPostProcessor we have specific logic to identify \u0027(\u0027 inside user specified strings which becomes unusable due to the additional space in the generated code.\n\nIn the patch i ensure that the space characters are handled correctly .i.e. taken into account while looking for user specified \"(\".",
    "Marius,\n    The problem with the xpath failing to compile has been fixed in the patch. \n\nAlso, i believe that org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource throwing an exception when the expression cannot be compiled is the expected behavior .i.e. works as designed. So i dont think we need to do anything for this.\n\nCan you please review the patch and let me know if its ok.\n\n",
    "Thanks Rohit, I\u0027ll check in this as I get the approval.",
    "Thanks Rohit, I\u0027ll check in this as soon as I get the approval.",
    "Fix in CVS."
  ],
  "commentCreationDates": [
    "2007-05-17T17:29:10+02:00",
    "2007-05-17T19:30:33+02:00",
    "2007-05-17T19:34:08+02:00",
    "2007-05-17T19:48:29+02:00",
    "2007-05-22T17:56:49+02:00",
    "2007-05-24T21:22:05+02:00",
    "2007-05-24T21:26:53+02:00",
    "2007-05-30T23:05:00+02:00",
    "2007-05-30T23:05:25+02:00",
    "2007-05-31T16:09:52+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CodeGenerationError",
      "message": "---------- 1. ERROR in C:\\Documents and Settings\\Administrator\\Local Settings\\Temp\\fastxpath-temp\\TestXPath_1384.java (at line 7)  if ( (  (  obj.getMsg() .indexOf( \"SRVE0020E:\u0026quot;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"JSP 1.1 Processor\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"class: org/apache/jasper/compiler/JspUtil, method: parseXMLDoc signature: (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;) Incompatible object argument for function call\u0026quot;: com.ibm.servlet.engine.webapp.WebAppErrorReport: (class: org/apache/jasper/compiler/JspUtil, method: parseXMLDoc signature: (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;) Incompatible object argument for function call\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"javax.servlet.ServletException.\u0026lt;init\u0026gt;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.websphere.servlet.error.ServletErrorReport.\u0026lt;init\u0026gt;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppErrorReport.\u0026lt;init\u0026gt;\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppDispatcherResponse.sendError\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"org.apache.jasper.runtime.JspServlet.unknownException\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"org.apache.jasper.runtime.JspServlet.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"javax.servlet.http.HttpServlet.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.StrictServletInstance.doService\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.StrictLifecycleServlet._service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.IdleServletState.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.StrictLifecycleServlet.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.ServletInstance.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.ValidServletReferenceState.dispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.ServletInstanceReference.dispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.handleWebAppDispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.dispatch\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.webapp.WebAppRequestDispatcher.forward\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.srt.WebAppInvoker.handleInvocationHook\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.invocation.CachedInvocation.handleInvocation\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.invocation.CacheableInvocationContext.invoke\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.srp.ServletRequestProcessor.dispatchByURI\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.OSEListenerDispatcher.service\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.SQEventListenerImp$ServiceRunnable.run\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.SQEventListenerImp.notifySQEvent\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.serverqueue.SQEventSource.notifyEvent\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.serverqueue.SQWrapperEventSource$SelectRunnable.notifyService\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.serverqueue.SQWrapperEventSource$SelectRunnable.run\") \u003e -1 )) \u0026\u0026 ( (  (  obj.getMsg() .indexOf( \"com.ibm.servlet.engine.oselistener.outofproc.OutOfProcThread$CtlRunnable.run\") \u003e -1 )) \u0026\u0026 (  (  obj.getMsg() .indexOf( \"java.lang.Thread.run\") \u003e -1 )))))))))))))))))))))))))))))))) ^ Syntax error, insert \") Statement\" to complete IfStatement ---------- 1 problem (1 error)",
      "elements": [
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.JDTCompiler.generateClass",
          "source": "JDTCompiler.java:252"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.fastxpath.compiler.CompilerHelper.buildCompiledExpression",
          "source": "CompilerHelper.java:308"
        },
        {
          "method": "org.eclipse.tptp.platform.provisional.jre14.fastxpath.FastXPathEngine.getExpressionJavaSource",
          "source": "FastXPathEngine.java:294"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlTransformer.transformXpathToACTL",
          "source": "ActlTransformer.java:47"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.ConvertXpathToACTL",
          "source": "ActlConverter.java:274"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.createACTEventSelector",
          "source": "ActlConverter.java:213"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.createACTFilterRule",
          "source": "ActlConverter.java:149"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverter.createACTRule",
          "source": "ActlConverter.java:130"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convertAndAppendXpathToAct",
          "source": "ActlConverterUtils.java:711"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convertXpathsToAct",
          "source": "ActlConverterUtils.java:195"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convertXpathToActRule",
          "source": "ActlConverterUtils.java:131"
        },
        {
          "method": "com.ibm.etools.ac.act.symptom.rule.converter.ActlConverterUtils.convert",
          "source": "ActlConverterUtils.java:111"
        },
        {
          "method": "com.ibm.etools.ac.act.actions.ConvertAction$ConvertJob.run",
          "source": "ConvertAction.java:142"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "187570",
      "date": "2007-05-17T17:29:10+02:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "critical"
    }
  ],
  "groupId": "187570",
  "bugId": "187570",
  "date": "2007-05-17T17:29:10+02:00",
  "product": "TPTP Profiling",
  "component": "Platform.Model",
  "severity": "critical"
}