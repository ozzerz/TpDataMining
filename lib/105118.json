{
  "comments": [
    "Hi, I just got this error while trying to load some of my classes into VE, the\nfunny thing is that I created those classes using VE 1.1M1 (or M2, I don\u0027t\nremember) with no problems at all.\n\njava.lang.StackOverflowError\nat java.lang.AbstractStringBuilder.append(Unknown Source)\nat java.lang.StringBuffer.append(Unknown Source)\nat java.lang.StringBuffer.\u003cinit\u003e(Unknown Source)\nat\norg.eclipse.jem.java.impl.JavaClassImpl.primGetQualifiedName(JavaClassImpl.java:1045)\nat org.eclipse.jem.java.impl.JavaClassImpl.getQualifiedName(JavaClassImpl.java:761)\nat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:114)\nat java.lang.String.valueOf(Unknown Source)\nat java.lang.StringBuffer.append(Unknown Source)\nat\norg.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\nat\norg.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\nat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:122)\nat java.lang.String.valueOf(Unknown Source)\nat java.lang.StringBuffer.append(Unknown Source)\nat\norg.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\nat\norg.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\nat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:122)\nat java.lang.String.valueOf(Unknown Source)\nat java.lang.StringBuffer.append(Unknown Source)\nat\norg.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\nat\norg.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\nat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:122)\nat java.lang.String.valueOf(Unknown Source)\netc....... it repeats again and again\n\n-----------------------------------------------\nIf you consider it neccesary I could post my class\u0027s code. Everything compiles\nperfectly and runs correctly.",
    "I also discovered that that error happens only on classes like this one:\n\npackage com.supervaca.etoys.gui.browsing;\n\nimport java.awt.BorderLayout;\nimport java.awt.FlowLayout;\nimport java.awt.GridBagConstraints;\nimport java.awt.GridBagLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.KeyEvent;\nimport java.awt.event.MouseEvent;\n\nimport javax.swing.JButton;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextField;\nimport javax.swing.border.TitledBorder;\n\nimport com.supervaca.etoys.bll.City;\nimport com.supervaca.etoys.bll.Neighbourhood;\nimport com.supervaca.etoys.config.HibernateUtil;\nimport com.supervaca.etoys.dal.NeighbourhoodDAO;\nimport com.supervaca.etoys.exceptions.InfrastructureException;\nimport com.supervaca.etoys.gui.components.JListKeyDescription;\n\n@SuppressWarnings(\"serial\")\npublic class NeighbourhoodBrowsing extends JDialog\n{\n    private JPanel jContentPane \u003d null;\n    private Neighbourhood neighbourhood \u003d null;\n    private City city \u003d null;\n    private JPanel pnlContent \u003d null;\n    private JPanel pnlNeighbourhoodList \u003d null;\n    private JScrollPane scrlNeighbourhood \u003d null;\n    private JListKeyDescription\u003cNeighbourhood\u003e lstNeighbourhood \u003d null;\n    private JPanel pnlEditor \u003d null;\n    private JLabel lblName \u003d null;\n    private JTextField txtName \u003d null;\n    private JPanel pnlButtons \u003d null;\n    private JButton btnNew \u003d null;\n    private JButton btnSave \u003d null;\n    private JButton btnClose \u003d null;\n\n    /**\n     * This is the default constructor\n     */\n    public NeighbourhoodBrowsing(JFrame parent, boolean modal)\n    {\n        super(parent, modal);\n        initialize();\n        pack();\n    }\n\n    /**\n     * This method initializes this\n     * \n     * @return void\n     */\n    private void initialize()\n    {\n        this.setSize(300, 200);\n        this.setTitle(\"Cat?logo de Colonias de \u003cCity\u003e\"); // Generated\n       \nthis.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); //\nGenerated\n        this.setContentPane(getJContentPane());\n    }\n\n    private void updateList()\n    {\n        this.lstNeighbourhood.setModel(Neighbourhood.createListModel(city));\n    }\n\n    /**\n     * This method initializes jContentPane\n     * \n     * @return javax.swing.JPanel\n     */\n    private JPanel getJContentPane()\n    {\n        if (jContentPane \u003d\u003d null)\n        {\n            jContentPane \u003d new JPanel();\n            jContentPane.setLayout(new BorderLayout());\n            jContentPane.add(getPnlContent(), java.awt.BorderLayout.CENTER); //\nGenerated\n        }\n        return jContentPane;\n    }\n\n    /**\n     * This method initializes pnlContent\n     * \n     * @return javax.swing.JPanel\n     */\n    private JPanel getPnlContent()\n    {\n        if (pnlContent \u003d\u003d null)\n        {\n            try\n            {\n                GridBagConstraints gridBagConstraints5 \u003d new GridBagConstraints();\n                gridBagConstraints5.gridx \u003d 0; // Generated\n                gridBagConstraints5.fill \u003d\njava.awt.GridBagConstraints.HORIZONTAL; // Generated\n                gridBagConstraints5.weightx \u003d 100.0D; // Generated\n                gridBagConstraints5.gridy \u003d 2; // Generated\n                GridBagConstraints gridBagConstraints4 \u003d new GridBagConstraints();\n                gridBagConstraints4.gridx \u003d 0; // Generated\n                gridBagConstraints4.fill \u003d\njava.awt.GridBagConstraints.HORIZONTAL; // Generated\n                gridBagConstraints4.weightx \u003d 100.0D; // Generated\n                gridBagConstraints4.gridy \u003d 1; // Generated\n                GridBagConstraints gridBagConstraints \u003d new GridBagConstraints();\n                gridBagConstraints.weightx \u003d 100.0D; // Generated\n                gridBagConstraints.fill \u003d java.awt.GridBagConstraints.BOTH; //\nGenerated\n                gridBagConstraints.weighty \u003d 100.0D; // Generated\n                pnlContent \u003d new JPanel();\n                pnlContent.setLayout(new GridBagLayout()); // Generated\n                pnlContent.add(getPnlNeighbourhoodList(), gridBagConstraints);\n// Generated\n                pnlContent.add(getPnlEditor(), gridBagConstraints4); // Generated\n                pnlContent.add(getPnlButtons(), gridBagConstraints5); // Generated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return pnlContent;\n    }\n\n    /**\n     * This method initializes jPanel\n     * \n     * @return javax.swing.JPanel\n     */\n    private JPanel getPnlNeighbourhoodList()\n    {\n        if (pnlNeighbourhoodList \u003d\u003d null)\n        {\n            try\n            {\n                GridBagConstraints gridBagConstraints1 \u003d new GridBagConstraints();\n                gridBagConstraints1.fill \u003d java.awt.GridBagConstraints.BOTH; //\nGenerated\n                gridBagConstraints1.weighty \u003d 1.0; // Generated\n                gridBagConstraints1.weightx \u003d 1.0; // Generated\n                pnlNeighbourhoodList \u003d new JPanel();\n                pnlNeighbourhoodList.setLayout(new GridBagLayout()); // Generated\n               \npnlNeighbourhoodList.setBorder(javax.swing.BorderFactory.createTitledBorder(null,\n                        \"Lista de Colonias de \u003cCity\u003e\",\njavax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,\n                        javax.swing.border.TitledBorder.DEFAULT_POSITION, null,\nnull)); // Generated\n                pnlNeighbourhoodList.add(getScrlNeighbourhood(),\ngridBagConstraints1); // Generated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return pnlNeighbourhoodList;\n    }\n\n    /**\n     * This method initializes scrlNeighbourhood\n     * \n     * @return javax.swing.JScrollPane\n     */\n    private JScrollPane getScrlNeighbourhood()\n    {\n        if (scrlNeighbourhood \u003d\u003d null)\n        {\n            try\n            {\n                scrlNeighbourhood \u003d new JScrollPane();\n                scrlNeighbourhood.setViewportView(getLstNeighbourhood()); //\nGenerated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return scrlNeighbourhood;\n    }\n\n    /**\n     * This method initializes lstNeighbourhood\n     * \n     * @return com.supervaca.etoys.gui.components.JListKeyDescription\n     */\n    private JListKeyDescription\u003cNeighbourhood\u003e getLstNeighbourhood()\n    {\n        if (lstNeighbourhood \u003d\u003d null)\n        {\n            try\n            {\n                lstNeighbourhood \u003d new JListKeyDescription\u003cNeighbourhood\u003e();\n                lstNeighbourhood.addMouseListener(new\njava.awt.event.MouseAdapter() {\n                    public void mouseClicked(java.awt.event.MouseEvent e)\n                    {\n                        if (e.getClickCount() \u003d\u003d 2)\n                        {\n                            lstNeighbourhoodDoubleClicked(e);\n                        }\n                    }\n                });\n                lstNeighbourhood.addKeyListener(new java.awt.event.KeyAdapter() {\n                    public void keyReleased(java.awt.event.KeyEvent ke)\n                    {\n                        lstNeighbourhoodKeyReleased(ke);\n                    }\n                });\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return lstNeighbourhood;\n    }\n\n    protected void lstNeighbourhoodKeyReleased(KeyEvent ke)\n    {\n        if (ke.getKeyCode() \u003d\u003d KeyEvent.VK_ENTER)\n        {\n            lstNeighbourhoodSelectForEdit(lstNeighbourhood.getSelectedIndex());\n        }\n    }\n\n    protected void lstNeighbourhoodDoubleClicked(MouseEvent e)\n    {\n        int index \u003d getLstNeighbourhood().locationToIndex(e.getPoint());\n        lstNeighbourhoodSelectForEdit(index);\n    }\n\n    private void lstNeighbourhoodSelectForEdit(int selectedIndex)\n    {\n        if (selectedIndex !\u003d -1)\n        {\n            getLstNeighbourhood().setSelectedIndex(selectedIndex);\n            Neighbourhood n \u003d lstNeighbourhood.getSelectedListItem().getValue();\n\n            txtName.setText(n.getName());\n            neighbourhood \u003d n;\n\n            updateGuiElements(true, false);\n        }\n    }\n\n    private void updateGuiElements(boolean editing, boolean canceled)\n    {\n        if (editing)\n        {\n            if (canceled)\n            {\n                btnNew.setEnabled(true);\n                btnSave.setEnabled(false);\n                btnClose.setEnabled(true);\n                btnClose.setText(\"Cerrar\");\n                txtName.setEnabled(false);\n                txtName.setText(\"\");\n                lstNeighbourhood.setEnabled(true);\n            }\n            else\n            {\n                btnNew.setEnabled(false);\n                btnSave.setEnabled(true);\n                btnClose.setEnabled(true);\n                btnClose.setText(\"Cancelar Edici?n\");\n                txtName.setEnabled(true);\n                txtName.setText(neighbourhood.getName());\n                lstNeighbourhood.setEnabled(false);\n                txtName.selectAll();\n                txtName.requestFocus();\n            }\n        }\n        else\n        {\n            if (canceled)\n            {\n                btnNew.setEnabled(true);\n                btnSave.setEnabled(false);\n                btnClose.setEnabled(true);\n                btnClose.setText(\"Cerrar\");\n                txtName.setEnabled(false);\n                txtName.setText(\"\");\n                lstNeighbourhood.setEnabled(true);\n            }\n            else\n            {\n                btnNew.setEnabled(false);\n                btnSave.setEnabled(true);\n                btnClose.setEnabled(true);\n                btnClose.setText(\"Cancelar Edici?n\");\n                txtName.setEnabled(true);\n                txtName.setText(\"\");\n                lstNeighbourhood.setEnabled(false);\n                txtName.requestFocus();\n            }\n        }\n    }\n\n    /**\n     * This method initializes pnlEdit\n     * \n     * @return javax.swing.JPanel\n     */\n    private JPanel getPnlEditor()\n    {\n        if (pnlEditor \u003d\u003d null)\n        {\n            try\n            {\n                GridBagConstraints gridBagConstraints3 \u003d new GridBagConstraints();\n                gridBagConstraints3.fill \u003d\njava.awt.GridBagConstraints.HORIZONTAL; // Generated\n                gridBagConstraints3.gridx \u003d 1; // Generated\n                gridBagConstraints3.gridy \u003d 0; // Generated\n                gridBagConstraints3.weightx \u003d 100.0D; // Generated\n                gridBagConstraints3.anchor \u003d java.awt.GridBagConstraints.WEST;\n// Generated\n                gridBagConstraints3.insets \u003d new java.awt.Insets(2, 2, 2, 2); //\nGenerated\n                GridBagConstraints gridBagConstraints2 \u003d new GridBagConstraints();\n                gridBagConstraints2.insets \u003d new java.awt.Insets(2, 2, 2, 2); //\nGenerated\n                gridBagConstraints2.gridy \u003d 0; // Generated\n                gridBagConstraints2.anchor \u003d java.awt.GridBagConstraints.EAST;\n// Generated\n                gridBagConstraints2.gridx \u003d 0; // Generated\n                lblName \u003d new JLabel();\n                lblName.setText(\"Nombre\"); // Generated\n                pnlEditor \u003d new JPanel();\n                pnlEditor.setLayout(new GridBagLayout()); // Generated\n               \npnlEditor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, \"Edici?n\",\n                        javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,\n                        javax.swing.border.TitledBorder.DEFAULT_POSITION, null,\nnull)); // Generated\n                pnlEditor.add(lblName, gridBagConstraints2); // Generated\n                pnlEditor.add(getTxtName(), gridBagConstraints3); // Generated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return pnlEditor;\n    }\n\n    /**\n     * This method initializes txtName\n     * \n     * @return javax.swing.JTextField\n     */\n    private JTextField getTxtName()\n    {\n        if (txtName \u003d\u003d null)\n        {\n            try\n            {\n                txtName \u003d new JTextField();\n                txtName.setColumns(25); // Generated\n                txtName.setEnabled(false); // Generated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return txtName;\n    }\n\n    public City getCity()\n    {\n        return city;\n    }\n\n    public void setCity(City city)\n    {\n        this.city \u003d city;\n        // Update various elements of the GUI\n        updateList();\n        TitledBorder border \u003d (TitledBorder) pnlNeighbourhoodList.getBorder();\n        border.setTitle(border.getTitle().replace(\"\u003cCity\u003e\", city.getName()));\n        setTitle(getTitle().replace(\"\u003cCity\u003e\", city.getName()));\n    }\n\n    /**\n     * This method initializes jPanel\n     * \n     * @return javax.swing.JPanel\n     */\n    private JPanel getPnlButtons()\n    {\n        if (pnlButtons \u003d\u003d null)\n        {\n            try\n            {\n                FlowLayout flowLayout \u003d new FlowLayout();\n                flowLayout.setAlignment(FlowLayout.RIGHT); // Generated\n                pnlButtons \u003d new JPanel();\n                pnlButtons.setLayout(flowLayout); // Generated\n                pnlButtons.add(getBtnNew(), null); // Generated\n                pnlButtons.add(getBtnSave(), null); // Generated\n                pnlButtons.add(getBtnClose(), null); // Generated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return pnlButtons;\n    }\n\n    /**\n     * This method initializes jButton\n     * \n     * @return javax.swing.JButton\n     */\n    private JButton getBtnNew()\n    {\n        if (btnNew \u003d\u003d null)\n        {\n            try\n            {\n                btnNew \u003d new JButton();\n                btnNew.setText(\"Nuevo\"); // Generated\n                btnNew.setMnemonic(java.awt.event.KeyEvent.VK_N);  // Generated\n                btnNew.addActionListener(new java.awt.event.ActionListener() {\n                    public void actionPerformed(java.awt.event.ActionEvent e)\n                    {\n                        btnNewActionPerformed(e);\n                    }\n                });\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return btnNew;\n    }\n\n    protected void btnNewActionPerformed(ActionEvent e)\n    {\n        neighbourhood \u003d null;\n\n        updateGuiElements(false, false);\n    }\n\n    /**\n     * This method initializes jButton1\n     * \n     * @return javax.swing.JButton\n     */\n    private JButton getBtnSave()\n    {\n        if (btnSave \u003d\u003d null)\n        {\n            try\n            {\n                btnSave \u003d new JButton();\n                btnSave.setEnabled(false); // Generated\n                btnSave.setMnemonic(java.awt.event.KeyEvent.VK_G);  // Generated\n                btnSave.addActionListener(new java.awt.event.ActionListener() { \n                \tpublic void actionPerformed(java.awt.event.ActionEvent e) {    \n                \t\tbtnSaveActionPerformed(e);\n                \t}\n                });\n                btnSave.setText(\"Guardar\"); // Generated\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return btnSave;\n    }\n\n    protected void btnSaveActionPerformed(ActionEvent e)\n    {\n        if(neighbourhood \u003d\u003d null)\n        {\n            neighbourhood \u003d new Neighbourhood();\n        }\n        \n        neighbourhood.setName(txtName.getText().trim());\n        neighbourhood.setCity(city);\n        \n        NeighbourhoodDAO dao \u003d new NeighbourhoodDAO();\n        \n        try\n        {\n            dao.makePersistent(neighbourhood);\n            HibernateUtil.commitTransaction();\n            updateList();\n            updateGuiElements(false, true);\n        }\n        catch (InfrastructureException ex)\n        {\n            // Rethrow as a checked exception\n            HibernateUtil.rollbackTransaction();\n            System.err.println(ex);\n        }\n    }\n\n    /**\n     * This method initializes jButton2\n     * \n     * @return javax.swing.JButton\n     */\n    private JButton getBtnClose()\n    {\n        if (btnClose \u003d\u003d null)\n        {\n            try\n            {\n                btnClose \u003d new JButton();\n                btnClose.setText(\"Cerrar\"); // Generated\n                btnClose.setMnemonic(java.awt.event.KeyEvent.VK_C);  // Generated\n                btnClose.addActionListener(new java.awt.event.ActionListener() {\n                    public void actionPerformed(java.awt.event.ActionEvent e)\n                    {\n                        btnCloseActionPerformed(e);\n                    }\n                });\n            }\n            catch (java.lang.Throwable e)\n            {\n                // TODO: Something\n            }\n        }\n        return btnClose;\n    }\n\n    protected void btnCloseActionPerformed(ActionEvent e)\n    {\n        if (txtName.isEnabled())\n        {\n            updateGuiElements(false, true);\n        }\n        else\n        {\n            dispose();\n        }\n    }\n}\n\n---------------------\nI have far more complex screens with more components, etc. and they work fine.\nThe problem must be somewhere in the code above.\n\nAnother bug is that when I try to modify and save a file this happens:\n\nSave Failed\n\njava.lang.StackOverflowError\n\tat java.lang.AbstractStringBuilder.append(Unknown Source)\n\tat java.lang.StringBuffer.append(Unknown Source)\n\tat java.lang.StringBuffer.\u003cinit\u003e(Unknown Source)\n\tat\norg.eclipse.jem.java.impl.JavaClassImpl.primGetQualifiedName(JavaClassImpl.java:1045)\n\tat org.eclipse.jem.java.impl.JavaClassImpl.getQualifiedName(JavaClassImpl.java:761)\n\tat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:114)\n\tat java.lang.String.valueOf(Unknown Source)\n\tat java.lang.StringBuffer.append(Unknown Source)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat\norg.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:122)\n\tat java.lang.String.valueOf(Unknown Source)\n\tat java.lang.StringBuffer.append(Unknown Source)\n\tat\norg.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString(PTInstanceReferenceImpl.java:166)\n\tat\norg.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString(ParseTreeAllocationImpl.java:190)\n\tat\norg.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString(JavaObjectInstance.java:122)\n\tat java.lang.String.valueOf(Unknown Source)\n\tat java.lang.StringBuffer.append(Unknown Source)\netc...\n\nBut the file gets saved anyway... weird!\n\nThanks, hope this helps.",
    "There is a method:\n\npublic void setCity(City city) {\n   this.city \u003d city;\n\nThe this.city \u003d city line caused a recurssion because there was a reference to\n\"city\" in the \"initalize\" method, BUT city did not get added into the model. So\nduring save of cache file we were getting a dangling ref. This tries to create a\nmessage that used toString(), well toString() failed because toString() uses the\nparse tree, and the parse tree allocation had a reference to itself through city.\n\n*** This bug has been marked as a duplicate of 104803 ***",
    "Thanks for the quick reply!\n\nIndeed, as soon as I remove the method\n\npublic void setCity(City city)\n\nit works, now I\u0027ll have to learn to live with this until the release of 1.2",
    "Actually try this instead:\n\npublic void setCity(City aCity) {\n  this.city \u003d aCity;\n\nThe problem we have is we currently can\u0027t distinquish between the \"city\" from\nthe argument and the \"city\" in the this.",
    "closing"
  ],
  "commentCreationDates": [
    "2005-07-26T08:08:52+02:00",
    "2005-07-26T08:20:27+02:00",
    "2005-07-26T16:22:42+02:00",
    "2005-07-27T04:47:33+02:00",
    "2005-07-27T16:39:55+02:00",
    "2006-04-07T19:44:39+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "java.lang.AbstractStringBuilder.append",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.java.impl.JavaClassImpl.primGetQualifiedName",
          "source": "JavaClassImpl.java:1045"
        },
        {
          "method": "org.eclipse.jem.java.impl.JavaClassImpl.getQualifiedName",
          "source": "JavaClassImpl.java:761"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:114"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:122"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:122"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:122"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "105118",
      "duplicateId": "104803",
      "date": "2005-07-26T08:08:52+02:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "java.lang.AbstractStringBuilder.append",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.java.impl.JavaClassImpl.primGetQualifiedName",
          "source": "JavaClassImpl.java:1045"
        },
        {
          "method": "org.eclipse.jem.java.impl.JavaClassImpl.getQualifiedName",
          "source": "JavaClassImpl.java:761"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:114"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:122"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.PTInstanceReferenceImpl.toString",
          "source": "PTInstanceReferenceImpl.java:166"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.impl.ParseTreeAllocationImpl.toString",
          "source": "ParseTreeAllocationImpl.java:190"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaObjectInstance.toString",
          "source": "JavaObjectInstance.java:122"
        },
        {
          "method": "java.lang.String.valueOf",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.StringBuffer.append",
          "source": "Unknown Source"
        }
      ],
      "number": 1,
      "commentIndex": 1,
      "bugId": "105118",
      "duplicateId": "104803",
      "date": "2005-07-26T08:20:27+02:00",
      "product": "Web Tools",
      "component": "jst.jem",
      "severity": "major"
    }
  ],
  "groupId": "104803",
  "bugId": "105118",
  "duplicateId": "104803",
  "date": "2005-07-26T08:08:52+02:00",
  "product": "Web Tools",
  "component": "jst.jem",
  "severity": "major"
}