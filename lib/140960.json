{
  "comments": [
    "Given a plugin, A, which defines a new extension-point, E, and plugs into it; now create a new plug-in, B, which will plug *also* into E (so of course B must depend upon A). The PDE will allow one to plug into E from B (or A), and all will compile. \n\nBut at runtime, only the extension-point defined in A will be available. By \"not available\", I mean that when one debugs through IExtension.getConfigurationElements(), the only item returned is the one defined in A. \n\n(Yes, I tried deleting all WS data.) \n\nSince Eclipse manages to accomplish this, there must be something (not explained) that one has to do in B to make the extension-point *actually* show up. What is that? \n\nThis bug is making it pretty well impossible to work with Eclipse, for me.",
    "We do that all the time. I expect something fairly trivial missing in your plugin.xml. In eclipse 3.2 error reporting has been improved so it might help you to open your workspace with it.\nIn any case, including a simple test case would greatly help us to assist you.",
    "This can happen when the code for initialising the plugins does so once during bundle startup and caches the results. It happens in the CVS plugin, for example, when registering the provider protocols (even though they\u0027re internal). The problem seems to be:\n\nPlugin A declares extension point a and provides an extension a1.\nPlugin B depends on plugin A and provides an extension a2.\n\nPlugin A\u0027s startup method in the activator does a traversal of all registered extension points of a, and then caches the result in an array. Of course, A must be started before B, since B depends on A, and thus when A starts up, the only visible extension point defined at that time is a1.\n\nPlugin B starts up (and the extension point registry is updated) but since A\u0027s already traversed the known extension points and cached the result, it doesn\u0027t present a2 in the list.\n\nYou can see this in action with the CVS plugin (on 3.1); if you define a second protocol in a dependent plugin, it doesn\u0027t show up in the list. You have to define the extension as a fragment to the CVS plugin so that it shows up.\n\nIn any case, I guess the question here is when the traversal of the IEXtension.getConfigurationElements() is being done -- is it done dynamically when the user first requests something, or is it being done in the bundle\u0027s start method?",
    "I downloaded Eclipse 3.2RC2 and tried to get it to run my RCP app; all I got was the following useless error: \n\n!SESSION Wed May 10 09:17:02 EDT 2006 ------------------------------------------\n!ENTRY org.eclipse.core.launcher 4 0 2006-05-10 09:17:02.613\n!MESSAGE Exception launching the Eclipse Platform:\n!STACK\njava.lang.ArrayIndexOutOfBoundsException: 0\n\tat org.eclipse.core.launcher.Main.getSplashLocation(Main.java:1642)\n\tat org.eclipse.core.launcher.Main.handleSplash(Main.java:1539)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\n",
    "Were you able to put together a simple test to demonstrate the problem as per comment #1?",
    "Created an attachment (id\u003d40955)\nZip of main plugin\n\nI zipped up the main plugin into this zip-file, class-files and all. ",
    "Created an attachment (id\u003d40956)\nZip of extending plugin\n\nI zipped up the plugin that plugs into the extension-point, to add an extra item, into this zip file, class-files and all. If you unzip both of them into your workspace, you should see my problem. ",
    "Great, thanks. We will try and look at this asap.\n",
    "Here are the steps that I followed:\n- start a new workspace (I\u0027m using RC3)\n- create 2 projects and put your contents in them\n- run a runtime workbench\n- Window -\u003e Show View -\u003e PDE Runtime -\u003e Plug-in Registry\n- Navigate to your main plug-in\n- expand it to show that it contributes one ext pt\n- expand that to show that there are 2 extensions, one from main and one from extras\n\nIs there something that I am missing?\n",
    "Uh -- the two plugins constitute an RCP app, so I have no clue what would or should happen if you include them in a runtime workbench. (Although your test, which I cannot repeat, at least seems to confirm that my extension-point system is valid.) \n\nHere is what I did with them: \n\n1) run them as an RCP app, using Run -\u003e Run... -\u003e Select Eclipse Application \n\n2) this will result in  a little window, with a simple View (I used the \"RCP App with View\" template) \n\n3) in that RCP app, Window -\u003e Preferences -\u003e the combo box has only one entry, but should have two ",
    "Created an attachment (id\u003d41044)\nPicture of it working :-)\n\nI just tried it in 3.1.2 and 3.2 and it works (see the picture).\n\nI run it by creating a new configuration under Eclipse Application and setting \"Run an application\" to com.mun.etc..\n\nSUGGESTION: You might have an early version of the registry information stuck in the cache. To clean it, in the Run/Debug dialog select the configuration you are using, switch to \"Configuration\" tab, and select \"Clear the configuration area before launching\".\n",
    "Following your suggestion (about clearing the configuration area) successfully prevents the RCP app from running at all, generating this useless-to-me error log:\n\n!SESSION 2006-05-10 17:51:54.333 -----------------------------------------------\neclipse.buildId\u003dunknown\njava.version\u003d1.5.0_04\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nFramework arguments:  -application org.eclipse.ui.ide.workbench -pdelaunch\nCommand-line arguments:  -application org.eclipse.ui.ide.workbench -data C:\\0-UIMA\\eclipse\\runtime-EclipseApplication -dev file:C:/0-UIMA/eclipse/workspace/.metadata/.plugins/org.eclipse.pde.core/Eclipse Application/dev.properties -pdelaunch -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.osgi 2006-05-10 17:51:55.292\n!MESSAGE Application error\n!STACK 1\njava.lang.RuntimeException: Application \"org.eclipse.ui.ide.workbench\" could not be found in the registry. The applications available are: \u003cNONE\u003e.\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:216)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\n ",
    "PS: in order to get my RCP app to run again, I deleted the launch config, selected the main plugin (in the Package Explorer), and clicked Run as -\u003e Eclipse Application. \n\nSo, I can recover from the mistake of clearing the configuration data, but it still does not show the second plugin. \n\nMoreover, a test that only works if the RCP app is run from inside a *runtime* Eclipse is not very useful as a test of an RCP app, which are intended to be run without Eclipse, correct? \n\nCould you try running the RCP app the way an RCP app runs? I.e., *without* a *runtime* Eclipse? \n\n",
    "re comment 11\n\nIt sounds like your bundles are not being included in the target launch.  On the Plug-ins tab of your Run/Debug dialog make sure your plug-ins are selected and then click on Add Required Plug-ins.  Or just make sure that \"Launch with all workspace and enabled external plug-ins\" is selected.  If that does not help then run with the following program arguments:\n\n-console -noExit\n\nAt the console run the \u0027ss\u0027 command and attach the output to this bug report.",
    "PPS: \n\nI have been working in 3.1.1 (as noted originally); I just now tried it in\n3.1.2 (build M20060118-1600), and the results are the same -- the second\nplug-in\u0027s extension is not found. ",
    "Is the second plugin being started? If your application extension is in the first plugin, or in another plugin that doesn\u0027t declare a dependency on the second plugin, it may not even be being started. Use the -console as suggested to your launch of the RCP application to find out what the plugins are, and what their state is (for example, if they\u0027re RUNNING or RESOLVED -- at least, I think that\u0027s the terminology).\n\nIf you have a runtime workbench, it will start the contents of both plugins automatically. If you\u0027re running as an exported RCP application, it might not, which could explain the difference in observed behaviour here. Can you zip up the entire exported RCP application and attach it as a bug, so that we can easily replicate the problem that you\u0027re seeing?",
    "Cool stuff (-console -noExit \u003d\u003e ss)!\n\n1A) I tried this diagnostic with my actual app/product (i.e., the code I am realy developing, not the example I sent in), running as \"application\", and found that the plugin in question is INSTALLED rather than ACTIVE or RESOLVED. The key plugin *IS* selected in the list of the Plug-ins tab of my Run/Debug dialog. \n\n2A) I then tried selecting \"Launch with all workspace and enabled external plug-ins\", running as \"application\", and ran that way (which seems to be how to get a runtime eclipse to include an RCP app -- wow), and the \"ss\" now shows the key plugin as ACTIVE! (And indeed the combo works.) However, this does not solve the problem, as the *exported* real app/product. \n\n1P) Then I went back to selecting plug-ins, with the key plugin selected in the list of the Plug-ins tab of my Run/Debug dialog, and ran as \"product\" -- now the key plugin is ACTIVE and all is well. But why did the state change? \n\nReturning to 1A now works, too. \n\nVery strange -- apparently when one adds to an RCP app a new plugin, which plugs into an extension-point that is already plugged into by the plugin providing the extension-point, one needs first to run with \"Launch with all workspace and enabled external plug-ins\" to somehow \"goose\" eclipse into actually loading the new plugin. \n\n*HOWEVER* when I try to export my (actual) product, I get an error message \"Problems during export\\n\\nReason:\\n In plugin biz.buz.bang.newOne, the value for property source.newOne is not set\" -- what does that mean and how to fix it? \n",
    "(In reply to comment #15)\n\u003e ... If your application extension is in the\n\u003e first plugin, or in another plugin that doesn\u0027t declare a dependency on the\n\u003e second plugin, it may not even be being started. \n\u003e \nThat seems to be part of the problem, indeed: the plugin providing the extension-point is the plugin declaring the application extension. \n\nBut, now there is also the export problem (see comment 16) ",
    "(In reply to comment #16)\n\u003e *HOWEVER* when I try to export my (actual) product, I get an error message\n\u003e \"Problems during export\\n\\nReason:\\n In plugin biz.buz.bang.newOne, the value\n\u003e for property source.newOne is not set\" -- what does that mean and how to fix\n\u003e it? \n\u003e \nOh, I see -- in the build.properties file I have to set the value of source.newOne.jar to be \"src/\"! (Why is that not automatic? why is that not settable or even viewable from either the \"Runtime\" tab or the \"Build\" tab??)\n\nAnyway, now I can export my actual app/product -- and indeed in the *exported* product, the Combo shows only the plugged-in extension from the main plugin, not the additional one. Running the exported product from the commandline with \"-console -noExit\" and entering the magic \"ss\" shows that the extra plugin is \"INSTALLED\" -- not \"ACTIVE\" or \"RESOLVED\". \n\nIt seems like I will need to take my toy project, add the application/product stuff, export it, and then resend that to you, right? \n\n",
    "At the osgi console, run the diag \u003cbundle id\u003e command with the bundle which is in the INSTALLED state.  This should show why your bundle is not resolved.  It still seems like a case of some missing bundles not being included in your exported product.",
    "The other possibility is that the bundle is being exported, but that nothing is depending on it in the startup process. That could be the case if there was a feature which included all of those plugins, but there wasn\u0027t a dependency on the one that isn\u0027t started. You might even be able to debug dynamically; in the console, you can start a bundle manually (press ? for a list of what you can do; I think you\u0027d type start my.plugin.name for example)\n\nThere may be two ways of fixing this if this is the case;\n\n1) Set up a dependency between your application (the bundle with the -application class) and the bundle with the 2nd plugin\n2) Update the config.ini to include the bundle that isn\u0027t being started as part of the startup bundles (osgi.bundles\u003d...:my.plugin.name@4:start)\n\nEither of those approaches should ensure that your bundle gets started, and therefore, the extension is registered.",
    "(In reply to comment #19)\n\u003e At the osgi console, run the diag \u003cbundle id\u003e command with the bundle which is\n\u003e in the INSTALLED state.  This should show why your bundle is not resolved.  It\n\u003e still seems like a case of some missing bundles not being included in your\n\u003e exported product.\n\u003e \n\nTADA! That was it: \nMissing required bundle org.eclipse.draw2d_0.0.0.\n\nGood to know about these diagnostics, since it is so hard to get this right --\nin this case, I had specified that the new plugin depended upon draw2d, but had\nnot added draw2d to the *feature* (it was/is on the launch-config). Really\nannoying that one has to specify the same data in several places, and that the\nerror when one doesnt is so, um, cryptic. \n\nBTW, when I was re-exporting my actual app, the export-wizard had somehow\nchosen as the target directory the target directory that is correct for the\ntoy-app -- why did it do that? ",
    "Created an attachment (id\u003d41121)\nZip of exported demo project\n\nHere is a zip of my *attempt* to productize and export the demo app -- it exports without error, but doesn\u0027t run at all, throwing a cryptic error. I have only sucessfully once created a product, so no doubt I have forgotten one of the many fragile steps -- can you see what I have done wrong? ",
    "(In reply to comment #20)\n\nJust to clarify, a bundle does *not* need to be ACTIVE in order to contribute to the extension registry.  It only needs to be in the RESOLVED state.  If you bundle cannot work properly without being active then you should make sure to include the following header in your bundle manifest:\n\nEclipse-LazyStart: true\n\nThis will ensure that your bundle gets started the first time a class is loaded from it.  For example, to load the class which implements the extension.\n",
    "(In reply to comment #23)\n\u003e ... you should make sure to\n\u003e include the following header in your bundle manifest:\n\u003e \n\u003e Eclipse-LazyStart: true\n\u003e \nThat is to be used instead of \"Eclipse-AutoStart: true\"? (I have AutoStart already on the main and the plugging-in plugins ...) ",
    "The Eclipse-LazyStart is for 3.2+\nThe Eclipse-AutoStart is for 3.1\n\nSince you\u0027re basing it on 3.1, you should be using AutoStart.",
    "yup, Eclipse-AutoStart has been deprecated in 3.2, but it is still supported for compatibility reasons.",
    "Say -- I\u0027d like to close this out -- cananyone see what I did wrong with the export of the demo project? ",
    "The product zip that you\u0027ve exported doesn\u0027t contain any plugins other than your own. For it to work, it would need to have org.eclipse.ui, org.eclipse.core.runtime, and of course the other ones upon which they depend.\n\nOne way of doing this would be to have your feature depend on the RCP feature. I don\u0027t have the name to hand, but it would look something like:\n\n\u003crequires\u003e\n  ...\n  \u003cimport feature\u003d\"org.eclipse.rcp\"/\u003e\n\u003c/requires\u003e\n\nAlternatively, you can copy the contents of the RCP package into your plugins/ directory to make the plugins available.",
    "Strange: \n1) my \"real\" app does not explicitly depend upon org.eclipse.rcp, and it exports and runs just fine; the main feature does depend upon org.eclipse.{ui, ui.forms, ui.views}), and several of the included plugins depend upon org.eclipse.core.runtime ... \n\n2) Adding the dependency upon org.eclipse.ui and org.eclipse.ui.views to the toy project (I don\u0027t use forms) doesn\u0027t help; neither does also adding org.eclipse.rcp; nor does also adding org.eclipse.core.runtime \n\nWhat else could be missing? \n",
    "Created an attachment (id\u003d41585)\nZip of two projects and their one feature\n\nI\u0027ve now attached a zip of my two toy projects, and thei one feature, so you can see what I have done abut trying to export; I\u0027m sorry this is so confusing, but somehow it is just not at all clear what to set where to get a product export to work (I did manage it once, but the more often I fail on attempt # 2, the more hesitant I am to change anything on success # 1, since it seems so fragile and hard to debug). ",
    "My understanding is that the product export only exports plugins that are defined as part of the product, and *not* the ones that it depends on. So although your feature is correct in terms of its dependencies, the export wizard does not solve those dependencies for you.\n\nYou have two choices:\n\n1) Copy the plugins that you depend on manually to the plugins/ folder. The reason it works in Eclipse and doesn\u0027t in your exported product is that Eclipse already contains your dependencies, whilst your exported product doesn\u0027t.\n\n2) Make your feature depend on the RCP feature. When the product feature is exported, it will also export the RCP feature for you. The RCP feature contains org.eclipse.ui and org.eclipse.core.runtime, as well as their dependencies (e.g. SWT, JFace). It\u0027s hard to see what\u0027s in RCP that you wouldn\u0027t need, to be honest.\n\nProduct export works at the feature level, not the plugin level. The only reason why the plugins get exported at all are as an artifact of the feature. So depending on the RCP feature is the correct way to go.\n\nFWIW the purpose of this bug was to complain about plugin point and plugin point extensions, which I believe has already been resolved -- consequently, this bug should probably be closed WORKSFORME, since now the discussion has meandered onto product exporting. It should probably also be taken up as a discussion on the newsgroups/EclipseZone, where I\u0027d be more than happy to continue the discussion.",
    "Fair enough; getting the exporting correct turned out to be the key to getting the plugin plugging into the extension-point to work. Thanks for all the help \u0026 advice! (And speed: I got the demo done in time to impress the manager.) "
  ],
  "commentCreationDates": [
    "2006-05-10T02:21:44+02:00",
    "2006-05-10T03:34:32+02:00",
    "2006-05-10T09:56:46+02:00",
    "2006-05-10T15:15:12+02:00",
    "2006-05-10T15:24:34+02:00",
    "2006-05-10T17:44:09+02:00",
    "2006-05-10T17:45:33+02:00",
    "2006-05-10T17:59:48+02:00",
    "2006-05-10T21:21:37+02:00",
    "2006-05-10T21:50:16+02:00",
    "2006-05-10T23:17:39+02:00",
    "2006-05-10T23:50:25+02:00",
    "2006-05-10T23:55:25+02:00",
    "2006-05-11T00:00:31+02:00",
    "2006-05-11T00:02:00+02:00",
    "2006-05-11T00:41:11+02:00",
    "2006-05-11T15:15:53+02:00",
    "2006-05-11T15:20:00+02:00",
    "2006-05-11T15:46:29+02:00",
    "2006-05-11T16:09:43+02:00",
    "2006-05-11T16:28:40+02:00",
    "2006-05-11T16:36:09+02:00",
    "2006-05-11T16:38:00+02:00",
    "2006-05-11T17:02:00+02:00",
    "2006-05-11T17:43:17+02:00",
    "2006-05-11T18:02:26+02:00",
    "2006-05-11T18:29:23+02:00",
    "2006-05-16T02:12:13+02:00",
    "2006-05-16T10:16:12+02:00",
    "2006-05-16T15:47:06+02:00",
    "2006-05-16T15:49:27+02:00",
    "2006-05-17T10:13:03+02:00",
    "2006-05-17T16:29:02+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "0",
      "elements": [
        {
          "method": "org.eclipse.core.launcher.Main.getSplashLocation",
          "source": "Main.java:1642"
        },
        {
          "method": "org.eclipse.core.launcher.Main.handleSplash",
          "source": "Main.java:1539"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "140960",
      "date": "2006-05-10T15:15:12+02:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "critical"
    },
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Application \"org.eclipse.ui.ide.workbench\" could not be found in the registry. The applications available are: \u003cNONE\u003e.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:216"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "number": 1,
      "commentIndex": 11,
      "bugId": "140960",
      "date": "2006-05-10T23:50:25+02:00",
      "product": "Equinox",
      "component": "Bundles",
      "severity": "critical"
    }
  ],
  "groupId": "140960",
  "bugId": "140960",
  "date": "2006-05-10T02:21:44+02:00",
  "product": "Equinox",
  "component": "Bundles",
  "severity": "critical"
}