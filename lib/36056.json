{
  "comments": [
    "Running in JRun servlet engine.  \n\njavax.servlet.ServletException: (class: \ncom/checkfree/cc/cap/SeamlessUserInfo_RH, method: process_aroundBody20 \nsignature: \n(Lcom/checkfree/cc/cap/SeamlessUserInfo_RH;Ljavax/servlet/http/HttpServletReques\nt;Ljavax/servlet/http/HttpServletResponse;Lorg/aspectj/lang/JoinPoint;)V) \nIncompatible??l\njava.lang.VerifyError: (class: com/checkfree/cc/cap/SeamlessUserInfo_RH, \nmethod: process_aroundBody20 signature: \n(Lcom/checkfree/cc/cap/SeamlessUserInfo_RH;Ljavax/servlet/http/HttpServletReques\nt;Ljavax/servlet/http/HttpServletResponse;Lorg/aspectj/lang/JoinPoint;)V) \nIncompatible??l\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:115)\n\tat com.checkfree.common.util.ReqHandlerFactory.init\n(ReqHandlerFactory.java:81)\n\tat com.checkfree.cc.cap.csrpay.init(csrpay.java:34)\n\tat allaire.jrun.servlet.JRunServletLoader.loadServletInstance\n(JRunServletLoader.java:236)\n\tat allaire.jrun.servlet.JRunServletLoader.loadServletInstance\n(JRunServletLoader.java:190)\n\tat allaire.jrun.servlet.JRunServletLoader.loadServlet\n(JRunServletLoader.java:177)\n\tat allaire.jrun.servlet.JRunSE.getServletReference(JRunSE.java:1261)\n\tat allaire.jrun.servlet.JRunSE.runServlet(JRunSE.java:895)\n\tat allaire.jrun.servlet.JRunRequestDispatcher.forward\n(JRunRequestDispatcher.java:88)\n\tat allaire.jrun.servlet.JRunSE.service(JRunSE.java:1131)\n\tat allaire.jrun.servlet.JvmContext.dispatch(JvmContext.java:330)\n\tat allaire.jrun.http.WebEndpoint.run(WebEndpoint.java:107)\n\tat allaire.jrun.ThreadPool.run(ThreadPool.java:272)\n\tat allaire.jrun.WorkerThread.run(WorkerThread.java:75)",
    "Created an attachment (id\u003d4455)\nGeneric trace aspect. \n\nThis is the concrete trace aspect:\n\nimport com.checkfree.aspects.*;\nimport org.apache.log4j.*;\nimport com.checkfree.common.util.*;\n/**\n* This concrete trace aspect specifies what we should trace.\n */\n\nprivileged aspect DebugTrace extends Trace\n\t\t\t\t \n{\n    declare precedence: DebugTrace, *;\n    \n    private static Logger _log \u003d null;\n    \n    static\n    {\n\tString log4jPath \u003d\nGlobalPaths.getPath(\"properties_dir\")+\"log4j.properties\";\n\tPropertyConfigurator.configure(log4jPath);\n\t_log \u003d Logger.getLogger(TestLog.class);    \n    }\n\t\n    /** define the pointcut for what we trace */\n    protected pointcut lexicalScope()\n:within(com.checkfree.common.util.RequestHandler+);\n\t\n    protected void log(String data)\n    {\n\t_log.debug(data);\t \n    }  \n    \n}\n",
    "Created an attachment (id\u003d4464)\nConcrete trace aspect\n",
    "Created an attachment (id\u003d4465)\nCode to trace\n\nThis is the code being traced by the concrete aspect.  If you run the main()\nmethod, you get the verify error exception.",
    "Changing priority to make sure this gets fixed.",
    "The text of this error message should be helpful, does it really say:\n\nIncompatible??l\n\nOr are those garbage characters at the end a result of copying/pasting?  It \nwould help to isolate this bug if we could see better text for the error \nmessage.\n\nAlso, could you send me either the .class or a decompiled source listing for\nclass: com/checkfree/cc/cap/SeamlessUserInfo_RH?  This would also help in \nisolating the bug.",
    "Incompatible??l is the actual error message text, nothing follows the bogus \ncharacters.\n\nI\u0027m attaching the requested .class file. Anything else you need, let me know.\n",
    "Created an attachment (id\u003d4553)\nclass file with trace aspect weaving\n",
    "This bug has now been reproduced from the provided files.  I had to remove the\ndependencies on log4j to make it a self-contained test, but after that it \ncompiled cleanly and reproduces the reported error.",
    "The minimal test-case form of this bug as provided by the attached files has \nbeen fixed in the current tree and a test added in bugs/messyAround.  This was \nsolved by the same fix as for bug 29665.\n\nWhen the preview release for 1.1rc2 comes out, please verify that this fix \nindeed works in the larger system."
  ],
  "commentCreationDates": [
    "2003-04-04T08:32:34+02:00",
    "2003-04-04T08:36:34+02:00",
    "2003-04-04T20:23:29+02:00",
    "2003-04-04T20:25:03+02:00",
    "2003-04-10T20:17:56+02:00",
    "2003-04-10T23:45:42+02:00",
    "2003-04-11T05:12:22+02:00",
    "2003-04-11T05:13:44+02:00",
    "2003-04-22T20:06:12+02:00",
    "2003-04-23T00:33:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: com/checkfree/cc/cap/SeamlessUserInfo_RH,  method: process_aroundBody20 signature:  (Lcom/checkfree/cc/cap/SeamlessUserInfo_RH;Ljavax/servlet/http/HttpServletReques t;Ljavax/servlet/http/HttpServletResponse;Lorg/aspectj/lang/JoinPoint;)V)  Incompatible??l",
      "elements": [
        {
          "method": "java.lang.Class.forName0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Class.java:115"
        },
        {
          "method": "com.checkfree.common.util.ReqHandlerFactory.init",
          "source": "ReqHandlerFactory.java:81"
        },
        {
          "method": "com.checkfree.cc.cap.csrpay.init",
          "source": "csrpay.java:34"
        },
        {
          "method": "allaire.jrun.servlet.JRunServletLoader.loadServletInstance",
          "source": "JRunServletLoader.java:236"
        },
        {
          "method": "allaire.jrun.servlet.JRunServletLoader.loadServletInstance",
          "source": "JRunServletLoader.java:190"
        },
        {
          "method": "allaire.jrun.servlet.JRunServletLoader.loadServlet",
          "source": "JRunServletLoader.java:177"
        },
        {
          "method": "allaire.jrun.servlet.JRunSE.getServletReference",
          "source": "JRunSE.java:1261"
        },
        {
          "method": "allaire.jrun.servlet.JRunSE.runServlet",
          "source": "JRunSE.java:895"
        },
        {
          "method": "allaire.jrun.servlet.JRunRequestDispatcher.forward",
          "source": "JRunRequestDispatcher.java:88"
        },
        {
          "method": "allaire.jrun.servlet.JRunSE.service",
          "source": "JRunSE.java:1131"
        },
        {
          "method": "allaire.jrun.servlet.JvmContext.dispatch",
          "source": "JvmContext.java:330"
        },
        {
          "method": "allaire.jrun.http.WebEndpoint.run",
          "source": "WebEndpoint.java:107"
        },
        {
          "method": "allaire.jrun.ThreadPool.run",
          "source": "ThreadPool.java:272"
        },
        {
          "method": "allaire.jrun.WorkerThread.run",
          "source": "WorkerThread.java:75"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "36056",
      "date": "2003-04-04T08:32:34+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "critical"
    }
  ],
  "groupId": "36056",
  "bugId": "36056",
  "date": "2003-04-04T08:32:34+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "critical"
}