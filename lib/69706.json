{
  "comments": [
    "After weaving some inter-type aspects, I get the below broken class. I can \nsend the code, if it helps:\n-----------------------------------------------------------------------------\n\nrun.tests:\n     [echo] ---------- running JUnit tests, please connect with the debugger...\n\n    [mkdir] Created dir: C:\\projects\\marketedge\\build\\junit\n     [java] .E.\n     [java] Time: 0.234\n     [java] There was 1 error:\n     [java] 1) testWriteRead(test.StoreJTSObjectsTestCase)java.lang.V\nerifyError: (class: org/garret/perst/aspectj/PersistenceAspect, method: \n\u003cclinit\u003e\n signature: ()V) Stack size too large\n     [java]     at com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e\n(Coordinate.java\n:79)\n     [java]     at com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e\n(Coordinate.java\n:109)\n     [java]     at exceedsoft.test.StoreJTSObjectsTestCase.testWriteRead\n(StoreJT\nSObjectsTestCase.java:52)\n     [java]     at exceedsoft.test.StoreJTSObjectsTestCase.runTest\n(StoreJTSObjec\ntsTestCase.java:34)\n     [java]     at exceedsoft.test.PERSTTests.main(PERSTTests.java:15)\n\n     [java] FAILURES!!!\n     [java] Tests run: 2,  Failures: 0,  Errors: 1\n\n\n\n     [echo] ---------- finished",
    "Here is how to reproduce the bug:\n1) download PERST from: www.garret.ru/~knizhnik/perst.html\n2) Download JTS from: www.jump-rpoject.org\n\n3)Inside the PERST you will find several *.aj files under \nsrc/org/garret/perst/aspectj. Then create one more aspect file like:\n----------------------------\nimport org.garret.perst.*;\nimport org.garret.perst.aspectj.*;\n\nimport com.vividsolutions.jts.geom.*;\n\nprivileged public aspect PerstGeometry\n{\n    declare parents: com.vividsolutions.jts.. implements AutoPersist;\n}\n----------------------------\n4) Try to binary-weave all of the above aspects (PERST + the above one).\n5) Try to run a small test where you instantiate \ncom.vividsolutions.geom.Coordinate - the JVM  will refuse to load the woven \njar.\n\nHope it helps,\nHristo\n\n",
    "Is it possible for you to attach some of the failing class files to this bug\nreport so that I can look at precisely what is wrong with them in a decompiler?\n In the meantime I will download perst/etc and try to recreate.\nthanks.",
    "I\u0027m having trouble working out the steps to recreate.\n\nI downloaded PERST, unzipped to c:\\bugreport\nI downloaded JTS, unzipped to c:\\bugreport\n\nI went into the c:\\bugreport\\perst\\src directory, then set my classpath to:\n.;..\\..\\lib\\jts-1.4.0.jar;c:\\aspectj1.2\\lib\\aspectjrt.jar\n\nand ran the \n\ncompile.bat\ncompile_aspectj.bat\ncompile_jassist.bat\n\nscripts, which all worked OK.\n\nI then created a PerstGeometry aspect as per the bug report description in the\nperst\\src directory:\n\nimport org.garret.perst.*;\nimport org.garret.perst.aspectj.*;\n\nimport com.vividsolutions.jts.geom.*;\n\nprivileged public aspect PerstGeometry {\n\ndeclare parents: com.vividsolutions.jts..* implements AutoPersist;\n\n}\n\n(Notice I put a \u0027*\u0027 on the end of the type pattern, which the aspect in the\ninitial bug report doesn\u0027t have, it actual compiles without the * which seems\nodd - but I\u0027ve now tried both variants and my RunMe program below works in\neither case).\n\nI then did a binary weave:\n\nC:\\bugreport\\perst\\src\u003e\najc -aspectpath ..\\lib\\perst_aspectj.jar \n    -inpath ..\\..\\lib\\jts-1.14.0.jar;..\\lib\\perst.jar;..\\lib\\javassist.jar\n    PerstGeometry.aj -d output\n\nwhich created some binary classes in the \u0027output\u0027 directory.\n\nI then created a small file:\npublic class RunMe {\n  public static void main(String[]argv) {\n    new com.vividsolutions.jts.geom.Coordinate();\n  }\n}\n\nCompiled it and ran it (ensuring that I was using the version of Coordinate from\nthe \u0027output\u0027 directory.\n\nIt worked ok.   Which step have I got wrong there?  Did I not binary weave\nenough of the input?\n\nThe Coordinate type looks fine, the decompiled declaration looks like this:\npublic class Coordinate\n    implements Comparable, Cloneable, Serializable, AutoPersist\n\nGoing back through my mail, I see a copy of a woven jts jar was attached to one\nof your old emails, I\u0027ll look at that version now and compare it to my woven\nversion.",
    "Hristo has sent me the code directly and I can now create a failure (although I\ncan\u0027t build the failing jars myself yet)\n\nI got four files:\nme_com.vividsolutions.jts-1.4.0.jar\naspects.jar\ntests.jar\nStoreJTSObjectsTestCase.java\n\nIf I set my classpath like this:\nset CLASSPATH\u003d junit.jar;tests.jar;me_org.garret.perst-229.jar;\n               aspects.jar;me_com.vividsolutions.jts-1.4.0.jar;\n               c:\\aspectj1.2x\\lib\\aspectjrt.jar\n\n(Where me_org.garret.perst-229.jar is from the earlier email)\n\nIf I run the test:\n\njava exceedsoft.test.PERSTTests\n.E.\nTime: 0.532\nThere was 1 error:\n1) testWriteRead(exceedsoft.test.StoreJTSObjectsTestCase)java.lang.VerifyError:\n(class: org/garret/perst/aspectj/Persist\nenceAspect, method: \u003cclinit\u003e signature: ()V) Stack size too large\n        at com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e(Unknown Source)\n        at com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e(Unknown Source)\n        at\nexceedsoft.test.StoreJTSObjectsTestCase.testWriteRead(StoreJTSObjectsTestCase.java:52)\n        at\nexceedsoft.test.StoreJTSObjectsTestCase.runTest(StoreJTSObjectsTestCase.java:34)\n        at exceedsoft.test.PERSTTests.main(PERSTTests.java:15)\n\nFAILURES!!!\nTests run: 2,  Failures: 0,  Errors: 1\n\nIt fails as reported.\n\n\nIf I set my classpath like this:\nset CLASSPATH\u003d junit.jar;tests.jar;me_org.garret.perst-229.jar;\n               me_com.vividsolutions.jts-1.4.0.jar;\n               aspects.jar;c:\\aspectj1.2x\\lib\\aspectjrt.jar\n\nC:\\bugreport\\unpack2\\fresh2\u003ejava exceedsoft.test.PERSTTests\n..\nTime: 0.828\n\nOK (2 tests)\n\nThen it works OK.\n\nWhat is the difference?  There are compiled aspects in both aspects.jar and\nme_com.vividsolutions.jts-1.4.0.jar.  In particular the PersistenceAspect is in\nboth.  In aspects.jar it is 23810 bytes.  In me_com.vividsolutions.jts-1.4.0.jar\nit is 23834 bytes.\n\nI have decompiled these two variants and looked at the clinit methods.  For the\n*bad* version that fails the test that is in aspects.jar looks like this:\n\nstatic {};\n  Code:\n   Stack\u003d0, Locals\u003d1, Args_size\u003d0\n   0:\tinvokestatic\t#20; //Method ajc$postClinit:()V\n   3:\tgoto\t11\n   6:\tastore_0\n   7:\taload_0\n   8:\tputstatic\t#22; //Field ajc$initFailureCause:Ljava/lang/Throwable;\n   11:\treturn\n  Exception table:\n   from   to  target type\n     0     3     6   Class java/lang/Throwable\n\n  LineNumberTable: \n   line 16: 0\n\nIn the good version that passes the test, it looks like this:\nstatic {};\n  Code:\n   Stack\u003d1, Locals\u003d1, Args_size\u003d0\n   0:\tinvokestatic\t#20; //Method ajc$postClinit:()V\n   3:\tgoto\t11\n   6:\tastore_0\n   7:\taload_0\n   8:\tputstatic\t#22; //Field ajc$initFailureCause:Ljava/lang/Throwable;\n   11:\treturn\n  Exception table:\n   from   to  target type\n     0     3     6   Class java/lang/Throwable\n\n  LineNumberTable: \n   line 16: 0\n\nNotice in the bad case that the stack is of size 0 - which ties in with the\nverifyerror.",
    "Because the \u0027broken\u0027 version is in aspects.jar - I looked at where that was\nbuilt.  I found the following in the build log.  The critical option to ajc is\n-XnoWeave.  This means aspects.jar is being generated in a form suitable for a\nlater weave but not suitable for immediate execution.  Hence the stack size is\nwrong.  Is aspects.jar used for a binary weave anywhere?  Since when the system\nweaves into me_com.vividsolutions.jts-1.4.0.jar it uses the source for the\naspects again, rather than aspects.jar.\n\najc [-preserveAllLocals, -g, -verbose, -XnoWeave, -outjar,\nC:\\temp\\marketedge\\netbeans\\modules\\aspects.jar, -classpath,\nC:\\java\\aspectj\\lib\\aspectjrt.jar;C:\\java\\aspectj\\lib\\aspectjtools.jar;C:\\temp\\marketedge\\netbeans\\modules\\aspects.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_com.vividsolutions.jts-1.4.0.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_exceedsoft.map-1.0.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_javax.units-0.01.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_javax.vectmath-1.3.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_org.apache.batik-1.5.1.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_org.garret.perst-229.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_org.geotools-2.0.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_org.geotools.shp-2.0.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_org.geotools.tiger-2.0.jar;C:\\temp\\marketedge\\netbeans\\modules\\me_org.opengis-1.1.jar;C:\\java\\netbeans-3_6-platform\\lib\\core.jar;C:\\java\\netbeans-3_6-platform\\lib\\ext\\boot.jar;C:\\java\\netbe!\n ans-3_6-platform\\lib\\openide-loaders.jar;C:\\java\\netbeans-3_6-platform\\lib\\openide.jar;C:\\java\\netbeans-3_6-platform\\lib\\updater.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoload\\core-output.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoload\\core-settings.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoload\\ext\\jh-2.0_01.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoload\\javahelp-api.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoload\\openide-io.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoload\\terminalemulator.jar;C:\\java\\netbeans-3_6-platform\\modules\\autoupdate.jar;C:\\java\\netbeans-3_6-platform\\modules\\core-ui.jar;C:\\java\\netbeans-3_6-platform\\modules\\core-windows.jar;C:\\java\\netbeans-3_6-platform\\modules\\text.jar;C:\\java\\junit\\junit.jar,\nC:\\temp\\marketedge\\src\\java\\exceedsoft\\gis\\perststore\\PerstGeometry.aj,\nC:\\temp\\marketedge\\download\\perst\\src\\org\\garret\\perst\\aspectj\\AutoPersist.aj,\nC:\\temp\\marketedge\\download\\perst\\src\\org\\garret\\perst\\aspectj\\PersistenceAspect.aj,\nC:!\n \\temp\\marketedge\\download\\perst\\src\\org\\garret\\perst\\aspectj\\SafeHashA\nspect.aj,\nC:\\temp\\marketedge\\download\\perst\\src\\org\\garret\\perst\\aspectj\\SafeHashCode.aj,\nC:\\temp\\marketedge\\download\\perst\\src\\org\\garret\\perst\\aspectj\\StrictAutoPersist.aj]",
    "Hi,\n\nI know we\u0027ve had some recent discussions \u0027off bug report\u0027 about the problems of\n-XnoWeave and how -Xreweavable is a better option.  If you have got your code\nworking, can we possibly close this bug report? \n\nThis bug report has really highlighted how important it is that we take away\n-XnoWeave sooner rather than later !\n\nlet me know, thanks,\n\nAndy.",
    "Closing bug - might revisit the -XnoWeave option and take it away sooner rather\nthan later...",
    "Fix released as part of AspectJ 1.2.1"
  ],
  "commentCreationDates": [
    "2004-07-09T11:39:17+02:00",
    "2004-07-16T05:29:41+02:00",
    "2004-07-16T09:21:40+02:00",
    "2004-07-16T09:45:04+02:00",
    "2004-07-16T11:47:42+02:00",
    "2004-07-16T11:59:24+02:00",
    "2004-07-24T20:39:14+02:00",
    "2004-07-26T09:26:40+02:00",
    "2004-10-21T10:32:09+02:00"
  ],
  "traces": [
    {
      "exceptionType": "erifyError",
      "message": "(class: org/garret/perst/aspectj/PersistenceAspect, method:  \u003cclinit\u003e  signature: ()V) Stack size too large      [java]",
      "elements": [
        {
          "method": "com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e",
          "source": "Coordinate.java :79"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "69706",
      "date": "2004-07-09T11:39:17+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    },
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: org/garret/perst/aspectj/Persist enceAspect, method: \u003cclinit\u003e signature: ()V) Stack size too large",
      "elements": [
        {
          "method": "com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "com.vividsolutions.jts.geom.Coordinate.\u003cinit\u003e",
          "source": "Unknown Source"
        },
        {
          "method": "exceedsoft.test.StoreJTSObjectsTestCase.testWriteRead",
          "source": "StoreJTSObjectsTestCase.java:52"
        },
        {
          "method": "exceedsoft.test.StoreJTSObjectsTestCase.runTest",
          "source": "StoreJTSObjectsTestCase.java:34"
        },
        {
          "method": "exceedsoft.test.PERSTTests.main",
          "source": "PERSTTests.java:15"
        }
      ],
      "number": 1,
      "commentIndex": 4,
      "bugId": "69706",
      "date": "2004-07-16T11:47:42+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "blocker"
    }
  ],
  "groupId": "69706",
  "bugId": "69706",
  "date": "2004-07-09T11:39:17+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "blocker"
}