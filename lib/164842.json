{
  "comments": [
    "The problem is that after some changes (in project files or structure) projects become completely unusable: Eclipse Runtime generates errors that are very hard to understand by users. \nFor example, CoreException generated when project meta-information file objects (.project, .classpath etc.) contain inconsistent changes or dropped.\n\nI\u0027m plug-in developer (\"Subversive\" SVN Team Plugin for Eclipse Platform) and I processed many reports with the similar errors. At the moment, we have no chance to handle these exceptions in a user-friendly way and we performs some workaround steps in order to prevent the problems, but this workaround may significantly reduce performance in some cases and it sometime does not work.\n\nBelow you can find samples of the described behavior:\n\n1) \norg.eclipse.core.runtime.CoreException: Error processing changed links in project description file.\n    at org.eclipse.core.internal.resources.Project.open(Project.java:851)\n    at org.eclipse.core.internal.resources.Project.open(Project.java:883)\n2) \norg.eclipse.core.internal.resources.ResourceException: Errors occurred while refreshing resources with the local file system.\nat org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource(FileSystemResourceManager.java:643)\nat org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh(FileSystemResourceManager.java:627)\nat org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1244)\n\nFirst exception prevents users from checking out the project from repository.\nSecond one prevents plug-in from correct refreshing of resources after processing and next time (after described exception) users can take only \"Out-of-sync with file system\" exception when performing any changes in workspace.\n\nSo, I would like to propose my own solution for the problem:\n1) provide callback interface for Eclipse Runtime, something like:\npublic interface IResourceProblemInterceptor {\n     public boolean handleError(Error identification data);\n}\n2) provide public accessor which will allows to add interceptor instance to set of resource problem listeners\n3) Eclipse Runtime will throws exception only if no interceptors returned \"true\". Interceptors should be called until any returns \"true\".\n4) Eclipse UI (or any other subsystem in headless environment) should add its own interceptors which will provide user-friendly way for solving the problem. In simplest case this can be UI dialog with description (for Eclipse UI).",
    "Just to be clear, you\u0027re not saying that these particular errors shouldn\u0027t be thrown, but that there be a way to handle errors in different ways?\n\nI think something like this is already being done in Eclipse 3.3. See bug 154090 and bug 160303 for details.\n\n",
    "I think in general exception shouldn\u0027t be generated if it is possible. You can see my opinion in details below...\n\nThe problem with exception generation is critical because workspace resources are unprotected from external changes. This mean that any resource presented in workspace can be unsafelly changed by some external process. In result of these changes resource become unusable.\nSo, I think the problem will be solved if any operation over any erroneous resource completes successfully for the caller code.\nMost safe way to do this, from my point of view, is provide \"interceptor-like\" facility which will allows to recover from induced defects instead of exception throwing.\n\nFor example, what should be done if .project file is dropped and some code requested refresh operation for the project resources?\nAt the current moment Eclipse IDE throws an exception which prevents user from working with the project.\nAt the same time proposed solution will provide another way to handle the problem:\nWhen refresh operation is requested and .project deletion is detected inside Eclipse Runtime, problem interceptors should be called until someone handles problem in user-friendly way. The interceptor can be installed by UI should show to user dialog which describes situation and proposes recovery options. After user is selected interesting recovery option and pressed \"Ok\" button interceptor should perform recovery steps (restoring .project) and return \"true\". Thus Eclipse Runtime can safelly perform requested operation and no more exceptions required. In case if problem is not handled by interceptors Eclipse Runtime throws exception like earlier.",
    "Perhaps the status handling in UI can help with this, but there is no plan to stop throwing these exceptions at the resources level."
  ],
  "commentCreationDates": [
    "2006-11-16T17:35:13+01:00",
    "2006-11-16T21:49:43+01:00",
    "2006-11-17T18:41:47+01:00",
    "2007-12-04T20:41:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Error processing changed links in project description file.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Project.open",
          "source": "Project.java:851"
        },
        {
          "method": "org.eclipse.core.internal.resources.Project.open",
          "source": "Project.java:883"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "164842",
      "date": "2006-11-16T17:35:13+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Errors occurred while refreshing resources with the local file system.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.refreshResource",
          "source": "FileSystemResourceManager.java:643"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.refresh",
          "source": "FileSystemResourceManager.java:627"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.refreshLocal",
          "source": "Resource.java:1244"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "164842",
      "date": "2006-11-16T17:35:13+01:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "164842",
  "bugId": "164842",
  "date": "2006-11-16T17:35:13+01:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}