{
  "comments": [
    "Are there plans to upgrade to a newer version of Tomcat?  We\u0027re not shipping\nTomcat 4.x in Fedora Core so that makes it impossible for us to symlink out to\nthe system Tomcat as we\u0027d like to.\n\nThere are apparently many improvements in Tomcat 5.x over 4.x:\n\nhttp://jakarta.apache.org/tomcat/\n\nThe Tomcat developers also say:  \"We encourage all users to upgrade to Apache\nTomcat 5.x whenever possible.\"  :)",
    "It would be good, but its is little too late for 3.1.",
    "I played around with this a bit today.  I replaced all the jars (well, some were\ndifferent names and some I didn\u0027t see at all - it could just be that the tomcat\npackage set I was using didn\u0027t have those ones) with their tomcat 5.0.30\nequivalents and modified the appropriate parts of the plugin metadata\n(MANIFEST.MF, plugin.xml, etc.).  I\u0027m going to attach a patch to\nTomcatAppServer.java that I also made.  This is a very preliminary patch (ie. I\ndidn\u0027t really do much thinking when I modified the method calls ;) but the help\nserver _almost_ starts up.  I get this:\n\nJun 8, 2005 5:02:32 PM org.apache.catalina.startup.Embedded start\nINFO: Starting tomcat server\nJun 8, 2005 5:02:33 PM org.apache.catalina.core.StandardEngine start\nINFO: Starting Servlet Engine: Apache Tomcat/5.0\nJun 8, 2005 5:02:33 PM org.apache.catalina.core.StandardHost start\nINFO: XML validation disabled\nJun 8, 2005 5:02:34 PM org.apache.catalina.loader.WebappLoader start\nINFO: Dual registration of jndi stream handler: factory already defined\nJun 8, 2005 5:02:34 PM org.apache.catalina.loader.WebappLoader setClassPath\nINFO: Unknown loader org.eclipse.core.runtime.adaptor.EclipseClassLoader@5902ca\nclass org.eclipse.core.runtime.adaptor.EclipseClassLoader\n\nIs there something obvious that I\u0027m doing wrong?",
    "Created an attachment (id\u003d22643)\nvery basic patch to TomcatAppServer.java\n",
    "Created an attachment (id\u003d22951)\nnew patch to move to tomcat 5.0.30\n\nHere\u0027s a new version of the very simple patch.\tI think I\u0027m doing things right\nbut I keep running into the wall I described in an earlier comment.  What I\nthink is going wrong:\n\ntomcat 5.0\u0027s WebappLoader tries to call EclipseClassLoader.getClasspath()\nmethod which does not exist.  Should EclipseClassLoader implement this method? \nIt\u0027s trying to call it because EclipseClassLoader passes its !instanceof\nURLClassLoader check (WebappLoader.java:1152).\tThe code in WebappLoader of\ntomcat 4 is quite different (using the getURLs method of URLClassLoader to get\nthe classpath for the class loader) so it\u0027s hard to see where things should be\npatched.\n\nAny assistance greatly appreciated.",
    "Created an attachment (id\u003d23063)\nnew patch to move to tomcat 5.0.30 (re-arrange order of Embedded actions as per\nApache\u0027s suggestions)\n\nThe classloader stuff was a red herring.  After looking at the tomcat javadocs\nfor Embedded [1] and re-arranging things in the order they suggest, things\n\"work\".  I\u0027m now getting (in the help browser):\n\nThere was an error in your action:\n\njavax.servlet.ServletException:\n\norg.apache.jasper.runtime.JspRuntimeLibrary.include(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljavax/servlet/jsp/JspWriter;Z)V\n\n\nI know very little about JSPs and such so if anyone has time to take a look,\nI\u0027d really appreciate it.  It appears (from EclipseErrorReportValve) that\nthere\u0027s an http response 200 coming from somewhere.\n\n[1]\nhttp://jakarta.apache.org/tomcat/tomcat-5.0-doc/catalina/docs/api/org/apache/catalina/startup/Embedded.html",
    "It appears that checking out org.eclipse.help.webapp and recompiling the JSPs\nhas solved the issue I had with the ServletException.  I am building some\nEclipse packages for Fedora now that have the tomcat5 work and I will verify\nthat things are working.",
    "Hi,\n\nWhat is the outlook for this for upgrade to Tomcat 5.x would be part of Eclipse \n3.2 plan?\n\nThanks!\n--Lee Anne",
    "We have not upgrade for Eclipse 3.1.  I would expect it makes sense to upgrade \nnear the end of 3.2 release (about 2 milestones before the end), to one of the \nlatest Tomcat releases.  Upgrading now at the beginning of release, and to \nTomcat 5.0.30 seems like a lost effort.  Each upgrade also requires some legal \nwork.\nWhat is the advantage of Tomcat 5.0 over 4.1 and 5.5?",
    "Created an attachment (id\u003d27361)\nLittle patch to prevent that Tomcat stores the config file in the plugin dir.\n\nWe had problems that tomcat tries to store a config file in the plugin\ndirectory, which is write protected. This patch should prevent this.",
    "Hi. What\u0027s the status of moving 3.2 to tomcat 5.x? Is this planned at all or is still undecided?\n\nThanks,\nIgor",
    "There is no firm plan at the moment that I\u0027m aware of, due to time constraints (we would have to drop something else if we want to do this).",
    "(In reply to comment #8)\n\u003e We have not upgrade for Eclipse 3.1.  I would expect it makes sense to upgrade \n\u003e near the end of 3.2 release (about 2 milestones before the end), to one of the \n\u003e latest Tomcat releases.\n\nThis sounds pretty good to me.\n\n\u003e What is the advantage of Tomcat 5.0 over 4.1 and 5.5?\n\nI don\u0027t believe it offers anything.  If I do the work updating to 5.5, can we expect it to be applied?",
    "I\u0027d be willing to review the patch and if everything goes smoothly put it in for 3.2 M6. But it would have to be early to mid M6 cycle, I don\u0027t want this to go in at the last minute as we need time to flush out any unforeseen problems that may arise.",
    "*** Bug 128726 has been marked as a duplicate of this bug. ***",
    "I did some work trying to move the TomcatAppServer.java to Tomcat 5.5.x see Bug #128726, some previous assumption do not hold, the guys at Apache got real busy with 5.5, it differs greatly from 5.0.x.\n\nThe ssl connector are create has changed completely, the is no longer any CoyoteConnector, the tomcat4 packe is completely gone.\n\nThe assumption made that we should listener on the connector for LifeCycle.START_EVET to know if the server has started won\u0027t, work, we now have to add a Listener to embedded which now implement the Lifecycle interface to know when the server starts.\n\nAnyway, I included the code.\n\nThe problem:\nI have Debug the plugin, it is working fine but org.eclipse.help.appserver is now broken.\n\nAndrew, since you\u0027re now probably very familiar with the help system, could take a look.\n\nThanks",
    "Created an attachment (id\u003d35099)\nTomcatPlugin which now properly implements Singleton\n\n",
    "Created an attachment (id\u003d35100)\nThe fixed Appserver plugin\n\nThis uses files found in bug 128726",
    "The plugin in bug #128726 is now patched, the patches are TomcatPlugin.java dated 2006-02-21 15:53 and TomcatAppServer.java dated 2006-02-21 15:55.\n\nThe help system need to be updated.",
    "Thanks for doing this work, Sheldon!  I will take a look at this stuff tomorrow.",
    "Created an attachment (id\u003d35332)\nfixes\n\nConnector are have to be explicitly started and are not started when added to the container as previous assumed.\nThe INetAddress is not set, if null, this defaults to localhost, this was needed before we start a connector.\nError that now arises is \n\nSEVERE: Servlet.service() for servlet org.eclipse.help.internal.webapp.jsp.advanced.index_jsp threw exception\njava.lang.NoSuchMethodError: org.apache.jasper.runtime.JspRuntimeLibrary.include(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljavax/servlet/jsp/JspWriter;Z)V\n\tat org.eclipse.help.internal.webapp.jsp.advanced.index_jsp._jspService(index_jsp.java:83)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)\n\tat org.eclipse.help.internal.webapp.jsp.index_jsp._jspService(index_jsp.java:73)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n\tat org.eclipse.tomcat.internal.EclipseErrorReportValve.invoke(EclipseErrorReportValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\n\tat org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n\tat org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n\tat java.lang.Thread.run(Unknown Source)\n",
    "I\u0027ve tried out these patches with tomcat 5.5.15 and while they apply, the help server seems to always attempt to go to www.null.com.  Sheldon, have you seen this?  What should I have checked out and patched other than org.eclipse.tomcat and org.eclipse.help.appserver?  Are there any patches against the latter?",
    "The Plugin is working, it was working yesterday but the it looks like we are going to have to re-write the index.jsp, advanced/index.jsp, basic/index.jsp, etc.\n\n\nThe only I have found work so far is\n\nhttp://localhost:59938/help/basic/help.jsp\n\nYou can get at the port the server is running on by drilling down through dynamic help and hover over a link in the help GUI, the url will be displayed in the status with the port.",
    "Can you please post patches instead of the zips or the .java files?",
    "(In reply to comment #20)\n\u003e \n\u003e SEVERE: Servlet.service() for servlet\n\u003e org.eclipse.help.internal.webapp.jsp.advanced.index_jsp threw exception\n\nI got something similar, but figured out the problem.  Tomcat now includes the JDT compiler (commonly known outside of eclipse.org as \"ecj\").  If you add the jdt.core jar to the runtime of org.eclipse.tomcat, it works.  I didn\u0027t try every page, but the random assortment of help pages that I did try worked fine.\n\nI will attach a patch and perhaps you can review it and see if it is okay, Sheldon?",
    "Created an attachment (id\u003d35342)\nworkspace patch for org.eclipse.tomcat and org.eclipse.help.webapp\n\nThis patch does not include the changed JARs in org.eclipse.tomcat/lib.  They can be downloaded from Sheldon\u0027s zip.\n\nI have one remaining issue:  unless I explicitly put a jdt.core jar on the runtime classpath of org.eclipse.help.webapp, it doesn\u0027t work.  I don\u0027t know how to set up the dependencies properly to make this work.  Anyone with more Eclipse knowledge know how to do that?  I tried adding an org.eclipse.tomcat dependency on jdt.core and re-exporting it, but that didn\u0027t seem to work.  I also made sure that in org.eclipse.jdt.core I added an x-friends:org.eclipse.help.webapp to org.eclipse.jdt.internal.compiler but that also didn\u0027t seem to help.  I\u0027m sure it\u0027s something simple.",
    "How does tomcat distribute this? Is it a separate JAR you need to download? Also.. do you know if this thing is identical to what is in the JDT core plugin?",
    "Perhaps a goofy question but what does moving to 5.5 do for Help?  What is the footprint impact (both disk and runtime)?  Keep in mind that the only reason tomcat is there is to support help.  ",
    "It doesn\u0027t do anything in terms of new features, which is why I consider this low priority maintenance. I don\u0027t know what the footprint is - Andrew, Sheldon, what are your observations so far?\n\nAt this point we\u0027re getting late in the cycle and it looks like there are problems with the upgrade. Unless these can be resolved soon I would prefer to wait until next release to put this in.",
    "Hi Jeff,\n\nApache has produced an embedded version of Tomcat which is a better fit for the purpose we use for and eclipse can further reduced the size and footprint of embedded version.\n\nComparisons\n\nSize\nTomcat_4.1.31 --- 2.48Mb\nTomcat_5.5.15 --- 2.14Mb\n\nStartup\nTomcat_5.5.15 starts up notably quicker than 4.1.31\n\nDependency on the SDK\nTomcat_4.1.31 requires a Java SDK\nTomcat_5.5.15 requires the present of only a JRE 1.5 and the ecj (JDT) for compiling the JSPs.\n\nSize of the WebApp\nCurrently\nOld --- 838Kb (this has been finetune remove all the jsp fragments)\nNew --- 796 (without any finetuning), it could decrease to 650 - 700Kb after removing the fragments.\n\nOther issues:\n1.  Apache recommends upgrading.\n2.  Curtis, --this would probably take some work-- if we embedded a small web server, such as TJWS (footprint would be 350Kb), inside eclipse and expose as a plugin, we could create distributable web applications.\nExample the eclipse Help could become a standalone application.\n\nThis is a new methodology but it\u0027s what thin-clients will eventually becomes.  Where inside having a web server, download a 1Mb application, has connect to a webservices running on top of a database.\n\n\n",
    "I like what I see about the footprint, but I also see a major problem...\n\n\u003eDependency on the SDK\n\u003eTomcat_4.1.31 requires a Java SDK\n\u003eTomcat_5.5.15 requires the present of only a JRE 1.5 and the ecj (JDT) for\n\u003ecompiling the JSPs.\n\nProblem: Is JRE 1.5 the minimum here, or will it also run on 1.4? Unfortunately we cannot bump up the minimum for help to 1.5 yet because it also bumps up the minimum for eclipse and all eclipse-based products out there.\n\nAlso, end users of eclipse don\u0027t require a full SDK - the JSPs are precompiled. You only need an SDK if you want to launch a runtime workbench for development/debugging of the help system.\n\n\u003e2.  Curtis, --this would probably take some work-- if we embedded a small web\n\u003eserver, such as TJWS (footprint would be 350Kb), inside eclipse and expose as a\n\u003eplugin, we could create distributable web applications.\n\u003eExample the eclipse Help could become a standalone application.\n\nThis is basically what we\u0027re already doing with tomcat at the moment, except we don\u0027t expose it (we consider it an implementation detail of the help system). The eclipse help system can already run in standalone mode, for use with apps that are not eclipse-based.",
    "JRE 1.5 provides Annotations and will allow us to make use of use of Servlet 2.5.\n\nIt is able to run in JRE 1.4 with the additionally requirements of Xerces or any other compliant xmlparser and jmx.jar.\n\nIf deployed with jasper-compiler-jdt.jar (this is the ecj), it does not require a JDK, as 4.1.31,  to run deployed jsps.\n\nThe reason for requesting the JRE 1.5 is to have webapps being webservice clients and Servlet 2.5 makes it easy to implement these.\n\nIf we create a public api for embedded server, we could move to Jetty which has Continuations in preparation for creating Web 2.0 apps, or TJWS for creating small web interfaces.\n\nWe need to now thinks beyond having it run only the Help system.\n\n\n\n\nThe (In reply to comment #30)\n\u003e I like what I see about the footprint, but I also see a major problem...\n\u003e \n\u003e \u003eDependency on the SDK\n\u003e \u003eTomcat_4.1.31 requires a Java SDK\n\u003e \u003eTomcat_5.5.15 requires the present of only a JRE 1.5 and the ecj (JDT) for\n\u003e \u003ecompiling the JSPs.\n\u003e \n\u003e Problem: Is JRE 1.5 the minimum here, or will it also run on 1.4? Unfortunately\n\u003e we cannot bump up the minimum for help to 1.5 yet because it also bumps up the\n\u003e minimum for eclipse and all eclipse-based products out there.\n\u003e \n\u003e Also, end users of eclipse don\u0027t require a full SDK - the JSPs are precompiled.\n\u003e You only need an SDK if you want to launch a runtime workbench for\n\u003e development/debugging of the help system.\n\u003e \n\u003e \u003e2.  Curtis, --this would probably take some work-- if we embedded a small web\n\u003e \u003eserver, such as TJWS (footprint would be 350Kb), inside eclipse and expose as a\n\u003e \u003eplugin, we could create distributable web applications.\n\u003e \u003eExample the eclipse Help could become a standalone application.\n\u003e \n\u003e This is basically what we\u0027re already doing with tomcat at the moment, except we\n\u003e don\u0027t expose it (we consider it an implementation detail of the help system).\n\u003e The eclipse help system can already run in standalone mode, for use with apps\n\u003e that are not eclipse-based.\n\u003e \n\n",
    "I see where you\u0027re going now Sheldon. I think the discussion about providing a general purpose webapp server belongs outside the Help system. There is already work in progress in the OSGi runtime to provide a general purpose HTTP service (Jeff can probably give you more info on this). Once all the pieces are there I think it would be great if we can migrate Help to use this service. There are no plans yet for this I\u0027m just thinking out loud about the future of Help.\n",
    "(In reply to comment #27)\n\u003e Perhaps a goofy question but what does moving to 5.5 do for Help?\n\nI\u0027ve never come at this from a \"what does this do for Help\" point of view but rather from a \"why are we keeping an old (and unsupported?) version?\" and a \"this would make shipping the Eclipse SDK with Linux distributions _so_ much easier\" POV.  :)",
    "(In reply to comment #28)\n\u003e At this point we\u0027re getting late in the cycle and it looks like there are\n\u003e problems with the upgrade. Unless these can be resolved soon I would prefer to\n\u003e wait until next release to put this in.\n\nSheldon and I got things working independently on Friday.  He told me via private mail that he can\u0027t access CVS due to firewall issues.  Perhaps I can create a patch based on his work?\n",
    "Feel free to post any patches.. I can review. Note that you will need to post binary files separately, as they get corrupted by the CVS patch system.",
    "Created an attachment (id\u003d35494)\nworkspace patch for org.eclipse.tomcat and org.eclipse.help.webapp\n\nHere\u0027s a patch of Sheldon\u0027s work.  I\u0027ll try to enumerate some of the changes:\n\nHe\u0027s moved the jars to org.eclipse.tomcat/lib (which is better IMHO) so that necessitated changes to org.eclipse.help.webapp/build.{xml,properties}.\n\nI had to patch build.xml a bit to get the jsps to rebuild.  The part including /usr/share/java/ant.jar *may* be specific to my current setup.\n\nThe changes to org.eclipse.help.webapp/WEB-INF/web.xml may be unnecessary as the placeholder may be all that is needed there.\n\nTomcatAppServer.java is a DOS line-ending file in CVS so Eclipse mistakenly generates a patch of the entire file (there\u0027s a bug about this somewhere ...).  I\u0027ll attach a unified diff of dos2unix\u0027d versions of the files.\n\nThe only remaining issue that I can see is that something has changed in org.apache.catalina.startup.Embedded and setting a logger is no longer done there.  I looked on the Tomcat website for a bit but couldn\u0027t find anything about 4.0 -\u003e 5.x migration that details what to do in this situation.  We should fix this because there is currently some Tomcat output sent to System.out that should go to a log somewhere instead.",
    "Created an attachment (id\u003d35496)\n*actual* differences in TomcatAppServer.java\n\n",
    "Created an attachment (id\u003d35503)\norg.eclipse.help.webapp/WEB-INF/lib contents (after regeneration)\n\n",
    "I\u0027ve put the tomcat libraries (org.eclipse.tomcat/lib contents) here:\n\nhttp://people.redhat.com/~overholt/tomcatlibs.zip",
    "For Windows, for Tomcat libs, use the Tomcat-5.5.15 Embedded download ound on the Tomcat download site",
    "I tried applying the patch and including the jars, but I\u0027m still getting many compile errors where it cannot find certain classes. I\u0027m afraid I don\u0027t have much time to spare for debugging this one..  did you run into this problem?",
    "(In reply to comment #41)\n\u003e did you run into this problem?\n\nI wouldn\u0027t have posted the patch if I had :)  I\u0027ll verify now that things apply cleanly in a fresh workspace and checkout.\n\n",
    "(In reply to comment #42)\n\u003e (In reply to comment #41)\n\u003e \u003e did you run into this problem?\n\u003e \n\u003e I wouldn\u0027t have posted the patch if I had :)  I\u0027ll verify now that things apply\n\u003e cleanly in a fresh workspace and checkout.\n\nI just tried it again.  I started M5 with a clean workspace and:\n\n1. checked out the head of org.eclipse.tomcat and org.eclipse.help.webapp\n2. removed all of the jars in org.eclipse.tomcat\n3. created org.eclipse.tomcat/lib and imported tomcatlibs.zip\n4. applied org.eclipse.tomcat-tomcat55.patch to org.eclipse.tomcat\n5. applied org.eclipse.help.webapp-tomcat55.patch to org.eclipse.help.webapp\n6. imported webapp.zip into org.eclipse.help.webapp/WEB-INF/lib\n7. right-clicked on org.eclipse.help.webapp -\u003e Run As -\u003e Eclipse Application\n\nThe help system came up no problem and I was able to browse around.  I tried running the Eclipse Application with both the Sun 1.5 JVM and with my gcj stack and it worked fine in both cases (the latter with no native compilation!).\n\nI did have a hard time rebuilding the help webapp.  It appeared to need a lot of modules that I didn\u0027t have checked out.  I imported them from existing features just to do the build of jsp.jar and servlets.jar.\n\nDoes any of this help?",
    "Thanks Andrew, I have it working now. Here are the remaining todos I see:\n\n- Redirect the output so that it doesn\u0027t go to stdout\n- We need to add the JDT piece for compiling the JSPs. I see you built the jars yourself and added them. It used to be that the jars would be built in the build process to improve the performace for releases, but for developing and maintaining the JSPs it would build them on the fly for you. I tried removing the jars and the extra entries in web.xml and when it tried to compile it could not find the JDT compiler. One slight problem here is that we may have to duplicate that piece inside help because help cannot depend on JDT; help is in platform and this would mean platform depends on JDT.\n",
    "(In reply to comment #44)\n\u003e Thanks Andrew, I have it working now.\n\nCool.\n \n\u003e - Redirect the output so that it doesn\u0027t go to stdout\n\nYeah, I don\u0027t know what to do about this.  I\u0027m far from a tomcat expert and looking around the tomcat website didn\u0027t really help me.  Are there any tomcat gurus you can call upon to help us with this?  I\u0027m sure with some time we could figure it out but it\u0027d be easier if someone who knew told us how to re-direct the output.\n\n\u003e - We need to add the JDT piece for compiling the JSPs.\n\nYeah, tomcat 5.5 has added jdt.core as a dependency for its on-the-fly jsp compilation.  If you run the ant task to generate WEB-INF/lib/{jsp,servlets}.jar, it\u0027ll work without the jdt.core requirement.  I guess if we do want on-the-fly compilation for CVS users, we should just import a stable version of org.eclipse.jdt.core like tomcat 5.5 does.  I don\u0027t really see a big deal with this.  Otherwise, we\u0027d have to get jdt.core to add x-friends tags to org.eclipse.jdt.core.* (or maybe a subset, I\u0027m not sure).  What do you think is better?\n\n",
    "That\u0027s a good idea actually, adding an optional dependency on jdt core. So this way if you want on the fly compilation you need to have jdt core present. And the dependency simply wouldn\u0027t be used in production since it\u0027s all precompiled.",
    "Hi,\n\nI apologize in advance if my question is no longer relevant or off-topic, but I thought I\u0027d mention it because Curtis\u0027s last comment reminded me.\n\nIn the current tomcat plug-in, I think there\u0027s a dependency on org.apache.ant plug-in that\u0027s for build-time, but not for run-time of the help. At least, my team tells me that for standalone help subset, we can omit the org.apache.ant from the standalone help system subset by removing a dependency that\u0027s in the Tomcat plug-in.\n\nSo, is this related to Curtis\u0027s comment: \"adding an optional dependency on jdt core. So this way if you want on the fly compilation you need to have jdt core present. And the dependency simply wouldn\u0027t be used in production since it\u0027s all precompiled.\"\n??\n\nOr, at the same time, can we make the org.apache.ant dependency optional (if it still exists with this update)?\n\nThanks! Again, if my comment makes no sense in this discussion, please let me know, so I can learn. :-)\n\n--Lee Anne\n",
    "This one is also an optional dependency and for the same reason. The pre-JDT on-the-fly compiler required ant. We\u0027ll have to check whether this dependency will still be needed after the upgrade. Thanks for pointing this one out. This compiler only kicks in if it can\u0027t find precompiled jars, so it is needed during build time for building the jars in the first place, and in production the jars are always there so the dependency is not needed. It will be the same story with the new JDT optional dependency.",
    "\"my team tells me that for standalone help subset, we can omit the org.apache.ant from the standalone help system subset by removing a dependency that\u0027s in the Tomcat plug-in\"\n\nActually you don\u0027t need to remove the dependency in the manifest, you can simply remove the ant plugin altogether. A plugin will still load and run even if one of its optional dependencies is missing, as long as it doesn\u0027t use the dependency (which it won\u0027t in this case).",
    "(In reply to comment #45)\n\u003e (In reply to comment #44)\n\u003e \u003e - Redirect the output so that it doesn\u0027t go to stdout\n\u003e \n\u003e Yeah, I don\u0027t know what to do about this.  I\u0027m far from a tomcat expert and\n\u003e looking around the tomcat website didn\u0027t really help me.  Are there any tomcat\n\u003e gurus you can call upon to help us with this?\n\nI\u0027ve wasted a large chunk of today trying to figure this out.  I really think we need to find a \"tomcat person\" because I\u0027m either incredibly stupid (entirely possible) or blind because I can\u0027t figure out how to do output redirection with tomcat 5.5.x.  There\u0027s a lot of stuff online about log4j but nothing seems applicable to our embedded tomcat situation.",
    "(In reply to comment #50)\n\u003e (In reply to comment #45)\n\u003e \u003e (In reply to comment #44)\n\u003e \u003e \u003e - Redirect the output so that it doesn\u0027t go to stdout\n\u003e \u003e \n\u003e \u003e Yeah, I don\u0027t know what to do about this.  I\u0027m far from a tomcat expert and\n\u003e \u003e looking around the tomcat website didn\u0027t really help me.  Are there any tomcat\n\u003e \u003e gurus you can call upon to help us with this?\n\u003e I\u0027ve wasted a large chunk of today trying to figure this out.  I really think\n\u003e we need to find a \"tomcat person\" because I\u0027m either incredibly stupid\n\u003e (entirely possible) or blind because I can\u0027t figure out how to do output\n\u003e redirection with tomcat 5.5.x.  There\u0027s a lot of stuff online about log4j but\n\u003e nothing seems applicable to our embedded tomcat situation.\n\nTomcat has method setRedirectStream() and initStreams\nThese have to be done before embedded.start();\nSteps\n1.  Redirect System.out\n e.g System.out \u003d new OutputStream();\n2.  embedded.setRedirectStreams(true);\n3. embedded.initStreams();\n4. embedded.start();\n\nOther things\nRemove the dependencies for common-logging and apache Xerces. These are not apart of the Platform.\nAdd the Apache Tomcat compatibility jars to the lib.\nAdd the jasper-compiler-jdt.jar to lib import the packages inside\nRemove the requirement for Xerces and commons-logging in the manifest.mf",
    "(In reply to comment #51)\n\u003e (In reply to comment #50)\n\u003e \u003e (In reply to comment #45)\n\u003e \u003e \u003e (In reply to comment #44)\n\u003e \u003e \u003e \u003e - Redirect the output so that it doesn\u0027t go to stdout\n\u003e \u003e \u003e \n\u003e \u003e \u003e Yeah, I don\u0027t know what to do about this.  I\u0027m far from a tomcat expert and\n\u003e \u003e \u003e looking around the tomcat website didn\u0027t really help me.  Are there any tomcat\n\u003e \u003e \u003e gurus you can call upon to help us with this?\n\u003e \u003e I\u0027ve wasted a large chunk of today trying to figure this out.  I really think\n\u003e \u003e we need to find a \"tomcat person\" because I\u0027m either incredibly stupid\n\u003e \u003e (entirely possible) or blind because I can\u0027t figure out how to do output\n\u003e \u003e redirection with tomcat 5.5.x.  There\u0027s a lot of stuff online about log4j but\n\u003e \u003e nothing seems applicable to our embedded tomcat situation.\n\u003e Tomcat has method setRedirectStream() and initStreams\n\u003e These have to be done before embedded.start();\n\u003e Steps\n\u003e 1.  Redirect System.out\n\u003e  e.g System.out \u003d new OutputStream();\n\u003e 2.  embedded.setRedirectStreams(true);\n\u003e 3. embedded.initStreams();\n\u003e 4. embedded.start();\n\u003e Other things\n\u003e Remove the dependencies for common-logging and apache Xerces. These are not\n\u003e apart of the Platform.\n\u003e Add the Apache Tomcat compatibility jars to the lib.\n\u003e Add the jasper-compiler-jdt.jar to lib import the packages inside\n\u003e Remove the requirement for Xerces and commons-logging in the manifest.mf\n\nSorry made an error.\nTo reassign System.out\ndo\nSystem.setOut(new PrintStream(new FileOutputStream(new File(base+\"logs/log\"))));\nthe other steps remain the same.",
    "We can\u0027t redirect stdout because it will affect all other components, not just Tomcat. If there are meaningful errors being printed they will likely be missed, it will make it more difficult to use println debugging, and will probably confuse a whole lot of plugin developers.\n",
    "Created an attachment (id\u003d35709)\nnew version of the workspace patch for org.eclipse.tomcat and org.eclipse.help.webapp\n\nHere\u0027s a new version of the patch that fixes the logging issue and includes a patch that was proposed earlier (https://bugs.eclipse.org/bugs/attachment.cgi?id\u003d27361).  With this, I get a working help system using tomcat 5.5.15 with no spurious output.\n\n(In reply to comment #51)\n\u003e \n\u003e Remove the dependencies for common-logging and apache Xerces.\n\nI don\u0027t see a dependency on xerces and commons-logging is needed (at least in my setup) for this part of EclipseErrorReportValve:\n\n-        Logger logger \u003d container.getLogger();\n+        Logger logger \u003d (Logger) container.getLogger();\n         if (logger !\u003d null)\n-            logger.log(this.toString() + \": \" + message); //$NON-NLS-1$\n+            logger.info(this.toString() + \": \" + message); //$NON-NLS-1$\n\n\u003e Add the Apache Tomcat compatibility jars to the lib.\n\nThis can be downloaded from where you said above, right?\n\n\u003e Add the jasper-compiler-jdt.jar to lib import the packages inside\n\nI think Curtis wanted to add the optional jdt.core dep instead.  Or am I showing that I don\u0027t know what jasper-compiler-jdt is?\n\n\u003e Remove the requirement for Xerces and commons-logging in the manifest.mf\n\nSee above.\n\n(In reply to comment #53)\n\u003e We can\u0027t redirect stdout because it will affect all other components, not just\n\u003e Tomcat.\n\nIt was stderr that needed to be redirected.  Also, stdout was already being directed.  See TomcatAppServer (current CVS HEAD) around line 149 :)",
    "\u003e (In reply to comment #53)\n\u003e \u003e We can\u0027t redirect stdout because it will affect all other components, not just\n\u003e \u003e Tomcat.\n\u003e \n\u003e It was stderr that needed to be redirected.  Also, stdout was already being\n\u003e directed.  See TomcatAppServer (current CVS HEAD) around line 149 :)\n\u003e \n\nAh, I see it does redirect it, but it puts it back after...\n\n            // Install the assembled container hierarchy\n            PrintStream sysOut \u003d System.out;\n            // reassign standard output to prevent Tomcat from writing\n            // its version message there.\n            System.setOut(new PrintStream(new ByteArrayOutputStream()));\n            try {\n                embedded.addEngine(engine);\n            } finally {\n                System.setOut(sysOut);\n            }\n\nAs long as it gets set back I\u0027m fine with it.\n\nDoes anyone know exactly what is in jasper-compiler-jdt.jar ? It is a jasper component that uses JDT, just the JDT, or both?\n",
    "(In reply to comment #55)\n\u003e Does anyone know exactly what is in jasper-compiler-jdt.jar ? It is a jasper\n\u003e component that uses JDT, just the JDT, or both?\n\nAccording to this it is indeed just the JDT compiler:\n\nhttp://tomcat.apache.org/tomcat-5.5-doc/RELEASE-NOTES.txt\n\nI downloaded and examined the jar and it only contains classes in these hierarchies:\n\norg/eclipse/jdt/internal/compiler/\norg/eclipse/jdt/core/compiler\n",
    "Given that we\u0027re running too far into M6 on this one and due to the number of problems encountered, I would rather not put this in for this release. I feel that the risks outweigh the benefits. Jeff and Dejan (people more important than me :-)) have also raised concerns about this one. Let\u0027s continue this one next release.. apologies to Sheldon and Andrew for working hard on this one (but the work is not wasted!)",
    "(In reply to comment #57)\n\u003e Given that we\u0027re running too far into M6 on this one and due to the number of\n\u003e problems encountered,\n\nYou said you wanted to wait until after M5 so we did.  The problems that have all been resolved?\n\n\u003e I feel that the risks outweigh the benefits.\n\nBut the benefits aren\u0027t for help, they\u0027re for (well, in my case) Linux distributions who don\u0027t ship the old version of tomcat.\n\n\u003e Jeff and Dejan (people more important\n\u003e than me :-)) have also raised concerns about this one.\n\nWhat are their concerns?\n\n\u003e Let\u0027s continue this one\n\u003e next release.. apologies to Sheldon and Andrew for working hard on this one\n\u003e (but the work is not wasted!)\n\nNext release as in 3.3 or as in 3.2.1?  I\u0027m very disappointed that I wasted the large part of a few weeks on this and it\u0027s not going to make it into 3.2.  I originally did the work to get help upgraded to 5.0 *last June*.",
    "My concerns relate to destablization.  Help is a key part of the Eclipse story and is used in a very large number of small and large configurations.  For these usecases the current version of Tomcat is sufficient and well understood.  As I understand it, the tangible (i.e., performance) benefits of moving are quite modest and thus do not balance off against the destabilization possibilities.\n\nThings like the changes in comment 55 make me nervous.  That is not thread safe as it affects a global.  What happens if I am using the console and suddenly Tomcat decides it needs to log something?  I\u0027m not picking on that particular approach but rather saying that these kinds of issues need time to settle out.\n\nCan you clarify the issues around Linux distributions?  Is it not possible to ship two versions of Tomcat?  This sort of situation must come up in other contexts?  How do they handle it there?\n\nAs for 3.2.1, the short answer is no.  Out maintenance releases tend to include only a very small number of very high value, low risk changes.  \n\nIn a way you are caught in an unfortunate situation.  Ideally you would be having this discussion with the Apache folks and getting them to supply a Tomcat bundle!  If Tomcat shipped bundles that could integrate into an OSGi execution environment then both the work and risk of adopting newer versions would be greatly reduced.",
    "(In reply to comment #59)\n\u003e Can you clarify the issues around Linux distributions?  Is it not possible to\n\u003e ship two versions of Tomcat?  This sort of situation must come up in other\n\u003e contexts?  How do they handle it there?\n\nLinux distributions build packages from source.  Thus, we can\u0027t just take the tomcat jars that are bundled with Eclipse and ship them -- we must build them from source.  Since we already ship Tomcat, we simply symlink to the jars that are part of the Tomcat packages.\n\nFedora will not ship multiple versions of Tomcat.  RHEL and other \"commercial\" distributions may, but there are not enough packaging resources to do that for Fedora where one of the few situations is for Eclipse help.  I can\u0027t speak for the Debian guys or those working on other distros.  Presumably their situations are at least somewhat similar.\n\n\u003e In a way you are caught in an unfortunate situation.  Ideally you would be\n\u003e having this discussion with the Apache folks and getting them to supply a\n\u003e Tomcat bundle!  If Tomcat shipped bundles that could integrate into an OSGi\n\u003e execution environment then both the work and risk of adopting newer versions\n\u003e would be greatly reduced.\n\n:)  The silly thing is, I know *very* little about Tomcat and *very* little abou the Eclipse help system.  I just did this work because the largest of the patches that we have to carry in our Fedora Eclipse SDK packages is the patch to use the version of Tomcat that we ship.  It\u0027s not the end of the world if this doesn\u0027t get in, but it\u0027s just disappointing that the work that Sheldon and I did can\u0027t get included.\n\nIs there someone actively working on the help system from a programmatic standpoint?  From and outside point-of-view, it appears that things have stagnated and judging from the comments on this bug, it doesn\u0027t appear that anyone is actively working on it.\n\nAnyway, thanks for the comments, Jeff.  I understand the situation and can appreciate the concerns.\n",
    "(In reply to comment #60)\n\u003e :)  The silly thing is, I know *very* little about Tomcat and *very* little\n\u003e abou the Eclipse help system. \n\nI should clarify that I wasn\u0027t expecting my work to be blindly accepted but to be reviewed by someone who knew what was going on ;)",
    "(In reply to comment #60)\n\u003e Is there someone actively working on the help system from a programmatic\n\u003e standpoint?  From and outside point-of-view, it appears that things have\n\u003e stagnated and judging from the comments on this bug, it doesn\u0027t appear that\n\u003e anyone is actively working on it.\n\nResources have been shifted to and from Help in the past while so the original authors are no longer on it. I am spending most of my time on Help but am still fairly new to it.\n",
    "Just to clarify...  Help is very important and the Eclipse user assistance story is under active development.  Note however that that does not mean that the Help function itself is changing.  Much of the current function is there, works and is sufficient.  So for example, you are not seeing a big push from us to move to a new Tomcat.  \n\nIf this kind of change were to go in, we would need to get very comfortable with the changes and the resultant setup.",
    "(In reply to comment #63)\n\u003eMuch of the current function is there,\n\u003e works and is sufficient.  So for example, you are not seeing a big push from us\n\u003e to move to a new Tomcat.\nI had apprached the problem with a different mindset of expanding the functionality of the embedded server to handle webapps requiring things beyond the help system, such servlets 2.3 and jsp 2.1.  Can this work be migrated the OSGi server frameworks?  This may have been the wrong context in which this work was done.\n  \n\u003e If this kind of change were to go in, we would need to get very comfortable\n\u003e with the changes and the resultant setup.\n\nAndrew problem is a bit different.  Linux distro may need a patched help system. Concerning comment #55, that is the original code from 4.1.31, the new approach use by Andrew is much better, enclosing the redirection the try...finally block, and the SystemLogHandler use the new OutputStream and System.out reverts back to console.\nOne solution is creating a new issue tracker in which we providethe new patch for Linux distros.",
    "Yes, the general provision of HTTP/Servlet/JSP/WebApp servers should be handled as part of the Equinox work.  We already have an implementation of the OSGi HTTP service there that handles servlet 2.3 (I believe).  Several people have remarked that it would be interesting to do a servlet 2.4 implementation.  It may then be the case that Help can use one of these implementations as the base for its server.\n\nAs for the logging, sorry, I may have misunderstood.  throwing the global switch to flip the log back and forth is not great for the reasons mentioned.  If there is a more discrete mechanism, that would be an improvement.",
    "I\u0027m trying to create a sourceforge project to host the plugins (org.eclipse.help.base, org.eclipse.help.webapps, org.apache.tomcat:\nFeatures\n1. Logging - Tomcat Plugin create a .log files found in the plugin State Location - this will be useful in debugging webapps such as BIRT reports, TPTP  reports etc.\n\n2. Security - Help System no longer exposes the plugin root over HTTP - this was a security issues I noticed but did not fix originally as it would have cause a breaking change with help.base plugin.  Since changes will not be incorporated in new release, I have made the changes to help.base and help.webapps to fix the change.\n\nFixes:\n1.  Made dependency on jdt.core optional - this was done with understanding that if jdt.core is not included, jsps should be pre-compiled.\n2.  System.out redirections are not all synchronized - the are not side-effects, this is was verified by examining the .log file.\n3.  Incorporates the change made by Intel Corp on the 20060212\n\nI submitted my request for sourceforge site on Monday but it\u0027s still under review, as soon as I get the url I\u0027ll post the link.",
    "Link http://sourceforge.net/projects/eclipsehelp.\n\nDownload and unzip.\n\n\n(In reply to comment #66)\n\u003e I\u0027m trying to create a sourceforge project to host the plugins\n\u003e (org.eclipse.help.base, org.eclipse.help.webapps, org.apache.tomcat:\n\u003e Features\n\u003e 1. Logging - Tomcat Plugin create a .log files found in the plugin State\n\u003e Location - this will be useful in debugging webapps such as BIRT reports, TPTP \n\u003e reports etc.\n\u003e \n\u003e 2. Security - Help System no longer exposes the plugin root over HTTP - this\n\u003e was a security issues I noticed but did not fix originally as it would have\n\u003e cause a breaking change with help.base plugin.  Since changes will not be\n\u003e incorporated in new release, I have made the changes to help.base and\n\u003e help.webapps to fix the change.\n\u003e \n\u003e Fixes:\n\u003e 1.  Made dependency on jdt.core optional - this was done with understanding\n\u003e that if jdt.core is not included, jsps should be pre-compiled.\n\u003e 2.  System.out redirections are not all synchronized - the are not\n\u003e side-effects, this is was verified by examining the .log file.\n\u003e 3.  Incorporates the change made by Intel Corp on the 20060212\n\u003e \n\u003e I submitted my request for sourceforge site on Monday but it\u0027s still under\n\u003e review, as soon as I get the url I\u0027ll post the link.\n\u003e ",
    "What\u0027s happening with this? Will this make it into 3.3 or is tomcat going to be removed?",
    "We\u0027re hoping it will be removed.. see bug 138390. There\u0027s a prototype of help running on a Jetty-based HTTP service implementation provided by Equinox. If this implementation can be put in production early enough in 3.3 we will switch.",
    "Can we use the embedded tomcat binaries.  Jetty is good but there are more people working with tomcat and eclipse community has already invested a lot of time incorporating tomcat into the builds.  Other projects are already making the effort (JBoss, JonAS) to have their ejb3 containers work inside tomcat.  There has to be very strong reasons for the switch.  I agree we must decouple the http service but let tomcat be the reference implementation for the service.\n\nGood news see bug #38144.  The ecj is now standalone. Will revisit the plugin to incorporate it",
    "This is something you\u0027ll have to take up with the Equinox team, who is providing the HTTP service implementation. From our point of view, it does not matter which implementation they use as long as it works as defined by the HTTP service specification.",
    "Hi,\n\nWith all of the appends to this bug, I\u0027ve lost track of whether the decision was definitely made to not upgrade to Tomcat 5 in Eclipse 3.3.\n\nAs far as I can tell, the Equinox work is still incubating. I\u0027m getting some indication from my teams that there would be benefits to them to have Tomcat at v5 level in Eclipse 3.3. That seems simpler to rely on for Eclipse 3.3 timeframe than the Equinox work, at current course and speed and understanding. :-)\n\nIs my understanding off base? Is there a clear way to proceed for Eclipse 3.3 planning related to Tomcat v5 or something other?\n\nThanks!\n--Lee Anne",
    "We currently have no plans to upgrade the internal tomcat used by help. Instead, we are waiting for the equinox service and want to switch to that instead, even if it means waiting another release. The question of implementation, however, remains because the service has to be implemented somehow. I believe the equinox implementation will use Jetty.\n\nI have (or at least had) a working prototype of Help running on the service in bug 138390 comment #5. If the service is ready early enough in 3.3 I do want to switch in 3.3. If not, then next release.\n\nJeff, what is the current outlook for the HTTP service? Do you think it is likely to be ready in 3.3?",
    "I can give a bit of an update...\nWe received legal approval for using Jetty late last week. That was the last of the set of dependencies we needed approval for to build a Servlet 2.4 / JSP 2.0 compliant Http Service around Jetty.\n\nThe implementation work has been done for several months, so now it\u0027s a matter of packaging up the various components for consumption and ensuring the integration is of good quality.",
    "In Eclipse 3.3 we switched from using Tomcat to using the Equinox (jetty based) http server. Closing.",
    "I realize help update tomcat, but will the old tomcat 4.x snapshot be carried around in perpetuity?  I assume it can\u0027t go until 4.0, right?",
    "The org.eclipse.tomcat plugin is still included in Eclipse 3.3 but will be removed in the future, possibly in Eclipse 3.4."
  ],
  "commentCreationDates": [
    "2005-06-03T22:17:41+02:00",
    "2005-06-03T23:50:26+02:00",
    "2005-06-08T23:17:00+02:00",
    "2005-06-08T23:17:46+02:00",
    "2005-06-13T20:16:24+02:00",
    "2005-06-14T17:33:40+02:00",
    "2005-06-14T20:01:25+02:00",
    "2005-07-28T02:31:47+02:00",
    "2005-07-28T04:05:34+02:00",
    "2005-09-21T21:59:14+02:00",
    "2006-01-26T19:00:51+01:00",
    "2006-01-26T19:27:54+01:00",
    "2006-02-06T20:04:04+01:00",
    "2006-02-06T21:44:52+01:00",
    "2006-02-21T00:00:23+01:00",
    "2006-02-21T18:18:06+01:00",
    "2006-02-21T20:53:50+01:00",
    "2006-02-21T20:55:35+01:00",
    "2006-02-21T21:11:46+01:00",
    "2006-02-21T21:41:41+01:00",
    "2006-02-24T18:47:43+01:00",
    "2006-02-24T19:01:51+01:00",
    "2006-02-24T19:05:44+01:00",
    "2006-02-24T19:24:41+01:00",
    "2006-02-24T21:10:07+01:00",
    "2006-02-24T22:06:18+01:00",
    "2006-02-24T22:11:27+01:00",
    "2006-02-25T07:05:46+01:00",
    "2006-02-25T22:58:41+01:00",
    "2006-02-27T15:05:32+01:00",
    "2006-02-27T15:30:13+01:00",
    "2006-02-27T15:54:59+01:00",
    "2006-02-27T16:08:39+01:00",
    "2006-02-27T18:39:10+01:00",
    "2006-02-27T18:55:31+01:00",
    "2006-02-27T19:03:22+01:00",
    "2006-02-28T20:45:47+01:00",
    "2006-02-28T20:46:39+01:00",
    "2006-02-28T21:07:03+01:00",
    "2006-02-28T21:08:33+01:00",
    "2006-02-28T22:24:59+01:00",
    "2006-03-01T04:27:37+01:00",
    "2006-03-01T14:52:18+01:00",
    "2006-03-01T15:05:59+01:00",
    "2006-03-01T15:49:59+01:00",
    "2006-03-01T17:34:17+01:00",
    "2006-03-01T18:34:17+01:00",
    "2006-03-01T18:58:28+01:00",
    "2006-03-01T19:31:29+01:00",
    "2006-03-01T19:35:06+01:00",
    "2006-03-01T21:28:50+01:00",
    "2006-03-02T18:36:16+01:00",
    "2006-03-03T17:36:50+01:00",
    "2006-03-03T18:59:55+01:00",
    "2006-03-03T22:57:29+01:00",
    "2006-03-03T23:11:59+01:00",
    "2006-03-03T23:22:57+01:00",
    "2006-03-06T15:55:08+01:00",
    "2006-03-06T15:59:05+01:00",
    "2006-03-06T16:22:58+01:00",
    "2006-03-06T16:32:13+01:00",
    "2006-03-06T16:38:01+01:00",
    "2006-03-06T16:47:27+01:00",
    "2006-03-06T17:23:36+01:00",
    "2006-03-07T17:46:05+01:00",
    "2006-03-07T18:10:06+01:00",
    "2006-03-17T19:05:22+01:00",
    "2006-03-23T13:27:25+01:00",
    "2006-07-05T16:00:32+02:00",
    "2006-07-05T16:35:10+02:00",
    "2006-07-06T17:31:06+02:00",
    "2006-07-06T17:39:00+02:00",
    "2006-09-11T21:47:22+02:00",
    "2006-09-11T21:57:22+02:00",
    "2006-09-11T22:59:22+02:00",
    "2007-06-14T21:19:39+02:00",
    "2007-06-14T22:27:37+02:00",
    "2007-06-14T22:38:35+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchMethodError",
      "message": "org.apache.jasper.runtime.JspRuntimeLibrary.include(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljavax/servlet/jsp/JspWriter;Z)V",
      "elements": [
        {
          "method": "org.eclipse.help.internal.webapp.jsp.advanced.index_jsp._jspService",
          "source": "index_jsp.java:83"
        },
        {
          "method": "org.apache.jasper.runtime.HttpJspBase.service",
          "source": "HttpJspBase.java:97"
        },
        {
          "method": "javax.servlet.http.HttpServlet.service",
          "source": "HttpServlet.java:802"
        },
        {
          "method": "org.apache.catalina.core.ApplicationFilterChain.internalDoFilter",
          "source": "ApplicationFilterChain.java:252"
        },
        {
          "method": "org.apache.catalina.core.ApplicationFilterChain.doFilter",
          "source": "ApplicationFilterChain.java:173"
        },
        {
          "method": "org.apache.catalina.core.ApplicationDispatcher.invoke",
          "source": "ApplicationDispatcher.java:672"
        },
        {
          "method": "org.apache.catalina.core.ApplicationDispatcher.processRequest",
          "source": "ApplicationDispatcher.java:463"
        },
        {
          "method": "org.apache.catalina.core.ApplicationDispatcher.doForward",
          "source": "ApplicationDispatcher.java:398"
        },
        {
          "method": "org.apache.catalina.core.ApplicationDispatcher.forward",
          "source": "ApplicationDispatcher.java:301"
        },
        {
          "method": "org.eclipse.help.internal.webapp.jsp.index_jsp._jspService",
          "source": "index_jsp.java:73"
        },
        {
          "method": "org.apache.jasper.runtime.HttpJspBase.service",
          "source": "HttpJspBase.java:97"
        },
        {
          "method": "javax.servlet.http.HttpServlet.service",
          "source": "HttpServlet.java:802"
        },
        {
          "method": "org.apache.catalina.core.ApplicationFilterChain.internalDoFilter",
          "source": "ApplicationFilterChain.java:252"
        },
        {
          "method": "org.apache.catalina.core.ApplicationFilterChain.doFilter",
          "source": "ApplicationFilterChain.java:173"
        },
        {
          "method": "org.apache.catalina.core.StandardWrapperValve.invoke",
          "source": "StandardWrapperValve.java:213"
        },
        {
          "method": "org.apache.catalina.core.StandardContextValve.invoke",
          "source": "StandardContextValve.java:178"
        },
        {
          "method": "org.apache.catalina.core.StandardHostValve.invoke",
          "source": "StandardHostValve.java:126"
        },
        {
          "method": "org.eclipse.tomcat.internal.EclipseErrorReportValve.invoke",
          "source": "EclipseErrorReportValve.java:158"
        },
        {
          "method": "org.apache.catalina.core.StandardEngineValve.invoke",
          "source": "StandardEngineValve.java:107"
        },
        {
          "method": "org.apache.catalina.connector.CoyoteAdapter.service",
          "source": "CoyoteAdapter.java:148"
        },
        {
          "method": "org.apache.coyote.http11.Http11Processor.process",
          "source": "Http11Processor.java:856"
        },
        {
          "method": "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection",
          "source": "Http11Protocol.java:744"
        },
        {
          "method": "org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket",
          "source": "PoolTcpEndpoint.java:527"
        },
        {
          "method": "org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt",
          "source": "LeaderFollowerWorkerThread.java:80"
        },
        {
          "method": "org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run",
          "source": "ThreadPool.java:684"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 20,
      "bugId": "98371",
      "date": "2006-02-24T18:47:43+01:00",
      "product": "Platform",
      "component": "User Assistance",
      "severity": "normal"
    }
  ],
  "groupId": "98371",
  "bugId": "98371",
  "date": "2005-06-03T22:17:41+02:00",
  "product": "Platform",
  "component": "User Assistance",
  "severity": "normal"
}