{
  "comments": [
    "I20050112-1200 + jdt.core v_531b:\n\nIn a workspace with an 1.5 jdk, search for declarations of method \"add(E)\".\n\u003d\u003e Log:\n\nError 2005-01-18 13:03:33.481 An internal error occurred during: \"Java Search\".\njava.lang.NullPointerException\nat\norg.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck(TypeVariableBinding.java:73)\nat\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve(ParameterizedTypeBinding.java:595)\nat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:53)\nat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass(BinaryTypeBinding.java:773)\nat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:972)\nat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:934)\nat\norg.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(SingleTypeReference.java:42)\nat\norg.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:141)\nat\norg.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(TypeReference.java:104)\nat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(ClassScope.java:1066)\nat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass(ClassScope.java:725)\nat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy(ClassScope.java:861)\nat\norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy(CompilationUnitScope.java:243)\nat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(LookupEnvironment.java:195)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:864)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:928)\nat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1030)\nat\norg.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\nat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:196)\nat\norg.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:382)\nat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:512)\nat org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:132)\nat\norg.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:93)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "I cannot reproduce in my current working workspace., but got it in another one...\nSeems to be a transient issue. I continue to investigate...",
    "I reproduced it in a fresh workspace with a single fresh java project whose\nproject-specific compiler compliance level was set to 5.0.",
    "This was due to the fact that in my tests, I had JDK 1.5 source files. It only\nhappens for with Binary types...\nI can now reproduce it easily...",
    "*** Bug 81916 has been marked as a duplicate of this bug. ***",
    "After loooong time, I was able to reduce the test case and have this NPE without\nusing Search (thanks Jerome for provided help :-))...\n\nProject hierarchy for test case is:\nb83083\n  a\n    C.java\n      package a;\n      import p.B;\n      public class C extends B {\n\tpublic void foo(Object obj) {}\n      }\n  p\n    B.java\n      package p;\n      public class B\u003cE\u003e extends A\u003cE\u003e {}\n    A.java\n      package p;\n      public class A\u003cE\u003e {\n\tpublic void foo(E e) {}\n      }\n\nNow export class B in a jar (let say b83083.jar), remove class from package and\nput b83083.jar file in class path.\n\nProject looks now as follow:\nb83083\n  a\n    C.java\n  p\n    A.java\n  b83083.jar\n\nand its .classpath is\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cclasspath\u003e\n\t\u003cclasspathentry kind\u003d\"src\" path\u003d\"src\"/\u003e\n\t\u003cclasspathentry kind\u003d\"con\"\npath\u003d\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/1.5.0\"/\u003e\n\t\u003cclasspathentry kind\u003d\"lib\" path\u003d\"D:/usr/OTI/bugs/external/b83083.jar\"/\u003e\n\t\u003cclasspathentry kind\u003d\"output\" path\u003d\"bin\"/\u003e\n\u003c/classpath\u003e\n\nNow try to edit class C \u003d\u003e you get the exception...\n",
    "Created an attachment (id\u003d17279)\nJar file with class B\n\nJust to avoid to create class B, jar and remove...",
    "While implementing bug 75642, I\u0027ve wrongly changed the fact that bindings were\nnot resolved for method string patterns with no qualified parameters (typically\n\"add(E)\"...).\nI\u0027ve put back this behavior and released in HEAD. This would hide this issue\nwhile performing this peculiar search.",
    "Added GenericTypeTest#test469. Problem lies in type hierarchy computation which\ncomes across an unitialized type variable during bound check.",
    "*** Bug 87138 has been marked as a duplicate of this bug. ***",
    "Enabled GenericType test.\n\nNo longer check bounds in binary type resolution... incremental build will \ndetect the errors.",
    "Verified in I20050510-0010"
  ],
  "commentCreationDates": [
    "2005-01-18T12:10:16+01:00",
    "2005-01-18T12:51:39+01:00",
    "2005-01-18T13:34:50+01:00",
    "2005-01-18T13:54:49+01:00",
    "2005-01-19T09:47:38+01:00",
    "2005-01-19T16:44:44+01:00",
    "2005-01-19T16:45:59+01:00",
    "2005-01-20T11:44:35+01:00",
    "2005-01-24T17:57:55+01:00",
    "2005-03-06T19:21:51+01:00",
    "2005-04-29T22:32:40+02:00",
    "2005-05-11T15:13:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck",
          "source": "TypeVariableBinding.java:73"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve",
          "source": "ParameterizedTypeBinding.java:595"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType",
          "source": "BinaryTypeBinding.java:53"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass",
          "source": "BinaryTypeBinding.java:773"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:972"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:934"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding",
          "source": "SingleTypeReference.java:42"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType",
          "source": "TypeReference.java:141"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType",
          "source": "TypeReference.java:104"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:1066"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass",
          "source": "ClassScope.java:725"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:861"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:243"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:195"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:864"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:928"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1030"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches",
          "source": "BasicSearchEngine.java:196"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.search",
          "source": "BasicSearchEngine.java:382"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:512"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run",
          "source": "JavaSearchQuery.java:132"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "InternalSearchUI.java:93"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "83083",
      "date": "2005-01-18T12:10:16+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "83083",
  "bugId": "83083",
  "date": "2005-01-18T12:10:16+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}