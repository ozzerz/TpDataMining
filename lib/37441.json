{
  "comments": [
    "I\u0027m attempting to integrate third-party libs to my plugin and the libs are \nusing JAAS. Got a lot of problems with the library:\n- if I put JAAS to lib folder of my plugin and register it in \u003cruntime\u003e \ndeclaration, I get\njava.lang.SecurityException: unable to instantiate LoginConfiguration\n\tat javax.security.auth.login.Configuration.getConfiguration\n(Configuration.java:212)\n\tat javax.security.auth.login.LoginContext$1.run(LoginContext.java:166)\n\tat java.security.AccessController.doPrivileged(Native Method)\n        ...\nWhich according to the sources of Configuration is \ninternal \"ClassNotFoundException\" for class, which is in the same jaas.jar \n(\"com.sun.security.auth.login.ConfigFile\").\n\n- if I put jaas.jar to my default jre (jre/lib/ext), the jar is locked by \nEclipse, but I get \"ClassNotFound\" exception for the first class access \nattempt.\n\nQuestion: is there any way to define how classpath will be for a particular \nplugin?\nIf not, may be there is a way to define additional classpath entries for all \nplugins?\nI tried to run eclipse with -vmargs -cp %myclasspath% options - no effect in \nrun-time workbench, no classes found from this classpath.\nI tried run-time workbench with -dev %myclasspath% - getting plenty of \nClassNotFoundExceptions from workspace plugins (seems, like \"-dev bin\" is not \na just example, but only working combination, since \"-dev bin,something\" \ndoesn\u0027t allow access to \u0027something\u0027)\n\nThe third-party libraries, I work are extensively use classpath (e.g. they \nload/write resources from classpath), the only way I found how to pass \ndirectory in classpath (i.e. location for files, where they can be \noverwritten), is to put the files to jre/lib/classes, which seem to appear in \nbase classpath for all plugins. Any other ways?\n\nI think there something wrong in classloader (or in combination of \nclassloaders) of Eclipse, since I can run \"main\" method in my plugin (i.e. \nexecute it as standalone java application) without any problems, but this must \nbe a plugin functionality.\nSorry if I incorrectly set severity as \"blocker\", but I\u0027m trying to resolve \nthe issue for several days now, community is not responsive, so only authors \ncan help.\nThank you in advance!",
    "There is no way to change the classpath of a plugin at runtime.\n\nCould you please give more details on what you are trying to achieve, \nespecially what you meant by reading and writing. Does this problem only occurs \nwith JAAS, or does it also occurs with other libraries?\n\nWhich VM and SDK are you using?\n\nPlease move this bug to Platform/Core and also create a PR in PDE-UI for the \nbug related to the -dev param problem. Thank you.\n",
    "The libraries, I\u0027m using, are parsing some XML files, which must be in \nclasspath. Also the files are serialized back sometimes. To \nprevent \"ResourceNotFound\" exception, I put the files to a jar file, which \ndeclared in \u003clibrary\u003e of plugin and the reading phase passed through.\nHowever some time later I get \"IOException\" on attempt to write xxxjar!xml.xml.\nIf I put the files to jre/classes - this stuff works well.\n\nSo far the problem occurred only with JAAS. Note: I had quite strange \nexperience with it - the libraries, I use, were delivered with JAAS1.0 and I \ndid a lot of things to work the problem out (Unable to instantiate \nLoginConfiguration) without any success. Finally I went to SUN site and \ndownloaded JAAS1.0_01. After replacement of the jar (I didn\u0027t restart \nEclipse), my application worked correctly. Next day (restart of computer) \nsituation repeated - again the same exception.\n\nRight at the moment I use the following solution:\n\nClassLoader loader \u003d Thread.currentThread().getContextClassLoader();\nThread.currentThread().setContextClassLoader(getClass().getClassLoader());\n\u003ccall to the library\u003e\nThread.currentThread().setContextClassLoader(loader);\n\nThis works well, no exceptions. However I can\u0027t debug application at all. On \nfirst break-point occurrence (stack traces in debugger show all thread \nproperly, including suspended one),  there is GPF in JVM.DLL, and run-time \nworkbench closes at once. I don\u0027t think that the classloader trick above has \nsomething to do, because I had this GPF even before introduction of the code \nand thought it\u0027s because of classpath problems...\n\nI\u0027m running JDK1.3.1 (the libraries are fixed to 1.3, do not allow 1.4), \nEclipse 2.1 (I\u0027ve tried latest 2.1.1 with the same result).\n\nSwitching to Platform/Core",
    "Reassigning...",
    "This looks like a WONTFIX.  We know the \"ext\" directory is not available to the\nEclipse classloaders.  See the following bug:\n\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d30919\n\nAlso true that the context classloader is not set to something meaningful in\nEclipse.  However, each plugin has its own classloader, and each thread has its\nown classloader.  Since there is no consistent mapping between threads and\nplugins, we can\u0027t set the context classloader to anything useful.  Your\nworkaround to set the context loader before/after the library call is the\nstandard solution that people have been using.  See the following discussions on\nthe Eclipse wiki:\n\nhttp://eclipsewiki.swiki.net/114#context\nhttp://eclipsewiki.swiki.net/114#eclipseClassloading\nhttp://eclipsewiki.swiki.net/114#augmentedClasspath"
  ],
  "commentCreationDates": [
    "2003-05-09T18:13:06+02:00",
    "2003-05-09T21:23:27+02:00",
    "2003-05-12T10:23:04+02:00",
    "2003-10-01T18:41:49+02:00",
    "2003-10-01T19:36:36+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.SecurityException",
      "message": "unable to instantiate LoginConfiguration",
      "elements": [
        {
          "method": "javax.security.auth.login.Configuration.getConfiguration",
          "source": "Configuration.java:212"
        },
        {
          "method": "javax.security.auth.login.LoginContext$1.run",
          "source": "LoginContext.java:166"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "37441",
      "date": "2003-05-09T18:13:06+02:00",
      "product": "Platform",
      "component": "Resources",
      "severity": "normal"
    }
  ],
  "groupId": "37441",
  "bugId": "37441",
  "date": "2003-05-09T18:13:06+02:00",
  "product": "Platform",
  "component": "Resources",
  "severity": "normal"
}