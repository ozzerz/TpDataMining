{
  "comments": [
    "build 20020918\n\nOn Eclipse, I was browsing code, running some test, and using java search many\ntimes, around one hour and half of work I did a last java search, right click on\nthe result and after the menu pop-up eclipse got a SWT Exception and invite me\nto close it.\n\nHere is the log:\n\n!ENTRY org.eclipse.ui 4 4 Sep 24, 2002 16:45:52.655\n!MESSAGE Unhandled exception caught in event loop.\n!ENTRY org.eclipse.ui 4 0 Sep 24, 2002 16:45:52.659\n!MESSAGE No more callbacks\n!STACK 0\norg.eclipse.swt.SWTError: No more callbacks\n\tat org.eclipse.swt.SWT.error(SWT.java:2153)\n\tat org.eclipse.swt.SWT.error(SWT.java:2060)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:294)\n\tat org.eclipse.swt.widgets.Menu.setVisible(Menu.java:777)\n\tat org.eclipse.swt.widgets.Control.processMouseDown(Control.java:1778)\n\tat org.eclipse.swt.widgets.Composite.processMouseDown(Composite.java:448)\n\tat org.eclipse.swt.widgets.Table.processMouseDown(Table.java:910)\n\tat org.eclipse.swt.widgets.Widget.processEvent(Widget.java(Compiled Code))\n\tat org.eclipse.swt.widgets.Table.processEvent(Table.java(Compiled Code))\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))\n\tat org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled\nCode))\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)\n\tat\norg.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:775)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:247)\n\tat org.eclipse.core.launcher.Main.run(Main.java:703)\n\tat org.eclipse.core.launcher.Main.main(Main.java:539)",
    "I just remember that I was running Eclipse over GTK 2.0.0, maybe that\u0027s reason,\nor maybe not. Nevertheless, I have upgrade all the GTK to 2.0.1 and if I got\nthis problem I will add note in this PR.\n\n",
    "Felipe, this is serious (P1).  Callbacks are allocated and freed by SWT, not \nthe operating system.  This means that we have a leak.  Please browse all \nreferences to Callback and find it!",
    "One possible leak is in Menu (POP-UP), if this widget is disposed when it\u0027s\nvisible a callback will be leaked and mouse/keyboard will be grapped.\n\nThe fix is run the same that run on processHide in releaseWidget (or\nreleaseResouce ?).\n\nSome testcases:\nimport org.eclipse.swt.layout.*;\nimport org.eclipse.swt.widgets.*;\nimport org.eclipse.swt.*;\n\npublic class PR24055 {\n\n\tstatic Menu menu;\n\tstatic Decorations d;\n\tpublic static void main(String[] args) {\n\t\tDisplay display \u003d new Display();\n\t\tfinal Shell shell \u003d new Shell(display);\n\t\tshell.setLayout(new GridLayout());\n\n/*Crash case, the leak the callback and grap the mouse and keyboard */\t\t\n\t\tmenu \u003d new Menu (shell, SWT.POP_UP);\n\t\tMenuItem mitem \u003d new MenuItem (menu, SWT.PUSH);\n\t\tmitem.setText(\"Menu Item\");\n\n\t\tshell.addListener(SWT.MouseDown, new Listener() {\n\t\t\tpublic void handleEvent(Event event) {\n\t\t\t\tif (menu \u003d\u003d null) {\n\t\t\t\t\tmenu \u003d new Menu (shell, SWT.POP_UP);\n\t\t\t\t\tMenuItem mitem \u003d new MenuItem (menu, SWT.PUSH);\n\t\t\t\t\tmitem.setText(\"Menu Item\");\n\t\t\t\t}\n\t\t\t\tmenu.setVisible(true);\n\t\t\t\tmenu.dispose();\n\t\t\t\tmenu \u003d null;\n\t\t\t}\n\t\t});\n\n/*Crash case, just leak the callback */\t\t\n//\n\tshell.addListener(SWT.MouseDown, new Listener() {\n//\n\t\tpublic void handleEvent(Event event) {\n//\n\t\t\td \u003d new Decorations (shell, SWT.BORDER);\n//\n\t\t\tmenu \u003d new Menu (d, SWT.POP_UP);\n//\n\t\t\tMenuItem mitem \u003d new MenuItem (menu, SWT.PUSH);\n//\n\t\t\tmitem.setText(\"Menu Item\");\n//\n\t\t}\t\t\t\n//\n\t});\t\t\t\t\t\n//\n\tshell.addListener(SWT.MouseUp, new Listener() {\n//\n\t\tpublic void handleEvent(Event event) {\n//\n\t\t\tmenu.setVisible(true);\n//\n\t\t\td.dispose();\n//\n\t\t}\n//\n\t});\n\n\n\n//  Loop\n\t\tshell.open();\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t\tdisplay.dispose();\t\t\n\t\t\n\t}\n}\n",
    "Patch for Menu:\n\n\nIndex: Menu.java\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nRCS file: /home/eclipse/org.eclipse.swt/Eclipse\nSWT/gtk/org/eclipse/swt/widgets/Menu.java,v\nretrieving revision 1.30\ndiff -u -r1.30 Menu.java\n--- Menu.java\t16 Sep 2002 16:25:46 -0000\t1.30\n+++ Menu.java\t26 Sep 2002 16:15:56 -0000\n@@ -548,23 +548,7 @@\n \n int processHide (int int0, int int1, int int2) {\n \tif ((style \u0026 SWT.POP_UP) !\u003d 0) {\n-\n\t/* Release resources and unwanted grabs */\n-\n\tint grabHandle \u003d OS.gtk_grab_get_current ();\n-\n\tif (grabHandle !\u003d 0) OS.gtk_grab_remove (grabHandle);\n-\n\tif (OS.gdk_pointer_is_grabbed ()) {\n-\n\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);\n-\n\t\tOS.gdk_keyboard_ungrab (OS.GDK_CURRENT_TIME);\n-\n\t}\n-\n\tif (barHandle !\u003d 0) {\n-\n\t\tOS.g_signal_handlers_disconnect_matched (barHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0,\n0, 0, SWT.MouseDown);\n-\n\t\tOS.g_signal_handlers_disconnect_matched (barHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0,\n0, 0, 0);\n-\n\t\tOS.gtk_widget_destroy (barHandle);\n-\n\t\tbarHandle \u003d 0;\n-\n\t}\n-\n\tif (barHandleCallback !\u003d null) {\n-\n\t\tbarHandleCallback.dispose ();\n-\n\t\tbarHandleCallback \u003d null;\n-\n\t}\n+\n\treleaseGrabs();\n \t}\n \tsendEvent (SWT.Hide);\n \treturn 0;\n@@ -584,6 +568,28 @@\n \t}\n }\n \n+void releaseGrabs () {\n+\n\t/* Release resources and unwanted grabs */\n+\n\tif (OS.GTK_WIDGET_MAPPED (handle)) {\n+\n\t\tint grabHandle \u003d OS.gtk_grab_get_current ();\n+\n\t\tif (grabHandle !\u003d 0) OS.gtk_grab_remove (grabHandle);\n+\n\t\tif (OS.gdk_pointer_is_grabbed ()) {\n+\n\t\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);\n+\n\t\t\tOS.gdk_keyboard_ungrab (OS.GDK_CURRENT_TIME);\n+\n\t\t}\n+\n\t}\n+\n\tif (barHandle !\u003d 0) {\n+\n\t\tOS.g_signal_handlers_disconnect_matched (barHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0,\n0, 0, SWT.MouseDown);\n+\n\t\tOS.g_signal_handlers_disconnect_matched (barHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0,\n0, 0, 0);\n+\n\t\tOS.gtk_widget_destroy (barHandle);\n+\n\t\tbarHandle \u003d 0;\n+\n\t}\n+\n\tif (barHandleCallback !\u003d null) {\n+\n\t\tbarHandleCallback.dispose ();\n+\n\t\tbarHandleCallback \u003d null;\n+\n\t}\n+}\n+\n void releaseWidget () {\n \tMenuItem [] items \u003d getItems ();\n \tfor (int i\u003d0; i\u003citems.length; i++) {\n@@ -591,6 +597,7 @@\n \n\tif (!item.isDisposed ()) item.releaseResources ();\n \t}\n \tif (parent !\u003d null) parent.remove (this);\n+\nreleaseGrabs();\n \tsuper.releaseWidget ();\n \tparent \u003d null;\n \tcascade \u003d null;\n",
    "fix (for menu) has been released by ssq,\nmarking pr as fixed, reopen it if by change no more callback is still a problem.\n\n\n\n",
    "The real problem is that the application is creating (whitout dispose) to many \nDrag and Drop objects.\n\n",
    "Here is some number and how to reproduce this problem.\n\nThe maximum number of callback is 127.\nEach DragSource needs 3 callbacks.\nEach DropTarget needs 4 callbacks.\n\n- Start Eclipse\n- Close all perspectives (At this point you should have 16 callbacks in used)\n- Open the Resource perspectives: 26 callbacks (+2 DragSource, +1 DropTarget) \n- Open the Java perspectives: 61 callbacks (+5 DragSource, +5 DropTarget)\n- Open the Java Browsing perspectives: 89 callbacks (+4 DragSource, +4 \nDropTarget)\n- Open the CVS perspectives: 93 callbacks ( +1 DropTarget)\n\n(+2 if you already have used the Clipboard)\n\nAt this point you should have around 95 callbacks.\nGo to the Java perspective, for each Java editor you open it will create +1 \nDragSource and +1 DropTarget (\u003d\u003d 7 callbacks)\n\nOpen 5 files \u003d\u003e +35 callbacks (+95 you already have) \u003d\u003d 130\n\nNow try to pop-up a Menu: No more Callbacks\n\n\n\n",
    "*** Bug 25017 has been marked as a duplicate of this bug. ***",
    "VI has released the changes in drag and drop,\nfix \u003e 20022110"
  ],
  "commentCreationDates": [
    "2002-09-24T22:39:31+02:00",
    "2002-09-24T23:23:59+02:00",
    "2002-09-25T15:04:30+02:00",
    "2002-09-26T16:51:59+02:00",
    "2002-09-26T18:16:43+02:00",
    "2002-09-27T23:14:54+02:00",
    "2002-10-18T20:33:06+02:00",
    "2002-10-18T20:53:14+02:00",
    "2002-10-18T20:54:26+02:00",
    "2002-10-22T00:14:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTError",
      "message": "No more callbacks",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2153"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2060"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:294"
        },
        {
          "method": "org.eclipse.swt.widgets.Menu.setVisible",
          "source": "Menu.java:777"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.processMouseDown",
          "source": "Control.java:1778"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.processMouseDown",
          "source": "Composite.java:448"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.processMouseDown",
          "source": "Table.java:910"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.processEvent",
          "source": "Widget.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.processEvent",
          "source": "Table.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.internal.gtk.OS.gtk_main_iteration",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1239"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:775"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:462"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:247"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:703"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:539"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "24055",
      "date": "2002-09-24T22:39:31+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "normal"
    }
  ],
  "groupId": "24055",
  "bugId": "24055",
  "date": "2002-09-24T22:39:31+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "normal"
}