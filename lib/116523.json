{
  "comments": [
    "Seeing this the first time we try to insert a tag and taglib in a new page. \nSubsequent tag inserts work fine. Only happens for the first time in a new\nworkspace and new project.\n\nFirst we are inserting the tag, then right away inserting the new corresponding\ntaglib import.\n\nSeems to be a timing issue since setting a breakpoint at\nBasicStructuredDocumentRegion.java:275 makes the problem go away.\n\n\n-------------------------------------------------\n\njava.lang.NullPointerException\n\tat\norg.eclipse.wst.sse.core.internal.text.BasicStructuredDocumentRegion.getText(BasicStructuredDocumentRegion.java:275)\n\tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslator.handleTaglib(JSPTranslator.java:1324)\n\tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateDirective(JSPTranslator.java:1274)\n\tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateJSPNode(JSPTranslator.java:1082)\n\tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateRegionContainer(JSPTranslator.java:780)\n\tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslator.translate(JSPTranslator.java:680)\n\tat\norg.eclipse.jst.jsp.core.internal.java.JSPTranslationAdapter.getJSPTranslation(JSPTranslationAdapter.java:131)\n\tat\norg.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getJSPTranslation(JSPSearchDocument.java:112)\n\tat\norg.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getPath(JSPSearchDocument.java:149)\n\tat\norg.eclipse.jst.jsp.core.internal.java.search.JavaSearchDocumentDelegate.\u003cinit\u003e(JavaSearchDocumentDelegate.java:30)\n\tat\norg.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.createSearchDocument(JSPSearchSupport.java:426)\n\tat\norg.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.addJspFile(JSPSearchSupport.java:320)\n\tat\norg.eclipse.jst.jsp.core.internal.java.search.JSPIndexManager$ProcessFilesJob.run(JSPIndexManager.java:251)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "Sorry, i mispoke, actually setting a breakpoint at \n\nJSPTranslator.handleTaglib(JSPTranslator.java:1324)\n\nmakes the problem go away.\n\nSetting a breakpoint at \n\nBasicStructuredDocumentRegion.getText(BasicStructuredDocumentRegion.java:275)\n\nis virtually impossible since it\u0027s called whenever text is showing in the editor.",
    "When I set a breakpoint at \n\nJSPTranslator.handleTaglib(JSPTranslator.java:1324)\n\n\nthe two inserts work fine (tag and taglib import), and I hit the breakpoint on a\nbackground thread.  But npe happens in that case.  So something about hitting\nJSPTranslator.handleTaglib(JSPTranslator.java:1324) on the background thread too\nquickly is apparently causing this npe to surface.",
    "sorry again, meant to say *NO* npe happens in that case.\n\n\n\"the two inserts work fine (tag and taglib import), and I hit the breakpoint on a\nbackground thread.  But *NO* npe happens in that case.\"",
    "Scott, any chance you can provide a JUnit test to reproduce the problem? \n\nPhil, does this translation code use thread safe getRegions and check for \u0027deleted\u0027? or something completely different?  \n\n\n\n\n",
    "Sorry, I tried most of the morning but was not able to come up with a junit test, and I don\u0027t have any more time for that effort right now.  Hopefully the NPE and the stack trace can speak for themselves.",
    "changing severity to critical to reflect the fact that this bug is blocking WTP 1.0 adoption by BEA in early Dec.\n\n(note: also tried to raise priority to 2 bus was not allowed)",
    "I\u0027ll look into this.\n\nBumping priority since JSP indexing happens all the time, we really should be ensuring thread saftey.",
    "Targeting for M10 since I don\u0027t think we have time to nail this down, that is, create a good unit test verify that a fix actually fixes it for M9.",
    "I\u0027ve written a test case that:\n\n - creates a new java project\n - creates a blank file\n - inserts a custom tag\n - inserts a directive for the taglib\n\nbut I still can\u0027t get the NPE to happen...\nMaybe I can tweak the test to better simulate what you\u0027re doing.\n\nHow are you creating the project/file?\n\nAre you using the StructuredModel/StructuredDocument to add the tags (I\u0027m using IDocument.replace() in my test case)?",
    "We\u0027re using a method like this for the tag insert:\n\npublic static int insertText( IFile file, String templateId,\n            ITemplateBean templateBean, int insertionPoint )\n        throws CoreException, GenerationFailedException\n    {\n        // get the file\u0027s text buffer\n        ITextFileBufferManager bufferManager \u003d FileBuffers.getTextFileBufferManager();\n        IPath path \u003d file.getFullPath();\n        bufferManager.connect( path, null );\n        IDocument doc \u003d null;\n        String generated \u003d \"\";\n        try\n        {\n            ITextFileBuffer buff \u003d bufferManager.getTextFileBuffer( file.getFullPath() );\n            assert buff !\u003d null : \"Couldn\u0027t get a TextFileBuffer for: \" + file; //$NON-NLS-1$\n\n            doc \u003d buff.getDocument();\n\n            boolean saveWhenDone \u003d !buff.isDirty(); \n    \n            // generate the new text\n            generated \u003d removeBlankLines( TemplateService.generate( templateId, templateBean ) );\n\n            InsertEdit insertEdit \u003d new InsertEdit( insertionPoint,  generated );\n            insertEdit.apply( doc );\n\n            // if the document was not previously dirty, save it\n            if ( saveWhenDone )\n                buff.commit( null, false );\n        }\n        catch ( BadLocationException e )\n        {\n            throw new GenerationFailedException(e);\n        }\n        finally\n        {\n            bufferManager.disconnect( path, null );\n        }\n        return generated.length();\n    }\n\nAnd a method like this for the taglib import:\n\npublic static Element ensureTaglibImport( IFile jspFile, String taglibURI, String preferredPrefix )\n    {\n        // first see if this taglib is already imported\n        Element result \u003d getTaglibImport( jspFile, taglibURI );\n        \n        // if not, add it with the preferred prefix\n        if ( result \u003d\u003d null )\n        {\n            assert taglibURI !\u003d null;\n            assert jspFile !\u003d null;\n            \n            IStructuredModel structuredModel \u003d null;\n            \n            try\n            {\n                structuredModel \u003d ( IStructuredModel ) StructuredModelManager.getModelManager().getModelForEdit( jspFile );\n                assert ( structuredModel !\u003d null ) : \"didn\u0027t get back a structured model for: \" + jspFile; //$NON-NLS-1$\n                Document domDoc \u003d (Document) structuredModel.getAdapter( Document.class );\n                assert ( domDoc !\u003d null ) : \"Structured doc was null\"; //$NON-NLS-1$\n\t\t\t\tassert ( isJspDocument( domDoc ) ) : \"File is not a JSP: \" + jspFile; //$NON-NLS-1$\n    \n\t\t\t\treturn ensureTaglibImport( domDoc, taglibURI, preferredPrefix );\n            }\n            catch ( IOException e )\n            {\n                MessageService.logException( JSPCorePlugin.getDefault(), e );\n                assert false : \"error adding taglib\"; //$NON-NLS-1$\n            }\n            catch ( CoreException e )\n            {\n                MessageService.logException( JSPCorePlugin.getDefault(), e );\n                assert false : \"error adding taglib\"; //$NON-NLS-1$\n            }\n            finally\n            {\n                if ( structuredModel !\u003d null )\n                    structuredModel.releaseFromEdit();\n            }\n        }\n        \n        assert result !\u003d null : \"Did not get a taglib to return\"; //$NON-NLS-1$\n        return result;\n    }",
    "sorry, the ensureTaglibImport() method uses the dom and an insertBefore() call on a node to to the taglib import insert, like this:\n\nparent.insertBefore( newline, result );\n\n\nwhere parent is a Node",
    "Scott, I almost hate to mention it, since I don\u0027t really know what\u0027s causing this problem (since we can\u0027t reproduce exactly), but I think for Release 1, a change on the IDocument side followed by a change on the DOM side will be problematic (threading-wise). The \"traditional\" use :) of handling multiple changes is all on the DOM side. Then, to \"lock\" the DOM from writes from other threads, a client can call \nmodel.aboutToChangeModel();\ntry { \n \u003cmake dom changes there\u003e\n}\nfinally {\n  model.changedModel();\n}\n\nYou could still \"use\" the Idocument in there, such as to save it, but not modify. \nEven then, don\u0027t forget, you\u0027ll need to get the commit rule first, form TextBuffer. \n\nI\u0027m just mentioning this to give you something to experiment with, in case it solves your problem in the short term. In the long term (post 1.0) we plan to make some of this more automatic and invisible * and * to better coordinate changes from the IDocument side and the DOM Document side. But, that hasn\u0027t made it into R1 (since we don\u0027t see a specific problem with it in just plain WTP). \n\nHope this helps. \n\n",
    "We * might * be able to move this one to fixed. \nPart of the problem, as intially reported (the NPE\u0027s during \u0027getText\u0027) Phil discovered were due to the region having an invalid parent region. This can heppen if the region has \"been deleted\", as Phil was doing in his code, but one problem we have is our low level parser incorrectly marks the regions as deleted * after * it deletes them. It should do so before, so doesn\u0027t change after its been checked. \nThat \"low level\" code would be sensitive to change this late in R1, but I did put in a check so that if parent was null, then it would also report \"deleted\". \nTechnically, this can also happen if the regions are not fully created yet, but not sure that end of the problem causes any harm. \n\nI\u0027ll see if Phil can inspect and/or test. \n",
    "Just to document progress, the changes for \"dirty\" marking helped avoid that problem, but in our attempts to create test cases, we start running into other threading problems, some ours, some platform (already fixed in 3.2) .... so, we\u0027ll continue to investigate, and attempt a test case using the advice we gave in comment #12. \n\n",
    "I\u0027m going to move this one to fixed, after all, since the specific NPE in \u0027getText\u0027 should be fixed now. \n\nAnd, re-reading this, I\u0027m not positive this use case is even related to the multiple thread problems we still know about. Seems all from one thread? Plus, if you can re-create with specific tests, let us know. Seems like moving forward we should \"spec\" (and get requirements!) on exactly what kind of multithread support is needed. \n\n\"The base\" ... says all document changes must be done from Display thread, but ... we are trying to improve on that. \n",
    "(In reply to comment #15)\nYes, this is all happening serially, on the display thread.",
    "Tom, do you mean still? on recent build? Or are just confirming that our fixes so far have likely fixed the problem you are seeing but you can\u0027t confirm yet? \n\n",
    "Sorry, I meant that your fix will probably take care of our problem because all the document changes we were making were on the display thread.\n\nWe\u0027re working right now on adopting 1.0RC1, hopefully we\u0027ll be able to verify the fix soon.",
    "ok, thanks tom ... you should be in good shape to verify it ... since I don\u0027t think in RC1 :( ... should be in RC2, when we declare that. \n\n",
    "I\u0027m marking as verified, as component owner. If origantor disagrees, or sees other similar bugs, please open new ones (with reference to this one). \n",
    "Closing"
  ],
  "commentCreationDates": [
    "2005-11-15T21:56:26+01:00",
    "2005-11-15T22:07:08+01:00",
    "2005-11-15T22:09:34+01:00",
    "2005-11-15T22:12:34+01:00",
    "2005-11-22T05:54:09+01:00",
    "2005-11-22T20:46:21+01:00",
    "2005-11-22T21:17:10+01:00",
    "2005-11-23T18:25:57+01:00",
    "2005-11-23T21:36:16+01:00",
    "2005-11-28T22:47:14+01:00",
    "2005-11-28T22:54:19+01:00",
    "2005-11-28T22:57:54+01:00",
    "2005-11-30T04:54:04+01:00",
    "2005-12-06T08:54:23+01:00",
    "2005-12-07T09:08:49+01:00",
    "2005-12-08T14:17:43+01:00",
    "2005-12-08T14:44:47+01:00",
    "2005-12-08T14:52:36+01:00",
    "2005-12-08T15:01:03+01:00",
    "2005-12-08T15:54:34+01:00",
    "2005-12-19T07:58:33+01:00",
    "2006-06-22T20:46:25+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.wst.sse.core.internal.text.BasicStructuredDocumentRegion.getText",
          "source": "BasicStructuredDocumentRegion.java:275"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.handleTaglib",
          "source": "JSPTranslator.java:1324"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateDirective",
          "source": "JSPTranslator.java:1274"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateJSPNode",
          "source": "JSPTranslator.java:1082"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateRegionContainer",
          "source": "JSPTranslator.java:780"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translate",
          "source": "JSPTranslator.java:680"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslationAdapter.getJSPTranslation",
          "source": "JSPTranslationAdapter.java:131"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getJSPTranslation",
          "source": "JSPSearchDocument.java:112"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getPath",
          "source": "JSPSearchDocument.java:149"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JavaSearchDocumentDelegate.\u003cinit\u003e",
          "source": "JavaSearchDocumentDelegate.java:30"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.createSearchDocument",
          "source": "JSPSearchSupport.java:426"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchSupport.addJspFile",
          "source": "JSPSearchSupport.java:320"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPIndexManager$ProcessFilesJob.run",
          "source": "JSPIndexManager.java:251"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "116523",
      "date": "2005-11-15T21:56:26+01:00",
      "product": "Web Tools",
      "component": "wst.sse",
      "severity": "critical"
    }
  ],
  "groupId": "116523",
  "bugId": "116523",
  "date": "2005-11-15T21:56:26+01:00",
  "product": "Web Tools",
  "component": "wst.sse",
  "severity": "critical"
}