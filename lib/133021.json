{
  "comments": [
    "The method \u0027setDisplayName\u0027 of class org.eclipse.jst.j2ee.common.internal.impl.CompatibilityDescriptionGroupImpl\ncreates extra \u0027DisplayName\u0027 objects during deserialization.\n\nTest scenario:\n\nLoad a CompatibilityDescriptionGroup from an XML document.\n  The J2EE ID of the document doesn\u0027t matter.\n  The group has \u0027displayName\u0027 as an attribute.\n  The presence of \u0027displayName\u0027 child objects doesn\u0027t matter.)\n\nThe \u0027setDisplayName\u0027 method of CompatibilityDescriptionGroupImpl updates\nthe directly stored attribute value (held by the CompatibilityDescriptionGroup)\n** and ** adds a child DisplayName (held by DescriptionGroup, the superclass\nof CompatibilityDescriptionGroup).\n\nSave the CompatibilityDescriptionGroup to an XML document.\n\nThe \u0027displayName\u0027 attribute of the CompatibilityDescriptionGroupImpl is still\nset.\n\nAn extra \u0027DisplayName\u0027 child element has been created.  (There is one more\nchild \u0027DisplayName\u0027 than before the save.)\n\nEach repeats of the load/save cause an extra child DisplayName object to be\ncreated.\n\nThe creation of the extra child DisplayName objects is the error being reported.\n\nThe extra child is created because the \u0027eResource() \u003d\u003d null\u0027 case is taken in\n\u0027setDisplayName\u0027:\n\n    public void setDisplayName(String newDisplayName) {\n        if(eResource() \u003d\u003d null) {\n            setDisplayNameGen(newDisplayName);\n            internalSetDisplayNameInList(newDisplayName);\n            return;\n        }\n        \n        switch (getJ2EEVersionID()) {\n        case J2EEVersionConstants.J2EE_1_2_ID :\n        case J2EEVersionConstants.J2EE_1_3_ID :\n            setDisplayNameGen(newDisplayName);\n            break;\n        case J2EEVersionConstants.J2EE_1_4_ID :\n        default :\n            internalSetDisplayNameInList(newDisplayName);\n            break;\n        }\n    }\n\nHere is a stack trace of the call into \u0027setDisplayName\u0027:\n\njava.lang.Exception: Stack trace\n\tat java.lang.Thread.dumpStack(Thread.java:1097)\n\tat org.eclipse.jst.j2ee.common.internal.impl.CommonDebug.dumpStack(CommonDebug.java:166)\n\tat org.eclipse.jst.j2ee.common.internal.impl.CompatibilityDescriptionGroupImpl.internalSetDisplayNameInList(CompatibilityDescriptionGroupImpl.java:539)\n\tat org.eclipse.jst.j2ee.common.internal.impl.CompatibilityDescriptionGroupImpl.setDisplayName(CompatibilityDescriptionGroupImpl.java:495)\n\tat org.eclipse.jst.j2ee.jca.internal.impl.ConnectorImpl.setDisplayName(ConnectorImpl.java:116)\n\tat org.eclipse.jst.j2ee.jca.internal.impl.ConnectorImpl.eSet(ConnectorImpl.java:412)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.setValue(XMLHelperImpl.java:966)\n\tat org.eclipse.wst.common.internal.emf.resource.MappedXMIHelper.setValue(MappedXMIHelper.java:267)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue(XMLHandler.java:1792)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.setAttribValue(XMLHandler.java:1851)\n\tat org.eclipse.emf.ecore.xmi.impl.SAXXMIHandler.handleObjectAttribs(SAXXMIHandler.java:147)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFactory(XMLHandler.java:1393)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType(XMLHandler.java:1365)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject(XMLHandler.java:1259)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature(XMLHandler.java:1095)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement(XMLHandler.java:466)\n\tat org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement(XMIHandler.java:65)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:449)\n\tat org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement(SAXWrapper.java:73)\n\tat org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat javax.xml.parsers.SAXParser.parse(Unknown Source)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:140)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:169)\n\tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.basicDoLoad(CompatibilityXMIResourceImpl.java:180)\n\tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad(CompatibilityXMIResourceImpl.java:173)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:977)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:832)\n\tat com.ibm.websphere.resource.WASResourceImpl.load(WASResourceImpl.java:143)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:249)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:264)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:349)\n\nDebug statements added to the CompatibilityDescriptionGroupImpl show that\nthe \u0027eResource() \u003d\u003d null\u0027 case is definitely being taken.",
    "This blocks WSAS release 6.1.0.0 SVT testing.\n",
    "Hi Jason can you take a look at this?",
    "CompatibilityDescriptionGroupImpl only looks for the \"display-name\" element; It is not going to read an attribute with that name (or the different one, \"displayName\" used below), or an element named \"displayName\"",
    "closing.",
    "The problem isn\u0027t a parsing problem, but what is done by CompatibilityDescriptionGroupImpl while storing the displayName values into the deserialized object.\n\nThe new object is populated before it is attached to a resource.  This causes \u0027setDisplayName\u0027 to store a deserialized \u0027displayName\u0027 value redundently, and has the effect of creating multiple \u0027displayNames\u0027 elements on successive save.",
    "Created an attachment (id\u003d60399)\nProposed / partial fix\n\nThis is a modification to DescriptionGroupImpl and CompatibilityDescriptionGroupImpl, and the introduction of a new subtype of EObjectContainmentEList, that together prevent the addition of extra display names.  See the main comments for the defect for a description of the fix.",
    "The proposed fix operates as follows:\n\n*) A new type of containment list is provided, and is used by DescriptionGroupImpl to store display names;\n\n*) The new containment list type provides a flag to indicate when an element was added for compatibility purposes;\n\n*) When setting the displayName attribute of a DescriptionGroup subtype, for example, J2CResourceAdapter, the code which adds to the displayName collection also sets the compatibility flag;\n\n*) When performing a normal add (any of \u0027add\u0027, \u0027addUnique\u0027, or \u0027inverseAdd\u0027) to the new list type, if the compatibility flag is set, and if the element being added already matches one of the current list elements, the addition is not performed, and the compatibility flag is cleared.\n\nThis modification has worked to prevent the introduction of multiple display names in a local test environment.\n\nAdditional notes:\n\n*) The current modification does not clear the flag once deserialization is complete.  As a consequence, the first addition of a display name that matches one of the existing display names will have no effect.  Clearing the flag would be appropriate following deserialization, but the proper location for this action was not apparent.\n\n*) The code, as presented, has debugging statements added.  However, the scope of changes is small, and the necessary changes can be lifted from the presented fix.\n\n*) The current modification is to \u0027internalSetDisplayNameInList\u0027, which is only called from \u0027setDisplayName\u0027 in the case where the resource version (1.2, 1.3, or 1.4) is not known.  The modification may be more proper to make from \u0027setDisplayName\u0027, with a new parameterized \u0027internalSetDisplayNameInList\u0027 called from both \u0027setDisplayName\u0027 and from the current \u0027internalSetDisplayNameInList\u0027.\n\n*) The name of the new list type, \u0027AltEObjectContainmentEList\u0027, is not intended as the final name for the list type.  The new list type may be avoided entirely by adding the new behavior using an inner class, in \u0027DescriptionGroup\u0027.\n",
    "Please attach a patch for review.",
    "Created an attachment (id\u003d62568)\nPrior update packaged as a patch\n\nNote: The new CompatibilityEObjectContainmentEList should be\nreviewed for its proper location.",
    "switching target",
    "switching target again.",
    "reducing to critical",
    "After discussing with Thomas, it is agreed that this defect will not be fixed in WTP.",
    "Closing based on comments."
  ],
  "commentCreationDates": [
    "2006-03-23T16:49:16+01:00",
    "2006-03-23T16:52:47+01:00",
    "2006-03-24T14:20:32+01:00",
    "2006-03-24T19:36:45+01:00",
    "2006-06-13T17:53:41+02:00",
    "2007-01-29T17:51:47+01:00",
    "2007-03-07T21:00:45+01:00",
    "2007-03-07T21:14:31+01:00",
    "2007-03-27T23:00:06+02:00",
    "2007-03-30T23:24:53+02:00",
    "2007-04-05T17:01:10+02:00",
    "2007-04-05T17:34:08+02:00",
    "2007-04-05T17:36:44+02:00",
    "2007-05-10T19:35:53+02:00",
    "2007-06-12T18:15:50+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "Stack trace",
      "elements": [
        {
          "method": "java.lang.Thread.dumpStack",
          "source": "Thread.java:1097"
        },
        {
          "method": "org.eclipse.jst.j2ee.common.internal.impl.CommonDebug.dumpStack",
          "source": "CommonDebug.java:166"
        },
        {
          "method": "org.eclipse.jst.j2ee.common.internal.impl.CompatibilityDescriptionGroupImpl.internalSetDisplayNameInList",
          "source": "CompatibilityDescriptionGroupImpl.java:539"
        },
        {
          "method": "org.eclipse.jst.j2ee.common.internal.impl.CompatibilityDescriptionGroupImpl.setDisplayName",
          "source": "CompatibilityDescriptionGroupImpl.java:495"
        },
        {
          "method": "org.eclipse.jst.j2ee.jca.internal.impl.ConnectorImpl.setDisplayName",
          "source": "ConnectorImpl.java:116"
        },
        {
          "method": "org.eclipse.jst.j2ee.jca.internal.impl.ConnectorImpl.eSet",
          "source": "ConnectorImpl.java:412"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.setValue",
          "source": "XMLHelperImpl.java:966"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.MappedXMIHelper.setValue",
          "source": "MappedXMIHelper.java:267"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setFeatureValue",
          "source": "XMLHandler.java:1792"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.setAttribValue",
          "source": "XMLHandler.java:1851"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.SAXXMIHandler.handleObjectAttribs",
          "source": "SAXXMIHandler.java:147"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFactory",
          "source": "XMLHandler.java:1393"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType",
          "source": "XMLHandler.java:1365"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject",
          "source": "XMLHandler.java:1259"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature",
          "source": "XMLHandler.java:1095"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement",
          "source": "XMLHandler.java:466"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement",
          "source": "XMIHandler.java:65"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java:449"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement",
          "source": "SAXWrapper.java:73"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.startElement",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XML11Configuration.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.XMLParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.parsers.AbstractSAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load",
          "source": "XMLLoadImpl.java:140"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad",
          "source": "XMLResourceImpl.java:169"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.basicDoLoad",
          "source": "CompatibilityXMIResourceImpl.java:180"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad",
          "source": "CompatibilityXMIResourceImpl.java:173"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:977"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:832"
        },
        {
          "method": "com.ibm.websphere.resource.WASResourceImpl.load",
          "source": "WASResourceImpl.java:143"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:249"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:264"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource",
          "source": "ResourceSetImpl.java:349"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "133021",
      "date": "2006-03-23T16:49:16+01:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "critical"
    }
  ],
  "groupId": "133021",
  "bugId": "133021",
  "date": "2006-03-23T16:49:16+01:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "critical"
}