{
  "comments": [
    "Creating a new workspace for a suite of active projects is a real pain,\nsince it is necessary to go through the Import dialog for each project.\n\n[Using a ProjectSet only works if under CVS, and when something magic has\nhappened to the workspace, then I want to create a new one for my current\nstate, before I commit to CVS.]  \n\na) How about allowing folders containing .project files (and/or the\n.project files) to be dropped onto the Navigator/Package Explorer window\nto indicate an Import Existing Project?\n\nb) How about allowing a multi-select of sibling folders when browsing in the\nImport Existing Project dialog?",
    "I\u0027ve just upgraded from 3.2M5a to M6 and my workspace broke, so I have to import all my projects by hand again. This is still a mjor pain.\n\nIs there no way to define a project set? (I just tried to export on M5\nand it only offered those projects that had a CVS delta.) I also tried\nto grab .metadata files, but they have bundleIds in which are unstable\nbetween workspaces.",
    "What import wizard are you using?  Import \u003e Existing projects into workspace and pointing to the directory of the workspace will list all the projects in that workspace.  You can select all of them and import in one action.",
    "It seemed much better for a while, offering the sub-tree as you say, but as of ? M5a if I choose the root directory, it proceeds to create a preoject there\nrather than offering me its children.\n\nIn Package Explorewr I do, Import...General/Existing Projects into workspace,\nSelect Root Directory.",
    "Can you give a more detailed description of the steps you are doing and what is happening - into which workspace directory is the project being created, is only one project being created when you have multiple projects selected?  \n\nNote there is also an option to copy the project into the workspace which, instead of just being a pointer to the project in the directory you selected, will copy the project into the workspace you are importing into.  I need to know if you are using that option or not.",
    "In detail....\n\nI had a Workspace that I had successfully used and upgraded between 3.2M3,4,5a.\n\nI extend Eclipse with EMF, EMFT, GEF, VE, NiceXSL, ATL, each in a separate\nupdate site to avoid polluting a specific Eclipse with a particular add-in.\n\nIn upgrading to 3.2M6, I wanted to avoid having to traverse 6 paths from the Desktop to register each add-in (see Bug 86590). I therefore tried a manual\nedit of configuration\\org.eclipse.update\\platform.xml to copy the UM config\nfrom 3.2M5a. Since feature now have four part names I deleted the \u003cfeature\u003e\nelements, retaining just the \u003csite\u003e elements, hoping that the features would\nbe auto-read from the sites.\n\nSadly my Workspace ended up broken, I presume because the above was foolish.\nFor reference, broken is\n\n!ENTRY org.eclipse.osgi 4 0 2006-04-07 14:25:20.187\n!MESSAGE An error occurred while automatically activating bundle org.eclipse.core.resources (22).\n!STACK 0\norg.osgi.framework.BundleException: Exception in org.eclipse.core.internal.compatibility.PluginActivator.start() of bundle org.eclipse.core.resources.\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:1013)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:969)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:317)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:256)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.preFindLocalClass(EclipseLazyStarter.java:86)\n\tat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:402)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:188)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:338)\n\tat org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:387)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:351)\n\tat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\nCaused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\tat java.util.ArrayList.RangeCheck(ArrayList.java:546)\n\tat java.util.ArrayList.get(ArrayList.java:321)\n\tat org.eclipse.core.internal.properties.PropertyBucket.readEntryValue(PropertyBucket.java:267)\n\tat org.eclipse.core.internal.localstore.Bucket.load(Bucket.java:299)\n\tat org.eclipse.core.internal.properties.PropertyBucket.load(PropertyBucket.java:252)\n\tat org.eclipse.core.internal.localstore.Bucket.load(Bucket.java:266)\n\tat org.eclipse.core.internal.localstore.BucketTree.loadBucketFor(BucketTree.java:114)\n\tat org.eclipse.core.internal.properties.PropertyManager2.getProperty(PropertyManager2.java:132)\n\tat org.eclipse.core.internal.resources.Resource.getPersistentProperty(Resource.java:999)\n\tat org.eclipse.core.internal.resources.ContentDescriptionManager.getCacheState(ContentDescriptionManager.java:275)\n\tat org.eclipse.core.internal.resources.ContentDescriptionManager.startup(ContentDescriptionManager.java:463)\n\tat org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1893)\n\tat org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1653)\n\tat org.eclipse.core.resources.ResourcesPlugin.startup(ResourcesPlugin.java:367)\n\tat org.eclipse.core.internal.compatibility.PluginActivator.start(PluginActivator.java:31)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:994)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:988)\n\t... 27 more\nRoot exception:\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\tat java.util.ArrayList.RangeCheck(ArrayList.java:546)\n\nand the Workspace remains broken despite cleaning out configuration and\nrestarting.\n\nSo as is too often required, a new Eclipse means a new Workspace.\n\nTo populate the new Workspace, with the (external) projects of the old\nWorkspace, I just do\n\nImport...\nGeneral-\u003eExisting Projects into workspace\nenter the parent folder of my projects as Select Root Directory,\n\nI see a single ticked folder.\n\nSince I am importing projects I obviously do not select copy.\n\nThe problem is that the single folder is not recognised as the parent\nproject.\n\nAh! I\u0027ve cracked it. On 14 Feb an accident put a .project in that folder\nso it appears to be a project.\n\nSo the bug is now.\n\na) the search for .project files does not traverse below folders with\na .project in.\n\nb) the display of folders with .project files does not display their\nhierarchical structure. e.g. if I have firstTry/Temp and secondTry/Temp,\nI cannot tell which Temp is which.",
    "In response to:\na)\nSo basically your directory setup is something like:\nworkspaceRootFolder\n   someFolder with a .project file in it\n      subFolders of someFolder with .project files in them\n\nHow does this happen?  If you remove the higher level .project file is the problem fixed?\n\nb) \nSince you aren\u0027t allowed to have 2 projects with the same name in one workspace (Temp is the name of the project, correct?), I don\u0027t understand how b) can ever be an issue.  Has your workspace directory been manipulated by outside of Eclipse\u0027s mechanisms for updating/modifying the workspace?  I guess I don\u0027t understand how the 6 paths you mentioned appear in your file system.  ",
    "a) Got it. A repro...\n\nWith .project in ..../root/proj1, .../root/proj2 etc, try to create proj3 in .../root/proj3.\n\nPackage Exporer:New-\u003eProject...:Plug-in Project,Next\nproj3\nnot default location, .../root\n\nresult is proj3 at .../root/.project, not .../root/proj3.project\n(\"/\" is also allowed as the location!)\n\nThis is consistent behaviour, but at least confusing since what is \u0027location\u0027?\nIn earlier versions of Eclipse 3.0, 3.1 ... up to perhaps 3.2M3ish it never seemed possible to create such sibling projects. I always had to specify\n.../root/proj3 to avoid the \"overlapping projects\" error and then use Explorer\nto move .../root/proj3/proj3 to .../root/proj3 before re-importing the project.\nThat bug has now been cleared, leaving me with a bad habit that caused the wrong but undiagnosed entry.\n\nPerhaps it is sufficient to change the wording to \"Use default project location\", to make it quite clear that what is pre-loaded with a Workspace\npath is actually the incomplete project path.\n\n[New-\u003eProject... invoked on .../root/proj1, should offer .../root as the\npre-filled in not-default location, shouldn\u0027t it?]\n\nb) You can easily have multiple projects with the same name.\n\nCreate Temp in different workspaces. e.g Workspace and runtime-workspace,\nthen import a project from one to the other. It works, but can be very\nbad news in terms of Java build consistency since one Workspace builds and\nthe other doesn\u0027t refresh and so you get very confusing class mismatches.\n\nThat seems really stupid doesn\u0027t it, but it isn\u0027t.\n\nConsider an X.Examples plug-in for a Tool X under development. X.Examples\nand X.Tool plug-ins exist in the main Workspace. In order to use the development\nversion of X you must run up a runtime Workspace. To manipulate the examples with X you import X.Examples into that workspace!\n",
    "a)\nI must be misinterpreting your steps - I tried them and got the overlapping workspace location error.\n1. Run target workspace located at d:\\root\n2. Create Proj1 and Proj2 in default location\n3. Create Proj3, check not at default location, select d:\\root\n\nThis is the only way I could interpret your steps to replicate.  Can you clarify?\n\nb) \nHow are you importing the second Temp project into the workspace?  You cannot import 2 projects with the same name by using the Import Existing Projects into Workspace wizard.",
    "*** Bug 135889 has been marked as a duplicate of this bug. ***",
    "(In reply to comment #8)\n\n\u003e b) \n\u003e How are you importing the second Temp project into the workspace?  You cannot\n\u003e import 2 projects with the same name by using the Import Existing Projects into\n\u003e Workspace wizard.\n\nI guess the point here is that the wizard should provide user some path info so that user can pick the project that he indeed wants. \n\nHere is a scenario why it\u0027s useful: \n\nI have a folder called \"source\" which contains some sub-folders and each sub-folder has a bunch of projects serving me for different purpose. Some projects\u0027 name are same among the subfolders. Now I want to import some projects from different subfolders all in once, so I select the folder \"source\" as root directory, then I see many projects with the same name and without path info. As a workaround, I guess I need to select subfolder instead of \"source\" folder, but it conflicts the purpose of multiple seletion.\n\nJust my 2 cents... and an img is attached.\n",
    "Created an attachment (id\u003d39551)\nscreen shot of import wizard\n\n",
    "James, I can\u0027t open the screenshot you attached.  I need a repeatable test case before I can address this bug.",
    "What James described is very much in line with my experience. I hope he can fix the screen shot for you."
  ],
  "commentCreationDates": [
    "2004-12-14T18:43:55+01:00",
    "2006-04-07T20:23:01+02:00",
    "2006-04-07T21:02:25+02:00",
    "2006-04-07T21:48:14+02:00",
    "2006-04-07T22:01:49+02:00",
    "2006-04-08T08:02:08+02:00",
    "2006-04-09T18:32:25+02:00",
    "2006-04-10T08:04:49+02:00",
    "2006-04-26T00:07:30+02:00",
    "2006-04-26T18:29:31+02:00",
    "2006-04-26T18:48:12+02:00",
    "2006-04-26T18:48:51+02:00",
    "2006-04-26T19:13:14+02:00",
    "2006-04-26T19:40:56+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "Exception in org.eclipse.core.internal.compatibility.PluginActivator.start() of bundle org.eclipse.core.resources.",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
          "source": "BundleContextImpl.java:1013"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:969"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:317"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:256"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.preFindLocalClass",
          "source": "EclipseLazyStarter.java:86"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:402"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:188"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:338"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass",
          "source": "SingleSourcePackage.java:37"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:387"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:351"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:251"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:319"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:169"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.IndexOutOfBoundsException",
        "message": "Index: 0, Size: 0",
        "elements": [
          {
            "method": "java.util.ArrayList.RangeCheck",
            "source": "ArrayList.java:546"
          },
          {
            "method": "java.util.ArrayList.get",
            "source": "ArrayList.java:321"
          },
          {
            "method": "org.eclipse.core.internal.properties.PropertyBucket.readEntryValue",
            "source": "PropertyBucket.java:267"
          },
          {
            "method": "org.eclipse.core.internal.localstore.Bucket.load",
            "source": "Bucket.java:299"
          },
          {
            "method": "org.eclipse.core.internal.properties.PropertyBucket.load",
            "source": "PropertyBucket.java:252"
          },
          {
            "method": "org.eclipse.core.internal.localstore.Bucket.load",
            "source": "Bucket.java:266"
          },
          {
            "method": "org.eclipse.core.internal.localstore.BucketTree.loadBucketFor",
            "source": "BucketTree.java:114"
          },
          {
            "method": "org.eclipse.core.internal.properties.PropertyManager2.getProperty",
            "source": "PropertyManager2.java:132"
          },
          {
            "method": "org.eclipse.core.internal.resources.Resource.getPersistentProperty",
            "source": "Resource.java:999"
          },
          {
            "method": "org.eclipse.core.internal.resources.ContentDescriptionManager.getCacheState",
            "source": "ContentDescriptionManager.java:275"
          },
          {
            "method": "org.eclipse.core.internal.resources.ContentDescriptionManager.startup",
            "source": "ContentDescriptionManager.java:463"
          },
          {
            "method": "org.eclipse.core.internal.resources.Workspace.startup",
            "source": "Workspace.java:1893"
          },
          {
            "method": "org.eclipse.core.internal.resources.Workspace.open",
            "source": "Workspace.java:1653"
          },
          {
            "method": "org.eclipse.core.resources.ResourcesPlugin.startup",
            "source": "ResourcesPlugin.java:367"
          },
          {
            "method": "org.eclipse.core.internal.compatibility.PluginActivator.start",
            "source": "PluginActivator.java:31"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run",
            "source": "BundleContextImpl.java:994"
          },
          {
            "method": "java.security.AccessController.doPrivileged",
            "source": "Native Method"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator",
            "source": "BundleContextImpl.java:988"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 5,
      "bugId": "80969",
      "date": "2006-04-08T08:02:08+02:00",
      "product": "Platform",
      "component": "IDE",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.IndexOutOfBoundsException",
      "message": "Index: 0, Size: 0",
      "elements": [
        {
          "method": "java.util.ArrayList.RangeCheck",
          "source": "ArrayList.java:546"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "80969",
      "date": "2006-04-08T08:02:08+02:00",
      "product": "Platform",
      "component": "IDE",
      "severity": "enhancement"
    }
  ],
  "groupId": "80969",
  "bugId": "80969",
  "date": "2004-12-14T18:43:55+01:00",
  "product": "Platform",
  "component": "IDE",
  "severity": "enhancement"
}