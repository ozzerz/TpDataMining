{
  "comments": [
    "I created a simple HTML file C:\\test.html\nI go to \u0027File\u0027 --\u003e \u0027Open File\u0027 --\u003e select C:\\test.html\n\nThe following exception occurs :\n------------------------------\njava.lang.IllegalArgumentException: Path must include project and resource name: /test.html\n\tat org.eclipse.core.runtime.Assert.isLegal(Assert.java:62)\n\tat org.eclipse.core.internal.resources.Workspace.newResource(Workspace.java:1631)\n\tat org.eclipse.core.internal.resources.Container.getFile(Container.java:123)\n\tat org.eclipse.wst.html.internal.validation.HTMLValidator.validate(HTMLValidator.java:277)\n\tat org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.validate(ReconcileStepForValidator.java:339)\n\tat org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.reconcileModel(ReconcileStepForValidator.java:246)\n\tat org.eclipse.jface.text.reconciler.AbstractReconcileStep.reconcile(AbstractReconcileStep.java:96)\n\tat org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.reconcile(ValidatorStrategy.java:204)\n\tat org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.process(DocumentRegionProcessor.java:182)\n\tat org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.process(StructuredRegionProcessor.java:252)\n\tat org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.run(DirtyRegionProcessor.java:610)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",
    "hello.\n\nAny news regarding this issue ?",
    "I\u0027ve confirmed that this is indeed a defect, but I\u0027m not sure if this is a defect in our code or the base\u0027s.  The HTML validator does not validate files that are not in the workspace.  We check if a file is in the workspace or not by calling the following:\n\nIFile file \u003d ResourcesPlugin.getWorkspace().getRoot().getFile(fb.getLocation());\n\nAnd apparently if you pass in something from the device root, you get the exception shown in the log.  I don\u0027t see anything in the getFile() javadoc that says you can\u0027t pass in a file on the device root, so I\u0027m going to try opening a defect on the base and see what they have to say.\n\nIf the base comes back and says it\u0027s working as designed on their end, then we\u0027ll have to either catch exceptions when we call getFile() and ignore them or find a different way to check if a file is a workspace file.  One potential way is according to documentation \"fb.getLocation\" will be \"either a full path of a workspace resource or an absolute path in the local file system.\"  So maybe we could just check if the location is an absolute path. If so, it\u0027s not in workspace.\n",
    "I\u0027ve opened bug 211913 on the base for this issue.",
    "BE careful with IResource.getLocation().\nIt returns null when the file comes from RSE.",
    "Hello.\n\nAny suggestion on your side ?\nIt seems that you need to check it before calling :\nResourcesPlugin.getWorkspace().getRoot().getFile(fb.getLocation());"
  ],
  "commentCreationDates": [
    "2007-09-05T12:37:57+02:00",
    "2007-12-03T15:53:29+01:00",
    "2007-12-04T19:29:58+01:00",
    "2007-12-04T19:39:51+01:00",
    "2007-12-05T10:14:39+01:00",
    "2007-12-11T13:31:44+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Path must include project and resource name: /test.html",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Assert.isLegal",
          "source": "Assert.java:62"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.newResource",
          "source": "Workspace.java:1631"
        },
        {
          "method": "org.eclipse.core.internal.resources.Container.getFile",
          "source": "Container.java:123"
        },
        {
          "method": "org.eclipse.wst.html.internal.validation.HTMLValidator.validate",
          "source": "HTMLValidator.java:277"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.validate",
          "source": "ReconcileStepForValidator.java:339"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.reconcileModel",
          "source": "ReconcileStepForValidator.java:246"
        },
        {
          "method": "org.eclipse.jface.text.reconciler.AbstractReconcileStep.reconcile",
          "source": "AbstractReconcileStep.java:96"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.reconcile",
          "source": "ValidatorStrategy.java:204"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.process",
          "source": "DocumentRegionProcessor.java:182"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.process",
          "source": "StructuredRegionProcessor.java:252"
        },
        {
          "method": "org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.run",
          "source": "DirtyRegionProcessor.java:610"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "202256",
      "date": "2007-09-05T12:37:57+02:00",
      "product": "Web Tools",
      "component": "wst.html",
      "severity": "normal"
    }
  ],
  "groupId": "202256",
  "bugId": "202256",
  "date": "2007-09-05T12:37:57+02:00",
  "product": "Web Tools",
  "component": "wst.html",
  "severity": "normal"
}