{
  "comments": [
    "I\u0027ve noticed when working on a bug that I was getting errors when calling RemoteFileSubSystem.listFolders() method.  Comparing to the other two below and what they are returning I seem to have found the problem:\n\nreturn listFolders(parent, null, context, monitor);\nvs\nreturn listFiles(parent, fileNameFilter, context, monitor);\nvs\nreturn listFoldersAndFiles(parent, fileNameFilter, context, monitor);\n\n\nThe FileNameFilter parameter is always null causing the exception.  This will be a quick fix that will be needed if anyone would ever like to use this method, I will submit a patch soon.\n\n\n-----------Enter bugs above this line-----------\ninstallation : eclipse-SDK-3.3\nRSE install  : dev driver\njava.runtime : Sun 1.5.0_06-b05\nos.name:     : Windows XP 5.1, Service Pack 2\n------------------------------------------------",
    "Created an attachment (id\u003d79005)\nPass appropriate variable as parameter for listFolders\n\nChanges made to ensure that listFolders method does not take a null parameter.",
    "I think that this patch does not address the issue in the correct way, although it is not obvious.\n\n    Javadoc for listFiles() as well as listFoldersAndFiles() says:\n    \"...@param fileNameFilter The name pattern to subset the list by,\n    or null to return all files.\"\n\n    Javadoc for listFolders() says: \n    \"...@param fileNameFilter The name pattern for subsetting the file list\n    when this folder is subsequently expanded\"\n\nSo, interestingly, according to Javadoc which is the definitive guide for the API, a null fileNameFilter is allowed for listFiles() as well as listFoldersAndFiles() but not for listFolders(). This is inconsistent. I think that instead of avoiding to pass null into the method, we should ensure that the method does work as expected even when null is passed into it.\n\nJavadoc should be amended to specify that null is allowed, and the service impl should be fixed to work as expected when null is passed into it.\n\nBut I might also be wrong. As a first step, I\u0027d recommend attaching the original logs that show where the NPE occurred for you; then, we\u0027ll need to understand why Javadoc specifies something different in the @param tag for the listFolders() method; then, we can fix the issue properly.",
    "Hey Martin, \n\nLooking at the javadocs, when a null parm is passed through for the fileNameFilter  it should return all files.\n\nnow the method looks something like this:\n\npublic IRemoteFile[] listFolders(IRemoteFile parent, String fileNameFilter, IProgressMonitor monitor) throws SystemMessageException\n{\n     CODE..........\n     CODE..........\n     CODE..........\n     return listFolders(parent, null, context, monitor);\n}\n\nconsidering this, when a null parm is being passed through this method, in the end it returns the same method with a null parm.  As oppose to the others(listFoldersAndFiles, listFiles) which assign the fileNameFilter to be * and pass that parm through.\n\nSo according to the javadocs, wouldn\u0027t the patch be acceptable in the instance that when listFolders is called with a null fileNameFilter.\n\n1)The fileNameFilter is assigned the appropriate value to return all folders\n\nfileNameFilter \u003d (fileNameFilter \u003d\u003d null) ? \"*\" : fileNameFilter; //$NON-NLS-1$\n\n2) The parm is passed through the method to ensure that all folders are returned:\n\nreturn listFolders(parent, fileNameFilter, context, monitor);\n\n",
    "Hm, you might be right. Given that in listFolders() the docs for the @param talk about something different than the others. Still, I\u0027d like to see why and where the NPE occurs.\nAt any rate, even if your fix is accepted, it would need to update the Javadoc as well in order to say that null is now allowed (whereas before it did not explicitly allow null so clients should have been forbidden to pass null).",
    "It seems to catch the exception when \n\nRemoteFileSubSystem.listFolders(IRemoteFile parent, String fileNameFilter, IProgressMonitor monitor) throws SystemMessageException\n\n*Patch submitted checks to see if a null parm was passed through and assigns the appropriate value for the fileNameFilter variable if it is null -\u003e \"*\" \nwhich calls....\n\nFileServiceSubSystem.listFolders(IRemoteFile parent, String fileNameFilter, IRemoteFileContext context, IProgressMonitor monitor) throws SystemMessageException...............with a null fileNameFilter.\n\nwhich calls....\n\nresults \u003d getFolders(parentPath, fileNameFilter, monitor);.... with the null fileNameFilter.\n\nHere is the stack for the NPE:\n\njava.lang.NullPointerException\n\tat org.eclipse.rse.internal.services.dstore.files.DStoreFileService.convertToHostFiles(DStoreFileService.java:839)\n\tat org.eclipse.rse.internal.services.dstore.files.DStoreFileService.fetch(DStoreFileService.java:1316)\n\tat org.eclipse.rse.internal.services.dstore.files.DStoreFileService.getFolders(DStoreFileService.java:1251)\n\tat org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.getFolders(FileServiceSubSystem.java:284)\n\tat org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.listFolders(FileServiceSubSystem.java:405)\n\tat org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.listFolders(RemoteFileSubSystem.java:894)\n\tat org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.listFolders(RemoteFileSubSystem.java:876)\n\tat org.eclipse.rse.files.ui.resources.UniversalFileTransferUtility.copyRemoteResourcesToWorkspace(UniversalFileTransferUtility.java:418)\n\tat org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.doDrag(SystemViewRemoteFileAdapter.java:1480)\n\tat org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.transferRSEResources(SystemDNDTransferRunnable.java:185)\n\tat org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.runInWorkspace(SystemDNDTransferRunnable.java:589)\n\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\norg.eclipse.core.internal.resources.ResourceException: Resource \u0027/RemoteSystemsTempFiles/SLES8RM/home2/rupenm/Copy/jump\u0027 already exists.\n\tat org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:289)\n\tat org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:276)\n\tat org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:29)\n\tat org.eclipse.core.internal.resources.Folder.create(Folder.java:88)\n\tat org.eclipse.core.internal.resources.Folder.create(Folder.java:118)\n\tat org.eclipse.rse.files.ui.resources.UniversalFileTransferUtility.copyRemoteResourcesToWorkspace(UniversalFileTransferUtility.java:413)\n\tat org.eclipse.rse.files.ui.resources.UniversalFileTransferUtility.copyRemoteResourcesToWorkspace(UniversalFileTransferUtility.java:429)\n\tat org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.doDrag(SystemViewRemoteFileAdapter.java:1480)\n\tat org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.transferRSEResources(SystemDNDTransferRunnable.java:185)\n\tat org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.runInWorkspace(SystemDNDTransferRunnable.java:589)\n\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n",
    "I see what you are talking about the java docs.  It does not mention anything about passing a null for the fileNameFilter parm.  Although, as you said it should be taken care of the same as listFiles or listFilesAndFolders to keep it congruent or to put in a check to see if the parm is null in order to avoid the NPE.\n\njavadoc now:\n\n@param fileNameFilter The name pattern for subsetting the file list when this folder is subsequently expanded\n\n",
    "Created an attachment (id\u003d80672)\nlistfolders deal with null fileNameFilter parameter\n\nHere is the patch with changes to the javadoc.  As discussed in yesterday\u0027s meeting, the listFolders method will be treated the same as listfiles in that if the fileNameFilter parameter is null it will be assigned a \"*\" string in order to return all folders.",
    "I haven\u0027t tested this out but the code looks good to me.  It may be good to have a unit test for this one.  ",
    "Created an attachment (id\u003d81299)\nJunit for listFolders\n\nJunit was developed to test out the functionality of RemoteFileSubSystem.listFolders(IRemoteFile parent, IProgressMonitor monitor) \nwhich will call the overloaded method with a null fileNameFilter.  A null fileNameFilter should return all folders of the parent.\n*Keeping consistent with listFiles",
    "Created an attachment (id\u003d81466)\nJunit for listFolders\n\nJunit submitted as patch ",
    "Hey Dave M, \n\nCan we close this one off because of the recent API changes that were made?\n\nRupen",
    "Yeah, we should close this although it would be good to reference the defect number for the api changes.",
    "In terms of closing, have the provided patches for JUnit been merged and committed to CVS? Then the \"contributed\" keyword should be applied here.\n\nIn terms of API description, correct me if I\u0027m wrong, but:\n\n  * The patch for this bug was to align functionality of listFolders() with\n    what listFiles() does, which is a very slight change in API semantics\n    (but not API linkage) as per comment #7\n  * Since the new API has list() only so it puts the two formerly separate \n    functions into a single one, they need to work the same anyways\n\nTherefore, the API change should be covered in the descriptions of bug 207178 and bug 209552 already? - Anyways I\u0027m marking this blocking bug 209552, since removal of the deprecated methods is only possible if API semantics are aligned as per this bug.\n\n",
    "The patches for the jUnit were never submitted to CVS as they covered testing of listFolders().  Again Martin, should i go ahead and close off this bug, questioning because referring to bug 209552, this API no longer exists.\n\nThank you, \nRupen ",
    "But you can rewrite the listFolders() unittest to use the new list() API with the FILE_TYPE_FOLDERS parameter, can\u0027t you?",
    "Yes, that should not be a problem.  I\u0027ll modify it to test Dave\u0027s API changes accordingly and post a patch once it is complete.\n\nThank you,\nRupen"
  ],
  "commentCreationDates": [
    "2007-09-21T20:40:42+02:00",
    "2007-09-21T21:25:41+02:00",
    "2007-09-24T18:16:51+02:00",
    "2007-09-24T19:53:31+02:00",
    "2007-09-24T20:07:31+02:00",
    "2007-09-24T20:51:19+02:00",
    "2007-09-24T21:02:34+02:00",
    "2007-10-18T17:30:19+02:00",
    "2007-10-18T23:16:53+02:00",
    "2007-10-26T22:43:19+02:00",
    "2007-10-29T16:19:11+01:00",
    "2007-11-22T17:38:00+01:00",
    "2007-11-22T20:30:40+01:00",
    "2007-11-23T10:10:04+01:00",
    "2007-11-23T14:13:26+01:00",
    "2007-11-26T11:39:05+01:00",
    "2007-11-26T15:16:03+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.rse.internal.services.dstore.files.DStoreFileService.convertToHostFiles",
          "source": "DStoreFileService.java:839"
        },
        {
          "method": "org.eclipse.rse.internal.services.dstore.files.DStoreFileService.fetch",
          "source": "DStoreFileService.java:1316"
        },
        {
          "method": "org.eclipse.rse.internal.services.dstore.files.DStoreFileService.getFolders",
          "source": "DStoreFileService.java:1251"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.getFolders",
          "source": "FileServiceSubSystem.java:284"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.servicesubsystem.FileServiceSubSystem.listFolders",
          "source": "FileServiceSubSystem.java:405"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.listFolders",
          "source": "RemoteFileSubSystem.java:894"
        },
        {
          "method": "org.eclipse.rse.subsystems.files.core.subsystems.RemoteFileSubSystem.listFolders",
          "source": "RemoteFileSubSystem.java:876"
        },
        {
          "method": "org.eclipse.rse.files.ui.resources.UniversalFileTransferUtility.copyRemoteResourcesToWorkspace",
          "source": "UniversalFileTransferUtility.java:418"
        },
        {
          "method": "org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.doDrag",
          "source": "SystemViewRemoteFileAdapter.java:1480"
        },
        {
          "method": "org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.transferRSEResources",
          "source": "SystemDNDTransferRunnable.java:185"
        },
        {
          "method": "org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.runInWorkspace",
          "source": "SystemDNDTransferRunnable.java:589"
        },
        {
          "method": "org.eclipse.core.internal.resources.InternalWorkspaceJob.run",
          "source": "InternalWorkspaceJob.java:38"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "204307",
      "date": "2007-09-24T20:51:19+02:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "Resource \u0027/RemoteSystemsTempFiles/SLES8RM/home2/rupenm/Copy/jump\u0027 already exists.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkDoesNotExist",
          "source": "Resource.java:289"
        },
        {
          "method": "org.eclipse.core.internal.resources.Resource.checkDoesNotExist",
          "source": "Resource.java:276"
        },
        {
          "method": "org.eclipse.core.internal.resources.Folder.assertCreateRequirements",
          "source": "Folder.java:29"
        },
        {
          "method": "org.eclipse.core.internal.resources.Folder.create",
          "source": "Folder.java:88"
        },
        {
          "method": "org.eclipse.core.internal.resources.Folder.create",
          "source": "Folder.java:118"
        },
        {
          "method": "org.eclipse.rse.files.ui.resources.UniversalFileTransferUtility.copyRemoteResourcesToWorkspace",
          "source": "UniversalFileTransferUtility.java:413"
        },
        {
          "method": "org.eclipse.rse.files.ui.resources.UniversalFileTransferUtility.copyRemoteResourcesToWorkspace",
          "source": "UniversalFileTransferUtility.java:429"
        },
        {
          "method": "org.eclipse.rse.internal.files.ui.view.SystemViewRemoteFileAdapter.doDrag",
          "source": "SystemViewRemoteFileAdapter.java:1480"
        },
        {
          "method": "org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.transferRSEResources",
          "source": "SystemDNDTransferRunnable.java:185"
        },
        {
          "method": "org.eclipse.rse.internal.ui.view.SystemDNDTransferRunnable.runInWorkspace",
          "source": "SystemDNDTransferRunnable.java:589"
        },
        {
          "method": "org.eclipse.core.internal.resources.InternalWorkspaceJob.run",
          "source": "InternalWorkspaceJob.java:38"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "204307",
      "date": "2007-09-24T20:51:19+02:00",
      "product": "Target Management",
      "component": "RSE",
      "severity": "normal"
    }
  ],
  "groupId": "204307",
  "bugId": "204307",
  "date": "2007-09-21T20:40:42+02:00",
  "product": "Target Management",
  "component": "RSE",
  "severity": "normal"
}