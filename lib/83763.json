{
  "comments": [
    "I have 3 plugins;\n1) is my main plugin that requires other plugins.\n2) is a fragment off that main plugin (requires only what provided by main and \nthe plugins main requires)\n3) is a plug-in that contains interfaces and does not require any other plugins.\n\ngo to the plugin config page for the launcher (its an application),\n\n1. deselect all plugins.  \n2. uncheck \"Include fragments when computing required plug-ins.\"\n3. check my 3 plug-ins.(which are open in the workspace)\n4. Push \"add required plug-ins.\"\n5. Push validate, note all is OK.\n6. launch, and note it fails.\n7. check \"Include fragments when computing required plug-ins.\"\n8. Push validate, note all is OK. (but to launch now will still fail)\n9. Push \"add required plug-ins.\" (note all the newly added plug-ins)\n\nWhy is \"add required plug-ins\" adding plugins after \"validate plug-in set\" \nindicates the set is complete?\n\nBackground:\n\nI do not know why checking \"include fragments when computing\" makes any \ndifference at all because I don\u0027t have any requirements in my fragment.xml \nfile.  The fragment only needs the plug-in it is extending and gets all its \nstuff through it.  The plug-ins that are added when I push \"add required plug-\nins\" are a bunch of compatability stuff.  But I can not see why its being added \nbecause I don\u0027t use any classes that require such plug-ins, and they are not \npart of my required classes in plugin.xml.\n\nI am assuming that \"Fragmentation\" support is not fully 3.0 compliant yet and \nthat is why the compatability stuff is added?  In any event, I listed this part \njust as background in case it has anything to do with the issue.\n\n3.1M3\nVersion: 3.1.0\nBuild id: 200411050810",
    "why does the launch fail?  what does the log say?",
    "Note that the \u0027Validate Plugin Set\u0027 only makes sure that the list of plugins \nyou are launching with is complete.  No other promises are made.\nThe launch could still fail for a wide variety of reasons, eg. classloading \nerrors, etc.\n\nAs for fragments, they are unrelated to all of this.\nBut let me explain how it works:\n\nif plugin A depends on plugin B and plugin B has a fragment, then when you \ncomputing the required plugins for A would give you both B and its fragment, \nsince B and its fragment coalesce into one entity at runtime.\nSome people want this behavior at testing, and others don\u0027t.\nThat is why we give you that option.\n\nTwo other big reasons:\n1. Many big products have their plugin translations in NL-fragments. One \nfragment per plugin.  When dealing with a product with 1000 plugins, NL \nfragments would double the total number.  Some people want to launch with NL, \nothers don\u0027t.  This is where this option is pretty handy.  Good luck trying to \nuncheck 1000 checkboxes otherwise.\n\n2. the org.eclipse.ui.workbench plugin has am \norg.eclipse.ui.workbench.compatibility fragment.  This fragment depends on \norg.eclipse.core.resources.  So including this fragment by default would bring \nin org.eclipse.core.resources thus upsetting the RCP community who is \nresources-unfriendly.\n\nSince we can\u0027t read minds, we provide that checkbox.",
    "!ENTRY org.eclipse.osgi 2005-01-26 21:28:09.675\n!MESSAGE Application error\n!STACK 1\njava.lang.RuntimeException: Application \"rigidsoftware.WAD.application\" could\nnot be found in the registry. The applications available are: \u003cNONE\u003e.\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:325)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:704)\n\tat org.eclipse.core.launcher.Main.main(Main.java:688)\n\n!ENTRY org.eclipse.osgi 2005-01-26 21:28:09.685\n!MESSAGE Bundle initial@reference:file:F:/EclipseProjects/WAD2_DS_AccessDB/ [13]\nwas not resolved.\n!SUBENTRY 1 org.eclipse.osgi 2005-01-26 21:28:09.685\n!MESSAGE Missing host rigidsoftware.WAD_[0.0.2,1.0.0).\n\n\nrigidsoftware.WAD.application is in my main plugin.\nWAD2_DS_AccessDB is the fragment.\n\nI get this error everytime if the fragment project is open but the fragment\nplug-in is not checked to be included in the runtime/debugging environment AND\nthe other plugins that the fragment capability appearantly needs are not included.\n\n",
    "The log error makes sense since the plugin declaring the application was \ndeselected.  In this setup (i.e when the main plugin is deselected), \nthe \u0027Validate Plugin Set\u0027 would in fact tell you that there are problems.  I \njust verified.  Isn\u0027t that the case?\n\nIn any event, this contradicts your original description of the problem (steps \n1-5) when you say that you in fact selected the main plugin and pre-reqs.  In \nthat case, PDE was correct to forecast that there are no missing dependencies.\n\n\n",
    "No, the main plug-in has never been deselected.  The main plugin project and the\nfragment plugin project were both open.  The fragment was deselected, but that\ndoes not even matter.  I believe the failure is from some eclipse plug-ins not\nhappy without their fragments.\n\nI guess what is happening is that it is including fragments of ALL included\nplug-ins and not just mine.  Sounds logical.  So that is why\norg.eclipse.ui.workbench.compatibility fragment gets in (because I require\norg.eclipse.ui.workbench), and it brings all its friends along...\n\nSo tbh, I think I see what you are saying about computing fragments and that is\nwhy my plug-in won\u0027t run without those.  Seems I need to go beat up on the\nworkbench people about their extensive plug-in requirements...\n\nStill, if pushing \"add required plug-ins\" knows there are plugins to be added,\nthen \"validate\" should know as well.  It looks like \"add required plug-ins\"\nrespects the \u0027include fragments\u0027 checkbox, but validate does not.",
    "Let me clarify a couple of things:\n\n1. A plugin\u0027s enabled/disabled state in NOT affected by the presence/absence \nof a fragment.  A plugin is only disabled if one of its prereqs is missing or \ndisabled.\n\n2. A fragment is disabled if\n    a. its parent plugin (i.e. fragment host) is disabled or missing\n    b. one of the fragment\u0027s direct pre-reqs (if any) is disabled or missing.\n\nThe \"Validate\" function uses the same logic that the runtime uses upon startup \nand does not see any problems if fragments are missing because of points 1 and \n2 above.\n\nIn your log, it appears that the plugin itself is disabled or missing.  It \nwould be surpring if the \"Validate\" function did not detect that.\n\nI suggest you add \"-debug\" to the Program Args field on the first tab of the \nlaunch config and run again.  With this flag, the runtime is more verbose and \nwould tell you why a plugin was disabled.  Perhaps that will help.\n\n",
    "oh wait, I think I know what is going on..\n\nPlease add \"-clean\" to the Program Args on the first tab and everything will \nlaunch fine.\n\nI suspect bug 82648 is at play here.",
    "Well it could be related to this manifest replenishing if the classes that\nperform this are in fragments which are not normally added to my runtime.  but i\nam using 3.1M3 thus far.\n\n\nI added -debug and found no additional relevant information.\n\n\"In your log, it appears that the plugin itself is disabled or missing.  It \nwould be surpring if the \"Validate\" function did not detect that.\"\n\nThe plugin is not disabled, but it seems missing for some reason.  The ONLY\ndifference between a successful launch and an unsuccessful one is checking\n\u0027include fragments\u0027 and then pushing \u0027add required plug-ins\u0027.  Validate says all\nis OK before and after that procedure.  The only plugins added are\n\u0027org.eclipse.ui.workbench.compatibility\u0027 and those 4-5 it brings with it.  \n\nBasically without org.eclipse.ui.workbench.compatibility the workbench will not\nstart.  But while \u0027add required plug-ins\u0027 knows this, validate does not.  I know\nyou are saying that validate has no way to know this, but I don\u0027t still\nunderstand why \u0027add required plug-ins\u0027 does then??\n\n\nI closed the fragment project, now the PDE should have no knowledge of the\nfragments existance at all.  but when I launch I still get the bug as indicated\nabove.  This line;\n\n!MESSAGE Bundle initial@reference:file:F:/EclipseProjects/WAD2_DS_AccessDB/ [13]\nwas not resolved.\n\nmakes no sense as that is my _fragment_ project that is CLOSED, and I even\ncreated a new runtime directory to make sure its all cleaned out.  Why is it\neven trying to use something from a closed project??  it appears that there is\ninformation being stored somewhere that I can not get cleared out.  Or that the\nerror message is simply getting it wrong somehow.\n\n\nCould it be something with the style of my plugins with this osgi stuff.  i dont\nhave a manifest and i think they are standard 3.0 level plugins.  I\u0027m going to\n3.1M4 just to see what happens.",
    "The same issue is with M4.",
    "Let me reiterate that this has nothing to do with fragments.\n\n\u003ePDE should have no knowledge of the fragments existance at all.  but when I \n\u003elaunch I still get the bug as indicatedabove. \nThis is not PDE.  When you launch, the runtime takes over.\n\n\u003eI even created a new runtime directory to make sure its all cleaned out.\nThat is not quite what I asked you to do in comment 7.\nI asked you to add -clean the Program Args field on the first tab of the \nlaunch configuration.\nCreating a new workspace area, as you did, does not help in this case, since \nthe runtime cache (which I suspect is the root of the problem as it might be \nmissing the manifest for your main plugin) is kept outside the workspace.  ",
    "Sorry.  I have done everything you have asked but not commented appropriately to\nlet you know.  Yes there is \u0027-clean\u0027 in the \u0027Program Arguments\u0027 section of my\nlaunch configuration.  But its not showing up in the log as being there.  3.1M3\nshows\n\n!SESSION 2005-01-27 07:46:34.175 -----------------------------------------------\neclipse.buildId\u003dunknown\njava.version\u003d1.4.2_06\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments: -application rigidsoftware.WAD.application -pdelaunch\n\n--SNIP--\n3.1M4 is a bit different\n\n!SESSION 2005-01-27 07:54:26.625 -----------------------------------------------\neclipse.buildId\u003dunknown\njava.version\u003d1.4.2_06\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nFramework arguments:  -application rigidsoftware.WAD.application -pdelaunch\nCommand-line arguments:  -application rigidsoftware.WAD.application -data\nC:\\eclipse3.1M4\\runtime-workspace -dev\nfile:C:/eclipse3.1M4/workspace2/.metadata/.plugins/org.eclipse.pde.core/New_configuration/dev.properties\n-pdelaunch -clean -os win32 -ws win32 -arch x86 -nl en_US\n\n\nThe specific error is a dialog window titled \"Launch Error\" with the comment\n\"Could not launch the configuration.  Details are in the log.  Would you like to\nopen it?\"\n\n",
    "Sorry, the rest of the 3.1M4 log\n\n!ENTRY org.eclipse.osgi 2005-01-27 07:54:26.625\n!MESSAGE Application error\n!STACK 1\njava.lang.RuntimeException: Application \"rigidsoftware.WAD.application\" could\nnot be found in the registry. The applications available are: \u003cNONE\u003e.\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:210)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:185)\n\tat org.eclipse.core.launcher.Main.run(Main.java:710)\n\tat org.eclipse.core.launcher.Main.main(Main.java:694)\n\n!ENTRY org.eclipse.osgi 2005-01-27 07:54:26.625\n!MESSAGE Bundle initial@reference:file:F:/EclipseProjects/WAD2_DS_AccessDB/ [12]\nwas not resolved.\n!SUBENTRY 1 org.eclipse.osgi 2005-01-27 07:54:26.625\n!MESSAGE Missing host rigidsoftware.WAD_[0.0.2,1.0.0).\n",
    "I am out of ideas.\nI will have to forward this to Platform/Runtime to continue this conversation, \nas it is a startup problem.",
    "I think I understand what you meant in comment #6.  \u0027Validate plug-in set\u0027 does \nnot care about what is \"required\" to run the plug-in and has no relationship \nto \u0027add required plug-ins.\u0027  I was thinking of \u0027validate plug-in set\u0027 as if it \nwas \u0027check required plug-ins.\u0027 Which it obviously is not.  This would be a good \nplace for a descriptive tooltip.  This is really all this bug is about.\n\nSo if you have a plug-in that will not run without one of its fragments, nobody \nseems to be able to know this.  So you added the \u0027include fragments\u0027 to add \n_all_ fragments present whether or not they are truly required?\n\nWhat seems to be the problem is the launching of the environment _requires_ \ncertain fragments.  as you indicated in post #2.  Do you know the bug number on \nthat \u0027org.eclipse.ui.workbench.compatibility fragment\u0027 requirement so i can get \nin on it?",
    "Re-adding Wassim, as comment 14 was addressed to him.",
    "Correct.  the \u0027Validate Plugin Set\u0027 takes the list of plugins that you \nselected, examines their inter-dependencies, and flags any unsatisfied \ndependencies.  \u0027Validate\u0027 does not in any way imply that it will implicitly \nadd/check/select any plugins for you.  \nNote that the \u0027Validate\u0027 function is independent of the plugin viewer \naltogether.  That is, you can invoke it even if the first or second radio \nbutton are selected.\n\nI\u0027m pretty certain that org.eclipse.ui.workbench can run without the \nworkbench.compatibility.  In any event, I\u0027ll cc Nick as he knows why that \nfragment is there and how it is used.\n\nIn any event, I thought the problem was that even though you included your \nplugin that declares your application to the list of plugins to launch, you \nstill get that error upon launching.  That is why we moved the bug report to \nthe runtime bucket.  \n\nI don\u0027t think the lack of the workbench.compatibility fragment will give you \nan error telling you that the application has not been found.  The absence of \na fragment does not disable its host in the runtime registry.\n",
    "Sorry I keep trying to summarize and getting off track.\n\n1. Validate plug-in set out of synch with add required plug-ins.\nWith my understanding I think this is false.  Though I would like a tooltip or \nsomething describing the difference because to someone unfamiliar they will \nprobably make the same poor assumption.  So I think this issue is closed.\n\n2. Why won\u0027t the environment clean itself out?  If I put \u0027-clean\u0027 and \u0027clear \nworkspace before launching\u0027 and \u0027clear the configuration area before launching\u0027 \nthe launched environment if/when it fails will produce a log that indicates it \nis still looking for a closed and deleted Project, or at least the error \nmessage says so.\n\n3. Why is org.eclipse.ui.workbench.compatibility fragment required when my \nplugin does not need the compatibility layer.  Unless this is not the same as \n2.x compatability?  If I do not \u0027include fragments when computing required plug-\nins\u0027 that compatability fragment will not be added and the runtime \n_will_not_launch_!!  Could this be related too using match\u003d\"compatible\" in \nplugin.xml files?  I removed it from my plug-in file, but still the launch \nfails.",
    "\"In any event, I thought the problem was that even though you included your \nplugin that declares your application to the list of plugins to launch, you \nstill get that error upon launching.\"\n\nYes, even though I included my plug-in that declared my application, if the \ncompatability fragment is not also included I always get that error.\n",
    "Could you add the plugin.xml and fragment.xml files for the two involved\nprojects to this PR (you can omit the extension/extension points sections)?",
    "Created an attachment (id\u003d17514)\nplugin.xml for the application plugin\n",
    "Created an attachment (id\u003d17515)\nthe fragments xml file\n",
    "org.eclipse.ui.workbench.compatibility is for 2.1-\u003e3.0 compatibility for the\nIResource-based APIs that used to be on IWorkbenchPage (e.g. openEditor(IFile)).\n RCP apps should not use it.  (This is also independent from\norg.eclipse.core.runtime.compatibility).\n\n",
    "Please try this:\n1) do not close any projects containing your plug-ins in the workspace\n2) create a brand new \"Eclipse Application\" launch configuration called \"Foo\"\n3) on the \"Plug-ins\" tab, select \"Choose plug-ins and fragments to launch from\nthe list\"\n4) deselect *all* plug-ins and fragments (there is a button for that)\n5) make sure \"include fragments when computing required plug-ins\" is *cleared*\n6) select the rigidsoftware.WAD plug-in (but not your fragment)\n7) press the \"add required plug-ins\" button: the result should *not* have the\nworkbench.compatibility fragment, nor your own fragment\n8) \"Validate plug-in set\" should not give you any warnings now\n9) In the \"Main\" tab, specify the following program arguments only: -debug\n-consolelog\n10) In \"Program to run\", choose rigidsoftware.WAD.application\n11) Run!\n\nDoes it work? If not, what is the output on the console? Also, in that case,\nplease attach to this PR the file at:\n\nC:\\eclipse3.1M4\\workspace2\\.metadata\\.plugins\\org.eclipse.pde.core\\Foo\\config.ini\n\nThanks.",
    "Fails as indicated previously.",
    "Created an attachment (id\u003d17518)\nconsole log text\n",
    "Created an attachment (id\u003d17519)\nini file\n",
    "Except for the fact you are still targetting a 3.1M3 install, the config.ini\nseems correct.\n\nI could not reproduce this problem using 3.1 M4 (targetting 3.1 M4). Regardless\nI had the fragment enabled or not, things worked smoothly. Could you try doing\nthe same? You would have to import org.eclipse.gef and org.eclipse.draw2d as\nbinary projects into your workspace.\n",
    "I\u0027m at work and only have 3.1M3 here.  But the same thing happens at home when \nI use 3.1M4.\n\nI have narrowed it down to 1 plugin whose presence is mandatory:\n\norg.eclipse.update.configurator\n\nThe rest of the plug-ins and fragments added by \u0027include fragments\u0027 are not \nnecessary for launch.  What does this imply?",
    "looks like bug 66451",
    "Yes, that was it.  \n\nNow I only have issue #2;  why then environment won\u0027t clean itself out when \nrequested to do so.",
    "That PR is not about the same issue, that one is an enhacement request about RCP\ndevelopers willing to have update.configurator but it not being part of the RCP\nSDK (most developers want their product to be extensible), although it can be\nused with RCP applications. But RCP applications (as in your case) can provide a\nlist of the plug-ins to be installed, and that is what the osgi.bundles\u003d line in\nthe config.ini generated by PDE for you does. Short story: you should *not* need\nthe update.configurator as part of you configuration, and if it does not work\nwithout it, we still have a bug. However, I don\u0027t see the behavior you are\ndescribing while using 3.1 M4.",
    "Well I will test again when I get home.  But you see from above that I did \nreceive this problem in 3.1M4 as well.  Is there anything specific as to why \nyou think the upgrade to M4 would alievate the configurator requirement?\n\n\nI checked my runtime environment from a successful launch, and I do not see any \nadditional plugins in config.ini than I see added in my plug-ins tab.  I don\u0027t \nreally know what configurator does though...\n\nWhen you test, be sure you \u0027clear the configuration area before launching.\u0027  \nOtherwise if you ever have a successful launch, all the rest will be successful \nfrom then on.  probably because the configurator plugin is still listed in the \nconfig.ini file.\n\nI\u0027m pretty lost now.  Its happening in 3.1M3 on my laptop, and in 3.1M4 and \n3.1M3 on my desktop.",
    "\u003eIs there anything specific as to why \n\u003eyou think the upgrade to M4 would \n\u003ealievate the configurator requirement?\n\nAgain, there should be no requirement for the configurator if\norg.eclipse.core.runtime.compatibility is not part of the configuration, this\nwould be a bug. But, so far, I haven\u0027t been able to reproduce it.\n\nThe reason I suggested you trying with M4 is that I (wrongly) assumed you were\ntesting with M4 from comment 9 on, but were targetting a 3.1 M3 install.",
    "Created an attachment (id\u003d17532)\n3.1M4 console log\n\nsame procedure with 3.1M4 and a fresh install.\tI did not even add my fragment\nplugin to the environment yet.",
    "Created an attachment (id\u003d17533)\n3.1M4 config.ini file\n\nThis is the ini file. \nWhat is totally baffling is that as I said I did not even import the fragment\nplug-in into the fresh eclipse install, yet you see in the log file an error\nmessage containing a reference to it.",
    "To clarify the use of update.configurator:\nIf that plugin is among the list you are launching with, PDE puts it and \norg.eclipse.core.runtime in the osgi.bundles key ofthe config.ini that we \nlaunch with.  update.configurator would be responsible subsequently to tell \nthe runtime where the other plugins are.\n\nIf update.configurator is not in the list of plugins you are launching with, \nPDE puts every single plugin you are launching with in the osgi.bundles key of \nthe ocnfig.ini thus telling the runtime exactly where the plugins are.\n\nremoving Nick from cc to reduce his inbox traffic as this issue is certainly \nnot ui.workbench-related.",
    "Yes without configurator, each plugin is added to config.ini, but with \nconfigurator only the configurator plugin and the runtime plugin are added.\n\nSo it looks like the PDE is getting the list wrong?  I checked the list of \nplugins from the help menu from a successful run vs. the list in the ini file.  \nthe only plugin that is not present is the configurator.\n\n\nBut again note what I said about my fragment.  It was NEVER imported into this \nfresh eclipse 3.1M4 install, yet it appears in the log file as the source of an \nerror!?  I altered the name (by adding an x) of the directory containing that \nfragment and look what happened\n\n!MESSAGE Bundle initial@reference:file:D:/EclipseProjects/WAD2_DS_AccessDBx/ \n[13] was not resolved.\n\nHow is eclipse knowing about this directory that it has never heard of?  \nSomething is parsing file system, but i cant imagine why.",
    "\u003eSo it looks like the PDE is getting the list wrong?\nNo, the list in config.ini is correct both in the presence/absence of \nupdate.configurator",
    "Looks like though the list is present, and correct, its not enough to get the\nruntime going sans configurator.\n\nAny comment on the strange error message?\n\nRafael, I am interested in your method of testing, would you describe it to me?\n Perhaps I could identify any difference in how you tested and how i tested.",
    "I did some more testing and found out something new.  If you get a good\nconfigureation by including the configurator, then launch it.  Then you uncheck\n\u0027clear the configuration area before launching\u0027 and be sure to not have -clean\nas well, then all subsequent launches will be ok.  I described this behavior\nbefore.  I was wrong in my assumption that the config.ini file would not be\nmodified though.  It is modified everytime you change the plug-ins page info.\n\nWhat I find is interesting, is the config.ini file in this case is exactly the\nsame as the case where it does not run.\n\nSo the problem is not in the config.ini file, but in something else in the\nconfiguration area.",
    "This whole issue is depending on the name of the folder my 2nd project is\ncontained within.  What I see on a failed launch in the org.eclipse.pde.core\nmanifests folder is a bunch of *.MF files.  The only difference between a\nworking launch and a failed launch is the presence of;\n\nrigidsoftware.WAD.DS_AccessDB_0.2.2.MF\n\nWhish is my fragment that shows up for some reason during failed launches.  As I\nhave described for some reason the environment is pulling in this plugin from\nthe file system.  What is even more interesting is why.  My 2 projects are named\n\nWAD2\nWAD2_DS_AccessDB\n\nWhen the environment sees that \u0027_\u0027 it just ignores the rest and loads the\nproject from that directory.  So it loads WAD2_DS_AccessDB instead of WAD2. \nThis is why i keep getting that project included instead of WAD2.\n\nIf I change the letters of WAD2_DS_AccessDB that come before the \u0027_\u0027, everything\nworks like a charm.   If I change the letters that come afterward it does not\nmatter what they are, the project in that directory will get loaded and the\nlaunch will fail.",
    "Looks like there could be a bug in the handling of \u0027_\u0027.  prior to 3.0, _ was \nnot valid in a plugin id.  _ was added to the valid char set for plugins as of \n3.0.  Perhaps there is some code somewhere which is doing the version spliting \nincorrectly using, for example, indexOf() rather than lastIndexOf()...\nUnclear to me whether this is in update, pde or runtime.  Thoughts?",
    "PDE does not go looking for a \u0027_\u0027 at any point.",
    "good hypothesis though Jeff.  I think this may be it.  You should hypothesize \nmore often.",
    "Did you mean to say _ was not valid in a project name?   My plug-in ids have\nnever had an _ in them, but my project names have since the 2.x days.",
    "Re: comment 39\n\nI created three projects: rigidsoftware.wad.interfaces (the\nrigidsoftware.wad.interfaces plug-in), WAD2 (the rigidsoftware.WAD plug-in),\nWAD2_DS_AccessDB (the rigidsoftware.WAD.DS_AccessDB fragment). The\nrigidsoftware.WAD plug-in declares an application, and I try running this\napplication following the steps described in comment 23. But it always works for\nme (and I am testing with 3.1 M3 now).\n\nIf this should cause the problem to happen, could you try to recreate this\nscenario on a new workspace to see if you can reproduce it?",
    "I replaced the WAD2_DS_AccessDB folder with another folder of the same name, \nand copied all the contents into it.  The problem went away.\n\nI put the original folder back and the problem came back.  Either this has to \ndo with the order windows returns folders in, or this is a problem with my \nKingston DataTraveler 2.0 128MB flash drive.  I\u0027m leaning toward the latter.  \nMaybe its on its last leg?\n\nI could not get this problem to happen on my harddrive.  I\u0027ll order some new \nflash drives, and if I have the same issue, i\u0027ll have to dig deeper.",
    "I would go for the latter too. Will close as invalid. Please reopen if you\nmanage to reproduce it on a conventional file system.",
    "*** Bug 112148 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-01-26T21:29:56+01:00",
    "2005-01-26T23:04:41+01:00",
    "2005-01-26T23:33:27+01:00",
    "2005-01-27T02:37:30+01:00",
    "2005-01-27T03:01:03+01:00",
    "2005-01-27T03:08:52+01:00",
    "2005-01-27T03:19:08+01:00",
    "2005-01-27T04:07:19+01:00",
    "2005-01-27T04:39:01+01:00",
    "2005-01-27T06:32:07+01:00",
    "2005-01-27T10:25:27+01:00",
    "2005-01-27T12:58:42+01:00",
    "2005-01-27T13:11:51+01:00",
    "2005-01-27T13:13:25+01:00",
    "2005-01-27T14:40:49+01:00",
    "2005-01-27T14:58:27+01:00",
    "2005-01-27T15:13:39+01:00",
    "2005-01-27T15:32:43+01:00",
    "2005-01-27T15:39:40+01:00",
    "2005-01-27T15:48:39+01:00",
    "2005-01-27T16:01:36+01:00",
    "2005-01-27T16:02:32+01:00",
    "2005-01-27T16:06:54+01:00",
    "2005-01-27T17:07:05+01:00",
    "2005-01-27T17:54:51+01:00",
    "2005-01-27T17:55:24+01:00",
    "2005-01-27T17:56:50+01:00",
    "2005-01-27T18:15:26+01:00",
    "2005-01-27T19:36:53+01:00",
    "2005-01-27T19:40:04+01:00",
    "2005-01-27T19:47:41+01:00",
    "2005-01-27T19:50:26+01:00",
    "2005-01-27T20:21:47+01:00",
    "2005-01-27T20:46:16+01:00",
    "2005-01-27T21:37:33+01:00",
    "2005-01-27T21:40:30+01:00",
    "2005-01-27T21:42:15+01:00",
    "2005-01-27T22:05:26+01:00",
    "2005-01-27T22:15:19+01:00",
    "2005-01-28T02:22:29+01:00",
    "2005-01-28T02:48:35+01:00",
    "2005-01-28T03:32:50+01:00",
    "2005-01-28T06:15:02+01:00",
    "2005-01-28T06:20:50+01:00",
    "2005-01-28T06:25:39+01:00",
    "2005-01-28T12:40:08+01:00",
    "2005-01-28T15:24:51+01:00",
    "2005-01-28T16:43:07+01:00",
    "2005-01-28T16:53:36+01:00",
    "2005-10-11T01:57:38+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Application \"rigidsoftware.WAD.application\" could not be found in the registry. The applications available are: \u003cNONE\u003e.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:325"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:704"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:688"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "83763",
      "date": "2005-01-27T02:37:30+01:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.RuntimeException",
      "message": "Application \"rigidsoftware.WAD.application\" could not be found in the registry. The applications available are: \u003cNONE\u003e.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:210"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:185"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:710"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:694"
        }
      ],
      "number": 1,
      "commentIndex": 12,
      "bugId": "83763",
      "date": "2005-01-27T13:11:51+01:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    }
  ],
  "groupId": "83763",
  "bugId": "83763",
  "date": "2005-01-26T21:29:56+01:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "normal"
}