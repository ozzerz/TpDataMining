{
  "comments": [
    "File parsed:\n...\\wxWidgets-2.6.0\\include\\wx\\dynarray.h line: 957\n\nTranslation unit:\n...\\wxWidgets-2.6.0\\src\\xrc\\xh_wizrd.cpp\n\nStack trace:\n\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).calculateEndOffset(IASTNode)\nline: 184\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).figureEndOffset(IASTDeclSpecifier,\nIASTDeclarator) line: 2075\nGNUCPPSourceParser.typeId(boolean) line: 962\nGNUCPPSourceParser.castExpression() line: 912\nGNUCPPSourceParser.castExpression() line: 923\nGNUCPPSourceParser.pmExpression() line: 867\nGNUCPPSourceParser.multiplicativeExpression() line: 830\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).additiveExpression() line: 838\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).shiftExpression() line: 813\nGNUCPPSourceParser.relationalExpression() line: 758\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).equalityExpression() line: 767\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).andExpression() line: 750\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).exclusiveOrExpression() line: 732\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).inclusiveOrExpression() line: 715\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).logicalAndExpression() line: 698\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).logicalOrExpression() line: 681\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).conditionalExpression() line: 864\nGNUCPPSourceParser.assignmentExpression() line: 683\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).expression() line: 604\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).parseReturnStatement() line: 1793\nGNUCPPSourceParser.statement() line: 4973\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).compoundStatement() line: 515\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).functionBody() line: 1046\nGNUCPPSourceParser.functionBody() line: 5306\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).handleFunctionBody() line: 1033\nGNUCPPSourceParser.simpleDeclaration(SimpleDeclarationStrategy, boolean) line: 2954\nGNUCPPSourceParser.simpleDeclarationStrategyUnion() line: 2460\nGNUCPPSourceParser.declaration() line: 2450\nGNUCPPSourceParser.classSpecifier() line: 4267\nGNUCPPSourceParser.declSpecifierSeq(boolean, boolean) line: 3398\nGNUCPPSourceParser.simpleDeclaration(SimpleDeclarationStrategy, boolean) line: 2836\nGNUCPPSourceParser.simpleDeclarationStrategyUnion() line: 2460\nGNUCPPSourceParser.declaration() line: 2450\nGNUCPPSourceParser.translationUnit() line: 4574\nGNUCPPSourceParser(AbstractGNUSourceCodeParser).parse() line: 407\nInternalASTServiceProvider.getTranslationUnit(IStorage, String, IProject,\nICodeReaderFactory, IParserConfiguration) line: 174\nInternalASTServiceProvider.getTranslationUnit(IFile, ICodeReaderFactory) line: 79\nCDOM.getTranslationUnit(IFile, ICodeReaderFactory) line: 130",
    "Devin can you look into this one? \nMy take on it is as follows: \na type-id should consume at least one token.  If both the declarator \u0026 declspec\nare null then we should backtrack out of typeId().  ",
    "I get a different stack trace when I see this NPE so originally I wanted to \njust return -1 if node\u003d\u003dnull from AbstractGNUSourceCodeParser#calculateEndOffset\n().\n\nThe NPE I see is caused by a null IASTName parsed from \nGNUCPPSourceParser#idExpression().\n\njava.lang.NullPointerException\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.calculateEn\ndOffset(AbstractGNUSourceCodeParser.java:182)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.postfixExpressio\nn(GNUCPPSourceParser.java:1627)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.unaryExpression\n(GNUCPPSourceParser.java:1357)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.castExpression\n(GNUCPPSourceParser.java:937)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.pmExpression\n(GNUCPPSourceParser.java:869)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.multiplicativeEx\npression(GNUCPPSourceParser.java:832)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.additiveExp\nression(AbstractGNUSourceCodeParser.java:836)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.shiftExpres\nsion(AbstractGNUSourceCodeParser.java:811)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.relationalExpres\nsion(GNUCPPSourceParser.java:760)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.equalityExp\nression(AbstractGNUSourceCodeParser.java:765)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.andExpressi\non(AbstractGNUSourceCodeParser.java:748)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.exclusiveOr\nExpression(AbstractGNUSourceCodeParser.java:730)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.inclusiveOr\nExpression(AbstractGNUSourceCodeParser.java:713)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.logicalAndE\nxpression(AbstractGNUSourceCodeParser.java:696)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.logicalOrEx\npression(AbstractGNUSourceCodeParser.java:679)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.conditional\nExpression(AbstractGNUSourceCodeParser.java:862)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.assignmentExpres\nsion(GNUCPPSourceParser.java:685)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.expression\n(AbstractGNUSourceCodeParser.java:602)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declarator\n(GNUCPPSourceParser.java:3843)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.initDeclarator\n(GNUCPPSourceParser.java:3644)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.initDeclarator\n(GNUCPPSourceParser.java:3626)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.lookAheadFo\nrDeclarator(AbstractGNUSourceCodeParser.java:1072)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declSpecifierSeq\n(GNUCPPSourceParser.java:3352)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclaratio\nn(GNUCPPSourceParser.java:2840)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclaratio\nnStrategyUnion(GNUCPPSourceParser.java:2462)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declaration\n(GNUCPPSourceParser.java:2452)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.classSpecifier\n(GNUCPPSourceParser.java:4278)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declSpecifierSeq\n(GNUCPPSourceParser.java:3409)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclaratio\nn(GNUCPPSourceParser.java:2840)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclaratio\nnStrategyUnion(GNUCPPSourceParser.java:2462)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declaration\n(GNUCPPSourceParser.java:2452)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.translationUnit\n(GNUCPPSourceParser.java:4593)\n\tat \norg.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.parse\n(AbstractGNUSourceCodeParser.java:405)\n\tat \norg.eclipse.cdt.internal.core.dom.InternalASTServiceProvider.getTranslationUnit\n(InternalASTServiceProvider.java:168)\n\tat \norg.eclipse.cdt.internal.core.dom.InternalASTServiceProvider.getTranslationUnit\n(InternalASTServiceProvider.java:78)\n\tat org.eclipse.cdt.core.dom.CDOM.getTranslationUnit(CDOM.java:130)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.DOMSourceIndexerRunner.inde\nxFile(DOMSourceIndexerRunner.java:116)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.AbstractIndexerRunner.index\n(AbstractIndexerRunner.java:76)\n\tat org.eclipse.cdt.internal.core.index.cindexstorage.Index.add\n(Index.java:110)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddCompilationUnitToInde\nx.indexDocument(DOMAddCompilationUnitToIndex.java:29)\n\tat \norg.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddFileToIndex.execute\n(DOMAddFileToIndex.java:60)\n\tat org.eclipse.cdt.internal.core.search.processing.JobManager.run\n(JobManager.java:466)\n\tat java.lang.Thread.run(Thread.java:534)\n",
    "The -1 is a bad idea.\n\nThis is the example from Mozilla that causes the NPE I see:\nNS_FORWARD_NSIHTTPPROTOCOLHANDLER    (gHttpHandler-\u003e)\n\nGNUCPPSourceParser#postfixExpression() parses the gHttpHandler, then the -\u003e and \nthen assumes that there is a name to the right side of the -\u003e and so a null is \npassed into calculateEndOffset... although even if -1 is returned here, there \nwill still be a NPE a couple of lines later via name.setParent(fieldReference)\n",
    "Agreed, returning  -1 is a bad idea. \nWe need to fix the grammar so that we do not encounter null nodes.  ",
    "The NPE I am seeing is being caused in Windows because the grammar is invalid.\n\nNS_FORWARD_NSIHTTPPROTOCOLHANDLER is only defined in the object directory when \nMozilla is built (since we are not building Mozilla in Windows, we are missing \nthe object directory and corresponding source code).  An example is the file \nmozilla/netwerk/protocol/http/src/nsHttpHandler.h, which has several broken \n#includes.  The broken #include nsIHttpProtocolHandler.h is found in Linux in \nthe object directory.\n\nSo in this case the grammar is completely broken.  I\u0027ll attach a patch that \nfixes the NPE in this case so you can take a look at it.  I\u0027ll have to get the \nwxWidgets project to try and reproduce the typeId NPE vlad raised initially.",
    "Created an attachment (id\u003d24325)\nfix for the NPE I appended to this PR\n",
    "Created an attachment (id\u003d24343)\nfix for this PR (both NPE)\n\nThis patch fixes the NPE that Vlad raised from wxWidgets and the NPE that I\nraised from Mozilla.\n",
    "Please take a look at the attached patch and apply/reject it.",
    "The grammar requires that the -\u003e is followed by a name. \nWhat does NS_FORWARD_NSIHTTPPROTOCOLHANDLER(gHttpHandler-\u003e) expand to? \nI assume NS_FORWARD_NSIHTTPPROTOCOLHANDLER is a macro, otherwise this cannot\ncompile.  \n\nIf idExpression returns a null object, you should throw backtrack instead. \nAlso, pls update the C parser to do the same. ",
    "Last comment was intended for Devin, who is not on the CC list.",
    "That is the problem.\n\nNS_FORWARD_NSIHTTPPROTOCOLHANDLER is not defined and the code does not \ncompile.  The code only compiles in Linux because it requires the intermediate \nobject directory (and code) to be created in order for this macro to properly \nbe defined.\n\nDo you still prefer that a backtrack is thrown?  I don\u0027t think there\u0027s a proper \nway to parse this code since it is bad grammar.  I thought that having a null \nin the AST would be the best way to handle this case.\n",
    "I prefer the backtrack.  It will lead to an syntax IASTProblem, which then can\nbe tagged and fixed @ a later date. ",
    "Created an attachment (id\u003d24359)\nupdated fix for this PR to use backtrack\n\nNote: The NPE Vlad raised doesn\u0027t seem to apply to the C parser because it just\nthrows the original backtrack instead of trying to create a new one like the\nCPP parser does.\n",
    "Patch applied.  Thanks!"
  ],
  "commentCreationDates": [
    "2005-06-15T19:56:42+02:00",
    "2005-07-04T16:18:20+02:00",
    "2005-07-04T17:26:24+02:00",
    "2005-07-04T17:39:55+02:00",
    "2005-07-04T17:44:30+02:00",
    "2005-07-04T20:59:25+02:00",
    "2005-07-04T20:59:53+02:00",
    "2005-07-05T15:42:21+02:00",
    "2005-07-05T17:53:25+02:00",
    "2005-07-05T19:50:37+02:00",
    "2005-07-05T19:51:05+02:00",
    "2005-07-05T20:01:20+02:00",
    "2005-07-05T20:03:17+02:00",
    "2005-07-05T20:43:30+02:00",
    "2005-07-05T20:52:33+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.calculateEndOffset",
          "source": "AbstractGNUSourceCodeParser.java:182"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.postfixExpression",
          "source": "GNUCPPSourceParser.java:1627"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.unaryExpression",
          "source": "GNUCPPSourceParser.java:1357"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.castExpression",
          "source": "GNUCPPSourceParser.java:937"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.pmExpression",
          "source": "GNUCPPSourceParser.java:869"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.multiplicativeExpression",
          "source": "GNUCPPSourceParser.java:832"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.additiveExpression",
          "source": "AbstractGNUSourceCodeParser.java:836"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.shiftExpression",
          "source": "AbstractGNUSourceCodeParser.java:811"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.relationalExpression",
          "source": "GNUCPPSourceParser.java:760"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.equalityExpression",
          "source": "AbstractGNUSourceCodeParser.java:765"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.andExpression",
          "source": "AbstractGNUSourceCodeParser.java:748"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.exclusiveOrExpression",
          "source": "AbstractGNUSourceCodeParser.java:730"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.inclusiveOrExpression",
          "source": "AbstractGNUSourceCodeParser.java:713"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.logicalAndExpression",
          "source": "AbstractGNUSourceCodeParser.java:696"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.logicalOrExpression",
          "source": "AbstractGNUSourceCodeParser.java:679"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.conditionalExpression",
          "source": "AbstractGNUSourceCodeParser.java:862"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.assignmentExpression",
          "source": "GNUCPPSourceParser.java:685"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.expression",
          "source": "AbstractGNUSourceCodeParser.java:602"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declarator",
          "source": "GNUCPPSourceParser.java:3843"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.initDeclarator",
          "source": "GNUCPPSourceParser.java:3644"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.initDeclarator",
          "source": "GNUCPPSourceParser.java:3626"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.lookAheadForDeclarator",
          "source": "AbstractGNUSourceCodeParser.java:1072"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declSpecifierSeq",
          "source": "GNUCPPSourceParser.java:3352"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclaration",
          "source": "GNUCPPSourceParser.java:2840"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclarationStrategyUnion",
          "source": "GNUCPPSourceParser.java:2462"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declaration",
          "source": "GNUCPPSourceParser.java:2452"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.classSpecifier",
          "source": "GNUCPPSourceParser.java:4278"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declSpecifierSeq",
          "source": "GNUCPPSourceParser.java:3409"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclaration",
          "source": "GNUCPPSourceParser.java:2840"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.simpleDeclarationStrategyUnion",
          "source": "GNUCPPSourceParser.java:2462"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.declaration",
          "source": "GNUCPPSourceParser.java:2452"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.cpp.GNUCPPSourceParser.translationUnit",
          "source": "GNUCPPSourceParser.java:4593"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.parser.AbstractGNUSourceCodeParser.parse",
          "source": "AbstractGNUSourceCodeParser.java:405"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.InternalASTServiceProvider.getTranslationUnit",
          "source": "InternalASTServiceProvider.java:168"
        },
        {
          "method": "org.eclipse.cdt.internal.core.dom.InternalASTServiceProvider.getTranslationUnit",
          "source": "InternalASTServiceProvider.java:78"
        },
        {
          "method": "org.eclipse.cdt.core.dom.CDOM.getTranslationUnit",
          "source": "CDOM.java:130"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.DOMSourceIndexerRunner.indexFile",
          "source": "DOMSourceIndexerRunner.java:116"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.AbstractIndexerRunner.index",
          "source": "AbstractIndexerRunner.java:76"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.cindexstorage.Index.add",
          "source": "Index.java:110"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddCompilationUnitToIndex.indexDocument",
          "source": "DOMAddCompilationUnitToIndex.java:29"
        },
        {
          "method": "org.eclipse.cdt.internal.core.index.domsourceindexer.DOMAddFileToIndex.execute",
          "source": "DOMAddFileToIndex.java:60"
        },
        {
          "method": "org.eclipse.cdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:466"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "100248",
      "date": "2005-07-04T17:26:24+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "normal"
    }
  ],
  "groupId": "100248",
  "bugId": "100248",
  "date": "2005-06-15T19:56:42+02:00",
  "product": "CDT",
  "component": "CDT-parser",
  "severity": "normal"
}