{
  "comments": [
    "I have a case where a variable in my workspace shows zero for\n\"references in workspace\".  Whis is obviously incorrect.  For\nexample, \"references in file\" finds 40+ entries.\n\nI tried cleaning the workspace.  No effect.  The project\nbuilds and runs without error. There is no crash data, \nor other apparent indication that the reported count of zero \nmay be incorrect.\n\nI would like to know how to clear this condition, if it is \ncaused by a corrupt cache or something of the sort, but the\nalarming circumstance is that the count is wrong at all.",
    "Created an attachment (id\u003d26819)\nsupporting screen shot\n\nthe counts can also be incorrect in less obvious ways.\nHere, I have a case where the count of references is\nreported as 4.\tIf I add an X to the variable declaration,\nwhich forced all the references to generate errors, there\nare 9 or them.\t If I retype the varaible name the errors\ngo away, and the reference count returns to 4.\tAll without\nany indication that eclispse is having any problem.",
    "Created an attachment (id\u003d26820)\npart 2, the other state of the variable/reference count.\n",
    "Works for me. Please provide the code or a test case that shows the behavior.\nSee also:\nhttp://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm",
    "well, it \"usually\" works for me too, just this particular case\nseems to be incorrect.  \n\nI have the entire workspace saved, which probably would let you reproduce \nthe problem, but it\u0027s 60 mb (due to history bloat, see one of my other bug\nreports).\n\nI suspect it must be due to a damaged cache somewhere.  Perhaps if you told\nme where to look, I could figure out what\u0027s damaged.   The problem is presumably\nnot that this particular cache is corrupted (all caches will eventually\nbe corrupted - shit happens), but that the corrupt cache is not being \ndetected as corrupt or cleared by operations such as \"clean\" on the project.\n\nBTW, this is not simply cosmetic - other operations such as refactor/rename\nseem to depend on it too, and if I\u0027m surveying the use of a variable, I need\nto be able to TRUST operations such as \"show references\", or I\u0027d be better\noff going back to using text searches.\n",
    "\u003eI suspect it must be due to a damaged cache somewhere\nExit the workbench and delete the Java search index:\n- go into \u003cworkspaceDir\u003e\\plugins\\.metadata\\.plugins\\org.eclipse.jdt.core\n- delete \u0027savedIndexNames.txt\u0027\n- delete all *.index\nRestart\n",
    "Dave,\n\nan isolated test case would be really helpful here. Without it it will be very\nhard to track this down.\n\nMoving to JDT/Core since this is Java search.",
    "Unfortunately your screenshots do not help us a lot.\nTry to reproduce in your workspace using a *very* small test case. Ideal would\nbe to have this test case in a brand new project but if you cannot reproduce it,\nthen at least we need:\n1) build ID\n2) class where you\u0027re expecting to find match(es) and search fails them\n3) how do you launch the search (search dialog/menu item)\n4) the precise kind of search you performed (type/field/method, scope, case\nsensitive, etc.)\nThanks",
    "deleting the \"savednames\" and *.index does fix the problem.\n\nI\u0027ve managed to prune my damaged workspace down to \"only\" 10 mb.\nI can provide that if you\u0027ll designate where to upload it.\n\nI hope you\u0027re thinking about defense in depth here.  Whatever\nthe nature of the corruption, it should be detected automatically,\nor lacking that, cleaned up as part of some automatic process \"just\nin case\".  And of course, the cache shouldn\u0027t become corrupt\nin the first place, but reality is that all caches will eventually\nbe corrupted.",
    "\nadditional good news, my small 10mb test case also fails when transferred\nto a new machine I am setting up.  This new machine is at present completely\nvirgin, so I\u0027m fairly confident you will be able to see the problem in your\nenvironment.",
    "We do not have any public FTP server site. The only way for me to get your\nworkspace would be that you put it somewhere I can download it...\n",
    "Maybe I am wrong regarding the scope of \"references in workspace\" but I have\nanother problem with this search functionality:\n\nI have a project \"A\" which creates some objects by reflection (and references\nthe appropriate projects providing the needed classes).\n\nSince I know the class name I inserted it into project \"B\" and tried \"references\nin workspace\" which gives me the error:\nThe operationis unavailable to the current collection. Please select a valid\nelement name.\n\nI didn\u0027t expected the class to work since I didn\u0027t reference the project\nproviding it, but I expected the search functionality to lead me to the required\nproject in the workspace.\n\nHowever if I use the \"Java search\" and search for the same class name it returns\nthe correct class/project.",
    "(In reply to comment #11)\nVictor,\nDo NOT use a bug to ask question about eclipse even if subject are similar\n(which is not the case here...). You\u0027re polluting the bug tracking and slows its\nfixing...\nTo ask question, please use newgroup instead:\nnews://news.eclipse.org/eclipse.tools.jdt",
    "please provide an email address where I can send you the link\nto the test case privately.  (I don\u0027t want to post my source code publicly.)",
    "(In reply to comment #12)\nSorry for the spam. Since I am not familiar with the code I thought it might be\nrelated because the seemingly same search gives two different results in my case.",
    "frederic_fusier@fr.ibm.com\nFYI, you can see email address of bug assignee in bug \"Assigned To\" field.\n",
    "I successfully got your workspace and I can now reproduce your issue.\nThanks\n",
    "Didn\u0027t you have any .log file in your original workspace (ie. in\nG:\\share\\projects\\eclipse directory)? If so, would it be possible to attach it\nto this bug or send it to me?\nProblem comes from incorrect index and I hope we can find in log file the reason\nof this failure (indexing should have log if it failed while indexing a project).\nThx\n",
    "I also still need build ID on which this problem occurs...\n",
    "(In reply to comment #18)\n\u003e I also still need build ID on which this problem occurs...\n\u003e \nVersion: 3.1.0\nBuild id: I20050627-1435\n\n",
    "I\u0027m seeing this behavior, too.  Looks like the all reference searches fail, even for methods referred to within the java file (but \"Occurrences in File\" search works).  Deleting the metadata files (comment #5) doesn\u0027t help. Version 3.1.2.\n\n",
    "(In reply to comment #20)\n\u003e I\u0027m seeing this behavior, too.  Looks like the all reference searches fail,\n\u003e even for methods referred to within the java file (but \"Occurrences in File\"\n\u003e search works).  Deleting the metadata files (comment #5) doesn\u0027t help. Version\n\u003e 3.1.2.\n\u003e \nIf deleting the metadata files doesn\u0027t help, then I assume this is not the same problem. Please describe it more precisely, also try to reproduce in a brand new wkps and/or in a new project and then we can see if it\u0027s the same or if you need to open a new bug report, thanks\n",
    "I observed the same \"references in workspace\" invalid results here, but that was not the only issue. My class hierarchy was also corrupted as well (some subclasses were missing). Cleaning the workspace or modifying the referencing/referenced code did not help, but deleting the cache files fixed everything.\n\nIt looks like to me that for some reason the index becomes incomplete and stays that way (forcing a new compilation of the implicated code surprisingly does not refresh the missing parts).",
    "(In reply to comment #22)\n...\n\u003e It looks like to me that for some reason the index becomes incomplete and stays\n\u003e that way (forcing a new compilation of the implicated code surprisingly does\n\u003e not refresh the missing parts).\n\u003e \nYou\u0027re right and attach your .log file to this bug will perhaps help us to understand what happened to put indexing in this unexpected state...\n",
    "If you look back to comment #16, you will see that I provided a\ntest case showing the corrupted state approximately 6 months ago.\n\nI\u0027m repeating myself, but \"shit happens\".  Any caching scheme man\ncan devise will eventually be corrupted by some accident. Aside \nfrom the desirablily of avoiding this as much as possible, SOME\nroutine operation ought to detect and clean up the problem.  \nCLEAN is an excellent candidate IMO.\n",
    "(In reply to comment #24)\n\u003e If you look back to comment #16, you will see that I provided a\n\u003e test case showing the corrupted state approximately 6 months ago.\n\u003e \nAnd if you look back to my answer in comment 17, you\u0027ll see that even if I was able to reproduce your problem I was not able to find any .log file to have a chance to figure out what happened in the indexes...\n\n\u003e I\u0027m repeating myself, but \"shit happens\".  Any caching scheme man\n\u003e can devise will eventually be corrupted by some accident. Aside \n\u003e from the desirablily of avoiding this as much as possible, SOME\n\u003e routine operation ought to detect and clean up the problem.  \n\u003e CLEAN is an excellent candidate IMO.\n\u003e \nI agree but it would be better to know what was the origin of the problem. That\u0027s while I\u0027m asking for a .log file when this problem is noticed. It\u0027s not sure but it may provide us more information to understand what was the crash during the indexing operation and have a chance to avoid it in the future...\n",
    "I have made a few other observations and found a possible workaround which make me think that the issue is more tricky.\n\nI was facing the issue recurently since my last comment. I have deleted the index files several times and although the index looked fine after restarting Eclipse, it very quickly became corrupted/incomplete again after some use of Eclipse.\n\nI have then noticed that deleting the index files was even not needed, simply restarting Eclipse restored the index as well. It looks like the index gets corrupted in memory rather that on the disk (or at least in a greater way).\n\nAs I have only observed the issue with big projects, it felt like a memory shortage to me... I tried to increase Eclipse memory, and my index has looked complete ever since.\n\nAnyway, my .log file remains desperately empty. Wether the JVM runs out of memory or the cause is different, nothing is logged.\n",
    "That\u0027s a good point. I looked at code and indeed, IndexManager will fail silently on OOME... :-(\nDave, may you give a try with an higher Xmx value and let me know if this fix the problem?\nIf so, then I think I\u0027ll add a trace for this kind of failure during indexing...\n",
    "Ooops, JobManager already do trace OOME, so either due to OOME, it cannot write in .log file or as Julien said, the cause is different.\nBy the way, I\u0027m still interested to know whether increase the Java Heap size fixes the problem for you Dave. This may give a clue to know whether it\u0027s a possible memory issue or not...\n",
    "I\u0027m not actively experiencing this problem, but I did increase memory\nat some point because of heavy graphics demands.  However nice it might\nbe to log \"out of memory\", it hardly seems appropriate to ignore it and\npush on without memory.  Other bad things seem likely to occur.\n\n",
    "We do not keep silent on exception, comment 27 was wrong... As I (quickly) said in comment 28, we currently log OutOfMemoryException (in fact JobManager, which is the super class of IndexManager, logs all exception when possible).\nWe do want to know when shit happens and this is what I try to do... However, we also need test cases to reproduce problems to have a chance to understand and fix them. Currently, without any other information, it\u0027s hard to track the origin of your problem.\nIt seems that increasing the Java Heap size makes it disappearing, so I would think about a non-logged OOME, but it\u0027s just a feeling not something I\u0027m 100% sure...\nWe\u0027re currently working to increase performances and I\u0027m specifically looking at memory consumption during search/indexing. I\u0027ll let you know if I have some feedback about my investigations on this...\n",
    "I was wrong. Increasing the heap size finally did not solve the problem (for information, I stepped from 256Mo to 512Mo). For some reason or unless it was only a coincidence, the \"disease\" was slowed down, but the index eventually became corrupted in memory again.\n\nI\u0027m currently trying another approach to check wether some workspace disorder triggers the whole thing or not. I have created a fresh workspace and imported preferences and projects from the old one. I gave it a little more time than my last attempt, and so far so good. I will keep you informed about my progress.\n\nI also noticed that I was running running Eclipse 3.1.1 back from Eclipse 3.1.2. I installed and tried 3.1.2 but forgot to update some key shortcut... The documentation clearly states that workspaces may become incompatible with previous Eclipse releases. The issue is older than 3.1.2, but that may be another lead.",
    "I had the same kind of problems, that is, doing a reference search on a method would miss occurences I could find by renaming the method and looking in the problems pane, or the type hierarchy would lack some classes. I found this entry in the log:\n\n!ENTRY org.eclipse.jdt.core 4 4 2006-05-11 13:49:29.125\n!MESSAGE Background Indexer Crash Recovery\n!STACK 0\njava.lang.NoClassDefFoundError: org/eclipse/jst/jsp/core/internal/Logger\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.getELTranslator(JSPTranslator.java:1315)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateEL(JSPTranslator.java:1268)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateEmbeddedJSPInAttribute(JSPTranslator.java:1391)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.checkAllAttributeValueContainers(JSPTranslator.java:1107)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateXMLNode(JSPTranslator.java:1080)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateRegionContainer(JSPTranslator.java:843)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translate(JSPTranslator.java:734)\n\tat org.eclipse.jst.jsp.core.internal.java.JSPTranslationAdapter.getJSPTranslation(JSPTranslationAdapter.java:131)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getJSPTranslation(JSPSearchDocument.java:112)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getCharContents(JSPSearchDocument.java:74)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JavaSearchDocumentDelegate.getCharContents(JavaSearchDocumentDelegate.java:41)\n\tat org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument(SourceIndexer.java:73)\n\tat org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(JavaSearchParticipant.java:72)\n\tat org.eclipse.jst.jsp.core.internal.java.search.JSPSearchParticipant.indexDocument(JSPSearchParticipant.java:73)\n\tat org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(IndexManager.java:290)\n\tat org.eclipse.jdt.internal.core.search.indexing.IndexManager$1.execute(IndexManager.java:601)\n\tat org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:372)\n\tat java.lang.Thread.run(Thread.java:595)\n\nI\u0027m not sure why it doesn\u0027t find this class, I do have a jar with it:  eclipse/plugins/org.eclipse.jst.jsp.core_1.0.1.v2006021502002350.jar. I\u0027m using eclipse 3.1.2, Build id: M20060118-1600, and the web eclipse tools 1.0.2 (it might have been 1.0.1 at that time).\n\nI think this happened after I did the following:\n- I deleted a project, say P\n- created some new ones, each including only a sub-directory of project P\n\nDeleting the indexes like mentioned in comment 5 solved the problem (thanks for the steps !).\n\nJust in case this might help.\n",
    "I have a project with the order of 1M java files and I have a way to reliably reproduce this: Sync from version control outside eclipse, refresh project (select project in package explorer and F5 or context menu-\u003eRefresh), build, run, everything is fine. Then search for a class Ctrl-Shift-T, start typing a class name. Sometimes I can see a message saying \"indexing xx%\". If I pick a class before this is done the indexes get corrupted and I cannot find classes or references (not all, just some). Deleting the .index files as suggested in this bug seems to fix the problem.\n"
  ],
  "commentCreationDates": [
    "2005-09-03T22:44:10+02:00",
    "2005-09-03T23:23:44+02:00",
    "2005-09-03T23:24:58+02:00",
    "2005-09-05T10:07:21+02:00",
    "2005-09-05T10:30:14+02:00",
    "2005-09-05T10:47:27+02:00",
    "2005-09-05T10:52:17+02:00",
    "2005-09-05T11:24:54+02:00",
    "2005-09-05T21:00:06+02:00",
    "2005-09-05T21:02:56+02:00",
    "2005-09-06T15:14:11+02:00",
    "2005-09-06T16:34:28+02:00",
    "2005-09-06T17:45:57+02:00",
    "2005-09-06T19:28:17+02:00",
    "2005-09-07T00:53:45+02:00",
    "2005-09-07T08:00:16+02:00",
    "2005-09-07T10:35:59+02:00",
    "2005-09-07T10:56:34+02:00",
    "2005-09-07T10:57:12+02:00",
    "2005-09-16T21:11:19+02:00",
    "2006-03-06T21:36:09+01:00",
    "2006-03-07T07:39:07+01:00",
    "2006-03-09T10:55:55+01:00",
    "2006-03-09T11:11:46+01:00",
    "2006-03-09T17:19:29+01:00",
    "2006-03-10T08:12:48+01:00",
    "2006-03-10T15:13:21+01:00",
    "2006-03-10T17:53:20+01:00",
    "2006-03-10T18:00:31+01:00",
    "2006-03-10T19:11:20+01:00",
    "2006-03-13T09:42:47+01:00",
    "2006-03-15T09:19:14+01:00",
    "2006-05-26T17:11:07+02:00",
    "2007-11-14T19:47:16+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org/eclipse/jst/jsp/core/internal/Logger",
      "elements": [
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.getELTranslator",
          "source": "JSPTranslator.java:1315"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateEL",
          "source": "JSPTranslator.java:1268"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateEmbeddedJSPInAttribute",
          "source": "JSPTranslator.java:1391"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.checkAllAttributeValueContainers",
          "source": "JSPTranslator.java:1107"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateXMLNode",
          "source": "JSPTranslator.java:1080"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translateRegionContainer",
          "source": "JSPTranslator.java:843"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslator.translate",
          "source": "JSPTranslator.java:734"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.JSPTranslationAdapter.getJSPTranslation",
          "source": "JSPTranslationAdapter.java:131"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getJSPTranslation",
          "source": "JSPSearchDocument.java:112"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchDocument.getCharContents",
          "source": "JSPSearchDocument.java:74"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JavaSearchDocumentDelegate.getCharContents",
          "source": "JavaSearchDocumentDelegate.java:41"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexDocument",
          "source": "SourceIndexer.java:73"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument",
          "source": "JavaSearchParticipant.java:72"
        },
        {
          "method": "org.eclipse.jst.jsp.core.internal.java.search.JSPSearchParticipant.indexDocument",
          "source": "JSPSearchParticipant.java:73"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument",
          "source": "IndexManager.java:290"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.indexing.IndexManager$1.execute",
          "source": "IndexManager.java:601"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:372"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:595"
        }
      ],
      "number": 0,
      "commentIndex": 32,
      "bugId": "108749",
      "date": "2006-05-26T17:11:07+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "108749",
  "bugId": "108749",
  "date": "2005-09-03T22:44:10+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}