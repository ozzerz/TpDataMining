{
  "comments": [
    "When load-time concretizing and weaving an aspect, which uses a cflow pointcut, you get a strack trace like this:\n\n...\n[AppClassLoader@92e78c] debug weaving \u0027junit.framework.TestSuite\u0027\nException in thread \"main\" java.lang.NoSuchFieldError: ajc$cflowCounter$0\n        at junit.framework.TestSuite.\u003cinit\u003e(TestSuite.java:49)\n        at junit.textui.TestRunner.run(TestRunner.java:186)\n        at Main.main(Main.java:14)\n\nIf you remove the cflow pointcut from the abstract aspect, all works fine.\n\nThis shows, that run time pointcuts do not work well with load-time weaving.\n\nIf it must not be possible to load-time weave aspects, then please throw an exception saying exactly this.\n\nOn the other hand, if this should be possible, then please enable it.\n\nThe bug #149096, from which this one was cloned, still remains effective on AspectJ 1.5.3, although marked as resolved.\n\nIt is not a duplicate of bug #132080, as indicated in some comment!\n\n\n+++ This bug was initially created as a clone of Bug #149096 +++\n\nWhen attempting to perform load time weaving of a concrete aspect defined in an aop.xml file, I get the following stack trace:\n\nException in thread \"main\" java.lang.NoSuchFieldError: ajc$cflowCounter$0\n        at TestMain.main(TestMain.aj:8)\n\nThe concrete aspect extends an abstract aspect that defines a cflow pointcut.",
    "Created an attachment (id\u003d66637)\nZIP-file to be expanded on Windows; then follow the README.txt for reproducing the bug.\n\nExpand this ZIP file, go into the directory aspectjCflowBug, follow the instructions in README.txt, run the run.bat and see the bug.\n\nRemove the cflow-pointcut, run it again, and see the correct behaviour.",
    "i think another bug is also open for this problem, need to double check.",
    "As per my comment in 149096:\n\n---\nI think this is the same as bug 132080.  It occurs because LTW concrete-aspect\ndefinitions are not exposed to the weaver.  If they aren\u0027t exposed, they don\u0027t\nget the necessary cflow field.  (there are no doubt a large family of errors in\nthis area...)\n---\n\nThat is exactly what is happening here - but for slightly different reasons than were fixed in 132080.  The fix under 132080 enabled these generated files to be seen at all by the weaver.  But that fix did not allow for the fact that a user might inadvertently exclude these generated types from being woven by their use of the include/exclude clauses in the weaver options section of their aop.xml.  Your aop.xml says:\n\n    \u003cweaver options\u003d\"-verbose -debug\"\u003e\n    \n      \u003c!-- Weave types that are within the junit packages. --\u003e\n      \u003cinclude within\u003d\"junit..*\"/\u003e\n\n    \u003c/weaver\u003e\n\nAnd unfortunately that means we do not weave aspects.MyLogging - the generated class based on your concrete aspect definition.  And so the cflow field is not added.  This variant of the weaver options works fine:\n\n    \u003cweaver options\u003d\"-verbose -debug\"\u003e    \n      \u003c!-- Weave types that are within the junit packages. --\u003e\n      \u003cinclude within\u003d\"junit..*\"/\u003e\n      \u003cinclude within\u003d\"aspects..*\"/\u003e\n    \u003c/weaver\u003e\n\nI am currently trying to evaluate whether it should be implicit that the generated artifacts are included in the weave or whether a better error message saying \u0027dont exclude generated aspects\u0027 would be better.  I\u0027d favour the former option but it will mean the generated classes will be affected by other aspects around in the system, I need to think through some scenarios and look at the complexity of the generated classes to see if that will prove a problem in practice.\n\n"
  ],
  "commentCreationDates": [
    "2007-05-10T11:12:05+02:00",
    "2007-05-10T11:18:23+02:00",
    "2007-10-26T13:13:28+02:00",
    "2007-11-06T17:08:20+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "ajc$cflowCounter$0",
      "elements": [
        {
          "method": "junit.framework.TestSuite.\u003cinit\u003e",
          "source": "TestSuite.java:49"
        },
        {
          "method": "junit.textui.TestRunner.run",
          "source": "TestRunner.java:186"
        },
        {
          "method": "Main.main",
          "source": "Main.java:14"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "186322",
      "date": "2007-05-10T11:12:05+02:00",
      "product": "AspectJ",
      "component": "LTWeaving",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "ajc$cflowCounter$0",
      "elements": [
        {
          "method": "TestMain.main",
          "source": "TestMain.aj:8"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "186322",
      "date": "2007-05-10T11:12:05+02:00",
      "product": "AspectJ",
      "component": "LTWeaving",
      "severity": "major"
    }
  ],
  "groupId": "186322",
  "bugId": "186322",
  "date": "2007-05-10T11:12:05+02:00",
  "product": "AspectJ",
  "component": "LTWeaving",
  "severity": "major"
}