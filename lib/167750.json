{
  "comments": [
    "Build ID: M20060921-0945\n\nSteps To Reproduce:\n1. Sometimes occurs on the first code completion after Eclipse startup, sometimes after few hours of work.\n\nFirst occured yesterday without any apparent reason\n\n\n\n\nMore information:\nI have workspace 12 projects, most of them are relatevely small and only 5 of them are open (all small, up to 25 classes). 2 of them are dynamic Web projects, others plain Java projects. Starting from yesterday evening without any apparent reason (no Eclipse updates, no big changes in projects, no environment chages) Eclipse started to expirience StackOverflow quite regularly, sometimes directly after startup (on first Ctrl-Space in Java editor).\nCleaning of projects seems to help for a while.\n\nToday I have installed latest available updates - no change in behavior.",
    "Please attach the full .log.\nHow much memory do you give Eclipse?\n\n\u003e2 of them are dynamic Web projects\nHow do you work with them? I assume you installed some additional plug-ins on top of Eclipse SDK. What? Callisto? WTP? Something else?",
    "Hello,\nMemory -xmx512m,\n\nPlugins - yes it is Callisto distribution (WTP,DTP, BIRT) and SpringIDE.\n\nRegards,\nOleksandr Alesinskyy\n\n",
    "How do you specify the memory?\nIs it in the pure Java Editor or some other Editor where you see the problem (e.g. JSP editor?\nCan you reproduce with just Eclipse SDK?\n",
    "Please leave on REMIND until all information is provided. We can\u0027t do anything until then.",
    "Memory is specified in eclipse.ini, the whole ini follows:\n\n-vmargs -XX:MaxPermSize\u003d160m\n-Xms40m\n-Xmx512m\n\n\nCommand-line specifies only path to JVM (jrockit-R26.4.0-jdk1.5.0_06). I can not use Sun JDK due to PermGen problem (Bug 92250).\n\nYes, it is pure Java editor, projects contain  only pure Java and a litle bit of XML (web.xml and Spring context files), no JSP etc. And only Java editors are open (in Java perspective).\n\nI have not seen this problem with Eclipse SDK only.\n\nSome more remarks - proplems occurs (as far as I can see) only on name completion (e.g. if I have \"someVariable\" and type \"someV\" and then Ctrl-Space),\nmethod proposal etc. do not cause problem. \n\nMoreover, if problem occurs it persists after Eclipse restart (or event computer reboot) if I try to continue from the same name completion. If I comment this line, perform some other editing (semms it does not matter which), then remove comments and try the same name completion it works successfully.\n",
    "Memory is specified in eclipse.ini, the whole ini follows:\n\n-vmargs -XX:MaxPermSize\u003d160m\n-Xms40m\n-Xmx512m\n\n\nCommand-line specifies only path to JVM (jrockit-R26.4.0-jdk1.5.0_06). I can\nnot use Sun JDK due to PermGen problem (Bug 92250).\n\nYes, it is pure Java editor, projects contain  only pure Java and a litle bit\nof XML (web.xml and Spring context files), no JSP etc. And only Java editors\nare open (in Java perspective).\n\nI have not seen this problem with Eclipse SDK only.\n\nSome more remarks - proplems occurs (as far as I can see) only on name\ncompletion (e.g. if I have \"someVariable\" and type \"someV\" and then\nCtrl-Space),\nmethod proposal etc. do not cause problem. \n\nMoreover, if problem occurs it persists after Eclipse restart (or event\ncomputer reboot) if I try to continue from the same name completion. If I\ncomment this line, perform some other editing (semms it does not matter which),\nthen remove comments and try the same name completion it works successfully.\n",
    "\u003eI have not seen this problem with Eclipse SDK only.\nOK, try this: take a look at the advanced code assist page and compare it with your install. Is there some additinal proposal kind available and/or enabled compared to plain Eclipse SDK?\n\nCan you try to get hold on the stack trace?",
    "No, there is no difference if available/enabled proposals and they are in the same order, timeout is the same (50).\n\nConcerning the stack trace - it appears not each time (I run Eclipse not with javaw, but with java, so I see console window). One time I have catched stack trace, but forgot to save it from clipboard :( On other occurencies no stack trace has appeared in console window (only message box similar to \"StackOverflow, do you like to exit workbench? .....\" and after Ok Elipse closes without stck trace.",
    "What\u0027s in Isn\u0027t the exception in the .log file?",
    "Thak you, have not known about this file.\n\n----------------------------------------------------\n!ENTRY org.eclipse.ui 4 0 2006-12-13 00:31:31.231\n!MESSAGE java.lang.StackOverflowError\n!STACK 0\njava.lang.StackOverflowError\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:380)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n        at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType(LookupEnvironment.java:387)\n\n----------------------------------",
    ".",
    "Moving to JDT Core. Looks like the problem is located there.",
    "I cannot reproduce the bug or found where is the problem with the stack trace of comment 10.\n\nCould you attach to this bug report the .log file ?\nCould you give a test case or the source file which cause the exception ?",
    "Created an attachment (id\u003d55581)\n.log for StackOverflow\n\n",
    "Created an attachment (id\u003d55582)\nOffending Java file\n\n",
    "So I have attache .log and java-file on which this error has occured most often, but I\u0027m not sure if this file will be of great use as problem is unstable - comes and gone and even minor tweaking of source resolves it (for some time). And I completely understand that such unstable problems are the worst ones to fix.\n\nRegards,\nOleksandr",
    "Also see bug 167811",
    "I am unable to reproduce the problem.\n\nWhere do you perform code assist in the given file when the problem occur ?\nDo you reproduce the bug with another VM ? (sun or ibm)",
    "In different places, normally, inside of one of action listeners. Problem is unstable as I have mentioned. I have switched to IBM JVM already and would see if there will be new cases. Sun JVM I can not use due to Bug 92250.",
    "It as well occurs with IBM JVM. Offending file is attachedalong with .log",
    "Created an attachment (id\u003d55731)\nOffending Java file\n\nErrors occurs as well on IBM JVM, ofendingJava file along with .log are attached. Ctrl-Space at line 220 col 20 causes StackOverflow.",
    "Created an attachment (id\u003d55732)\n.log\n\n",
    "Oops - mistyping, shall be line 270, column 20",
    "Would it be possible to attach the whole project or provide a test case that we can use? The attached file won\u0027t help because too much is missing.",
    "Hello,\n\nit seems that test case is almost impossible to produce - after I have completed that variable name myself I am able to continue with this project normally and code completion works in other places in the same file, even in the same method (till it will die next time).\n\nThe whole project I just has no right to send - I will be immediately fired.\n\nRegards,\nOleksandr",
    "I can reproduce a stackoverflow with your file.\n\nHere is a smaller test case:\n\npackage p;\n\npublic class X {\n    public void start(String terminal) { \n        this.foo(new Object(){\n            public void bar() {\n\n                if (zzz\u003e(Integer)vvv.foo(i)) {\n                    return;\n                }\n                if (true) {\n                    return;\n                }\n                fch\n            }            \n\n        });\n    }\n}\n\n",
    "The stack overflow occurs in 3.2 but not in 3.3.",
    "Hello,\n\nmy congratulations! But your test case differs in one significant aspect - it\nhas a lot of bugs (undefined variables), while in my situation before typing an\n\"fch\" file was error-free (may be some warnings, but I doubt it). Do not know,\nif it matter.\n\nJust have read your comment about 3.3. As far as I understand 3.3 is still under development?\n\nBTW, these StackOverflow crashes have one nasty side-effect - if at the moment\nof StackOverflow project was running on Tomcat inside Eclipse, then almost each\ntime WTP plugin works incorrectly (after Eclipse restart), namely,\npublishing to server is affected, project becomes published to WebApplication\ndirectory in workspace (.metadata\\.plugins\\...) only partially (class files are\ncopied properly, libraries sometimes yes and sometimes no and web.xml is not\ncopied. XML and properties files that live in root of source directory are\ncopied selectively (differently each time). As result manuyl repair is\nrequired.\n\nIs it worth it in your opinion to open separate bug report for WTP?\n\nRegards,\nOleksandr\n",
    "This is a problem of syntax error recovery specific to completion. So unresolved variable doesn\u0027t interact with the bug.\n\n3.3 is still under development and the problem is fixed by the fix for bug 164311.\nThe problem in 3.2 is another symptom of the problem fixed by the fix for bug 164311.",
    "Given similar issue as bug 164311 addressed in 3.3 stream, +1 to backport the fix for 3.2.2.",
    "Sorry, I do not understand what means \"+1 to backport the\nfix for 3.2.2.\"",
    "That means that we want to add the fix in 3.2 maintenance stream even if it\u0027s already fixed in the current development stream which is 3.3.",
    "Thank you very much for explanation, I\u0027m eagirely looking forward for this fix.\n\nRegards,\nOleksandr",
    "Created an attachment (id\u003d55756)\nProposed fix for 3.2.2\n\n",
    "Fix released for 3.2.2.\n\nTest added\n  CompletionTest#testBug164311_2()\n\nOleksandr - When the next 3.2 Maintenance build will available, could you verify that your problem is gone ?",
    "Added test CompletionTest#testBug164311_2() in 3.3.",
    "Gladly.",
    "Verified for 3.2.2 using build M20060112-1200.\n"
  ],
  "commentCreationDates": [
    "2006-12-12T22:01:18+01:00",
    "2006-12-13T08:19:57+01:00",
    "2006-12-13T08:54:36+01:00",
    "2006-12-13T09:02:43+01:00",
    "2006-12-13T09:07:47+01:00",
    "2006-12-13T09:21:09+01:00",
    "2006-12-13T09:21:32+01:00",
    "2006-12-13T09:25:40+01:00",
    "2006-12-13T09:46:01+01:00",
    "2006-12-13T10:11:53+01:00",
    "2006-12-13T10:21:46+01:00",
    "2006-12-13T10:28:34+01:00",
    "2006-12-13T10:30:10+01:00",
    "2006-12-13T13:24:43+01:00",
    "2006-12-13T13:53:04+01:00",
    "2006-12-13T13:54:27+01:00",
    "2006-12-13T13:57:32+01:00",
    "2006-12-13T15:12:10+01:00",
    "2006-12-13T15:44:47+01:00",
    "2006-12-13T15:49:54+01:00",
    "2006-12-15T00:20:11+01:00",
    "2006-12-15T00:27:58+01:00",
    "2006-12-15T00:29:16+01:00",
    "2006-12-15T00:36:04+01:00",
    "2006-12-15T09:06:18+01:00",
    "2006-12-15T09:26:36+01:00",
    "2006-12-15T09:40:07+01:00",
    "2006-12-15T09:42:07+01:00",
    "2006-12-15T09:49:46+01:00",
    "2006-12-15T12:04:47+01:00",
    "2006-12-15T12:05:32+01:00",
    "2006-12-15T12:15:29+01:00",
    "2006-12-15T12:28:54+01:00",
    "2006-12-15T12:36:33+01:00",
    "2006-12-15T14:08:47+01:00",
    "2006-12-15T14:15:28+01:00",
    "2006-12-15T14:16:00+01:00",
    "2006-12-15T22:20:47+01:00",
    "2007-01-16T10:27:57+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:380"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.convertToParameterizedType",
          "source": "LookupEnvironment.java:387"
        }
      ],
      "number": 0,
      "commentIndex": 10,
      "bugId": "167750",
      "date": "2006-12-13T10:21:46+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "major"
    }
  ],
  "groupId": "167750",
  "bugId": "167750",
  "date": "2006-12-12T22:01:18+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "major"
}