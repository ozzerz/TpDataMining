{
  "comments": [
    "Enhancement request in aspectjrt.jar:\n\nI am trying to use AspectJ to weave an aspect that uses a cflow pointcut into an\napplet. But the Sun Java Plug-In version 1.4.2_04 throws a security violation if\nan applet tries to construct a ThreadLocal. So I\u0027d like to be able to use the\nold cflow stack implementation. I get this exception:\n\nCaused by: java.security.AccessControlException: access denied\n(java.util.PropertyPermission aspectj.runtime.cflowstack.usethreadlocal read)\n\n\tat java.security.AccessControlContext.checkPermission(Unknown Source)\n\n\tat java.security.AccessController.checkPermission(Unknown Source)\n\n\tat java.lang.SecurityManager.checkPermission(Unknown Source)\n\n\tat java.lang.SecurityManager.checkPropertyAccess(Unknown Source)\n\n\tat java.lang.System.getProperty(Unknown Source)\n\n\tat\norg.aspectj.runtime.internal.CFlowStack.selectFactoryForVMVersion(CFlowStack.java:124)\n\n\tat org.aspectj.runtime.internal.CFlowStack.\u003cclinit\u003e(CFlowStack.java:59)\n\n\t... 33 more\n\nI can work around this problem by using aspectjrt.jar from AspectJ 1.1.1, but\nthink there ought to be some runtime flag to not use ThreadLocals...",
    "changed severity to \u0027enhancement\u0027.....",
    "Andy - doesn\u0027t your autodetect logic catch this case? If not we should either\nimprove the detection or if that\u0027s impossible, give a compiler option...",
    "Hmmmmmmmmmmmmm\n\nThe logic has been in place for a while to ensure the security exception isn\u0027t\nsurfaced when attempting to read the system property.  I\u0027m just a little unsure\nif it will behave exactly how you want.  If the system property cannot be read\nthen we check the version number of the class file - 46 or higher and we assume\nThreadLocal is available.  So, if the security exception is now hidden and yet\nit still attempts to utilise threadlocal, try compiling -target 1.1 to generate\nversion 45 class files.  that should cause it to avoid doing anything with\nThreadLocal.  I\u0027ve tried to recreate the problem here just using appletviewer\nbut can\u0027t seem to get the security policy right, whatever I try it successfully\naccesses the system property.\n\nIf you happen to know how to set my local policy such that an applet can\u0027t\naccess sys props then I\u0027ll look into it a little further...",
    "I think the support is there but can\u0027t test it.  If you can\u0027t try it soon Ron,\nI\u0027ll close this.",
    "Do you not see this issue in running an applet on a standard Java Plug-In? I \ndidn\u0027t do anything to configure it...\n\nHowever, this issue came up on a project that I\u0027m not working on any more, so I \ndon\u0027t have the environment to test it with myself.",
    "I couldnt seem to recreate with a standard applet - it is possible the \u0027detect\u0027\nlogic was enhanced after you originally hit the problem and before I attempted\nto recreate.",
    "Sounds plausible. Let\u0027s mark it as resolved and let someone reopen it if they \nfind the issue again.",
    "Thanks Ron - gets my numbers down ;) I\u0027m happy to work on this if it raises its\nhead again."
  ],
  "commentCreationDates": [
    "2004-08-02T22:56:45+02:00",
    "2004-08-06T14:35:04+02:00",
    "2005-03-22T14:14:28+01:00",
    "2005-09-28T13:20:12+02:00",
    "2005-10-27T12:38:37+02:00",
    "2005-10-27T15:03:44+02:00",
    "2005-10-27T15:26:14+02:00",
    "2005-10-27T15:32:48+02:00",
    "2005-10-27T15:58:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.security.AccessControlException",
      "message": "access denied (java.util.PropertyPermission aspectj.runtime.cflowstack.usethreadlocal read)",
      "elements": [
        {
          "method": "java.security.AccessControlContext.checkPermission",
          "source": "Unknown Source"
        },
        {
          "method": "java.security.AccessController.checkPermission",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.SecurityManager.checkPermission",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.SecurityManager.checkPropertyAccess",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.System.getProperty",
          "source": "Unknown Source"
        },
        {
          "method": "org.aspectj.runtime.internal.CFlowStack.selectFactoryForVMVersion",
          "source": "CFlowStack.java:124"
        },
        {
          "method": "org.aspectj.runtime.internal.CFlowStack.\u003cclinit\u003e",
          "source": "CFlowStack.java:59"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "71257",
      "date": "2004-08-02T22:56:45+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "enhancement"
    }
  ],
  "groupId": "71257",
  "bugId": "71257",
  "date": "2004-08-02T22:56:45+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "enhancement"
}