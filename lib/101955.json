{
  "comments": [
    "3.1RC4 (Build id: I20050624-1300)\n\nWhen trying to extract a method I get the error:\n\"An unexpected exception occurred during condition checking.\"\n\nUnfortunately I don\u0027t have a reproducible test case; the exception happens when\ntrying to extract a method out of one particular area of my code but not in\nother similar areas.\n\nfrom the error log:\n\njava.lang.reflect.InvocationTargetException\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:327)\n\tat\norg.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)\n\tat\norg.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:261)\n\tat org.eclipse.ui.internal.progress.ProgressManager$3.run(ProgressManager.java:861)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\n\tat\norg.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:895)\n\tat\norg.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile(ProgressManager.java:871)\n\tat\norg.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.checkInitialConditions(RefactoringWizardOpenOperation.java:150)\n\tat\norg.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.access$0(RefactoringWizardOpenOperation.java:146)\n\tat\norg.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:116)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)\n\tat\norg.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:138)\n\tat\norg.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)\n\tat org.eclipse.jdt.ui.actions.ExtractMethodAction.run(ExtractMethodAction.java:84)\n\tat\norg.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:226)\n\tat\norg.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:198)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:996)\n\tat org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:182)\n\tat\norg.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:108)\n\tat org.eclipse.core.commands.Command.execute(Command.java:311)\n\tat\norg.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:396)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:459)\n\tat org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:781)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:828)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:550)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:493)\n\tat\norg.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:117)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Display.filterEvent(Display.java:917)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:880)\n\tat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:876)\n\tat org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1475)\n\tat org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:3348)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3067)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:3706)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.jdt.internal.corext.dom.Bindings.equals(Bindings.java:88)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Matcher.match(SnippetFinder.java:107)\n\tat org.eclipse.jdt.core.dom.SimpleName.subtreeMatch0(SimpleName.java:140)\n\tat org.eclipse.jdt.core.dom.ASTNode.subtreeMatch(ASTNode.java:2315)\n\tat org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeMatch(ASTMatcher.java:138)\n\tat org.eclipse.jdt.core.dom.ASTMatcher.match(ASTMatcher.java:1386)\n\tat\norg.eclipse.jdt.core.dom.MethodInvocation.subtreeMatch0(MethodInvocation.java:229)\n\tat org.eclipse.jdt.core.dom.ASTNode.subtreeMatch(ASTNode.java:2315)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.matches(SnippetFinder.java:204)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.visitNode(SnippetFinder.java:191)\n\tat\norg.eclipse.jdt.internal.corext.dom.GenericVisitor.visit(GenericVisitor.java:142)\n\tat org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:236)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat\norg.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:224)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat\norg.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:272)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:189)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:189)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:135)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2497)\n\tat org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:501)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2520)\n\tat org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:483)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2450)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.perform(SnippetFinder.java:138)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.initializeDuplicates(ExtractMethodRefactoring.java:581)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.checkInitialConditions(ExtractMethodRefactoring.java:247)\n\tat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)\n\tat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",
    "In SnippetFinder.java line 107 we call\nBindings.equals(IVariableBinding.getType(), p1) which causes an NPE because\nIVariableBinding.getType() returns null which is against the spec.",
    "Thanks for investigating Dani.\n\nOlivier - pls comment",
    "I will investigate. Thanks Dani.",
    "Could you please try to provide an example where this occurs?\nDo you have errors in your code?",
    "Unfortunately I could not reproduce this problem.  You are correct, the class I\nwas trying to perform this operation in had errors.  However, the particular\nmethod I was trying to extract from did not have errors...",
    "I could reproduce a null type for a variable binding using this code:\n\npublic class X {\n\tvoid foo(boolean b) {\n\t\tZork z \u003d null;\n\t\tif (b) {\n\t\t\tSystem.out.println(z);\n\t\t}\n\t}\n}\n\nHowever I could not reproduce the NPE. If getType() is used, it will lead to a\nNPE. So we need to fix this.\nThe only way I can see is to return null for the binding of the local. We don\u0027t\nhave support for problem binding within the DOM binding.\nWould this be fine for you Dani?",
    "When a local variable binding (compiler side) has no type (type \u003d\u003d null), we\nshould not create a VariableBinding (DOM side), otherwise it won\u0027t work to\nreturn the getType() and also it won\u0027t be possible to get the correspoding java\nelement.\nSo in this case the fix is to return no variable binding for a local that has no\nvalid return type.",
    "Dirk and Martin,\n\nWould you be fine if no binding is returned for such boggus local variable. null\nis not specified as a possible value for getType(). Therefore the only way I see\nto fix this issue is to return no binding at all.\nIt is spec\u0027d that no binding could be returned in case it is not possible to get\nthem.",
    "I assume \u0027Zork\u0027 in your code can\u0027t be resolved.\n\nIVariableBinding.getType can\u0027t be null, this would be against the spec and would\nrequire us to guard all our code against that.\nI guess the correct solution would be that no variable binding is created and\nreturned at all, but of course we\u0027re always happy the more information we get.\nWhat about return \u0027Object\u0027 as return type? Markus, Dirk?\n\n\n",
    "I don\u0027t like the solution to return Object as this could be misleading. Right\nnow when bindings are returned, the information is accurate. null looks more\nappropriate for me.",
    "IMO, the \"no variable binding\" vs. \"return Object as type\" goes along the same\nline as bug 84585. I wouldn\u0027t object to get a variable with type Object in this\ncase, iff I\u0027m in \"fuzzy\" mode.\n\nTo reproduce the NPE, simply duplicate the line\n\t\t\tSystem.out.println(z);\nand then try to extract a method out of a reference to \"z\".",
    "Agreed that returning Object is in the same line than bug 84585. But in this\ncase it should be fixed as part of bug 84585, which means this needs to be\ndocumented.\nThe problem here is the NPE. And without changing the specs, null seems to be\nthe only option, doesn\u0027t it?",
    "Returning \u0027null\u0027 would break the spec. All other APIs that return null also spec\nthis. \u0027getType()\u0027 doesn\u0027t, that\u0027s why we don\u0027t do a null check when we use it.",
    "I am not saying returning null to getType(), but returning null as the binding.\nThis variable would not have any binding, instead of an incomplete binding.",
    "Yes, I think returning no variable binding is the right solution for 3.1.1.",
    "Ok, I will return no binding in this case for 3.1.1 and it might be revisited\nfor 3.2 regarding bug 84585.",
    "Fixed and resolved in 3.1 maintenance stream.\nRegression test added in\norg.eclipse.jdt.core.tests.dom.ASTConverterTestAST3_2.test0613.",
    "Verified with 3.2 M1",
    "Verified for 3.1.1 using build M20050923-1430.",
    "Verified."
  ],
  "commentCreationDates": [
    "2005-06-28T03:18:39+02:00",
    "2005-06-28T09:43:58+02:00",
    "2005-06-28T11:14:09+02:00",
    "2005-06-28T15:46:51+02:00",
    "2005-06-28T15:48:20+02:00",
    "2005-06-29T17:35:10+02:00",
    "2005-06-29T17:44:03+02:00",
    "2005-06-30T01:53:45+02:00",
    "2005-06-30T16:35:41+02:00",
    "2005-06-30T16:50:46+02:00",
    "2005-06-30T16:53:15+02:00",
    "2005-06-30T17:20:06+02:00",
    "2005-06-30T17:24:53+02:00",
    "2005-06-30T17:46:58+02:00",
    "2005-06-30T17:50:16+02:00",
    "2005-06-30T17:53:36+02:00",
    "2005-06-30T18:56:59+02:00",
    "2005-06-30T23:08:35+02:00",
    "2005-08-09T14:38:33+02:00",
    "2005-09-26T18:16:19+02:00",
    "2005-09-26T18:18:03+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:327"
        },
        {
          "method": "org.eclipse.jface.dialogs.ProgressMonitorDialog.run",
          "source": "ProgressMonitorDialog.java:447"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run",
          "source": "ProgressMonitorJobsDialog.java:261"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressManager$3.run",
          "source": "ProgressManager.java:861"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile",
          "source": "ProgressManager.java:895"
        },
        {
          "method": "org.eclipse.ui.internal.progress.ProgressManager.busyCursorWhile",
          "source": "ProgressManager.java:871"
        },
        {
          "method": "org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.checkInitialConditions",
          "source": "RefactoringWizardOpenOperation.java:150"
        },
        {
          "method": "org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.access$0",
          "source": "RefactoringWizardOpenOperation.java:146"
        },
        {
          "method": "org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run",
          "source": "RefactoringWizardOpenOperation.java:116"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:69"
        },
        {
          "method": "org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run",
          "source": "RefactoringWizardOpenOperation.java:138"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate",
          "source": "RefactoringStarter.java:40"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.ExtractMethodAction.run",
          "source": "ExtractMethodAction.java:84"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun",
          "source": "SelectionDispatchAction.java:226"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.run",
          "source": "SelectionDispatchAction.java:198"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:996"
        },
        {
          "method": "org.eclipse.ui.commands.ActionHandler.execute",
          "source": "ActionHandler.java:182"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute",
          "source": "LegacyHandlerWrapper.java:108"
        },
        {
          "method": "org.eclipse.core.commands.Command.execute",
          "source": "Command.java:311"
        },
        {
          "method": "org.eclipse.core.commands.ParameterizedCommand.execute",
          "source": "ParameterizedCommand.java:396"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand",
          "source": "WorkbenchKeyboard.java:459"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.press",
          "source": "WorkbenchKeyboard.java:781"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent",
          "source": "WorkbenchKeyboard.java:828"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings",
          "source": "WorkbenchKeyboard.java:550"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3",
          "source": "WorkbenchKeyboard.java:493"
        },
        {
          "method": "org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent",
          "source": "WorkbenchKeyboard.java:117"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.filterEvent",
          "source": "Display.java:917"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:842"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:867"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:852"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:880"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:876"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmKeyDown",
          "source": "Widget.java:1475"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_KEYDOWN",
          "source": "Control.java:3348"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3067"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:3706"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:1656"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2711"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1699"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:367"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.NullPointerException",
        "elements": [
          {
            "method": "org.eclipse.jdt.internal.corext.dom.Bindings.equals",
            "source": "Bindings.java:88"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Matcher.match",
            "source": "SnippetFinder.java:107"
          },
          {
            "method": "org.eclipse.jdt.core.dom.SimpleName.subtreeMatch0",
            "source": "SimpleName.java:140"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.subtreeMatch",
            "source": "ASTNode.java:2315"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTMatcher.safeSubtreeMatch",
            "source": "ASTMatcher.java:138"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTMatcher.match",
            "source": "ASTMatcher.java:1386"
          },
          {
            "method": "org.eclipse.jdt.core.dom.MethodInvocation.subtreeMatch0",
            "source": "MethodInvocation.java:229"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.subtreeMatch",
            "source": "ASTNode.java:2315"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.matches",
            "source": "SnippetFinder.java:204"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.visitNode",
            "source": "SnippetFinder.java:191"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.dom.GenericVisitor.visit",
            "source": "GenericVisitor.java:142"
          },
          {
            "method": "org.eclipse.jdt.core.dom.MethodInvocation.accept0",
            "source": "MethodInvocation.java:236"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
            "source": "ASTNode.java:2497"
          },
          {
            "method": "org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0",
            "source": "VariableDeclarationFragment.java:224"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
            "source": "ASTNode.java:2520"
          },
          {
            "method": "org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0",
            "source": "VariableDeclarationStatement.java:272"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
            "source": "ASTNode.java:2520"
          },
          {
            "method": "org.eclipse.jdt.core.dom.Block.accept0",
            "source": "Block.java:135"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
            "source": "ASTNode.java:2497"
          },
          {
            "method": "org.eclipse.jdt.core.dom.IfStatement.accept0",
            "source": "IfStatement.java:189"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
            "source": "ASTNode.java:2520"
          },
          {
            "method": "org.eclipse.jdt.core.dom.Block.accept0",
            "source": "Block.java:135"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
            "source": "ASTNode.java:2497"
          },
          {
            "method": "org.eclipse.jdt.core.dom.IfStatement.accept0",
            "source": "IfStatement.java:189"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
            "source": "ASTNode.java:2520"
          },
          {
            "method": "org.eclipse.jdt.core.dom.Block.accept0",
            "source": "Block.java:135"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChild",
            "source": "ASTNode.java:2497"
          },
          {
            "method": "org.eclipse.jdt.core.dom.MethodDeclaration.accept0",
            "source": "MethodDeclaration.java:501"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.acceptChildren",
            "source": "ASTNode.java:2520"
          },
          {
            "method": "org.eclipse.jdt.core.dom.TypeDeclaration.accept0",
            "source": "TypeDeclaration.java:483"
          },
          {
            "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
            "source": "ASTNode.java:2450"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.perform",
            "source": "SnippetFinder.java:138"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.initializeDuplicates",
            "source": "ExtractMethodRefactoring.java:581"
          },
          {
            "method": "org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.checkInitialConditions",
            "source": "ExtractMethodRefactoring.java:247"
          },
          {
            "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
            "source": "CheckConditionsOperation.java:82"
          },
          {
            "method": "org.eclipse.core.internal.resources.Workspace.run",
            "source": "Workspace.java:1719"
          },
          {
            "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
            "source": "WorkbenchRunnableAdapter.java:86"
          },
          {
            "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
            "source": "ModalContext.java:113"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "101955",
      "date": "2005-06-28T03:18:39+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "101955",
  "bugId": "101955",
  "date": "2005-06-28T03:18:39+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}