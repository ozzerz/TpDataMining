{
  "comments": [
    "Build: 2.0.1-200708161711\n\nScenario:\n\n-5.0 EAR (with DD)\n-2.5 dynamic web that is child of EAR (with DD)\n-3.0 EJB project (no DD) that is child of EAR and referenced by web project\n\nOn start up I\u0027m seeing the following IllegalArgumentException and the \"EAR Libraries\" cp container is uninitialized in the dynamic web project (not consistently repeatable, and I have been able to work-around the problem by removing and re-adding all of the Java EE dependencies and then executing a clean rebuild on the web project: EAR-to-module project and web-to-ejb):\n\n...\n!ENTRY org.eclipse.core.jobs 4 2 2007-08-27 15:14:44.359\n!MESSAGE An internal error occurred during: \"Initializing Java Tooling\".\n!STACK 0\njava.lang.IllegalArgumentException: The feature \u0027application\u0027 is not a valid feature\n\tat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eStructuralFeature(BasicEObjectImpl.java:730)\n\tat org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentSegment(BasicEObjectImpl.java:548)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.getEObject(ResourceImpl.java:758)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.getEObject(ResourceImpl.java:734)\n\tat org.eclipse.wst.common.componentcore.internal.util.HRefTranslator.convertStringToValue(HRefTranslator.java:74)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.extractValue(EMF2DOMAdapterImpl.java:1151)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFFeature(EMF2DOMAdapterImpl.java:1394)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature(EMF2DOMAdapterImpl.java:1773)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:933)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:913)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:461)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:1486)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature(EMF2DOMAdapterImpl.java:1700)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature(EMF2DOMAdapterImpl.java:1755)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:933)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:913)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:461)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:1486)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature(EMF2DOMAdapterImpl.java:1700)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature(EMF2DOMAdapterImpl.java:1755)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:933)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:913)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature(EMF2DOMAdapterImpl.java:461)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature(EMF2DOMAdapterImpl.java:954)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF(EMF2DOMAdapterImpl.java:929)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF(EMF2DOMAdapterImpl.java:913)\n\tat org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad(EMF2DOMRenderer.java:64)\n\tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad(TranslatorResourceImpl.java:144)\n\tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad(CompatibilityXMIResourceImpl.java:175)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1354)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1155)\n\tat org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.load(CompatibilityXMIResourceImpl.java:261)\n\tat org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load(TranslatorResourceImpl.java:390)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:256)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad(ProjectResourceSetImpl.java:118)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:271)\n\tat org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource(ProjectResourceSetImpl.java:362)\n\tat org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource(WorkbenchResourceHelper.java:384)\n\tat org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource(EditModel.java:684)\n\tat org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryResource(ModuleStructuralModel.java:303)\n\tat org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.prepareProjectModulesIfNecessary(ModuleStructuralModel.java:241)\n\tat org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryRootObject(ModuleStructuralModel.java:115)\n\tat org.eclipse.wst.common.componentcore.internal.StructureEdit.getComponentModelRoot(StructureEdit.java:450)\n\tat org.eclipse.wst.common.componentcore.internal.StructureEdit.getWorkbenchModules(StructureEdit.java:486)\n\tat org.eclipse.wst.common.componentcore.internal.StructureEdit.getComponent(StructureEdit.java:929)\n\tat org.eclipse.jst.j2ee.componentcore.util.EARVirtualComponent.getHardReferences(EARVirtualComponent.java:87)\n\tat org.eclipse.jst.j2ee.componentcore.util.EARVirtualComponent.getReferences(EARVirtualComponent.java:187)\n\tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getManifestReferences(J2EEModuleVirtualComponent.java:255)\n\tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences(J2EEModuleVirtualComponent.java:86)\n\tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences(J2EEModuleVirtualComponent.java:79)\n\tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathContainer.update(J2EEComponentClasspathContainer.java:163)\n\tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathContainer.install(J2EEComponentClasspathContainer.java:281)\n\tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathInitializer.initialize(J2EEComponentClasspathInitializer.java:29)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2203)\n\tat org.eclipse.jdt.internal.core.JavaModelManager$9.run(JavaModelManager.java:2133)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:2149)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1543)\n\tat org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1571)\n\tat org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2558)\n\tat org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1848)\n\tat org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3254)\n\tat org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:35)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n...",
    "Increasing this to critical; I\u0027m seeing this consistently (and even for cases where I just have an EAR with a single dynamic web project child) and it makes work effectively impossible. \n\nIf the underlying issue is covered by another bug (or has perhaps just been fixed), definitely let me know.",
    "Marking this one as a hotbug.",
    "Please try the WTP 8/30 driver..... \n\nSome changes were published in the recent driver...\n\nCarl - assigning to you for now....",
    "I\u0027ll try things out with the latest build...",
    "Still encountering the issue with build 20070904173852.\n\nI also hit what is likely a related problem where adding an existing 2.5 web project to a new 5.0 EAR failed to add the \"EAR Libraries\" cp container - no visible errors or errors in the .log. The EAR Libraries cp container correctly appeared on a new 2.5 dynamic web project (I selected the EAR in the project creation wizard) as well as on a 3.0 EJB project (added to the EAR post creation). Subsequent attempts to add/remove the dependency also failed to add the cp container (when I restarted I hit this bug). ",
    "The way the EAR Libraries classpath container is added to module projects was changed about a month ago.  There is no dynamic adding/removing the container when modules are added/removed from an EAR.  That old approach was too error prone.  Now, the container is always added regardless of EAR membership when the module project is created or imported from an archive.  Also, the user may now manually add/remove the container using the JDT properties UI in the normal way.",
    "Ok, thanks for the clarification, Jason - looks like the bug here was that the \"EAR Libraries\" cp container was never added to this dynamic web project (created in 2.0 originally; the whole workspace was a 2.0 workspace which I opened in 2.0.1).",
    "If that\u0027s the case then you should manually add the classpath container in 2.0.1.  I\u0027m not sure what else could be done.",
    "Seems like the behavior you get on importing a prior version project should mimick what you get when you open a prior version workspace, however, this is a separate issue from this bug so we can move the discussion out of this bugzilla.\n\n",
    "Rob, is this still a hotbug request? Or do you agree with the \"manual\" workaround Jason mentions in #8 for 201? \n\n\n\n",
    "still a hotbug (Carl mentioned that he can repro and that there might be some other bugs that are effective dups) - Jason\u0027s manual workaround applies to a separate problem (see comment #9)",
    "Created an attachment (id\u003d78780)\nRemove the contents of \u003cdependent-object/\u003e in the EAR\u0027s .component file\n\nThe problem came from our attempts to read back in the following:\n\n\u003cdependent-object\u003e//@application/@module.0\u003c/dependent-object\u003e\n\nThis was introduced in 2.0.1, and the failure to read it back in causes us to be unable to update the J2EE Module Dependencies for EAR files.  This regression should be fixed, and the most trivial (and safe) way to fix it is to just not write out the contents of the \u003cdependent-object/\u003e node for 2.0.1, and we will fix this in post 2.0.1 development.",
    "I tested this patch by hand and by running the entire J2EE JUnit bucket.",
    "I have reviewed this patch and it seems like the correct solution.  If the instanceof check fails, then the dependent object is wrong, so returning null will avoid writing out the incorrect meta-data.",
    "Carl openned a dep bug for R202.\n\nThis patch will prevent the creation of the bad href in the first place.\n\nPutting into PMC review",
    "I approve, \nand will look forward to any comments from Rob. \nI hope/assume you find this satisfactory? \n",
    "Committed to CVS.",
    "Yes, talked to Carl about the fix yesterday - thanks for getting this in!\n\nI\u0027ll mark as verified when I have a chance to test with this week\u0027s candidate build.",
    "Tested with build M-2.0.1RC3-20070920174323.\n\nThe change to generate an empty \"dependent-object\" element is working to eliminate the EMF error on restart that was causing the \"EAR Libraries\" cp container to not get properly initialized, however, looks like another regression has been recently  introduced (unfortunately, it looks like it was introduced 1 month ago but no one else noticed and I must have tested things past 8/16 with projects created prior to that just to see if this bug still existed - this one blocked all my Java EE 5 work).\n\nHere is the current regression: the \"EAR Libraries\" cp container is not added during project creation to Java EE 5 module projects. A user can certainly add this manually but they have never had to in the past and won\u0027t expect that this extra step is necessary so I think this regression needs to be fixed before we can declare 2.0.1, I\u0027ll clone a new bug off for this.",
    "note: Jason just indicated he\u0027s going to open the bug w/ patch",
    "opened bug 204331 for the regression."
  ],
  "commentCreationDates": [
    "2007-08-27T21:40:19+02:00",
    "2007-08-28T20:35:45+02:00",
    "2007-08-30T20:55:38+02:00",
    "2007-09-04T19:50:56+02:00",
    "2007-09-04T21:46:55+02:00",
    "2007-09-05T22:07:20+02:00",
    "2007-09-06T16:04:12+02:00",
    "2007-09-06T18:47:37+02:00",
    "2007-09-06T19:04:29+02:00",
    "2007-09-06T20:35:27+02:00",
    "2007-09-18T05:39:46+02:00",
    "2007-09-18T14:45:52+02:00",
    "2007-09-19T20:55:57+02:00",
    "2007-09-19T20:56:48+02:00",
    "2007-09-19T23:16:17+02:00",
    "2007-09-19T23:20:36+02:00",
    "2007-09-19T23:37:33+02:00",
    "2007-09-20T14:21:08+02:00",
    "2007-09-20T19:31:07+02:00",
    "2007-09-21T22:50:30+02:00",
    "2007-09-21T22:51:36+02:00",
    "2007-09-21T23:01:46+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "The feature \u0027application\u0027 is not a valid feature",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eStructuralFeature",
          "source": "BasicEObjectImpl.java:730"
        },
        {
          "method": "org.eclipse.emf.ecore.impl.BasicEObjectImpl.eObjectForURIFragmentSegment",
          "source": "BasicEObjectImpl.java:548"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.getEObject",
          "source": "ResourceImpl.java:758"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.getEObject",
          "source": "ResourceImpl.java:734"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.util.HRefTranslator.convertStringToValue",
          "source": "HRefTranslator.java:74"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.extractValue",
          "source": "EMF2DOMAdapterImpl.java:1151"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1394"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1773"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:933"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:913"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:461"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1486"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1700"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1755"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:933"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:913"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:461"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1486"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:1700"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFFeature",
          "source": "EMF2DOMAdapterImpl.java:1755"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:933"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:913"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOFMultiFeature",
          "source": "EMF2DOMAdapterImpl.java:461"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOFRootFeature",
          "source": "EMF2DOMAdapterImpl.java:954"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.primUpdateMOF",
          "source": "EMF2DOMAdapterImpl.java:929"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMAdapterImpl.updateMOF",
          "source": "EMF2DOMAdapterImpl.java:913"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doLoad",
          "source": "EMF2DOMRenderer.java:64"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.basicDoLoad",
          "source": "TranslatorResourceImpl.java:144"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.doLoad",
          "source": "CompatibilityXMIResourceImpl.java:175"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:1354"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.load",
          "source": "ResourceImpl.java:1155"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.CompatibilityXMIResourceImpl.load",
          "source": "CompatibilityXMIResourceImpl.java:261"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.load",
          "source": "TranslatorResourceImpl.java:390"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad",
          "source": "ResourceSetImpl.java:256"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.demandLoad",
          "source": "ProjectResourceSetImpl.java:118"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper",
          "source": "ResourceSetImpl.java:271"
        },
        {
          "method": "org.eclipse.jem.internal.util.emf.workbench.ProjectResourceSetImpl.getResource",
          "source": "ProjectResourceSetImpl.java:362"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.WorkbenchResourceHelper.getOrCreateResource",
          "source": "WorkbenchResourceHelper.java:384"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.getResource",
          "source": "EditModel.java:684"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryResource",
          "source": "ModuleStructuralModel.java:303"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.prepareProjectModulesIfNecessary",
          "source": "ModuleStructuralModel.java:241"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.ModuleStructuralModel.getPrimaryRootObject",
          "source": "ModuleStructuralModel.java:115"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.StructureEdit.getComponentModelRoot",
          "source": "StructureEdit.java:450"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.StructureEdit.getWorkbenchModules",
          "source": "StructureEdit.java:486"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.StructureEdit.getComponent",
          "source": "StructureEdit.java:929"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.util.EARVirtualComponent.getHardReferences",
          "source": "EARVirtualComponent.java:87"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.util.EARVirtualComponent.getReferences",
          "source": "EARVirtualComponent.java:187"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getManifestReferences",
          "source": "J2EEModuleVirtualComponent.java:255"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences",
          "source": "J2EEModuleVirtualComponent.java:86"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences",
          "source": "J2EEModuleVirtualComponent.java:79"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathContainer.update",
          "source": "J2EEComponentClasspathContainer.java:163"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathContainer.install",
          "source": "J2EEComponentClasspathContainer.java:281"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathInitializer.initialize",
          "source": "J2EEComponentClasspathInitializer.java:29"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer",
          "source": "JavaModelManager.java:2203"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager$9.run",
          "source": "JavaModelManager.java:2133"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1797"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers",
          "source": "JavaModelManager.java:2149"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer",
          "source": "JavaModelManager.java:1543"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:1571"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.resolveClasspath",
          "source": "JavaProject.java:2558"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1848"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.initializeAfterLoad",
          "source": "JavaCore.java:3254"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run",
          "source": "InitializeAfterLoadJob.java:35"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "201318",
      "date": "2007-08-27T21:40:19+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "critical"
    }
  ],
  "groupId": "201318",
  "bugId": "201318",
  "date": "2007-08-27T21:40:19+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "critical"
}