{
  "comments": [
    "Given:\npackage test1;\npublic class E1 {\n\tprivate void bar(boolean bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb) {\n        if (bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb) { // a b c d e f g h i j k\n        \tfinal String s \u003d \"\";\n        }\n    }\n}\n1. Eclipse formatter settings\n2. Clean Ups:\nFormat source code\nFormat single line comments\n3. Run clean up on E1\nIs:\norg.eclipse.text.edits.MalformedTreeException: Overlapping text edits\n\tat org.eclipse.text.edits.TextEdit$InsertionComparator.compare(TextEdit.java:119)\n\tat java.util.Collections.indexedBinarySearch(Collections.java:322)\n\tat java.util.Collections.binarySearch(Collections.java:310)\n\tat org.eclipse.text.edits.TextEdit.computeInsertionIndex(TextEdit.java:793)\n\tat org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:778)\n\tat org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:333)\n\tat org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility.insert(TextChangeCompatibility.java:85)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.mergeTextChanges(CleanUpRefactoring.java:768)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.access$2(CleanUpRefactoring.java:724)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:219)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:186)\n\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:712)\n\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:466)\n\tat org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:707)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpParser.createASTs(CleanUpRefactoring.java:304)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:383)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:598)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:552)\n\tat org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:160)\n\tat org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:76)\n\tat org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:720)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)\n\tat org.eclipse.jdt.core.JavaCore.run(JavaCore.java:4022)\n\tat org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",
    "Created an attachment (id\u003d50278)\nfix\n\n",
    "fixed \u003e I20060912-0800"
  ],
  "commentCreationDates": [
    "2006-09-15T15:59:56+02:00",
    "2006-09-15T18:32:45+02:00",
    "2006-09-15T18:33:46+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.text.edits.MalformedTreeException",
      "message": "Overlapping text edits",
      "elements": [
        {
          "method": "org.eclipse.text.edits.TextEdit$InsertionComparator.compare",
          "source": "TextEdit.java:119"
        },
        {
          "method": "java.util.Collections.indexedBinarySearch",
          "source": "Collections.java:322"
        },
        {
          "method": "java.util.Collections.binarySearch",
          "source": "Collections.java:310"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.computeInsertionIndex",
          "source": "TextEdit.java:793"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.internalAdd",
          "source": "TextEdit.java:778"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.addChild",
          "source": "TextEdit.java:333"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility.insert",
          "source": "TextChangeCompatibility.java:85"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.mergeTextChanges",
          "source": "CleanUpRefactoring.java:768"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.access$2",
          "source": "CleanUpRefactoring.java:724"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions",
          "source": "CleanUpRefactoring.java:219"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST",
          "source": "CleanUpRefactoring.java:186"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:712"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:466"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createASTs",
          "source": "ASTParser.java:707"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpParser.createASTs",
          "source": "CleanUpRefactoring.java:304"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next",
          "source": "CleanUpRefactoring.java:383"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject",
          "source": "CleanUpRefactoring.java:598"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions",
          "source": "CleanUpRefactoring.java:552"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions",
          "source": "Refactoring.java:160"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run",
          "source": "RefactoringExecutionHelper.java:76"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BatchOperation.executeOperation",
          "source": "BatchOperation.java:39"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:720"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1737"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.run",
          "source": "JavaCore.java:4022"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:87"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "157468",
      "date": "2006-09-15T15:59:56+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "157468",
  "bugId": "157468",
  "date": "2006-09-15T15:59:56+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}