{
  "comments": [
    "Hello,\n\n    I wrote the following code, which is part of a Java project, *not* a\nplug-in. It compiles fine with the appropriate class-path:\n\npublic class ASTTest {\n    public static void main(final String[] args) {\n        CompilationUnit compilationUnit \u003d\n            AST.parseCompilationUnit(\n                \"class A { private int i; }\".toCharArray());\n        compilationUnit.accept(new ASTVisitor() {\n            public boolean visit(final TypeDeclaration node) {\n                System.out.println(node.getName());\n                return true;\n            }\n        });\n    }\n}\n\n    When I run it, I get an exception:\n\njava.lang.NullPointerException\n    at org.eclipse.jdt.core.JavaCore.getOptions(JavaCore.java:1224)\n    at\norg.eclipse.jdt.core.dom.CompilationUnitResolver.parse(CompilationUnitResolv\ner.java:180)\n    at org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:359)\n    at yann.test.ast.ASTTest.main(ASTTest.java:39)\nException in thread \"main\"\n\n    It seems to me that the AST class is tightly coupled with the plug-in\nmanagement mechanism. Indeed, the exception arises in class JavaCore at the\nfollowing line:\n\n    public static Hashtable getOptions() {\n\n        Hashtable options \u003d new Hashtable(10);\n\n        // see #initializeDefaultPluginPreferences() for changing default\nsettings\n        Preferences preferences \u003d getPlugin().getPluginPreferences();\n        ///////////////////////////////////////////////////////////// Here\n        HashSet optionNames \u003d\nJavaModelManager.getJavaModelManager().OptionNames;\n\n        // get preferences set to their default\n        String[] defaultPropertyNames \u003d preferences.defaultPropertyNames();\n        for (int i \u003d 0; i \u003c defaultPropertyNames.length; i++){\n            String propertyName \u003d defaultPropertyNames[i];\n            if (optionNames.contains(propertyName)){\n                options.put(propertyName,\npreferences.getString(propertyName));\n            }\n        }\n        // get preferences not set to their default\n        String[] propertyNames \u003d preferences.propertyNames();\n        for (int i \u003d 0; i \u003c propertyNames.length; i++){\n            String propertyName \u003d propertyNames[i];\n            if (optionNames.contains(propertyName)){\n                options.put(propertyName,\npreferences.getString(propertyName));\n            }\n        }\n        // get encoding through resource plugin\n        options.put(CORE_ENCODING, ResourcesPlugin.getEncoding());\n\n        return options;\n    }\n\n    Because the JavaCode class is never initialized, the private static\nfield (!) JAVA_CORE_PLUGIN is set to null and thus the getPlugin() method\nreturns null.\n\n    Yann-Ga?l Gu?h?neuc",
    "If JavaCore plug-in is never started properly, various things won\u0027t work, like \nthe background indexing which won\u0027t get started.\n\nNo action planned, the plug-in is to be started.",
    "No action planned.",
    "Sure.\nHowever, I do not understand why parsing through the AST class should be plug-\nin dependent. The parser (I believe) does not (should not) care whether \nindexing and other goodies are enabled... I think it must be left to the \ndevelopper to start or not the JavaCore plug-in as long as she knows what she \nwill get. (Also, the JAVA_CORE_PLUGIN private static variable seemed to me as a \nquick fix?)"
  ],
  "commentCreationDates": [
    "2002-07-10T08:34:38+02:00",
    "2002-07-10T18:07:06+02:00",
    "2002-07-10T18:07:36+02:00",
    "2002-07-11T08:52:07+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.core.JavaCore.getOptions",
          "source": "JavaCore.java:1224"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.parse",
          "source": "CompilationUnitResolv er.java:180"
        },
        {
          "method": "org.eclipse.jdt.core.dom.AST.parseCompilationUnit",
          "source": "AST.java:359"
        },
        {
          "method": "yann.test.ast.ASTTest.main",
          "source": "ASTTest.java:39"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "21428",
      "date": "2002-07-10T08:34:38+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "21428",
  "bugId": "21428",
  "date": "2002-07-10T08:34:38+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}