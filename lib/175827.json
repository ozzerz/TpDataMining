{
  "comments": [
    "I20070227-0800\n\nGiven:\npackage test1;\npublic class E1 {\n    public void foo(int[] ints) {\n        //Top comment\n        for (int i \u003d 0; i \u003c ints.length; i++) {\n            System.out.println(ints[i]);\n        }\n        //Bottom comment\n    }\n}\n\n1. Source\u003eClean Up...\n2. Select \u0027Code Style\u003eConvert For loops to enhanced\u0027 as only clean up\n3. Finish\nIs:\n\norg.eclipse.text.edits.MalformedTreeException: Range of child edit lies outside of parent edit\n\tat org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:774)\n\tat org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:333)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(ASTRewriteAnalyzer.java:211)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(ASTRewriteAnalyzer.java:1278)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTRewriteAnalyzer.java:1259)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2474)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:314)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:320)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:2039)\n\tat org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:222)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2476)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:314)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:282)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:541)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:866)\n\tat org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1528)\n\tat org.eclipse.jdt.core.dom.Block.accept0(Block.java:133)\n\tat org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2476)\n\tat org.eclipse.jdt.core.dom.rewrite.ASTRewrite.internalRewriteAST(ASTRewrite.java:259)\n\tat org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(ASTRewrite.java:248)\n\tat org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.attachChange(CompilationUnitRewrite.java:220)\n\tat org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.createChange(CompilationUnitRewrite.java:185)\n\tat org.eclipse.jdt.internal.corext.fix.LinkedFix.createChange(LinkedFix.java:80)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:751)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:248)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:226)\n\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:712)\n\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:466)\n\tat org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:705)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpParser.createASTs(CleanUpRefactoring.java:340)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:432)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:665)\n\tat org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:619)\n\tat org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)\n\tat org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)\n\tat org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:208)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1798)\n\tat org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\n\n\nThis got introduced by bug 110599\n\nMartin, I\u0027m using a TightSourceRangeComputer in ConvertForLoopOperation. Not using the TightSourceRangeComputer makes the exception go away, but also the Top comment.",
    "Problem is not the ASTRewriter but the TightSourceRangeComputer not working along spec:\n\n\"a source range of a parent node must fully cover the source ranges of its children\"\n\nIn this case the parent (ForStatement) is tighter then the child (Block)\n",
    "Created an attachment (id\u003d59999)\nfix\n\n",
    "fixed \u003e I20070227-0800"
  ],
  "commentCreationDates": [
    "2007-02-28T13:34:56+01:00",
    "2007-02-28T16:35:14+01:00",
    "2007-02-28T17:27:39+01:00",
    "2007-02-28T17:32:29+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.text.edits.MalformedTreeException",
      "message": "Range of child edit lies outside of parent edit",
      "elements": [
        {
          "method": "org.eclipse.text.edits.TextEdit.internalAdd",
          "source": "TextEdit.java:774"
        },
        {
          "method": "org.eclipse.text.edits.TextEdit.addChild",
          "source": "TextEdit.java:333"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit",
          "source": "ASTRewriteAnalyzer.java:211"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit",
          "source": "ASTRewriteAnalyzer.java:1278"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit",
          "source": "ASTRewriteAnalyzer.java:1259"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2474"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit",
          "source": "ASTRewriteAnalyzer.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit",
          "source": "ASTRewriteAnalyzer.java:320"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:2039"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ForStatement.accept0",
          "source": "ForStatement.java:222"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2476"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit",
          "source": "ASTRewriteAnalyzer.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit",
          "source": "ASTRewriteAnalyzer.java:282"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer$ListRewriter.rewriteList",
          "source": "ASTRewriteAnalyzer.java:541"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList",
          "source": "ASTRewriteAnalyzer.java:866"
        },
        {
          "method": "org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit",
          "source": "ASTRewriteAnalyzer.java:1528"
        },
        {
          "method": "org.eclipse.jdt.core.dom.Block.accept0",
          "source": "Block.java:133"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTNode.accept",
          "source": "ASTNode.java:2476"
        },
        {
          "method": "org.eclipse.jdt.core.dom.rewrite.ASTRewrite.internalRewriteAST",
          "source": "ASTRewrite.java:259"
        },
        {
          "method": "org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST",
          "source": "ASTRewrite.java:248"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.attachChange",
          "source": "CompilationUnitRewrite.java:220"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.createChange",
          "source": "CompilationUnitRewrite.java:185"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.LinkedFix.createChange",
          "source": "LinkedFix.java:80"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange",
          "source": "CleanUpRefactoring.java:751"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions",
          "source": "CleanUpRefactoring.java:248"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST",
          "source": "CleanUpRefactoring.java:226"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:712"
        },
        {
          "method": "org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve",
          "source": "CompilationUnitResolver.java:466"
        },
        {
          "method": "org.eclipse.jdt.core.dom.ASTParser.createASTs",
          "source": "ASTParser.java:705"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpParser.createASTs",
          "source": "CleanUpRefactoring.java:340"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next",
          "source": "CleanUpRefactoring.java:432"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject",
          "source": "CleanUpRefactoring.java:665"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions",
          "source": "CleanUpRefactoring.java:619"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:83"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:118"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.PerformChangeOperation.run",
          "source": "PerformChangeOperation.java:208"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1798"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:87"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "175827",
      "date": "2007-02-28T13:34:56+01:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "175827",
  "bugId": "175827",
  "date": "2007-02-28T13:34:56+01:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}