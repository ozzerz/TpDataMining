{
  "comments": [
    "build: M4, occured during refactoring \nI tryed to rename a java source file with compilation errors. The exception \ndidn\u0027t occure if i unchecked \"update references...\"\n\n\nCaused by: java.lang.ClassCastException: \norg.eclipse.jdt.internal.compiler.lookup.ProblemBinding\n\tat \norg.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchLevel\n(TypeReferencePattern.java:470)\n\tat \norg.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchLevel\n(TypeReferencePattern.java:362)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching\n(MatchSet.java:258)\n\tat \norg.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo\nmpilationUnit(MatchingOpenable.java:317)\n\tat \norg.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches\n(MatchingOpenable.java:166)\n\tat \norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches\n(MatchLocator.java:1236)\n\tat \norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches\n(MatchLocator.java:533)\n\tat org.eclipse.jdt.core.search.SearchEngine.search\n(SearchEngine.java:425)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search\n(RefactoringSearchEngine.java:133)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search\n(RefactoringSearchEngine.java:100)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search\n(RefactoringSearchEngine.java:95)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.getRefe\nrences(RenameTypeRefactoring.java:445)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.checkIn\nput(RenameTypeRefactoring.java:314)\n\tat \norg.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitRefactor\ning.checkInput(RenameCompilationUnitRefactoring.java:257)\n\tat org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run\n(CheckConditionsOperation.java:59)\n\tat org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run\n(CreateChangeOperation.java:94)\n\tat org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run\n(PerformChangeOperation.java:121)\n\tat org.eclipse.jface.operation.ModalContext.runInCurrentThread\n(ModalContext.java:296)\n\t... 43 more",
    "Would you have a simple test case that can reproduce the problem?",
    "sorry, can\u0027t remeber ",
    "The cast should not be done if the binding is a problem binding. Looking at the\nsource code, it looks like we missed a case in which we have to return a\nINACCURATE_MATCH.\nI suggest:\ncase BindingIds.TYPE : //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003donly type \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\tif (binding instanceof ProblemBinding) {\n\t\treturn INACCURATE_MATCH;\n\t}\n\ttypeBinding \u003d (TypeBinding)binding;\n\tbreak;\n\ninstead of:\n\ncase BindingIds.TYPE : //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003donly type \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\ttypeBinding \u003d (TypeBinding)binding;\n\tbreak;\n\nWhat do you think?",
    "Thanks Olivier. Protection added.",
    "I don\u0027t know the sourc background but why not doing a more stricter protection?\n\ncase BindingIds.TYPE : //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003donly type \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\tif (!(binding instanceof TypeBinding)) {\n\t\treturn INACCURATE_MATCH;\n\t}\n\ttypeBinding \u003d (TypeBinding)binding;\n\tbreak;\n",
    "Right. I released the change.",
    "Verified."
  ],
  "commentCreationDates": [
    "2002-12-23T09:27:45+01:00",
    "2003-01-06T09:59:39+01:00",
    "2003-01-06T10:04:43+01:00",
    "2003-01-08T19:18:56+01:00",
    "2003-01-09T10:48:57+01:00",
    "2003-01-09T11:15:42+01:00",
    "2003-01-09T14:10:14+01:00",
    "2003-02-07T17:15:53+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org.eclipse.jdt.internal.compiler.lookup.ProblemBinding",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchLevel",
          "source": "TypeReferencePattern.java:470"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern.matchLevel",
          "source": "TypeReferencePattern.java:362"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchSet.reportMatching",
          "source": "MatchSet.java:258"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCompilationUnit",
          "source": "MatchingOpenable.java:317"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches",
          "source": "MatchingOpenable.java:166"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1236"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:533"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:425"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search",
          "source": "RefactoringSearchEngine.java:133"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search",
          "source": "RefactoringSearchEngine.java:100"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search",
          "source": "RefactoringSearchEngine.java:95"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.getReferences",
          "source": "RenameTypeRefactoring.java:445"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.checkInput",
          "source": "RenameTypeRefactoring.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitRefactoring.checkInput",
          "source": "RenameCompilationUnitRefactoring.java:257"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:59"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run",
          "source": "CreateChangeOperation.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run",
          "source": "PerformChangeOperation.java:121"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:296"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "28822",
      "date": "2002-12-23T09:27:45+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "28822",
  "bugId": "28822",
  "date": "2002-12-23T09:27:45+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}