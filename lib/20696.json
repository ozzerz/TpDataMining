{
  "comments": [
    "I\u0027m using the F3 driver, and others on team are using F2, for dev. environment.\n\nI tried to \u0027branch\u0027 but some problem occurred (got an error about another user \nhaving a lock on some files ... and this is to a CVS repository, I should add.)\n\nThe branched version wasn\u0027t complete, so I did a compare to the other original \nbranch and used \"copy right\" on a large group of files from the compare \neditor/browser. \n\nThree files ended up being empty files in my workspace. From then on, no matter \nwhat version I compared/replaced them with from repository, I always got an \nempty file. \n\nOthers on the team, using F2 driver, could still \"see\" the repository files, \nand once they committed a good file to that new branch I could \"see\" it also, \nbut still, even with a good version in my workspace, when I do compare with \nrepository version/branch, the repository version always shows up empty.\n\nUnder some conditions, such as when I tried a \"replace with repository version\"\nI got an error message about the filename being too long, though it was no \nlonger than others.\n\nSorry I don\u0027t have a more reproducible scenerio, but thought I should document \nwhat I knew in case that helped.\n\nThis was on Windows 2000.",
    "Have you checked the .log?  Under certain conditions we are unable to display \nerror messages to the user, but we do log them.  It could be that the remote \nwas empty because we were failing retrieving it.",
    "Oh, good point to check the log. There was info there. Below I\u0027ve pasted the \ntop of the stack. Is the filename really too long? Is there a good limit to go \nby?\n\n\n\n\n!ENTRY org.eclipse.jdt.ui 4 1 Jun 19, 2002 19:15:23.263\n!MESSAGE Internal Error\n!STACK 1\norg.eclipse.core.runtime.CoreException[-6]: java.io.FileNotFoundException: \nD:\\Builds\\EB\\eSDK-0612-F3\n\\eclipse\\workspaceReleased\\.metadata\\.plugins\\org.eclipse.team.cvs.core\\.cache\\c\nvslnx01.raleigh.ibm.com\\cvsrep\\j2eedev\\com.ibm.sed.editor\\sedxml\\com\\ibm\\sed\\con\ntentassist\\html\\javascript\\JavaScriptCompletionAssistAdapter.java 1.1.4.1.2.16 \n(Filename too long)\n\tat java.io.FileOutputStream.open(Native Method)\n\tat java.io.FileOutputStream.\u003cinit\u003e(FileOutputStream.java(Compiled Code))\n\tat java.io.FileOutputStream.\u003cinit\u003e(FileOutputStream.java:76)\n\tat java.io.FileOutputStream.\u003cinit\u003e(FileOutputStream.java:146)\n\tat \norg.eclipse.team.internal.ccvs.core.resources.RemoteFile.switchToCacheOutputStre\nam(RemoteFile.java:525)\n\tat org.eclipse.team.internal.ccvs.core.resources.RemoteFile.setContents\n(RemoteFile.java:348)\n\tat org.eclipse.team.internal.ccvs.core.client.Session.receiveFile\n(Session.java(Compiled Code))\n\tat org.eclipse.team.internal.ccvs.core.client.UpdatedHandler.handle\n(UpdatedHandler.java(Compiled Code))\n\tat org.eclipse.team.internal.ccvs.core.client.Request.executeRequest\n(Request.java(Compiled Code))\n\tat org.eclipse.team.internal.ccvs.core.client.Command.doExecute\n(Command.java:390)\n\tat org.eclipse.team.internal.ccvs.core.client.Command$2.run\n(Command.java:322)\n\tat org.eclipse.team.internal.ccvs.core.resources.RemoteFolder.run\n(RemoteFolder.java:692)\n\tat org.eclipse.team.internal.ccvs.core.client.Command.execute\n(Command.java:333)\n\tat org.eclipse.team.internal.ccvs.core.client.Command.execute\n(Command.java:712)\n\tat org.eclipse.team.internal.ccvs.core.resources.RemoteFile$1.run\n(RemoteFile.java:142)\n\tat org.eclipse.team.internal.ccvs.core.resources.RemoteFolder.run\n(RemoteFolder.java:692)\n\tat org.eclipse.team.internal.ccvs.core.client.Session.run\n(Session.java:192)\n\tat org.eclipse.team.internal.ccvs.core.resources.RemoteFile.getContents\n(RemoteFile.java:140)\n\tat org.eclipse.team.internal.ui.sync.MergeResource.getLatestRevision\n(MergeResource.java:79)\n\tat org.eclipse.team.internal.ui.sync.TeamFile$2.createStream\n(TeamFile.java:82)\n\tat org.eclipse.compare.BufferedContent.getContents\n(BufferedContent.java:43)\n\tat org.eclipse.jdt.internal.ui.compare.JavaStructureCreator.getStructure\n(JavaStructureCreator.java:132)\n\tat \norg.eclipse.compare.structuremergeviewer.StructureDiffViewer.compareInputChanged\n(StructureDiffViewer.java:218)\n\tat \norg.eclipse.jdt.internal.ui.compare.JavaStructureDiffViewer.compareInputChanged\n(JavaStructureDiffViewer.java:80)\n\tat \norg.eclipse.compare.structuremergeviewer.StructureDiffViewer.inputChanged\n(StructureDiffViewer.java:148)\n\tat org.eclipse.jface.viewers.ContentViewer.setInput\n(ContentViewer.java:234)\n\tat org.eclipse.jface.viewers.StructuredViewer.setInput\n(StructuredViewer.java:875)\n\tat org.eclipse.compare.CompareViewerSwitchingPane.setInput\n(CompareViewerSwitchingPane.java:261)\n\tat org.eclipse.compare.CompareEditorInput$12.run\n(CompareEditorInput.java:564)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)\n\tat org.eclipse.compare.CompareEditorInput.feedDefault1\n(CompareEditorInput.java:560)\n\tat org.eclipse.compare.CompareEditorInput.access$2\n(CompareEditorInput.java:559)\n\tat org.eclipse.compare.CompareEditorInput$8.doubleClick\n(CompareEditorInput.java:428)\n\tat org.eclipse.compare.CompareViewerSwitchingPane.doubleClick\n(CompareViewerSwitchingPane.java:197)\n\tat org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick\n(StructuredViewer.java:306)\n",
    "Moving to Core for comment.\n\nAlso reworded title from:\n   F3 compare show\u0027s empty file in repository but F2 doesn\u0027t",
    "The maximum filename length on windows is 255 characters, which is why the \nIOException occurs.  This shouldn\u0027t be the user\u0027s problem, since it\u0027s an \ninternal cache file whose name is too long.  The cache could use random \nfilenames and maintain an index to the real filename.\n\nThere is no platform core code anywhere in this stack trace.  The CoreException \nis thrown by MergeResource.getLatestRevision().\n\nBack to team.",
    "(Aside: that\u0027s one honkin\u0027 filename!)\n\nThe file is required for caching large remote files (over 32k) to avoid \nrefetching contents each time during compare, etc.  The filename must be unique \nsince we don\u0027t easely know the lifespan of the cache (because its required by \nthe UI).  Post 2.0, we will look at having randomly generated filenames with an \nin memory lookup table mapping the path to the generated filename.\n\nFor 2.0, since we can\u0027t determine the maximum filename length for the OS, \nworkaround will be:\n\n- catch the exception in RemoteFile.setContents()\n- on exception, don\u0027t use local caching file.\n- write warning to launch to indicate that caching could not occur due to long \nfilename\n\nThis will mean slower performance when comparing large files but will at least \nallow the user to proceed.\n\nRisk: small to moderate - to change is small and localized, but it\u0027s in often \nused to code\nValue: allows user to keep working when filenames are too long or the OS \ndoesn\u0027t support sufficiently long filenames.\n",
    "Am I reading the discussion correctly this is only a problem for \nfiles over 32K? \n\nAlso, is there a workaround for this problem? Would one be just to install with \nshorter install/workspace directory?\nMine was D:\\Builds\\EB\\eSDK-0612-F3\\eclipse\\workspaceReleased\\\nOr is there a better workaround?",
    "Yes to both questions.",
    "Fixed and verified by KM and DJ",
    "Looks like it works now."
  ],
  "commentCreationDates": [
    "2002-06-20T01:47:40+02:00",
    "2002-06-20T02:43:55+02:00",
    "2002-06-20T03:13:52+02:00",
    "2002-06-20T04:23:47+02:00",
    "2002-06-20T16:12:30+02:00",
    "2002-06-20T17:41:46+02:00",
    "2002-06-20T18:52:25+02:00",
    "2002-06-20T20:39:17+02:00",
    "2002-06-21T18:11:39+02:00",
    "2002-06-26T16:56:48+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.FileNotFoundException",
      "message": "D:\\Builds\\EB\\eSDK-0612-F3 \\eclipse\\workspaceReleased\\.metadata\\.plugins\\org.eclipse.team.cvs.core\\.cache\\c vslnx01.raleigh.ibm.com\\cvsrep\\j2eedev\\com.ibm.sed.editor\\sedxml\\com\\ibm\\sed\\con tentassist\\html\\javascript\\JavaScriptCompletionAssistAdapter.java 1.1.4.1.2.16  (Filename too long)",
      "elements": [
        {
          "method": "java.io.FileOutputStream.open",
          "source": "Native Method"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "FileOutputStream.java(Compiled Code)"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "FileOutputStream.java:76"
        },
        {
          "method": "java.io.FileOutputStream.\u003cinit\u003e",
          "source": "FileOutputStream.java:146"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFile.switchToCacheOutputStream",
          "source": "RemoteFile.java:525"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFile.setContents",
          "source": "RemoteFile.java:348"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Session.receiveFile",
          "source": "Session.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.UpdatedHandler.handle",
          "source": "UpdatedHandler.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Request.executeRequest",
          "source": "Request.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command.doExecute",
          "source": "Command.java:390"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command$2.run",
          "source": "Command.java:322"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFolder.run",
          "source": "RemoteFolder.java:692"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command.execute",
          "source": "Command.java:333"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command.execute",
          "source": "Command.java:712"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFile$1.run",
          "source": "RemoteFile.java:142"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFolder.run",
          "source": "RemoteFolder.java:692"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Session.run",
          "source": "Session.java:192"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFile.getContents",
          "source": "RemoteFile.java:140"
        },
        {
          "method": "org.eclipse.team.internal.ui.sync.MergeResource.getLatestRevision",
          "source": "MergeResource.java:79"
        },
        {
          "method": "org.eclipse.team.internal.ui.sync.TeamFile$2.createStream",
          "source": "TeamFile.java:82"
        },
        {
          "method": "org.eclipse.compare.BufferedContent.getContents",
          "source": "BufferedContent.java:43"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.compare.JavaStructureCreator.getStructure",
          "source": "JavaStructureCreator.java:132"
        },
        {
          "method": "org.eclipse.compare.structuremergeviewer.StructureDiffViewer.compareInputChanged",
          "source": "StructureDiffViewer.java:218"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.compare.JavaStructureDiffViewer.compareInputChanged",
          "source": "JavaStructureDiffViewer.java:80"
        },
        {
          "method": "org.eclipse.compare.structuremergeviewer.StructureDiffViewer.inputChanged",
          "source": "StructureDiffViewer.java:148"
        },
        {
          "method": "org.eclipse.jface.viewers.ContentViewer.setInput",
          "source": "ContentViewer.java:234"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.setInput",
          "source": "StructuredViewer.java:875"
        },
        {
          "method": "org.eclipse.compare.CompareViewerSwitchingPane.setInput",
          "source": "CompareViewerSwitchingPane.java:261"
        },
        {
          "method": "org.eclipse.compare.CompareEditorInput$12.run",
          "source": "CompareEditorInput.java:564"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:64"
        },
        {
          "method": "org.eclipse.compare.CompareEditorInput.feedDefault1",
          "source": "CompareEditorInput.java:560"
        },
        {
          "method": "org.eclipse.compare.CompareEditorInput.access$2",
          "source": "CompareEditorInput.java:559"
        },
        {
          "method": "org.eclipse.compare.CompareEditorInput$8.doubleClick",
          "source": "CompareEditorInput.java:428"
        },
        {
          "method": "org.eclipse.compare.CompareViewerSwitchingPane.doubleClick",
          "source": "CompareViewerSwitchingPane.java:197"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick",
          "source": "StructuredViewer.java:306"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "20696",
      "date": "2002-06-20T03:13:52+02:00",
      "product": "Platform",
      "component": "Team",
      "severity": "normal"
    }
  ],
  "groupId": "20696",
  "bugId": "20696",
  "date": "2002-06-20T01:47:40+02:00",
  "product": "Platform",
  "component": "Team",
  "severity": "normal"
}