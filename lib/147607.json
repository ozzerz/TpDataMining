{
  "comments": [
    "1. create an EAR project that contains an EJB project\n2. place some utility jars files in the EarContent folder of my ear project\n3. Add the utility jars to the META-INF\\MANIFEST.MF file\n   the ear library container is updated to reflect the changes.\n4. restart eclipse\n   The ear library container is empty\n5. close and reopen the ejb project\n   The ear library is properly initialized\n\nI am using Elipse 3.2RC7 + WTP 1.5RC5 + prerequisites.",
    "It seems that this is happening if there are more projects that use the same library container.\n\nBetter steps to repro:\n1. create an EAR project that contains an EJB project and a Web project\n2. place some utility jars files in the EarContent folder of my ear project\n3. Add the utility jars to the META-INF\\MANIFEST.MF file of the EjB project. \n\n   the ear library container is updated to reflect the changes.\n\n   Don\u0027 add depedencies to the web project.\n\n4. restart eclipse\n\n   The ear library container is empty\n\n5. close and reopen the ejb project\n   The ear library is properly initialized",
    "I am not able to reproduce this using the j2ee properties.  Add the utility jars to the ejb project manifest by right clicking on the ejb project-\u003eproperties-\u003ej2ee module dependencies.  Then add checkmarks next to the utility jars desired.  Then close and restart workbench, the EAR libraries is updated.\n\nI am on 061806 1.5 RC5a.\n\nIs it really only reproducible from manually editing the manifest?  Or can you retry on this RC5a build?",
    "I had put synchronization code in the J2EECompoenntClasspathUpdater to handle file changes to the MANFIEST.MF file, but it seems to be broken right now.  I\u0027m investigating a fix.",
    "Created an attachment (id\u003d44829)\nFix for J2EEComponentClasspathUpdater\n\n",
    "These are 2 different problems. \n\n1. is about changes to the MANIFEST.MF file that don\u0027t update the classpath container (notice that changes might not come from an eclipse editor, thay may be comming from a cvs update or something like that)\n\n2. sometimes when I start eclipse the library containers are empty, even thought they were populated the last time I had opened the project. Closing and reopening the projects solves this problem.\n",
    "Today I noticed something else that might help.\n\nIf I expand the ear library sometimes the entries are displayed using the full path like:\nC:\\Documents and Settings\\PanosK\\workspace\\DVDStoreEar\\EarContent\\jboss-seam.jar\nC:\\Documents and Settings\\PanosK\\workspace\\DVDStoreEar\\EarContent\\jbpm-3.1.1.jar\n\nbut some times are displayed like:\njboss-seam.jar - C:\\Documents and Settings\\PanosK\\workspace\\DVDStoreEar\\EarContent\njbpm-3.1.1.jar - C:\\Documents and Settings\\PanosK\\workspace\\DVDStoreEar\\EarContent\n\n",
    "Created an attachment (id\u003d45639)\nscreenshot of the situation described in comment #6\n\nThe screenshot shows the situation described in #6.",
    "I just checked in the patch for better manifest change tracking.  It shouldn\u0027t matter how the maifest is changed now as long as eclipse knows about the change, the resource listener should pick it up and recompute the classpath.  As far as #2 in comment#5 I haven\u0027t seen this.  Please try the attached patch, and if you still see the problem with the container starting up empty please reopen.",
    "I will be glad to test it but I can\u0027t apply the patch myself because I use the WTP runtime and not the sdk. Can you please send me the jar file?",
    "Created an attachment (id\u003d45862)\nthe .class files\n\n",
    "Created an attachment (id\u003d45863)\npatched jst.j2ee jar\n\nThis is the patched jar file with the .class files from the previous attachement.  When you start eclipse be sure to include the -clean option so eclipse picks up these new .class files.",
    "Thanks for the patched jar file!\n\nI installed it in my eclipse installations and it seems to work correctly. i will my ming in cases it shows again.\n\nThanks for fixing this!",
    "Unfortunately it happened to me again, the good thing is that I noticed this error in my eclipse log file:\n\nWhile loading class \"org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathInitializer\", thread \"Worker-7\" timed out waiting (5000ms) for thread \"Worker-1\" to finish starting bundle \"org.eclipse.jst.j2ee\". To avoid deadlock, thread \"Worker-7\" is proceeding but \"org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathInitializer\" may not be fully initialized.\n\n\njava.lang.Exception: Generated exception.\nat org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.preFindLocalClass(EclipseLazyStarter.java:75)\nat org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:409)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:188)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:339)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:391)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:352)\nat org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)\nat java.lang.ClassLoader.loadClass(Unknown Source)\nat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:276)\nat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\nat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1245)\nat org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:147)\nat org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:759)\nat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)\nat org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)\nat org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer(JavaCore.java:1520)\nat org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(JavaCore.java:1493)\nat org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:1879)\nat org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1267)\nat org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1470)\nat org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2169)\nat org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2073)\nat org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchScope.java:107)\nat org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize(JavaWorkspaceScope.java:84)\nat org.eclipse.jdt.internal.core.search.JavaSearchScope.\u003cinit\u003e(JavaSearchScope.java:61)\nat org.eclipse.jdt.internal.core.search.JavaSearchScope.\u003cinit\u003e(JavaSearchScope.java:57)\nat org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.\u003cinit\u003e(JavaWorkspaceScope.java:29)\nat org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope(JavaModelManager.java:1705)\nat org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspaceScope(BasicSearchEngine.java:155)\nat org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope(SearchEngine.java:397)\nat org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:2855)\nat org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:35)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n",
    "Created an attachment (id\u003d46010)\nAnother patched Jar\n\nI fixed another bug related to the container not properly loading after a workbench startup last week and have included it into this patched jar (it also has the pevious patch).  Please try this patch and reopen if it still fails.  The exception you logged seems like another error; if you can consistently generate that exception or the above patch doesn\u0027t solve the problem, please send me a zipped copy of any workspace I could use for debugging.",
    "fixed.",
    "Using the patched file I can reproduce the error almost every anytime I open my workspace.",
    "Created an attachment (id\u003d46020)\nthe workspace\n\nuse this workspace to reproduce the problem.",
    "Created an attachment (id\u003d46089)\nPatched Jar\n\nThis patched jar replaces the previous one and contains another fix.  I was able to reproduce the error consistently using your attached workspace and some additional threading test code I wrote.  The bug I reproduced was multithreading related where the classpath container was being initialized by two threads simultaineously.  There is code in the container to ensure entries are not added more than once (in case a user manually added a manifest entry).  The check was to see what the classpath is on the project and strip out entries added via the previous version of the container.  The problem seems to be that from the time the entries were retreived to the time the previous container was retreived the previous container was removed; thus the current container thought it didn\u0027t need to readd those entries.  Hopefully this is the same problem you were running into; otherwise please reopen (as usual  :) )",
    "fixed",
    "Reopening us usual... :(\n\nI was not able to reproduce this with the workspace I sent you but I can with a more complex workspace.\n\nThe complex workspace is 26mb so i can\u0027t attach it. Contact me on my email if you want me to sent it to you.",
    "I did some more testing and I managed to reproduce the error with the workspace I sent you yesterday.\n\nI noticed that the error is always reproducable when the project explorer is not initialized when eclipse is starting (i use the default java perspective). When I open eclipse with the j2ee perspective everything works as expected.\n\n",
    "Created an attachment (id\u003d46324)\nfix for 1.5.1\n\nHere is the another fix for this; it was another trickier thread race condition.  Unfortunately, you won\u0027t be abloe to use this with 1.5 GM because several other dependent changes have been made.  You could try grabbing the latest 1.5.1 build and overlaying these .class files in org.eclipse.jst.j2ee as described above.  As usual please reopen if you see another failure.  Also, if you email me your larger workspace I\u0027ll give it a try with this fix.",
    "fixed (again)",
    "reopening because the most recent fix causes deadlocks.",
    "using the M-1.5.1-200607141912 build I can\u0027t reproduce the error any more. Is your last patch included in this build?",
    "That build does not contain the patch mentioned in comment 22.  I had to back that one out because of deadlock errors.  I can reproduce this using the workspace you attached; it is being caused by 2 JDT threads initializing the container simultaneously.  I\u0027m going to attempt reworking the patch I made for comment 22 but without the syncrhronized blocks.",
    "dropped another change to head which should be in this weeks I build.",
    "I tested again using M-1.5.1-200607211907 and I can\u0027t reproduce the problem anymore.\n\nthanks for fixing!",
    "closing."
  ],
  "commentCreationDates": [
    "2006-06-17T13:20:40+02:00",
    "2006-06-17T13:31:02+02:00",
    "2006-06-19T16:22:12+02:00",
    "2006-06-19T17:06:18+02:00",
    "2006-06-19T17:50:11+02:00",
    "2006-06-22T23:19:01+02:00",
    "2006-07-02T01:02:14+02:00",
    "2006-07-02T01:04:14+02:00",
    "2006-07-06T19:24:43+02:00",
    "2006-07-06T20:23:41+02:00",
    "2006-07-06T20:37:48+02:00",
    "2006-07-06T20:39:07+02:00",
    "2006-07-08T15:26:02+02:00",
    "2006-07-09T02:59:19+02:00",
    "2006-07-10T17:01:33+02:00",
    "2006-07-10T17:02:05+02:00",
    "2006-07-10T18:24:42+02:00",
    "2006-07-10T18:51:37+02:00",
    "2006-07-11T18:36:53+02:00",
    "2006-07-11T18:37:18+02:00",
    "2006-07-11T21:11:32+02:00",
    "2006-07-11T21:57:27+02:00",
    "2006-07-15T00:07:30+02:00",
    "2006-07-15T00:08:02+02:00",
    "2006-07-15T00:36:27+02:00",
    "2006-07-15T20:00:33+02:00",
    "2006-07-17T16:48:48+02:00",
    "2006-07-18T00:29:45+02:00",
    "2006-07-23T09:50:56+02:00",
    "2006-09-25T21:08:03+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "message": "Generated exception.",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.preFindLocalClass",
          "source": "EclipseLazyStarter.java:75"
        },
        {
          "method": "org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass",
          "source": "ClasspathManager.java:409"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass",
          "source": "DefaultClassLoader.java:188"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:339"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:391"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:352"
        },
        {
          "method": "org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass",
          "source": "DefaultClassLoader.java:83"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:276"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1245"
        },
        {
          "method": "org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension",
          "source": "RegistryStrategyOSGI.java:147"
        },
        {
          "method": "org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension",
          "source": "ExtensionRegistry.java:759"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:243"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:51"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer",
          "source": "JavaCore.java:1520"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer",
          "source": "JavaCore.java:1493"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer",
          "source": "JavaModelManager.java:1879"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer",
          "source": "JavaModelManager.java:1267"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:1470"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:2169"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:2073"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchScope.add",
          "source": "JavaSearchScope.java:107"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize",
          "source": "JavaWorkspaceScope.java:84"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchScope.\u003cinit\u003e",
          "source": "JavaSearchScope.java:61"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchScope.\u003cinit\u003e",
          "source": "JavaSearchScope.java:57"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.\u003cinit\u003e",
          "source": "JavaWorkspaceScope.java:29"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope",
          "source": "JavaModelManager.java:1705"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspaceScope",
          "source": "BasicSearchEngine.java:155"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope",
          "source": "SearchEngine.java:397"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.initializeAfterLoad",
          "source": "JavaCore.java:2855"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run",
          "source": "InitializeAfterLoadJob.java:35"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 13,
      "bugId": "147607",
      "date": "2006-07-09T02:59:19+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "critical"
    }
  ],
  "groupId": "147607",
  "bugId": "147607",
  "date": "2006-06-17T13:20:40+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "critical"
}