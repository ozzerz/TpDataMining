{
  "comments": [
    "The APT annotation discovery visitor walks the AST of a compilation unit, and when it visits an annotation, it makes the following calls:\n\n  ASTNode.resolveAnnotations(\n              scope, \n              new Annotation[] { annotation }, \n              this.currentBinding);\n  AnnotationBinding binding \u003d annotation.getCompilerAnnotation();\n\nWhen a class is given two annotations, only the first one seems to be resolved.  When the second one gets visited, the AnnotationBinding returned from getCompilerAnnotation() is null.\n\nTo repro: \n0. Ensure you have o.e.jdt.compiler.apt and o.e.jdt.compiler.apt.tests plug-ins in your workspace.\n1. Apply the soon-to-be-attached patch file to the o.e.jdt.compiler.apt.tests plug-in, in order to add the new test.  \n2. Right-click apttestprocessors.jardesc and create the processor jar.\n3. Execute CompilerAptTests as a JUnit Test.  (Not a JUnit Plug-in Test!)\n\nYou should see the appended stack trace:\n\njava.lang.NullPointerException\n\tat org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor.endVisit(AnnotationDiscoveryVisitor.java:102)\n\tat org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse(MarkerAnnotation.java:39)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1186)\n\tat org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:510)\n\tat org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl.\u003cinit\u003e(RoundEnvImpl.java:31)\n\tat org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.processAnnotations(BaseAnnotationProcessorManager.java:138)\n\tat org.eclipse.jdt.internal.compiler.Compiler.processAnnotations(Compiler.java:655)\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:373)\n\tat org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:3024)\n\tat org.eclipse.jdt.internal.compiler.tool.EclipseCompiler.call(EclipseCompiler.java:97)\n\tat org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$4.call(EclipseCompiler.java:335)\n\tat org.eclipse.jdt.compiler.apt.tests.CompilerAptTests.compileOneClass(CompilerAptTests.java:341)\n\tat org.eclipse.jdt.compiler.apt.tests.CompilerAptTests.testTwoAnnotations(CompilerAptTests.java:204)",
    "Created an attachment (id\u003d58509)\nTest case\n\n",
    "Created an attachment (id\u003d58523)\nProposed fix\n\nHere is a patch to allow you to make progress.\nI\u0027ll try to revisit it to resolve all annotations at once.",
    "Created an attachment (id\u003d58524)\nBetter patch\n\nThis patch looks much better. I can pass all existing tests including the attached test case. I like it more than the first one.\nAll annotations for a node are resolved at once. Since there is no need to visit all annotations one by one, this should be fine.\nFeel free to release it.",
    "Fixed and released for 3.3M6.\nAdded regression test in org.eclipse.jdt.compiler.apt.tests.CompilerAptTests#testTwoAnnotations",
    "Verified for 3.3 M6 using build I20070320-0010"
  ],
  "commentCreationDates": [
    "2007-02-08T00:44:05+01:00",
    "2007-02-08T00:44:47+01:00",
    "2007-02-08T03:59:18+01:00",
    "2007-02-08T04:34:26+01:00",
    "2007-02-08T15:01:07+01:00",
    "2007-03-21T16:02:37+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor.endVisit",
          "source": "AnnotationDiscoveryVisitor.java:102"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation.traverse",
          "source": "MarkerAnnotation.java:39"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse",
          "source": "TypeDeclaration.java:1186"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse",
          "source": "CompilationUnitDeclaration.java:510"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl.\u003cinit\u003e",
          "source": "RoundEnvImpl.java:31"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.processAnnotations",
          "source": "BaseAnnotationProcessorManager.java:138"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.processAnnotations",
          "source": "Compiler.java:655"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:373"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.batch.Main.performCompilation",
          "source": "Main.java:3024"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.tool.EclipseCompiler.call",
          "source": "EclipseCompiler.java:97"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$4.call",
          "source": "EclipseCompiler.java:335"
        },
        {
          "method": "org.eclipse.jdt.compiler.apt.tests.CompilerAptTests.compileOneClass",
          "source": "CompilerAptTests.java:341"
        },
        {
          "method": "org.eclipse.jdt.compiler.apt.tests.CompilerAptTests.testTwoAnnotations",
          "source": "CompilerAptTests.java:204"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "173376",
      "date": "2007-02-08T00:44:05+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "173376",
  "bugId": "173376",
  "date": "2007-02-08T00:44:05+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}