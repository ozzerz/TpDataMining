{
  "comments": [
    "Env: eclipse-gtk-3.1M3 linux\n\nJDT seems unable to handle the following short-cut if-else statement:\n\npublic class ShortcutIfElse {\n\n    public ShortcutIfElse() { }\n\t\n    public Integer[] getTypes() {\n        List\u003cInteger\u003e list \u003d new ArrayList\u003cInteger\u003e();\n        return list \u003d\u003d null \n            ? new Integer[0] \n            : list.toArray(new Integer[list.size()]);\n    }\n\n    public static void main(String[] args) {\n        Class clazz \u003d null;\n        try {\n            clazz \u003d Class.forName(\"ShortcutIfElse\");\n        } catch (Throwable e) {\n            e.printStackTrace();\n        }\n    }\n}\n\nException in thread \"main\" java.lang.VerifyError: (class: ShortcutIfElse,\nmethod: getTypes signature: ()[Ljava/lang/Integer;) Wrong return type in function\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:164)\n...",
    "We miss a checkcast after the toArray() call.\n\nWe generate:\n    29  invokeinterface [nargs : 2] #30 \u003cInterface method\njava/util/List.toArray([Ljava/lang/Object;)[Ljava/lang/Object;\u003e\n    34  areturn\n\ninstead of:\n\n    29  invokeinterface [nargs : 2] #6 \u003cInterface method\njava/util/List.toArray([Ljava/lang/Object;)[Ljava/lang/Object;\u003e\n    34  checkcast #7 [Ljava/lang/Integer;\n    37 areturn\n\n\n\n\n\n",
    "java.util.List.toArray(...) signature is:\n\u003cT\u003e T[] toArray(T[] a)\n\nSo we should implicitely generate a cast to T[].",
    "Created an attachment (id\u003d15711)\nApply on HEAD\n\nThis is a case where we optimized the implicit conversion of the false part.\nDoing this we didn\u0027t set the genericCast field and therefore there is no cast\ngenerated after the invokeinterface.",
    "A workaround is to reverse the condition.\n\n        return list !\u003d null \n            ? list.toArray(new Integer[list.size()])\n            : new Integer[0] ;\n\nworks fine without the patch.",
    "Patch looks good. We are also missing #computeConversion calls further down in case:\n\nif (scope.environment().options.sourceLevel \u003e\u003d ClassFileConstants.JDK1_5) {\n",
    "Added regression test: GenericTypeTest#test408.\nFixed",
    "Also added #test409 for other case mentionned in previous comment, corresponding\nto scenario:\n\nimport java.util.*;\npublic class X {\n\n    public Number getTypes() {\n        List\u003cInteger\u003e list \u003d new ArrayList\u003cInteger\u003e();\n        return list \u003d\u003d null \n            ? Float.valueOf(0) \n            : list.get(0);\n    }\n\n    public static void main(String[] args) {\n        Class clazz \u003d null;\n        try {\n            clazz \u003d Class.forName(\"X\");\n        } catch (Throwable e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "*** Bug 80605 has been marked as a duplicate of this bug. ***",
    "Verified in 200412140800"
  ],
  "commentCreationDates": [
    "2004-11-06T01:42:07+01:00",
    "2004-11-06T15:04:44+01:00",
    "2004-11-06T15:06:34+01:00",
    "2004-11-06T15:22:47+01:00",
    "2004-11-06T15:24:20+01:00",
    "2004-11-10T11:22:19+01:00",
    "2004-11-10T11:34:05+01:00",
    "2004-11-10T11:59:18+01:00",
    "2004-12-09T16:49:23+01:00",
    "2004-12-14T19:51:33+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: ShortcutIfElse, method: getTypes signature: ()[Ljava/lang/Integer;) Wrong return type in function",
      "elements": [
        {
          "method": "java.lang.Class.forName0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Class.java:164"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78008",
      "date": "2004-11-06T01:42:07+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "78008",
  "bugId": "78008",
  "date": "2004-11-06T01:42:07+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}