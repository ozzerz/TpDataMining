{
  "comments": [
    "I have a workspace that has the Java compliance level set to 5.0.  Within this workspace are some plug-in projects that have set a project specific Java compliance level of 1.4 (these projects need to be able to run with either JDK).\n\nThis workspace also contains a feature project and an Eclipse update site project.\n\nThe Eclipse update site project creates the feature and plug-in jar files which are exported to a .tgz file.  The .tgz file is then installed into Eclipse 3.1.2/WTP 1.0.2 so the plug-ins can be used.\n\nIf the Eclipse where this has been installed is run with a JDK 1.5 -vm command line argument all works fine.  \n\nIf the Eclipse where this has been installed is run with a JDK 1.4 -vm command line argument, I get the following stack errors when trying to invoke the plug-in:\n\n!SESSION 2006-06-22 10:01:42.412 -----------------------------------------------\neclipse.buildId\u003dM20060118-1600\njava.version\u003d1.4.2_11\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003den_US\nCommand-line arguments:  -os win32 -ws win32 -arch x86 -clean\n\n!ENTRY org.eclipse.osgi 2006-06-22 10:03:11.240\n!MESSAGE An error occurred while automatically activating bundle org.objectweb.jonas.wtp.adapter (346).\n!STACK 0\norg.osgi.framework.BundleException: The activator org.objectweb.jonas.wtp.adapter.JonasWtpAdapterPlugin for bundle org.objectweb.jonas.wtp.adapter is invalid\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:149)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:965)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:316)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:264)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:116)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:337)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:389)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)\n\tat org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:275)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1248)\n\tat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:152)\n\tat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:142)\n\tat org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:129)\n\tat org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:48)\n\tat org.eclipse.wst.server.core.internal.ServerType.createServerDelegate(ServerType.java:83)\n\tat org.eclipse.wst.server.core.internal.ServerWorkingCopy.getWorkingCopyDelegate(ServerWorkingCopy.java:258)\n\tat org.eclipse.wst.server.core.internal.ServerWorkingCopy.setDefaults(ServerWorkingCopy.java:503)\n\tat org.eclipse.wst.server.core.internal.ServerType.createServer(ServerType.java:192)\n\tat org.eclipse.wst.server.ui.internal.wizard.page.ElementCreationCache.getServer(ElementCreationCache.java:73)\n\tat org.eclipse.wst.server.ui.internal.wizard.page.NewManualServerComposite$4.run(NewManualServerComposite.java:217)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)\nCaused by: java.lang.UnsupportedClassVersionError: org/objectweb/jonas/wtp/adapter/JonasWtpAdapterPlugin (Unsupported major.minor version 49.0)\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:539)\n\tat org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.defineClass(DefaultClassLoader.java:370)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass(EclipseClassLoader.java:233)\n\tat org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClassImpl(DefaultClassLoader.java:343)\n\tat org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClass(DefaultClassLoader.java:235)\n\tat org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.findLocalClass(AbstractClassLoader.java:183)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.basicFindLocalClass(EclipseClassLoader.java:141)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:82)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:337)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:389)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)\n\tat org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:235)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass(BundleLoader.java:275)\n\tat org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:227)\n\tat org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:142)\n\t... 23 more\nRoot exception:\njava.lang.UnsupportedClassVersionError: org/objectweb/jonas/wtp/adapter/JonasWtpAdapterPlugin (Unsupported major.minor version 49.0)\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:539)\n\n\n... (and lots more)\n\n\nIf I change the workspace Java compliance level to 1.4 then when I build and install the plug-ins they work correctly with both JDK\u0027s.",
    "I\u0027m using Eclipse 3.2 and have a similar problem.\n\nThe java compliance for the workspace is set to 1.5.\nThe compliance for my plugin project is set to 1.4.\n\nIf I do a clean on the project, then check the class files in /bin, all are compiled w/ 1.4 compliance.\n\nIf I launch the plugin using pde launch, the classes on the plugin classpath are indeed 1.4 compliance (since they come from /bin)\n\nHowever, if I export the plugin using the export wizard the class files that are packed into the library.jar for the plugin are 1.5.  As a result, the plugin classes cannot be loaded w/ jdk 1.4.  It appears that when the plugin is exported, the export wizard uses the global workspace settings, and ignores the project settings.\n\nI tried using the new 3.2 manifest directive:\nBundle-RequiredExecutionEnvironment: J2SE-1.4\n\nbut this caused a problem when loading the plugin in Eclipse 3.1.\n\n",
    "Created an attachment (id\u003d47786)\nSample project that shows project-local compliance and incorrect generated build.xml\n\nI guess I have the same problem. Using Eclipse 3.2.\n\nI\u0027m using the default compliance settings in my workspace.\nI have one plugin with project-specific options set to 1.4.\nLocally, everything builds fine.\nBut the nightly builds, which are done using PDE build / ant, cannot compile the class files (they don\u0027t understand the \"assert\" keyword).\n\nTo test this, I selected the \"Manifest.mf\" file and chose \"PDE Tools \u003e Generate ant build file\". In the generated build.xml file, I see compliance settings\n\t\u003cproperty name\u003d\"javacSource\" value\u003d\"1.3\"/\u003e\n\t\u003cproperty name\u003d\"javacTarget\" value\u003d\"1.2\"/\u003e\n\nI\u0027m setting severity to \"major\" since I do not understand how I could make my nightly builds eat the assert keyword properly.\n\nFind attached my project, including the proper .settings directory and the incorrect generated build.xml file.",
    "Hmm... Just noticed that this is probably a duplicate of bug 134855.\n\nThere, it\u0027s explained that the headless build has no access to the project properties (and update site builds are headless).\n\nBut the headless build should evaluate the Bundle-RequiredExecutionEnvironment setting from Manifest.mf, which I have set correctly. So IMHO, there are two possibilities for a bug:\n\n1) It\u0027s by design that headless build cannot evaluate Manifest.mf properly and \n   only looks at build.properties. Then, I\u0027d expect the UI where I set the\n   properties to automatically update the build.properties file. Note that I\n   have made all changes through the UI only.\n\n2) Headless build should be able to evaluate Manifest.mf. The JVM that I\u0027m\n   building on is IBM-5.0, and my RequiredExecutionEnvironment is J2SE-1.4.\n   Perhaps the headless build didn\u0027t put the settings right because there \n   was no exact match?\n\nI\u0027d appreciate if someone from the PDE build team could look at my attachment and come up with an explanation.",
    "By default J2SE-1.4 maps to 1.3/1.2 for source/target levels.  To override this for assert, set the properties javacSource\u003d1.4 and javacTarget\u003d1.4 in your bundle\u0027s build.properties file.\n\nThe headless build does evaluate the Bundle-RequiredExecutionEnvironment header.  I have noticed occasionally that this doesn\u0027t work for some reason, I have raised bug 153778 to figure this out.\n\nWhen setting the execution environment, you should expect your build.xml to contain something like the following:\n\t\u003ccondition property\u003d\"bundleBootClasspath\" value\u003d\"${J2SE-1.4}\"\u003e\n\t\t\u003cisset property\u003d\"J2SE-1.4\"/\u003e\n\t\u003c/condition\u003e\n\t\u003ccondition property\u003d\"bundleJavacSource\" value\u003d\"1.3\"\u003e\n\t\t\u003cisset property\u003d\"J2SE-1.4\"/\u003e\n\t\u003c/condition\u003e\n\t\u003ccondition property\u003d\"bundleJavacTarget\" value\u003d\"1.2\"\u003e\n\t\t\u003cisset property\u003d\"J2SE-1.4\"/\u003e\n\t\u003c/condition\u003e\nAt build time, the property J2SE-1.4 is checked.  When using the UI, this property should be automatically set based on your preferences (See Java-\u003einstalled JREs-\u003eExecution Environments).   In a headless setup, this property is expect to be set in the builder configuration build.properties.\n\nSee \n\n",
    "Marking as a duplicate.  This may initially have been a setup issue, which my previous comment addresses.  See also http://help.eclipse.org/help32/index.jsp?topic\u003d/org.eclipse.pde.doc.user/guide/tasks/pde_compilation_env.htm\n\nThere is a case where there is an actual bug, which is 153778\n\n*** This bug has been marked as a duplicate of 153778 ***",
    "(In reply to comment #5)\n\u003e Marking as a duplicate.  This may initially have been a setup issue, which my\n\u003e previous comment addresses.\n\nMy point is, that when I edit project-specific preferences in the JDT GUI, and change the compiler compliance settings to 1.4-with-assert, I\u0027d expect the build.properties file to be updated automatically. Otherwise it\u0027s just too easy to break the headless (or update site) build with something that seems to work fine (as long as no headless build is done).\n\nPerhaps that would be worth a separate enhancement request?",
    "Yes please.  That kind of enhancement would be on PDE/UI.",
    "Please reference the Feature Request here so I can vote on it.",
    "Enhancement request created as bug 154292"
  ],
  "commentCreationDates": [
    "2006-06-22T19:46:45+02:00",
    "2006-08-03T22:37:10+02:00",
    "2006-08-11T20:02:27+02:00",
    "2006-08-11T20:13:28+02:00",
    "2006-08-14T18:12:18+02:00",
    "2006-08-16T20:41:53+02:00",
    "2006-08-17T11:32:38+02:00",
    "2006-08-17T16:32:27+02:00",
    "2006-08-17T16:38:18+02:00",
    "2006-08-17T22:11:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "The activator org.objectweb.jonas.wtp.adapter.JonasWtpAdapterPlugin for bundle org.objectweb.jonas.wtp.adapter is invalid",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator",
          "source": "AbstractBundle.java:149"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.start",
          "source": "BundleContextImpl.java:965"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.startWorker",
          "source": "BundleHost.java:316"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.start",
          "source": "AbstractBundle.java:264"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass",
          "source": "EclipseClassLoader.java:116"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:337"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:389"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:350"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:78"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:235"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
          "source": "BundleLoader.java:275"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
          "source": "BundleHost.java:227"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass",
          "source": "AbstractBundle.java:1248"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:152"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:142"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension",
          "source": "ConfigurationElement.java:129"
        },
        {
          "method": "org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension",
          "source": "ConfigurationElementHandle.java:48"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ServerType.createServerDelegate",
          "source": "ServerType.java:83"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ServerWorkingCopy.getWorkingCopyDelegate",
          "source": "ServerWorkingCopy.java:258"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ServerWorkingCopy.setDefaults",
          "source": "ServerWorkingCopy.java:503"
        },
        {
          "method": "org.eclipse.wst.server.core.internal.ServerType.createServer",
          "source": "ServerType.java:192"
        },
        {
          "method": "org.eclipse.wst.server.ui.internal.wizard.page.ElementCreationCache.getServer",
          "source": "ElementCreationCache.java:73"
        },
        {
          "method": "org.eclipse.wst.server.ui.internal.wizard.page.NewManualServerComposite$4.run",
          "source": "NewManualServerComposite.java:217"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:113"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.UnsupportedClassVersionError",
        "message": "org/objectweb/jonas/wtp/adapter/JonasWtpAdapterPlugin (Unsupported major.minor version 49.0)",
        "elements": [
          {
            "method": "java.lang.ClassLoader.defineClass0",
            "source": "Native Method"
          },
          {
            "method": "java.lang.ClassLoader.defineClass",
            "source": "ClassLoader.java:539"
          },
          {
            "method": "org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.defineClass",
            "source": "DefaultClassLoader.java:370"
          },
          {
            "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass",
            "source": "EclipseClassLoader.java:233"
          },
          {
            "method": "org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClassImpl",
            "source": "DefaultClassLoader.java:343"
          },
          {
            "method": "org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClass",
            "source": "DefaultClassLoader.java:235"
          },
          {
            "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.findLocalClass",
            "source": "AbstractClassLoader.java:183"
          },
          {
            "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.basicFindLocalClass",
            "source": "EclipseClassLoader.java:141"
          },
          {
            "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass",
            "source": "EclipseClassLoader.java:82"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
            "source": "BundleLoader.java:337"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
            "source": "BundleLoader.java:389"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
            "source": "BundleLoader.java:350"
          },
          {
            "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
            "source": "AbstractClassLoader.java:78"
          },
          {
            "method": "java.lang.ClassLoader.loadClass",
            "source": "ClassLoader.java:235"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.loadClass",
            "source": "BundleLoader.java:275"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.BundleHost.loadClass",
            "source": "BundleHost.java:227"
          },
          {
            "method": "org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator",
            "source": "AbstractBundle.java:142"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "148260",
      "duplicateId": "153778",
      "date": "2006-06-22T19:46:45+02:00",
      "product": "PDE",
      "component": "Build",
      "severity": "major"
    },
    {
      "exceptionType": "java.lang.UnsupportedClassVersionError",
      "message": "org/objectweb/jonas/wtp/adapter/JonasWtpAdapterPlugin (Unsupported major.minor version 49.0)",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:539"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "148260",
      "duplicateId": "153778",
      "date": "2006-06-22T19:46:45+02:00",
      "product": "PDE",
      "component": "Build",
      "severity": "major"
    }
  ],
  "groupId": "153778",
  "bugId": "148260",
  "duplicateId": "153778",
  "date": "2006-06-22T19:46:45+02:00",
  "product": "PDE",
  "component": "Build",
  "severity": "major"
}