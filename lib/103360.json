{
  "comments": [
    "Eclipse 3.1 + cdt 3.0 Build I200507111111\n\nI was using F3 on class in a cpp project and an error log was generated as \nattached below. Couldn\u0027t reproduce it. I create a bug report anyway in case \nsomeone can fix it by this error log.\n\nError 2005-07-11 14:16:19.390 Error\njava.lang.reflect.InvocationTargetException\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:327)\n\tat org.eclipse.jface.dialogs.ProgressMonitorDialog.run\n(ProgressMonitorDialog.java:447)\n\tat \norg.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction.run\n(OpenDeclarationsAction.java:218)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:996)\n\tat \norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:538)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2\n(ActionContributionItem.java:488)\n\tat org.eclipse.jface.action.ActionContributionItem$5.handleEvent\n(ActionContributionItem.java:400)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:367)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:103)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:376)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:163)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:278)\n\tat org.eclipse.core.launcher.Main.run(Main.java:973)\n\tat org.eclipse.core.launcher.Main.main(Main.java:948)\nCaused by: java.lang.NullPointerException\n\tat org.eclipse.cdt.core.search.SearchEngine.createSearchPattern\n(SearchEngine.java:155)\n\tat org.eclipse.cdt.core.search.DOMSearchUtil.getMatchesFromSearchEngine\n(DOMSearchUtil.java:109)\n\tat \norg.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction$1.run\n(OpenDeclarationsAction.java:195)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:113)",
    "Created an attachment (id\u003d24560)\ncheck for this PR\n\nTaking a look at TextSelection#getText() it looks like null is returned if the\nIDocument is null or invoking IDocument#get(int, int) throws a\nBadLocationException.  So the best we can do for now is check for null and make\nit a blank string if found.",
    "(In reply to comment #1)\n\u003e Created an attachment (id\u003d24560) [edit]\n\u003e check for this PR\n\u003e \n\u003e Taking a look at TextSelection#getText() it looks like null is returned if the\n\u003e IDocument is null or invoking IDocument#get(int, int) throws a\n\u003e BadLocationException.  So the best we can do for now is check for null and make\n\u003e it a blank string if found.\n\nIs this the right place to fix this ?\nIt looks like you are putting a bandAid on this 8-)\nThe clients should not be calling this method with\nincorrect data in the first place, i.e. the are passing a null class\nas the StringPattern ?  One could have done this :\n\npublic static ICSearchPattern createSearchPattern( String stringPattern, \n     SearchFor searchFor, LimitTo limitTo, boolean isCaseSensitive){\n\n Assert.isNotNull(stringPattern);\n...\n}\n\nmy 0.02 cents 8-)",
    "Marking exceptions as target 3.0.",
    "\u003e The clients should not be calling this method with\n\u003e incorrect data in the first place\n\nThat\u0027s true, but it looks like that is the case.  Albeit a non-reproducable \ncase.  I can\u0027t figure out how the TextSelection#getText() would ever return \nnull since the IDocument should never be null and the client should be limited \nto within proper bounds so that IDocument#get(int, int) does not throw a \nBadLocationException.\n\nThe attached patch is a bandAid because I can\u0027t reproduce the bug to determine \nwhere the proper fix needs to be.  The bandAid is a personal one since I prefer \nto let the feature complete unsuccessfully (return 0 results) rather than \nthrowing an Exception to the user.\n\nEither solution would make a good bandAid.\n",
    "How does a bug that cannot be deterministically reproduced get set to blocker?",
    "(In reply to comment #4)\n\u003e \u003e The clients should not be calling this method with\n\u003e \u003e incorrect data in the first place\n\u003e \n\u003e That\u0027s true, but it looks like that is the case.  Albeit a non-reproducable \n\u003e case.  I can\u0027t figure out how the TextSelection#getText() would ever return \n\u003e null since the IDocument should never be null and the client should be limited \n\u003e to within proper bounds so that IDocument#get(int, int) does not throw a \n\u003e BadLocationException.\n\u003e \n\u003e The attached patch is a bandAid because I can\u0027t reproduce the bug to determine \n\u003e where the proper fix needs to be.  The bandAid is a personal one since I prefer \n\u003e to let the feature complete unsuccessfully (return 0 results) rather than \n\u003e throwing an Exception to the user.\n\u003e \n\u003e Either solution would make a good bandAid.\n\u003e \n\n\nCan the reporter give a reproducable case,\nthis may just be a side-effect of another problem, like\nrunning out-of-mem, etc .. in this case we are fixing the wrong thing 8-)",
    "Since this seems to be unreproducable at the moment, I\u0027ll remove it from the 3.0\nlist.",
    "Found a reproducable way: open any file in c-editor, and click on empty space, \ndo ctrl-G.",
    "*** Bug 105932 has been marked as a duplicate of this bug. ***",
    "It ends up that the root cause of this is also caused by 105220.  See that PR \nfor the patch.\n\nBecause of the bad if statement, DOMSearchUtil.getMatchesFromSearchEngine() can \nstill be performed with a null searchPattern.\n\ni.e. \ncurrently:\nif ((searchPattern !\u003d null || matches \u003d\u003d null || matches.size() \u003d\u003d 0) \u0026\u0026 \n(foundNames \u003d\u003d null || foundNames.length \u003d\u003d 0)) {\n\npermits:\nsearchPattern \u003d\u003d null\nmatches \u003d\u003d null\nfoundNames\u003d\u003dnull\n\nthe fix for 105220:\nif (searchPattern !\u003d null \u0026\u0026 (matches \u003d\u003d null || matches.size() \u003d\u003d 0) \u0026\u0026 \n(foundNames \u003d\u003d null || foundNames.length \u003d\u003d 0)) {\n\ndoes not permit searchPattern \u003d\u003d null, in which case the additional search will \nnot be performed.",
    "I tried this on my local build and still got same error log. Looks like the \nfix on 105220 doesn\u0027t solve this bug although ctrl-g did not generate error \nanymore. \n\nOn any blank space in editor, try Open Definition or Open Declaration, you \nwill get same error except one has search.actions.OpenDeclarationsAction \nanother one has search.actions.OpenDefinitionsAction.\n\nIs it possible to disable those search functions( F3, ctrl-F3, ctrl-G, etc.) \nwhen cursor is at empty space?",
    "Created an attachment (id\u003d25827)\ndo not perform F3/Ctrl+F3 if the selected text is null\n\nYou\u0027re right.  This should have been done for F3/Ctrl+F3 as well.  ",
    "The code that threw the exception no longer exists in 4.0."
  ],
  "commentCreationDates": [
    "2005-07-11T20:32:44+02:00",
    "2005-07-11T21:32:43+02:00",
    "2005-07-11T22:19:03+02:00",
    "2005-07-15T20:55:34+02:00",
    "2005-07-18T20:49:21+02:00",
    "2005-07-18T21:11:21+02:00",
    "2005-07-19T03:29:50+02:00",
    "2005-07-21T17:21:11+02:00",
    "2005-08-03T17:50:51+02:00",
    "2005-08-03T17:51:53+02:00",
    "2005-08-03T19:46:21+02:00",
    "2005-08-05T22:18:20+02:00",
    "2005-08-08T15:10:58+02:00",
    "2007-06-19T16:06:17+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.reflect.InvocationTargetException",
      "elements": [
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:327"
        },
        {
          "method": "org.eclipse.jface.dialogs.ProgressMonitorDialog.run",
          "source": "ProgressMonitorDialog.java:447"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction.run",
          "source": "OpenDeclarationsAction.java:218"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:996"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:538"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:488"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:400"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:843"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:3080"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2713"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1699"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1663"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:367"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:103"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:376"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:163"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:334"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:278"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:973"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:948"
        }
      ],
      "causedBy": {
        "exceptionType": "java.lang.NullPointerException",
        "elements": [
          {
            "method": "org.eclipse.cdt.core.search.SearchEngine.createSearchPattern",
            "source": "SearchEngine.java:155"
          },
          {
            "method": "org.eclipse.cdt.core.search.DOMSearchUtil.getMatchesFromSearchEngine",
            "source": "DOMSearchUtil.java:109"
          },
          {
            "method": "org.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction$1.run",
            "source": "OpenDeclarationsAction.java:195"
          },
          {
            "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
            "source": "ModalContext.java:113"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "103360",
      "date": "2005-07-11T20:32:44+02:00",
      "product": "CDT",
      "component": "cdt-core",
      "severity": "major"
    }
  ],
  "groupId": "103360",
  "bugId": "103360",
  "date": "2005-07-11T20:32:44+02:00",
  "product": "CDT",
  "component": "cdt-core",
  "severity": "major"
}