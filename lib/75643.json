{
  "comments": [
    "I added a detail formatter as follows for Hastable, trying to come up with a \nworkaround for bug 75413 for DJ.\n\nint max \u003d size() - 1;\nStringBuffer buf \u003d new StringBuffer();\nIterator it \u003d entrySet().iterator();\n\nbuf.append(\"{\");\nfor (int i \u003d 0; i \u003c\u003d max; i++) {\n    Map.Entry e \u003d (Map.Entry) (it.next());\n        Object key \u003d e.getKey();\n        Object value \u003d e.getValue();\n        buf.append((key   \u003d\u003d this ? \"(this Map)\" : key) + \"\u003d\" +\n                   (value \u003d\u003d this ? \"(this Map)\" : value));\n\n    if (i \u003c max)\n\tbuf.append(\",\\n\");\n}\nbuf.append(\"}\");\nreturn buf.toString();\n\nWhen the detail formatter is invoked, I get a classcast exception.\n\n!ENTRY org.eclipse.jdt.debug 4 120 Oct 05, 2004 09:13:10.703\n!MESSAGE Exception processing async thread queue\n!SUBENTRY 1 org.eclipse.jdt.debug 4 120 Oct 05, 2004 09:13:10.703\n!MESSAGE Exception processing async thread queue\n!STACK 0\njava.lang.ClassCastException: \norg/eclipse/jdt/internal/debug/core/model/JDIObjectValue incompatible with \norg/eclipse/jdt/debug/core/IJavaPrimitiveValue\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.instructions.ConditionalJump.execute\n(ConditionalJump.java:27)\n\tat org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute\n(Interpreter.java:50)\n\tat org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1\n$EvaluationRunnable.run(ASTEvaluationEngine.java:330)\n\tat org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation\n(JDIThread.java:659)\n\tat \norg.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable\n.run(ASTEvaluationEngine.java:364)\n\tat org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run\n(JDIThread.java:2511)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "Fixed.\nThere was a problem when trying to evaluate an \u0027if\u0027 statement, with as \u0027then\u0027\nbody an expression/statement that returns an value, if the \u0027then\u0027 body was not\ndelimited by \u0027{\u0027 \u0027}\u0027.\nfor example:\n\nif (true)\n    toString();\n\n\nWhen a statement is an method call that returns an value, a pop instruction is\nadded to remove the result of the method call from the execution stack.\nTo correctly create an \u0027if\u0027 statement, we need to know the size (in number of\ninstruction) of each part of the \u0027if\u0027 (condition, then body, else body).\nBut the pop instruction were not correctly created, and always returned a size\nof 1, instead of 1 + the size of the operation which created the value to be\nremoved from the stack.\nIn result, the \u0027if\u0027 were not correctly created, the jumps were not added at the\nright positions.\n\nPop - modified so it can be correctly initialized, and then return the correct\ninformation.\nASTInstructionCompiler - updated to correctly create the pop instruction. Added\nan helper method.",
    "The walkaround is to add \u0027{\u0027 \u0027}\u0027 around the then/else body of the if.\n\nPlease verify, Darin W.",
    "Verified.",
    "*** Bug 88064 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2004-10-05T16:25:24+02:00",
    "2004-10-05T22:48:18+02:00",
    "2004-10-05T22:49:36+02:00",
    "2004-10-13T20:10:24+02:00",
    "2005-03-15T22:14:45+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassCastException",
      "message": "org/eclipse/jdt/internal/debug/core/model/JDIObjectValue incompatible with  org/eclipse/jdt/debug/core/IJavaPrimitiveValue",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.instructions.ConditionalJump.execute",
          "source": "ConditionalJump.java:27"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute",
          "source": "Interpreter.java:50"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1$EvaluationRunnable.run",
          "source": "ASTEvaluationEngine.java:330"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation",
          "source": "JDIThread.java:659"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable.run",
          "source": "ASTEvaluationEngine.java:364"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run",
          "source": "JDIThread.java:2511"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "75643",
      "date": "2004-10-05T16:25:24+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "75643",
  "bugId": "75643",
  "date": "2004-10-05T16:25:24+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}