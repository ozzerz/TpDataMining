{
  "comments": [
    "--- Dump Properties ---\nDump file: ajcore.20051122.152749.326.txt\nDump reason: org.aspectj.weaver.BCException\nDump on exception: true\nDump at exit condition: abort\n---- Exception Information ---\norg.aspectj.weaver.BCException: bad resolve of void org.apache.log4j.Category.log(java.lang.String, org.apache.log4j.Level, java.lang.Object, java.lang.Throwable)\n\tat org.aspectj.weaver.World.getModifiers(World.java:216)\n\tat org.aspectj.weaver.Member.getModifiers(Member.java:406)\n\tat org.aspectj.weaver.patterns.KindedPointcut.warnOnConfusingSig(KindedPointcut.java:109)\n\tat org.aspectj.weaver.patterns.KindedPointcut.match(KindedPointcut.java:69)\n\tat org.aspectj.weaver.patterns.OrPointcut.match(OrPointcut.java:44)\n\tat org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:43)\n\tat org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:43)\n\tat org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:62)\n\tat org.aspectj.weaver.Advice.match(Advice.java:91)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1126)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction(BcelClassWeaver.java:1115)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:987)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:827)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:348)\n\tat org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:83)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:742)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:707)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:634)\n\tat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:577)\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:243)\n\tat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:118)\n\tat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:383)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:680)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:168)\n\tat org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)\n\tat org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:109)\n\tat org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)\n\tat org.aspectj.tools.ajc.Main.run(Main.java:291)",
    "Could you provide some details of the aspect that you were weaving with at the time please?\n\nThe compiler was trying to put out a message of the form \"Did not match at join point \u003cblah\u003e because declaring type is XXX, use this(YYY) if match desired\" if that helps you pin it down any.\n\nThanks, Adrian.",
    "I couldn\u0027t find the compiler message, \"Did not match join point, ....\"  It\u0027s not in the core dump or the message I get when I run ajc.\n\nI also attached my common logging jar.\n\nMy point cut basically looking at log4J logging method and does something with it.\n\nThanks.\n\n pointcut actionLog4j(Object message):\n\t        (call(void org.apache.log4j.Logger.warn(Object))  ||\n\t        call(void org.apache.log4j.Logger.debug(Object)) ||\n\t        call (void org.apache.log4j.Logger.info(Object)) ||\n\t        call (void org.apache.log4j.Logger.error(Object))  ||\n\t        call (void org.apache.log4j.Logger.fatal(Object)))\n\t        \u0026\u0026 args(message);\n\n\tvoid around(Object message) : actionLog4j(message) {\n//do something here\nproceed(message);\n}",
    "Created an attachment (id\u003d30497)\njar that causes compiler crash\n\n",
    "I didn\u0027t reproduce exactly the same failure as you are seeing, but I did get one very similar at the same point in the code. The problem (that I am seeing) was caused by a commons-logging.jar containing code compiled against a version of log4j.jar that doesn\u0027t exactly match the one on my classpath. In particular, part of the commons-logging code (that obviously never gets executed at runtime) calls a method on a Log4j type that doesn\u0027t exist. The compiler fell over when trying to put out an error message. It now copes with the missing method. When a build comes through with this fix in I\u0027ll ask you to try again if that\u0027s ok and make sure that it solves the problem in your environment too.\n\nAs an added bonus, the \"cantFindType\" messages that come out when you weave into commons-logging.jar (for reasons such as those described above) are by default error messages that stops you in your tracks even though in this case you could safely ignore them. I\u0027ve made them into lint messages so that you can control the severity (in this case using e.g. -Xlint:ignore) and thus still get useful results in the absence of missing types.",
    "build now available from the aspectj downloads page - please could you test out this fix in your environment and let me know what happens? \n\nThanks, A.",
    "I\u0027m moving this to \"fixed\" as I\u0027m pretty confident that the changes we put in should have resolved this issue. However, if you do find that there is still an issue in the latest builds please reopen this report.\n\nThanks, Adrian."
  ],
  "commentCreationDates": [
    "2005-11-23T01:57:51+01:00",
    "2005-11-23T09:58:00+01:00",
    "2005-11-23T18:28:09+01:00",
    "2005-11-23T18:30:18+01:00",
    "2005-11-24T15:15:02+01:00",
    "2005-11-24T20:50:18+01:00",
    "2005-11-29T20:18:58+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "message": "bad resolve of void org.apache.log4j.Category.log(java.lang.String, org.apache.log4j.Level, java.lang.Object, java.lang.Throwable)",
      "elements": [
        {
          "method": "org.aspectj.weaver.World.getModifiers",
          "source": "World.java:216"
        },
        {
          "method": "org.aspectj.weaver.Member.getModifiers",
          "source": "Member.java:406"
        },
        {
          "method": "org.aspectj.weaver.patterns.KindedPointcut.warnOnConfusingSig",
          "source": "KindedPointcut.java:109"
        },
        {
          "method": "org.aspectj.weaver.patterns.KindedPointcut.match",
          "source": "KindedPointcut.java:69"
        },
        {
          "method": "org.aspectj.weaver.patterns.OrPointcut.match",
          "source": "OrPointcut.java:44"
        },
        {
          "method": "org.aspectj.weaver.patterns.AndPointcut.match",
          "source": "AndPointcut.java:43"
        },
        {
          "method": "org.aspectj.weaver.patterns.AndPointcut.match",
          "source": "AndPointcut.java:43"
        },
        {
          "method": "org.aspectj.weaver.ShadowMunger.match",
          "source": "ShadowMunger.java:62"
        },
        {
          "method": "org.aspectj.weaver.Advice.match",
          "source": "Advice.java:91"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.match",
          "source": "BcelClassWeaver.java:1126"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction",
          "source": "BcelClassWeaver.java:1115"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.match",
          "source": "BcelClassWeaver.java:987"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.match",
          "source": "BcelClassWeaver.java:827"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:348"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelClassWeaver.weave",
          "source": "BcelClassWeaver.java:83"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:742"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump",
          "source": "BcelWeaver.java:707"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify",
          "source": "BcelWeaver.java:634"
        },
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:577"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:243"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:118"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:383"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:680"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:168"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild",
          "source": "AjBuildManager.java:102"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.doCommand",
          "source": "AjdtCommand.java:109"
        },
        {
          "method": "org.aspectj.ajdt.ajc.AjdtCommand.runCommand",
          "source": "AjdtCommand.java:60"
        },
        {
          "method": "org.aspectj.tools.ajc.Main.run",
          "source": "Main.java:291"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "117614",
      "date": "2005-11-23T01:57:51+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "117614",
  "bugId": "117614",
  "date": "2005-11-23T01:57:51+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}