{
  "comments": [
    "The following method was added in RC2...\n\n/**\n\t * If there is an adapter registered against the subclass of\n\t * MultiPageEditorPart return that. Otherwise, delegate to the internal\n\t * editor.\n\t * \n\t * @see org.eclipse.ui.part.WorkbenchPart#getAdapter(java.lang.Class)\n\t */\n\tpublic Object getAdapter(Class adapter) {\n\t\tObject result \u003d super.getAdapter(adapter);\n\t\tif (result \u003d\u003d null \u0026\u0026 getActiveEditor() !\u003d null) {\n\t\t\tresult \u003d getActiveEditor().getAdapter(adapter);\n\t\t}\n\t\treturn result;\n\t}\n\nWe have subclasses that override this method and end up calling super.getAdapter(Class adapter).  Problem is the activeEditor is one of our subclasses.... so an endless loop....",
    "How can your inner editor be the same as your outer editor?\n\nPW\n",
    "Many of our editors pre-date the inner and outer editor concept, and \"getActiveEditor()\" will return \"this\".  I know I\u0027m not the only case with this problem....   Maybe you can make this check first?   ",
    "So the short answer is you are not allowed to override that method.  I checked all the way back to 2.1.3, and it clearly states:\n/**\n * Returns the active nested editor if there is one.\n * \u003cp\u003e\n * Subclasses should not override this method\n * \u003c/p\u003e\n * \n * @return the active nested editor, or \u003ccode\u003enull\u003c/code\u003e if none\n */\n\n\nHowever, I think adding the check for \"this\" is extremely low risk and I\u0027m willing to do it for RC2 if McQ approves.\n\nPW\n",
    "Thanks,\n\nWe actually are not overriding getActiveEditor()... I haven\u0027t checked to see why its passing back the same instance....",
    "Actually, that causes me some concern.  How does the outer editor become an inner editor, unless somewhere the outer editor code is doing something like:\n\naddPage(this, getEditorInput());\n\nI can\u0027t imagine that leading to anything but trouble, as it implies the outer editor would be recreated as an inner editor (... recreated as an inner editor).\n\nDo you have any errors in your error log?  Could you attach them to the bug report?\n\nI can\u0027t fix this if we don\u0027t understand the cause.\n\nLater,\nPW\n",
    "Here is a stack dump from another colleagues editor, although mine looked very similar....\n\nDavid I\u0027m ccing you on this because of the embedded SSE editor in our editors...\n\nCaused by: java.lang.StackOverflowError \n        at java.lang.Class.getName(Class.java:1017) \n        at org.eclipse.core.internal.runtime.AdapterManager.getFactories(AdapterManager.java:168) \n        at org.eclipse.core.internal.runtime.AdapterManager.getAdapter(AdapterManager.java:250) \n        at org.eclipse.ui.part.WorkbenchPart.getAdapter(WorkbenchPart.java:140) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:806) \n        at com.ibm.etools.webedit.editor.HTMLEditor.getAdapter(HTMLEditor.java:2335) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:808) \n        at com.ibm.etools.webedit.editor.HTMLEditor.getAdapter(HTMLEditor.java:2335) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:808) \n        at com.ibm.etools.webedit.editor.HTMLEditor.getAdapter(HTMLEditor.java:2335) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:808) \n        at com.ibm.etools.webedit.editor.HTMLEditor.getAdapter(HTMLEditor.java:2335) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:808) \n        at com.ibm.etools.webedit.editor.HTMLEditor.getAdapter(HTMLEditor.java:2335) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:808) \n        ......(and so on) \n        at org.eclipse.ui.part.MultiPageEditorPart.getAdapter(MultiPageEditorPart.java:808) \n        at com.ibm.etools.webedit.editor.HTMLEditor.getAdapter(HTMLEditor.java:2335) \n        at org.eclipse.wst.sse.ui.internal.selection.StructuredSelectActionDelegate.setActiveEditor(StructuredSelectActionDelegate.java:88) \n        at org.eclipse.ui.internal.EditorPluginAction.editorChanged(EditorPluginAction.java:75) \n        at org.eclipse.ui.internal.EditorActionBuilder$EditorContribution.editorChanged(EditorActionBuilder.java:83) \n        at org.eclipse.ui.internal.EditorActionBuilder$ExternalContributor.setActiveEditor(EditorActionBuilder.java:129) \n        at org.eclipse.ui.internal.EditorActionBars.partChanged(EditorActionBars.java:335) \n        at org.eclipse.ui.internal.WorkbenchPage$3.run(WorkbenchPage.java:606) \n        at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37) \n        at org.eclipse.core.runtime.Platform.run(Platform.java:843) \n        at org.eclipse.ui.internal.WorkbenchPage.activatePart(WorkbenchPage.java:595) \n        at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:3135) \n        at org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:2692) \n        at org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:256) \n        at org.eclipse.ui.internal.EditorPane.requestActivation(EditorPane.java:89) \n",
    "Ah, so what\u0027s on HTMLEditor.java:2335\n\nIs it delegating out to a known outer editor for the getAdapter(*) call?\n\nLater,\nPW\n",
    "no just calling \"super.getAdapter()\"",
    "So what does HTMLEditor do so that it returns itself from getActiveEditor()?\n\nDoes it really call addPage(this, getEditorInput()); somewhere?\n\nLater,\nPW\n",
    "(In reply to comment #9)\n\u003e So what does HTMLEditor do so that it returns itself from getActiveEditor()?\n\u003e \n\u003e Does it really call addPage(this, getEditorInput()); somewhere?\n\nNo, on certain non-IEditorPart pages it overrides getActiveEditor() to return the mutlipage editorpart as the active editor.\n",
    "May I ask ... what\u0027s the status here? What actions are needed to resolve? to investigate? Is there more needed from our end? \n\n\n",
    "Created an attachment (id\u003d39807)\nMultiPageEditorPart \n\nCheck to see if getActiveEditor() returns this.\n\nPW\n",
    "(In reply to comment #5)\n\u003e Actually, that causes me some concern.  How does the outer editor become an\n\u003e inner editor, unless somewhere the outer editor code is doing something like:\n\u003e \n\u003e addPage(this, getEditorInput());\n\nShould there a sanity checks that trows an IllegalArgumentException in this case?",
    "(In reply to comment #13)\n\u003e \n\u003e Should there a sanity checks that trows an IllegalArgumentException in this\n\u003e case?\n\u003e \n\nThat was a red herring, the HTMLEditor does return \"this\" in certain calls to getActiveEditor().\n\nPW\n",
    "Paul is this code released yet?",
    "This one-time fix for breaking the API contract has been released into HEAD for RC3  \u003e20060503\n\nPW\n",
    "What\u0027s the API contract break? Returning \"this\"? Is that true of adapters in general? Or just this editor one? (Just trying to educate myself). \n\nThanks, \n\n",
    "(In reply to comment #17)\n\u003e What\u0027s the API contract break? \n\nSee comment 3. The break is in overwriting #getActiveEditor. The JavaDoc says that clients (i.e. the HTML editor and adopters thereof) are not allowed to overwrite it.\n\nI would consider returning \"this\" even a bug because \"this\" is never a nested editor of \"this\". :)\n\n",
    "Gunnar got it :-)\n\nPW\n",
    "Just a note that this is a temporary fix for 3.2 that will probably be removed early in the next release cycle.\n\nPW\n",
    "Just to document it, in the hopes of clarity, I searched in a \"pure WTP Stack\" and did find any editors which over-rode the \u0027getActiveEditor\u0027 method. (I was going to open a bug, to remember to remove it). \n\n\nI did see, however, that org.eclipse.ui.forms.editor.FormEditor \ndid. I suspect someone was following that example. So, ... not sure \nwhy it was done there, but if that is ever understood, then the root cause\nfor why people find the need to override it may be found. \n\nIt appears it was done there specifically to make it public. That would be an violation, right? Should getActiveEditor in MultiPageEditorPart be public? (and final)? \n\n\n\n\n"
  ],
  "commentCreationDates": [
    "2006-04-27T05:59:41+02:00",
    "2006-04-27T15:28:03+02:00",
    "2006-04-27T16:16:46+02:00",
    "2006-04-27T16:38:52+02:00",
    "2006-04-27T16:44:09+02:00",
    "2006-04-27T16:54:41+02:00",
    "2006-04-27T17:04:29+02:00",
    "2006-04-27T17:11:10+02:00",
    "2006-04-27T18:07:46+02:00",
    "2006-04-27T20:13:31+02:00",
    "2006-04-27T20:48:39+02:00",
    "2006-04-28T16:43:12+02:00",
    "2006-04-28T20:02:40+02:00",
    "2006-04-28T20:30:08+02:00",
    "2006-04-28T20:58:24+02:00",
    "2006-05-03T17:36:16+02:00",
    "2006-05-03T18:43:42+02:00",
    "2006-05-03T18:51:48+02:00",
    "2006-05-03T18:58:20+02:00",
    "2006-05-03T18:59:23+02:00",
    "2006-05-16T03:35:52+02:00",
    "2006-05-16T04:01:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "java.lang.Class.getName",
          "source": "Class.java:1017"
        },
        {
          "method": "org.eclipse.core.internal.runtime.AdapterManager.getFactories",
          "source": "AdapterManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.runtime.AdapterManager.getAdapter",
          "source": "AdapterManager.java:250"
        },
        {
          "method": "org.eclipse.ui.part.WorkbenchPart.getAdapter",
          "source": "WorkbenchPart.java:140"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart.getAdapter",
          "source": "MultiPageEditorPart.java:806"
        },
        {
          "method": "com.ibm.etools.webedit.editor.HTMLEditor.getAdapter",
          "source": "HTMLEditor.java:2335"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart.getAdapter",
          "source": "MultiPageEditorPart.java:808"
        },
        {
          "method": "com.ibm.etools.webedit.editor.HTMLEditor.getAdapter",
          "source": "HTMLEditor.java:2335"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart.getAdapter",
          "source": "MultiPageEditorPart.java:808"
        },
        {
          "method": "com.ibm.etools.webedit.editor.HTMLEditor.getAdapter",
          "source": "HTMLEditor.java:2335"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart.getAdapter",
          "source": "MultiPageEditorPart.java:808"
        },
        {
          "method": "com.ibm.etools.webedit.editor.HTMLEditor.getAdapter",
          "source": "HTMLEditor.java:2335"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart.getAdapter",
          "source": "MultiPageEditorPart.java:808"
        },
        {
          "method": "com.ibm.etools.webedit.editor.HTMLEditor.getAdapter",
          "source": "HTMLEditor.java:2335"
        },
        {
          "method": "org.eclipse.ui.part.MultiPageEditorPart.getAdapter",
          "source": "MultiPageEditorPart.java:808"
        }
      ],
      "number": 0,
      "commentIndex": 6,
      "bugId": "138823",
      "date": "2006-04-27T17:04:29+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "138823",
  "bugId": "138823",
  "date": "2006-04-27T05:59:41+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}