{
  "comments": [
    "I am using AspectJ 1.1rc1. Here is my simple test case...\n\npublic class Inner1\n{}\n\npublic class Inner2 extends Inner1\n{}\n\npublic interface NewInterface\n{}\n\npublic class Outer extends Inner2 implements NewInterface\n{\n  public static void main(String[] args)\n  {\n    Outer outer \u003d new Outer();\n  }\n}\n\npublic aspect InitAspect\n{\n  pointcut outerMatch() : initialization(new(..));\n  before() : outerMatch()\n  {\n    System.out.println(thisJoinPoint.toLongString());\n  }\n}\n\nAs I understand it, the outerMatch() pointcut will match all constructors in the \nsystem. The above all compiles nicely but when I run Outer I get the following \n(please ignore line numbers) ...\njava.lang.ExceptionInInitializerError: org.aspectj.lang.NoAspectBoundException\n  at InitAspect.aspectOf(InitAspect.java)\n  at InitAspect.\u003cinit\u003e(InitAspect.java:14)\n  at InitAspect.ajc$postClinit(InitAspect.java)\n  at InitAspect.\u003cclinit\u003e(InitAspect.java:14)\n  at Inner1.\u003cinit\u003e(Inner1.java:14)\n  at Inner2.\u003cinit\u003e(Inner2.java:14)\n  at Outer.\u003cinit\u003e(Outer.java:14)\n  at Outer.main(Outer.java:18)\n  Exception in thread \"main\" \n\nIf I compile the above system with AspectJ 1.0 before running Outer then it all \nworks and I see the following output ...\ninitialization(public Inner1())\ninitialization(public Inner2())\ninitialization(public NewInterface())\ninitialization(public Outer())\n\nIt would appear that the pointcut is matching the InitAspect itself. The only \nway I can get my simple test case to work with 1.1rc1 is to modify my \nouterMatch() pointcut to explicitly remove the aspect from the scope ...\n\npointcut outerMatch() : initialization(new(..)) \u0026\u0026 !within(InitAspect);\n\nWhen I run this I get the following output (note the subtle change in the order \nof the matches compared to what I got using AspectJ 1.0 - now the interface \nmatch comes after the Outer match)....\ninitialization(public Inner1())\ninitialization(public Inner2())\ninitialization(public Outer())\ninitialization(public NewInterface())\n\nIs this behaviour a 1.1 bug or was 1.0 behaving incorrectly ?",
    "The NoAspectBoundException is a correct change in AspectJ-1.1 and is \ndocumented in the readme:\n  http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/aspectj-home/README-\n11.html#ASPECT_INSTANTIATION_AND_ADVICE\n\nThe order of the interface initializers you\u0027re seeing is a bug, but I don\u0027t \nbelieve it is critical, so I\u0027m leaving it as a P3.  If it turns out to be easy \nto fix it should be resolved for 1.1rc2.",
    "A test case has been added to ajcTestsFailing.xml.\n\nThe 1.2 target milestone has been removed.  After analysis, this bug is tightly\ncoupled with the implementation of initialization join points.  This \nimplementation is complicated and I\u0027m very wary of changing it to fix a bug \nthis small.",
    "We\u0027re not going to get to this in AJ 1.5.0. Marking as \"LATER\" for consideration\nin 1.5.1 and future release planning. \n\nNo-one else has run into this issue that I\u0027m aware of in the 2.5 years since it\nwas first raised so this is not a high-priority problem right now."
  ],
  "commentCreationDates": [
    "2003-04-23T10:44:22+02:00",
    "2003-04-24T23:24:15+02:00",
    "2004-01-30T23:10:51+01:00",
    "2005-08-26T16:59:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.lang.NoAspectBoundException",
      "elements": [
        {
          "method": "InitAspect.aspectOf",
          "source": "InitAspect.java"
        },
        {
          "method": "InitAspect.\u003cinit\u003e",
          "source": "InitAspect.java:14"
        },
        {
          "method": "InitAspect.ajc$postClinit",
          "source": "InitAspect.java"
        },
        {
          "method": "InitAspect.\u003cclinit\u003e",
          "source": "InitAspect.java:14"
        },
        {
          "method": "Inner1.\u003cinit\u003e",
          "source": "Inner1.java:14"
        },
        {
          "method": "Inner2.\u003cinit\u003e",
          "source": "Inner2.java:14"
        },
        {
          "method": "Outer.\u003cinit\u003e",
          "source": "Outer.java:14"
        },
        {
          "method": "Outer.main",
          "source": "Outer.java:18"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "36787",
      "date": "2003-04-23T10:44:22+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "36787",
  "bugId": "36787",
  "date": "2003-04-23T10:44:22+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}