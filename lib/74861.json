{
  "comments": [
    "Build: R3.0.1\nVM: IBM J9SC 20040917\n\nI have a workspace with a small number of projects, but one of the projects has\na very large number of JARs on its search path (about 2,000 JARs).  Sometimes\nwhile searching I get the exception below. It is possibly caused by other\nconcurrent things going on, but it seems that the search might be opening\nseveral JARs at once during the search, causing it to fail:\n\n!ENTRY org.eclipse.jdt.core 4 -1 Sep 23, 2004 11:06:42.221\n!MESSAGE I/O exception\n!STACK 0\njava.util.zip.ZipException: Too many open files\nd:\\rad20040919_dev\\workspace\\com.xyz.myplugin\\runtime\\myplugincode.jar\n\tat java.util.zip.ZipFile.open(Native Method)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:140)\n\tat java.util.zip.ZipFile.\u003cinit\u003e(ZipFile.java:100)\n\tat org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(Unknown Source)\n\tat org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar(Unknown Source)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo(Unknown\nSource)\n\tat org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(Unknown\nSource)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(Unknown\nSource)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(Unknown\nSource)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(Unknown\nSource)\n\tat\norg.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(Unknown\nSource)\n\tat org.eclipse.jdt.core.search.SearchEngine.findMatches(Unknown Source)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(Unknown Source)\n\tat org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(Unknown Source)\n\tat\norg.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(Unknown\nSource)\n\tat org.eclipse.core.internal.jobs.Worker.run(Unknown Source)",
    "Its not the search but the JavaModelManager\u0027s cache.",
    "Does the JavaModelManager cache keep all the JARs open?\n",
    "No, it does not, but they are all opened by JavaSearchNameEnvironment while\ncomputing classpath locations. They remain opened during search operation and\nare closed only at the end. For a large number of jars on classpath, this\nprocess is not valid.\nI\u0027ve to figure out how it could be possible to handle this specific scenario...\n",
    "Created an attachment (id\u003d21590)\nTest to know how many zip files can be opened simultaneously\n\nJohn,\nRunning attached test case shows that only 2006 zip files can be opened\nsimultaneously. This seems to be a Windows or VM limitation as we get a\nZipException...\nSo, I wonder how with such a project (2,000 jar in your classpath!) you can\neven build your workspace as all zip files are opened while computing\nclasspath...?!\n",
    "Seems to be a very peculiar test case as no other similar complain about this\nlimitation has come since 3.0...\n\nSeems to be highly risky trying to change something in this area at this late\nstage of dvpt \u003d\u003e defer post 3.1\n",
    "Yes, there is certainly an OS limitation on the number of open file handles\n(usually configurable). It might be an unusual case, but I should mention it was\na \"real\" development workspace, not an artificially created test case. I agree\nwith deferring until post 3.1,",
    "Reopen for 3.2",
    "FYI .. I\u0027ve starting seeing similar \njava.util.zip.ZipException: Too many open files\nin a completely different scenerio ... using update manager\u0027s mirror command to \"mirror\" the callisto projects, on a PPC system, using IBM\u0027s 1.4.2 JRE. \n(and 3.2 RC2 of Eclipse) \nI have not yet investigated, but thought I\u0027d make a note here, in case anyone \nhas more \"news\" on this exception. \n\n\n\ndavid_williams@utils:~/org.eclipse.callisto.tools/build-home\u003e ulimit\nunlimited\ndavid_williams@utils:~/org.eclipse.callisto.tools/build-home\u003e java -version\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2)\nClassic VM (build 1.4.2, J2RE 1.4.2 IBM build cxppc32142-20060120 (SR4) (JIT enabled: jitc))\ndavid_williams@utils:~/org.eclipse.callisto.tools/build-home\u003e\n",
    "(In reply to comment #8)\n\u003e FYI .. I\u0027ve starting seeing similar \n\u003e java.util.zip.ZipException: Too many open files\n\nOh ... never mind ... there was an exception earlier in the log that pointed me to the real problem -- a null file passed to the zip file contructor ... Apparently ZileFile(null) will not throw an exeption right then, but then later throw \"too many files open\" error. Weird. \n\n",
    "John,\nmay you please have another go and try with a build \u003e 3.3 M6 and tell us if this issue is still relevant.\nThanks.",
    "Hello Eric, unfortunately I no longer have that large workspace with the 2,000 JARs available. Feel free to close if you cannot reproduce it.",
    "(In reply to comment #11\nThanks John.\nFr?d?ric, feel free to close this one if not reproduced with a build \u003e 3.3 M6\n",
    "I\u0027d rather prefer to keep this bug open as the limitation still exists even if the workspace on which it happened is no longer used.\n\nHowever, as this kind of wksp is not so common, I reduce the priority to P4...\n"
  ],
  "commentCreationDates": [
    "2004-09-23T23:10:42+02:00",
    "2004-09-23T23:38:54+02:00",
    "2005-04-25T17:10:57+02:00",
    "2005-05-18T16:51:54+02:00",
    "2005-05-23T18:21:20+02:00",
    "2005-05-23T18:23:00+02:00",
    "2005-05-24T16:23:56+02:00",
    "2005-08-05T10:49:48+02:00",
    "2006-05-04T07:37:37+02:00",
    "2006-05-04T09:33:43+02:00",
    "2007-03-27T09:05:38+02:00",
    "2007-03-27T15:39:14+02:00",
    "2007-03-27T15:44:27+02:00",
    "2007-03-28T18:03:21+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.util.zip.ZipException",
      "message": "Too many open files d:\\rad20040919_dev\\workspace\\com.xyz.myplugin\\runtime\\myplugincode.jar",
      "elements": [
        {
          "method": "java.util.zip.ZipFile.open",
          "source": "Native Method"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:140"
        },
        {
          "method": "java.util.zip.ZipFile.\u003cinit\u003e",
          "source": "ZipFile.java:100"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelManager.getZipFile",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JarPackageFragmentRoot.getJar",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.getBinaryInfo",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.process",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.findMatches",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "74861",
      "date": "2004-09-23T23:10:42+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "74861",
  "bugId": "74861",
  "date": "2004-09-23T23:10:42+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}