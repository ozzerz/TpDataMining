{
  "comments": [
    "I get the following infinite loop (logically it can\u0027t happen). Either rewritting\nthe routine or switching to JRE 1.4.2 eliminates the problem. Please consider a\nmodification such as:\n\n\tprivate void basicStopBundles() {\n\t\tBundleContext context \u003d EclipseAdaptor.getDefault().getContext();\n\t\t// stop all active bundles in the reverse order of Require-Bundle\n\t\tfor (int stoppingIndex \u003d allToStop.length - 1; stoppingIndex \u003e\u003d 0;\nstoppingIndex--) {\n\t\t\tAbstractBundle toStop \u003d (AbstractBundle)\ncontext.getBundle(allToStop[stoppingIndex].getBundleId());\n\t\t\ttry {\n\t\t\t\tboolean doStop \u003d true;\n\t\t\t\tif (toStop.getState() !\u003d Bundle.ACTIVE || !(toStop instanceof BundleHost) ||\ntoStop.getBundleId() \u003d\u003d 0)\n\t\t\t\t\tdoStop \u003d false;\n\t\t\t\tif (!((EclipseBundleData) toStop.getBundleData()).isAutoStartable())\n\t\t\t\t\tdoStop \u003d false;\n\t\t\t\tif (doStop) {\n\t\t\t\t\ttoStop.stop();\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tString message \u003d\nEclipseAdaptorMsg.formatter.getString(\"ECLIPSE_BUNDLESTOPPER_ERROR_STOPPING_BUNDLE\",\nallToStop[stoppingIndex].toString()); //$NON-NLS-1$\n\t\t\t\tFrameworkLogEntry entry \u003d new\nFrameworkLogEntry(FrameworkAdaptor.FRAMEWORK_SYMBOLICNAME, message, 0, e, null);\n\t\t\t\tEclipseAdaptor.getDefault().getFrameworkLog().log(entry);\n\t\t\t}\n\t\t\tstoppedBundles.put(toStop, toStop);\n\t\t}\n\t}\n\n\nENTRY org.eclipse.osgi Jul 13, 2004 15:53:07.74\n!MESSAGE Error while stopping \"com.ibm.workplace.j2ee.security_2.0.0\".\n!STACK 0\njava.lang.NullPointerException\n\tat\norg.eclipse.core.runtime.adaptor.BundleStopper.basicStopBundles(BundleStopper.java(Compiled\nCode))\n\tat\norg.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:62)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(EclipseAdaptor.java:551)\n\tat org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:457)\n\tat\norg.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:182)\n\tat java.lang.Thread.run(Thread.java:568)\n\n!ENTRY org.eclipse.osgi Jul 13, 2004 15:53:07.84\n!MESSAGE Error while stopping \"com.ibm.workplace.j2ee.security_2.0.0\".\n!STACK 0\njava.lang.NullPointerException\n\tat\norg.eclipse.core.runtime.adaptor.BundleStopper.basicStopBundles(BundleStopper.java(Compiled\nCode))\n\tat\norg.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:62)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(EclipseAdaptor.java:551)\n\tat org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:457)\n\tat\norg.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:182)\n\tat java.lang.Thread.run(Thread.java:568)\n\n!ENTRY org.eclipse.osgi Jul 13, 2004 15:53:07.124\n!MESSAGE Error while stopping \"com.ibm.workplace.j2ee.security_2.0.0\".\n!STACK 0\njava.lang.NullPointerException\n\tat\norg.eclipse.core.runtime.adaptor.BundleStopper.basicStopBundles(BundleStopper.java(Compiled\nCode))\n\tat\norg.eclipse.core.runtime.adaptor.BundleStopper.stopBundles(BundleStopper.java:62)\n\tat\norg.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(EclipseAdaptor.java:551)\n\tat org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:457)\n\tat\norg.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:182)\n\tat java.lang.Thread.run(Thread.java:568)",
    "\u003e I get the following infinite loop (logically it can\u0027t happen)\n\nI don\u0027t understand what you are saying here. If it is not supposed to happen,\nwhy is it happening? Please explain what is wrong with the existing code. Thanks.",
    "Rafeal - thanks for consider this. Sorry for the confusion. What I say was:\n\n1. This infinite loop logically can\u0027t happen as the loop variable is decremented\neverytime through the loop. Thus the log makes no sense.\n\n2. If I switched from IBM JRE 1.4.1 to IBM JRE 1.4.2, the problem goes away.\n\n3. If I rewrote the code to be equivalent but not use \"continue\" statements or a\n\"finally\" clause, the problem goes away.\n\n4.I debugged this on Linux but others say on Windows.\n\nPlease consider just taking this eqiuvalent code:\n\n\tprivate void basicStopBundles() {\n\t\tBundleContext context \u003d EclipseAdaptor.getDefault().getContext();\n\t\t// stop all active bundles in the reverse order of Require-Bundle\n\t\tfor (int stoppingIndex \u003d allToStop.length - 1; stoppingIndex \u003e\u003d 0;\nstoppingIndex--) {\n\t\t\tAbstractBundle toStop \u003d (AbstractBundle)\ncontext.getBundle(allToStop[stoppingIndex].getBundleId());\n\t\t\ttry {\n\t\t\t\tif ((toStop.getState() \u003d\u003d Bundle.ACTIVE)  \u0026\u0026\n\t\t\t\t    (toStop instanceof BundleHost) \u0026\u0026\n\t\t\t\t\t(toStop.getBundleId() !\u003d 0) \u0026\u0026\n\t\t\t\t\t((EclipseBundleData) toStop.getBundleData()).isAutoStartable()) {\n\t\t\t\t\ttoStop.stop();\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tString message \u003d\nEclipseAdaptorMsg.formatter.getString(\"ECLIPSE_BUNDLESTOPPER_ERROR_STOPPING_BUNDLE\",\nallToStop[stoppingIndex].toString()); //$NON-NLS-1$\n\t\t\t\tFrameworkLogEntry entry \u003d new\nFrameworkLogEntry(FrameworkAdaptor.FRAMEWORK_SYMBOLICNAME, message, 0, e, null);\n\t\t\t\tEclipseAdaptor.getDefault().getFrameworkLog().log(entry);\n\t\t\t}\n\t\t\tstoppedBundles.put(toStop, toStop);\n\t\t}\n\t}\n",
    "The change looks good to me (does not change actual behavior). \n\nKeith, are you saying that this is a bug in the mentioned VM? Can you reproduce\nthe problem with a simpler test case? Was this reported/accepted as a bug? It\nwould be great if we could understand what is going on.",
    "I did not try to reproduce with a simplier case.\n\nI am claiming that I experience the problem only with the IBM JRE 1.4.1 SR2 on\nLinux.\n\nThere is no way you could get the log listed below if the java code was exectued\nas coded.",
    "Not that I don\u0027t believe in you, Keith. :)\n\nJust wanted to see some evidence (besides common sense). Have you tried running\nwith JRE 1.4.1 and -Djava.compiler\u003dnone?",
    "Created an attachment (id\u003d13506)\nJava Core Dump\n\nRafeal - the problem has moved slightly and I now get a java core dump\n(rebooted my machine???). However, using -Djava.compiler\u003dnone, the patched\nBundleStopper.java, or the IBM JRE 1.4.2 makes it go away.\n\nI want to stress that this was seen on both Linux and Windows but I just\nhappened to hit a reproducer on Linux. ",
    "Rafael,\n\nAn observation which might encourage you to simply accept the code change is\nthat the new loop is cleaner than the orignal. The transformation is essentially:\n\n    try {\n      if ((!c1) || !c2) || (!c3))\n        continue;\n      if (!c4)\n        continue;\n      stmt-1;\n     } catch (Exception e) {\n       ...\n     } finally {\n       stmt-2;\n     }\n\nto\n\n   try {\n      if ((c1) \u0026\u0026 (c2) \u0026\u0026 (c3) \u0026\u0026 (c4))\n        stmt-1;\n    } catch (Exception e) {\n       ...\n    }\n    stmt-2;\n",
    "I changed the priority to P1 as we applied the suggested patch to continue\ntesting. However, management requires us to only ship with approved patches. Is\nthere a chance you could look at this sometime this week? The rewritten code is\nlocalized (a single loop), cleaner, and simplier than the original and of course\nworks around the JRE bug.\n\nThanks in advance,\nKeith",
    "Please do not adjust the priority as they are used by the developers for\nplanning. Feel free to increase the severity of the bug report if you feel this\nis important to you. Help on entering bug reports can be found here:\nhttps://bugs.eclipse.org/bugzilla.html.\n\nThere are not many people around (due to summer vacations) so I don\u0027t know when\nthis will be able to be addressed.\n\nEven if it does get addressed this week, it will not make it into an integration\nbuild until next week.",
    "Unfortunately we have already fixed another bug that was in this code, see bug \n70068.  This makes the suggested patch invalid because it reintroduces bug \n70068.  Below is the correct implementation of the method with no continue or \nfinally.  I\u0027m still a bit confussed as to what the problem is here.  If we use \na continue of finally in a for loop does the counter not get decremented on \nyour version of the VM?  I\u0027m pretty sure this is not the only case in eclipse \nwhere we use such a coding idiom.\n\nprivate void basicStopBundles() {\n\tBundleContext context \u003d EclipseAdaptor.getDefault().getContext();\n\t// stop all active bundles in the reverse order of Require-Bundle\n\tfor (int stoppingIndex \u003d allToStop.length - 1; stoppingIndex \u003e\u003d 0; \nstoppingIndex--) {\n\t\tAbstractBundle toStop \u003d (AbstractBundle) context.getBundle\n(allToStop[stoppingIndex].getBundleId());\n\t\tif (!(toStop.getBundleId() \u003d\u003d 0) \u0026\u0026 ((EclipseBundleData) \ntoStop.getBundleData()).isAutoStartable()) {\n\t\t\ttry {\n\t\t\t\tif ((toStop.getState() \u003d\u003d Bundle.ACTIVE) \u0026\u0026 \n(toStop instanceof BundleHost))\n\t\t\t\t\ttoStop.stop();\n\t\t\t} catch (Exception e) {\n\t\t\t\tString message \u003d \nEclipseAdaptorMsg.formatter.getString\n(\"ECLIPSE_BUNDLESTOPPER_ERROR_STOPPING_BUNDLE\", allToStop\n[stoppingIndex].toString()); //$NON-NLS-1$\n\t\t\t\tFrameworkLogEntry entry \u003d new FrameworkLogEntry\n(FrameworkAdaptor.FRAMEWORK_SYMBOLICNAME, message, 0, e, null);\n\t\t\t\tEclipseAdaptor.getDefault().getFrameworkLog\n().log(entry);\n\t\t\t}\n\t\t\tstoppedBundles.put(toStop, toStop);\n\t\t}\n\t}\n}\n\nI will attach a patch file based off of the R3_0_maintenance branch for \nconsideration for 3.0.1.  Keith can you please test out this implementation of \nthe method to be sure it fixes your problem?",
    "Created an attachment (id\u003d13748)\npatch for consideration in 3.0.1\n",
    "Patch works fine - thank you.\n\nTo summarize what I saw:\n- Traces which are \"logically impossible\". \n- Change JRE from 1.4.1 to 1.4.2, problem goes away.\n- Rewritting loop and keeping logic the same, problem goes away.\n- Running without the jit -Dcompile\u003dnone, problem goes away.\n\nThis is the only instance in which we saw this.\n\nThanks for the timely patch,\nKeith",
    "DJ or Jeff,\n\nI would like someone to review my patch before I integrate into 3.0.1.  Can one \nof you review and mark this defect for a target of 3.0.1 once you approve of \nthe patch and agree that it should go into 3.0.1.",
    "DJ to review and release patch.",
    "Keith, can you try this version of the method? Thanks.\n\n\tprivate void basicStopBundles() {\n\t\tBundleContext context \u003d EclipseAdaptor.getDefault().getContext();\n\t\t// stop all active bundles in the reverse order of Require-Bundle\n\t\tfor (int stoppingIndex \u003d allToStop.length - 1; stoppingIndex \u003e\u003d 0;\nstoppingIndex--) {\n\t\t\tAbstractBundle toStop \u003d (AbstractBundle)\ncontext.getBundle(allToStop[stoppingIndex].getBundleId());\n\t\t\tif (toStop.getBundleId() !\u003d 0 \u0026\u0026 ((EclipseBundleData)\ntoStop.getBundleData()).isAutoStartable()) {\n\t\t\t\ttry {\n\t\t\t\t\tif ((toStop.getState() \u003d\u003d Bundle.ACTIVE) \u0026\u0026 (toStop instanceof BundleHost))\n\t\t\t\t\t\ttoStop.stop();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tString message \u003d\nEclipseAdaptorMsg.formatter.getString(\"ECLIPSE_BUNDLESTOPPER_ERROR_STOPPING_BUNDLE\",\nallToStop[stoppingIndex].toString()); //$NON-NLS-1$\n\t\t\t\t\tFrameworkLogEntry entry \u003d new\nFrameworkLogEntry(FrameworkAdaptor.FRAMEWORK_SYMBOLICNAME, message, 0, e, null);\n\t\t\t\t\tEclipseAdaptor.getDefault().getFrameworkLog().log(entry);\n\t\t\t\t} finally {\n\t\t\t\t\tstoppedBundles.put(toStop, toStop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n",
    "Verified Jeff\u0027s latest change. It corrects the original problem.",
    "Released code in comment #15 to maintenance stream.",
    "Also released code to HEAD to be in the integration builds."
  ],
  "commentCreationDates": [
    "2004-07-20T17:58:29+02:00",
    "2004-07-21T18:23:05+02:00",
    "2004-07-21T18:42:08+02:00",
    "2004-07-21T20:58:35+02:00",
    "2004-07-21T21:15:49+02:00",
    "2004-07-21T22:01:59+02:00",
    "2004-07-21T23:58:56+02:00",
    "2004-07-22T17:53:19+02:00",
    "2004-08-04T00:52:56+02:00",
    "2004-08-04T15:04:52+02:00",
    "2004-08-04T15:32:22+02:00",
    "2004-08-04T15:39:34+02:00",
    "2004-08-05T15:53:55+02:00",
    "2004-08-05T17:00:44+02:00",
    "2004-08-10T17:20:47+02:00",
    "2004-08-10T20:08:45+02:00",
    "2004-08-10T23:48:18+02:00",
    "2004-08-11T15:44:20+02:00",
    "2004-08-11T16:33:19+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.adaptor.BundleStopper.basicStopBundles",
          "source": "BundleStopper.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles",
          "source": "BundleStopper.java:62"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping",
          "source": "EclipseAdaptor.java:551"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.shutdown",
          "source": "Framework.java:457"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle$1.run",
          "source": "SystemBundle.java:182"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:568"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "70436",
      "date": "2004-07-20T17:58:29+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.adaptor.BundleStopper.basicStopBundles",
          "source": "BundleStopper.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles",
          "source": "BundleStopper.java:62"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping",
          "source": "EclipseAdaptor.java:551"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.shutdown",
          "source": "Framework.java:457"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle$1.run",
          "source": "SystemBundle.java:182"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:568"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "70436",
      "date": "2004-07-20T17:58:29+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.adaptor.BundleStopper.basicStopBundles",
          "source": "BundleStopper.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.BundleStopper.stopBundles",
          "source": "BundleStopper.java:62"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping",
          "source": "EclipseAdaptor.java:551"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.shutdown",
          "source": "Framework.java:457"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.SystemBundle$1.run",
          "source": "SystemBundle.java:182"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:568"
        }
      ],
      "number": 2,
      "commentIndex": 0,
      "bugId": "70436",
      "date": "2004-07-20T17:58:29+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "normal"
    }
  ],
  "groupId": "70436",
  "bugId": "70436",
  "date": "2004-07-20T17:58:29+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "normal"
}