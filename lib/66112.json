{
  "comments": [
    "3.0 rc1\n\nfor (int k\u003d0;;) {}\n\nselect k and run generalize type:\n\njava.lang.NullPointerException\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkSelection(ChangeTypeRefactoring.java:355)\n\tat\norg.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkInitialConditions(ChangeTypeRefactoring.java:290)\n\tat\norg.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)\n\tat\norg.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)\n\tat\norg.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)",
    "interestingly, same problem happens here:\n\n    void foo() {\n    \tSerializable c \u003d null;\n    }\n\nselect c, do generalize type",
    "Needs to investigate for RC2.",
    "the first case is trivial - i can send you the fix\nthe second one i did not look at",
    "the fix is to handle VARIABLE_DECLARATION_EXPRESSION as parent in \nsimpleNameSelected",
    "Adam, the snippet under #1 works for me. Any additional steps.\n\nIf fixed the for (int k\u003d0;;) {} case.\n\nFixed released for RC2.",
    "Frank, you might want to have a look at the fix I put in. Basically it is \n\n} else if (grandParent.getNodeType() \u003d\u003d \nASTNode.VARIABLE_DECLARATION_EXPRESSION) {\n\tVariableDeclarationExpression vde\u003d (VariableDeclarationExpression)\ngrandParent;\n        if (vde.fragments().size() \u003e 1) {\n\t  return RefactoringCoreMessages.getString\n(\"ChangeTypeRefactoring.multiDeclarationsNotSupported\"); //$NON-NLS-1$\n\t\t\t\t}\t\n\tsetSelectionRanges(simpleName);\n\nin method simpleNameSelected. \n\nAny objections ?",
    "nope, can\u0027t reproduce comment 1 anymore",
    "Start verifying by Danny Dig",
    "Verified by Danny Dig. Generalizing works fine now."
  ],
  "commentCreationDates": [
    "2004-06-08T15:32:46+02:00",
    "2004-06-08T15:38:57+02:00",
    "2004-06-09T01:41:01+02:00",
    "2004-06-09T15:19:41+02:00",
    "2004-06-09T15:24:38+02:00",
    "2004-06-09T19:06:56+02:00",
    "2004-06-09T19:08:33+02:00",
    "2004-06-09T19:12:23+02:00",
    "2004-06-11T17:54:00+02:00",
    "2004-06-11T18:01:37+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkSelection",
          "source": "ChangeTypeRefactoring.java:355"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkInitialConditions",
          "source": "ChangeTypeRefactoring.java:290"
        },
        {
          "method": "org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run",
          "source": "CheckConditionsOperation.java:82"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1673"
        },
        {
          "method": "org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run",
          "source": "WorkbenchRunnableAdapter.java:58"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "66112",
      "date": "2004-06-08T15:32:46+02:00",
      "product": "JDT",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "66112",
  "bugId": "66112",
  "date": "2004-06-08T15:32:46+02:00",
  "product": "JDT",
  "component": "UI",
  "severity": "normal"
}