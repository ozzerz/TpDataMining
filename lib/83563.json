{
  "comments": [
    "It seems that pertypewithin() aspect association does not handle nested classes\ncorrectly. Here is a test class that exhibits the problem:\n\npackage test;\n\npublic class Test {\n    public static void main(String[] args) {\n        new NestedTest().run();\n    }\n\t\n    static class NestedTest implements Runnable {\n        public void run() {\n            System.out.println(\"Running...\");\n        }\n    }\n}\n \naspect PertypewithinTest pertypewithin(Test) {\n    before() : execution(* *.*(..)) {\n        System.out.println(thisJoinPointStaticPart);\n    }\t\n}\n\n\u003e ajc -version\nAspectJ Compiler DEVELOPMENT built on Monday Jan 24, 2005 at 17:07:00 GMT\n\n\u003e ajc test\\Test.java\n\n\u003e java test.Test\nexecution(void test.Test.main(String[]))\nexecution(void test.Test.bar())\nException in thread \"main\" java.lang.NoSuchMethodError: test.Test$1.ajc$test_Per\ntypewithinTest$localAspectOf()Ltest/PertypewithinTest;\n        at test.Test$1.run(Test.java)\n        at test.Test.bar(Test.java:9)\n        at test.Test.main(Test.java:13)\n\nThe same problem is seen for anonymous inner classes, as well:\npackage test;\n\npublic class Test {\n    public void bar() {\n        new Runnable() {\n            public void run() {\n                System.out.println(\"Running...\");\n            }\n        }.run();\n    }\n        \n    public static void main(String[] args) {\n        new Test().bar();\n    }\n}\n \naspect PertypewithinTest pertypewithin(Test) {\n    before() : execution(* *.*(..)) {\n        System.out.println(thisJoinPoint);\n    }    \n}\n\n\u003e ajc test\\Test.java\n\u003e java test.Test\nexecution(void test.Test.main(String[]))\nexecution(void test.Test.bar())\nException in thread \"main\" java.lang.NoSuchMethodError: test.Test$1.ajc$test_Per\ntypewithinTest$localAspectOf()Ltest/PertypewithinTest;\n        at test.Test$1.run(Test.java)\n        at test.Test.bar(Test.java:9)\n        at test.Test.main(Test.java:13)",
    "Bug fixed.  The problem was in two parts, in order to implement pertypewithin we\n\u0027generate\u0027 a special type munger and a special shadow munger.  The special type\nmunger adds the necessary local methods and state to the target matched type. \nThe special shadow munger ensures the aspect instance in the target matched type\nis initialized.  Both of these new mungers have associated generated\npointcuts/matching logic.\n\nThe shadow munger pointcut was wrong and the special type munger matching logic\nwas wrong with respect to including nested types.\n\nFor the shadow munger the pointcut was \u0027staticinitalization(Test)\u0027, when it\nshould have been \u0027staticinitialization(*) \u0026\u0026 within(Test)\u0027 - within(Test)\ncorrectly matches the nested type. (Fix is in PerTypeWithin.java)\n\nFor the special type munger (PerTypeWithinTargetTypeMunger.java), the matches()\nlogic was changed to allow for nested types just like the within pointcut.\n\nthanks for the testcases ramnivas, both added to the test suite. (and please\ndon\u0027t ask me to implement pertype(\u003cpcut\u003e) - that will be a nightmare!!)\n\nwaiting for build.",
    "Fix available:\n\nBUILD COMPLETE -  build.449\nDate of build: 01/25/2005 20:48:44\nTime to build: 102 minutes 1 second\nLast changed: 01/25/2005 20:18:44\nLast log entry: Fix for Bug 83563: pertypewithin() handling of inner classes\nLatest good AspectJ jar available at:\ndownload.eclipse.org/technology/ajdt/dev/aspectj-DEVELOPMENT.jar"
  ],
  "commentCreationDates": [
    "2005-01-24T19:59:36+01:00",
    "2005-01-25T20:20:24+01:00",
    "2005-01-26T08:23:05+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchMethodError",
      "message": "test.Test$1.ajc$test_Per typewithinTest$localAspectOf()Ltest/PertypewithinTest;",
      "elements": [
        {
          "method": "test.Test$1.run",
          "source": "Test.java"
        },
        {
          "method": "test.Test.bar",
          "source": "Test.java:9"
        },
        {
          "method": "test.Test.main",
          "source": "Test.java:13"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "83563",
      "date": "2005-01-24T19:59:36+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NoSuchMethodError",
      "message": "test.Test$1.ajc$test_Per typewithinTest$localAspectOf()Ltest/PertypewithinTest;",
      "elements": [
        {
          "method": "test.Test$1.run",
          "source": "Test.java"
        },
        {
          "method": "test.Test.bar",
          "source": "Test.java:9"
        },
        {
          "method": "test.Test.main",
          "source": "Test.java:13"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "83563",
      "date": "2005-01-24T19:59:36+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "83563",
  "bugId": "83563",
  "date": "2005-01-24T19:59:36+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}