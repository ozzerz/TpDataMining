{
  "comments": [
    "An exception is thrown in getRowRange when the Grid is resized very small.\n\nOliver this is related to your changes.  Can you take a look?  Run GridSnippet1 and just resize the window very small.\n\np.s. Please do a CVS update first.",
    "xception in thread \"main\" java.lang.IllegalArgumentException: Argument not valid\n\tat org.eclipse.swt.SWT.error(SWT.java:3483)\n\tat org.eclipse.swt.SWT.error(SWT.java:3422)\n\tat org.eclipse.swt.SWT.error(SWT.java:3393)\n\tat org.eclipse.nebula.widgets.grid.Grid.getRowRange(Grid.java:2463)\n\tat org.eclipse.nebula.widgets.grid.Grid.onPaint(Grid.java:4814)\n\tat org.eclipse.nebula.widgets.grid.Grid.access$2(Grid.java:4789)\n\tat org.eclipse.nebula.widgets.grid.Grid$4.paintControl(Grid.java:5853)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:962)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:947)\n\tat org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1259)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3723)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:4342)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2221)\n\tat org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:456)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3758)\n\tat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1554)\n\tat org.eclipse.swt.widgets.Shell.windowProc(Shell.java:1752)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:4342)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:2221)\n\tat org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:456)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java:3758)\n\tat org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1554)\n\tat org.eclipse.swt.widgets.Shell.windowProc(Shell.java:1752)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java:4342)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2226)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3282)\n\tat org.eclipse.swt.nebula.snippets.grid.GridSnippet1.main(GridSnippet1.java:67)\n",
    "Created an attachment (id\u003d72875)\ntiny change\n\nWhile looking at this bug, I have found another small problem: Since Grid#setItemHeight(int) calls GridItem#setHeight(int), the flag hasDifferingHeights is set to true even if this is not the case.  This is already corrected in Grid#setItemHeight(int) by setting hasDifferingHeights back to false.  However, in the current code, this is done after(!!) calling Grid#setScrollValuesObsolete(), which therefore runs with the wrong value of hasDifferingHeights.  This is solved in the attached patch, which only changes the order of two lines in Grid#setItemHeight(int).\n\nThe patch however does NOT solve the bug reported here.\n\nI think the bug reported here is not an error of Grid#getRowRange(), because it cannot return a reasonable value if availableHeight \u003c 0.  Of course, it could return an empty range, but this would have to be treated as a special case in the code calling getRowRange() anyway.\n\nCode calling getRowRange() should first check if the height of the grid visible on screen is 0 or less.  In that case it should do nothing.  For example:\n- in onPaint() no painting of grid cells should be done in that case\n- in showItem() nothing at all should be done\n\nProbably this special case need not only be added to code calling getRowRange() but also other code ...\n\nWhat do you think ?\n",
    "Created an attachment (id\u003d72878)\ntiny change plus bug fix\n\nI just had another look at this and found that the special cases I proposed above are pretty straightforward.  They are added in this patch (which also includes the small change I mentioned above).\n\nIn addition, Grid#getRowRange(int,int,boolean,boolean) now returns an empty row range in the case availableHeight\u003c0 (instead of throwing an SWT error).\n",
    "Committed.  Thanks."
  ],
  "commentCreationDates": [
    "2007-06-28T17:20:59+02:00",
    "2007-06-28T17:21:03+02:00",
    "2007-07-02T16:27:32+02:00",
    "2007-07-02T17:00:50+02:00",
    "2007-07-02T17:07:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Argument not valid",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3483"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3422"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3393"
        },
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid.getRowRange",
          "source": "Grid.java:2463"
        },
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid.onPaint",
          "source": "Grid.java:4814"
        },
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid.access$2",
          "source": "Grid.java:4789"
        },
        {
          "method": "org.eclipse.nebula.widgets.grid.Grid$4.paintControl",
          "source": "Grid.java:5853"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:216"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:66"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:938"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:962"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:947"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_PAINT",
          "source": "Composite.java:1259"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3723"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4342"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java:2221"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.callWindowProc",
          "source": "Shell.java:456"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3758"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1554"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.windowProc",
          "source": "Shell.java:1752"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4342"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java:2221"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.callWindowProc",
          "source": "Shell.java:456"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java:3758"
        },
        {
          "method": "org.eclipse.swt.widgets.Decorations.windowProc",
          "source": "Decorations.java:1554"
        },
        {
          "method": "org.eclipse.swt.widgets.Shell.windowProc",
          "source": "Shell.java:1752"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java:4342"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java:2226"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3282"
        },
        {
          "method": "org.eclipse.swt.nebula.snippets.grid.GridSnippet1.main",
          "source": "GridSnippet1.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "194793",
      "date": "2007-06-28T17:21:03+02:00",
      "product": "Nebula",
      "component": "Grid",
      "severity": "normal"
    }
  ],
  "groupId": "194793",
  "bugId": "194793",
  "date": "2007-06-28T17:20:59+02:00",
  "product": "Nebula",
  "component": "Grid",
  "severity": "normal"
}