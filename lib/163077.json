{
  "comments": [
    "3.2\n\nDuring a refresh of a viewer used in one of our views, we got the following failure.  This brought up a series of error dialogs (due to the SafeRunnable), which eventually caused Eclipse to hang.\n\n!ENTRY org.eclipse.ui 4 0 2006-10-31 18:13:17.206\n!MESSAGE Failed to execute runnable (org.eclipse.jface.util.Assert$AssertionFailedException: null argument;)\n!STACK 0\norg.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.util.Assert$AssertionFailedException: null argument;)\n\tat org.eclipse.swt.SWT.error(SWT.java:3374)\n\tat org.eclipse.swt.SWT.error(SWT.java:3297)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\nCaused by: org.eclipse.jface.util.Assert$AssertionFailedException: null argument;\n\tat org.eclipse.jface.util.Assert.isNotNull(Assert.java:150)\n\tat org.eclipse.jface.util.Assert.isNotNull(Assert.java:126)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.getTreePathFromItem(AbstractTreeViewer.java:2544)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalGetWidgetToSelect(AbstractTreeViewer.java:1462)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:1358)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:2219)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:2577)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1330)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1386)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1345)\n\n\nBack link: #11316",
    "Is there any known workaround for this?  I\u0027m seeing it on 3.2.2:\n\norg.eclipse.jface.util.Assert$AssertionFailedException: null argument;\n\tat org.eclipse.jface.util.Assert.isNotNull(Assert.java:150)\n\tat org.eclipse.jface.util.Assert.isNotNull(Assert.java:126)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.getTreePathFromItem(AbstractTreeViewer.java:2561)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.getSelection(AbstractTreeViewer.java:2584)\n\tat org.eclipse.ui.internal.AbstractSelectionService.getSelection(AbstractSelectionService.java:220)\n\tat org.eclipse.ui.internal.services.CurrentSelectionSourceProvider.swapListeners(CurrentSelectionSourceProvider.java:141)\n\tat org.eclipse.ui.internal.services.CurrentSelectionSourceProvider.access$0(CurrentSelectionSourceProvider.java:131)\n\tat org.eclipse.ui.internal.services.CurrentSelectionSourceProvider$1.windowActivated(CurrentSelectionSourceProvider.java:54)\n\tat org.eclipse.ui.internal.Workbench$8.run(Workbench.java:609)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n",
    "(In reply to comment #1)\n\u003e Is there any known workaround for this?  I\u0027m seeing it on 3.2.2:\n\nDo you know in which view this is happening?",
    "(In reply to comment #2)\n\u003e Do you know in which view this is happening?\n\nI have a custom view that extends ViewPart.  It creates a tree with 3 columns, adds a viewer on top of that, and sets the viewer as the selection provider for the view site.\n\nAfter playing around a bit, it looks like the implementation of setFocus, when commented out, makes the problem go away.\n\npublic void setFocus() \n{\n treeViewer.getControl().setFocus();\n}",
    "(In reply to comment #3)\n\u003e After playing around a bit, it looks like the implementation of setFocus, when\n\u003e commented out, makes the problem go away.\n\nCheck that, still happens when I double-click on the list elements.\n\n",
    "Better relevant stacktrace captured from the debugger:\n\nThread [main] (Suspended (breakpoint at line 88 in ProjectListView$1))\t\n\tProjectListView$1.getTreePathFromItem(Item) line: 88\t\n\tProjectListView$1(AbstractTreeViewer).getSelection() line: 2584\t\n\tProjectListView$1(StructuredViewer).handleSelect(SelectionEvent) line: 1128\t\n\tStructuredViewer$4.widgetSelected(SelectionEvent) line: 1154\t\n\tOpenStrategy.fireSelectionEvent(SelectionEvent) line: 213\t\n\tOpenStrategy.access$3(OpenStrategy, SelectionEvent) line: 207\t\n\tOpenStrategy$1.handleEvent(Event) line: 374\t\n\tEventTable.sendEvent(Event) line: 66\t\n\tTree(Widget).sendEvent(Event) line: 928\t\n\tDisplay.runDeferredEvents() line: 3348\t\n\tDisplay.readAndDispatch() line: 2968\t\n\tWorkbench.runEventLoop(Window$IExceptionHandler, Display) line: 1930\t\n\tWorkbench.runUI() line: 1894\t\n\tWorkbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 422\t\n\tPlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 149\t\n\tApplication.run(Object) line: 29\t\n\tPlatformActivator$1.run(Object) line: 78\t\n\tEclipseAppLauncher.runApplication(Object) line: 92\t\n\tEclipseAppLauncher.start(Object) line: 68\t\n\tEclipseStarter.run(Object) line: 400\t\n\tEclipseStarter.run(String[], Runnable) line: 177\t\n\tNativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]\t\n\tNativeMethodAccessorImpl.invoke(Object, Object[]) line: 39\t\n\tDelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25\t\n\tMethod.invoke(Object, Object...) line: 585\t\n\tMain.invokeFramework(String[], URL[]) line: 336\t\n\tMain.basicRun(String[]) line: 280\t\n\tMain.run(String[]) line: 977\t\n\tMain.main(String[]) line: 952\t\n",
    "Do you call methods on TreeViewer reentrantly from your label or content provider? The Viewer classes don\u0027t expect this to happen.\n\nThe rules are: (1) While a viewer calls a method on your content or label provider, do not call back into the viewer unless the Javadoc explicitly states that this is expected. (2) While a viewer calls a method on your content or label provider, do not process events (as in Display.readAndDispatch).  Note that (a) acquiring a lock, (b) running a long-running operation that reports progress, or (c) causing an error dialog to open may cause events to be processed.\n\nYou should not do either (a) or (b) from a content provider or a label provider.  (c) is something we need to fix by making the error dialog non-modal.",
    "Sorry, previous stacktrace was misleading.  I overrode getTreePathFromItem to do some debug prints and to set breakpoints.",
    "Created an attachment (id\u003d60957)\nProject list view source\n\nView exhibiting the behavior",
    "The bug in your code is much simpler than what I thought - when using TreeViewer, you must not create or dispose tree items yourself, this is managed by the tree viewer.  If you use a tree viewer, you need to supply at least a content provider and an input.  You can go either way - use SWT directly and manage tree items yourself, or use TreeViewer and let it manage the tree items for you.",
    "Thanks.  Hadn\u0027t even looked at the mixed up tree code;  was working in 3.1.2 so assumed it was an upgrade problem."
  ],
  "commentCreationDates": [
    "2006-11-01T15:21:00+01:00",
    "2007-03-15T13:55:39+01:00",
    "2007-03-15T14:22:46+01:00",
    "2007-03-15T15:33:09+01:00",
    "2007-03-15T15:34:22+01:00",
    "2007-03-15T15:40:28+01:00",
    "2007-03-15T16:02:06+01:00",
    "2007-03-15T16:22:52+01:00",
    "2007-03-15T16:23:30+01:00",
    "2007-03-15T16:38:46+01:00",
    "2007-03-15T18:55:45+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
      "message": "null argument;)",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:126"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3325"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2971"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "causedBy": {
        "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
        "message": "null argument;",
        "elements": [
          {
            "method": "org.eclipse.jface.util.Assert.isNotNull",
            "source": "Assert.java:150"
          },
          {
            "method": "org.eclipse.jface.util.Assert.isNotNull",
            "source": "Assert.java:126"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getTreePathFromItem",
            "source": "AbstractTreeViewer.java:2544"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalGetWidgetToSelect",
            "source": "AbstractTreeViewer.java:1462"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand",
            "source": "AbstractTreeViewer.java:1358"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget",
            "source": "AbstractTreeViewer.java:2219"
          },
          {
            "method": "org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget",
            "source": "AbstractTreeViewer.java:2577"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
            "source": "StructuredViewer.java:1330"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
            "source": "StructuredViewer.java:1386"
          },
          {
            "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
            "source": "StructuredViewer.java:1345"
          }
        ],
        "number": 0,
        "commentIndex": 0
      },
      "number": 0,
      "commentIndex": 0,
      "bugId": "163077",
      "date": "2006-11-01T15:21:00+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
      "message": "null argument;",
      "elements": [
        {
          "method": "org.eclipse.jface.util.Assert.isNotNull",
          "source": "Assert.java:150"
        },
        {
          "method": "org.eclipse.jface.util.Assert.isNotNull",
          "source": "Assert.java:126"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getTreePathFromItem",
          "source": "AbstractTreeViewer.java:2561"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getSelection",
          "source": "AbstractTreeViewer.java:2584"
        },
        {
          "method": "org.eclipse.ui.internal.AbstractSelectionService.getSelection",
          "source": "AbstractSelectionService.java:220"
        },
        {
          "method": "org.eclipse.ui.internal.services.CurrentSelectionSourceProvider.swapListeners",
          "source": "CurrentSelectionSourceProvider.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.services.CurrentSelectionSourceProvider.access$0",
          "source": "CurrentSelectionSourceProvider.java:131"
        },
        {
          "method": "org.eclipse.ui.internal.services.CurrentSelectionSourceProvider$1.windowActivated",
          "source": "CurrentSelectionSourceProvider.java:54"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$8.run",
          "source": "Workbench.java:609"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        }
      ],
      "number": 1,
      "commentIndex": 1,
      "bugId": "163077",
      "date": "2007-03-15T13:55:39+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "163077",
  "bugId": "163077",
  "date": "2006-11-01T15:21:00+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}