{
  "comments": [
    "The fix for this bug was simple and could be added to 3.2.2.\nSee initial bug #162833.\nAdding Jeff for PMC approval.",
    "Created an attachment (id\u003d56513)\nPatch\n\nPatch fixing the problem in 3.2 stream",
    "Created an attachment (id\u003d56523)\nstartup.jar including the patch for community to try\n\n",
    "+1 for 3.2.2",
    "Fix released in 3.2.2.",
    "The patch does not address jnlp apps being served from an http server. Reopening.",
    "Created an attachment (id\u003d56779)\nPatch the problem for app coming from a webserver\n\n",
    "Created an attachment (id\u003d56780)\nCompiled version of startup.jar with latest patch\n\n",
    "There are two places that can cause ClassCastExceptions\n- line 100:\tString urls[] \u003d urlsToString((URL[]) matches.toArray());\n- line 315: \tString urls[] \u003d urlsToString((URL[]) matches.toArray());\n\ncasting ArrayList.toArray() to a URL[] should result in a CCE.\n\nDiscussing this issue a bit more with Pascal we realize the Main.findMax method needs more work on J2SE 1.6.  Currently if multiple versions of a bundle are available then it is unpredictable which one will be choosen because the jar file names are not well formed (e.g. JNLP munges the file names so they are random names, not org.eclipse.core.runtime_\u003cversion\u003e.jar).\n\nFor 3.3 we need to revisit this code and come up with a better way to figure out the versions.  Unfortunately this will require way too much change for a point release.\n\nOnce the ClassCaseExceptions are fixed this patch is good for 3.2.2.",
    "Created an attachment (id\u003d56801)\nPatch fixing Tom\u0027s worries about cces\n\n",
    "+1 for 3.2.2\n",
    "Patch released in the branch and map file updated for the build.",
    "Testing done in the M build shows that this is not fixed.... I don\u0027t understand.",
    "Ok, now I\u0027m confused. I tested again with the code from the branch (built it myself) and it works fine... both on java 6 and java 5.\nClosing as fixed until further notice.",
    "(In reply to comment #13)\n\u003e Ok, now I\u0027m confused. I tested again with the code from the branch (built it\n\u003e myself) and it works fine... both on java 6 and java 5.\n\u003e Closing as fixed until further notice.\n\nThere is still an issue in the class \"org.eclipse.equinox.launcher.WebStartMain\".\nIt happens when there are more than one \"org.eclipse.osgi\" bundles in the classpath. \nSee the attache method searchFor\n\nprotected String searchFor(final String target, String start) {\n\t\tArrayList matches \u003d (ArrayList) allBundles.get(target);\n\t\tif (matches \u003d\u003d null)\n\t\t\treturn null;\n\t\tint numberOfMatches \u003d matches.size();\n\t\tif (numberOfMatches \u003d\u003d 1) {\n\t\t\treturn ((BundleInfo) matches.get(0)).location;\n\t\t}\n\t\tif (numberOfMatches \u003d\u003d 0)\n\t\t\treturn null;\n\n\t\tString[] versions \u003d new String[numberOfMatches];\n\t\tint highest \u003d 0;\n\n\t\tfor (int i \u003d 0; i \u003c versions.length; i++) {\n\t\t//\tversions[i] \u003d (String) matches.get(i);\t\n\t\t// --\u003e wrong data type\n\t\t\tversions[i] \u003d (String) ((BundleInfo) matches.get(i)).version;\n\t\t//\thighest \u003d findMax(versions);\t\n\t\t//\t--\u003e move outside the for loop\n\t\t}\n\n\t\thighest \u003d findMax(versions);\n\t\treturn ((BundleInfo) matches.get(highest)).location;\n\t}\n",
    "Created an attachment (id\u003d65567)\nusing jws version instead of java version to determine cache type.\n\n",
    "Created an attachment (id\u003d65568)\nFixed startup looking at javaws version instead of java version\n\nThe previous fix looks at java.version, but in webstart you can specify a different version than webstart.\n\nSo running a webstart application with 1.6 installed will use the new caching format, but if the JNLP states version\u003d\"1.5\" (this means it has to be 1.5.x_xx) then eclipse will assume the caching is the old (\u003c\u003d 1.5) format and fail. \n\nThe attached startup.jar uses javawebstart.version instead of java.version.",
    "Hi Sandi, in order to facilitate traceability, could you please create another bug and attach a patch created from the content of the R3_2_2 branch of org.eclipse.platform?\nNote that this problem should no longer exists in 3.3.",
    "Hi Pascal, \n\nI have created a new bug for you at https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d185288. I was not able to find the branch you mentioned only the tag R3_2_2. The patch was done against the R3_2_maintenance, which has the same revision of WebStartMain as the R3_2_2 tag.",
    "*** Bug 189717 has been marked as a duplicate of this bug. ***",
    "Hi there,\n\ni took that last,patched startup.jar (2007-05-02 03:40 -0400, Sandi Schoellhammer) but i still get that infamous null pointer exception, this time at line 61: \n\n\n!SESSION Thu Sep 27 10:23:04 CEST 2007 -----------------------------------------\n!ENTRY org.eclipse.core.launcher 4 0 2007-09-27 10:23:04.221\n!MESSAGE Exception launching the Eclipse Platform:\n!STACK\njava.lang.NullPointerException\n\tat java.util.Hashtable.put(Unknown Source)\n\tat org.eclipse.core.launcher.WebStartMain.basicRun(WebStartMain.java:61)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.WebStartMain.main(WebStartMain.java:41)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat com.sun.javaws.Launcher.executeApplication(Unknown Source)\n\tat com.sun.javaws.Launcher.executeMainClass(Unknown Source)\n\tat com.sun.javaws.Launcher.doLaunchApp(Unknown Source)\n\tat com.sun.javaws.Launcher.run(Unknown Source)\n\tat java.lang.Thread.run(Unknown Source)\n\n\nCould anyone fix this once and for all? \n\nI use 3.2.2 and javaws 1.6. \n\nThanks, \nUlrich.\n\n",
    "We are currently using the patched version with 3.2.2 and are unable to replicate the error that you are receiving.\n\nJavaWS 1.6 is the launcher the actual java version running your app can be different. Can you provide the launch params from your JNLP?"
  ],
  "commentCreationDates": [
    "2007-01-05T15:07:39+01:00",
    "2007-01-06T11:41:15+01:00",
    "2007-01-07T16:01:14+01:00",
    "2007-01-08T22:19:23+01:00",
    "2007-01-08T22:38:10+01:00",
    "2007-01-11T16:29:01+01:00",
    "2007-01-11T16:30:01+01:00",
    "2007-01-11T16:31:27+01:00",
    "2007-01-11T18:43:14+01:00",
    "2007-01-11T20:56:13+01:00",
    "2007-01-11T21:20:20+01:00",
    "2007-01-11T22:31:15+01:00",
    "2007-01-17T17:00:20+01:00",
    "2007-01-18T02:50:12+01:00",
    "2007-02-21T17:53:29+01:00",
    "2007-05-02T09:27:48+02:00",
    "2007-05-02T09:40:17+02:00",
    "2007-05-02T20:28:18+02:00",
    "2007-05-03T09:37:07+02:00",
    "2007-05-29T21:26:09+02:00",
    "2007-09-27T10:27:31+02:00",
    "2007-09-27T12:46:32+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.Hashtable.put",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.WebStartMain.basicRun",
          "source": "WebStartMain.java:61"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.WebStartMain.main",
          "source": "WebStartMain.java:41"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "com.sun.javaws.Launcher.executeApplication",
          "source": "Unknown Source"
        },
        {
          "method": "com.sun.javaws.Launcher.executeMainClass",
          "source": "Unknown Source"
        },
        {
          "method": "com.sun.javaws.Launcher.doLaunchApp",
          "source": "Unknown Source"
        },
        {
          "method": "com.sun.javaws.Launcher.run",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 20,
      "bugId": "169691",
      "date": "2007-09-27T10:27:31+02:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "169691",
  "bugId": "169691",
  "date": "2007-01-05T15:07:39+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}