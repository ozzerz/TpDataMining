{
  "comments": [
    "While running JUnits from org.eclipse.core.tests.runtime series of the following exceptions is observed:\n\n!ENTRY org.eclipse.osgi 4 0 2006-01-19 15:25:02.938\n!MESSAGE Error installing bundle: reference:file:workspace/org.eclipse.core.runtime.compatibility/\n!STACK 0\norg.osgi.framework.BundleException: Bundle \"org.eclipse.core.runtime.compatibility\" version \"3.1.0.qualifier\" has already been installed from: update@workspace/org.eclipse.core.runtime.compatibility/\n\tat org.eclipse.osgi.framework.internal.core.Framework.createAndVerifyBundle(Framework.java:572)\n\tat org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged(Framework.java:839)\n\tat org.eclipse.osgi.framework.internal.core.Framework$2.run(Framework.java:754)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.eclipse.osgi.framework.internal.core.Framework.installWorker(Framework.java:805)\n\tat org.eclipse.osgi.framework.internal.core.Framework.installBundle(Framework.java:749)\n\tat org.eclipse.osgi.framework.internal.core.BundleContextImpl.installBundle(BundleContextImpl.java:221)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.installBundles(EclipseStarter.java:1031)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.loadBasicBundles(EclipseStarter.java:613)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:295)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:282)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\nAll exceptions complain about duplicate bundle being installed.\n\nThe exceptions started showing in about mid-January with no related changes in the JUnits tests.",
    "Upon investigation, problem occurs in the tests utilizig ConfigurationSessionTestSuite. Those tests launch a separate instance of Eclipse using the config.ini with the following list of bundles:\n\n\t\t\"org.eclipse.equinox.common@2:start\", \n\t\t\"org.eclipse.core.jobs@2:start\", \n\t\t\"org.eclipse.equinox.registry@2:start\", \n\t\t\"org.eclipse.equinox.preferences\", \n\t\t\"org.eclipse.core.contenttype\", \n\t\t\"org.eclipse.core.runtime@2:start\", \n\t\t\"org.eclipse.update.configurator\", \n\t\t\"org.eclipse.core.runtime.compatibility\",\n\t\t\"org.eclipse.core.tests.harness\",\n\t\t\"org.eclipse.jdt.junit.runtime\",\n\t\t\"org.eclipse.pde.junit.runtime\",\n\t\t\"org.junit\",\n\t\t\"org.eclipse.test.performance\"\n\nAnd specifying the test suit configuration as the parent config. \n\nOf interest in the list above is the line \"org.eclipse.update.configurator\" - note that unlike standard environment, we *DON\"T* start configurator here.\n\nHowever, in fact, the org.eclipse.update.configurator plugin gets started in those tests.\n\nIt seems that the persisted bundle status is picked up from from the parent configuration (EclipseBundleData.getPersistentStatus()):\n\n1. Persisted bundle state picked from the parent configuration (Other JUnits just run, state \u003d1)\n2. state \u003d1, hence, framework tries to start the org.eclipse.update.configurator even as it is not started and Lazy-Start\u003dtrue\n3. The update configurator tries to install all the plugins from the parent configuration which leads to a bunch of duplicate plugins being installed.\n\nThe interesting question about this bug as why it didn\u0027t happen before mid-January.\n\nThe problem seems to disappear if I move the tests to the very beginnig of the test suits, but I\u0027d like to make sure that we are not hiding some real issue by making this change.\n",
    "To rephrase in more generic terms, I believe that the problem occurs when:\n\n1. Eclipse is run with bundle \"A\" specified with \"@start\". This instance of Eclipse is shut down before the instance (2) is run.\n2. Another instance of Eclipse is run (with no persistent bundle information on it\u0027s own) with the bundle \"A\" specified without \"@start\" and having parent configuration set to (1).\n\nIn this case instance (2) picks up persistent bundle state from (1) for the bundle \"A\" and tries to start it even as no such request exists for the instance (2). In our case, attempt to start plugin \"A\" in the instance (2) fails and leads to the exceptions being generated.\n\nNote that I didn\u0027t have a chance to verify this, but it seems to be rather logical excplanation of what happens with JUnits.\n\nIn short, I think, the problem boils to the start state being picked up from the parent configuration. This is, of course, a rather rare case and is not very likely to occur in the normal practice. \n\nI believe that problem was there for a while, but it is thread-related and was not exposed until recently.\n",
    "This seems similar to bug 129365 where the bundle ids are reused between two running instances of eclipse.\n\nOleg, can you confirm and dup to bug 129365 if you think this is true?",
    "I don\u0027t think this a duplicate. The bug 129365 talks about problems when running multiple instances simultaneously; this bug talks about information picked up from the parent configuration. It is probably true that they have some overlap, but I don\u0027t think that one of those bugs is a subset of another one :-).\n\n"
  ],
  "commentCreationDates": [
    "2006-01-23T15:59:21+01:00",
    "2006-01-23T16:15:42+01:00",
    "2006-01-23T18:26:45+01:00",
    "2006-04-09T23:58:44+02:00",
    "2006-04-10T15:39:28+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.osgi.framework.BundleException",
      "message": "Bundle \"org.eclipse.core.runtime.compatibility\" version \"3.1.0.qualifier\" has already been installed from: update@workspace/org.eclipse.core.runtime.compatibility/",
      "elements": [
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.createAndVerifyBundle",
          "source": "Framework.java:572"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installWorkerPrivileged",
          "source": "Framework.java:839"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework$2.run",
          "source": "Framework.java:754"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installWorker",
          "source": "Framework.java:805"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.Framework.installBundle",
          "source": "Framework.java:749"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleContextImpl.installBundle",
          "source": "BundleContextImpl.java:221"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.installBundles",
          "source": "EclipseStarter.java:1031"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.loadBasicBundles",
          "source": "EclipseStarter.java:613"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.startup",
          "source": "EclipseStarter.java:295"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:164"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:338"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:282"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "124867",
      "date": "2006-01-23T15:59:21+01:00",
      "product": "Equinox",
      "component": "Framework",
      "severity": "normal"
    }
  ],
  "groupId": "124867",
  "bugId": "124867",
  "date": "2006-01-23T15:59:21+01:00",
  "product": "Equinox",
  "component": "Framework",
  "severity": "normal"
}