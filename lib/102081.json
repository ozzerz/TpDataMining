{
  "comments": [
    "We try to abandon the combo box, and create a reusable component for type-\nahead that supports a drop down list (much like firefox etc...) that we could \nput in places like the \"Open View\" dialog and others.",
    "Created an attachment (id\u003d24326)\nA patch for 102081\n\nApply from:\norg.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs",
    "Created an attachment (id\u003d24383)\nA patch for 102081\n\nApply against :\norg.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/",
    "Second patch released",
    "Some comments on this patch:\n1) open the preferences dialog\n- type in \"a\"\n- press ok\n- return to the dialog and now \u0027a\u0027 is in the list but it was not a successful search\n2) enter a search \"key\", hit enter to cause \"key\" to be in the history\n- now go back to the text and type \u0027k\u0027, arrow down to the list and select \"key\"\npressing Enter now should select this\nNOTE: as I arrow through the list the text in the text widget should not change\nuntil i press enter, if I hit ESC, the drop down list is closed\n3) using arrow down after putting the cursor to the far left of some text causes\nan exception, see below\n\n----------  SWT Exception -------------\norg.eclipse.swt.SWTException: Widget is disposed\nat org.eclipse.swt.SWT.error(SWT.java:2942)\nat org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))\nat org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))\nat org.eclipse.swt.widgets.Widget.error(Widget.java(Inlined Compiled Code))\nat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java(Compiled Code))\nat org.eclipse.swt.widgets.Control.isVisible(Control.java:1327)\nat\norg.eclipse.ui.internal.dialogs.FilteredTextTree$2.keyReleased(FilteredTextTree.java:118)\nat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:128)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined Compiled Code))\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)\nat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:880)\nat org.eclipse.swt.widgets.Text.sendKeyEvent(Text.java:1154)\nat org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:876)\nat org.eclipse.swt.widgets.Widget.wmKeyUp(Widget.java:1575)\nat org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java(Inlined Compiled Code))\nat org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled Code))\nat org.eclipse.swt.widgets.Text.windowProc(Text.java(Compiled Code))\nat org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled Code))\nat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\nat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined Compiled Code))\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))\nat org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code))\nat org.eclipse.jface.window.Window.open(Window.java:787)\nat org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66)\nat org.eclipse.jface.action.Action.runWithEvent(Action.java:996)\nat\norg.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)\nat\norg.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)\nat\norg.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))\n\n------- end of Exception ----------\n\n4) It appears that the filtered search in the Colors and Fonts page no longer works.\n5) when the text receives focus it should select all text (same as the default\nbehaviour provided by the combo previously), unless the focus is given by\nclicking in the text with the mouse in which case the cursor should be placed at\nthe location of the click and no selection made.\n6) the text matching should not be case sensitive for the drop down list\n7) the sizing of the list is not quite right.  It should always try to show all\ntext in the horizonal space if possible and make the drop down be some maximum\nlength (7) but this should be configurable.\n8) see bug 102911, the popup should always stay on the screen\n",
    "Created an attachment (id\u003d24783)\nA patch for 102081\n\nApply against:\n org.eclipse.ui.workbench\nFixed all problems except problem 5) in comment 4,it looks that when the focus\ngained by mouse down, method \"selectAll()\" in Text area has kind of conflict\nwith the way text works.",
    "Created an attachment (id\u003d25296)\nA patch based on comment 4\n",
    "Problem 3 can be replicated\n\n1) Pull down the list by typing something\n2) arrow into the list\n3) Hit esc\n4) hit down arrow",
    "This patch fixes 1,2,4,6,8",
    "Created an attachment (id\u003d25430)\nA patch to fix\tproblem 3, 5 and 7 in comment 4\n\nRun the patch against:\norg.eclipse.ui.workbench",
    "Created an attachment (id\u003d25584)\nA patch to fix\tproblem 3, 5 and 7 in comment 4\n\nRun the patch against:\norg.eclipse.ui.workbench",
    "Patch released for build \u003e20050802",
    "I would like to recommend a rollback of this bug for 3.2 M1.  Bug 106165 is  \nnot trivial to fix, and seems to be quite bad on Linux. \n ",
    "The fix has been rolled back for I20050808-1200. ",
    "I propose we take another crack at this.  How about:\n\nstep 1 - we start by removing the combo in favour of a text\nstep 2 - add support for an optional dropdown with completions\n\n",
    "Karice this is the bug I mentioned with the code to replace the combo with a\ntext box in the filtered list",
    "Created an attachment (id\u003d27648)\napply patch to org.eclipse.ui.workbench\n\nThis patch changes the combo to a text in the preferences dialog and the show\nview dialog.  Micheal, can you take a look at this patch and let me know if\nthis is what you had in mind?  ",
    "there seems to be a missing FilteredTextTree class in this patch",
    "oops... the patch did not apply properly... let me try again\n",
    "Created an attachment (id\u003d27653)\napply to org.eclipse.ui.workbench\n\nTry this patch.  I didn\u0027t make any changes to the generated patch file.",
    "upping priority since this is part of an M3 plan item.",
    "Created an attachment (id\u003d27838)\napply patch to org.eclipse.ui.workbench\n\nSome refinements to my original patch (attachments 27648 and 27653).  This\nshould select the first relevant selectable element in the tree, fixed a\nscrolling problem, and general re-factoring.  Still need to integrate with\nfiltered text on New Keys preference page (it has a grouping combo).",
    "Oops, I was supposed to make this a P2 in comment #20, not a P1.",
    "Created an attachment (id\u003d27868)\nReworked patch due to apply problems\n",
    "Doug, can you check this patch?  Use the one Tod attached.  ",
    "Created an attachment (id\u003d27957)\napply patch to org.eclipse.ui.workbench\n\nAdded bold label provider to show view dialog",
    "Created an attachment (id\u003d27967)\nNullPointerException trace\n\nThe most recent patch causes this NPE when hitting enter to close the dialog.",
    "Created an attachment (id\u003d27979)\napply patch to org.eclipse.ui.workbench\n\nI couldn\u0027t actually replicate the NPE but I think I found/fixed the problem. \nUnless you can replicate the problem in the Show View dialog.",
    "Sorry this took so long, but this is a large section of code.  I found a few \nproblems, but in general it\u0027s good.  I\u0027m not sure that all of them have to be \nfixed before committing this code, but at the very least bugs should be opened \nto track any issues that won\u0027t be fixed immediately. \n \n \nGeneral Comment \n+ Code should be formatted.  New classes should be entirely formatted.  Old \nclasses should have the sections that have been modified formatted. \n \nFilteredTree \n+ Why is the KeyAdapater responding to keyReleased and not keyPressed? \n+ textChanged is being called even if the key pressed was an arrow_down.  This \nresults is an extraneous scheduling of the refresh job. \n+ The traverse listener clears the text field if there are no matches.  Is \nthis intentional? \n+ I believe there is a race condition between the refresh job and the effects \nof pressing enter.  It\u0027s possible that the refresh job has not yet run (in \nresponse to filter text changes) when the \"enter\" key is handled by the \ntraverse listener. \n+ getElementFont should probably describe what the parameters are \n \nPatternFilter \n+ isElementMatch is missing some javadoc and is a bit rough (e.g., the double \nblind casting) \n \nPreferencePatternFilter \n+ It is possible for an IPreferenceNode to return null from getLabelText, \nwhich can lead to an NPE as wordMatches(String) does not handle null.  This \nproblem occurs twice. \n ",
    "mvm - I\u0027m looking at step 2 in comment #14 (optional dropdown with \ncompletions) as a use case for my work on task assistance in text fields (bug \n#106199).\n\nMy question is - is the intention that the dropdown contain a list of the \nprevious filters that have been used (as the combo did before), or is the \nintention that the dropdown contain the currently filtered list of \npossibilities so that the user can navigate quickly to the item of interest \n(such as the type-ahead mentioned in comment #0)?",
    "I don\u0027t mean to throw a wrench in this, but I\u0027ve got some general \nquestions/concerns about this approach for the Show View dialog (not Karice\u0027s \ncode, but the UI intent).  \n\n1) In the preference dialog, filtering the list can be useful for reducing the \ntree and then browsing the remaining elements in the tree to find just the \npreference you want.  But in ShowView there is nothing to \"browse\" when you \nclick on the view name, so I\u0027m not sure all the noise of bolded expressions in \nthe filtered tree is a good model for selecting the view you want.  And if the \nview category matches the filter, but none of its views match the filter, \nshould it be shown at all?  There\u0027s nothing to choose or see if you select it \n(unlike preferences where there is page associated with each element in the \ntree).  In this case, it seems like a content proposal dropdown should show \nall views that match the filter and you could just select from there, without \nfiltering the tree.  The tree is still there if you are truly browsing the \ncategories to see what\u0027s available in general, but I\u0027m not even sure that \nfiltering it is useful if you have the proposals in a popup.\n\n2) I don\u0027t think we should assume that content proposal is a simple \nreplacement for a combo.  For example, the text find/replace dialog provides \nboth a combo for showing previous search expressions, as well as content \nassist for completing/inserting special expressions in the current field.  In \nboth the preferences and show view case, is the intent of content proposal to \nshow you things you\u0027ve typed in there before, or to show you the list of \nresults that match the filter?  I think I prefer the latter.  If you really \nwanted to remember previous filters, you could keep the combo.  In a type-\nahead completion model, the proposals could show all preference \npage/preference node names (or view names) that match the filter, and you \ncould select directly from the proposals.  You could still filter the tree in \nthe preferences to support browsing reduced choices.",
    "\nBut in ShowView there is nothing to \"browse\" when you \nclick on the view name, so I\u0027m not sure all the noise of bolded expressions in \nthe filtered tree is a good model for selecting the view you want. \n\n\u003e agree, it is overkill to bold in the show view scenario as the hierarchy is\nnot deep \n\n And if the \nview category matches the filter, but none of its views match the filter, \nshould it be shown at all?  \n\n\u003e no, this is a bug\n\nIn this case, it seems like a content proposal dropdown should show \nall views that match the filter and you could just select from there, without \nfiltering the tree.  \n\n\u003e we tried this with preferences and it led to some success, in the end we just\nkept it simpler by modifying the actual list, I think duplicating the content in\na drop down makes sense when the amount of content is so huge that you can\u0027t\npossibly update it in realtime.\n\nThe tree is still there if you are truly browsing the \ncategories to see what\u0027s available in general, but I\u0027m not even sure that \nfiltering it is useful if you have the proposals in a popup.\n\n\u003e see above, I think in the end what the user gets is similar\n\n2) I don\u0027t think we should assume that content proposal is a simple \nreplacement for a combo.  \n\n\u003e agree, the combo also implies you want to remember how you did something\nbefore, i.e. you have a clearer sense of what you might want to do again.\n\nFor example, the text find/replace dialog provides \nboth a combo for showing previous search expressions, as well as content \nassist for completing/inserting special expressions in the current field.  In \nboth the preferences and show view case, is the intent of content proposal to \nshow you things you\u0027ve typed in there before, or to show you the list of \nresults that match the filter?  \n\n\u003e no surprise that preferences are having the combo removed because it does not\nmake sense to show previous entries (which is what it is intended to do) \n\u003e I believe that in general the intent could be to do either case, but for both\nprefs. and show view that is not necessary as the scenario is just not complex\nenough... others might be .. like where you have the Keys preference page\nallowing a user to filter on 100s of commands.\n\n\nI think I prefer the latter.  If you really \nwanted to remember previous filters, you could keep the combo.  In a type-\nahead completion model, the proposals could show all preference \npage/preference node names (or view names) that match the filter, and you \ncould select directly from the proposals.  You could still filter the tree in \nthe preferences to support browsing reduced choices.\n\n\u003e see above, I\u0027d vote we start by not supporting proposals in either of those\ntwo cases to begin with, proposals will make more sense in a wizard where you\u0027re\nentering a package name for example for a class... \n\n",
    "oh. and I just read comment #29 , I guess the answer is that we could put them\nin the preferences or show view dialog as completions on the existing items\nwhich could then be selected, and NOT filter the list in that case, but I\u0027d\nrather see a popup used in a more sensible place... how about the new file\ndialog where you are entering a workspace path for the parent folder of the\nfile?  We could do completion based on the folders... much like many save/open\ndialogs do.",
    "Thanks for the explanation.  I won\u0027t worry about these scenarios anymore for my \ntext field/assistance work.  I\u0027ll crawl back to bug #106199 and look for other \ninteresting use cases, such as those you mention.",
    "Created an attachment (id\u003d28401)\napply patch to orgeclipse.ui.workbench \n\nThis patch addresses the feedback from comment #28, except for the race\ncondition.  Also the bold fonts in the show view dialog were removed.  The bug\nwhere a matching category appears but has no children in the show view dialog\nwas not yet addressed.",
    "Doug, can you take a look at the latest patch?",
    "Paul: Can you look at Karice\u0027s patch? ",
    "The patch looks good ... PreferencePatternFilter and ViewPatternFilter need to\nhave the IBM copyright added to the front ... it should be ready to go once we\nadd those.\n\n\nAdditional comments:\n\nIt looks like the NPE was fixed, also from comment #28:\n\n+ I believe there is a race condition between the refresh job and the effects \nof pressing enter.  It\u0027s possible that the refresh job has not yet run (in \nresponse to filter text changes) when the \"enter\" key is handled by the \ntraverse listener. \n\nWe should open a new bug to track this ... should the traverse listener cancel\nany outstanding refresh jobs?\n\n+ isElementMatch is missing some javadoc and is a bit rough (e.g., the double \nblind casting) \n\nThe double blind casting is still there, possibly updated if this class needs to\nbe refactored to support different content types?\n\nLater,\nPW\n",
    "Created an attachment (id\u003d28603)\napply patch to org.eclipse.ui.workbench\n\nAdded copyrights.\n\nAs for the double-blind casting in PatternFilter.java, since we are only using\nthis class for filtering trees it should be fine for now.  Note this code was\npresent in the orignal version of the class (Apr 2004), this patch just moved\nit to another method.  \n\nRemaining issues: investigate race condition, make filtered tree work with\ncategories (example, experimental Keys preference page), identify other useful\nplaces to use a filtered tree.",
    "Released in HEAD \u003e20051021\n\nPW\n",
    "bug 113908 was opened to address the remaining issues.",
    "verified in 20051101",
    "*** Bug 87901 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2005-06-28T21:46:15+02:00",
    "2005-07-04T21:06:39+02:00",
    "2005-07-06T16:55:15+02:00",
    "2005-07-06T20:12:29+02:00",
    "2005-07-06T20:49:55+02:00",
    "2005-07-14T21:14:47+02:00",
    "2005-07-26T15:44:35+02:00",
    "2005-07-26T16:13:57+02:00",
    "2005-07-26T16:25:11+02:00",
    "2005-07-28T21:24:24+02:00",
    "2005-08-02T22:24:40+02:00",
    "2005-08-02T23:03:57+02:00",
    "2005-08-08T17:41:47+02:00",
    "2005-08-08T18:05:28+02:00",
    "2005-09-12T15:43:33+02:00",
    "2005-09-27T16:11:25+02:00",
    "2005-09-28T22:46:10+02:00",
    "2005-09-28T22:58:25+02:00",
    "2005-09-28T23:01:56+02:00",
    "2005-09-28T23:25:55+02:00",
    "2005-09-28T23:27:48+02:00",
    "2005-10-05T00:03:31+02:00",
    "2005-10-05T00:05:43+02:00",
    "2005-10-05T17:05:47+02:00",
    "2005-10-05T17:36:11+02:00",
    "2005-10-06T19:49:50+02:00",
    "2005-10-06T21:49:52+02:00",
    "2005-10-06T22:31:43+02:00",
    "2005-10-08T00:34:51+02:00",
    "2005-10-12T00:02:02+02:00",
    "2005-10-13T23:30:52+02:00",
    "2005-10-14T16:25:38+02:00",
    "2005-10-14T16:44:32+02:00",
    "2005-10-14T17:30:08+02:00",
    "2005-10-18T20:39:20+02:00",
    "2005-10-18T20:54:26+02:00",
    "2005-10-20T18:52:30+02:00",
    "2005-10-20T21:07:24+02:00",
    "2005-10-21T16:51:30+02:00",
    "2005-10-21T19:23:19+02:00",
    "2005-10-27T00:15:14+02:00",
    "2005-11-01T17:02:48+01:00",
    "2005-11-03T15:22:21+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Widget is disposed",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2942"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.isVisible",
          "source": "Control.java:1327"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.FilteredTextTree$2.keyReleased",
          "source": "FilteredTextTree.java:118"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java:128"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:852"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:880"
        },
        {
          "method": "org.eclipse.swt.widgets.Text.sendKeyEvent",
          "source": "Text.java:1154"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendKeyEvent",
          "source": "Widget.java:876"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.wmKeyUp",
          "source": "Widget.java:1575"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_KEYUP",
          "source": "Control.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Text.windowProc",
          "source": "Text.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java(Inlined Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.window.Window.runEventLoop",
          "source": "Window.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.jface.window.Window.open",
          "source": "Window.java:787"
        },
        {
          "method": "org.eclipse.ui.internal.OpenPreferencesAction.run",
          "source": "OpenPreferencesAction.java:66"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:996"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:538"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:488"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$5.handleEvent",
          "source": "ActionContributionItem.java:400"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java(Compiled Code)"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "102081",
      "date": "2005-07-06T20:49:55+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "102081",
  "bugId": "102081",
  "date": "2005-06-28T21:46:15+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}