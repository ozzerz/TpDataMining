{
  "comments": [
    "Build 040304  Sun JRE 1.4.2_03  512 RAM\n\nI have small project that has 3 .c files and 2 .h files.  One .c file is 6.2 MB \nand one .h is 743 KB.\n\nSteps:\n1) Launch Eclipse\n2) Open project in question (please come and see me for the project)\n3) Click on the \"+\" sign to expand the project in the \"C/C++ Projects\" view\n    Memory used is a 70 MB.  So far the UI responsiveness is good.\n4) Click on the \"+\" sign of the large .c file.  \n    Memory used goes up to max (318 MB).  The UI took 5 sec or so to update \nitself (that\u0027s fine so far).\n5) Double click on the bottom variable (const U_32).\n    Memory used stays at the max. But the UI is frozen for at least 10 \nminutes.  It is trying to display the source file in the editor. I had to kill \nEclipse.\n6) Do step 1 and 2 again\n7) Double click on the large .c file to open it in the editor.\n     It took 25 seconds. Memory used go up to the max (at 318 MB)\n8) Go to the Outline viewer and right click on the first item of the list and \nselect \"References-\u003eWorkingSet...\"\n     After 4 minutes, I killed Eclipse again.\n\nGenerally, UI responsiveness is very poor when dealing with very large files in \nthe editor.  After a few operations, I had to kill Eclipse because it was not \nusable anymore.\n\nBy comparing this with MS Visual Studio 6.0, there was no contest.  Studio \nhandled these large files handily.  But, of course, no indexing and outline \nviewer was running.  But at least, I could open and close large files without \nkilling Studio.\n\nWould there be a way to turn off the indexing and/or outline viewer to make it \nmore usable?  I am suggesting ways to deal with the larges files.",
    "We cannot turn off indexing or the outline view.  Too many components depend \nupon those services running.  \n\nWe need to get better with how we use memory, that\u0027s all.  ",
    "Dropping severity since the file used was 6 MB.  It is still a bug in my \nopinion since MS Visual Studio 6 is a lot faster to open it.",
    "Add dependency to 52943 - Move Outline View processing into background.\nThe UI should not be blocked on Parsing. \nAlso Hoda, perhaps CModelBuilder can use those newly implemented timeouts if \nyou think it\u0027s applicable.  \n\nI\u0027ll keep this defect open in my name to address memory/performance \nimprovements.   ",
    "Adding Brent for informing on progress",
    "Adding James for informing on progress",
    "Execution has worsened for this bug because step 4 and step 7 do not work \nanymore.  The large file cannot be opened in the editor.  Hoda and myself have \ntested it.\n\nWhen executing step 4, I get an out of memory error:\n\n!ENTRY org.eclipse.ui 4 4 Apr 05, 2004 13:46:23.125\n!MESSAGE Unhandled event loop exception\n!ENTRY org.eclipse.ui 4 0 Apr 05, 2004 13:46:23.140\n!MESSAGE java.lang.OutOfMemoryError\n!STACK 0\njava.lang.OutOfMemoryError\n\nWhen executing step 7,  the hour glass comes on for a few seconds and then the \npointer comes back.  Nothing happened and the file did not display in the \neditor.  No exceptions were generated in the .log file.\n\n\n",
    "Here is an exception that happens when trying to open a huge file:\norg.eclipse.core.runtime.CoreException: Extension not \nfound.:org.eclipse.cdt.core.Elf\n\tat org.eclipse.cdt.internal.core.CDescriptor.createExtensions\n(CDescriptor.java:496)\n\tat org.eclipse.cdt.internal.core.CExtensionReference.createExtension\n(CExtensionReference.java:71)\n\tat org.eclipse.cdt.core.CCorePlugin.getBinaryParserConfigs\n(CCorePlugin.java:503)\n\tat org.eclipse.cdt.internal.core.model.CModelManager.getBinaryParser\n(CModelManager.java:467)\n\tat org.eclipse.cdt.internal.core.model.CModelManager.createBinaryFile\n(CModelManager.java:482)\n\tat org.eclipse.cdt.internal.core.model.CModelManager.create\n(CModelManager.java:272)\n\tat org.eclipse.cdt.internal.core.model.CModelManager.create\n(CModelManager.java:194)\n\tat org.eclipse.cdt.internal.core.model.DeltaProcessor.createElement\n(DeltaProcessor.java:86)\n\tat \norg.eclipse.cdt.internal.core.model.DeltaProcessor.updateCurrentDeltaAndIndex\n(DeltaProcessor.java:418)\n\tat org.eclipse.cdt.internal.core.model.DeltaProcessor.traverseDelta\n(DeltaProcessor.java:362)\n\tat org.eclipse.cdt.internal.core.model.DeltaProcessor.traverseDelta\n(DeltaProcessor.java:372)\n\tat \norg.eclipse.cdt.internal.core.model.DeltaProcessor.processResourceDelta\n(DeltaProcessor.java:345)\n\tat org.eclipse.cdt.internal.core.model.CModelManager.resourceChanged\n(CModelManager.java:815)\n\tat org.eclipse.core.internal.events.NotificationManager$2.run\n(NotificationManager.java:255)\n\tat org.eclipse.core.internal.runtime.InternalPlatform.run\n(InternalPlatform.java:610)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:521)\n\tat org.eclipse.core.internal.events.NotificationManager.notify\n(NotificationManager.java:248)\n\tat \norg.eclipse.core.internal.events.NotificationManager.broadcastChanges\n(NotificationManager.java:142)\n\tat org.eclipse.core.internal.resources.Workspace.broadcastChanges\n(Workspace.java:155)\n\tat org.eclipse.core.internal.resources.Workspace.endOperation\n(Workspace.java:854)\n\tat org.eclipse.core.internal.resources.Workspace.run\n(Workspace.java:1568)\n\tat org.eclipse.ui.actions.WorkspaceModifyOperation.run\n(WorkspaceModifyOperation.java:105)\n\tat org.eclipse.jface.operation.ModalContext$ModalContextThread.run\n(ModalContext.java:101)\n",
    "And sometimes from the CView :\n\norg.eclipse.core.runtime.CoreException: Extension not \nfound.:org.eclipse.cdt.core.Elf\n\tat org.eclipse.cdt.internal.core.CDescriptor.createExtensions\n(CDescriptor.java:496)\n\tat org.eclipse.cdt.internal.core.CExtensionReference.createExtension\n(CExtensionReference.java:71)\n\tat org.eclipse.cdt.core.CCorePlugin.getBinaryParser\n(CCorePlugin.java:564)\n\tat org.eclipse.cdt.internal.core.model.CProject.getLibraryReferences\n(CProject.java:154)\n\tat \norg.eclipse.cdt.internal.ui.cview.CViewContentProvider.getProjectChildren\n(CViewContentProvider.java:85)\n\tat org.eclipse.cdt.internal.ui.cview.CViewContentProvider.getChildren\n(CViewContentProvider.java:49)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren\n(AbstractTreeViewer.java:729)\n\tat org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren\n(StructuredViewer.java:463)\n\tat org.eclipse.jface.viewers.StructuredViewer.getSortedChildren\n(StructuredViewer.java:567)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$1.run\n(AbstractTreeViewer.java:361)\n",
    "\u003eHere is an exception that happens when trying to open a huge file:\n\u003eorg.eclipse.core.runtime.CoreException: Extension not \n\u003efound.:org.eclipse.cdt.core.Elf\n\u003e\tat org.eclipse.cdt.internal.core.CDescriptor.createExtensions\n\u003e(CDescriptor.java:496)\n\nYou probably have a very very old project. This extension no\nlonger exists.  Create a new Project or remove the extension\nin you .cdtproject.\n\nThe extension now is \"ELF\" capital letters.\n\n",
    "Both exceptions that Hoda reported are happening at the launch of Eclipse and \nnot when opening the large file.\n\nI have created a new project and copied the files over.\n\nMy problems that I have reported are still happening.",
    "\u003e You probably have a very very old project. This extension no\n\u003e longer exists.  Create a new Project or remove the extension\n\u003e in you .cdtproject.\n\nIsn\u0027t this something that we should handle via project upgrade? \n",
    "\u003eIsn\u0027t this something that we should handle via project upgrade?\n\nI believe we did ... long long time ago. There was a grace\nperiod with CDT-1.0.1, 1.1 not sure about 1.2.1 but something is\nsure no longer for CDT-2.0.\nWe have to cut somewhere can not keep on carrying dead code.\n\nThere was also an automatic conversion when you move to the\nnew Standard make plugins.  But basically all you have to\ndo is go to the property page in BinaryParser tab reset this\nto another parser(At least for std make).  Usually folks\nsee this very quickly since you no longer see the \n\"bug icons\" nor the \"little running man\" and they change\nthe BinaryParser in the settings.\n\nBut the exception should not affect this PR and is harmless(sic?).\n\nWe will deal with this a little differently for CDT-2.0\nbasically there is a \"restore defaults\" that should reset things\nto a known state.  Feel free to make a PR to track this.\n",
    "Hmm, I get the same problems here too.\nI have one C stdmake project open, but the worse comes when opening another, \neven empty, project. UI almost locks up, 99% CPU Usage. Bunch of error messages \nin the .log regarding org.eclipse.core.Elf, but also things about not found \nheaders and running out of memory heap space, and btw. hey guys, this machine \nonly has 384MB, another here only has 256MB. Can\u0027t give all the RAM to Java \nHeap. I think your indexer is throwing up on preprocessor defines. I mean they \nare not that strange, like function or variable macros, mapping functions etc.\n",
    "\u003e Hmm, I get the same problems here too.\n\nYep me too 8-)\n\n\u003e I think your indexer is throwing up on preprocessor defines.\n\nWell look it up here and the parser is really turning heavy.\nThe problem seem to be the TypeHiearchy view(TypeInfo).  It\nis a thread that is in the background looking for classes/structures\netc ...  With the latest changes in the Parser it can bring things\nto almost a standstill.  Patch is on the way to reduce the scheduling\nof this job.\ni.e.:\n\nTypeInfo --\u003e search --\u003e indexer --\u003edependency\n\nand the indexer can parse files multiple times.\n\n",
    "Ok folks, Chris W. changes been applied.  It should make\nless use of the search/indexer/parser let me know if it \"feels\"\nfaster ... that would be a good hint to were to look for the \nslowdown",
    "Got the latest BUILD from today, problem persists. Eclipse crashed even totally \nby sudden disappearing from Screen. CPU Usage 99%, sometimes less, very sluggish \nbehavior. Scenario: One project open, opening another project started the wierd \nbehaviour. Core-log contains exceptions thrown from Parser mainly when \nCompleteParseASTFactory is involved searching user-mapped/defined datatypes at \ntheir usage as function args/retvals, like\n\n#define UBYTE unsigned char\ntypedef unsigned char u8_t;\n/* and so on */\n\nUBYTE foo() { UBYTE mybyte;/* ... */ return mybyte; }\n~~~~~         ~~~~~\nvoid bar( u8_t arg1, u16_t arg2 ) { /*...*/ }\n          ~~~~       ~~~~~\n\nENTRY org.eclipse.cdt.core 1 1 Apr 13, 2004 15:16:02.666\nMESSAGE Parser: Unexpected exception in simpleDeclaration:\ncreateSimpleTypeSpecifier:null. w/Scanner @file D:\n\\workspace_uip\\oslf\\arch\\uclinux\\OSLF_Timer.cpp:33\n\n...\n\nENTRY org.eclipse.cdt.core 1 1 Apr 13, 2004 15:16:03.957\nMESSAGE Parser: Unexpected exception in usingClause:createUsingDeclaration:null. \nw/Scanner @file D:\\MinGw\\include\\c++\\3.3.3\\clocale:58\n\nThats what I guess, from the log and why the exceptions are all thrown, and \nmaybe this also keeps the indexer/parser from doing its job.",
    "I am raising this to critical.   I have reproduced the same scenario again.\n\nWhen executing step 4, I get an out of memory error:\n\n!ENTRY org.eclipse.ui 4 4 Apr 05, 2004 13:46:23.125\n!MESSAGE Unhandled event loop exception\n!ENTRY org.eclipse.ui 4 0 Apr 05, 2004 13:46:23.140\n!MESSAGE java.lang.OutOfMemoryError\n!STACK 0\njava.lang.OutOfMemoryError\n\nWhen executing step 7,  the hour glass comes on for a few seconds and then the \npointer comes back.  Nothing happened and the file did not display in the \neditor.  No exceptions were generated in the .log file.\n",
    "Mathieu,\nIf you right click on the file and choose \"open\" from the context menu, you \nwill probably get an error message saying that \"Problem Opening Editor: Editor \ncould not be initialized\". I think this is Eclipse behavior with very large \nfiles. I mean I think it fails even before getting to the CEditor.",
    "Bug 59545 raised to track the ELF vs Elf issue,\nwhich doesn\u0027t look resolved after all.\nBut it seems independent of this defect.\n",
    "Matthieu, do you have recent metrics on this?  \nAre we getting better or worse? There are lots of changes going in.",
    "John, no change.\n\nI have reproduced the same scenario again.\n\nWhen executing step 4, I get an out of memory error:\n\n!ENTRY org.eclipse.ui 4 0 Apr 22, 2004 16:29:35.843\n!MESSAGE java.lang.OutOfMemoryError\n!STACK 0\njava.lang.OutOfMemoryError\n\nWhen executing step 7,  the hour glass comes on for a few seconds and then the \npointer comes back.  Nothing happened and the file did not display in the \neditor.  No exceptions were generated in the .log file.\n",
    "I was with build 200404221512 ",
    "*** Bug 51502 has been marked as a duplicate of this bug. ***",
    "Through lots of hard work, I have brought the peak memory usage to parse this \nfile down from 60MB to 4.5MB.  Now I can open the the Outline for it \nproperly.  Problem is, when I close it, I cannot open it again.  I think it is \nrelated to defect 61965 (which Thomas is working on).  \n\nI too shall take a look at the problem from our side : I\u0027m going to try and \nget a faster windows computer so that I can profile stuff in under 3 hours.",
    "Hurray John!  Nice work parser guys!",
    "Do note that I while I have improved peak-memory usage, we still take tons of \nmemory to tokenize the file and build the AST and symbol table.  The battle is \nfar from over ... ",
    "I\u0027ve removed the dependancy on 61965 since I\u0027ve tracked down the resource\n/memory leak problem.  It was because we were leaving listeners lying around.\nThis isn\u0027t impacted by how much data is in the file, just how often you \nopened it.",
    "An update on where we stand wrt this defect: \nWhile peak memory usage on large files in QUICK_PARSE mode is contained to \nunder 4.5 MB, we still run out of memory on repeated open-closes of this \nfile.  Parsing this file creates over 300,000 tokens and even though it does \nnot leak, there still seems to be memory issues.  While I am sure that there \nare more things that we can do internally (parser and code model) to better \nthis situation, part of the problem occurs because of the local-history backup \nthat happens, where the core platform creates a StringBuffer for the entire \ncontents of the 4.2 MB file, and then uses that to create a String \nrepresentation for the Local History store.  This heavy-weight process also \nhappens for the editor input as well, basically increasing memory usage \ndrastically as large files get opened and closed in the platform.  \n\nWhat this tells me is that even if I do get this particular case to pass, \nthere will be other examples of large source files where the platform can not \nscale within an editor.  Once I complete my modelling of this I shall raise a \ndefect/feature request upon the platform team to revisit this infrastructure \npost Eclipse 3.0.  ",
    "Moving to 2.0.1.   We are targeting 2.0.1 to address parser related performance \nissues.",
    "This test case currently causes an infinite loop in the Parser/Scanner2.  ",
    "It\u0027s not an infinite loop anymore, more so that it causes OutOfMemoryError\u0027s \nwhen Eclipse is started up w/only 256 MB of memory.  \n\nFurther investigation is necessary to figure out if this is something that can \nbe resolved for 2.0.1 or not.  ",
    "Submitted a workaround to at least let the OutOfMemoryError propogate up to \nthe client so that they can handle it as best they can.  ",
    "In 2.0 (prior to Doug\u0027s code reader migration) our peak memory usage for \nparsing this file was 4 MB.  Now it is 18 MB (but it is faster). This should \nnot be causing out of memory issues within CDT.  I need to profile Eclipse\u0027s \nmemory as a whole again to figure out what is going on here. ",
    "Can someone post the testcases that were used for this?  I don\u0027t see any attachments...\n\nFailing that, if it was IBM proprietary code, please email me privately with the details.",
    "Future means you commit to fix it in the Future. Inboxes can\u0027t make committments. Moving to \u0027--\u0027."
  ],
  "commentCreationDates": [
    "2004-03-08T16:32:49+01:00",
    "2004-03-09T15:57:47+01:00",
    "2004-03-12T19:21:48+01:00",
    "2004-04-05T07:56:30+02:00",
    "2004-04-05T14:40:29+02:00",
    "2004-04-05T14:42:44+02:00",
    "2004-04-05T20:07:06+02:00",
    "2004-04-05T20:38:03+02:00",
    "2004-04-05T20:40:00+02:00",
    "2004-04-05T20:45:16+02:00",
    "2004-04-05T21:20:58+02:00",
    "2004-04-05T21:28:02+02:00",
    "2004-04-05T21:41:09+02:00",
    "2004-04-07T00:35:19+02:00",
    "2004-04-07T01:05:42+02:00",
    "2004-04-07T02:45:33+02:00",
    "2004-04-13T17:43:14+02:00",
    "2004-04-14T17:47:43+02:00",
    "2004-04-14T20:26:32+02:00",
    "2004-04-22T00:11:37+02:00",
    "2004-04-22T02:24:21+02:00",
    "2004-04-22T22:43:51+02:00",
    "2004-04-22T22:48:35+02:00",
    "2004-05-14T23:04:32+02:00",
    "2004-05-20T16:41:49+02:00",
    "2004-05-20T18:05:36+02:00",
    "2004-05-20T22:22:56+02:00",
    "2004-05-21T02:58:56+02:00",
    "2004-05-31T16:43:02+02:00",
    "2004-06-21T19:56:44+02:00",
    "2004-08-11T16:40:55+02:00",
    "2004-08-13T21:40:22+02:00",
    "2004-08-16T22:05:01+02:00",
    "2004-08-18T16:40:30+02:00",
    "2007-05-10T17:31:59+02:00",
    "2007-08-21T16:56:01+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Extension not  found.:org.eclipse.cdt.core.Elf",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.CDescriptor.createExtensions",
          "source": "CDescriptor.java:496"
        },
        {
          "method": "org.eclipse.cdt.internal.core.CExtensionReference.createExtension",
          "source": "CExtensionReference.java:71"
        },
        {
          "method": "org.eclipse.cdt.core.CCorePlugin.getBinaryParserConfigs",
          "source": "CCorePlugin.java:503"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CModelManager.getBinaryParser",
          "source": "CModelManager.java:467"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CModelManager.createBinaryFile",
          "source": "CModelManager.java:482"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CModelManager.create",
          "source": "CModelManager.java:272"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CModelManager.create",
          "source": "CModelManager.java:194"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.DeltaProcessor.createElement",
          "source": "DeltaProcessor.java:86"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.DeltaProcessor.updateCurrentDeltaAndIndex",
          "source": "DeltaProcessor.java:418"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.DeltaProcessor.traverseDelta",
          "source": "DeltaProcessor.java:362"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.DeltaProcessor.traverseDelta",
          "source": "DeltaProcessor.java:372"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.DeltaProcessor.processResourceDelta",
          "source": "DeltaProcessor.java:345"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CModelManager.resourceChanged",
          "source": "CModelManager.java:815"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager$2.run",
          "source": "NotificationManager.java:255"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.notify",
          "source": "NotificationManager.java:248"
        },
        {
          "method": "org.eclipse.core.internal.events.NotificationManager.broadcastChanges",
          "source": "NotificationManager.java:142"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.broadcastChanges",
          "source": "Workspace.java:155"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.endOperation",
          "source": "Workspace.java:854"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1568"
        },
        {
          "method": "org.eclipse.ui.actions.WorkspaceModifyOperation.run",
          "source": "WorkspaceModifyOperation.java:105"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext$ModalContextThread.run",
          "source": "ModalContext.java:101"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "54040",
      "date": "2004-04-05T20:38:03+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Extension not  found.:org.eclipse.cdt.core.Elf",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.CDescriptor.createExtensions",
          "source": "CDescriptor.java:496"
        },
        {
          "method": "org.eclipse.cdt.internal.core.CExtensionReference.createExtension",
          "source": "CExtensionReference.java:71"
        },
        {
          "method": "org.eclipse.cdt.core.CCorePlugin.getBinaryParser",
          "source": "CCorePlugin.java:564"
        },
        {
          "method": "org.eclipse.cdt.internal.core.model.CProject.getLibraryReferences",
          "source": "CProject.java:154"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.cview.CViewContentProvider.getProjectChildren",
          "source": "CViewContentProvider.java:85"
        },
        {
          "method": "org.eclipse.cdt.internal.ui.cview.CViewContentProvider.getChildren",
          "source": "CViewContentProvider.java:49"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren",
          "source": "AbstractTreeViewer.java:729"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren",
          "source": "StructuredViewer.java:463"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.getSortedChildren",
          "source": "StructuredViewer.java:567"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$1.run",
          "source": "AbstractTreeViewer.java:361"
        }
      ],
      "number": 1,
      "commentIndex": 8,
      "bugId": "54040",
      "date": "2004-04-05T20:40:00+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "major"
    },
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "Extension not  \u003efound.:org.eclipse.cdt.core.Elf \u003e",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.CDescriptor.createExtensions\u003e",
          "source": "CDescriptor.java:496"
        }
      ],
      "number": 2,
      "commentIndex": 9,
      "bugId": "54040",
      "date": "2004-04-05T20:45:16+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "major"
    }
  ],
  "groupId": "54040",
  "bugId": "54040",
  "date": "2004-03-08T16:32:49+01:00",
  "product": "CDT",
  "component": "CDT-parser",
  "severity": "major"
}