{
  "comments": [
    "Loop in getResource causes stack overflow.   The stack was trimmed.\n\nStack Dump \u003d java.lang.StackOverflowError\n        at sun.misc.URLClassPath.getLoader(URLClassPath.java(Compiled Code))\n        at sun.misc.URLClassPath.findResource(URLClassPath.java(Inlined \nCompiled Code))\n        at java.net.URLClassLoader$2.run(URLClassLoader.java(Compiled Code))\n        at java.security.AccessController.doPrivileged1(Native Method)\n        at java.security.AccessController.doPrivileged(AccessController.java\n(Compiled Code))\n        at java.net.URLClassLoader.findResource(URLClassLoader.java(Compiled \nCode))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at org.eclipse.core.runtime.internal.adaptor.ContextFinder.findResource\n(ContextFinder.java:89)\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        \n        many of the same frames removed from here\n        \n        at org.eclipse.core.runtime.internal.adaptor.ContextFinder.findResource\n(ContextFinder.java:89)\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at org.eclipse.core.runtime.internal.adaptor.ContextFinder.findResource\n(ContextFinder.java:89)\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at org.eclipse.core.runtime.internal.adaptor.ContextFinder.findResource\n(ContextFinder.java:89)\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at org.eclipse.core.runtime.internal.adaptor.ContextFinder.findResource\n(ContextFinder.java:89)\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResource(ClassLoader.java(Compiled Code))\n        at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:1312)\n        at java.lang.Class.getResourceAsStream(Class.java:1457)\n        at db2j.cp.a._zj(Unknown Source)\n        at db2j.cp.a.run(Unknown Source)\n        at java.security.AccessController.doPrivileged1(Native Method)\n        at java.security.AccessController.doPrivileged\n(AccessController.java:351)\n        at db2j.cp.a.initialize(Unknown Source)\n        at db2j.cm.g.runWithState(Unknown Source)\n        at db2j.cp.a.\u003cinit\u003e(Unknown Source)\n        at com.ibm.db2j.core.MonitorBoot.start(Unknown Source)\n        at com.ibm.db2j.core.JDBCBoot.boot(Unknown Source)\n        at com.ibm.db2j.jdbc.DB2jDriver.boot(Unknown Source)\n        at com.ibm.db2j.jdbc.DB2jDriver.\u003cclinit\u003e(Unknown Source)\n        at com.ibm.db2j.jdbc.DB2jDataSource.findDriver(Unknown Source)\n        at com.ibm.db2j.jdbc.DB2jDataSource.getConnection(Unknown Source)\n        at com.ibm.db2j.jdbc.DB2jPooledConnection.openRealConnection(Unknown \nSource)\n        at com.ibm.db2j.jdbc.DB2jPooledConnection.\u003cinit\u003e(Unknown Source)\n        at com.ibm.db2j.jdbc.DB2jConnectionPoolDataSource.getPooledConnection\n(Unknown Source)",
    "Do the bundles involved have cycles in them?  I\u0027m not sure that would cause \nthis to happen but thought I would ask.",
    "Yes.   The bundles have cycles.",
    "We need to understand this for 3.1.  I will work with Jim to reproduce.",
    "Found the problem.\n\nThe scenario involves using the ContextFinder classloader as the parent of a \nclassloader.  This will cause endless recursion when resources are loaded \nusing ContextFinder as the parent.\n\nThe problem lies in how we walk the class stack to find a classloader to \nconsult in ContextFinder.  In this case ContextFinder is finding a class which \nwas loaded by a classloader which uses ContextFinder as a parent.  When we \nconsult this classloader it ends up asking the its parent classloader.  Since \nthe parent is ContextFinder we end up searching the class stack again and find \nthe same classloader to consult over and over ...\n\nA possible fix is to not consult a classloader in ContextFinder if its parent \nclassloader is the ContextFinder.\n\nI am lower severity because in Jim\u0027s case he really did not want to use \nContextFinder as the parent classloader.  In his case he really wanted the app \nclassloader from ClassLoader.getSystemClassLoader() to be the parent \nclassloader.\n\nPascal to investigate fixing for RC2.",
    "opps, wrong milestone.",
    "I have a work around now.    My Eclipse application was setting its context \nclass loader as  a URLClassLoader with the CL returned from \nThread.currentThread().getContextClassLoader() as the parent.    Changing the \nparent to the ClassLoader.getSystemClassLoader() fixed the problem.   Thanks \nTom. ",
    "Moving to Tom, as he has time to fix the pbs.\nThe expected fix to prevent cycle to verify that the classloader found by the\nfinder does not have the finder has its parent.",
    "Created an attachment (id\u003d22801)\nProposed fix\n\nPatch implements the suggestion in comment 7.  it cycles up the parent chain to\nmake sure ContextFinder is not a parent to the classloader used to delegate to.",
    "Need approval from Jeff for RC2.\nNeed review from Pascal.",
    "Patch verified.\nRafael to take a look as well.",
    "Created an attachment (id\u003d22804)\nnew patch\n\nRafael found a problem with the patch, it did not check for null in\ncheckClassLoader which could lead to a NPE.  Thanks Rafael.",
    "+1",
    "Fixed for RC2."
  ],
  "commentCreationDates": [
    "2005-06-08T22:51:09+02:00",
    "2005-06-08T23:15:34+02:00",
    "2005-06-08T23:47:18+02:00",
    "2005-06-09T17:57:57+02:00",
    "2005-06-09T20:08:13+02:00",
    "2005-06-09T20:10:44+02:00",
    "2005-06-09T22:01:01+02:00",
    "2005-06-10T15:54:47+02:00",
    "2005-06-10T16:00:22+02:00",
    "2005-06-10T16:01:15+02:00",
    "2005-06-10T16:09:41+02:00",
    "2005-06-10T16:57:39+02:00",
    "2005-06-10T17:12:20+02:00",
    "2005-06-10T17:25:22+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "sun.misc.URLClassPath.getLoader",
          "source": "URLClassPath.java(Compiled Code)"
        },
        {
          "method": "sun.misc.URLClassPath.findResource",
          "source": "URLClassPath.java(Inlined  Compiled Code)"
        },
        {
          "method": "java.net.URLClassLoader$2.run",
          "source": "URLClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.security.AccessController.doPrivileged1",
          "source": "Native Method"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "AccessController.java (Compiled Code)"
        },
        {
          "method": "java.net.URLClassLoader.findResource",
          "source": "URLClassLoader.java(Compiled  Code)"
        },
        {
          "method": "java.lang.ClassLoader.getResource",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.getResource",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.getResource",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.getResource",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.ContextFinder.findResource",
          "source": "ContextFinder.java:89"
        },
        {
          "method": "java.lang.ClassLoader.getResource",
          "source": "ClassLoader.java(Compiled Code)"
        },
        {
          "method": "java.lang.ClassLoader.getResource",
          "source": "ClassLoader.java(Compiled Code)"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "99064",
      "date": "2005-06-08T22:51:09+02:00",
      "product": "Platform",
      "component": "Runtime",
      "severity": "minor"
    }
  ],
  "groupId": "99064",
  "bugId": "99064",
  "date": "2005-06-08T22:51:09+02:00",
  "product": "Platform",
  "component": "Runtime",
  "severity": "minor"
}