{
  "comments": [
    "The International Components for Unicode (ICU) is a mature, widely used set of\nC/C++ and Java libraries that provide premier general globalization as well as\nUnicode support. It grew out of the JDK 1.1 internationalization APIs, which the\nICU team contributed to Java. ICU is widely portable and gives applications the\nsame results on all platforms and between C/C++ and Java software. \n\t\n\nThe ICU libraries contain numerous improvements and bug fixes over the standard\nJava libraries.\n\nA new plugin titled \"com.ibm.icu\" will be created to hold this library. \nDownstream plug-ins can take advantage of this once it is in the builds.",
    "Please do not transgress the rules of using the providing org reverse domain\nname as a plugin root name!\nThe plugin *SHOULD NOT* be named com.ibm.icu but org.eclipse..whatever_you_want. \nEclipse.org is the provider of the ICU in that case, not IBM....\nWhat if IBM wants to distribute an ICU plugin in the future?\n\nThere are also other issues for instance with org.junit...\nNow that 4.0 is coming soon, what if I want to have both 3.8.1 and 4.0 active?\n\nThe plugin version should *NOT* be the library version IMHO.\n\nInstaed the plugin should be something like 3.2.0 and the  name like\norg.eclipse.icu.1.2.2_3.2.0 assuming that the you are using is at version 1.2.2.\nThis would read ICU 1.2.2 as packaged by Eclispe.org for Eclispe version 3.2.0\n",
    "(In reply to comment #1)\n\nThe plugin is (apart from plug-in mainfest format) completely independent of \nother Eclipse plugins.  It is simply a wrapper around the ICU4J jar making it \navailable within Eclipse.  I therefore do not see a need to express the \nversion of Eclipse in the name.\n\nThis comes directly from the ICU team, which within ibm \u0027owns\u0027 the com.ibm.icu \npackage prefix.  IBM does not currently publicly provide an ICU4J plugin (to \nmy knowledge) and any ones it might provide in the future would be identical \nto the one provided through Eclipse.\n\nSo com.ibm.icu_3.4.1, for example, seems reasonable to me.",
    "yes, much like org.apache.ant_1.6.5",
    "Created an attachment (id\u003d28367)\nicu4j plugin part 1 of 3\n\nPlugin is a wrapper around ICU4J 3.4.1",
    "Created an attachment (id\u003d28368)\nicu4j plugin part 2 of 3\n\nPlugin is a wrapper around ICU4J 3.4.1",
    "Created an attachment (id\u003d28369)\nicu4j plugin part 3 of 3\n\nPlugin is a wrapper around ICU4J 3.4.1",
    "Created an attachment (id\u003d28467)\nicu4j test plugin part 1 of 3\n\nPart 1 of unit test plugin that wraps icu4j test suite",
    "Created an attachment (id\u003d28468)\nicu4j test plugin part 2 of 3\n\nPart 2 of icu4j test plugin that wraps icu4j test suite",
    "Created an attachment (id\u003d28469)\nicu4j test plugin part 3 of 3\n\nPart 3 of icu4j test plugin that wraps icu4j test suite",
    "karice, let\u0027s talk about putting this in",
    "Created an attachment (id\u003d28528)\nErrors running testUtil test\n\nI got these errors (see attachment) when running the testUtil test.  I ran them\nin Eclipse using Run \u003e JUnit Plugin Test running with J9 VM but no other\nadditional program or vm arguments.  Did you run the tests using JUnit in\nEclipse or use the command line (or something else)?  ",
    "(In reply to comment #11)\n\nI ran them using JUnit from within Eclipse.  It runs without errors for me.  \nDid you see these errors only during the Util test, or do you get the same for \nall the tests?",
    "Just the Util tests.  Should we have the source for these tests, so we can \ndebug any problems?",
    "(In reply to comment #13)\n\u003e Just the Util tests.  Should we have the source for these tests, so we can \n\u003e debug any problems?\n\nIt\u0027s odd, the resource name that it is searching for doesn\u0027t look right.  I \ncan send the icu4j source jar as 17 1Mb split attachments...  I\u0027m breaking for \nlunch, it would be an hour before I can get to it.\n",
    "I noticed that path to the resource looked incorrect too, but I wasn\u0027t sure if \nyou were adding some classpaths dynamically when running the tests.  From your \nearlier response I assume that answer is no.  There must be a better way we can \nget the source, so you don\u0027t have to create 17 attachments.  I will look into \nthat.",
    "Couldn\u0027t locate an FTP server for you to use.  Try attaching the files in 2MB \nchunks (I think that is the limit).  ",
    "Created an attachment (id\u003d28553)\nicu4j core and test src jar part 1 of 9\n\narrgh, the server thinks a megabyte is 1000000 bytes, while split thinks it is\n1024 x 1024 bytes.  phooey, i don\u0027t care what ISO says... :-)",
    "Created an attachment (id\u003d28560)\nicu4j core and test src jar part 2 of 9\n",
    "Created an attachment (id\u003d28561)\nicu4j core and test src jar part 3 of 9\n",
    "Created an attachment (id\u003d28562)\nicu4j core and test src jar part 4 of 9\n",
    "Created an attachment (id\u003d28563)\nicu4j core and test src jar part 5 of 9\n",
    "Created an attachment (id\u003d28564)\nicu4j core and test src jar part 6 of 9\n",
    "Created an attachment (id\u003d28565)\nicu4j core and test src jar part 7 of 9\n",
    "Created an attachment (id\u003d28566)\nicu4j core and test src jar part 8 of 9\n",
    "Created an attachment (id\u003d28567)\nicu4j core and test src jar part 9 of 9\n",
    "(In reply to comment #16)\nHmmm, the line number of the call to createBundle in TestAliases in \nICUResourceBundleTest.java is off, I have it at line 438 while your stack \ntrace shows it at 443.  If there\u0027s nothing obvious on your end, I can upload \nthe tests again.  They should be the same as what the sources show, though.",
    "I am looking at the ICUResourceBundleTest class (now with the source) and the \ncreateBundle call is on line 438.  Not sure why, but my stack trace doesn\u0027t \nshow line numbers for the code in the tests jar anymore (still using J9).",
    "Not sure if this will help solve the dilemma, but from what I am seeing with \nthe source that you provided (I decided to import all of it to see if I could \nfigure out what is going on) it seems that the source may not match the \ncompiled class files of the original attachments.  The reason I say this is \nwhen I imported the source I got some compile errors on some of the \ncom.ibm.icu.impl classes.  Example: Line 520 in ICUResourceBundleImpl reads:\n  assert byteOffset+length \u003c rawData.length;\nbut this is not valid Java syntax.\nI saw 11 errors like this.  I will add an attachement with the errors.",
    "Created an attachment (id\u003d28599)\ncompile errors when importing all source\n",
    "(In reply to comment #28)\nOur standard ICU builds are performed using Ant outside of Eclipse. We compile \nwith source and output file generation compatible with JDK 1.4, since we use \nthe assert keyword in our code.  I suspect this is the cause of the \ncompilation errors you are seeing.  In particular, the assertion statement you \nrefer to is indeed valid java syntax, and Eclipse accepts it just fine when \nthe compiler options are set correctly.\n\nIt\u0027s possible that there is a mismatch with the libraries, though I don\u0027t \nbelieve I touched these files-- I had to touch the TestAll code, which wasn\u0027t \ndesigned to be invoked by code but only from a shell script, but that should \nhave impacted only that file.\n\nI will reupload the man icu jar file and see if that helps.  My environment \nworks just fine. In fact I never even enter the method where you are seing the \nerror.  The other thing I might try is using the same snapshot of Eclipse that \nyou are using to test in-- I\u0027m using 3.1.  What are you using?",
    "I was originally using Eclipse 3.2 but I just tried running in 3.1 with the \nsame VM (1.4.2 J9) and got the same result.  Was it the JDK Compliance compiler \nsettings in Eclipse that you changed?",
    "(In reply to comment #31)\nYes.  I set the compliance level to 1.4 and also set the source and class \ncompatibility levels to 1.4.",
    "I was able to get the tests running with all the source for the tests and \nimplementation of ICU4J in the same plugin (and after changing the compiler \nsettings), but when I remove the source and try to run the tests from the tests \njar file (and icu4j in a jar file too) I get 2 failures, different from the \noriginal failures - params.errorSummary is null in the runUtility method for \ntestTimeZone and testTestCharsetDetector\n\njava.lang.NullPointerException\n\tat com.ibm.icu.tests.UnitTest.runUtility(UnitTest.java:107)\n\tat com.ibm.icu.tests.UnitTest.testTimeZone(UnitTest.java:89)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests\n(RemoteTestRunner.java:478)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run\n(RemoteTestRunner.java:344)\n\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main\n(RemotePluginTestRunner.java:57)\n\tat org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run\n(CoreTestApplication.java:24)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:226)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:375)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:164)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:58)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:282)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)\n\n",
    "(In reply to comment #33)\nThere\u0027s a difference in our configurations that causes a different class \nloader to be used.  Your configuration uses the EclipseClassLoader, while mine \nis using Launcher$AppClassLoader.  The AppClassLoader can resolve the request \nfor the resource named \u0027com/ibm/icu/dev/data/testdata/testtypes.res\u0027 in the \ntest jar, while the EclipseClassLoader cannot.  This causes ICU4J to fallback \nto trying to find the resource as a java resource instead of an ICU resource, \nand it can\u0027t (ICU4J also mangles the name).\n\nI suspect the class loaders differ in the treatment of \u0027.\u0027 and \u0027/\u0027, that is, \nthe AppClassLoader is treating them the same and the EclipseClassLoader is \nnot.  This resource is listed by eclipse as being in the \npackage \u0027com.ibm.icu.dev.data.testdata\u0027 so an exact match on the string would \nfail.  I\u0027m fuzzy on the class loading rules, perhaps Eclipse is both stricter \nand more correct than other environments.\n\nI\u0027m not sure why the configurations differ in which class loader is used.  I\u0027m \na complete novice on Eclipse packaging and it is like voodoo to me...",
    "I will ask around here about the classloader issue.",
    "(In reply to comment #34)\n\u003e (In reply to comment #33)\nICU4J was switching class loaders mid-stream when handling resource aliases, \nand this was causing resource lookup failure when the aliases referenced \nacross jar files (a rare occurrence for us but a situation covered in our \ntests). I modified the code (about 10 lines) and this now works.  I also \nmodified the tests to specify the correct class loader, which wasn\u0027t happening \nin some cases.   ",
    "We have the tests running and passing at this point, but there are still some \nother issues we need to resolve before releasing into the build.",
    "ICU4J will be in the next nightly build.  ",
    "Verified in I20051213-0010"
  ],
  "commentCreationDates": [
    "2005-10-13T19:35:30+02:00",
    "2005-10-13T19:56:40+02:00",
    "2005-10-13T20:42:39+02:00",
    "2005-10-13T20:55:13+02:00",
    "2005-10-18T01:39:57+02:00",
    "2005-10-18T01:41:09+02:00",
    "2005-10-18T01:41:39+02:00",
    "2005-10-19T21:03:21+02:00",
    "2005-10-19T21:07:11+02:00",
    "2005-10-19T21:12:50+02:00",
    "2005-10-19T22:03:11+02:00",
    "2005-10-20T19:09:16+02:00",
    "2005-10-20T20:10:57+02:00",
    "2005-10-20T20:21:04+02:00",
    "2005-10-20T21:05:00+02:00",
    "2005-10-20T21:10:06+02:00",
    "2005-10-20T22:21:18+02:00",
    "2005-10-20T22:45:33+02:00",
    "2005-10-20T22:53:15+02:00",
    "2005-10-20T22:54:08+02:00",
    "2005-10-20T22:55:02+02:00",
    "2005-10-20T22:55:57+02:00",
    "2005-10-20T22:56:52+02:00",
    "2005-10-20T22:57:53+02:00",
    "2005-10-20T22:58:42+02:00",
    "2005-10-20T22:59:20+02:00",
    "2005-10-21T01:37:59+02:00",
    "2005-10-21T15:51:05+02:00",
    "2005-10-21T16:16:42+02:00",
    "2005-10-21T16:18:21+02:00",
    "2005-10-21T21:01:18+02:00",
    "2005-10-21T22:42:31+02:00",
    "2005-10-22T00:12:15+02:00",
    "2005-10-22T00:13:59+02:00",
    "2005-10-22T01:41:45+02:00",
    "2005-10-24T15:57:57+02:00",
    "2005-10-27T18:10:45+02:00",
    "2005-10-28T23:44:45+02:00",
    "2005-12-09T21:54:20+01:00",
    "2005-12-13T15:19:30+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "com.ibm.icu.tests.UnitTest.runUtility",
          "source": "UnitTest.java:107"
        },
        {
          "method": "com.ibm.icu.tests.UnitTest.testTimeZone",
          "source": "UnitTest.java:89"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "junit.framework.TestCase.runTest",
          "source": "TestCase.java:154"
        },
        {
          "method": "junit.framework.TestCase.runBare",
          "source": "TestCase.java:127"
        },
        {
          "method": "junit.framework.TestResult$1.protect",
          "source": "TestResult.java:106"
        },
        {
          "method": "junit.framework.TestResult.runProtected",
          "source": "TestResult.java:124"
        },
        {
          "method": "junit.framework.TestResult.run",
          "source": "TestResult.java:109"
        },
        {
          "method": "junit.framework.TestCase.run",
          "source": "TestCase.java:118"
        },
        {
          "method": "junit.framework.TestSuite.runTest",
          "source": "TestSuite.java:208"
        },
        {
          "method": "junit.framework.TestSuite.run",
          "source": "TestSuite.java:203"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests",
          "source": "RemoteTestRunner.java:478"
        },
        {
          "method": "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run",
          "source": "RemoteTestRunner.java:344"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main",
          "source": "RemotePluginTestRunner.java:57"
        },
        {
          "method": "org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run",
          "source": "CoreTestApplication.java:24"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:226"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:375"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:164"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:338"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:282"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 33,
      "bugId": "112517",
      "date": "2005-10-22T00:13:59+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "112517",
  "bugId": "112517",
  "date": "2005-10-13T19:35:30+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}