{
  "comments": [
    "Hi,\n\nI try to use a jar file generated with ajc (\u003ciajc outJar\u003d\"sources.jar\"\nincremental\u003d\"false\" source\u003d\"1.4\" Xreweavable\u003d\"true\"\u003e) as inpath option of the\nnext task:\n\n        \u003ciajc incremental\u003d\"false\" \n              source\u003d\"1.4\" \n              destdir\u003d\"${build.classes}\" \n              inpath\u003d\"${sources.jar}\"\n        \u003e\n\nIf \"sources.jar\" does not contain any aspect, the task will continue to fail if\nthe jar was generated with ajc(with or without the Xreweavable option). \nIt will only work if the jar file was generated with javac (javac + jar tasks).\n\nI use ant 1.6.2 and aspectj 1.2.1. When using aspectj 1.2, there are other\nproblems, apparently because the Xreweavable option is ignored.\n\n\nThe exception:\n\n     [iajc] ABORT\n     [iajc]\n     [iajc] Exception thrown from AspectJ 1.2\n \n     [iajc] This might be logged as a bug already -- find current bugs at\n     [iajc]  \nhttp://bugs.eclipse.org/bugs/buglist.cgi?product\u003dAspectJ\u0026component\u003dCo mpiler\n \n     [iajc] Bugs for exceptions thrown have titles File:line from the top stack,\n     [iajc] e.g., \"SomeFile.java:243\"\n \n     [iajc] If you don\u0027t find the exception below in a bug, please add a new bug\n     [iajc] at http://bugs.eclipse.org/bugs/enter_bug.cgi?product\u003dAspectJ\n     [iajc] To make the bug a priority, please include a test program\n     [iajc] that can reproduce this exception.\n     [iajc] unknown attributeorg.aspectj.weaver.WeaverVersion\n     [iajc] unknown attributeorg.aspectj.weaver.WeaverVersion\n     [iajc] org.aspectj.weaver.BCException: unknown\nattributeorg.aspectj.weaver.Wea verVersion\n     [iajc]     at org.aspectj.weaver.AjAttribute.read(AjAttribute.java:109)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelAttributes.readAjAttributes(BcelAttr ibutes.java:38)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelObjectType.unpackAspectAttributes(Bc\nelObjectType.java:166)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelObjectType.\u003cinit\u003e(BcelObjectType.jav a:85)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWorld.makeBcelObjectType(BcelWorld.j ava:202)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWorld.addSourceObjectType(BcelWorld. java:232)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWeaver.addClassFile(BcelWeaver.java: 270)\n     [iajc]     at\norg.aspectj.weaver.bcel.BcelWeaver.addJarFile(BcelWeaver.java:20 3)\n     [iajc]     at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.initBcelWo\nrld(AjBuildManager.java:447)\n     [iajc]     at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(Aj\nBuildManager.java:143)\n     [iajc]     at\norg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild\n(AjBuildManager.java:94)\n     [iajc]     at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:102)\n     [iajc]     at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)\n     [iajc]     at org.aspectj.tools.ajc.Main.run(Main.java:280)\n     [iajc]     at org.aspectj.tools.ajc.Main.runMain(Main.java:217)\n     [iajc]     at\norg.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.j ava:1157)\n     [iajc]     at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:954)\n     [iajc]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java: 275)\n     [iajc]     at org.apache.tools.ant.Task.perform(Task.java:364)\n     [iajc]     at org.apache.tools.ant.Target.execute(Target.java:341)\n     [iajc]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n     [iajc]     at org.apache.tools.ant.Project.executeTarget(Project.java:1214)\n     [iajc]     at org.apache.tools.ant.Project.executeTargets(Project.java:1062)\n     [iajc]     at org.apache.tools.ant.Main.runBuild(Main.java:673)\n     [iajc]     at org.apache.tools.ant.Main.startAnt(Main.java:188)\n     [iajc]     at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196)\n     [iajc]     at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55)",
    "The attribute not being understood in the error message is WeaverVersion - this\nattribute was added right before shipment of AspectJ 1.2.1.  An AspectJ 1.2.1 or\nabove weaver will understand them.  It sounds like the iajc being executed is\npre-1.2.1 - what is the classpath you used in the ANT script to define the iajc\ntask? Was it pointing to an old install of AspectJ (\u003c1.2.1) ?  The message\n\u0027Exception thrown from AspectJ 1.2\u0027 makes it sound like it was basic AspectJ\n1.2.0 which did not understand this attribute.\n\nIronically this attribute has been added so that future weavers can know which\nattributes will/won\u0027t exist in a class file and cope appropriately...",
    "That\u0027s correct! Thanks!\n\nNow it is the same problem as in 1.2: if the original\njar (sources.jar) does not have any aspect, the jar\ncan be woven, but if it already has aspects, reweaving the jar\n fails.\n\nIt might be a problem with the Xreweavable option, as\nthe jars generated with or without this option are the\nsame size.",
    "are you able to try building sources.jar from the command line suppling\n-Xreweavable that way?  (I\u0027m trying to ascertain if the problem is in the iajc\nprocessing of that option or not). Reweavable versions of the classes should\ndefinetly be larger.\n\nAlso, is it a problem if you need to build the initial sources.jar with javac \u0026\njar - if there are no aspects in the input for sources.jar?",
    "It is the same problem from command line, too.\n\nIt works fine if sources.jar does not have any aspect. In this case (with no\naspect) the jar can be built with ajc and Xreweavable option (no need to use\njavac + jar; \"ajc -outjar\" works) and supports (re)weaving (I can use it in\ninpath). \nIf the jar has aspects, apparently it cannot be re-woven (cannot be in inpath).\n\n",
    "I\u0027ve done minimal tests of reweaving an aspect and found no surprises, so we\nmight need to know more about your aspect to find out what the problem is.\n\nFor those writing test cases, here\u0027s how you\u0027d specify it for the harness (after\nupdating):\n\n\u003cajc-test dir\u003d\"bugs/reweavable\" pr\u003d\"83717\n    title\u003d\"reweavable aspects\"\u003e\n    \u003ccompile \n      files\u003d\"Reweavable.java\" \n      options\u003d\"-Xreweavable\"\n      outjar\u003d\"rw.jar\"/\u003e\n    \u003ccompile files\u003d\"rw.jar\"/\u003e\n    \u003crun class\u003d\"Reweavable\"/\u003e\n\u003c/ajc-test\u003e\n\nI only tried a basic one, but the aspect does advise itself:\n\npublic class Reweavable {\n    public static void main(String[] args) {\n        System.out.println(\"in main\");\n    }\n    static aspect A {\n        public A() {}\n        after() returning: execution(void A.foo()) {\n            System.out.println(\"advising aspect method foo\");\n        }\n        before() : execution(void main(String[])) {\n            System.out.println(\"before main\");\n            foo();\n        }\n        void foo() {}\n    }\n}\n\nUnless someone objects, I\u0027ll move this to the compiler component and reassign to\nAndy.",
    "reassigning as compiler/weaver issue...",
    "Here is the problem:\n\n1. the code that works\n\npackage testreweave;\n\npublic interface InterfaceB {\n\n    public void b();\n\n}\n\n//-----------\n\npackage testreweave;\n\npublic interface InterfaceA extends InterfaceB {\n    \n    public void a();\n}\n\n//-----------\n\npackage testreweave;\n\npublic class A implements InterfaceA {\n\n    public void a() {\n\tSystem.out.println(\"A.a\");\n    }\n\n    public void b() {\n\tSystem.out.println(\"introduced A.b\");\n    }\n}\n\n//-----------\n\npackage testreweave;\n\npublic privileged aspect IntroduceB {\n\n//    declare parents: InterfaceA extends InterfaceB;\n\n//    public void A.b() {\n//\tSystem.out.println(\"introduced A.b\");\n//    }\n\n}\n\n//-----------\n\nWith the sources above generate srcjar.jar:\n\u003eajc -outjar srcjar.jar -argfile srclist1.lst -Xreweavable\n\n//The aspect trying to reweave things\nimport testreweave.*;\n\npublic privileged aspect Reweave {\n    \n    public void InterfaceB.rewoven() {\n        System.out.println(\"A.rewoven\");\n    }\n\n   public void A.test() {\n        A a \u003d new A();\n        a.rewoven();\n   }\n}\n\nCompile: \u003eajc -d binsrc -argfile srclist2.lst -inpath srcjar.jar\n\nand everything is fine.\n\n******************\n\n2. The code that doesn\u0027t work: uncomment the code in the aspect IntroduceB and \ncomment out the corresponding code in the affected classes.\n\npackage testreweave;\n\npublic interface InterfaceB {\n\n    public void b();\n\n}\n\n// -----------\n\npackage testreweave;\n\npublic interface InterfaceA /*extends InterfaceB*/ {\n    \n    public void a();\n}\n\n// -----------\n\npackage testreweave;\n\npublic privileged aspect IntroduceB {\n\n    declare parents: InterfaceA extends InterfaceB;\n\n    public void A.b() {\n\tSystem.out.println(\"introduced A.b\");\n    }\n\n}\n\n// -----------\n\npackage testreweave;\n\npublic class A implements InterfaceA {\n\n    public void a() {\n\tSystem.out.println(\"A.a\");\n    }\n\n    //    public void b() {\n    //\tSystem.out.println(\"introduced A.b\");\n    //    }\n\n\n}\n\nWith the sources above generate srcjar.jar:\najc -outjar srcjar.jar -argfile srclist1.lst -Xreweavable\n\n//The aspect trying to reweave things\nimport testreweave.*;\n\npublic privileged aspect Reweave {\n    \n    public void InterfaceB.rewoven() {\n        System.out.println(\"A.rewoven\");\n    }\n\n   public void A.test() {\n        A a \u003d new A();\n        a.rewoven();\n   }\n}\n\n\u003e ajc -d binsrc -argfile srclist2.lst -inpath srcjar.jar\n\n..\\TestReweave\\src\\Reweave.aj:11 error The method rewoven() is\n undefined for the type A\na.rewoven();\n\n\n1 error, 1 warning\n\nHope I haven\u0027t missed anything and you can reproduce the error. I used \naspectj1.2 for this example, but I think it\u0027s the same problem with 1.2.1",
    "for investigation in aj5m3",
    "not generics, postponing until after M3",
    "This is exactly the same problem as discussed in bug 108099.  When re-processing\na reweavable type that was targetted by ITDs we fail to take into account any\nnew ITDs and just apply the ones applied previously.  In this case the rewoven\nmethod is never added to A because A was targetted by an ITD in a previous\ncompilation.",
    "Whilst looking at this bug, I found a problem when some systems containing ITDs\nhas been compiled with 1.2.1 and is to be processed with 1.5.  between 1.2.1 and\n1.5.0 we have added the ability for type mungers (representing ITDs) to remember\ntheir source location when they are serialized which enables us to do a better\njob creating relationships in the structure model and reporting weaving info. \nWe (I) didn\u0027t guard the loading of the source location based on whether an input\n.class file was marked as being built with AspectJ5.  So we attempted to load\nsource locations for type mungers when the input code was built by 1.2 or 1.2.1\n- this causes the classic EOFExceptions when processing attributes.\n\nI\u0027ve fixed it now ;)",
    "NPE fix and reweavable ITD fix checked in.  Effectively changed the code that\nprocesses existing weaverstateinfo objects (which occur in reweavable types) -\noriginal processing didn\u0027t allow for these types to be rewoven, but now it does.\n\nI have *NOT* put this fix back into AspectJ1.2.1, it is only in AspectJ5 - it\ncould be backported if you desperately need it????\n\n",
    "Fix in 1.5.0 is available now - raised 111413 to cover a possible backport."
  ],
  "commentCreationDates": [
    "2005-01-26T15:42:10+01:00",
    "2005-01-26T16:05:57+01:00",
    "2005-01-26T17:01:25+01:00",
    "2005-01-26T17:12:14+01:00",
    "2005-01-26T18:49:25+01:00",
    "2005-01-27T02:30:10+01:00",
    "2005-01-27T11:37:08+01:00",
    "2005-01-27T13:23:19+01:00",
    "2005-03-23T14:22:53+01:00",
    "2005-06-22T09:34:41+02:00",
    "2005-10-03T12:02:21+02:00",
    "2005-10-03T13:52:33+02:00",
    "2005-10-03T16:12:45+02:00",
    "2005-10-04T09:41:13+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.aspectj.weaver.BCException",
      "message": "unknown attributeorg.aspectj.weaver.Wea verVersion      [iajc]",
      "elements": [
        {
          "method": "org.aspectj.weaver.AjAttribute.read",
          "source": "AjAttribute.java:109"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "83717",
      "date": "2005-01-26T15:42:10+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "normal"
    }
  ],
  "groupId": "83717",
  "bugId": "83717",
  "date": "2005-01-26T15:42:10+01:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "normal"
}