{
  "comments": [
    "Build ID: NA\n\nSteps To Reproduce:\nThe problem situation involves an Agent Controller on a SLES 9 Linux machine and a client on a Windows Server 2003 machine.\nA logging agent is registered in the Agent Controller. The client starts monitoring the agent and after a while the agent dies.\nWhen the client tries to release the agent handle and disconnect from the Agent Controller, the Agent Controller has already died, so the client throws a socket exception: \n\njava.net.SocketException: Software caused connection abort: socket write error\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:105)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:137)\n        at org.eclipse.tptp.platform.execution.client.core.internal.ConnectionImpl.sendMessage(ConnectionImpl.java:688)\n        at org.eclipse.tptp.platform.execution.client.core.internal.AgentController.sendCommand(AgentController.java:1484)\n        at org.eclipse.tptp.platform.execution.client.core.internal.AgentController.releaseAgent(AgentController.java:560)\n        at org.eclipse.tptp.platform.execution.client.agent.internal.AgentImpl.releaseAccess(AgentImpl.java:565)\n\n\n\n\nThe logging agent looks like this:\n\nimport org.eclipse.hyades.logging.core.LoggingAgent;\n\npublic class MyACAgent {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t\n\t\tLoggingAgent loggingAgent \u003d new LoggingAgent(\"myagent\");\n\t\tThread.sleep(5000);\n\t}\n}\n\n\n\nThe client looks like this:\n\nimport java.net.InetAddress;\nimport org.eclipse.tptp.platform.execution.client.agent.IAgent;\nimport org.eclipse.tptp.platform.execution.client.core.*;\nimport org.eclipse.tptp.platform.execution.util.TPTPDataPath;\n\npublic class MyACClient {\n    public static final String AGENT_CONTROLLER_HOST \u003d \"9.182.191.77\";\n    public static final int AGENT_CONTROLLER_PORT \u003d 10006;\n    public static final String AGENT_NAME \u003d \"org.eclipse.tptp.legacy.myagent\";\n\n\n    public static void main(String args[]) throws Exception {\n\n        INode acNode \u003d null;\n        ConnectionInfo connInfo \u003d new ConnectionInfo();\n        acNode \u003d NodeFactory.createNode(AGENT_CONTROLLER_HOST);\n        connInfo.setHostName(AGENT_CONTROLLER_HOST);\n        connInfo.setPort(AGENT_CONTROLLER_PORT);\n\n        IAgentController ac \u003d acNode.connect(connInfo);\n\n        IAgent remoteLoggingAgent \u003d ac.getAgent(AGENT_NAME, \"org.eclipse.tptp.platform.execution.client.agent.IAgent\");\n\n        remoteLoggingAgent.startMonitoring(TPTPDataPath.DATA_PATH_RECEIVE, new LoggingAgentDataProcessor());\n\n        Thread.sleep(30000);\n\n        remoteLoggingAgent.releaseAccess();\n        ac.disconnect();\n    }\n\n\n\n    private static class LoggingAgentDataProcessor implements IDataProcessor {\n        public void incomingData(byte ignore1[], int ignore2, InetAddress ignore3) {}\n        public void incomingData(char ignore1[], int ignore2, InetAddress ignore3) {}\n        public void invalidDataType(byte ignore1[], int ignore2, InetAddress ignore3) {}\n        public void waitingForData() {}\n    }\n}\n\nMore information:",
    "Based on the import statements I see below, it looks like you have a client using the new AC client API (org.eclipse.tptp...) trying to connect to a logging agent that is using the RAC API (org.eclipse.hyades...).  These are different protocols.  The client could cause the AC to launch the agent, but I don\u0027t see how the agent would know how to register itself with the new AC as you indicate below.\n\nHowever, even with a mismatch in client/agent the AC should not crash. It would be useful to attach the servicelog.log that results from a run that shows this crash.  Modifying serviceconfig.xml so that the Logging level is set to \"DEBUG\" and the Format set to \"Simple\" and restarting the AC before the run would help isolate what is happening.\n\nAlso, please set the \"Version\" field above to match the release in which you found the problem.",
    "Created an attachment (id\u003d57409)\nlog file\n\nAs requested by the TPTP development team, here is the log file, generated by the Agent Controller with logging level set to \"DEBUG\" and format set to \"Simple\" :",
    "Created an attachment (id\u003d57410)\nthe configuration file of the Agent Controller:\n\nthe configuration file of the Agent Controller:",
    "The Agent Controller is installed using the following archive from the TPTP site: \n\tagntctrl.linux_ia32-TPTP-4.3.0-200610310100.zip",
    "Karla, please triage to 4.4",
    "Set target to 4.4 and corrected version found in as 4.3.",
    "Created an attachment (id\u003d60147)\npatch\n\nAndrew, please review the patch, resolving thread race condition in ACTL.",
    "*** Bug 170062 has been marked as a duplicate of this bug. ***",
    "Resolving since Andrew committed the patch."
  ],
  "commentCreationDates": [
    "2007-01-23T16:22:02+01:00",
    "2007-01-23T17:22:09+01:00",
    "2007-01-24T08:53:25+01:00",
    "2007-01-24T08:54:09+01:00",
    "2007-01-24T08:54:36+01:00",
    "2007-01-31T03:51:38+01:00",
    "2007-01-31T18:32:20+01:00",
    "2007-03-02T10:30:38+01:00",
    "2007-03-02T10:37:33+01:00",
    "2007-03-19T08:06:22+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.net.SocketException",
      "message": "Software caused connection abort: socket write error",
      "elements": [
        {
          "method": "java.net.SocketOutputStream.socketWrite0",
          "source": "Native Method"
        },
        {
          "method": "java.net.SocketOutputStream.socketWrite",
          "source": "SocketOutputStream.java:105"
        },
        {
          "method": "java.net.SocketOutputStream.write",
          "source": "SocketOutputStream.java:137"
        },
        {
          "method": "org.eclipse.tptp.platform.execution.client.core.internal.ConnectionImpl.sendMessage",
          "source": "ConnectionImpl.java:688"
        },
        {
          "method": "org.eclipse.tptp.platform.execution.client.core.internal.AgentController.sendCommand",
          "source": "AgentController.java:1484"
        },
        {
          "method": "org.eclipse.tptp.platform.execution.client.core.internal.AgentController.releaseAgent",
          "source": "AgentController.java:560"
        },
        {
          "method": "org.eclipse.tptp.platform.execution.client.agent.internal.AgentImpl.releaseAccess",
          "source": "AgentImpl.java:565"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "171418",
      "date": "2007-01-23T16:22:02+01:00",
      "product": "TPTP Agent Controller",
      "component": "Platform.Communication",
      "severity": "blocker"
    }
  ],
  "groupId": "171418",
  "bugId": "171418",
  "date": "2007-01-23T16:22:02+01:00",
  "product": "TPTP Agent Controller",
  "component": "Platform.Communication",
  "severity": "blocker"
}