{
  "comments": [
    "Eclipse 3.0 build 200307300800\n\nI was pasting some code into an inner class (a listener) when I got the \nfollowing stack overflow error.  The code I was pasting in did not have the \ncorrect number of closing \"}\".\n\n\n!ENTRY org.eclipse.ui 4 0 Aug 11, 2003 10:31:03.460\n!MESSAGE java.lang.StackOverflowError\n!STACK 0\njava.lang.StackOverflowError\n\tat org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.\u003cinit\u003e\n(SourceTypeBinding.java:46)\n\tat org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.\u003cinit\u003e\n(NestedTypeBinding.java:23)\n\tat org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.\u003cinit\u003e\n(LocalTypeBinding.java:24)\n\tat org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalType\n(ClassScope.java:143)\n\tat \norg.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding\n(ClassScope.java:33)\n\tat org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType\n(BlockScope.java:77)\n\tat \norg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType\n(QualifiedAllocationExpression.java:362)\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolve\n(Expression.java:433)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatemen\nts(AbstractMethodDeclaration.java:363)\n\tat \norg.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements\n(MethodDeclaration.java:135)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve\n(AbstractMethodDeclaration.java:353)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve\n(TypeDeclaration.java:848)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.resolve\n(AnonymousLocalTypeDeclaration.java:124)\n\tat \norg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType\n(QualifiedAllocationExpression.java:363)\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolve\n(Expression.java:433)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatemen\nts(AbstractMethodDeclaration.java:363)\n\tat \norg.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements\n(MethodDeclaration.java:135)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve\n(AbstractMethodDeclaration.java:353)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve\n(TypeDeclaration.java:848)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.resolve\n(AnonymousLocalTypeDeclaration.java:124)\n\tat \norg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType\n(QualifiedAllocationExpression.java:363)\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolve\n(Expression.java:433)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatemen\nts(AbstractMethodDeclaration.java:363)\n\tat \norg.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements\n(MethodDeclaration.java:135)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve\n(AbstractMethodDeclaration.java:353)\n\tat org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve\n(TypeDeclaration.java:848)\n\tat \norg.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.resolve\n(AnonymousLocalTypeDeclaration.java:124)\n\tat \norg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType\n(QualifiedAllocationExpression.java:363)\n\tat org.eclipse.jdt.internal.compiler.ast.Expression.resolve\n(Expression.java:433)\n...",
    "Could you please provide the whole test case?\nThanks.",
    "I will have to try and recreate it the steps.  After the StackOverflow error, \neclipse was not behaving correctly and had to be restarted.  ",
    "I had the class Browser.java (see attached).  I selected the following:\n\n--start selection here\n\t\t\t\twebSite.addEventListener\n(OleWebBrowser.ProgressChange, new OleListener() {\n\t\tpublic void handleEvent(OleEvent event) -- end selection here \n(before \"}\")\n\nThen, I hit Ctrl+X, CTRL+Z, CTRL+S a few times and the error happened.  I \ncan\u0027t make it happen every time but if I play with the CTRL+X, CTRL+Z, CTRL+S, \neventually it happens.\n\nI will also attach my preferences.",
    "Created an attachment (id\u003d5714)\njava file\n\nBrowser.java",
    "Created an attachment (id\u003d5715)\nVeronika\u0027s preferences\n\nVeronika\u0027s preferences",
    "I think this has something to do with the recovery.\n",
    "Need to be backported to 2.1 once addressed.",
    "Simple test case\n1) create X.java\npackage p;\npublic class X{\n  public void foo() {\n    new Y() {\n      public void bar() {\n        switch (zzz){\n          case 1 :\n          };\n        }\n        new Z() {\n          public void to\u003ccursor\u003eto() {\t\t\t\n        }\n      });\n    });\n  }\n}\n2) do ctrl + space at cursor location",
    "Inside RecoveredType\n[public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int \nbracketBalanceValue) {\n   ...\n   return lastMethod.add(typeDeclaration, bracketBalanceValue);\n   ...\n}]\nmust be\n[public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int \nbracketBalanceValue) {\n   ...\n   return lastMethod.add(memberTypeDeclaration, bracketBalanceValue);\n   ...\n}]\n\nFixed and regression test added (CompletionParserTest2#test0138()) in 3.0",
    "*** Bug 57067 has been marked as a duplicate of this bug. ***",
    "*** Bug 38098 has been marked as a duplicate of this bug. ***",
    "Backported and regression test added (CompletionParserTest2#test0130()) in 2.1",
    "Verified in 200405180816"
  ],
  "commentCreationDates": [
    "2003-08-11T18:13:10+02:00",
    "2003-08-11T18:14:58+02:00",
    "2003-08-11T18:49:03+02:00",
    "2003-08-11T19:04:58+02:00",
    "2003-08-11T19:06:28+02:00",
    "2003-08-11T19:08:04+02:00",
    "2003-08-26T16:49:55+02:00",
    "2004-04-08T14:55:47+02:00",
    "2004-04-08T15:10:09+02:00",
    "2004-04-08T16:52:02+02:00",
    "2004-04-08T16:54:32+02:00",
    "2004-04-08T16:56:45+02:00",
    "2004-04-08T19:16:47+02:00",
    "2004-05-18T17:04:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.StackOverflowError",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.\u003cinit\u003e",
          "source": "SourceTypeBinding.java:46"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.\u003cinit\u003e",
          "source": "NestedTypeBinding.java:23"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.\u003cinit\u003e",
          "source": "LocalTypeBinding.java:24"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildLocalType",
          "source": "ClassScope.java:143"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding",
          "source": "ClassScope.java:33"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType",
          "source": "BlockScope.java:77"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:362"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:433"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:363"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:135"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:353"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:848"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.resolve",
          "source": "AnonymousLocalTypeDeclaration.java:124"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:363"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:433"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:363"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:135"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:353"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:848"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.resolve",
          "source": "AnonymousLocalTypeDeclaration.java:124"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:363"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:433"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements",
          "source": "AbstractMethodDeclaration.java:363"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements",
          "source": "MethodDeclaration.java:135"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve",
          "source": "AbstractMethodDeclaration.java:353"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve",
          "source": "TypeDeclaration.java:848"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.resolve",
          "source": "AnonymousLocalTypeDeclaration.java:124"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType",
          "source": "QualifiedAllocationExpression.java:363"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.Expression.resolve",
          "source": "Expression.java:433"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "41395",
      "date": "2003-08-11T18:13:10+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "41395",
  "bugId": "41395",
  "date": "2003-08-11T18:13:10+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}