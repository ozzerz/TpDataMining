{
  "comments": [
    "I have tried to switch label providers on a TableViewer that has a SWT.VIRTUAL \nTable and recieved a NULL assert in StructuredViewer#disassociate.\n\nThis assert should not happen since the table is VIRTUAL. I\u0027m not sure that the \nassert is at all needed there, even in the non-virtual case.\nThe assert is thrown since, obviously, some item doesn\u0027t have data assigned to \nit, probably since it was never shown (or in my case, never cached).\n\nI presume that TableViewer should override disassociate(..) and check whether \nthe item is virtual/not cached/etc ...\n\nThe stack trace appears below:\n!SESSION Dec 15, 2004 11:44:00.225 ---------------------------------------------\neclipse.buildId\u003dunknown\njava.fullversion\u003dJ2RE 1.4.1 IBM Windows 32 build cn141-20030522 (JIT enabled: \njitc)\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003diw_IL\nCommand-line arguments: -application org.eclipse.ui.ide.workbench -\nDjava.library.path\u003dD:\\Visual Studio Projects\\fdpr_n\\visualoutput\n\n!ENTRY org.eclipse.ui 4 4 Dec 15, 2004 11:44:00.225\n!MESSAGE Unhandled event loop exception\n\n!ENTRY org.eclipse.ui 4 0 Dec 15, 2004 11:44:00.245\n!MESSAGE null argument;\n!STACK 0\norg.eclipse.jface.util.Assert$AssertionFailedException: null argument;\n\tat org.eclipse.jface.util.Assert.isNotNull(Assert.java:139)\n\tat org.eclipse.jface.util.Assert.isNotNull(Assert.java:116)\n\tat org.eclipse.jface.viewers.StructuredViewer.disassociate\n(StructuredViewer.java:272)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefresh\n(TableViewer.java:495)\n\tat org.eclipse.jface.viewers.TableViewer.internalRefresh\n(TableViewer.java:449)\n\tat org.eclipse.jface.viewers.StructuredViewer$7.run\n(StructuredViewer.java:924)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection\n(StructuredViewer.java:862)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh\n(StructuredViewer.java:922)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh\n(StructuredViewer.java:881)\n\tat org.eclipse.jface.viewers.ContentViewer.setLabelProvider\n(ContentViewer.java:268)\n\tat org.eclipse.jface.viewers.TableViewer.setLabelProvider\n(TableViewer.java:650)\n\tat com.ibm.hrl.tableview.TableView.switchViewersTo(TableView.java:572)\n\tat com.ibm.hrl.tableview.TableView$ToggleDisplayType.run\n(TableView.java:727)\n\tat org.eclipse.jface.action.Action.runWithEvent(Action.java:881)\n\tat org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection\n(ActionContributionItem.java:915)\n\tat org.eclipse.jface.action.ActionContributionItem.access$2\n(ActionContributionItem.java:866)\n\tat org.eclipse.jface.action.ActionContributionItem$8.handleEvent\n(ActionContributionItem.java:824)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java\n(Compiled Code))\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)\n\tat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:254)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:96)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:335)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:273)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:79)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:41)\n\tat java.lang.reflect.Method.invoke(Method.java:371)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:183)\n\tat org.eclipse.core.launcher.Main.run(Main.java:644)\n\tat org.eclipse.core.launcher.Main.main(Main.java:628)",
    "I cannot replicate this in 20050517. Here is my example code below\n\nimport org.eclipse.jface.viewers.IStructuredContentProvider;\nimport org.eclipse.jface.viewers.LabelProvider;\nimport org.eclipse.jface.viewers.TableViewer;\nimport org.eclipse.jface.viewers.Viewer;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.events.SelectionAdapter;\nimport org.eclipse.swt.events.SelectionEvent;\nimport org.eclipse.swt.layout.GridData;\nimport org.eclipse.swt.layout.GridLayout;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Display;\nimport org.eclipse.swt.widgets.Shell;\n\npublic class TableLabelProviderTest {\n\n\tstatic boolean showFirst \u003d true;\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\n\t\tDisplay display \u003d new Display();\n\t\tShell shell \u003d new Shell(display, SWT.CLOSE);\n\n\t\tshell.setLayout(new GridLayout(1, false));\n\n\t\tButton button \u003d new Button(shell, SWT.TOGGLE);\n\t\tbutton.setText(\"Reset label provider\");\n\n\t\tfinal TableViewer table \u003d new TableViewer(shell, SWT.VIRTUAL);\n\t\ttable.getControl().setLayoutData(new GridData(GridData.FILL_BOTH));\n\t\ttable.getTable().setLinesVisible(true);\n\n\t\ttable.setContentProvider(new IStructuredContentProvider() {\n\n\t\t\tpublic Object[] getElements(Object inputElement) {\n\t\t\t\t\n\n\t\t\t\tString[] result \u003d new String[200];\n\t\t\t\tfor (int i \u003d 0; i \u003c result.length; i++) {\n\t\t\t\t\tresult[i] \u003d \"Element \" + String.valueOf(i);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tpublic void dispose() {\n\t\t\t\t// TODO Auto-generated method stub\n\n\t\t\t}\n\n\t\t\tpublic void inputChanged(Viewer viewer, Object oldInput,\n\t\t\t\t\tObject newInput) {\n\t\t\t\t// TODO Auto-generated method stub\n\n\t\t\t}\n\n\t\t});\n\n\t\ttable.setLabelProvider(getLabelProvider());\n\n\t\ttable.setInput(table);\n\t\ttable.setItemCount(200);\n\n\t\tbutton.addSelectionListener(new SelectionAdapter() {\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\tshowFirst \u003d !showFirst;\n\t\t\t\ttable.setLabelProvider(getLabelProvider());\n\t\t\t}\n\t\t});\n\n\t\tshell.setSize(300, 400);\n\t\tshell.open();\n\t\twhile (!shell.isDisposed()) {\n\t\t\tdisplay.readAndDispatch();\n\t\t}\n\n\t}\n\n\tstatic LabelProvider getLabelProvider() {\n\t\tif (showFirst)\n\t\t\treturn getFirstLabelProvider();\n\t\treturn getSecondLabelProvider();\n\t}\n\n\tprivate static LabelProvider getSecondLabelProvider() {\n\t\treturn new LabelProvider() {\n\t\t\tpublic String getText(Object element) {\n\t\t\t\treturn (String) element + \" First\";\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate static LabelProvider getFirstLabelProvider() {\n\t\treturn new LabelProvider() {\n\t\t\tpublic String getText(Object element) {\n\t\t\t\treturn (String) element + \" Second\";\n\t\t\t}\n\t\t};\n\t}\n\n}\n",
    "Of course you don\u0027t get this problem !\nYou\u0027re passing ALL the contents of the table in getElements(..), therefore in \ndisassociate(..) getData() will always return a value which is not null.\n\nBut, when using SWT.VIRTUAL I could always use the SWT.SetData event to \ninitialize an object. In this case switching label providers fails in \ndisasociate, since this assumes that EVERY item MUST have some data when it is \ncalled, which is not true for items that were never displayed, or if someone \ncalled one of the clear() methods of Table itself.",
    "Marcel are you using a Table or a TableViewer? A TableViewer handles the SetData\ncallback for you.",
    "I am using a TableViewer, but unfortunataly the implementation of SWT.SetData \nin TableViewer is useless ...\n\nI MUST add a content provider to the viewer anyway, and I MUST return in \ngetElements(..) an array the size of my data, and I MUST put valid values in \nthose array elements, since null fails at some assert.\n\nTherefore, the implementation doesn\u0027t do anything useful.\n\nI have solved my problem(s) using an earlier version and implementing what I \nneeded, but this was a few months back.\nI\u0027m sorry, but I don\u0027t remember the exact details of the problem or have the \ntime to recreate them.\nWhat I am sure of, is that asserting for data in disassociate is unnecessary.\nLets assume the data is null ... so what ?\n\nI will make even a stronger point, TableViewer should be able to handle null \ndata by displaying an empty line.",
    "If you use the ILazyContentProvider and set the item count you don\u0027t. You are\nusing the standard content provider which has the characteristic.\n\nIf you hook the SetData callabck there are no guarantees from the TableViewer as\nyou are fighting its internals.\n\nHaving said that none of our viewers support null elements as we cannot do any\nlookup with it and have code that specifically prevents it.\n\n",
    "We didn\u0027t support VIRTUAL until 3.1 (sorry - didn\u0027t check the version number).\n\nI\u0027m going to close this as works for me as this is not an issue in what we are\nshipping in 3.1."
  ],
  "commentCreationDates": [
    "2004-12-15T09:45:07+01:00",
    "2005-05-18T21:20:45+02:00",
    "2005-05-19T08:45:19+02:00",
    "2005-05-19T13:58:35+02:00",
    "2005-05-19T15:25:32+02:00",
    "2005-05-19T15:49:00+02:00",
    "2005-05-19T17:34:14+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jface.util.Assert$AssertionFailedException",
      "message": "null argument;",
      "elements": [
        {
          "method": "org.eclipse.jface.util.Assert.isNotNull",
          "source": "Assert.java:139"
        },
        {
          "method": "org.eclipse.jface.util.Assert.isNotNull",
          "source": "Assert.java:116"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.disassociate",
          "source": "StructuredViewer.java:272"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefresh",
          "source": "TableViewer.java:495"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.internalRefresh",
          "source": "TableViewer.java:449"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$7.run",
          "source": "StructuredViewer.java:924"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:862"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:922"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:881"
        },
        {
          "method": "org.eclipse.jface.viewers.ContentViewer.setLabelProvider",
          "source": "ContentViewer.java:268"
        },
        {
          "method": "org.eclipse.jface.viewers.TableViewer.setLabelProvider",
          "source": "TableViewer.java:650"
        },
        {
          "method": "com.ibm.hrl.tableview.TableView.switchViewersTo",
          "source": "TableView.java:572"
        },
        {
          "method": "com.ibm.hrl.tableview.TableView$ToggleDisplayType.run",
          "source": "TableView.java:727"
        },
        {
          "method": "org.eclipse.jface.action.Action.runWithEvent",
          "source": "Action.java:881"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection",
          "source": "ActionContributionItem.java:915"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem.access$2",
          "source": "ActionContributionItem.java:866"
        },
        {
          "method": "org.eclipse.jface.action.ActionContributionItem$8.handleEvent",
          "source": "ActionContributionItem.java:824"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java (Compiled Code)"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:796"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2772"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2431"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1377"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1348"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:254"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:141"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:96"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:335"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:273"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:129"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:79"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:41"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:371"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:183"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:644"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:628"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "81065",
      "date": "2004-12-15T09:45:07+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "81065",
  "bugId": "81065",
  "date": "2004-12-15T09:45:07+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}