{
  "comments": [
    "Eclipse does not recognize jview as jre on a windows.",
    "Created an attachment (id\u003d54157)\nStandardMSVM.java\n\n",
    "Created an attachment (id\u003d54158)\nStandardMSVMRunner.java\n\n",
    "Created an attachment (id\u003d54159)\nStandardMSVMType.java\n\n",
    "\nI have implemented jview support with some TODOs as\nI do not understand LaunchingMessages.* initialization.\n\nIf I copy the class files to org.eclipse.jdt.launching.jar/\norg.eclipse.jdt.internal.launching jview works for me.\n\n",
    "Moving to JDT/Debug",
    "Not planned for 3.3 - we\u0027ve run out of feature time.",
    "This was filed way back at M3!\n\nWhat is the politics about changing the resolution?\nThe resulotion \u0027later\u0027 for an enhancement is the same\nas never - try searching for those. ",
    "LATER does not mean NEVER. It means not for this release, and it allows us to better manage our inbox. We should work on this for 3.4. Due to priorities/resouces (see our 3.3 plan items we are working on in platform and jdt debug), we were not able to spend sufficient time evaluating this contribution.\n\nHowever, I have found these issues:\n\n(1) StandardMSVMType uses the code to detect a default JRE: \"System.getenv(\"windir\")\". When running on a Sun 1.4.2 VM, this results in the following exception:\n\n java.lang.Error: getenv no longer supported, use properties and -D instead: windir\nat java.lang.System.getenv(System.java:691)\nat org.eclipse.jdt.internal.launching.StandardMSVMType.detectInstallLocation(StandardMSVMType.java:76)\nat org.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime(JavaRuntime.java:1651)\nat org.eclipse.jdt.launching.JavaRuntime.initializeVMs(JavaRuntime.java:2499)\nat org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes(JavaRuntime.java:492)\nat org.eclipse.jdt.internal.debug.ui.jres.InstalledJREsBlock.fillWithWorkspaceJREs(InstalledJREsBlock.java:920)\nat org.eclipse.jdt.internal.debug.ui.jres.InstalledJREsBlock.createControl(InstalledJREsBlock.java:374)\nat org.eclipse.jdt.internal.debug.ui.jres.JREsPreferencePage.createContents(JREsPreferencePage.java:112)\nat org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:233)\nat org.eclipse.jface.preference.PreferenceDialog.createPageControl(PreferenceDialog.java:1429)\nat org.eclipse.jface.preference.PreferenceDialog$13.run(PreferenceDialog.java:1188)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.core.runtime.Platform.run(Platform.java:850)\nat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:45)\nat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:153)\nat org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1182)\nat org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage(FilteredPreferenceDialog.java:433)\nat org.eclipse.jface.preference.PreferenceDialog$9.selectionChanged(PreferenceDialog.java:687)\nat org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:842)\nat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\nat org.eclipse.core.runtime.Platform.run(Platform.java:850)\nat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:45)\nat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:153)\nat org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:840)\nat org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1153)\nat org.eclipse.jface.viewers.StructuredViewer$5.widgetSelected(StructuredViewer.java:1173)\nat org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:250)\nat org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:244)\nat org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:418)\nat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\nat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\n(2) On my windows install, the JRE could not validate system libraries as the \"windows\\java\" directory did not contain a \"classes.zip\" file. Is this designed to work with all versions of JView, or just some versions?\n\n(3) The contribution did not include changes to plugin.xml that need to contribute to the vm type extension point. You can provide changes in the form of a CVS patch to share changes with files that exist in the repository. It also makes it easier to test/apply the contribution.",
    "Created an attachment (id\u003d62924)\npatch\n\nThis patch combines the previous attachments and adds an entry to plug-in XML.",
    "Could this be opened again, as 3.3 is out?\n\n\u003e (1) StandardMSVMType uses the code to detect a default JRE:\n\"System.getenv(\"windir\")\". When running on a Sun 1.4.2 VM, this results in the\nfollowing exception:\n\nYes, getenv was removed in 1.4.2. How do I get an enviroment variable in eclipse then?\n\n\u003e 2) On my windows install, the JRE could not validate system libraries as the\n\"windows\\java\" directory did not contain a \"classes.zip\" file. Is this designed\nto work with all versions of JView, or just some versions?\n\nThere is a note in the patch. Not all windows comes with the classes.zip, but\nit can be created by running \u0027clspack -auto\u0027\n",
    "Reopening and marking for consideration in 3.4.  Darin states in comment #8 that we should work on this in 3.4.",
    "How to push this patch further?\n\nWould a solution like\n\nString myGetEnv(String envvar)\ntry {\n  return System.getEnv(envvar)\n} catch(Error e) {\n  return null;\n}\n}\n\nbe accepted?",
    "\u003e How to push this patch further?\n\nAny answer?",
    "Created an attachment (id\u003d76542)\nupdated patch\n\nPatch retrieves environment variable from the ILaunchManager. Was able to get classes.zip to appear with specified command. However, whenever I try to launch the VM, I get an error - \"ERROR: java.lang.NoClassDefFoundError\". I\u0027m just try to run a program like this:\n\npublic class PropertyGetter {\n\tpublic static void main(String[] args) {\n\t\tProperties properties \u003d System.getProperties();\n\t\tSet keySet \u003d properties.keySet();\n\t\tIterator iterator \u003d keySet.iterator();\n\t\twhile (iterator.hasNext()) {\n\t\t\tString key \u003d (String) iterator.next();\n\t\t\tSystem.out.print(key);\n\t\t\tSystem.out.print(\" \u003d \");\n\t\t\tSystem.out.println(properties.get(key));\n\t\t}\n\t}\n}\n\nAs well, I noticed that StandardMSVM.getJavaVersion() is not properly implemented - it should return a Java version such as \"1.4\", etc.",
    "\n\u003e I get an error - \"ERROR: java.lang.NoClassDefFoundError\".\n\nRemember to set compliance setttings to 1.1 otherwise you get this error.\nI did think about giving the user a warning about this settings but\nis way over my head.\n\n\u003e Java version such as \"1.4\"\n\nThen it is 1.1\n\n",
    "I was able to get it to work using 1.1 compliance. However, I am hesitant to add JView support to the SDK based on the fact that the JRE will be obsolete at the end of this year (http://www.microsoft.com/mscorp/java/default.mspx). I was hoping that I could use \"execution environment description\" support to get the VM to work, but since the command line options are non-standard (i.e. uses slashes instead of dash, etc.), I don\u0027t this this will work.\n\nSee bug 181026 for a description of .ee files.",
    "\u003e I am hesitant to add JView support to the SDK based on \n\u003e the fact that the JRE will be obsolete at the end of this year\n\nBased on 300.000 ppl that downloaded our software ca. 20% only \nhave jview as java, so it is no going away any day soon. We \nexpect to support it longer than to the end of the year -\nand it would really help to have jview as jre in eclipse.\n\n\n\n",
    "Any chance of getting this in 3.4?",
    "I suggest that JView support should be developed as a VM Type in a seperate plug-in. Since JView is being phased out, I don\u0027t think it should be part of the platform.",
    "Marking as won\u0027t fix. Still think this is a 3rd party opportunity."
  ],
  "commentCreationDates": [
    "2006-11-20T10:35:37+01:00",
    "2006-11-20T10:38:07+01:00",
    "2006-11-20T10:38:28+01:00",
    "2006-11-20T10:38:46+01:00",
    "2006-11-20T10:46:38+01:00",
    "2006-11-20T14:39:30+01:00",
    "2007-04-04T04:50:07+02:00",
    "2007-04-04T12:28:12+02:00",
    "2007-04-04T16:15:31+02:00",
    "2007-04-04T16:18:25+02:00",
    "2007-07-12T22:28:32+02:00",
    "2007-07-16T15:53:57+02:00",
    "2007-08-03T14:37:00+02:00",
    "2007-08-21T15:33:59+02:00",
    "2007-08-21T16:51:54+02:00",
    "2007-08-21T17:42:05+02:00",
    "2007-08-21T21:19:52+02:00",
    "2007-08-21T22:13:13+02:00",
    "2007-09-19T16:12:23+02:00",
    "2007-09-19T16:22:56+02:00",
    "2007-11-20T17:07:57+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Error",
      "message": "getenv no longer supported, use properties and -D instead: windir",
      "elements": [
        {
          "method": "java.lang.System.getenv",
          "source": "System.java:691"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.StandardMSVMType.detectInstallLocation",
          "source": "StandardMSVMType.java:76"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime",
          "source": "JavaRuntime.java:1651"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.initializeVMs",
          "source": "JavaRuntime.java:2499"
        },
        {
          "method": "org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes",
          "source": "JavaRuntime.java:492"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.jres.InstalledJREsBlock.fillWithWorkspaceJREs",
          "source": "InstalledJREsBlock.java:920"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.jres.InstalledJREsBlock.createControl",
          "source": "InstalledJREsBlock.java:374"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.ui.jres.JREsPreferencePage.createContents",
          "source": "JREsPreferencePage.java:112"
        },
        {
          "method": "org.eclipse.jface.preference.PreferencePage.createControl",
          "source": "PreferencePage.java:233"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog.createPageControl",
          "source": "PreferenceDialog.java:1429"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog$13.run",
          "source": "PreferenceDialog.java:1188"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:850"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:45"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:153"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog.showPage",
          "source": "PreferenceDialog.java:1182"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage",
          "source": "FilteredPreferenceDialog.java:433"
        },
        {
          "method": "org.eclipse.jface.preference.PreferenceDialog$9.selectionChanged",
          "source": "PreferenceDialog.java:687"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$3.run",
          "source": "StructuredViewer.java:842"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:850"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:45"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:153"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged",
          "source": "StructuredViewer.java:840"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handlePostSelect",
          "source": "StructuredViewer.java:1153"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$5.widgetSelected",
          "source": "StructuredViewer.java:1173"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent",
          "source": "OpenStrategy.java:250"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$4",
          "source": "OpenStrategy.java:244"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$3.run",
          "source": "OpenStrategy.java:418"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        }
      ],
      "number": 0,
      "commentIndex": 8,
      "bugId": "165136",
      "date": "2007-04-04T16:15:31+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "enhancement"
    }
  ],
  "groupId": "165136",
  "bugId": "165136",
  "date": "2006-11-20T10:35:37+01:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "enhancement"
}