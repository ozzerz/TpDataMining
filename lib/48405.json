{
  "comments": [
    "(Apologies in advance since I am not an expert in Eclipse terminology, I\u0027m just \nreporting it so you all know...)\n\nIf I try to create a Visual Editor Java file inside a large project (1200+ Java \nfiles) the editor doesn\u0027t open correctly, most of the time.  I see the Java \nBeans selector on the left-hand side of the file view window, but the graphical \neditor itself shows nothing.  When the editor is first opened, I see \nthe \"Loading\", but then the editor never shows me the GUI frame, and the Java \nBeans view shows nothing.\n\nHowever, I have another project, with only 2 Java files, which references this \nproject.  If I copy that exact same source file into this smaller project, the \neditor opens fine.\n\nI thought maybe the parsing of the source file itself failed or something, so I \ntried creating a brand-new Visual Editor file but still had the same result.  \nSo it appears to happen only for files created in this large project.\n\nEclipse 2.1.2, Build 200311030802\nEclipse Modeling Framework 1.1.1\nGraphical Editing Framework 2.1.2\nVisual Editor 0.5.0\nJRE 1.4.1_03\nType of Visual Class created: Swing JFrame\n\nFor the \".log\" file snippet below, this is the test case:\n1. Create new Visual Class in the \"large\" project\n2. Type in a Name for the class\n3. Select \"frame\" \u0026 \"Swing\"\n4. Click Finish\n5. Visual Editor opens, but JFrame doesn\u0027t appear\n\n\nThere\u0027s more to this log snippet, but I can\u0027t cut-and-paste it all due to a \n65535 character limit...\n\n\n!ENTRY org.eclipse.jem.beaninfo 2 0 Dec 10, 2003 08:17:39.952\n!MESSAGE %Introspection failed on class \"javax.swing.JFrame.\"\n!STACK 0\njava.lang.NullPointerException\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoProxyConstants.\u003cinit\u003e\n(BeaninfoProxyConstants.java:103)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoProxyConstants.getConstants\n(BeaninfoProxyConstants.java:89)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.getProxyConstant\ns(BeaninfoClassAdapter.java:619)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.introspect\n(BeaninfoClassAdapter.java:492)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.introspectIfNece\nssary(BeaninfoClassAdapter.java:436)\n\tat org.eclipse.jem.internal.java.impl.JavaClassImpl.getEAnnotations\n(JavaClassImpl.java:382)\n\tat org.eclipse.jem.internal.beaninfo.adapters.Utilities.getDecorator\n(Utilities.java:159)\n\tat org.eclipse.jem.internal.beaninfo.adapters.Utilities.getBeanDecorator\n(Utilities.java:153)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.allProperties\n(BeaninfoClassAdapter.java:827)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.getAllProperties\n(BeaninfoClassAdapter.java:642)\n\tat org.eclipse.jem.internal.java.impl.JavaClassImpl.getAllProperties\n(JavaClassImpl.java:1234)\n\tat \norg.eclipse.ve.internal.java.codegen.java.rules.ThisReferenceRule.useInheritance\n(ThisReferenceRule.java:97)\n\tat \norg.eclipse.ve.internal.java.codegen.java.TypeVisitor.createThisIfNecessary\n(TypeVisitor.java:114)\n\tat org.eclipse.ve.internal.java.codegen.java.TypeVisitor.visit\n(TypeVisitor.java:165)\n\tat \norg.eclipse.ve.internal.java.codegen.java.JavaBeanModelBuilder.visitType\n(JavaBeanModelBuilder.java:351)\n\tat org.eclipse.ve.internal.java.codegen.java.JavaBeanModelBuilder.build\n(JavaBeanModelBuilder.java:319)\n\tat \norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.decodeDocument\n(JavaSourceTranslator.java:931)\n\tat \norg.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.loadModel\n(JavaSourceTranslator.java:691)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$15.run\n(JavaVisualEditorPart.java:1626)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages\n(Synchronizer.java:98)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1999)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1733)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)\n\tat org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)\n\tat org.eclipse.core.internal.boot.InternalBootLoader.run\n(InternalBootLoader.java:858)\n\tat org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:291)\n\tat org.eclipse.core.launcher.Main.run(Main.java:747)\n\tat org.eclipse.core.launcher.Main.main(Main.java:583)",
    "Created an attachment (id\u003d7100)\nbug details with log file\n",
    "It seems that there is a classpath problem for running the target VM.\n\nCan you attach the .classpath file",
    "Created an attachment (id\u003d7110)\nclasspath as requested\n",
    "hmm .... we will need some more info, if you do not mind.\n\nCan you create a brand new (Java) project, copy the .classpath file (as is) from\nthe large (problematic) project to the new project, and create a new Visual Class.\nIf you then can not open the VisualEditor (same problem), try to remove elements\nfrom the classpath (one at the time) Project-\u003eProperties-\u003eJava Build Path and\nsee which  entry inhibit VE to come up.",
    "I also started seeing the same problem with the \"smaller\" project.  I did what \nyou suggested (removed elements from the build path) and that made it work.  \nWhen I re-added back in the elements on the build path, it continued to work.\n\nNow I\u0027ve gone back to the \"large\" project and when I try to open the same file, \nI am getting an error \"Error trying to set new file into editor\" because \nthe .project file is read-only (log snippet 1).  This is probably a completely \ndifferent issue, but why would the .project file need to be written to??  In \nour environment, the .project file is checked into source control.  I shouldn\u0027t \nhave to check it out (or clear the read-only flag) to fix it.\n\nI cleared the read-only flag on the .project file and now when I try to open \nthe editor I get a dialog \"Error trying to set new file into editor\", but this \ntime because of a NullPointerException.  (log snippet 2)\n\n\n(log snippet 1)\n!ENTRY org.eclipse.team.core 4 4 Dec 11, 2003 07:34:01.14\n!MESSAGE File /server tests/.project is read-only.\n!ENTRY org.eclipse.ve.java.core 4 0 Dec 11, 2003 07:34:01.295\n!MESSAGE Exception\n!STACK 1\norg.eclipse.core.internal.resources.ResourceException: File /server \ntests/.project is read-only.\n\tat org.eclipse.core.internal.resources.Workspace.validateSave\n(Workspace.java:2124)\n\tat org.eclipse.core.internal.resources.File.setContents(File.java:270)\n\tat \norg.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite\n(FileSystemResourceManager.java:259)\n\tat org.eclipse.core.internal.resources.Project.writeDescription\n(Project.java:906)\n\tat org.eclipse.core.internal.resources.Project.setDescription\n(Project.java:807)\n\tat org.eclipse.core.internal.resources.Project.setDescription\n(Project.java:829)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoNature.addNatureToProject\n(BeaninfoNature.java:133)\n\tat \norg.eclipse.jem.internal.beaninfo.adapters.BeaninfoNature.createRuntime\n(BeaninfoNature.java:122)\n\tat org.eclipse.jem.internal.beaninfo.adapters.BeaninfoNature.getRuntime\n(BeaninfoNature.java:92)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi\nalizeForProject(JavaVisualEditorPart.java:1786)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi\nalize(JavaVisualEditorPart.java:1705)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run\n(JavaVisualEditorPart.java:1588)\n\tat java.lang.Thread.run(Unknown Source)\n!ENTRY org.eclipse.team.core 4 4 Dec 11, 2003 07:34:01.295\n!MESSAGE File /server tests/.project is read-only.\n\n\n\n(log snippet 2)\n!ENTRY org.eclipse.ve.java.core 4 0 Dec 11, 2003 07:40:01.672\n!MESSAGE Exception\n!STACK 0\njava.lang.NullPointerException\n\tat org.eclipse.emf.ecore.util.EcoreUtil.getExistingAdapter\n(EcoreUtil.java:75)\n\tat \norg.eclipse.jem.internal.instantiation.base.JavaInstantiation.initialize\n(JavaInstantiation.java:135)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi\nalizeForProject(JavaVisualEditorPart.java:1797)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initi\nalize(JavaVisualEditorPart.java:1705)\n\tat \norg.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run\n(JavaVisualEditorPart.java:1588)\n\tat java.lang.Thread.run(Unknown Source)\n",
    "What as the element that caused the problem?\n\nThe .project (if not already has it) will need to be augmented with a BeanInfo\nnature.  BeanInfo is the introdpector that is used to introspect JavaBeans.",
    "I don\u0027t know what you mean by \"what element\" caused the problem.\n\nBut now I understand (a little) why Eclipse would need to write to the .project \nfile.\n\nI made both .classpath \u0026 .project not-read-only and removed all \"Required \nprojects on the build path\" as well as all \"JARS and class folders on the build \npath\" (for the large project) but still I am seeing the same problem.  I tried \ncreating a brand-new Visual Class but it also still has the same issue.\n\nFWIW, I\u0027ve extracted the installation of Eclipse, EMF, GEF, and VE into a fresh \ndirectory, thinking there was some bogus file out there but still I get the \nsame problem.",
    "Create a new project with \"Empty\" (Java) Class extending Object.\n\npublic Class Empty {\n\n}\n\nput the \"bad\" classpath in this project:\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cclasspath\u003e\n    \u003cclasspathentry kind\u003d\"src\" path\u003d\"\"/\u003e\n    \u003cclasspathentry kind\u003d\"con\" path\u003d\"org.eclipse.jdt.launching.JRE_CONTAINER\"/\u003e\n    \u003cclasspathentry kind\u003d\"src\" path\u003d\"/server\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\n        path\u003d\"V_3RDPARTY_DIR/commons-logging/commons-logging.jar\"\nsourcepath\u003d\"V_3RDPARTY_DIR/commons-logging/src.zip\"/\u003e\n    \u003cclasspathentry kind\u003d\"var\"\npath\u003d\"V_3RDPARTY_DIR/log4j/dist/lib/log4j-1.2.8.jar\"/\u003e\n    \u003cclasspathentry kind\u003d\"src\" path\u003d\"/common\"/\u003e\n    \u003cclasspathentry kind\u003d\"output\" path\u003d\"\"/\u003e\n\u003c/classpath\u003e\n\nClose the project and reopen it (Project-\u003eopen).\nTry to openWith the Empty class using the Visual Editor.\n... assume the problem is there.\n\nFrom the project build path page, remove the following elements:\ncommons-logging.jar, log4j-1.2.8.jar \nWill VE open now?\n\n\n",
    "Created an attachment (id\u003d7148)\nThe actual \"bad\" project\u0027s classpath\n",
    "Okay, I followed your steps (but actually used the .classpath of the bad \nproject -the old one was not the right one, see new attachment):\n1. created new empty project\n2. created a class extending Object\n3. closed project\n4. reopened project\n5. tried to open Empty in Visual Editor\n6. It opened OK - the Visual Editor showed fine (so I didn\u0027t bother removing \nthe other log4j and commons-logging jar entries like you suggested).\n\nTried doing the same steps with a Visual Class (in step 2 above) and the Visual \nEditor still opened OK.\n\nWhen I say the Visual Editor doesn\u0027t open, I mean it OPENS, but the \"mock\" GUI \nnever shows up.  I get the little \"Loading\" text but the GUI form on which I \nwould drop GUI elements never displays.  I see the list of Java Beans (Swing \nComponents, Swing Containers, Swing Menus, AWT Controls) which I could use to \ndrop elements on the form.  But the \"other\" Java Beans view (the hierachical \ntree of form elements) shows nothing.\n\nI have been getting around this by working in the \"small\" project and then just \ncopying the source file back to the main source codebase tree.  It\u0027s painful \nbut it works, but I shouldn\u0027t have to go through these steps.\n\nCould this be because the .project file of dependent projects (common, server \napi) are read-only??",
    "If you are using BeanInfo, the other projects .project file should not be\nreadOnly.  If you are using srcControl mechanism, it should become r/w\nautomatically.\n\n\nDoes it work if you do not require these projects?\n\nPeter, I am going to be out of town in the next weeks, can you continue and help\nhere.  tks.",
    "Closing... no response in over two months. Please re-open if still a problem",
    "M1 released, move all resolved to Verified, as prelude to closing.",
    "M1 released, move all resolved/verified to Closed."
  ],
  "commentCreationDates": [
    "2003-12-10T13:31:15+01:00",
    "2003-12-10T13:33:22+01:00",
    "2003-12-10T20:04:17+01:00",
    "2003-12-10T21:46:12+01:00",
    "2003-12-10T21:57:06+01:00",
    "2003-12-11T12:45:43+01:00",
    "2003-12-11T13:17:00+01:00",
    "2003-12-11T18:48:47+01:00",
    "2003-12-11T19:52:40+01:00",
    "2003-12-13T13:13:02+01:00",
    "2003-12-13T13:28:25+01:00",
    "2003-12-15T16:59:49+01:00",
    "2004-02-23T23:39:05+01:00",
    "2004-05-03T23:32:45+02:00",
    "2004-05-03T23:36:20+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoProxyConstants.\u003cinit\u003e",
          "source": "BeaninfoProxyConstants.java:103"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoProxyConstants.getConstants",
          "source": "BeaninfoProxyConstants.java:89"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.getProxyConstants",
          "source": "BeaninfoClassAdapter.java:619"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.introspect",
          "source": "BeaninfoClassAdapter.java:492"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.introspectIfNecessary",
          "source": "BeaninfoClassAdapter.java:436"
        },
        {
          "method": "org.eclipse.jem.internal.java.impl.JavaClassImpl.getEAnnotations",
          "source": "JavaClassImpl.java:382"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.Utilities.getDecorator",
          "source": "Utilities.java:159"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.Utilities.getBeanDecorator",
          "source": "Utilities.java:153"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.allProperties",
          "source": "BeaninfoClassAdapter.java:827"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoClassAdapter.getAllProperties",
          "source": "BeaninfoClassAdapter.java:642"
        },
        {
          "method": "org.eclipse.jem.internal.java.impl.JavaClassImpl.getAllProperties",
          "source": "JavaClassImpl.java:1234"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.rules.ThisReferenceRule.useInheritance",
          "source": "ThisReferenceRule.java:97"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.TypeVisitor.createThisIfNecessary",
          "source": "TypeVisitor.java:114"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.TypeVisitor.visit",
          "source": "TypeVisitor.java:165"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.JavaBeanModelBuilder.visitType",
          "source": "JavaBeanModelBuilder.java:351"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.java.JavaBeanModelBuilder.build",
          "source": "JavaBeanModelBuilder.java:319"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.decodeDocument",
          "source": "JavaSourceTranslator.java:931"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.core.JavaSourceTranslator.loadModel",
          "source": "JavaSourceTranslator.java:691"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$15.run",
          "source": "JavaVisualEditorPart.java:1626"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:98"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:1999"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:1733"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1402"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.run",
          "source": "Workbench.java:1385"
        },
        {
          "method": "org.eclipse.core.internal.boot.InternalBootLoader.run",
          "source": "InternalBootLoader.java:858"
        },
        {
          "method": "org.eclipse.core.boot.BootLoader.run",
          "source": "BootLoader.java:461"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:291"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:747"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:583"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "48405",
      "date": "2003-12-10T13:31:15+01:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "normal"
    },
    {
      "exceptionType": "org.eclipse.core.internal.resources.ResourceException",
      "message": "File /server  tests/.project is read-only.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.resources.Workspace.validateSave",
          "source": "Workspace.java:2124"
        },
        {
          "method": "org.eclipse.core.internal.resources.File.setContents",
          "source": "File.java:270"
        },
        {
          "method": "org.eclipse.core.internal.localstore.FileSystemResourceManager.internalWrite",
          "source": "FileSystemResourceManager.java:259"
        },
        {
          "method": "org.eclipse.core.internal.resources.Project.writeDescription",
          "source": "Project.java:906"
        },
        {
          "method": "org.eclipse.core.internal.resources.Project.setDescription",
          "source": "Project.java:807"
        },
        {
          "method": "org.eclipse.core.internal.resources.Project.setDescription",
          "source": "Project.java:829"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoNature.addNatureToProject",
          "source": "BeaninfoNature.java:133"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoNature.createRuntime",
          "source": "BeaninfoNature.java:122"
        },
        {
          "method": "org.eclipse.jem.internal.beaninfo.adapters.BeaninfoNature.getRuntime",
          "source": "BeaninfoNature.java:92"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initializeForProject",
          "source": "JavaVisualEditorPart.java:1786"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initialize",
          "source": "JavaVisualEditorPart.java:1705"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run",
          "source": "JavaVisualEditorPart.java:1588"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 1,
      "commentIndex": 5,
      "bugId": "48405",
      "date": "2003-12-11T12:45:43+01:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.emf.ecore.util.EcoreUtil.getExistingAdapter",
          "source": "EcoreUtil.java:75"
        },
        {
          "method": "org.eclipse.jem.internal.instantiation.base.JavaInstantiation.initialize",
          "source": "JavaInstantiation.java:135"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initializeForProject",
          "source": "JavaVisualEditorPart.java:1797"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.initialize",
          "source": "JavaVisualEditorPart.java:1705"
        },
        {
          "method": "org.eclipse.ve.internal.java.codegen.editorpart.JavaVisualEditorPart$Setup.run",
          "source": "JavaVisualEditorPart.java:1588"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 2,
      "commentIndex": 5,
      "bugId": "48405",
      "date": "2003-12-11T12:45:43+01:00",
      "product": "VE",
      "component": "Java Core",
      "severity": "normal"
    }
  ],
  "groupId": "48405",
  "bugId": "48405",
  "date": "2003-12-10T13:31:15+01:00",
  "product": "VE",
  "component": "Java Core",
  "severity": "normal"
}