{
  "comments": [
    "So we finally figured what changed between 3.0M3 and 3.0M4: the Java Compiler \noptions changed to having 1.4 compliance as the default for generated class \nfiles. (We found this out through the circuitous route of inspecting the class \nfile attributes of an M4 compile vs a working command-line one.\n\nThe optimisation to swizzle JoinPoint for JoinPointStaticPart fails when ajc is \npassed the -1.4 option, resulting in an IncompatibleClassChangeError at runtime.\n\nTest case about to be checked into ajcTestsFailing.... and then we\u0027ll see if we \ncan fix it!",
    "Fixed in tree.  Once the cause was isolated, the fix was relatively easy\n\nThe required change was to use the setActualReceiverType method on the \nMessageSend node to inform it of the new receiver type so the correct code \nwould be generated in 1.4 mode.  3 other caches of this same type are also \nupdated to try to insulate us from future trouble.",
    "What do you mean by fixed? Does it mean that it will be OK if we tell the\ncompiler to generate 1.4 class files? I just tried running some very simple code: \n\npublic class Test {\n   public Test() {\n\t  this(5);\n\t  System.out.println(\"Hello()\");   \n   }\n   \n   public Test(int x) {\n\t  System.out.println(\"Hello(\" + x + \")\");\n   }\n   \n   public static void main(String[] args ) {\n\t  new Test();\n   }\n}\n\n\npublic aspect HelloAspect {\n\tbefore() : call( Test.new(..) ) {\n\t\t//System.out.println(thisJoinPoint.getSignature());\n\t\t\n\t   System.out.println( \"call-before\");\n\t}\n   \n\tbefore() : execution(Test.new(..)) {\n\t   System.out.println( \"execution-before\");\n\t}\n}\n\n\nAnd it gives me this: \n\njava.lang.IncompatibleClassChangeError\n\tat HelloAspect.ajc$before$HelloAspect$1a3(HelloAspect.java:16)\n\tat Test.main(Test.java)\nException in thread \"main\" \n\nWhat gives? I\u0027m using eclipse 3.0M6, AJDT 1.1.4 and AJDT/UI 0.6.4. J2SE version\nis 1.4.2_02. I tried both: generating 1.4 and 1.3 (rebuild after each change),\nboth didn\u0027t work. Only by setting the source compability to 1.3, and checking\nthe default class compat below that, did it work.",
    "Fixed in tree means that this bug has been fixed in the latest version of the \ncompiler in cvs.  This fix will be incorporated in the 1.2 build.  If you want \naccess to this fix you need to either wait for the official 1.2 builds or \nbuild the compiler yourself from the sources.\n\nAs you\u0027ve noticed, the workaround until then is to use the 1.3 source and \nclass compatibility rules that were the default before 3.0M3."
  ],
  "commentCreationDates": [
    "2003-10-23T15:54:07+02:00",
    "2003-10-23T18:54:45+02:00",
    "2004-02-01T06:06:24+01:00",
    "2004-02-01T23:20:26+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IncompatibleClassChangeError",
      "elements": [
        {
          "method": "HelloAspect.ajc$before$HelloAspect$1a3",
          "source": "HelloAspect.java:16"
        },
        {
          "method": "Test.main",
          "source": "Test.java"
        }
      ],
      "number": 0,
      "commentIndex": 2,
      "bugId": "45441",
      "date": "2004-02-01T06:06:24+01:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "critical"
    }
  ],
  "groupId": "45441",
  "bugId": "45441",
  "date": "2003-10-23T15:54:07+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "critical"
}