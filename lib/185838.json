{
  "comments": [
    "M7\n\nIf there is a CoreException opening a TextFileDocumentProvider it is forwarded as a PartInitException which is shown to the user as an unhandled exception (we show the dialog and the error part). This makes CoreExceptions look similar to problems like NPEs.\n\nIn 3.2.2 we got a nice editor with a blue line that said the file did not exist - I have checked and it was an instance of CompilationUnitEditor with no exception throen\n\nSTEPS\n1) Create a project with more files than can be displayed in the editor area\n2) Open all of the editors (so that there will be some EditorReferences on restart)\n3) Shut down and restart\n4) Delete the project\n\nEvery time you click on an editor reference you will get\n\n!ENTRY org.eclipse.ui 4 0 2007-05-07 17:56:51.188\n!MESSAGE Unable to create editor ID org.eclipse.jdt.ui.CompilationUnitEditor: The file does not exist.\n!STACK 1\norg.eclipse.core.runtime.CoreException: The file does not exist.\n\tat org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create(ResourceFileBuffer.java:237)\n\tat org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect(TextFileBufferManager.java:109)\n\tat org.eclipse.ui.editors.text.TextFileDocumentProvider.createFileInfo(TextFileDocumentProvider.java:553)\n\tat org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo(CompilationUnitDocumentProvider.java:932)\n\tat org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(TextFileDocumentProvider.java:472)\n\tat org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect(CompilationUnitDocumentProvider.java:1167)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:3932)\n\tat org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:190)\n\tat org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1224)\n\tat org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2161)\n\tat org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2134)\n\tat org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1312)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor$19.run(AbstractTextEditor.java:2995)\n\tat org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:369)\n\tat org.eclipse.jface.operation.ModalContext.run(ModalContext.java:313)\n\tat org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:758)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:755)\n\tat org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2437)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3013)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3040)\n\tat org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:794)\n\tat org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:649)\n\tat org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592)\n\tat org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)\n\tat org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:179)\n\tat org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268)\n\tat org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)\n\tat org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:395)\n\tat org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1242)\n\tat org.eclipse.ui.internal.PartStack.handleDeferredEvents(PartStack.java:1210)\n\tat org.eclipse.ui.internal.LayoutPart.deferUpdates(LayoutPart.java:400)\n\tat org.eclipse.ui.internal.PartSashContainer.handleDeferredEvents(PartSashContainer.java:1380)\n\tat org.eclipse.ui.internal.LayoutPart.deferUpdates(LayoutPart.java:400)\n\tat org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents(WorkbenchPage.java:1338)\n\tat org.eclipse.ui.internal.WorkbenchPage.deferUpdates(WorkbenchPage.java:1328)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditors(WorkbenchPage.java:1302)\n\tat org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:1366)\n\tat org.eclipse.ui.texteditor.AbstractTextEditor$23.run(AbstractTextEditor.java:4032)\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3650)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3287)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2365)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2329)\n\tat org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2204)\n\tat org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:153)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:497)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:436)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1162)\n\tat org.eclipse.equinox.launcher.Main.main(Main.java:1137)\n!SUBENTRY 1 org.eclipse.core.filebuffers 4 0 2007-05-07 17:56:51.188",
    "Yep, the Platform Text code has changed (got fixed) in that area but the real problem that surfaces now is a Platform UI bug of which it has at least one duplicate already. Now that you filed it once again, maybe it gets fixed in a reasonable time frame ;-)\n\nJust look at the stack trace. There is:\nEditorManager.createSite(...) which calls IEditorPart.init(...)\n\nAnd this method is spec\u0027ed that clients should throw a PartInitException when the editor cannot be initialized. Now, how Platform UI handles this exception is completely Platform UI business.\n\nSee also bug 112277.",
    "See also bug 185660 for another instance where the PartInitException is (correctly) created and thrown by Platform UI but then unfriendly handled by logging it and showing error dialogs.",
    "I would expect that not every editor implementer has to handle such cases on\nits own and write code can show errors inside the editor area.\n\nHaving said that. If Platform UI can\u0027t address this for 3.3 I can add a\nworkaround in Platform Text to get the same behavior as in 3.3. Let me know.",
    "FYI: the code that shows the status for text editors can be found in StatusTextEditor.",
    "The real problem here is in the definition of \"error\". Users would not expect a an editor on a file that does not exist to be an error that should be displayed with a walkback (i.e. walkbacks in views/editors should *never* happen as part of the normal functioning of Eclipse). They would expect either that the editor would be closed, or it would be left in a state that the file could be recreated, by saving it again. Given our current architecture, the former would be a better choice, so all open editors (even ones that have not been realized) should be closed when their editor inputs are removed from the workspace. If that\u0027s not possible, then a presentation like the one we had in 3.2 (i.e. with a simple message indicating that the file is gone) is much better than showing them a walkback. \n\nThe problem with simply having the UI catch the exception and do this is that it doesn\u0027t allow us to distinguish between the above case and an actual unexpected situation caused by a coding error. Currently, we assume that if you let it through to us, it was a *serious* problem (i.e. one for which a walkback should be shown).\n\n",
    "Mike, the case where the input is no longer valid (i.e. cannot be recreated) is completely handled by Platform UI where the result returned by the IElementFactory is thrown as PartInitException (see bug 185660) by Platform UI code. Nothing any client can do/protect against this. And yes, I agree that there shouldn\u0027t be a dialog for this but a nice in-place message.\n\nNow, for the case of FileEditorInput the corresponding factory in UI land does not return \u0027null\u0027 for FileEditorInputs whose files no longer exist but a file editor input pointing to the deleted file and hence the client code (e.g. Platform Text) is called even though it is already clear at that time that the given input doesn\u0027t exist - this shouldn\u0027t be done as there\u0027s no chance a client can ever open its editor. Now, the next step where a client comes into play is: IEditorPart.init(...) which clearly specs:\n\n@exception PartInitException if this editor was not initialized successfully\n\nIt doesn\u0027t say anything about whether the client has to handle minor issues on its own and personally I wouldn\u0027t claim that my editor is successfully initialized if the file didn\u0027t exist, would you?\n\nI can put the workaround back in, but as said above my code shouldn\u0027t be called in the first place and every other client that has a factory that correctly returns \u0027null\u0027 will also run into this and also every client that considers its editor as not correctly initialized when the file is missing and hence - according to the Javadoc - throws the PartInitException.",
    "Just in case: I would have a patch ready that restores the 3.2.x behavior for textual editors regarding non-existing files.",
    "As of the latest builds, we are now showing an error part, rather than popping up the error dialog for this case. This is fine for *real* errors, but not a good solution for something that a user can easily make happen with normal workflows.\n\nRe-assigning to Boris...\n\n1) Boris, please determine whether we can actually get the unrealized editor tabs to close automatically. If that\u0027s true, then showing the editor part for other cases is acceptable.\n\n2) If we can not make the tabs go away (i.e. don\u0027t do anything yet, Dani), then Dani will have to put back his workaround for 3.3 and the UI team will take ownership of the equivalent for 3.3.1 (or 3.4 depending whether new API is required).",
    "s/showing the editor part/showing the error part/\n\n",
    "Created an attachment (id\u003d66765)\nPatch\n\nHere is an implementation that listens for resource deletes and then clears out the  stale references.\n\nThis turned out to be more involved then I would have liked so I would prefer we did this for 3.3.1 and had Dani release his workaround for 3.3.0.",
    "I looked at the patch and agree with Tod that this would be a high-risk change.  I don\u0027t have any other idea for how this bug could be fixed in a simpler way.\n\nIf we decide to put this in, for 3.3, or 3.3.1, here are my comments from looking at the code:\n- Resource change events can happen on a non-UI thread, the patch assumes that all notifications happen on the UI thread.\n- The logic dealing with deleted containers assumes that the container is a project.",
    "Note that my patch would only work for the case where core resources indeed threw a file not found exception (e.g. when the whole project is gone). In the case of e.g. just a file being deleted we do not get such an exception - instead we get an  exception that the content description could not be retrieved (FAILED_DESCRIBING_CONTENTS) and I have no clue why this happened and hence this will show up inside the editor. On the other hand file.exists() still returns true and hence I cannot special-case this on my end.",
    "Filed bug 186977 for the editor input factory problem.\nFiled bug 186984 for the problem when getting the charset.",
    "Created an attachment (id\u003d67221)\nPatch for Platform Text\n\nThis patch fixes the problem on Platform Text side and restores the previous behavior and also works around the problems mentioned in comment 12. The fix also handles external files that got deleted.\n\nCan one of you guys vote for it for RC1?",
    "+1 from me for Dani\u0027s patch",
    "Thanks Tod. I\u0027ve committed the patch and suggest to defer this bug to 3.4.",
    "As of 3.4 M3 there are still various cases where this can happen and it also seems that statement in comment 8 is not true using 3.4 M3:\n  \"As of the latest builds, we are now showing an error part, rather than popping\n  up the error dialog for this case. \"\nI see a dialog, a log entry and finally the error shown inside your error status editor. This editor also takes away the part title so that users can no longer see the file name.\n\nNote that due to other code changes my workaround is no longer triggered.",
    "(In reply to comment #17)\n\u003e As of 3.4 M3 there are still various cases where this can happen\n\nDo you mean more cases than the one described by comment 0?",
    "\u003eDo you mean more cases than the one described by comment 0?\n1. everything with the same scenario but not text editor (e.g. class file editor\n   PDE, etc.\n2. see comment 12",
    "Created an attachment (id\u003d82777)\nNicer error part\n\n",
    "Created an attachment (id\u003d82778)\nImproved error handling with nicer look\n\nThis patch\n- ensures that we do not show a superfluous dialog (as everything is already \n  available via error status part\n- creates the attached nicer look for the error status part (for editors and \n  views)\n- fixes the problem of disappearing tab title when the NullEditorInput is used\n\nLet me know if you like it and I\u0027ll commit it to HEAD.",
    "Looks good, thanks a lot!",
    "OK, I\u0027ve committed the patch to HEAD. We should still improve the handling of deleted files as this is not Text specific."
  ],
  "commentCreationDates": [
    "2007-05-07T21:22:30+02:00",
    "2007-05-08T12:07:00+02:00",
    "2007-05-08T12:17:09+02:00",
    "2007-05-08T14:24:50+02:00",
    "2007-05-08T15:11:20+02:00",
    "2007-05-08T19:38:54+02:00",
    "2007-05-09T09:56:00+02:00",
    "2007-05-09T22:58:27+02:00",
    "2007-05-10T16:17:49+02:00",
    "2007-05-10T16:24:34+02:00",
    "2007-05-10T21:47:52+02:00",
    "2007-05-10T22:22:30+02:00",
    "2007-05-14T17:25:44+02:00",
    "2007-05-15T14:40:47+02:00",
    "2007-05-15T14:47:28+02:00",
    "2007-05-15T16:43:15+02:00",
    "2007-05-15T16:53:15+02:00",
    "2007-11-12T14:34:33+01:00",
    "2007-11-12T17:08:23+01:00",
    "2007-11-13T07:12:10+01:00",
    "2007-11-13T16:26:00+01:00",
    "2007-11-13T16:31:05+01:00",
    "2007-11-13T20:03:12+01:00",
    "2007-11-14T08:05:15+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.CoreException",
      "message": "The file does not exist.",
      "elements": [
        {
          "method": "org.eclipse.core.internal.filebuffers.ResourceFileBuffer.create",
          "source": "ResourceFileBuffer.java:237"
        },
        {
          "method": "org.eclipse.core.internal.filebuffers.TextFileBufferManager.connect",
          "source": "TextFileBufferManager.java:109"
        },
        {
          "method": "org.eclipse.ui.editors.text.TextFileDocumentProvider.createFileInfo",
          "source": "TextFileDocumentProvider.java:553"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createFileInfo",
          "source": "CompilationUnitDocumentProvider.java:932"
        },
        {
          "method": "org.eclipse.ui.editors.text.TextFileDocumentProvider.connect",
          "source": "TextFileDocumentProvider.java:472"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.connect",
          "source": "CompilationUnitDocumentProvider.java:1167"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput",
          "source": "AbstractTextEditor.java:3932"
        },
        {
          "method": "org.eclipse.ui.texteditor.StatusTextEditor.doSetInput",
          "source": "StatusTextEditor.java:190"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput",
          "source": "AbstractDecoratedTextEditor.java:1224"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput",
          "source": "JavaEditor.java:2161"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput",
          "source": "JavaEditor.java:2134"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput",
          "source": "CompilationUnitEditor.java:1312"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$19.run",
          "source": "AbstractTextEditor.java:2995"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.runInCurrentThread",
          "source": "ModalContext.java:369"
        },
        {
          "method": "org.eclipse.jface.operation.ModalContext.run",
          "source": "ModalContext.java:313"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow$1.run",
          "source": "ApplicationWindow.java:758"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.jface.window.ApplicationWindow.run",
          "source": "ApplicationWindow.java:755"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.run",
          "source": "WorkbenchWindow.java:2437"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.internalInit",
          "source": "AbstractTextEditor.java:3013"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor.init",
          "source": "AbstractTextEditor.java:3040"
        },
        {
          "method": "org.eclipse.ui.internal.EditorManager.createSite",
          "source": "EditorManager.java:794"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPartHelper",
          "source": "EditorReference.java:649"
        },
        {
          "method": "org.eclipse.ui.internal.EditorReference.createPart",
          "source": "EditorReference.java:426"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:592"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.setVisible",
          "source": "PartPane.java:299"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PresentablePart.setVisible",
          "source": "PresentablePart.java:179"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select",
          "source": "PresentablePartFolder.java:268"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select",
          "source": "LeftToRightTabOrder.java:65"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart",
          "source": "TabbedStackPresentation.java:395"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.refreshPresentationSelection",
          "source": "PartStack.java:1242"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.handleDeferredEvents",
          "source": "PartStack.java:1210"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPart.deferUpdates",
          "source": "LayoutPart.java:400"
        },
        {
          "method": "org.eclipse.ui.internal.PartSashContainer.handleDeferredEvents",
          "source": "PartSashContainer.java:1380"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPart.deferUpdates",
          "source": "LayoutPart.java:400"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.handleDeferredEvents",
          "source": "WorkbenchPage.java:1338"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.deferUpdates",
          "source": "WorkbenchPage.java:1328"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditors",
          "source": "WorkbenchPage.java:1302"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.closeEditor",
          "source": "WorkbenchPage.java:1366"
        },
        {
          "method": "org.eclipse.ui.texteditor.AbstractTextEditor$23.run",
          "source": "AbstractTextEditor.java:4032"
        },
        {
          "method": "org.eclipse.swt.widgets.RunnableLock.run",
          "source": "RunnableLock.java:35"
        },
        {
          "method": "org.eclipse.swt.widgets.Synchronizer.runAsyncMessages",
          "source": "Synchronizer.java:123"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runAsyncMessages",
          "source": "Display.java:3650"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:3287"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:2365"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:2329"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.access$4",
          "source": "Workbench.java:2204"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench$4.run",
          "source": "Workbench.java:466"
        },
        {
          "method": "org.eclipse.core.databinding.observable.Realm.runWithDefault",
          "source": "Realm.java:289"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:461"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "org.eclipse.ui.internal.ide.application.IDEApplication.start",
          "source": "IDEApplication.java:106"
        },
        {
          "method": "org.eclipse.equinox.internal.app.EclipseAppHandle.run",
          "source": "EclipseAppHandle.java:153"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:106"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:76"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:363"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:176"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:64"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:43"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:615"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.invokeFramework",
          "source": "Main.java:497"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.basicRun",
          "source": "Main.java:436"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.run",
          "source": "Main.java:1162"
        },
        {
          "method": "org.eclipse.equinox.launcher.Main.main",
          "source": "Main.java:1137"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "185838",
      "date": "2007-05-07T21:22:30+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "185838",
  "bugId": "185838",
  "date": "2007-05-07T21:22:30+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}