{
  "comments": [
    "I believe this is similar to 112880.  The message and stack trace I am getting are\n\n -- (IllegalStateException) Can\u0027t ask to parameterize a member of non-generic type: com...object  kind(raw)\nCan\u0027t ask to parameterize a member of non-generic type: com...object  kind(raw)\njava.lang.IllegalStateException: Can\u0027t ask to parameterize a member of non-generic type: com....object  kind(raw)\n\tat org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:612)\n\tat org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:597)\n\tat org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:508)\n\tat org.aspectj.weaver.ResolvedType$4.get(ResolvedType.java:225)\n\tat org.aspectj.weaver.Iterators$3$1.hasNext(Iterators.java:118)\n\tat org.aspectj.weaver.Iterators$5.hasNext(Iterators.java:171)\n\tat org.aspectj.weaver.Iterators$3.hasNext(Iterators.java:128)\n\tat org.aspectj.weaver.ResolvedType.lookupMember(ResolvedType.java:345)\n\tat org.aspectj.weaver.ResolvedType.lookupMethod(ResolvedType.java:326)\n.\n.\n.\n\nThe same code was able to be weaved under 1.5.0.  The reason why this is a major issue is 1.5.0 suffers from a StackOverflowException.",
    "The stackoverflow bug was 125101.",
    "Does comment #1 about 125101 apply to this bug?  since the exception included in the initial text is an IllegalStateException?\n\nI\u0027ve seen this IllegalState occur for a few reasons.  Can I ask if you are doing a regular command line compile or are you in AJDT or are you doing loadtime weaving?\n\nDid the code compile/weave ok under AspectJ 1.5.1a or did it also fail there?  \n\nI\u0027m very confused by the text of the message as it says the declaring type is \u0027com...object\u0027 ??!  Do you have a package called that?  Is there any way you can summarize your type hierarchy (the part that includes generic signatures) so that I can investigate further?\n",
    "have you managed to try this on 1.5.1a yet?",
    "Created an attachment (id\u003d45597)\nSimple class with non-utilized generic\n\n",
    "Created an attachment (id\u003d45598)\nClass that extends B\n\n",
    "Created an attachment (id\u003d45599)\nClass that obtains an aspect.\n\n",
    "Created an attachment (id\u003d45601)\n\"Controlling method\" used in the aspect\n\n",
    "Created an attachment (id\u003d45602)\naspect that causes the parameterization error\n\n",
    "Hi Andy,\n\nI was able to create a small test reproducible test case.  You will have to forgive the obfuscation, but it was the best I could do.  I have attached the following files:  A.java, B.java, C.java, D.java, and TestAspect.aj.  The command I used to compile the files is\n\n% ajc -source 5 -target 5 -inpath C:\\Software\\hibernate.org\\hibernate-3.1\\hibernate3.jar A.java B.java C.java D.java TestAspect.aj\n\nObviously, you will need the hibernate3.jar for the compilation.\n\nThe bug 148738 is related to this bug as you will see from the output.\n\nThe same problem happens with 1.5.1a.\n\nIf you have any questions, please let me know.",
    "I\u0027ve made a shorter test program that demonstrates the failure (didn\u0027t need hibernate):\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d8\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\npublic abstract class A\u003cE\u003e {\t\n    public A() { }\n    public void setUniqueID(Object o) {}\n}\n\nclass B extends A {\n    public B() {}    \n}\n\nclass D {\n    public void method() {\n        B b \u003d new B();\n        b.setUniqueID(null);\n    }\n}\n\naspect TestAspect {\n\tbefore(): call(public void *.*()) { }    \n}\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d8\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\najc -source 5 -target 5 A.java\n\nIt turns out the actual problem is that you are supplying \"-source 5\" rather than \"-source 1.5\".  Although the compiler sees these as equivalent, the weaver only understands \"1.5\".  Typically we invoke the compiler with this shorthand:\n\najc -1.5 A.java\n\nSo - I\u0027ve made the weaver understand \"5\".\n\nJust to confirm this is what you are seeing, can you try supplying the option as \"1.5\".  My fix should be in a dev build shortly (this is probably the fix for the other bug too...)",
    "fix to also support \"5\" is in the latest AJ dev build.",
    "fix is available - please reopen if you continue to have problems."
  ],
  "commentCreationDates": [
    "2006-06-27T02:09:45+02:00",
    "2006-06-27T04:40:25+02:00",
    "2006-06-27T09:10:40+02:00",
    "2006-06-30T09:59:34+02:00",
    "2006-06-30T18:11:36+02:00",
    "2006-06-30T18:12:30+02:00",
    "2006-06-30T18:13:33+02:00",
    "2006-06-30T18:14:10+02:00",
    "2006-06-30T18:15:17+02:00",
    "2006-06-30T18:21:02+02:00",
    "2006-07-03T15:44:20+02:00",
    "2006-07-04T15:00:15+02:00",
    "2006-07-05T11:48:27+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "Can\u0027t ask to parameterize a member of non-generic type: com....object  kind(raw)",
      "elements": [
        {
          "method": "org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith",
          "source": "ResolvedMemberImpl.java:612"
        },
        {
          "method": "org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith",
          "source": "ResolvedMemberImpl.java:597"
        },
        {
          "method": "org.aspectj.weaver.ReferenceType.getDeclaredMethods",
          "source": "ReferenceType.java:508"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType$4.get",
          "source": "ResolvedType.java:225"
        },
        {
          "method": "org.aspectj.weaver.Iterators$3$1.hasNext",
          "source": "Iterators.java:118"
        },
        {
          "method": "org.aspectj.weaver.Iterators$5.hasNext",
          "source": "Iterators.java:171"
        },
        {
          "method": "org.aspectj.weaver.Iterators$3.hasNext",
          "source": "Iterators.java:128"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.lookupMember",
          "source": "ResolvedType.java:345"
        },
        {
          "method": "org.aspectj.weaver.ResolvedType.lookupMethod",
          "source": "ResolvedType.java:326"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "148737",
      "date": "2006-06-27T02:09:45+02:00",
      "product": "AspectJ",
      "component": "Compiler",
      "severity": "major"
    }
  ],
  "groupId": "148737",
  "bugId": "148737",
  "date": "2006-06-27T02:09:45+02:00",
  "product": "AspectJ",
  "component": "Compiler",
  "severity": "major"
}