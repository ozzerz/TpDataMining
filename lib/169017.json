{
  "comments": [
    "Build ID: M20060921-0945\n\nSteps To Reproduce:\nI\u0027ve found a strange performance degradation of ECJ generated code comparing with javac generated code, see full story at http://jroller.com/page/andyl?entry\u003dsun_javac_vs_eclipse_ecj\n\nAS IS:\nCompile Eclipse 3.2.1 final sources with 1.6 target and 1.6 source and ECJ compiler, then try to start it with 1.6 JDK and:\njava -XX:-FailOverToOldVerifier -Xverify:all -jar startup.jar -debug\n\nThis would fail with:\nException in thread \"main\" java.lang.VerifyError: Inconsistent stackmap frames at branch target 589 in method org.eclipse.core.launcher.Main.processCommandLine([Ljava/lang/String;)[Ljava/lang/String; at offset 44\n\nStarting same build with\njava -XX:+FailOverToOldVerifier -Xverify:all -jar startup.jar -debug\n\nworks fine, and it seems (see https://jdk.dev.java.net/verifier.html) that 1.6 JDK silently switch from new (type-checking) verifier to the old one (inferencing), which then causes the runtime performance degradation of generated code (about 7%).\n\nMore information:\n\ndecompiled ECJ code looks like:\n\n  // access flags 4\n  protected processCommandLine([Ljava/lang/String;)[Ljava/lang/String;\n   L0\n    LINENUMBER 1029 L0\n    ALOAD 1\n    ARRAYLENGTH\n    IFNE L1\n   L2\n    LINENUMBER 1030 L2\n    ALOAD 1\n    ARETURN\n   L1\n    LINENUMBER 1031 L1\n   FRAME SAME\n    ALOAD 1\n    ARRAYLENGTH\n    NEWARRAY T_INT\n    ASTORE 2\n   L3\n    LINENUMBER 1032 L3\n    ALOAD 2\n    ICONST_0\n    ICONST_M1\n    IASTORE\n   L4\n    LINENUMBER 1033 L4\n    ICONST_0\n    ISTORE 3\n   L5\n    LINENUMBER 1034 L5\n    ICONST_0\n    ISTORE 4\n   L6\n    GOTO L7\n   L8\n    LINENUMBER 1035 L8\n   FRAME APPEND [[I I I]\n    ICONST_0\n    ISTORE 5\n   L9\n    LINENUMBER 1038 L9\n    ALOAD 1\n    ILOAD 4\n    AALOAD\n    LDC \"-debug\"\n    INVOKEVIRTUAL java/lang/String.equalsIgnoreCase(Ljava/lang/String;)Z\n    IFEQ L10\n   L11\n    LINENUMBER 1039 L11\n    ALOAD 0\n    ICONST_1\n    PUTFIELD org/eclipse/core/launcher/Main.debug : Z\n   L12\n    LINENUMBER 1041 L12\n    GOTO L13\n   L10\n    LINENUMBER 1046 L10\n   FRAME APPEND [I] \u003c--------------- /// offset 44\n    ALOAD 1\n    ILOAD 4\n    AALOAD\n    LDC \"-nosplash\"\n    INVOKEVIRTUAL java/lang/String.equalsIgnoreCase(Ljava/lang/String;)Z\n    IFEQ L14\n   L15\n[...]\n\nbut I have no idea what is the problem here...",
    "I\u0027ll investigate. This needs to be fixed asap.",
    "Could you please provide the build id of the ecj compiler you used?\nI tried with latest and I could not reproduce. I also tried with the version of the Eclipse compiler provided  by 3.2.1 and it doesn\u0027t fail.\nSo the build id is required for further investigation.\nOn your side, if you could try the Eclipse compiler from HEAD or 3.2.1 build, it would be great.\nDecreasing severity since I cannot reproduce.\nThanks.",
    "If you need it, I can provide you a ecj.jar corresponding to the HEAD contents.",
    "Hmm. I\u0027ve used this url:\nhttp://download.eclipse.org/eclipse/downloads/drops/R-3.2.1-200609210945/\n\nThere is a link to:\nhttp://download.eclipse.org/eclipse/downloads/drops/R-3.2.1-200609210945/download.php?dropFile\u003declipse-sourceBuild-srcIncluded-3.2.1.zip\n\nI\u0027ve downloaded this zip file, unpacked it, changed build.xml from root directory to compile with 1.6 source and target, as described in blog. Then I\u0027ve just started build.bat from the root of directory:\nbuild -os win32 -ws win32 -arch x86 -java5home F:\\java\\jdk1.6.0\nBoth java_home env. variable and java5home was pointing to same directory above.\n\nAnd I think the first thing the build does is to compile ECJ from source with javac and then it uses the ecj.jar to build other stuff (see \\jdtcoresrc\\compilejdtcorewithjavac.xml in the zip file).\n\nBasically I want to have \"stable\" 3.2.1 build, just compiled to 1.6 bytecode.\n\nWhich version of ECJ sources was included in this zip - no idea. I hope 3.2.1 :) but if you could point me where the compiler version is, I could check it. May be it is just a deployment problem.\n\nI\u0027m using stable release of JDK 1.6 for WinXp \u0026 Ant 1.6.2.\n\nAnd yes, you could send me the jar file per email (I think it\u0027s too big for bugzilla), I would then try it (I would need to modify build file additionally to NOT to rebuild ecj.jar from sources as it does now).",
    "The compiler source in this zip seems to be the one from 3.2.0. We fixed several problems in stack map generation since 3.2.0. So this could explain why it failed for you and not for me. I\u0027ll send you an updated jar. It would be nice if you could confirm that it works for you.\nThanks for your help.",
    "Created an attachment (id\u003d56207)\nclasssloading log files with updated ecj.jar\n\nHmm, it is not better now with the new ecj.jar: \nEclipse didn\u0027t start as before, but now WITHOUT any verifier message. I\u0027ve started then with -verbose argument to see classloading, and stored results to the logs:\n\njava -XX:-FailOverToOldVerifier -Xverify:all -verbose -jar startup.jar \u003e error.log\njava -XX:+FailOverToOldVerifier -Xverify:all -verbose -jar startup.jar \u003e ok.log\n\nYou will see, that the difference starts now on loading of MRUBundleFileList, see line 616 in the ok/error log. Next line loads VerifyError in the error log, but BundleContextImpl in ok.log",
    "[offtopic]\nIt seems that Sun javac has also problems to generate good Eclipse bytecode with 1.6 target (I didn\u0027t find appropriated bug report in sun\u0027s bugs database): \n\nalthough you may start javac compiled Eclipse with \"-XX:-FailOverToOldVerifier\" without problems, but then when you would try to open Java editor, you would get this one:\n\njava.lang.VerifyError: Bad access to protected \u003cinit\u003e method in method org.eclipse.jdt.internal.ui.text.correction.QuickAssistLightBulbUpdater$AssistAnnotation.\u003cclinit\u003e()V at offset 8 at org.eclipse.jdt.internal.ui.text.correction.QuickAssistLightBulbUpdater.\u003cinit\u003e(QuickAssistLightBulbUpdater.java:115)\n\nNobody is perfect :)",
    "I\u0027ve tried now to do the same procedure with 3.3 M4 (using *included* ECJ sources, not the new ones), and I\u0027ve got exactly the same error as in comment 0. \n\nDoes it mean, that ECJ sources, included in all Eclipse source distributions since 3.2.0 are not updated at all (?!?) and deployment script(s) must be fixed? Could you verify if the appropriated version is included (at least in 3.3 M4), and if not, I would then open a separated bug for this deployment issue (if it is one).",
    "I thought that the ECJ sources are the one from the previous milestone build.\nIn this case the sources for 3.3M4 are the same than the ones from 3.2.0. (i.e. the 3.2.0 sources, 0.670 from the compiler point of view).\nI entered bug 169466 to track this issue.\n\nI will rebuild Eclipse source using latest compiler version to track the issue with stack map tables.",
    "Created an attachment (id\u003d56874)\nProposed fix (first draft)\n\nWith this patch, I can rebuild Eclipse in 1.6 mode and run it successfully. At least I can open a Java editor without a problem.\nI still need to polish it a bit, but I am hoping to release it in HEAD soon.\nIf you want a new version of the batch compiler ecj.jar to play with it, let me know.",
    "(In reply to comment #10)\n\u003e If you want a new version of the batch compiler ecj.jar to play with it, \n\u003e let me know.\n\nThank you very much Olivier, may you send the \"polished\" version to my gmx account?",
    "I still get this error with the polished version.\nCaused by: java.lang.VerifyError: Bad access to protected \u003cinit\u003e method in method org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.\u003cinit\u003e(Ljava/io/OutputStream;Ljava/lang/String;Z)V at offset 6\n\tat org.eclipse.jdt.internal.core.JavaProject.encodeClasspath(JavaProject.java:953)\n\tat org.eclipse.jdt.internal.core.JavaProject.saveClasspath(JavaProject.java:2617)\n\tat org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation(SetClasspathOperation.java:60)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:720)\n\tat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1781)\n\tat org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:784)\n\nBut I don\u0027t understand it. I don\u0027t see why this is a problem since there is no protected access. All invoked methods are public. This looks very similar to the error you reported in comment 7.\nIf someone has any clue, please let me know.\n\n  public GenericXMLWriter(java.io.OutputStream stream, java.lang.String lineSeparator, boolean printXmlVersion);\n     0  aload_0 [this]\n     1  new java.io.PrintWriter [3]\n     4  dup\n     5  aload_1 [stream]\n     6  invokespecial java.io.PrintWriter(java.io.OutputStream) [73]\n     9  aload_2 [lineSeparator]\n    10  iload_3 [printXmlVersion]\n    11  invokespecial org.eclipse.jdt.internal.compiler.util.GenericXMLWriter(java.io.Writer, java.lang.String, boolean) [76]\n    14  return\n      Line numbers:\n        [pc: 0, line: 60]\n        [pc: 14, line: 61]\n      Local variable table:\n        [pc: 0, pc: 15] local: this index: 0 type: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter\n        [pc: 0, pc: 15] local: stream index: 1 type: java.io.OutputStream\n        [pc: 0, pc: 15] local: lineSeparator index: 2 type: java.lang.String\n        [pc: 0, pc: 15] local: printXmlVersion index: 3 type: boolean\n\n",
    "By the way, I am not sure if this is relevant, but the latest JDK7 build (b06) has the following fix with title:\n\nBug 6504193[1] : typechecker incorrectly rejects valid classfiles when -XX:-FailOverToOldVerifier is specified\n\nYou can see this in the bugs fixed page[2]. The problem is that the bug\u0027s information does not seem to be available (perhaps it has security implications).\n\n[1] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d6504193\n[2] http://download.java.net/jdk7/changes/jdk7-b06.html",
    "(In reply to comment #12)\n\u003e I still get this error with the polished version.\n\u003e Caused by: java.lang.VerifyError: Bad access to protected \u003cinit\u003e method in\n\u003e method\n\nI\u0027m just wondering if this is an error in verifier itself? Last time I\u0027ve tried to extract some smaller test case which would fail (compiled with javac) but I had no success - the code I\u0027ve extracted (from comment 7) didn\u0027t fail if running in a small java app, so it was only reproducible in context of Eclipse startup...\n\nIf you have a better example which fails with both javac and ECJ, so I would post it as a verifier bug, because from my limited Java compiler knowledge there shouldn\u0027t be any \"protected \u003cinit\u003e\" problems in the code.\n\n",
    "yes, it looks like something might be wrong with the vm in this case.\nI\u0027ll try to get the JDK7b06 and try again my recompiled Eclipse binaries.\nThe difference between the previous patch I had is that I didn\u0027t recompile the same sources exactly. In the first case I recompile Eclipse 3.2.1 and in the latter I recompiler this week integration build.\nI\u0027ll try to rebuild Eclipse 3.2.1 code to see if I end up with the same problem.",
    "Created an attachment (id\u003d57204)\nPolished patch\n\nThis should be the final patch unless issues are found with it.",
    "Created an attachment (id\u003d57205)\nUpdated regression tests + new XLargeTest\n\n",
    "Fixed and released in HEAD.\nRegression tests updated and new tests added in:\norg.eclipse.jdt.core.tests.compiler.regression.StackMapAttributeTest#test026/027/028\norg.eclipse.jdt.core.tests.compiler.regression.XLargeTest#test015.\n\nAndrei,\n\nCould you please confirm that everything works fine using a JDK7b06 VM? I don\u0027t have access to such VM yet.",
    "Andrei, it would also be interesting to see if the performance issue is fixed.\nWe might need to do it with a JDK7b06 VM due the bug referenced in comment 13.",
    "Olivier, could you please send me the latest ecj.jar binary? Otherwise I guess I would need to wait for the M5?",
    "Hi Olivier, I have good news and not so good :)\n\nGood news: I can now startup ecj/1.6 - compiled 3.2.1 Eclipse with  -XX:-FailOverToOldVerifier flag. I would test the performance later.\n\nNow to the not so good news, and I not sure if it should be in the same bug?\n\n1) JDK 1.6 verifier problems\nAfter starting ecj/1.6 recompiled 3.2.1 Eclipse with -XX:-FailOverToOldVerifier flag on top of 1.6 JDK, I\u0027ve created a new Java project, then a new package and a new class file inside. By opening this Java file in Java editor I see at least 2 different verifier errors, and the first one is new:\n\njava.lang.VerifyError: Instruction type does not match stack map in method org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.computeCompletionProposals(Lorg/eclipse/jdt/ui/text/java/ContentAssistInvocationContext;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/util/List; at offset 185\n\nSecond one is the old \"protected \u003cinit\u003e\" problem we\u0027ve already seen before:\n\njava.lang.VerifyError: Bad access to protected \u003cinit\u003e method in method org.eclipse.jdt.internal.ui.text.correction.QuickAssistLightBulbUpdater$AssistAnnotation.\u003cclinit\u003e()V at offset 8\n\nand there of course a lot of Java Editor errors which just are followups of this two.\n\nSo for now it seems that the patch has introduced a new verifier problem.\n\n2) JDK 1.7 problems\n\nI\u0027ve downloaded the latest available 1.7 binary JDK snapshot with version \"build 1.7.0-ea-b06\" from http://download.java.net/jdk7/binaries/, direct link is: http://download.java.net/download/jdk7/binaries/jdk-7-ea-bin-b06-windows-i586-18_jan_2007.exe\nAccording to the build notes at http://download.java.net/jdk7/changes/jdk7-b06.html, the Bug 6504193 (see comment 13) should be fixed in this build.\n\nWith this JDK I have another problem: Eclipse didn\u0027t start at all, neither the original 3.2.1 nor the ecj/1.6 recompiled one, doesn\u0027t matter if I start it with default eclipse.exe or with java -jar command line, with or without any flags. Even the javac-recompiled 3.2.1 was not working... I guess 1.7 JDK is not yet stable enough to test it with Eclipse???\n\nInterestingly, I was able to run SwingSet2 and Java2D sample applications included in 1.7 JDK without any problem...",
    "(In reply to comment #21)\n\u003e java.lang.VerifyError: Instruction type does not match stack map in method\norg.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.computeCompletionProposals(Lorg/eclipse/jdt/ui/text/java/ContentAssistInvocationContext;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/util/List;\n\u003e at offset 185\nI\u0027ll check this one. I will open a new bug report for it. I don\u0027t think it is worth reopening this one.\n\n\u003e Second one is the old \"protected \u003cinit\u003e\" problem we\u0027ve already seen before:\nLooks like a VM bug.\n\n\u003e With this JDK I have another problem: Eclipse didn\u0027t start at all, neither the\n\u003e original 3.2.1 nor the ecj/1.6 recompiled one, doesn\u0027t matter if I start it\n\u003e with default eclipse.exe or with java -jar command line, with or without any\n\u003e flags. Even the javac-recompiled 3.2.1 was not working... I guess 1.7 JDK is\n\u003e not yet stable enough to test it with Eclipse???\nHow does it fail? I don\u0027t have access to the b06 build of the JDK7 so I cannot investigate this failure right now.",
    "And of course. Thank you for your investigation and time!",
    "Created an attachment (id\u003d57386)\n1.7 vs 1.6 startup logs\n\nI\u0027ve tried to start the *original* 3.2.1 eclipse with both JDK 1.6 and 1.7, and the logs are created by starting eclipse with this command line:\njava -verbose:class -verbose:jni -jar startup.jar \u003e 1.X.txt\n\nWith 1.6 JDK Eclipse starts just fine, as expected :)\n\nIn case of 1.7 JDK, eclipse just silently fails to start, I do not see any errors in log, even the workspace selection dialog couldn\u0027t be shown... \n\nP.S\nThank you to working on compiler :)",
    "I opened bug 171472 and added you on the CC list.",
    "(In reply to comment #24)\n\u003e Created an attachment (id\u003d57386) [details]\n\u003e 1.7 vs 1.6 startup logs\nI could not see anything special in them.\n\n\u003e I\u0027ve tried to start the *original* 3.2.1 eclipse with both JDK 1.6 and 1.7, and\n\u003e the logs are created by starting eclipse with this command line:\n\u003e java -verbose:class -verbose:jni -jar startup.jar \u003e 1.X.txt\n\u003e \n\u003e With 1.6 JDK Eclipse starts just fine, as expected :)\n\u003e \n\u003e In case of 1.7 JDK, eclipse just silently fails to start, I do not see any\n\u003e errors in log, even the workspace selection dialog couldn\u0027t be shown... \nWould be worth opening a bug against Platform/Runtime. Might not be a problem with JDT specifically.\n \n\u003e Thank you to working on compiler :)\nYou are welcome. I thank you for your dedication to solve this issue :-).\n\n",
    "Hmm, before creating a new bug about 1.7 JDK, I\u0027ve tried to reproduce it with \"fresh\" eclipse with no workspace etc, and it starts now... Seems to be a workspace/configuration area related problem, so I will just skip this one.",
    "verified by user for 3.3 M5"
  ],
  "commentCreationDates": [
    "2006-12-24T23:41:08+01:00",
    "2006-12-25T02:40:29+01:00",
    "2006-12-27T18:48:08+01:00",
    "2006-12-27T18:48:56+01:00",
    "2006-12-27T19:28:03+01:00",
    "2006-12-27T20:04:39+01:00",
    "2006-12-27T21:07:30+01:00",
    "2006-12-27T21:45:39+01:00",
    "2006-12-28T13:29:51+01:00",
    "2007-01-03T19:34:11+01:00",
    "2007-01-14T03:02:04+01:00",
    "2007-01-14T08:51:46+01:00",
    "2007-01-19T14:09:00+01:00",
    "2007-01-19T14:20:23+01:00",
    "2007-01-19T14:25:09+01:00",
    "2007-01-19T14:25:52+01:00",
    "2007-01-20T03:29:36+01:00",
    "2007-01-20T03:30:04+01:00",
    "2007-01-22T19:48:53+01:00",
    "2007-01-22T19:50:44+01:00",
    "2007-01-22T19:59:30+01:00",
    "2007-01-23T21:33:47+01:00",
    "2007-01-23T21:48:11+01:00",
    "2007-01-23T21:48:37+01:00",
    "2007-01-23T22:17:34+01:00",
    "2007-01-23T22:29:23+01:00",
    "2007-01-23T22:33:11+01:00",
    "2007-01-23T23:01:53+01:00",
    "2007-02-06T11:19:18+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "Bad access to protected \u003cinit\u003e method in method org.eclipse.jdt.internal.ui.text.correction.QuickAssistLightBulbUpdater$AssistAnnotation.\u003cclinit\u003e()V",
      "elements": [
        {
          "method": "offset8atorg.eclipse.jdt.internal.ui.text.correction.QuickAssistLightBulbUpdater.\u003cinit\u003e",
          "source": "QuickAssistLightBulbUpdater.java:115"
        }
      ],
      "number": 0,
      "commentIndex": 7,
      "bugId": "169017",
      "date": "2006-12-27T21:45:39+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "Bad access to protected \u003cinit\u003e method in method org.eclipse.jdt.internal.compiler.util.GenericXMLWriter.\u003cinit\u003e(Ljava/io/OutputStream;Ljava/lang/String;Z)V",
      "elements": [
        {
          "method": "offset6atorg.eclipse.jdt.internal.core.JavaProject.encodeClasspath",
          "source": "JavaProject.java:953"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.saveClasspath",
          "source": "JavaProject.java:2617"
        },
        {
          "method": "org.eclipse.jdt.internal.core.SetClasspathOperation.executeOperation",
          "source": "SetClasspathOperation.java:60"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:720"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1781"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:784"
        }
      ],
      "number": 1,
      "commentIndex": 12,
      "bugId": "169017",
      "date": "2007-01-19T14:09:00+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "169017",
  "bugId": "169017",
  "date": "2006-12-24T23:41:08+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}