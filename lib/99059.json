{
  "comments": [
    "N20050608-0010\n\nFound this in my log. This seems to be a normal network connection problem, not\na bug in Eclipse. It should not be written to the log.\n\nCould not connect to :aoeuaoeu:saoeuu@aoeuaoeu:/home/aouaoeu: I/O exception\noccurred: Connection refused: /home/aouaoeu: no such repository\n\njava.io.IOException: Connection refused: /home/aouaoeu: no such repository\nat\norg.eclipse.team.internal.ccvs.core.connection.PServerConnection.authenticate(PServerConnection.java:196)\nat\norg.eclipse.team.internal.ccvs.core.connection.PServerConnection.open(PServerConnection.java:108)\nat\norg.eclipse.team.internal.ccvs.core.connection.Connection.open(Connection.java:128)\nat\norg.eclipse.team.internal.ccvs.core.connection.CVSRepositoryLocation.createConnection(CVSRepositoryLocation.java:494)\nat\norg.eclipse.team.internal.ccvs.core.connection.CVSRepositoryLocation.openConnection(CVSRepositoryLocation.java:735)\nat org.eclipse.team.internal.ccvs.core.client.Session.open(Session.java:149)\nat\norg.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.performUpdate(RemoteFolderMemberFetcher.java:95)\nat\norg.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation$InternalRemoteFolderMemberFetcher.performUpdate(FetchMembersOperation.java:69)\nat\norg.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:62)\nat\norg.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:53)\nat\norg.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation.execute(FetchMembersOperation.java:107)\nat\norg.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:79)\nat\norg.eclipse.team.internal.ccvs.ui.model.CVSTagElement.fetchDeferredChildren(CVSTagElement.java:134)\nat\norg.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:192)\nat org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",
    "The error is logged by the Jobs framework. If you feel strongly about this, \nyou can reopen it and assign it the Platform Runtime.",
    "It appears that the exception is logged by CVSPlugin.openError. CVSModelElement\npasses all exceptions to this method, causing everything to be logged (bug or\nnot). These appear to be CVS classes, not core classes... but cc\u0027ing the\ntalented Mr. Arthorne to confirm.\n",
    "I\u0027ll take Stefan\u0027s word for it.  Since it\u0027s a checked exception being logged, I\ndon\u0027t think it could be the jobs framework logging it anyway.",
    "Looks like the logic in the CVSUIPlugin#openError is wrong. The flag passed \nindicates that only non-team exceptions should be logged. However, the if \nchecks for CoreExceptions first. Since a TeamException is a CoreException, it \ngets logged. Not high enough priority for 3.1 so assigning to 3.2.",
    "We do not plan on addressing this issue in 3.3.",
    "I think what we could do here is the check for TeamException _before_ checking for CoreException. Theoretically, if there were a check for a CVSException I would put it before all other checks as it\u0027s located lower in the classes hierarchy. This was my first thought, but I might be missing something. Maybe there is a reason why the checks are the other way round?",
    "Created an attachment (id\u003d83860)\nPatch\n\nPatch that puts check if an exception is a TeamException before checking for CoreException.",
    "Szymon, could you take a look at the patch?",
    "Created an attachment (id\u003d83982)\nMy proposal\n\nI would make a little change in the patch.",
    "As the flags are exclusive, I think we don\u0027t have to (or even we shouldn\u0027t) check for LOG_CORE_EXCEPTIONS when an exception is of TeamException type. That\u0027s why I would stay with the first patch. Of course, we could comment those flags, to make sure they are properly used.\n\nBTW, applying your patch Simon, wouldn\u0027t fix the bug anyway.",
    "Right, the names of the constants are confusing. Team Exceptions are Core Exceptions too. So either the code should be fixed or comments should be added.\nThe appropriate comments are enough though. \n\n",
    "On second thoughts, I think we should combine both patches (ie. add \"|| (flags \u0026 PERFORM_SYNC_EXEC) \u003e 0\" to flag check for Team and Core Exceptions). I\u0027m guessing here...\n\nMicheal, could you shed some light on how those flags are intended to be use? I\u0027ve been tracking where and how they\u0027re set but I\u0027d prefer not base only on my assumptions. I couldn\u0027t find any other clues.",
    "I really don\u0027t recall what the semantics of the flags is supposed to be. I think it would make sense to separate the two flags. That is, the \"log team\" flag would log team exceptions and the \"log core\" would log core exceptions that are not team exceptions. Perhaps the name of the \"log core\" flag could be change to \"log none team core\" and you could create a combined flag called \"log core\" that conbined the two. This would make the semantics more explicit.\n\nAs for the sync flag, you only need to set that if you are calling openError from a none UI thread. This flag was added before I knw the trick for determing if you ar ein the UI thread or not (i.e. Display.getCurrent() is null if you are not in the UI thread). It would be better to detect this in the opneError method and do the sync if required.",
    "Created an attachment (id\u003d84311)\nPatch #3\n\n",
    " (In reply to comment #13)\n\u003e I think it would make sense to separate the two flags. That is, the \"log team\" flag\n\u003e would log team exceptions and the \"log core\" would log core exceptions that are\n\u003e not team exceptions. Perhaps the name of the \"log core\" flag could be change to\n\u003e \"log none team core\" and you could create a combined flag called \"log core\" that\n\u003e conbined the two. This would make the semantics more explicit.\n\nGood idea. I\u0027ve separated and described the flags.\n\n\u003e It would be better to detect this [PERFORM_SYNC_EXEC flag] in the opneError method\n\u003e and do the sync if required.\n\nIt\u0027s done in openDialog method.\n\nSzymon, could you take a look at the latest patch? I hope this one will be more in your type :)",
    "Released to HEAD.",
    "Verified by code inspection."
  ],
  "commentCreationDates": [
    "2005-06-08T22:36:24+02:00",
    "2005-06-08T22:50:07+02:00",
    "2005-06-09T01:23:41+02:00",
    "2005-06-09T23:54:37+02:00",
    "2005-06-13T19:07:48+02:00",
    "2006-08-17T16:43:06+02:00",
    "2007-11-12T23:09:19+01:00",
    "2007-11-27T13:25:17+01:00",
    "2007-11-27T13:31:24+01:00",
    "2007-11-28T15:10:25+01:00",
    "2007-11-28T17:23:51+01:00",
    "2007-11-28T17:53:36+01:00",
    "2007-11-30T14:39:39+01:00",
    "2007-11-30T15:07:28+01:00",
    "2007-12-03T13:39:13+01:00",
    "2007-12-03T13:51:38+01:00",
    "2007-12-10T12:51:12+01:00",
    "2007-12-12T13:35:06+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "Connection refused: /home/aouaoeu: no such repository",
      "elements": [
        {
          "method": "org.eclipse.team.internal.ccvs.core.connection.PServerConnection.authenticate",
          "source": "PServerConnection.java:196"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.connection.PServerConnection.open",
          "source": "PServerConnection.java:108"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.connection.Connection.open",
          "source": "Connection.java:128"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.connection.CVSRepositoryLocation.createConnection",
          "source": "CVSRepositoryLocation.java:494"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.connection.CVSRepositoryLocation.openConnection",
          "source": "CVSRepositoryLocation.java:735"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Session.open",
          "source": "Session.java:149"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.performUpdate",
          "source": "RemoteFolderMemberFetcher.java:95"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation$InternalRemoteFolderMemberFetcher.performUpdate",
          "source": "FetchMembersOperation.java:69"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers",
          "source": "RemoteFolderMemberFetcher.java:62"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers",
          "source": "RemoteFolderMemberFetcher.java:53"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation.execute",
          "source": "FetchMembersOperation.java:107"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run",
          "source": "CVSOperation.java:79"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.model.CVSTagElement.fetchDeferredChildren",
          "source": "CVSTagElement.java:134"
        },
        {
          "method": "org.eclipse.ui.progress.DeferredTreeContentManager$1.run",
          "source": "DeferredTreeContentManager.java:192"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:76"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "99059",
      "date": "2005-06-08T22:36:24+02:00",
      "product": "Platform",
      "component": "CVS",
      "severity": "minor"
    }
  ],
  "groupId": "99059",
  "bugId": "99059",
  "date": "2005-06-08T22:36:24+02:00",
  "product": "Platform",
  "component": "CVS",
  "severity": "minor"
}