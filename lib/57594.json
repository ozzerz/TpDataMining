{
  "comments": [
    "Using M8, I restarted an existing workspace (I used it for several days already\nwith M8) and I got this stack trace:\norg.eclipse.core.runtime.OperationCanceledException\nat\norg.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:109)\nat org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:265)\nat org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:149)\nat org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:88)\nat\norg.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1521)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)\nat\norg.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)\nat org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2584)\nat org.eclipse.jdt.core.JavaCore$5.run(JavaCore.java:3339)\nat\norg.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)\nat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1559)\nat org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3196)\nat org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3325)\nat\norg.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:107)\nat\norg.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)\nat org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1176)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)\nat org.eclipse.core.runtime.Platform.run(Platform.java:521)\nat org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1171)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1841)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1764)\nat\norg.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:350)\nat\norg.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath(JavaProject.java:367)\nat\norg.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1315)\nat\norg.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath(JavaProject.java:1294)\nat\norg.eclipse.jdt.internal.core.PackageFragmentRoot.determineKind(PackageFragmentRoot.java:302)\nat\norg.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure(PackageFragmentRoot.java:172)\nat org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:169)\nat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:543)\nat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:280)\nat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:266)\nat\norg.eclipse.jdt.internal.core.PackageFragmentRoot.getKind(PackageFragmentRoot.java:504)\nat\norg.eclipse.jdt.ui.actions.OrganizeImportsAction.hasSourceFolders(OrganizeImportsAction.java:254)\nat\norg.eclipse.jdt.ui.actions.OrganizeImportsAction.isEnabled(OrganizeImportsAction.java:237)\nat\norg.eclipse.jdt.ui.actions.OrganizeImportsAction.selectionChanged(OrganizeImportsAction.java:150)\nat\norg.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged(SelectionDispatchAction.java:200)\nat\norg.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged(SelectionDispatchAction.java:195)\nat org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)\nat org.eclipse.core.runtime.Platform.run(Platform.java:521)\nat org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)\nat\norg.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)\nat\norg.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:666)\nat\norg.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:690)\nat org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:178)\nat org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:173)\nat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2578)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2256)\nat\norg.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop(EventLoopProgressMonitor.java:114)\nat\norg.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled(EventLoopProgressMonitor.java:94)\nat\norg.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.isCanceled(ImplicitJobs.java:137)\nat\norg.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun(ImplicitJobs.java:106)\nat org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:265)\nat org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:149)\nat org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:88)\nat\norg.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1521)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1554)\nat\norg.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:744)\nat org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:2584)\nat org.eclipse.jdt.core.JavaCore$6.run(JavaCore.java:3675)\nat\norg.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)\nat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1559)\nat org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3196)\nat org.eclipse.jdt.core.JavaCore.updateVariableValues(JavaCore.java:3658)\nat org.eclipse.jdt.core.JavaCore.setClasspathVariables(JavaCore.java:3454)\nat org.eclipse.jdt.core.JavaCore.setClasspathVariable(JavaCore.java:3419)\nat\norg.eclipse.pde.internal.core.EclipseHomeInitializer.resetEclipseHomeVariables(EclipseHomeInitializer.java:40)\nat\norg.eclipse.pde.internal.core.EclipseHomeInitializer.initialize(EclipseHomeInitializer.java:26)\nat org.eclipse.jdt.core.JavaCore$2.run(JavaCore.java:1301)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)\nat org.eclipse.core.runtime.Platform.run(Platform.java:521)\nat org.eclipse.jdt.core.JavaCore.getClasspathVariable(JavaCore.java:1296)\nat org.eclipse.jdt.core.JavaCore.getResolvedVariablePath(JavaCore.java:2254)\nat org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry(JavaCore.java:2172)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1830)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1764)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1736)\nat\norg.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots(DeltaProcessingState.java:147)\nat org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:698)\nat org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1559)\nat org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3196)\nat org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3325)\nat\norg.eclipse.jdt.internal.launching.JREContainerInitializer.initialize(JREContainerInitializer.java:51)\nat org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1176)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)\nat org.eclipse.core.runtime.Platform.run(Platform.java:521)\nat org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1171)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1841)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1764)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1736)\nat org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:3316)\nat\norg.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(ModelEntry.java:107)\nat\norg.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(RequiredPluginsInitializer.java:40)\nat org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:1176)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)\nat org.eclipse.core.runtime.Platform.run(Platform.java:521)\nat org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1171)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1841)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1764)\nat\norg.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1736)\nat org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:261)\nat org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:169)\nat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:543)\nat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:280)\nat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:266)\nat org.eclipse.jdt.internal.core.JavaElement.exists(JavaElement.java:137)\nat org.eclipse.jdt.internal.core.JavaProject.exists(JavaProject.java:894)\nat\norg.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction$CopyToClipboardEnablementPolicy.canCopyToClipboard(CopyToClipboardAction.java:328)\nat\norg.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction$CopyToClipboardEnablementPolicy.canCopyAllToClipboard(CopyToClipboardAction.java:322)\nat\norg.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction$CopyToClipboardEnablementPolicy.canEnable(CopyToClipboardAction.java:310)\nat\norg.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction.canEnable(CopyToClipboardAction.java:140)\nat\norg.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction.selectionChanged(CopyToClipboardAction.java:105)\nat\norg.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged(SelectionDispatchAction.java:200)\nat\norg.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged(SelectionDispatchAction.java:195)\nat org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)\nat org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:610)\nat org.eclipse.core.runtime.Platform.run(Platform.java:521)\nat org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)\nat\norg.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1310)\nat\norg.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:666)\nat\norg.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:690)\nat org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:178)\nat org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:173)\nat org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)\nat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)\nat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:769)\nat org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2578)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2256)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1562)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1536)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:257)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)\nat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:277)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:239)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:117)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:324)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:267)\nat org.eclipse.core.launcher.Main.run(Main.java:692)\nat org.eclipse.core.launcher.Main.main(Main.java:676)\n\nIf an operation cancelled exception is thrown during this initialization, the\ninitialization should restart, otherwise I end up with thousands of errors. Then\nit is impossible to force the initialization of the PDE container. Rebuilding\nall projects doesn\u0027t change anything. You need to restart Eclipse to fix this issue.",
    "Not sure what to do here.  It seems that it\u0027s deep in JDT land.\n\ncc Philippe for comment on what, if anything, PDE could do here.",
    "Technically, the cancel occurs in platform resource operation, but due to the \nfact the progress monitor got cancelled. This progress monitor is owned by PDE \nI believe:\norg.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer\n(ModelEntry.java:107)\n\n\nHowever, JDT Core shouldn\u0027t become inconsistent from thereon. We will look into \nthe consistency issue, and add a separate bug if proven. The cancelling looks \nrather in your area.",
    "Philippe, PDE does not cancel any monitors.\nIn fact, we are passing \"null\" as monitor at the line in question:\nJavaCore.setClasspathContainer(path, javaProjects, containers, null);\n\nSo I am not sure who is canceling the operation.  It certainly is not PDE.\n",
    "Interesting... thanks for this info. This definitely doesn\u0027t look yours then. \nWill adopt for now. ",
    "Verified that a null progress monitor is passed in to IWorkspace.run(...). \nHowever internally Platform Core is getting a non null progress monitor (see \nJobManager.monitorFor(IProgressMonitor) that is cancelled. \n\nIWorkspace.run(...) specifies that a null progress monitor means that no \ncancellation is desired. So Platform Core should not throw (or at least catch) \nthe OperationCanceledException if a null progress monitor is passed in.\n\nJohn can you please confirm this?",
    "Verified that we correctly use finally blocks to reset our internal state.",
    "Also we always pass in a null scheduling rule. But according to the code of \nImplicitJobs.begin(ISchedulingRule, IProgressMonitor) (at least with I20040330) \nthis cannot throw an OperationCanceledException if a null sheduling rule is \npassed in. Has this code changed since M8?",
    "The code has not changed since M8. Are you sure you\u0027re using a null scheduling\nrule? JavaModelOperation.runOperation looks like it calls\nJavaModelOperation.getSchdulingRule(), which always returns the workspace root\n(I\u0027m looking at M8 code).\n\nI agree it is new that IWorkspace.run can throw OperationCanceledException even\nif there is no progress monitor.  It seems the only options here are:\n\n1) Don\u0027t allow the user to cancel (force them to wait, possibly several minutes,\nbefore their operation can proceed)\n2) Throw OperationCanceledException\n3) Throw CoreException\n4) Swallow exceptions and just return from the run method. This doesn\u0027t seem\ngood for you though, since you will not be able to find out that the runnable\nactually never ran.",
    "I would vote for (5): never interrupt the operation if null is passed in. \nAccording to the spec, it is the client responsibility to pass in a non-null \nprogress monitor if it wants to allow cancellation. If PDE passes null, then \nPDE is reponsible for blocking the user. If PDE decides to pass a non-null \nprogress monitor, then PDE will be responsible for catching the \nOperationCanceledException.",
    "From Olivier:\n- this happened to him once\n- he did NOT press Cancel\n- he\u0027s using Sun\u0027s JDK 1.4.2 VM\n- this is on a pure M8 build\n",
    "The major issue in this case is that the PDE container initialization should\nnever be cancellable. If it is cancelled, it is not possible to \"initialize\" it\nagain and all projects that rely on this container contain thousands of\nproblems. The only way to fix the problem is to close the workspace and restart\nit hoping not to get this OperationCancelledException.\nInitializing the PDE container HAS to be an atomic operation.",
    "I think we have no choice but to support cancelation in all cases where locks\n(scheduling rules) are acquired.  If locking could be avoided completely, that\nwould be even better. If we don\u0027t allow cancelation when waiting on a lock, it\nmeans the UI can be hung for minutes at a time.\n\nJerome, in comment #9 you suggest that PDE could be responsible for catching the\noperation cancelation exception. I think this would be similar to the current\nbehavior, since it is currently caught by the ISafeRunnable that surrounds the\ncall to PDE. The result is that the user would be prompted to cancel for each\nclasspath container that gets touched. In some cases this could result in dozens\nof \"blocked\" dialogs appearing one after the other (see bug 56300 comment 14).\nFor cancelation to work properly, it must unravel all the way out (in this\nparticular stack, all the way to Viewer.fireSelectionChanged).",
    "John, I\u0027m sure you had very good reasons to do this change, but the end result \nis that it doesn\u0027t follow the spec of IWorkspace.run(...) that says that one \nshould pass a null progress monitor if cancellation is not desired.\n\nSo either the spec is changed and clients that (like PDE) should be prepared \nfor an OperationCanceledException even if they pass in null, or the \nimplementation is reverted back to the old behavior.\n\nAlso in comment #9, I was not clear enough: I think that PDE should catch the \nexception, do whatever action is good for PDE (like reseting internal caches) \nand rethrow it.",
    "I got it again this morning. The only way to get rid of it is to restart Eclipse.",
    "I have updated the spec of all API methods in the core.resources plugin to make\nit clear that cancelation can still occur even if no progress monitor is supplied.",
    "Updating the spec as a cover up for this breaking change is not good enough.\n\nPDE container initialization must be non-cancelable, and that is why we pass \nin null as an argument.  The whole self-hosting story depends on it.  If, as \nyou suggest, somebody complains that our non-cancelable operation is hanging \nthe workbench for minutes, which is a very remote possibility, PDE would \naddress it then.\n\nIn the meantime, the current problem where the operation is being canceled is \nmuch more severe.  ",
    "If you are not passing a monitor, then cancelation can only happen while the UI\nthread is blocked waiting for a scheduling rule. Therefore, if this cancelation\nhappened, it was equally possible that it would hang the UI for long periods.\nThis shouldn\u0027t be too hard to handle - presumably you already have some handling\nfor CoreExceptions in this code. You need to catch, clean up, and rethrow.\n\nI also wonder if JDT could be less aggressive with locking in\nSetClasspathOperation. Maybe it could use the project (or null) as a rule\ninstead of the workspace root.\n\nWhat I don\u0027t understand is that Olivier claims he never explicitly canceled. I\u0027d\nlike to find a reproducible case to see if there is something else going on\nhere. Olivier, do you have any more details?  What perspective are you in when\nyou start up? My guess is that you\u0027re starting up in the Java perspective, and\nthen immediately clicking somewhere to cause a selection change while the java\nmodel is still being initialized. Since the cancelation has been possible since\nlast September, I suspect something else might have changed recently that is\ncausing cancelations to occur more frequently.",
    "Setting a classpath container on multiple projects is quite nasty. Since a \ncontainer can be referencing further projects, when refreshing the classpath, \nwe need to update dependent projects as well since there may now be a cycle \nscenario for which we will need to issue cycle markers. This is why we must \neagerly lock the workspce as we don\u0027t know how many projects will be traversed \nin advance. Also this code is highly reentrant, since traversing dependents may \ntrigger further classpath initializations, and we only perform them on demand.",
    "Re comment #16 - mentions the \"rare\" possibility of this causing the user to be\nblocked.  See bug 57537 for a case where a user had to wait ten minutes because\nthe UI thread was blocked by this exact situation.",
    "I am raising the priority to Blocker. I get it more and more. Now when I start a\nworkspace, I hope that the PDE container will be initialized.",
    "Olivier can you run with the cp resolution trace on \n(org.eclipse.jdt.core/debug/cpresolution\u003dtrue in the .options file) ?",
    "Moving to PDE UI to protect the PDE container in case of an unexpected \nOperationCanceledException.",
    "Jerome, I checked the code and there is not much PDE can do to protect \nourselves.  If the call to JavaCore.setClasspathContainer(...) fails, PDE does \nnot really have to do any cleanup.  We are in a clean state.  All the models \nare initialized at that point.  The problem is that JDT/Core never tries to \nreinitialize/reset the container again.\n\nThis problem has been occurring very frequently in the past few days, so any \nother ideas would be welcome.",
    "That\u0027s what I can\u0027t understand: if the container is not initialized, JDT Core \nwill ask the initializer to initialize it again and again. If you\u0027ve seen this \nproblem and if you can reproduce it, it would be good to run in debug mode as \nindicated in comment #21 to see where the problem occurs. The best would be to \nuse org.eclipse.jdt.core v_421f as the tracing as been improved in this version.",
    "Thanks Jerome.  I will.  It happened to me about 10 times on Saturday, so it \nshould be reproducible.  I can feel Olivier\u0027s pain ;-)",
    "Added code to reset the classpath container upon canceling the operation, so \nthat it can be recomputed the next time JDT/Core calls it.\n\nNote however that using the latest jdt.core from HEAD, I was unable to \nreproduce the problem on the same workspace where it was occurring rather \nfrequently.  I\u0027m not sure if work was done in this are on the JDT/Core side.\nBut I added the PDE handling nevertheless.  Maybe it\u0027s a synergistic effect.  \nBut the end result was pleasant.",
    "Yes, we did fix a concurrency issue where 2 competing threads were able to fool \nus into thinking we were still in the middle of some initialization (forever) \nand thus wouldn\u0027t further call initializers. This was 1st part of the fix, but \nthen we needed our clients to behave in case of platform cancelling actions \nunder the cover; which seems now solved on your end (hopefully).",
    "Created an attachment (id\u003d9785)\nHere is a stack trace of classpath initialization when it fails\n",
    "Created an attachment (id\u003d9787)\nStack trace in a zip file\n\nIt seems that bugzilla truncated the file. I attach it again in a zip file.",
    "Reopening this defect.\nI don\u0027t think this problem has been resolved completely.\nToday, it happened to me a few times when I had autobuild off, but a couple of \ntimes when it was on.\nMy workbench would open up and I would get tons of errors upon startup.\nI could not detect a reproducible pattern, except for maybe trying to do \nan \"open type\" right after the workbench opens.\n\nIt is also very suspicious that I see a lot of activity going on in the \nProgress icon in the bottom left upon startup, even though no build should be \ngoing on.",
    "Reclosing this one, as the problem will be solved in bug 57181"
  ],
  "commentCreationDates": [
    "2004-04-06T18:09:20+02:00",
    "2004-04-06T18:25:45+02:00",
    "2004-04-06T23:41:25+02:00",
    "2004-04-06T23:51:53+02:00",
    "2004-04-07T00:17:00+02:00",
    "2004-04-07T11:14:46+02:00",
    "2004-04-07T11:38:59+02:00",
    "2004-04-07T11:42:56+02:00",
    "2004-04-07T16:42:34+02:00",
    "2004-04-07T16:54:32+02:00",
    "2004-04-07T17:39:59+02:00",
    "2004-04-07T17:53:12+02:00",
    "2004-04-07T20:35:18+02:00",
    "2004-04-08T16:42:43+02:00",
    "2004-04-08T16:59:25+02:00",
    "2004-04-08T17:54:14+02:00",
    "2004-04-08T18:32:41+02:00",
    "2004-04-08T21:16:56+02:00",
    "2004-04-09T11:13:37+02:00",
    "2004-04-12T16:08:49+02:00",
    "2004-04-15T15:16:41+02:00",
    "2004-04-15T15:21:55+02:00",
    "2004-04-19T12:17:32+02:00",
    "2004-04-19T16:10:09+02:00",
    "2004-04-19T16:17:39+02:00",
    "2004-04-19T16:19:40+02:00",
    "2004-04-20T04:29:33+02:00",
    "2004-04-20T13:22:10+02:00",
    "2004-04-21T18:35:31+02:00",
    "2004-04-21T18:54:28+02:00",
    "2004-04-27T09:18:55+02:00",
    "2004-04-27T15:14:12+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.OperationCanceledException",
      "elements": [
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun",
          "source": "ImplicitJobs.java:109"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs.begin",
          "source": "ImplicitJobs.java:265"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.beginRule",
          "source": "JobManager.java:149"
        },
        {
          "method": "org.eclipse.core.internal.resources.WorkManager.checkIn",
          "source": "WorkManager.java:88"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.prepareOperation",
          "source": "Workspace.java:1521"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1554"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:744"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.setRawClasspath",
          "source": "JavaProject.java:2584"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$5.run",
          "source": "JavaCore.java:3339"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BatchOperation.executeOperation",
          "source": "BatchOperation.java:34"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:700"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1559"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.run",
          "source": "JavaCore.java:3196"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.setClasspathContainer",
          "source": "JavaCore.java:3325"
        },
        {
          "method": "org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer",
          "source": "ModelEntry.java:107"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize",
          "source": "RequiredPluginsInitializer.java:40"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$1.run",
          "source": "JavaCore.java:1176"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:1171"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1841"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1764"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath",
          "source": "JavaProject.java:350"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.computeExpandedClasspath",
          "source": "JavaProject.java:367"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath",
          "source": "JavaProject.java:1315"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getExpandedClasspath",
          "source": "JavaProject.java:1294"
        },
        {
          "method": "org.eclipse.jdt.internal.core.PackageFragmentRoot.determineKind",
          "source": "PackageFragmentRoot.java:302"
        },
        {
          "method": "org.eclipse.jdt.internal.core.PackageFragmentRoot.buildStructure",
          "source": "PackageFragmentRoot.java:172"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Openable.generateInfos",
          "source": "Openable.java:169"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.openWhenClosed",
          "source": "JavaElement.java:543"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:280"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:266"
        },
        {
          "method": "org.eclipse.jdt.internal.core.PackageFragmentRoot.getKind",
          "source": "PackageFragmentRoot.java:504"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OrganizeImportsAction.hasSourceFolders",
          "source": "OrganizeImportsAction.java:254"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OrganizeImportsAction.isEnabled",
          "source": "OrganizeImportsAction.java:237"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.OrganizeImportsAction.selectionChanged",
          "source": "OrganizeImportsAction.java:150"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged",
          "source": "SelectionDispatchAction.java:200"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged",
          "source": "SelectionDispatchAction.java:195"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer$2.run",
          "source": "Viewer.java:159"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:157"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateSelection",
          "source": "StructuredViewer.java:1310"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleSelect",
          "source": "StructuredViewer.java:666"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected",
          "source": "StructuredViewer.java:690"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireSelectionEvent",
          "source": "OpenStrategy.java:178"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$3",
          "source": "OpenStrategy.java:173"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:309"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:769"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2578"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2256"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.runEventLoop",
          "source": "EventLoopProgressMonitor.java:114"
        },
        {
          "method": "org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor.isCanceled",
          "source": "EventLoopProgressMonitor.java:94"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.isCanceled",
          "source": "ImplicitJobs.java:137"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs$ThreadJob.joinRun",
          "source": "ImplicitJobs.java:106"
        },
        {
          "method": "org.eclipse.core.internal.jobs.ImplicitJobs.begin",
          "source": "ImplicitJobs.java:265"
        },
        {
          "method": "org.eclipse.core.internal.jobs.JobManager.beginRule",
          "source": "JobManager.java:149"
        },
        {
          "method": "org.eclipse.core.internal.resources.WorkManager.checkIn",
          "source": "WorkManager.java:88"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.prepareOperation",
          "source": "Workspace.java:1521"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1554"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.runOperation",
          "source": "JavaModelOperation.java:744"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.setRawClasspath",
          "source": "JavaProject.java:2584"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$6.run",
          "source": "JavaCore.java:3675"
        },
        {
          "method": "org.eclipse.jdt.internal.core.BatchOperation.executeOperation",
          "source": "BatchOperation.java:34"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:700"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1559"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.run",
          "source": "JavaCore.java:3196"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.updateVariableValues",
          "source": "JavaCore.java:3658"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.setClasspathVariables",
          "source": "JavaCore.java:3454"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.setClasspathVariable",
          "source": "JavaCore.java:3419"
        },
        {
          "method": "org.eclipse.pde.internal.core.EclipseHomeInitializer.resetEclipseHomeVariables",
          "source": "EclipseHomeInitializer.java:40"
        },
        {
          "method": "org.eclipse.pde.internal.core.EclipseHomeInitializer.initialize",
          "source": "EclipseHomeInitializer.java:26"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$2.run",
          "source": "JavaCore.java:1301"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathVariable",
          "source": "JavaCore.java:1296"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getResolvedVariablePath",
          "source": "JavaCore.java:2254"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getResolvedClasspathEntry",
          "source": "JavaCore.java:2172"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1830"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1764"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1736"
        },
        {
          "method": "org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRoots",
          "source": "DeltaProcessingState.java:147"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaModelOperation.run",
          "source": "JavaModelOperation.java:698"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1559"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.run",
          "source": "JavaCore.java:3196"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.setClasspathContainer",
          "source": "JavaCore.java:3325"
        },
        {
          "method": "org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize",
          "source": "JREContainerInitializer.java:51"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$1.run",
          "source": "JavaCore.java:1176"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:1171"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1841"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1764"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1736"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.setClasspathContainer",
          "source": "JavaCore.java:3316"
        },
        {
          "method": "org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer",
          "source": "ModelEntry.java:107"
        },
        {
          "method": "org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize",
          "source": "RequiredPluginsInitializer.java:40"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore$1.run",
          "source": "JavaCore.java:1176"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.jdt.core.JavaCore.getClasspathContainer",
          "source": "JavaCore.java:1171"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1841"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1764"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath",
          "source": "JavaProject.java:1736"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.buildStructure",
          "source": "JavaProject.java:261"
        },
        {
          "method": "org.eclipse.jdt.internal.core.Openable.generateInfos",
          "source": "Openable.java:169"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.openWhenClosed",
          "source": "JavaElement.java:543"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:280"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.getElementInfo",
          "source": "JavaElement.java:266"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaElement.exists",
          "source": "JavaElement.java:137"
        },
        {
          "method": "org.eclipse.jdt.internal.core.JavaProject.exists",
          "source": "JavaProject.java:894"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction$CopyToClipboardEnablementPolicy.canCopyToClipboard",
          "source": "CopyToClipboardAction.java:328"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction$CopyToClipboardEnablementPolicy.canCopyAllToClipboard",
          "source": "CopyToClipboardAction.java:322"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction$CopyToClipboardEnablementPolicy.canEnable",
          "source": "CopyToClipboardAction.java:310"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction.canEnable",
          "source": "CopyToClipboardAction.java:140"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.refactoring.reorg.CopyToClipboardAction.selectionChanged",
          "source": "CopyToClipboardAction.java:105"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged",
          "source": "SelectionDispatchAction.java:200"
        },
        {
          "method": "org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged",
          "source": "SelectionDispatchAction.java:195"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer$2.run",
          "source": "Viewer.java:159"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:610"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:521"
        },
        {
          "method": "org.eclipse.jface.viewers.Viewer.fireSelectionChanged",
          "source": "Viewer.java:157"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateSelection",
          "source": "StructuredViewer.java:1310"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.handleSelect",
          "source": "StructuredViewer.java:666"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected",
          "source": "StructuredViewer.java:690"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.fireSelectionEvent",
          "source": "OpenStrategy.java:178"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy.access$3",
          "source": "OpenStrategy.java:173"
        },
        {
          "method": "org.eclipse.jface.util.OpenStrategy$1.handleEvent",
          "source": "OpenStrategy.java:309"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java:82"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java:769"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.runDeferredEvents",
          "source": "Display.java:2578"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2256"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1562"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1536"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:257"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:139"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:90"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:277"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:239"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:117"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:324"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:267"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:692"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:676"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "57594",
      "date": "2004-04-06T18:09:20+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "blocker"
    }
  ],
  "groupId": "57594",
  "bugId": "57594",
  "date": "2004-04-06T18:09:20+02:00",
  "product": "PDE",
  "component": "UI",
  "severity": "blocker"
}