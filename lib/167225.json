{
  "comments": [
    "- open cheat sheet \u0027Creating a Rich Client Application\u0027\n- execute step to switch to plug-in dev perspective\n- open the \u0027New Project\u0027 by clicking the \u0027Click to Perform\u0027 within the \u0027Create the plug-in\u0027 section.\n- in the upcoming window skip resp. complete all sub tasks of the \u0027Create the plug-in\u0027 task. \n- click the \u0027Click to Perform\u0027 within the \u0027Run the RCP Application\u0027 task.\n--\u003e an error message shows up; exception in Error Log below\n\nI would expect the \u0027Click to Perform\u0027 buttons to be disabled until previous tasks are finished.\n\nAlso reproducible in 3.3M3.\n\n\norg.eclipse.core.commands.ExecutionException: The parameter string could not be converted to an object\n\tat org.eclipse.core.commands.ExecutionEvent.getObjectParameterForExecution(ExecutionEvent.java:188)\n\tat org.eclipse.ui.internal.ide.handlers.OpenResourceHandler.execute(OpenResourceHandler.java:88)\n\tat org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:151)\n\tat org.eclipse.core.commands.Command.executeWithChecks(Command.java:461)\n\tat org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424)\n\tat org.eclipse.ui.internal.cheatsheets.CommandRunner.executeCommand(CommandRunner.java:67)",
    "Yes, this is a problem, currently the cheat sheet framework does not have a mechanism to disable or enable a step based on whether a rprevious step was completed or skipped. Copying Mike Pawlowski to see if he has any ideas for this particular cheat sheet.",
    "For this particular cheat sheet, the failure is a result of not completing \nthe new plug-in project wizard correctly (e.g. the plug-in\nproject is not created).  As a result, the subsequent command executed to \nopen its plug-in manifest file in an editor fails.\n",
    "While it would be possible to implement a whole new set of commands\nand handlers (java code) that check for all the possible user errors, I think a more realistic approach would be to provide a better message in the dialog. We want cheat sheets to be easy to write for non-developers.\n\nCurrently it says something like \"The command failed to execute\". We can reword\nthis to something like \"The command failed to execute, possibly because one or\nmore of the preceding steps were not completed correctly.\""
  ],
  "commentCreationDates": [
    "2006-12-08T11:26:47+01:00",
    "2006-12-11T19:25:46+01:00",
    "2006-12-12T23:32:24+01:00",
    "2006-12-12T23:40:17+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.commands.ExecutionException",
      "message": "The parameter string could not be converted to an object",
      "elements": [
        {
          "method": "org.eclipse.core.commands.ExecutionEvent.getObjectParameterForExecution",
          "source": "ExecutionEvent.java:188"
        },
        {
          "method": "org.eclipse.ui.internal.ide.handlers.OpenResourceHandler.execute",
          "source": "OpenResourceHandler.java:88"
        },
        {
          "method": "org.eclipse.ui.internal.handlers.HandlerProxy.execute",
          "source": "HandlerProxy.java:151"
        },
        {
          "method": "org.eclipse.core.commands.Command.executeWithChecks",
          "source": "Command.java:461"
        },
        {
          "method": "org.eclipse.core.commands.ParameterizedCommand.executeWithChecks",
          "source": "ParameterizedCommand.java:424"
        },
        {
          "method": "org.eclipse.ui.internal.cheatsheets.CommandRunner.executeCommand",
          "source": "CommandRunner.java:67"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "167225",
      "date": "2006-12-08T11:26:47+01:00",
      "product": "Platform",
      "component": "User Assistance",
      "severity": "minor"
    }
  ],
  "groupId": "167225",
  "bugId": "167225",
  "date": "2006-12-08T11:26:47+01:00",
  "product": "Platform",
  "component": "User Assistance",
  "severity": "minor"
}