{
  "comments": [
    "This bug is related to Bug 12966.\n\n1. Import the example classes from the J2ME Wireless Toolkit (WTK) found in \n$WTK_HOME/apps/demos/classes\n2. Place a method entry breakpoint on a method in the \nexample.manyballs.ManyBalls class.\n3. Launch the J2ME WTK gray phone emulator with the \"ManyBalls\" example \nwith the following commandline and attach with a remote java launch config:\nemulator -Xdebug -Xdevice:DefaultGrayPhone -classpath\n../apps/demos/classes:../lib/midpapi.zip\n-Xrunjdwp:transport\u003ddt_socket,address\u003d8000,server\u003dy \nexample.manyballs.ManyBalls\n4. The following exception occurs:\njava.lang.InternalError: Got event of unknown type\nat \norg.eclipse.jdi.internal.request.EventRequestManagerImpl.findRequest(EventRe\nquestManagerImpl.java:498)\nat org.eclipse.jdi.internal.event.EventImpl.read(EventImpl.java:153)\nat org.eclipse.jdi.internal.event.EventSetImpl.read(EventSetImpl.java:147)\nat \norg.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:59)\nat \norg.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.java:42)\nat \norg.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java\n:194)\nat java.lang.Thread.run(Thread.java:536)\n\nThis exception is thrown while receiving the class prepare event for the\nManyBalls class. The error message here is misleading. The problem isn\u0027t \nreally an unknown event type, it\u0027s the fact that the ClassPrepareEvent is \ncoming to us from the VM with a status of VERIFIED instead of PREPARED. Our \nClassPrepareEventImpl.read(...) method says:\nif ((event.fStatus \u0026 ReferenceTypeImpl.JDWP_CLASS_STATUS_PREPARED) \u003d\u003d 0)\n  return null;\nEventImpl.read(...) gets this null result from the ClassPrepareEventImpl \nand passes it into EventRequestManagerImpl.findRequest(...) where the \nexception is thrown.\n\nThere are at least three things to look at here:\nWhy does the VM give us a ClassPrepareEvent for an unprepared class?\nWhy do we return null from ClassPrepareEventImpl when we get a class status \nother than what we expect?\nWhy do we return null from ClassPrepareEventImpl but not handle null in \nEventImpl.read(...)?",
    "I don\u0027t think that Eclipse should drop the ClassPrepareEvent for an unprepared \nclass by returning null. ",
    "I agree with Vickie that the code looks like it doesn\u0027t belong.\n\nI\u0027ve removed the status check from ClassPrepareEventImpl.read(...) and sent \nemail to the original implementor to double-check that there isn\u0027t some case \nwhich we\u0027re overlooking.",
    "Darin, please verify.",
    "Good.",
    "Verified code change.",
    "Fix released to 2.0.1 and HEAD (2.1)"
  ],
  "commentCreationDates": [
    "2002-07-11T15:25:40+02:00",
    "2002-07-12T03:57:58+02:00",
    "2002-07-12T17:08:07+02:00",
    "2002-07-12T17:08:44+02:00",
    "2002-07-15T03:41:41+02:00",
    "2002-07-15T19:58:51+02:00",
    "2002-07-23T21:15:54+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.InternalError",
      "message": "Got event of unknown type",
      "elements": [
        {
          "method": "org.eclipse.jdi.internal.request.EventRequestManagerImpl.findRequest",
          "source": "EventRe questManagerImpl.java:498"
        },
        {
          "method": "org.eclipse.jdi.internal.event.EventImpl.read",
          "source": "EventImpl.java:153"
        },
        {
          "method": "org.eclipse.jdi.internal.event.EventSetImpl.read",
          "source": "EventSetImpl.java:147"
        },
        {
          "method": "org.eclipse.jdi.internal.event.EventQueueImpl.remove",
          "source": "EventQueueImpl.java:59"
        },
        {
          "method": "org.eclipse.jdi.internal.event.EventQueueImpl.remove",
          "source": "EventQueueImpl.java:42"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.EventDispatcher.run",
          "source": "EventDispatcher.java :194"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:536"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "21483",
      "date": "2002-07-11T15:25:40+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "21483",
  "bugId": "21483",
  "date": "2002-07-11T15:25:40+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}