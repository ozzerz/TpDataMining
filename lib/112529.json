{
  "comments": [
    "Using the same AspectJ from an ANT task, has no problems. But form within \nEclipse every compile results in the error below. I feel this is a major \nproblem, escpecially since it is M4.\n\njava.lang.NullPointerException\nat org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1015)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave\n(AjCompilerAdapter.java:300)\nat org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling\n(AjCompilerAdapter.java:178)\nat \norg.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspect\nj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)\nat org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile\n(Compiler.java:367)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation\n(AjBuildManager.java:759)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild\n(AjBuildManager.java:249)\nat org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild\n(AjBuildManager.java:158)\nat org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)\nat org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run\n(AspectJBuildManager.java:191)\n\nNullPointerException thrown: null",
    "Andy, it looks like getBcelObjectType is returning null...\n\n\t\t    BcelObjectType classType \u003d\nBcelWorld.getBcelObjectType(world.resolve(className));\n\t\t    if (classType.isAspect()) {  \u003c\u003c\u003c\u003c\u003c\u003c\u003c NPE here\n\t\t        weaveAndNotify(classFile, classType,requestor);\n\t\t        wovenClassNames.add(className);\n\t\t    }",
    "After some experimenting, reapplying the AspectJ nature in Eclipse seems to \nmake it go away... Hm.",
    "I made a change a little while ago to allow BcelWorld.getBcelObjectType() to\nreturn null (and the caller had to deal with it being null - as the javadoc\nsays).  I believe it can only be null if the delegate for a particular type is\nan eclipse thing rather than a Bcel thing.  If I didn\u0027t allow\ngetBcelObjectType() to return null then it was just blowing up with a\nclasscastexception.\n\nUnfortunately this caller wants a bcel thing back and doesn\u0027t allow for null. \nHowever, given that the question it is asking is so simple \u0027isAspect()\u0027 - I\ndon\u0027t think it needs the delegate immediately, so I\u0027ve modified it to ask the\nresolved type whether its an aspect before trying to retrieve the delegate.\n\nI\u0027m actually worried that the type it is processing is one of these\n\u0027MissingResolvedTypeWithKnownSignature\u0027 objects that are now causing us grief\nthrough the codebase...\n\nAnyway, I\u0027ve made the change and committed it - I don\u0027t know if it\u0027ll fix the\nproblem, but if/when it goes wrong there should be better diagnostics.\n\nDoes it only happen on incremental builds or on full builds too? \nRemoving/readding the nature would cause a full build which you seem to imply\ndoesnt exhibit this problem.  If it happens again, press the build button on the\ntoolbar to do a full AJ compile and see what happens.",
    "Improved handling code is in the latest dev build - will make it into AJDT next\nweek.",
    "I\u0027m still using M4.\n\nThe error returned now that I restarted Eclipse (after a full system shutdown) \nto continue my work. I had to click away a window 4x (or had to click 4x on the \nOK button, or it simply didn\u0027t catch the first 3 clicks, can\u0027t tell the \ndifference).\n\nWhen I click the \"Build a AspectJ\" button in the toolbar, compilation starts \nand then the error window pops up once.\n\nReapplying the nature made it go away again. Full build works also.\n\nI stopped and started Eclipse and the problem is NOT present. Well well, I seem \nto have found a ellusive one. I will see what happens when I do a full reboot.\n\nTo be continued?\n",
    "I believe the AJDT team are upgrading to the latest AJ imminently - hopefully\nwe\u0027ll get more diagnostics if it goes wrong in that version...",
    "please can you retry with the latest AJDT to create more diagnostics?",
    "Just updated and things do look better; no errors so far.\n\nI have some hindsight that might prove useful. The orginal aspect was declared \ninside a .java file, not a .aj file. Eclipse had problems with it from the \nstart, but everything worked, because I use ANT to compile and deploy. And once \neverything was compiled, Eclipse correctly started the unittest.\n\nAfter I got tired of have to go through ANT all the time, I decide to dive into \nthe aspect syntax error (everything is a matter of priority; it worked) and \nfound my naming mistake. As of then the problem did not reoccur. So I assume it \nwas related to the extention.",
    "thanks for the update.  Eclipse has problems because the eager parser for java\nis used if its in a .java file.  The compiler should always do the right thing\nwhen a build actually occurs, but you have to look \u0027past\u0027 the red squigglies\nwhilst editing the file :)\n",
    "I\u0027m resolving this as fixed then - please reopen if you see any problems again :)",
    "** If you\u0027re looking for the \"Top 10 downloads contains stale data\" bug mentioned in the Webmaster update, it\u0027s actually Bug 122529 **",
    "sigh...\n\n* sound of head bashing keyboard *",
    "Here, let me help you with that...\n* pulls heavy sledgehammer from under cloak *"
  ],
  "commentCreationDates": [
    "2005-10-13T20:20:01+02:00",
    "2005-10-13T20:31:50+02:00",
    "2005-10-13T20:39:17+02:00",
    "2005-10-14T10:21:49+02:00",
    "2005-10-14T13:47:40+02:00",
    "2005-10-14T19:49:10+02:00",
    "2005-10-14T19:51:28+02:00",
    "2005-10-27T12:40:24+02:00",
    "2005-10-27T20:21:18+02:00",
    "2005-10-27T20:39:17+02:00",
    "2005-10-28T14:17:24+02:00",
    "2006-01-05T18:43:59+01:00",
    "2006-01-05T18:45:38+01:00",
    "2006-01-06T17:11:41+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.aspectj.weaver.bcel.BcelWeaver.weave",
          "source": "BcelWeaver.java:1015"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave",
          "source": "AjCompilerAdapter.java:300"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling",
          "source": "AjCompilerAdapter.java:178"
        },
        {
          "method": "org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0",
          "source": "CompilerAdapter.aj:70"
        },
        {
          "method": "org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:367"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation",
          "source": "AjBuildManager.java:759"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild",
          "source": "AjBuildManager.java:249"
        },
        {
          "method": "org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild",
          "source": "AjBuildManager.java:158"
        },
        {
          "method": "org.aspectj.ajde.internal.CompilerAdapter.compile",
          "source": "CompilerAdapter.java:117"
        },
        {
          "method": "org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run",
          "source": "AspectJBuildManager.java:191"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "112529",
      "date": "2005-10-13T20:20:01+02:00",
      "product": "AspectJ",
      "component": "IDE",
      "severity": "major"
    }
  ],
  "groupId": "112529",
  "bugId": "112529",
  "date": "2005-10-13T20:20:01+02:00",
  "product": "AspectJ",
  "component": "IDE",
  "severity": "major"
}