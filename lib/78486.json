{
  "comments": [
    "Every time i try to checkout a project from scratch (there is still nothing on\nmy workspace) from a CVS 1.11.17 I get the following log:\n\n!ENTRY org.eclipse.core.runtime 4 2 nov 12, 2004 10:30:08.95\n!MESSAGE An internal error occurred during: \"Checking out \u0027Correo CV\u0027 from\nCVS\".!STACK 0\njava.lang.NullPointerException\n        at java.util.TimeZone.parseCustomTimeZone(TimeZone.java:696)\n        at java.util.TimeZone.getTimeZone(TimeZone.java:450)\n        at java.util.TimeZone.getTimeZone(TimeZone.java:444)\n        at\norg.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.getTimeZone(CVSDateFormatter.java:97)\n        at\norg.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.serverStampToDate(CVSDateFormatter.java:42)\n        at\norg.eclipse.team.internal.ccvs.core.client.ModTimeHandler.handle(ModTimeHandler.java:43)\n        at\norg.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:232)\n        at\norg.eclipse.team.internal.ccvs.core.client.Command.doExecute(Command.java:421)\n        at\norg.eclipse.team.internal.ccvs.core.client.Checkout.doExecute(Checkout.java:168)\n        at\norg.eclipse.team.internal.ccvs.core.client.CheckoutWithOverwrite.doExecute(CheckoutWithOverwrite.java:52)\n        at\norg.eclipse.team.internal.ccvs.core.client.Command$1.run(Command.java:337)\n        at\norg.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1408)\n        at\norg.eclipse.team.internal.ccvs.core.resources.EclipseResource$2.run(EclipseResource.java:268)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)\n        at\norg.eclipse.team.internal.ccvs.core.resources.EclipseResource.run(EclipseResource.java:265)\n        at\norg.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:349)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation.performCheckout(CheckoutProjectOperation.java:245)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation$1.run(CheckoutProjectOperation.java:151)\n        at\norg.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1408)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation.checkout(CheckoutProjectOperation.java:149)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CheckoutMultipleProjectsOperation.checkout(CheckoutMultipleProjectsOperation.java:50)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.checkout(CheckoutOperation.java:46)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.execute(CheckoutOperation.java:31)\n        at\norg.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:84)\n        at\norg.eclipse.team.internal.ui.actions.JobRunnableContext.run(JobRunnableContext.java:159)\n        at\norg.eclipse.team.internal.ui.actions.JobRunnableContext$3.runInWorkspace(JobRunnableContext.java:179)\n        at\norg.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "I am using Debian 3.0R2 sarge distibution.",
    "my TimeZone Europe Madrid and its locale is es_ES@euro.\nLinux command date returns \n\nvie nov 12 11:15:04 CET 2004\n\nThis error does not happen using the same configuration in Windows.",
    "I changed the locale to en_US.ISO-8859-15 getting date command as shown below\n\nFri Nov 12 11:44:04 CET 2004\n\nstill same exception.",
    "I changed my locale again to meet \"en_US\". It can\u0027t get any better. Still the\ndate format is the same, ocurring the same error as shown in the StackTrace.",
    "I found the root problem at\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d4330791\n\nIt seem that TimeZone.getTimeZone(\"FAKE\") instead of returning GMT returns null,\nwich probably causes de java.lang.NullPointer shown in the StackTrace. I\u0027ll try\nupgrading JSDK 1.4.2_05 to 1.4.2_06.",
    "More than this. I notices the bug was too old, so I came up with this new thing:\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id\u003d4412864\n\nIt seems that returning null to an unknown ID is preferred, and documented in\nJSDK javadocs as well, but not actually working that way.",
    "Ok, I\u0027m confused. I tried this:\nSystem.out.println(TimeZone.getTimeZone(\"Fake\"));\nwich returns\nsun.util.calendar.ZoneInfo[id\u003d\"GMT\",offset\u003d0,dstSavings\u003d0,useDaylight\u003dfalse,transitions\u003d0,lastRule\u003dnull]\nand not null, wich is all right according to javadocs. So, unless i peep inside\norg.eclipse.team.internal.etc... I can\u0027t find out what\u0027s wrong.\n",
    "To top it all, i tried to sync with CVS and Eclipse 2.1.3 with identical error.",
    "Could you go ahead and peep inside and debug it for us. It would be easier for \nyou to debug since you already have a failure case setup - it may take us \nlonger to set this up...\n\nDo the following:\n1. File \u003e Import \u003e External Plug-ins and Fragments\n2. On the next page set \"Import As\" to project with source.\n3. On the next page select org.eclipse.team.cvs.core and import.\n4. Open the offending class: CVSDateFormatter\n5. Put a breakpoint, and then run Eclipse in debug mode.\n\nLet us know what you find.",
    "I debugged org.eclipse.team.core.cvs.CVSDateFormatter and this is what happens:\n\nmethod getTimeZone(String dateFromServer) receives \"29 Oct 2004 08:49:23 -0000\"\nit then parses this to find the \"0000\", which transforms to \"GMT-00:00\".\nThis is the String it passes to TimeZone.getTimeZone(\"GMT-00:00\"); wich ends in\na NullPointerException. This is the StackTrace for a simple test with that only\nline:\n\njava.lang.NullPointerException\n\tat java.util.TimeZone.parseCustomTimeZone(TimeZone.java:696)\n\tat java.util.TimeZone.getTimeZone(TimeZone.java:450)\n\tat java.util.TimeZone.getTimeZone(TimeZone.java:444)\n\tat test.java.util.TimeZoneTest.testGetTimeZone(TimeZoneTest.java:44)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\nNext I tried to modify the String TimeZoneID.\nI found out that it works fine for others \"GMT+hh:mm\" and \"GMT-hh:mm\" except\nwhen hh:mm is 00:00.\nIn that case, it accepts \"GMT00:00\" as good. In fact, I see in the code of\nCVSDateFormatter that it expects the case of GMT when no sign plus nor minus is\nrecevied as a parameter. \nConclusion: Either treat the parameter dateFromServer to remove sing when GMT is\n0000, or remove it from GMT ID before passing it to TimeZone when 00:00 is detected.\n",
    "I tried the same thing on Windows.\nString parameter dateFromServer is \"29 Oct 2004 08:49:23 -0000\"\nwich CVSDateFormatter.getTimeZone(String dateFromServer) transforms to\nString \"GMT-00:00\".\n\nSo, why doesn\u0027t it fail on Windows?\nBecause java.util.TimeZone.getTimeZone(\"GMT-00:00\") is alright with JDK1.4.2_05 \non Windows.\n\nDid I mention I have the same JDK\u0027s on Linux and Windows? I do.\n\nSo, what\u0027s next? Post a bug on java.sun.com and wait for a patch on JDK?",
    "You may want to send a bug report to Sun since the behavior should be \nconsistent. We could still provide a fix on our end since the case seems \npretty easy to handle. Any chance of you providing a patch? That would really \nspeed things up;-)",
    "This bug is annoing me today, when I decide to start developing in Linux because\nmy Windows XP system is too slow. I did a little correction that works fine, but\nI don\u0027t now if it is perfect. But it is simple:\n\nif (resultTz.toString().equalsIgnoreCase(\"GMT-00:00\") ||\n    resultTz.toString().equalsIgnoreCase(\"GMT+00:00\")\t)\nresultTz \u003d new StringBuffer(\"GMT\");\nreturn TimeZone.getTimeZone(resultTz.toString());\n",
    "I\u0027d be glad to provide a patch.\nHowever, I imported the org.eclipse.team.cvs.core as a Plug-in / Fragment thus\nit is not shared, wich does not allow me to create a patch.\n\nI tried to Share the project but I am a bit in a loss. Should I use an existing\nmodule name? In that case, it asks me to synchronize it with HEAD or BRANCHES.\nAlthough i tried to synchronize it I am not sure this is the right thing to do.\n\nCan you please provide me with the steps to Create a patch for\norg.eclipse.team.cvs.core when it is not Shared?\n\nThanks,\n\nMariano.",
    "I have the code that solves this problem.\n\nAs soon as i find out how to Share org.eclipse.team.cvs.core to create the Patch\ni will attach it here. ;)",
    "Could you just send of the changed file(s). I\u0027ve found a bug in the share\nproject that makes creating a patch in this case hard. Thks.",
    "Created an attachment (id\u003d16007)\nsolution for a TimeZone bug in JDK for linux.\n\nthe 2 lines at the top of getTimeZone(String dateFromServer) method:\n\nif (dateFromServer.lastIndexOf(\"0000\") !\u003d -1) \n   return TimeZone.getTimeZone(\"GMT\");//$NON-NLS-1$ \n\nprevents further buggy processing of the TimeZone in jdk1.4.2_06 for linux.",
    "Thanks for the patch. Fix released to HEAD. ",
    "Verified for 3.1M4"
  ],
  "commentCreationDates": [
    "2004-11-12T10:02:35+01:00",
    "2004-11-12T10:03:31+01:00",
    "2004-11-12T10:39:00+01:00",
    "2004-11-12T10:59:23+01:00",
    "2004-11-12T11:06:35+01:00",
    "2004-11-12T11:23:18+01:00",
    "2004-11-12T11:27:50+01:00",
    "2004-11-12T11:43:01+01:00",
    "2004-11-12T12:23:15+01:00",
    "2004-11-12T14:15:33+01:00",
    "2004-11-17T08:47:40+01:00",
    "2004-11-17T09:14:56+01:00",
    "2004-11-17T13:48:43+01:00",
    "2004-11-18T01:38:18+01:00",
    "2004-11-18T11:40:52+01:00",
    "2004-11-18T11:49:27+01:00",
    "2004-11-18T13:50:55+01:00",
    "2004-11-19T07:54:31+01:00",
    "2004-11-22T14:30:13+01:00",
    "2004-12-15T20:40:54+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.TimeZone.parseCustomTimeZone",
          "source": "TimeZone.java:696"
        },
        {
          "method": "java.util.TimeZone.getTimeZone",
          "source": "TimeZone.java:450"
        },
        {
          "method": "java.util.TimeZone.getTimeZone",
          "source": "TimeZone.java:444"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.getTimeZone",
          "source": "CVSDateFormatter.java:97"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.util.CVSDateFormatter.serverStampToDate",
          "source": "CVSDateFormatter.java:42"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.ModTimeHandler.handle",
          "source": "ModTimeHandler.java:43"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Request.executeRequest",
          "source": "Request.java:232"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command.doExecute",
          "source": "Command.java:421"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Checkout.doExecute",
          "source": "Checkout.java:168"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.CheckoutWithOverwrite.doExecute",
          "source": "CheckoutWithOverwrite.java:52"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command$1.run",
          "source": "Command.java:337"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run",
          "source": "EclipseSynchronizer.java:1408"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource$2.run",
          "source": "EclipseResource.java:268"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1673"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseResource.run",
          "source": "EclipseResource.java:265"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.client.Command.execute",
          "source": "Command.java:349"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation.performCheckout",
          "source": "CheckoutProjectOperation.java:245"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation$1.run",
          "source": "CheckoutProjectOperation.java:151"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run",
          "source": "EclipseSynchronizer.java:1408"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CheckoutProjectOperation.checkout",
          "source": "CheckoutProjectOperation.java:149"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CheckoutMultipleProjectsOperation.checkout",
          "source": "CheckoutMultipleProjectsOperation.java:50"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.checkout",
          "source": "CheckoutOperation.java:46"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CheckoutOperation.execute",
          "source": "CheckoutOperation.java:31"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run",
          "source": "CVSOperation.java:84"
        },
        {
          "method": "org.eclipse.team.internal.ui.actions.JobRunnableContext.run",
          "source": "JobRunnableContext.java:159"
        },
        {
          "method": "org.eclipse.team.internal.ui.actions.JobRunnableContext$3.runInWorkspace",
          "source": "JobRunnableContext.java:179"
        },
        {
          "method": "org.eclipse.core.internal.resources.InternalWorkspaceJob.run",
          "source": "InternalWorkspaceJob.java:38"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "78486",
      "date": "2004-11-12T10:02:35+01:00",
      "product": "Platform",
      "component": "CVS",
      "severity": "blocker"
    },
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "java.util.TimeZone.parseCustomTimeZone",
          "source": "TimeZone.java:696"
        },
        {
          "method": "java.util.TimeZone.getTimeZone",
          "source": "TimeZone.java:450"
        },
        {
          "method": "java.util.TimeZone.getTimeZone",
          "source": "TimeZone.java:444"
        },
        {
          "method": "test.java.util.TimeZoneTest.testGetTimeZone",
          "source": "TimeZoneTest.java:44"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        }
      ],
      "number": 1,
      "commentIndex": 10,
      "bugId": "78486",
      "date": "2004-11-17T08:47:40+01:00",
      "product": "Platform",
      "component": "CVS",
      "severity": "blocker"
    }
  ],
  "groupId": "78486",
  "bugId": "78486",
  "date": "2004-11-12T10:02:35+01:00",
  "product": "Platform",
  "component": "CVS",
  "severity": "blocker"
}