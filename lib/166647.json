{
  "comments": [
    "When using LTW and having a pointcut declaration that\u0027s using cflow, the VM exits with an exception: java.lang.NoSuchFieldError: ajc$cflowCounter$0\n\nThis behaviour may be similar to reported bugs #149096 and Bug #132080 (should be fixed), but even with 1.5.3, the mentioned exception occurs.\n\nHere\u0027s an example, that reproduces the exception with AspectJ 1.5.3 (using eclipse):\n\n1.) /META-INF/aop.xml:\n\n\u003c?xml version\u003d\"1.0\"?\u003e\n\u003caspectj\u003e\n  \u003caspects\u003e\n    \u003caspect name\u003d\"net.test.ltw.aspect.LoggingAspect\"/\u003e\n  \u003c/aspects\u003e\n  \u003cweaver\u003e\n    \u003cexclude within\u003d\"org.apache..*\"/\u003e\n    \u003cinclude within\u003d\"net.test.ltw.beans..*\"/\u003e\n  \u003c/weaver\u003e\n\u003c/aspectj\u003e\n\n2.) The Aspect, using cflow:\n\npackage net.test.ltw.aspect;\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\n\n@Aspect\npublic class LoggingAspect {\n\t\n\t@Pointcut(\"execution(* sayHello(..)) \"\n           + \" \u0026\u0026 !cflow( execution( *   \n                   net.test.ltw.beans.caller.EvilWorldCaller.callWorld(..) ) ) \"\n\t)\n\tpublic void sayHelloExecutions() {}\n\t\n\t@Around(\"sayHelloExecutions()\")\n\tpublic Object validateMethodCall( ProceedingJoinPoint joinPoint ) throws Throwable{\n\n\t\tSystem.out.println( \"---\" ) ;\n\t\tSystem.out.println( \"entry \" + joinPoint.toLongString() );\n\t\t\n\t\tObject retVal \u003d joinPoint.proceed();\n\t\t\n\t\tSystem.out.println( \"exit \" + joinPoint.toLongString() );\n\t\t\n\t\treturn retVal;\n\t}\n}\n\n3.) The beans to advice:\n\npackage net.test.ltw.beans.caller;\n\nimport net.test.ltw.beans.worlds.World;\n\npublic class GoodWorldCaller {\n\n\tWorld world \u003d new World();\n\t\n\tpublic void callWorld(){\n\t\tworld.sayHello();\n\t}\n}\n\nand \n\npackage net.test.ltw.beans.caller;\n\nimport net.test.ltw.beans.worlds.World;\n\npublic class EvilWorldCaller {\n\n\tWorld world \u003d new World();\n\t\n\tpublic void callWorld(){\n\t\tworld.sayHello();\n\t}\n}\n\n4.) The Main, starting the Example:\n\npackage net.test.ltw.beans.caller;\n\npublic class CallerMain {\n\n\tpublic static void main(String[] args) {\n\n\t\tGoodWorldCaller goodWorldCaller \u003d new GoodWorldCaller();\n\t\tEvilWorldCaller evilWorldCaller \u003d new EvilWorldCaller();\n\t\t\n\t\tgoodWorldCaller.callWorld();\n\t\tevilWorldCaller.callWorld();\n\t}\n\n}\n\n5.) The VM is startet with VM-Arg \n\n-javaagent:D:\\Temp\\mvel\\AspectJ-1.5.3_INVEST\\lib\\aspectjweaver.jar\n\n\nGreetings\n\nMario",
    "Here\u0027s the full stacktrace:\n\nException in thread \"main\" java.lang.NoSuchFieldError: ajc$cflowCounter$0\n\tat net.test.ltw.beans.worlds.World.sayHello(World.java)\n\tat net.test.ltw.beans.caller.GoodWorldCaller.callWorld(GoodWorldCaller.java:10)\n\tat net.test.ltw.beans.caller.CallerMain.main(CallerMain.java:10)\n",
    "I think you might be experiencing the same incremental compilation bug that I saw last week. You code works for me (with the addition of World.java):\n\npackage net.test.ltw.beans.caller;\n\npublic class World {\n\n\tpublic void sayHello () {\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n\nand using a generated aop-ajc.xml and some weaver options in my own aop.xml\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003caspectj\u003e\n\t\u003cweaver options\u003d\"-verbose -showWeaveInfo\"/\u003e\n\u003c/aspectj\u003e\n\nI got the following\n\n[AppClassLoader@92e78c] info AspectJ Weaver Version 1.5.3 built on Wednesday Nov 22, 2006 at 11:18:15 GMT\n[AppClassLoader@92e78c] info register classloader sun.misc.Launcher$AppClassLoader@92e78c\n[AppClassLoader@92e78c] info using configuration /C:/workspaces/temp/Mario_Gleichmann/bin/META-INF/aop.xml\n[AppClassLoader@92e78c] info using configuration /C:/workspaces/temp/Mario_Gleichmann/bin/META-INF/aop-ajc.xml\n[AppClassLoader@92e78c] info register aspect net.test.ltw.aspect.LoggingAspect\n[AppClassLoader@92e78c] weaveinfo Join point \u0027method-execution(void net.test.ltw.beans.caller.World.sayHello())\u0027 in Type \u0027net.test.ltw.beans.caller.World\u0027 (World.java:6) advised by around advice from \u0027net.test.ltw.aspect.LoggingAspect\u0027 (LoggingAspect.java) [with runtime test]\n---\nentry execution(public void net.test.ltw.beans.caller.World.sayHello())\nHello\nexit execution(public void net.test.ltw.beans.caller.World.sayHello())\nHello\n\nARe you using AJDT? Try cleainng your project.",
    "I had a similar problem with LTW and cflow pointcut, so I tried using the example in this bug. I tested the example with the changes from Matthew Webster and the problem happens for me...\n\nI?m using eclipse 3.3, jdk1.5.0_10 and aspectj 1.5.3. I have AJDT installed but for this test I?m using a pure java project.\n\nI got the following output:\n\n\n[AppClassLoader@92e78c] info AspectJ Weaver Version 1.5.3 built on Wednesday Nov 22, 2006 at 11:18:15 GMT\n[AppClassLoader@92e78c] info register classloader sun.misc.Launcher$AppClassLoader@92e78c\n[AppClassLoader@92e78c] info using configuration /D:/projetos/aop-test/bin/META-INF/aop.xml\n[AppClassLoader@92e78c] info register aspect net.test.ltw.aspect.LoggingAspect\n[AppClassLoader@92e78c] weaveinfo Join point \u0027method-execution(void net.test.ltw.beans.caller.World.sayHello())\u0027 in Type \u0027net.test.ltw.beans.caller.World\u0027 (World.java:6) advised by around advice from \u0027net.test.ltw.aspect.LoggingAspect\u0027 (LoggingAspect.java) [with runtime test]\nException in thread \"main\" java.lang.NoSuchFieldError: ajc$cflowCounter$0\n\tat net.test.ltw.beans.caller.World.sayHello(World.java)\n\tat net.test.ltw.beans.caller.GoodWorldCaller.callWorld(GoodWorldCaller.java:10)\n\tat net.test.ltw.beans.caller.CallerMain.main(CallerMain.java:10)\n\n\nI tried using before and after advice but the problem seems to persist...\n\nBug #186322 may be a similar issue?",
    "My testing shows that this bug is still present in version org.aspectj.runtime_1.5.4.200705211336 / org.aspectj.weaver_1.5.4.200705211336.\n\nIs there any action to fix this bug?\n\nThanks\nDan\n\n",
    "as I described just now in bug 186322 - we have effectively given our users some rope and they\u0027ve hung themselves....  it is working as designed but you are tripping over something that is not at all obvious and I need to address it.\n\nThe problem is that the aspect is \u0027incomplete\u0027 until woven and does not contain the cflow field that is required.  Your aop.xml says:\n\n\u003cweaver\u003e\n    \u003cexclude within\u003d\"org.apache..*\"/\u003e\n    \u003cinclude within\u003d\"net.test.ltw.beans..*\"/\u003e\n\u003c/weaver\u003e\n\nand that excludes the aspect itself - so it cannot be woven and the cflow field does not get added.  Changing the aop.xml to include the aspect class:\n\n\u003cweaver\u003e\n    \u003cexclude within\u003d\"org.apache..*\"/\u003e\n    \u003cinclude within\u003d\"net.test.ltw.beans..*\"/\u003e\n    \u003cinclude within\u003d\"net.test.ltw.aspect..*\"/\u003e\n\u003c/weaver\u003e\n\ncauses everything to work perfectly.\n\n",
    "To address this cryptic failure, the weaver now produces this kind of error if you exclude the XML aspect from weaving.\n\n[WeavingURLClassLoader] error XML Defined aspects must be woven in cases where cflow pointcuts are involved. Currently the include/exclude patterns exclude \u0027x.Aspect2\u0027\n\nA proper solution would force it to be included but only apply the relevant mungers to it - but that is more work than I have time for before 1.5.4.  If I force it to be included now then it will get affected by all other aspects that are around and there will be nothing the user can do to stop that happening.",
    "The changes are in 1.5.4 for the error message but I am not closing this until the proper solution is done, so moving to 1.6.0"
  ],
  "commentCreationDates": [
    "2006-12-04T16:04:43+01:00",
    "2006-12-04T16:08:05+01:00",
    "2006-12-05T15:56:39+01:00",
    "2007-08-15T18:52:48+02:00",
    "2007-08-31T07:34:21+02:00",
    "2007-11-06T17:16:58+01:00",
    "2007-12-04T09:42:04+01:00",
    "2007-12-04T09:43:01+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "ajc$cflowCounter$0",
      "elements": [
        {
          "method": "net.test.ltw.beans.worlds.World.sayHello",
          "source": "World.java"
        },
        {
          "method": "net.test.ltw.beans.caller.GoodWorldCaller.callWorld",
          "source": "GoodWorldCaller.java:10"
        },
        {
          "method": "net.test.ltw.beans.caller.CallerMain.main",
          "source": "CallerMain.java:10"
        }
      ],
      "number": 0,
      "commentIndex": 1,
      "bugId": "166647",
      "date": "2006-12-04T16:08:05+01:00",
      "product": "AspectJ",
      "component": "LTWeaving",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.NoSuchFieldError",
      "message": "ajc$cflowCounter$0",
      "elements": [
        {
          "method": "net.test.ltw.beans.caller.World.sayHello",
          "source": "World.java"
        },
        {
          "method": "net.test.ltw.beans.caller.GoodWorldCaller.callWorld",
          "source": "GoodWorldCaller.java:10"
        },
        {
          "method": "net.test.ltw.beans.caller.CallerMain.main",
          "source": "CallerMain.java:10"
        }
      ],
      "number": 1,
      "commentIndex": 3,
      "bugId": "166647",
      "date": "2007-08-15T18:52:48+02:00",
      "product": "AspectJ",
      "component": "LTWeaving",
      "severity": "normal"
    }
  ],
  "groupId": "166647",
  "bugId": "166647",
  "date": "2006-12-04T16:04:43+01:00",
  "product": "AspectJ",
  "component": "LTWeaving",
  "severity": "normal"
}