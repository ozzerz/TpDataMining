{
  "comments": [
    "Build R2.0\n\nFrom EC:\n-----------------\nI ran into an apparent bug with the JDT compiler while working with some\nopen source code.  Everything works fine when built the the Sun 1.3.1_04\nand 1.4.0 tools.  I stripped out the offending code and eliminated most\nof the parts necessary to reproduce the error and wrote a small main\nmethod for a simple test case.\n\nThe error I\u0027m getting is...\n\njava.lang.ClassFormatError: CrossRefList$CrossRef (Repetitive method\nname/signature)\n at java.lang.ClassLoader.defineClass0(Native Method)\n at java.lang.ClassLoader.defineClass(ClassLoader.java:509)\n at\njava.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)\n at java.net.URLClassLoader.defineClass(URLClassLoader.java:246)\n at java.net.URLClassLoader.access$100(URLClassLoader.java:54)\n at java.net.URLClassLoader$1.run(URLClassLoader.java:193)\n at java.security.AccessController.doPrivileged(Native Method)\n at java.net.URLClassLoader.findClass(URLClassLoader.java:186)\n at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:265)\n at java.lang.ClassLoader.loadClass(ClassLoader.java:262)\n at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:322)\n at CrossRefList.main(CrossRefList.java:35)\nException in thread \"main\" :\n\nPassing a \"-noverify\" flag to the VM allows the test case to run but\ndoes not work for the larger project.\n\nUsing Sun\u0027s javap tool on the Eclipse built code (built under both 1.3\nand 1.4 compliance) gives:\n\n$ javap CrossRefList\nsun.tools.java.CompilerError: duplicate addition\n        at sun.tools.java.MethodSet.add(MethodSet.java:85)\n        at\nsun.tools.java.ClassDefinition.collectInheritedMethods\n(ClassDefinition.java:1472)\n\n        at sun.tools.java.BinaryClass.basicCheck(BinaryClass.java:73)\n        at\nsun.tools.java.ClassDeclaration.getClassDefinition(ClassDeclaration.java:130)\n\n        at\nsun.tools.java.BinaryClass.initInnerClasses(BinaryClass.java:352)\n        at sun.tools.java.BinaryClass.loadNested(BinaryClass.java:221)\n        at\nsun.tools.javap.JavaPEnvironment.loadDefinition(JavaPEnvironment.java:221)\n\n        at\nsun.tools.java.ClassDeclaration.getClassDefinition(ClassDeclaration.java:120)\n\n        at\nsun.tools.java.Environment.getClassDefinition(Environment.java:123)\n        at sun.tools.javap.JavaP.displayResults(JavaP.java:193)\n        at sun.tools.javap.JavaP.perform(JavaP.java:212)\n        at sun.tools.javap.JavaP.entry(JavaP.java:233)\n        at sun.tools.javap.JavaP.main(JavaP.java:220)\nException in thread \"main\"\n\n$ javap CrossRefList.CrossRef\nsun.tools.java.CompilerError: duplicate addition\n        at sun.tools.java.MethodSet.add(MethodSet.java:85)\n        at\nsun.tools.java.ClassDefinition.collectInheritedMethods\n(ClassDefinition.java:1472)\n\n        at sun.tools.java.BinaryClass.basicCheck(BinaryClass.java:73)\n        at\nsun.tools.java.ClassDeclaration.getClassDefinition(ClassDeclaration.java:130)\n\n        at\nsun.tools.java.BinaryClass.initInnerClasses(BinaryClass.java:352)\n        at sun.tools.java.BinaryClass.loadNested(BinaryClass.java:221)\n        at\nsun.tools.javap.JavaPEnvironment.loadDefinition(JavaPEnvironment.java:221)\n\n        at\nsun.tools.java.ClassDeclaration.getClassDefinition(ClassDeclaration.java:120)\n\n        at\nsun.tools.java.Environment.getClassDefinition(Environment.java:123)\n        at\nsun.tools.java.Environment.getClassDefinition(Environment.java:84)\n        at sun.tools.javap.JavaP.displayResults(JavaP.java:193)\n        at sun.tools.javap.JavaP.perform(JavaP.java:212)\n        at sun.tools.javap.JavaP.entry(JavaP.java:233)\n        at sun.tools.javap.JavaP.main(JavaP.java:220)\nException in thread \"main\"\n\nThe same code built under Sun\u0027s 1.3.1_04 and 1.4.0 compiler gives:\n$ javap CrossRefList\n\nCompiled from CrossRefList.java\npublic class CrossRefList extends java.lang.Object {\n    public CrossRefList(java.lang.Object);\n    public synchronized java.lang.Object first();\n    public synchronized void link(CrossRefList);\n    public static void main(java.lang.String[]);\n    static java.lang.Object access$000(CrossRefList);\n    protected class CrossRefList. CrossRef extends java.lang.Object\n    /* ACC_SUPER bit NOT set */\n{\n        protected CrossRefList.CrossRef _far;\n        static java.lang.Object access$100(CrossRefList.CrossRef);\n        CrossRefList.CrossRef(CrossRefList,CrossRefList$1);\n\nCrossRefList.CrossRef(CrossRefList,CrossRefList.CrossRef,CrossRefList$1);\n\n    }\n}\n\n$ javap CrossRefList.CrossRef\n\nCompiled from CrossRefList.java\nprotected class CrossRefList. CrossRef extends java.lang.Object\n    /* ACC_SUPER bit NOT set */\n{\n    protected CrossRefList.CrossRef _far;\n    static java.lang.Object access$100(CrossRefList.CrossRef);\n    CrossRefList.CrossRef(CrossRefList,CrossRefList$1);\n\nCrossRefList.CrossRef(CrossRefList,CrossRefList.CrossRef,CrossRefList$1);\n\n}\n\nI\u0027m using the 2.0 release w/ build id 200206271827 and a cursory review\nof the open bug list didn\u0027t show anything similar.\n\nHere\u0027s the code with the main method test case.\n\n\npublic class CrossRefList {\n    private int _size \u003d 0;\n    private CrossRef _headNode;\n    private CrossRef _lastNode;\n    private Object _container;\n\n    protected class CrossRef {\n\n        protected CrossRef _far;\n        private CrossRef _next;\n        private CrossRef _previous;\n\n        private CrossRef() { this(null); }\n\n        private CrossRef(CrossRef spouse) {\n          super();\n        }\n        private synchronized Object _nearContainer() {\n            return _container;\n        }\n\n        private synchronized Object _farContainer() {\n            if (_far !\u003d null) return _far._nearContainer();\n            else return null;\n        }\n    }\n\n    public static void main(String[] args)\n    {\n     String container1 \u003d new String(\"hello world\");\n     CrossRefList crl \u003d new CrossRefList(container1);\n     CrossRef localCrossRef \u003d crl.new CrossRef();\n    }\n    public CrossRefList(Object container) {\n        _container \u003d container;\n    }\n\n    public synchronized Object first() {\n        if (_headNode !\u003d null) {\n            return _headNode._farContainer();\n        } else {\n            return null;\n        }\n    }\n    public synchronized void link(CrossRefList farList)\n    {\n        CrossRef localCrossRef \u003d new CrossRef();\n        if (farList !\u003d null) {\n           localCrossRef._far \u003d farList.new CrossRef(localCrossRef);\n        }\n    }\n}\n\n\n--mike\nmike.jones@cognitech-ut.com",
    "Bug found. The problem was in the collision check with existing methods/access \nmethods when about to add a new synthetic method. The check against access \nmethods was wrong (copy/paste mistake) and did not perform as it should have.\n\nFixed in latest. Will release the fix for 2.0.1 as well.",
    "Verified",
    "Verified.",
    "Verified in 2.1 M1"
  ],
  "commentCreationDates": [
    "2002-07-31T22:23:20+02:00",
    "2002-07-31T22:51:42+02:00",
    "2002-08-19T15:42:30+02:00",
    "2002-08-20T09:49:55+02:00",
    "2002-09-20T15:34:04+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassFormatError",
      "message": "CrossRefList$CrossRef (Repetitive method name/signature)",
      "elements": [
        {
          "method": "java.lang.ClassLoader.defineClass0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.ClassLoader.defineClass",
          "source": "ClassLoader.java:509"
        },
        {
          "method": "java.security.SecureClassLoader.defineClass",
          "source": "SecureClassLoader.java:123"
        },
        {
          "method": "java.net.URLClassLoader.defineClass",
          "source": "URLClassLoader.java:246"
        },
        {
          "method": "java.net.URLClassLoader.access$100",
          "source": "URLClassLoader.java:54"
        },
        {
          "method": "java.net.URLClassLoader$1.run",
          "source": "URLClassLoader.java:193"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "java.net.URLClassLoader.findClass",
          "source": "URLClassLoader.java:186"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:306"
        },
        {
          "method": "sun.misc.Launcher$AppClassLoader.loadClass",
          "source": "Launcher.java:265"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:262"
        },
        {
          "method": "java.lang.ClassLoader.loadClassInternal",
          "source": "ClassLoader.java:322"
        },
        {
          "method": "CrossRefList.main",
          "source": "CrossRefList.java:35"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "22093",
      "date": "2002-07-31T22:23:20+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "sun.tools.java.CompilerError",
      "message": "duplicate addition",
      "elements": [
        {
          "method": "sun.tools.java.MethodSet.add",
          "source": "MethodSet.java:85"
        },
        {
          "method": "sun.tools.java.ClassDefinition.collectInheritedMethods",
          "source": "ClassDefinition.java:1472"
        },
        {
          "method": "sun.tools.java.BinaryClass.basicCheck",
          "source": "BinaryClass.java:73"
        },
        {
          "method": "sun.tools.java.ClassDeclaration.getClassDefinition",
          "source": "ClassDeclaration.java:130"
        },
        {
          "method": "sun.tools.java.BinaryClass.initInnerClasses",
          "source": "BinaryClass.java:352"
        },
        {
          "method": "sun.tools.java.BinaryClass.loadNested",
          "source": "BinaryClass.java:221"
        },
        {
          "method": "sun.tools.javap.JavaPEnvironment.loadDefinition",
          "source": "JavaPEnvironment.java:221"
        },
        {
          "method": "sun.tools.java.ClassDeclaration.getClassDefinition",
          "source": "ClassDeclaration.java:120"
        },
        {
          "method": "sun.tools.java.Environment.getClassDefinition",
          "source": "Environment.java:123"
        },
        {
          "method": "sun.tools.javap.JavaP.displayResults",
          "source": "JavaP.java:193"
        },
        {
          "method": "sun.tools.javap.JavaP.perform",
          "source": "JavaP.java:212"
        },
        {
          "method": "sun.tools.javap.JavaP.entry",
          "source": "JavaP.java:233"
        },
        {
          "method": "sun.tools.javap.JavaP.main",
          "source": "JavaP.java:220"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "22093",
      "date": "2002-07-31T22:23:20+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    },
    {
      "exceptionType": "sun.tools.java.CompilerError",
      "message": "duplicate addition",
      "elements": [
        {
          "method": "sun.tools.java.MethodSet.add",
          "source": "MethodSet.java:85"
        },
        {
          "method": "sun.tools.java.ClassDefinition.collectInheritedMethods",
          "source": "ClassDefinition.java:1472"
        },
        {
          "method": "sun.tools.java.BinaryClass.basicCheck",
          "source": "BinaryClass.java:73"
        },
        {
          "method": "sun.tools.java.ClassDeclaration.getClassDefinition",
          "source": "ClassDeclaration.java:130"
        },
        {
          "method": "sun.tools.java.BinaryClass.initInnerClasses",
          "source": "BinaryClass.java:352"
        },
        {
          "method": "sun.tools.java.BinaryClass.loadNested",
          "source": "BinaryClass.java:221"
        },
        {
          "method": "sun.tools.javap.JavaPEnvironment.loadDefinition",
          "source": "JavaPEnvironment.java:221"
        },
        {
          "method": "sun.tools.java.ClassDeclaration.getClassDefinition",
          "source": "ClassDeclaration.java:120"
        },
        {
          "method": "sun.tools.java.Environment.getClassDefinition",
          "source": "Environment.java:123"
        },
        {
          "method": "sun.tools.java.Environment.getClassDefinition",
          "source": "Environment.java:84"
        },
        {
          "method": "sun.tools.javap.JavaP.displayResults",
          "source": "JavaP.java:193"
        },
        {
          "method": "sun.tools.javap.JavaP.perform",
          "source": "JavaP.java:212"
        },
        {
          "method": "sun.tools.javap.JavaP.entry",
          "source": "JavaP.java:233"
        },
        {
          "method": "sun.tools.javap.JavaP.main",
          "source": "JavaP.java:220"
        }
      ],
      "number": 2,
      "commentIndex": 0,
      "bugId": "22093",
      "date": "2002-07-31T22:23:20+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "22093",
  "bugId": "22093",
  "date": "2002-07-31T22:23:20+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}