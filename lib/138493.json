{
  "comments": [
    "build N20060425-0010 on Mac\n\n1) Fresh workspace\n2) Load some projects\n3) Change a java file\n4) Open Team Synchronizing perspective\n5) Synchronize workspace (third button in Synchronize view toolbar and then select \"Synchronize...\")\n6) Change the tree visualiztion mode (third button in Synchronize view toolbar) to \"Workspace\"\n7) The tree does not get filled and this exception is output to the .log file\n\nIt seems that someone is disposing an image that is still being used by a widget.\n\norg.eclipse.swt.SWTException: Graphic is disposed\nat org.eclipse.swt.SWT.error(SWT.java:3374)\nat org.eclipse.swt.SWT.error(SWT.java:3297)\nat org.eclipse.swt.SWT.error(SWT.java:3268)\nat org.eclipse.swt.graphics.Image.getBounds(Image.java:605)\nat org.eclipse.swt.widgets.Tree.drawItemProc(Tree.java:1019)\nat org.eclipse.swt.widgets.Display.drawItemProc(Display.java:1080)\nat org.eclipse.swt.internal.carbon.OS.CallNextEventHandler(Native Method)\nat org.eclipse.swt.widgets.Widget.callPaintEventHandler(Widget.java:167)\nat org.eclipse.swt.widgets.Tree.callPaintEventHandler(Tree.java:315)\nat org.eclipse.swt.widgets.Widget.kEventControlDraw(Widget.java:994)\nat org.eclipse.swt.widgets.Widget.controlProc(Widget.java:349)\nat org.eclipse.swt.widgets.Display.controlProc(Display.java:833)\nat org.eclipse.swt.internal.carbon.OS.ReceiveNextEvent(Native Method)\nat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2892)\nat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\nat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\nat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\nat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\nat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)\nat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\nat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\nat org.eclipse.core.launcher.Main.run(Main.java:977)\nat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "I still get this exception with I20060427-0800. After the exception, the workbemch is unusable. There are drawing problems in other areas (editors, etc).",
    "This happens on Motif I20060427-0800 too.",
    "I have reproduced the problem on Motif and will now debug it to find the culprit.",
    "This is a problem in the Common Navigator. It disposes of disabled content providers and then performs an asynchronous refresh of the viewer. A redraw is being processed in between the dispose and the refresh which is causing the exception. The solution is to perform the disposes and refresh together in the UI thread. I haven\u0027t been able to reach Michael (the Common Navigator guy) directly yet. I\u0027ll work on a solution and either run it by him (if I can contact him in the next few hours) or release it for 4 p.m. if I can\u0027t get a hold of him.",
    "Actually, I was off on my asessment of the cause (although I suspect that the Common Navigator code is still a potential for problems). My latest theory is that the lightweigh decorator mechanism in Eclipse is causing the old image to remain with the item after the refresh occurs (i.e. the decorators refrain from obtaining the new image if there is a background decorator so that the icon doesn\u0027t flash). \n\nI have verified that turnign off all decorators on Motif fixes the problem. Could you disable decorators on the Mac (General\u003eLabel Decoration preference page) and see if the problem goes away on the Mac.",
    "Sorry, the decorator preference page is found at General/appearance/Label Decorations.",
    "When I turn off the label decorations on Mac, the problem does not happen right away, but it happens if I select a java file and select \"Override and Update\".",
    "This seems to be due to a complicated interaction between the decorating label provider, the tree viewer and the common navigator framework. I believe that I am close to isolating the problem and will hopefully have a solution for today.",
    "Created an attachment (id\u003d39727)\nCommon Navigator patch\n\nHere\u0027s a patch to the Common Navigator that is part of a potential solution. However, it doesn\u0027t solve the problem entirely. However, it is probably a good idea for the CN to dispose of the content providers after doing the refresh anyway.",
    "I believe I have come up with a fix for this in Team. It turns out we were setting the viewer input before deactivating the content extensions. This was causing an item to be added to the tree by one content extension which then allowed another (one that was about to be disabled) to provide the label. By setting the input after we deactivate the content extension, the problem is avoided. Hopefully, this will do for RC2.\n\nHowever, there are still several other issues that contributed to this problem.\n\n1) One CN content extension (resources model) provided an element (a project) well another (change set model) provided the label (because they both know about IResource). When the viewer was refreshed, the resource model was still enabled and contributed the project but the change set model was deactivated so the element was still in the viewer but the label associated with it came from a different label provider that was about to be disposed.\n\n2) A refresh of a JFace tree viewer may not replace an image if the decorator doesn\u0027t have one ready. This is to avoid flashing (i.e a decorator disappears momentarily and then reappears). Unfortunately, this means that the image provided in point 1 does not get replaced during the refresh.\n\n3) The content extensions were disposed before the viewer was refreshed and the refresh happened asynchronously. The proper way to do this would be to disable the content extensions, refresh the viewer and then dispose of the disabled extensions. This is what the patch does but this doesn\u0027t fix the problem because of point 2 (i.e. the image is not replaced and then is susequently disposed).\n\n4) The Team label providers dispose of some overlayed images when they are disposed. These images may still be in the viewer due to point 2.\n\nHere is one possible fix that would work. The steps would go something like this:\n\na) CN deactivates content extensions.\nb) CN disposes content extensions and then refreshes the viewer in the same syncExec\nc) During the refresh, JFace tree viewer sees that some images are disposed and makes sure to repalce them\n\nThe problem is that it is not a good idea to dispose the content extensions first since you will definitely have disposed images (and possibly fonts and colors) in the viewer until the refresh completes. If the refresh is guaranteed to replace any disposed images, fonts or colors without throwing a disposed exception then this could work. However, this is currently not the case for the tree viewer and I don\u0027t know if it is acheiveable so this solution is probably not viable\n\nAnother solutions is for the CN to hold off on disposing content extensions when they are disabled. Unfortunately, this leads to other problems that would require API to work around so it is not viable at this point either.\n\nYet another possible solution would be for Team to hold off on disposing images until the viewer is disposed. This looks like the best solution at this time. I will investigate whether this is possible without adding API. If it is, that would solve the problem for Team but this could still be an issue for other CN clients (although it is probably less likely since, in general, content extensions would not dispose of images).",
    "One other things that is interesting. On Motif, the problem has no noticable side effects but on the Mac (according to Silenio) it is devistating. Would it be possible to make a change in the Mac code that would make the error less of a problem (i.e. it is good that it is logged but, other than that, I don;t see why it should have a bad effect).",
    "Created an attachment (id\u003d39771)\nPatch to Team\n\nI have attached a patch to Team that caches all images until the viewer is disposed. The workaround released for the RC2 candidate build seems to be OK so I won\u0027t ask for a rebuild of RC2 and will seek approval to get this into RC3.",
    "Released fix to RC2 rebuild",
    "Verified",
    "Changing OS from Mac OS to Mac OS X as per bug 185991"
  ],
  "commentCreationDates": [
    "2006-04-25T22:17:36+02:00",
    "2006-04-27T16:46:07+02:00",
    "2006-04-27T17:07:04+02:00",
    "2006-04-27T17:30:11+02:00",
    "2006-04-27T18:04:04+02:00",
    "2006-04-27T18:46:25+02:00",
    "2006-04-27T18:56:58+02:00",
    "2006-04-27T19:57:22+02:00",
    "2006-04-27T23:25:11+02:00",
    "2006-04-27T23:44:34+02:00",
    "2006-04-28T01:24:04+02:00",
    "2006-04-28T01:26:17+02:00",
    "2006-04-28T16:26:13+02:00",
    "2006-04-28T17:11:14+02:00",
    "2006-05-01T19:57:47+02:00",
    "2007-07-29T15:19:38+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Graphic is disposed",
      "elements": [
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3374"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3297"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3268"
        },
        {
          "method": "org.eclipse.swt.graphics.Image.getBounds",
          "source": "Image.java:605"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.drawItemProc",
          "source": "Tree.java:1019"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.drawItemProc",
          "source": "Display.java:1080"
        },
        {
          "method": "org.eclipse.swt.internal.carbon.OS.CallNextEventHandler",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.callPaintEventHandler",
          "source": "Widget.java:167"
        },
        {
          "method": "org.eclipse.swt.widgets.Tree.callPaintEventHandler",
          "source": "Tree.java:315"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.kEventControlDraw",
          "source": "Widget.java:994"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.controlProc",
          "source": "Widget.java:349"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.controlProc",
          "source": "Display.java:833"
        },
        {
          "method": "org.eclipse.swt.internal.carbon.OS.ReceiveNextEvent",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java:2892"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1914"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1878"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:143"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:95"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "138493",
      "date": "2006-04-25T22:17:36+02:00",
      "product": "Platform",
      "component": "Team",
      "severity": "major"
    }
  ],
  "groupId": "138493",
  "bugId": "138493",
  "date": "2006-04-25T22:17:36+02:00",
  "product": "Platform",
  "component": "Team",
  "severity": "major"
}