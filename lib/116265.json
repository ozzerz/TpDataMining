{
  "comments": [
    "I generated a model from the following XML schema, in which there is a type \nthat extends another abstract type. But when I try to load the example XML file \ngiven below, an IllegalArgumentException is thrown, because classifier ID is \nthe ID of the basic type. The given example is simplified. There could be \nmultiple extensions of the basic type.\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cxs:schema xmlns:xs\u003d\"http://www.w3.org/2001/XMLSchema\" \nelementFormDefault\u003d\"qualified\"\u003e\n\t\u003cxs:element name\u003d\"a\"\u003e\n\t\t\u003cxs:complexType\u003e\n\t\t\t\u003cxs:sequence\u003e\n\t\t\t\t\u003cxs:element name\u003d\"b\" type\u003d\"type\" minOccurs\u003d\"0\"/\u003e\n\t\t\t\u003c/xs:sequence\u003e\n\t\t\u003c/xs:complexType\u003e\n\t\u003c/xs:element\u003e\n\t\u003cxs:complexType name\u003d\"type\" abstract\u003d\"true\"/\u003e\n\t\u003cxs:complexType name\u003d\"type_ext\"\u003e\n\t\t\u003cxs:complexContent\u003e\n\t\t\t\u003cxs:extension base\u003d\"type\"\u003e\n\t\t\t\t\u003cxs:attribute name\u003d\"attr\" use\u003d\"required\" \ntype\u003d\"xs:string\"/\u003e\n\t\t\t\u003c/xs:extension\u003e\n\t\t\u003c/xs:complexContent\u003e\n\t\u003c/xs:complexType\u003e\n\u003c/xs:schema\u003e\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003ca\u003e\n  \u003cb attr\u003d\"3\"/\u003e\n\u003c/a\u003e\n\nint ATYPE \u003d 0;\nint DOCUMENT_ROOT \u003d 1;\nint TYPE \u003d 2;\nint TYPE_EXT \u003d 3;\n\npublic EObject create(EClass eClass) {\n  switch (eClass.getClassifierID()) {\n    case TestPackage.ATYPE: return createAType();\n    case TestPackage.DOCUMENT_ROOT: return createDocumentRoot();\n    case TestPackage.TYPE_EXT: return createTypeExt();\n    default:\n      throw new IllegalArgumentException(\"The class \u0027\" + eClass.getName() + \"\u0027 \nis not a valid classifier\");\n  }\n}\n\njava.lang.IllegalArgumentException: The class \u0027Type\u0027 is not a valid classifier\n\tat Test.impl.TestFactoryImpl.create(TestFactoryImpl.java:44)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.createObject\n(XMLHelperImpl.java:739)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFactory\n(XMLHandler.java:1371)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType\n(XMLHandler.java:1350)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject\n(XMLHandler.java:1245)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature\n(XMLHandler.java:1055)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement\n(XMLHandler.java:466)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement\n(XMLHandler.java:449)\n\tat org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement\n(SAXWrapper.java:73)\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java:1674)\n\tat org.apache.crimson.parser.Parser2.content(Parser2.java:1963)\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java:1691)\n\tat org.apache.crimson.parser.Parser2.parseInternal(Parser2.java:667)\n\tat org.apache.crimson.parser.Parser2.parse(Parser2.java:337)\n\tat org.apache.crimson.parser.XMLReaderImpl.parse(XMLReaderImpl.java:448)\n\tat javax.xml.parsers.SAXParser.parse(SAXParser.java:345)",
    "Ivo,\n\nYour instance document isn\u0027t valid.  You can\u0027t have a b element unless you\nspecify an xsi:type that specifies a type that isn\u0027t abstract.  I.e., this is a\nvalid instance:\n\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003ca xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n  \u003cb xsi:type\u003d\"type_ext\" attr\u003d\"3\"/\u003e\n\u003c/a\u003e\n"
  ],
  "commentCreationDates": [
    "2005-11-14T16:32:17+01:00",
    "2005-11-14T16:52:00+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "The class \u0027Type\u0027 is not a valid classifier",
      "elements": [
        {
          "method": "Test.impl.TestFactoryImpl.create",
          "source": "TestFactoryImpl.java:44"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHelperImpl.createObject",
          "source": "XMLHelperImpl.java:739"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFactory",
          "source": "XMLHandler.java:1371"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObjectFromFeatureType",
          "source": "XMLHandler.java:1350"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.createObject",
          "source": "XMLHandler.java:1245"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature",
          "source": "XMLHandler.java:1055"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement",
          "source": "XMLHandler.java:466"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement",
          "source": "XMLHandler.java:449"
        },
        {
          "method": "org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement",
          "source": "SAXWrapper.java:73"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.maybeElement",
          "source": "Parser2.java:1674"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.content",
          "source": "Parser2.java:1963"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.maybeElement",
          "source": "Parser2.java:1691"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.parseInternal",
          "source": "Parser2.java:667"
        },
        {
          "method": "org.apache.crimson.parser.Parser2.parse",
          "source": "Parser2.java:337"
        },
        {
          "method": "org.apache.crimson.parser.XMLReaderImpl.parse",
          "source": "XMLReaderImpl.java:448"
        },
        {
          "method": "javax.xml.parsers.SAXParser.parse",
          "source": "SAXParser.java:345"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "116265",
      "date": "2005-11-14T16:32:17+01:00",
      "product": "EMF",
      "component": "Tools",
      "severity": "normal"
    }
  ],
  "groupId": "116265",
  "bugId": "116265",
  "date": "2005-11-14T16:32:17+01:00",
  "product": "EMF",
  "component": "Tools",
  "severity": "normal"
}