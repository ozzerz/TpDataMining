{
  "comments": [
    "Build ID: Any 3.3 released version\n\nSteps To Reproduce:\nCVS info will be transferred internally on demand.\n\n1. Create an IES target with all required plugins\n2. Import RMP/RUML code\n3. Try to be productive in any way.\n\n\nMore information:\nThis defect appeared late in the 3.3 cycle, either in RC1 or RC2.",
    "Moving to JDT/Core for investigation.",
    "A good first step would be to turn on the build trace options from core.resources. That should give a rough idea of where the time is going - what builders are being called, how long they are taking to run and what triggered the build:\n\norg.eclipse.core.resources/debug\u003dtrue\n\n# Reports the cause of autobuild interruption\norg.eclipse.core.resources/build/interrupt\u003dtrue\n\n# Reports the start and end of all builder invocations\norg.eclipse.core.resources/build/invoking\u003dtrue\n\n# Reports the start and end of build delta calculations\norg.eclipse.core.resources/build/delta\u003dtrue\n\n# For incremental builds, displays which builder is being run\n# and because of changes in which project.\norg.eclipse.core.resources/build/needbuild\u003dtrue\n\nSee this FAQ for info on how to turn use tracing:\n\nhttp://wiki.eclipse.org/FAQ_How_do_I_use_the_platform_debug_tracing_facility%3F",
    "Kent, can you please investigate once Alex has attached the trace asked by John ?",
    "3.3RC1 was mid of May. Why is this defect reported so late?",
    "Don\u0027t get me started... how it could have consumed a man day or more per developer and not get logged before now is beyond me... all I can offer is a mea culpa and much weeping and gnashing of teeth.\n\nWorking on getting that trace going now.",
    "Talking with Wayne, their builds work fine on 3.3 and fail on 3.3.1\n\nNOT 3.3 RC1",
    "Not that it really matters now, but we were seeing this before GA...\n\nFirst documented date I have for the problem was June 25\n\nVery few people were using 3.3 builds dev environment prior to release.",
    "From one our (very frustrated) team leaders:\n\nThe defect is reported so late, because we had no way to prove that this is eclipse issue.\n\nI raised this issue with IES last month (cheng yee and folks), but had no time to prove that it is eclipse specific issue.",
    "Possibly unrelated, but this is spewing repeatedly on stderr as I sync to CVS... (and rebuild, and rebuild, and rebuild...)\n\nI should have titled this: On a clear day you can build forever.\n\njava.lang.Exception\n        at org.eclipse.core.internal.events.AutoBuildJob.interrupt(AutoBuildJob.java:187)\n        at org.eclipse.core.internal.events.BuildManager.interrupt(BuildManager.java:792)\n        at org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1742)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1792)\n        at org.eclipse.team.core.variants.PersistantResourceVariantByteStore.run(PersistantResourceVariantByteStore.java:171)\n        at org.eclipse.team.internal.core.subscribers.DescendantResourceVariantByteStore.run(DescendantResourceVariantByteStore.java:181)\n        at org.eclipse.team.core.variants.ResourceVariantTree.collectChanges(ResourceVariantTree.java:110)\n        at org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.collectChanges(CVSResourceVariantTree.java:87)\n        at org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:90)\n        at org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.refresh(CVSResourceVariantTree.java:334)\n        at org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:54)\n        at org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:162)\n        at org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:126)\n        at org.eclipse.team.core.subscribers.Subscriber.refresh(Subscriber.java:465)\n        at org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.refreshWithContentFetch(CVSWorkspaceSubscriber.java:434)\n        at org.eclipse.team.internal.ccvs.ui.mappings.WorkspaceSubscriberContext.refresh(WorkspaceSubscriberContext.java:305)\n        at org.eclipse.team.core.mapping.provider.SynchronizationContext.refresh(SynchronizationContext.java:109)\n        at org.eclipse.team.internal.ui.synchronize.RefreshModelParticipantJob.doRefresh(RefreshModelParticipantJob.java:68)\n        at org.eclipse.team.internal.ui.synchronize.RefreshParticipantJob.run(RefreshParticipantJob.java:309)\n        at org.eclipse.team.internal.ui.synchronize.RefreshModelParticipantJob.run(RefreshModelParticipantJob.java:116)\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",
    "My workaround has been to turn off autobuild and clean all before changing targets. I usually build a few projects and then turn on autobuild; things seem OK after that.",
    "\u003e My workaround has been to turn off autobuild and clean all before \n\u003e changing targets. I usually build a few projects and then turn on \n\u003e autobuild; things seem OK after that.\n\nTry creating a new plugin or changing an dependency in an existing one.\n\nBut make sure you have no sharp implements handy before you do.",
    "Created an attachment (id\u003d80786)\ntrace while running syncronize\n\nActions:\n\n - start workspace, in preferences \"build automatically\" is already enabled\n - launch target (no build occurs even though build before launch is enabled)\n - synchronize with CVS\n - exit workspace\n\nIn this time no workspace files changed.",
    "I suggest pinging PDE, it looks like their builders are taking the bulk of the time:\n\nBuilder finished: ManifestConsistencyChecker(com.ibm.xtools.emf.validation.core.tests) time: 58046ms\nBuilder finished: ManifestConsistencyChecker(com.ibm.xtools.uml.validation) time: 44117ms\nBuilder finished: ManifestConsistencyChecker(com.ibm.xtools.jet.dptk) time: 24346ms\nBuilder finished: ManifestConsistencyChecker(com.ibm.xtools.jet.ui) time: 18802ms\nBuilder finished: ManifestConsistencyChecker(com.ibm.xtools.modeler.ui.pde) time: 26080ms\nBuilder finished: ExtensionPointSchemaBuilder(com.ibm.xtools.jet.ui.resource) time: 43734ms\n",
    "So I count 67 \u0027Autobuild was interrupted\u0027 in Alex\u0027s trace.\n\nThe first project being built by the JavaBuilder is\n\nBuilder finished: JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart)\n\nIts built at:\n\n11:58:42 JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart) 3949ms\n12:06:45 JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart) 31ms\n12:11:42 JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart) 31ms\n12:15:42 JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart) 31ms\n12:20:08 JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart) 32ms\n12:25:16 JavaBuilder(com.ibm.xtools.modeler.ui.diagrams.statechart) 16ms\n12:27:07 ...\n10 more builds",
    "JohnA - Am I reading this correctly?\n\nFrom AutoBuildJob:\n\n private synchronized IStatus canceled() {\n  //regardless of the form of cancelation, the build state is not happy\n  buildNeeded \u003d true;\n  //schedule a rebuild immediately if build was implicitly canceled\n  if (interrupted) {\n   if (Policy.DEBUG_BUILD_INTERRUPT)\n    System.out.println(\"Scheduling rebuild due to interruption\");\n   setInterrupted(false);\n   schedule(computeScheduleDelay());\n  }\n  return Status.CANCEL_STATUS;\n }\n\nDoes this cause another build to run when interrupted\u003d\u003dtrue ?\n\nCause that\u0027s happening 67 times.\n\nAnd for some of the long build times from comment #13 , there is an \"Autobuild was interrupted\" close by which may explain the time.",
    "Some concern was voiced about the handful of projects with missing builders: \n  [ Invoking (FULL_BUILD) on builder: BuildManager$MissingBuilder ] \n\nI tried closing all those projects, and was then able to synch to CVS without a rebuild (which might simply be because I\u0027d already done that...) but after taking all the changes from CVS and allowing the normal build to complete, launching the target still triggers a cyclical build.\n\nFor Wayne\u0027s info, that eliminates com.ibm.xtools.uml.profile.tooling entirely.",
    "Is this related to bug 204475 ?",
    "I grabbed the latest 3.3 maintenance stream build (M20071017-0800) and the problem still exists.\n\nScenario tested: create a new plugin (that only depends on org.eclipse.ui etc.) and try to launch the target.\n\nResult: Build before launch is cyclical... we could ftp all the code to China and have it built there and have the binary returned before it will complete.\n\nHours of fun for the whole family.",
    "So I just want to double check that a 3.3 or 3.3.1 drop with NO added plugins causes the workspace to have these endless builds - correct?\n\nWe\u0027re absolutely positive that this problem is not caused by a listener from an additional plugin - correct?",
    "\u003e a 3.3 or 3.3.1 drop with NO added plugins causes the workspace \n\u003e to have these endless builds - correct?\n\u003e\n\u003e We\u0027re absolutely positive that this problem is not caused by a \n\u003e listener from an additional plugin - correct?\n\nThe behavior is reproducible on any 3.3 version of the SDK, no additional plugins are present in the development environment.",
    "I just checked the source of the stack traces I reported in comment #9 \n\nIt is related to the interrupted builds :\n\n\t/**\n\t * Another thread is attempting to modify the workspace. Flag the auto-build\n\t * as interrupted so that it will cancel and reschedule itself\n\t */\n\tsynchronized void interrupt() {\n\t\t//if already interrupted, do nothing\n\t\tif (interrupted)\n\t\t\treturn;\n\t\tswitch (getState()) {\n\t\t\tcase NONE :\n\t\t\t\treturn;\n\t\t\tcase WAITING :\n\t\t\t\t//put the job to sleep if it is waiting to run\n\t\t\t\tsetInterrupted(!sleep());\n\t\t\t\tbreak;\n\t\t\tcase RUNNING :\n\t\t\t\t//make sure autobuild doesn\u0027t interrupt itself\n\t\t\t\tif (Job.getJobManager().currentJob() \u003d\u003d this)\n\t\t\t\t\treturn;\n\t\t\t\tsetInterrupted(true);\n\t\t\t\tif (interrupted \u0026\u0026 Policy.DEBUG_BUILD_INTERRUPT) {\n\t\t\t\t\tSystem.out.println(\"Autobuild was interrupted:\"); //$NON-NLS-1$\n\t\t\t\t\tnew Exception().fillInStackTrace().printStackTrace();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\t//clear the autobuild avoidance flag if we were interrupted\n\t\tif (interrupted)\n\t\t\tavoidBuild \u003d false;\n\t}",
    "FYI:  This bug sounds very similar to:  https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d205888",
    "(In reply to comment #22)\n\u003e FYI:  This bug sounds very similar to: \n\u003e https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d205888\n\u003e \n\nI believe bug 205888 is an on going scalability problem.  It would be interesting to see if bug 205888 was a problem prior to 3.4RC1 when this bug started causing problems, but I don\u0027t think there will be much of a difference.  If I can reproduce it, we can try the fix for 205888 to see if it helps the problem.",
    "Would disabling the PDE problems be an acceptable workaround? \ni.e. in Preferences \u003e Plug-in Development \u003e Compilers, set the severities to Ignore.",
    "Is this the same problem as Bug 205888?",
    "The cycle is being caused by this code in WorkspacePluginModelManager.handleFileDelta:\n\n\t\t} else if (filename.endsWith(\".properties\")) {\t //$NON-NLS-1$\n\t\t\t// change in build.properties should trigger a Classpath Update\n\t\t\t// we therefore fire a notification\n\t\t\t//TODO this is inefficient.  we could do better.\n\t\t\t if (filename.equals(\"build.properties\")) { //$NON-NLS-1$\n\t\t\t\tObject model \u003d getModel(file.getProject());\n\t\t\t\tif (model !\u003d null)\n\t\t\t\t\taddChange(model, IModelProviderEvent.MODELS_CHANGED);\n\n\nThis triggers a PDE model change, which causes classpath computations and more builds to happen.  The build performs validation of build.properties files, adding markers for various warnings.  The marker change then triggers the above code again, triggering a plugin model change, ...\n\nThe most obvious fix is to only respond to resource deltas where the file CONTENT has changed (see IResourceDelta.getFlags()). This PDE model reconciliation shouldn\u0027t be triggered by a marker delta. Also, Alex mentioned this build cycle is triggered by CVS synchronization. This makes sense, because CVS synchronization updates sync info, which creates resource deltas with SYNC changes. Again, this kind of resource delta should be ignored by PDE.",
    "John gets curry on me next time.",
    "A simple workaround seems to be: turn off validation of build.properties files. Preferences \u003e Plugin development \u003e Compilers \u003e Problems in build.properties files, set to \"Ignore\".",
    "I confirm that the above workaround (comment #28) eliminates the cyclical build problem.\n\nAs John points out (comment #26), PDE now needs to handle the delta correctly.",
    "With John\u0027s comments in comment #26, the culprit is an inefficient resource listener.  Since this falls under the proposed changes in bug 205888, I am going to mark this a duplicated.  I will post the updated patches for the 3.3 and 3.4 streams to bug 205888 and get them checked in right away.\n\n*** This bug has been marked as a duplicate of bug 205888 ***"
  ],
  "commentCreationDates": [
    "2007-10-19T15:35:53+02:00",
    "2007-10-19T15:50:48+02:00",
    "2007-10-19T15:57:25+02:00",
    "2007-10-19T16:15:55+02:00",
    "2007-10-19T16:21:11+02:00",
    "2007-10-19T17:22:10+02:00",
    "2007-10-19T17:23:33+02:00",
    "2007-10-19T17:31:07+02:00",
    "2007-10-19T17:47:20+02:00",
    "2007-10-19T18:14:29+02:00",
    "2007-10-19T18:45:35+02:00",
    "2007-10-19T18:52:21+02:00",
    "2007-10-19T19:17:34+02:00",
    "2007-10-19T19:32:40+02:00",
    "2007-10-19T20:21:30+02:00",
    "2007-10-19T20:53:40+02:00",
    "2007-10-19T22:17:56+02:00",
    "2007-10-19T23:39:16+02:00",
    "2007-10-20T00:17:30+02:00",
    "2007-10-22T17:13:10+02:00",
    "2007-10-22T17:48:56+02:00",
    "2007-10-23T19:28:15+02:00",
    "2007-10-25T00:47:23+02:00",
    "2007-10-25T05:37:42+02:00",
    "2007-10-25T12:43:48+02:00",
    "2007-10-25T13:56:45+02:00",
    "2007-10-25T18:14:10+02:00",
    "2007-10-25T18:24:49+02:00",
    "2007-10-25T18:25:22+02:00",
    "2007-10-25T20:49:47+02:00",
    "2007-10-25T22:52:58+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.Exception",
      "elements": [
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.interrupt",
          "source": "AutoBuildJob.java:187"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.interrupt",
          "source": "BuildManager.java:792"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.prepareOperation",
          "source": "Workspace.java:1742"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1792"
        },
        {
          "method": "org.eclipse.team.core.variants.PersistantResourceVariantByteStore.run",
          "source": "PersistantResourceVariantByteStore.java:171"
        },
        {
          "method": "org.eclipse.team.internal.core.subscribers.DescendantResourceVariantByteStore.run",
          "source": "DescendantResourceVariantByteStore.java:181"
        },
        {
          "method": "org.eclipse.team.core.variants.ResourceVariantTree.collectChanges",
          "source": "ResourceVariantTree.java:110"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.collectChanges",
          "source": "CVSResourceVariantTree.java:87"
        },
        {
          "method": "org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh",
          "source": "AbstractResourceVariantTree.java:90"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.refresh",
          "source": "CVSResourceVariantTree.java:334"
        },
        {
          "method": "org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh",
          "source": "AbstractResourceVariantTree.java:54"
        },
        {
          "method": "org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh",
          "source": "ResourceVariantTreeSubscriber.java:162"
        },
        {
          "method": "org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh",
          "source": "ResourceVariantTreeSubscriber.java:126"
        },
        {
          "method": "org.eclipse.team.core.subscribers.Subscriber.refresh",
          "source": "Subscriber.java:465"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.core.CVSWorkspaceSubscriber.refreshWithContentFetch",
          "source": "CVSWorkspaceSubscriber.java:434"
        },
        {
          "method": "org.eclipse.team.internal.ccvs.ui.mappings.WorkspaceSubscriberContext.refresh",
          "source": "WorkspaceSubscriberContext.java:305"
        },
        {
          "method": "org.eclipse.team.core.mapping.provider.SynchronizationContext.refresh",
          "source": "SynchronizationContext.java:109"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.RefreshModelParticipantJob.doRefresh",
          "source": "RefreshModelParticipantJob.java:68"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.RefreshParticipantJob.run",
          "source": "RefreshParticipantJob.java:309"
        },
        {
          "method": "org.eclipse.team.internal.ui.synchronize.RefreshModelParticipantJob.run",
          "source": "RefreshModelParticipantJob.java:116"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 9,
      "bugId": "206887",
      "duplicateId": "205888",
      "date": "2007-10-19T18:14:29+02:00",
      "product": "PDE",
      "component": "UI",
      "severity": "blocker"
    }
  ],
  "groupId": "205888",
  "bugId": "206887",
  "duplicateId": "205888",
  "date": "2007-10-19T15:35:53+02:00",
  "product": "PDE",
  "component": "UI",
  "severity": "blocker"
}