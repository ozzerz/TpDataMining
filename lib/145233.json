{
  "comments": [
    "Eclipse Version: 3.2rc7\n\ni tried to include a minimal navigator in a rcp-application.\nthe navigator should simply show the workspace.\nif i start the runtime workspace with all plugins enabled\nthe navigator works as expected.\n\nfirst problem is, that initially the input of the viewer was null in the rcp case\n(i overrode the getInitialInput in my subclass of the common navigator, to deliver the WorkspaceRoot (which is not allowed as a understand the javadocs)). but the labelprovider in the rcp-case gets only called for the tooltip text of the view.\n\nhow can i show the content in my CommonNavigator.",
    "i forgot to mention that i use the \"default\" contentprovider org.eclipse.ui.internal.navigator.resources.workbench.ResourceExtensionContentProvider\n",
    "I can confirm this behavior. I have overridden WorkbenchAdvisor#getDefaultPageInput() to return the workspace root and it is definately there and not empty. I can create a new project (using the wizard) in the seemingly empty workspace, which appears as a tiny node in the tree, but has neither icon nor label. I can even click this node and delete the project again. I am just using the CommonNavigator in a way similar to the ProjectExplorer. The ProjectExplorer has the same erratic behavior if I try to open it as a view.",
    "Can you each provide your extension from your plugin.xml?",
    "Fragment from my plugin.xml. I can also reproduced the bug by trying to open the view with the id \"org.eclipse.ui.navigator.ProjectExplorer\" from the ui.navigator.resources plugin.\n\n\u003cextension point\u003d\"org.eclipse.ui.views\"\u003e\n\t\u003cview allowMultiple\u003d\"false\" category\u003d\"org.eclipse.ui\" class\u003d\"org.eclipse.ui.navigator.CommonNavigator\" icon\u003d\"MyIcon.jpg\" id\u003d\"MyCommonNavigatorID\" name\u003d\"Navigator\" /\u003e\n\u003c/extension\u003e\n\u003cextension point\u003d\"org.eclipse.ui.navigator.viewer\"\u003e\n\t\u003cviewer viewerId\u003d\"MyCommonNavigatorID\"\u003e\n\t\t\u003cpopupMenu allowsPlatformContributions\u003d\"true\" id\u003d\"MyCommonNavigatorID#PopupMenu\"\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.new\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.open\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.openWith\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.edit\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.reorganize\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.port\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.build\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.generate\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.search\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"additions\" separator\u003d\"true\" /\u003e\n\t\t\t\u003cinsertionPoint name\u003d\"group.properties\" separator\u003d\"true\" /\u003e\n\t\t\u003c/popupMenu\u003e\n\t\u003c/viewer\u003e\n\t\u003cviewerContentBinding viewerId\u003d\"MyCommonNavigatorID\"\u003e\n\t\t\u003cincludes\u003e\n\t\t\t\u003ccontentExtension pattern\u003d\"org.eclipse.ui.navigator.resourceContent\" /\u003e\n\t\t\u003c/includes\u003e\n\t\u003c/viewerContentBinding\u003e\n\t\u003cviewerActionBinding viewerId\u003d\"MyCommonNavigatorID\"\u003e\n\t\t\u003cincludes\u003e\n\t\t\t\u003cactionExtension pattern\u003d\"org.eclipse.ui.navigator.resources.*\" /\u003e\n\t\t\u003c/includes\u003e\n\t\u003c/viewerActionBinding\u003e\n\t\u003cdragAssistant class\u003d\"org.eclipse.ui.navigator.resources.ResourceDragAdapterAssistant\" viewerId\u003d\"MyCommonNavigatorID\" /\u003e\n\u003c/extension\u003e",
    "I just found out that I get the following exception if I try to create a new project in the \"ProjectExplorer\" with all plugins enabled, but NOT if I run with just the required plugins.\n\norg.eclipse.core.runtime.AssertionFailedException: null argument:\n\tat org.eclipse.core.runtime.Assert.isNotNull(Assert.java:84)\n\tat org.eclipse.core.runtime.Assert.isNotNull(Assert.java:72)\n\tat org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.\u003cinit\u003e(NavigatorContentExtension.java:87)\n\tat org.eclipse.ui.internal.navigator.NavigatorContentService.getExtension(NavigatorContentService.java:842)\n\tat org.eclipse.ui.internal.navigator.NavigatorContentService.getExtension(NavigatorContentService.java:812)\n\tat org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.findUpdateLabel(NavigatorContentServiceLabelProvider.java:330)\n\tat org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.updateLabel(NavigatorContentServiceLabelProvider.java:307)\n\tat org.eclipse.jface.viewers.DecoratingLabelProvider.updateLabel(DecoratingLabelProvider.java:345)\n\tat org.eclipse.jface.viewers.StructuredViewer.buildLabel(StructuredViewer.java:2077)\n\tat org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:252)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:95)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:843)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:149)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:840)\n\tat org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:465)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:843)\n\tat org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)\n\tat org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:149)\n\tat org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1955)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:744)\n\tat org.eclipse.ui.navigator.CommonViewer.createTreeItem(CommonViewer.java:116)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:722)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:696)\n\tat org.eclipse.jface.viewers.TreeViewer.createChildren(TreeViewer.java:892)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer$5.run(AbstractTreeViewer.java:1277)\n\tat org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1323)\n\tat org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:1266)\n\tat org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:250)\n\tat org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1542)\n\tat org.eclipse.ui.navigator.CommonNavigator.createPartControl(CommonNavigator.java:156)\n\tat org.eclipse.ui.internal.ViewReference.createPartHelper(ViewReference.java:332)\n\tat org.eclipse.ui.internal.ViewReference.createPart(ViewReference.java:197)\n\tat org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:566)\n\tat org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:290)\n\tat org.eclipse.ui.internal.ViewPane.setVisible(ViewPane.java:525)\n\tat org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:140)\n\tat org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268)\n\tat org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)\n\tat org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:394)\n\tat org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1144)\n\tat org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1097)\n\tat org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1311)\n\tat org.eclipse.ui.internal.PartStack.createControl(PartStack.java:601)\n\tat org.eclipse.ui.internal.PartStack.createControl(PartStack.java:532)\n\tat org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:562)\n\tat org.eclipse.ui.internal.PerspectiveHelper.activate(PerspectiveHelper.java:244)\n\tat org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:815)\n\tat org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:2429)\n\tat org.eclipse.ui.internal.WorkbenchWindow$6.run(WorkbenchWindow.java:2616)\n\tat org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)\n\tat org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:2597)\n\tat org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(WorkbenchWindow.java:658)\n\tat org.eclipse.ui.internal.Workbench.busyOpenWorkbenchWindow(Workbench.java:795)\n\tat org.eclipse.ui.internal.Workbench.doOpenFirstTimeWindow(Workbench.java:1437)\n\tat org.eclipse.ui.internal.Workbench.openFirstTimeWindow(Workbench.java:1388)\n\tat org.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow(WorkbenchConfigurer.java:190)\n\tat org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:708)\n\tat org.eclipse.ui.internal.Workbench.init(Workbench.java:1085)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1847)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\tat roborally.plugin.RoboRallyRunnable.run(RoboRallyRunnable.java:25)\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)",
    "I have the same behavior as Stefan has described it with 3.2 in my RCP application. My platform is Win2K.\n\nAre there any ideas already what might cause the problem?\n\nI tried the unmodified org.eclipse.ui.examples.navigator PlugIn and see the same problem.",
    "This can happen if the input of your page is not set. The input of your page is used as the input for the CN viewer. The IDE (i.e. Eclipse SDK) sets the input of all its pages to the workspace root (i.e. an instance of IWorkspaceRoot). In your RCP apps you will need to set the page input to an object that is appropriate to your application.",
    "i still have the problem of the empty navigator.\nim really positive, that the input is not null (because my label provider is called with the workspace root element.\nthe problem is that the label provider is only called to populate the tooltip of the navigator view.\n\ncould it be a problem that i use \norg.eclipse.ui.internal.navigator.resources.workbench.ResourceExtensionContentProvider as content provider?\n\nand if thats a problem, why does the rcp behave different from a start in a complete runtime-configuration with everything enabled?",
    "The problem was a duplicate call to getOverriddenDescriptor() at  NavigatorContentServiceLabelProvider.findUpdateLabel(NavigatorContentServiceLabelProvider.java:330)\n\nCould you check out org.eclipse.ui.navigator [branch: R3_2_maintenance -- note both underscores] and verify if this fixes your problem?",
    "the fix in the branch does not fix my empty viewer problem. perhaps it fixes the stacktrace from stefans comment?!",
    "Christian, does the \"Available Customizations\" dialog under the \"Available Extensions\" tab show your extension?",
    "(In reply to comment #9)\n\u003e The problem was a duplicate call to getOverriddenDescriptor() at \n\u003e NavigatorContentServiceLabelProvider.findUpdateLabel(NavigatorContentServiceLabelProvider.java:330)\n\u003e \n\u003e Could you check out org.eclipse.ui.navigator [branch: R3_2_maintenance -- note\n\u003e both underscores] and verify if this fixes your problem?\n\u003e \n\nThis has definately fixed the problem with the assertion error (stacktrace above). However, the project icons are still not shown.",
    "Stefan,\nare only the icons missing or the labels too (i miss everything in the viewer)?",
    "(In reply to comment #13)\n\u003e Stefan,\n\u003e are only the icons missing or the labels too (i miss everything in the viewer)?\n\u003e \n\nStill both the icons and the labels are missing. The icons come from the ide navigator and are marked as internal, right? I guess they need to be made public? The labels should be showing anyway, though.",
    "If your labels and icons aren\u0027t showing, ensure that your \u003c possibleChildren /\u003e expression is configured correctly, so that the framework knows to invoke your extension to provide the labels and icons.\n\nThe fact that the class you\u0027re using is internal should not affect the rendering of the icons. \n\nAre you sure that you have your \u003cviewerContentBinding /\u003es correct as well?",
    "I am posting code from the org.eclipse.ui.navigator.resources plugin now. The ProjectExplorer exposes the same behavior as my own adaptation of this example. There is no possibleChildren expression in the plugin.xml, though.\n\n       \u003cviewerContentBinding \n             viewerId\u003d\"org.eclipse.ui.navigator.ProjectExplorer\"\u003e\n          \u003cincludes\u003e\n       \t      \u003ccontentExtension pattern\u003d\"org.eclipse.ui.navigator.resourceContent\" /\u003e\t\t       \t      \n\t          \u003ccontentExtension pattern\u003d\"org.eclipse.ui.navigator.resources.filters.*\"/\u003e\n           \u003ccontentExtension pattern\u003d\"org.eclipse.ui.navigator.resources.linkHelper\"/\u003e\n          \u003c/includes\u003e\n       \u003c/viewerContentBinding\u003e\n\nHowever I think the problem is somewhere else.\n\nI am starting my own RCP application, so some adapters from the org.eclipse.ui.ide application (loaded using WorkbenchAdapterBuilder.registerAdapters() ) are not registered. Adding a call to this internal method in my WorkbenchAdvisor solves the label issue. In the same place the project icons are registered, so they are not generally available.\nAs I am not building on the ide application, but creating my own RCP application, I need a different solution.\n\nThank you for your attention, Michael.",
    "Is there any 3.2.1 work to do here? If not please remove the milestone.",
    "\nI do not think that a fix will be ready for 3.2.1.\n\nThe primary issue here is that it is not obvious for RCP clients to provide a default page input. I would have liked to expose some new functionality in the extension point to allow a client to specify some sort of InputProvider for the viewer. I do not think that this change would be approved for 3.2.1, since it\u0027s not critical, even though it would make the framework easier for new individuals to get started. ",
    "Hi,\n\nI\u0027m having the same kind of troubles as decribed here on my RCP app.\nI\u0027ve overridden getInitialInput(), added the required extension and wrote the needed ContentProvider and LabelProvider.\nWhat I saw by debugging the app. startup is that getDefaultPageInput() was only called when the workspace data folder is empty. Then my content provider getElements() method is called with input argument equals to what getInitialInput returned. This seems normal, and everything works fine, the navigator displays the correct content.\nNow, if I run again the same app. without cleaning the workspace, getDefaultPageInput() is not called anymore; also ContentProvider.getElements() is called but the inputElement is null; nevertheless, my getElements() returns a non-null array, nothing is displayed in the navigator.\n\nHope this help ...",
    "\nNicolas, \n\nIs your default input an instance or adaptable to org.eclipse.ui.IPersistableElement ? ",
    "I tried both codes:\n\n@Override\npublic IAdaptable getDefaultPageInput()\n{\n\tIWorkspaceRoot root \u003d ResourcesPlugin.getWorkspace().getRoot();\n\treturn root;\n}\n\n@Override\npublic IAdaptable getDefaultPageInput()\n{\n\tIAdaptable root \u003d new NavigatorRoot(); \n\treturn root;\n}\n\nwith Navigator root a dummy class:\npublic class NavigatorRoot implements IAdaptable\n{\n\n\tpublic Object getAdapter(Class adapter)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}\n}\n\nIn both cases I\u0027ve got the problem i described.\n\n\nPS: \nI\u0027m running Eclipse 3.2 on Windows XP.\nJVM 1.5.0_07.",
    "Hi,\n\nI finally managed to make my code work; As you recommanded I made my input instance IPersistableElement, implemented the requested methods, and all works fine since (more details here : http://www.eclipse.org/newsportal/article.php?id\u003d15863\u0026group\u003declipse.platform.rcp#15863).\n\nNote that with this code :\n@Override\npublic IAdaptable getDefaultPageInput()\n{\n        IWorkspaceRoot root \u003d ResourcesPlugin.getWorkspace().getRoot();\n        return root;\n}\n\nI get into the log : \n\neclipse.buildId\u003dunknown\njava.version\u003d1.5.0_07\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dfr_FR\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.ui 4 4 2006-08-23 11:27:04.845\n!MESSAGE Unable to save page input: R/, because it does not adapt to IPersistableElement\n\nthis makes me think that ResourcesPlugin.getWorkspace().getRoot() returns something not IPersistableElement...",
    "After struggle with this bug for a day. I think i have found a solution.\nhope this helps.\n\n1. if your custom ApplicationWorkbenchAdvisor:\n\n\tpublic void initialize(IWorkbenchConfigurer configurer) {\n        configurer.setSaveAndRestore(true); \n        declareWorkbenchImages();\n\t}\n\t\n\t@Override\n\tpublic IAdaptable getDefaultPageInput() {\n\t\treturn new NavigatorRoot(); \n\t}\n\t\n\tpublic void preStartup() {\n\t\tWorkbenchAdapterBuilder.registerAdapters();\n\t}  \n         \n        //declareWorkbenchImages() is copied from org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor\n        \n2. create a NavigatorRoot class.\n \npublic class NavigatorRoot implements IAdaptable, IPersistableElement,\n\t\tIElementFactory {\n\tpublic NavigatorRoot() {\n\t}\n\n\tpublic Object getAdapter(Class adapter) {\n\t\tif (adapter \u003d\u003d IPersistableElement.class)\n\t\t\treturn this;\n\t\tif (adapter \u003d\u003d IWorkbenchAdapter.class)\n    \t\treturn ResourcesPlugin.getWorkspace().getRoot().getAdapter(adapter); \n\t\treturn null;\n\t}\n\n\tpublic String getFactoryId() {\n\t\treturn this.getClass().getCanonicalName();\n\t}\n\n\tpublic void saveState(IMemento memento) {\n\t\t// TODO Auto-generated method stub\n\t\treturn;\n\t}\n\n\tpublic IAdaptable createElement(IMemento memento) {\n\t\treturn ResourcesPlugin.getWorkspace().getRoot();\n\t}\n}\n\n3. in plugin.xml\n\t\u003cextension point\u003d\"org.eclipse.ui.views\"\u003e\n\t\t\u003cview name\u003d\"My Custom View\" icon\u003d\"icons/add.gif\"\n\t\t\tclass\u003d\"org.eclipse.ui.navigator.CommonNavigator\"\n\t\t\tid\u003d\"org.eclipse.ui.navigator.mycustom\"\u003e\n\t\t\u003c/view\u003e\n\t\u003c/extension\u003e\n\n\t\u003cextension point\u003d\"org.eclipse.ui.navigator.viewer\"\u003e\n\t\t\u003cviewer viewerId\u003d\"org.eclipse.ui.navigator.mycustom\" /\u003e\n\n\t\t\u003cviewerContentBinding\n\t\t\tviewerId\u003d\"org.eclipse.ui.navigator.mycustom\"\u003e\n\t\t\t\u003cincludes\u003e\n\t\t\t\t\u003ccontentExtension\n          isRoot\u003d\"true\"\n          pattern\u003d\"org.eclipse.ui.navigator.resourceContent\"/\u003e\n\t\t\t\t\u003ccontentExtension\n\t\t\t\t\tpattern\u003d\"org.eclipse.ui.navigator.resource.filter.*\" /\u003e\n\t\t\t\u003c/includes\u003e\n\t\t\t\u003cexcludes\u003e\n\t\t\t\t\u003ccontentExtension\n\t\t\t\t\tpattern\u003d\"org.eclipse.ui.navigator.tests.*\" /\u003e\n\t\t\t\u003c/excludes\u003e\n\t\t\u003c/viewerContentBinding\u003e\n\t\t\u003cviewerActionBinding\n\t\t\tviewerId\u003d\"org.eclipse.ui.navigator.mycustom\"\u003e\n\t\t\t\u003cincludes\u003e\n\t\t\t\t\u003cactionExtension\n\t\t\t\t\tpattern\u003d\"org.eclipse.ui.navigator.resource.*\" /\u003e\n\t\t\t\u003c/includes\u003e\n\t\t\u003c/viewerActionBinding\u003e\n\t\u003c/extension\u003e \n\n4. in MANIFEST.MF\nRequire-Bundle: org.eclipse.ui,\n org.eclipse.core.runtime,\n org.eclipse.ui.navigator,\n org.eclipse.core.resources,\n org.eclipse.ui.navigator.resources,\n org.eclipse.ui.ide\n\nAfter that I got a well functional simple resource view based on Common Navigator in rcp-application.\n\n(In reply to comment #0)\n\u003e Eclipse Version: 3.2rc7\n\u003e \n\u003e i tried to include a minimal navigator in a rcp-application.\n\u003e the navigator should simply show the workspace.\n\u003e if i start the runtime workspace with all plugins enabled\n\u003e the navigator works as expected.\n\u003e \n\u003e first problem is, that initially the input of the viewer was null in the rcp\n\u003e case\n\u003e (i overrode the getInitialInput in my subclass of the common navigator, to\n\u003e deliver the WorkspaceRoot (which is not allowed as a understand the javadocs)).\n\u003e but the labelprovider in the rcp-case gets only called for the tooltip text of\n\u003e the view.\n\u003e \n\u003e how can i show the content in my CommonNavigator.\n\u003e \n\n",
    "Hello Michael,\n\nare there any ongoing activities for improving CNF usability for RCP apps for 3.3? More specifically, are there any plans (or could there be) on splitting ResourceViewer from org.eclipse.ui.ide?",
    "I\u0027m trying to follow the steps described in #23 in Eclipse 3.3. The navigator does not show any content and the logfile has this error:\n\n!ENTRY org.eclipse.ui 4 4 2006-11-29 22:15:44.016\n!MESSAGE Unable to find element factory: testrcp2.NavigatorRoot\n\n!ENTRY org.eclipse.ui 4 4 2006-11-29 22:15:44.016\n!MESSAGE Unable to restore page - cannot instantiate input factory: testrcp2.NavigatorRoot\n\nThe WorkbenchAdvisor contains:\n\npublic void preStartup()\n{\n\tWorkbenchAdapterBuilder.registerAdapters();\n}\n\nAny ideas?\n\nThanks,\nAndi",
    "This happens when starting the application the second time only, together with an \"Unable to restore perspective\" error.",
    "Regarding comment #25 the solution is (according to usenet posting by Alex Levato) to use the extensionFactories extension. Set class to NavigatorRoot and use id identical to class name.",
    "Type- extension point is org.eclipse.ui.elementFactories",
    "Michael, all,\n\nis this bug going anywhere? I\u0027ve had a number of users experiencing RCP issues- you can find the details at http://www.cpuidle.de/blog/?p\u003d48. I believe CNF is not entirely ready yet for RCP apps- any intentions to work on this?\n\nCheers,\nAndi",
    "For 3.3, there will not be any improvements in this space. \n\nThere are improvements planned for 3.4 though. Hopefully these will address many of the RCP concerns.",
    "Changing OS from Mac OS to Mac OS X as per bug 185991",
    "Regarding comment 31 - this went wrong?"
  ],
  "commentCreationDates": [
    "2006-06-04T14:29:52+02:00",
    "2006-06-04T14:37:22+02:00",
    "2006-06-14T23:39:55+02:00",
    "2006-06-14T23:45:04+02:00",
    "2006-06-15T00:40:59+02:00",
    "2006-06-15T00:51:23+02:00",
    "2006-07-11T12:01:58+02:00",
    "2006-07-11T18:45:36+02:00",
    "2006-07-12T22:38:45+02:00",
    "2006-07-13T16:35:08+02:00",
    "2006-07-13T22:56:25+02:00",
    "2006-07-13T23:01:16+02:00",
    "2006-07-14T11:09:48+02:00",
    "2006-07-14T11:32:17+02:00",
    "2006-07-14T12:04:47+02:00",
    "2006-07-14T15:18:07+02:00",
    "2006-07-26T08:19:42+02:00",
    "2006-08-16T18:49:23+02:00",
    "2006-08-17T15:38:44+02:00",
    "2006-08-21T21:08:03+02:00",
    "2006-08-21T21:15:44+02:00",
    "2006-08-21T21:20:01+02:00",
    "2006-08-23T13:59:28+02:00",
    "2006-11-10T13:58:53+01:00",
    "2006-11-29T17:56:30+01:00",
    "2006-11-29T21:22:41+01:00",
    "2006-11-29T21:39:32+01:00",
    "2006-11-29T22:02:36+01:00",
    "2006-11-30T08:13:48+01:00",
    "2007-05-13T13:30:37+02:00",
    "2007-05-21T16:08:52+02:00",
    "2007-07-29T15:20:10+02:00",
    "2007-09-10T18:50:49+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.core.runtime.AssertionFailedException",
      "message": "null argument:",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.Assert.isNotNull",
          "source": "Assert.java:84"
        },
        {
          "method": "org.eclipse.core.runtime.Assert.isNotNull",
          "source": "Assert.java:72"
        },
        {
          "method": "org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.\u003cinit\u003e",
          "source": "NavigatorContentExtension.java:87"
        },
        {
          "method": "org.eclipse.ui.internal.navigator.NavigatorContentService.getExtension",
          "source": "NavigatorContentService.java:842"
        },
        {
          "method": "org.eclipse.ui.internal.navigator.NavigatorContentService.getExtension",
          "source": "NavigatorContentService.java:812"
        },
        {
          "method": "org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.findUpdateLabel",
          "source": "NavigatorContentServiceLabelProvider.java:330"
        },
        {
          "method": "org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.updateLabel",
          "source": "NavigatorContentServiceLabelProvider.java:307"
        },
        {
          "method": "org.eclipse.jface.viewers.DecoratingLabelProvider.updateLabel",
          "source": "DecoratingLabelProvider.java:345"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.buildLabel",
          "source": "StructuredViewer.java:2077"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.doUpdateItem",
          "source": "TreeViewer.java:252"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run",
          "source": "AbstractTreeViewer.java:95"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:843"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:44"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:149"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem",
          "source": "AbstractTreeViewer.java:840"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run",
          "source": "StructuredViewer.java:465"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:843"
        },
        {
          "method": "org.eclipse.ui.internal.JFaceUtil$1.run",
          "source": "JFaceUtil.java:44"
        },
        {
          "method": "org.eclipse.jface.util.SafeRunnable.run",
          "source": "SafeRunnable.java:149"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.updateItem",
          "source": "StructuredViewer.java:1955"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem",
          "source": "AbstractTreeViewer.java:744"
        },
        {
          "method": "org.eclipse.ui.navigator.CommonViewer.createTreeItem",
          "source": "CommonViewer.java:116"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$1.run",
          "source": "AbstractTreeViewer.java:722"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.createChildren",
          "source": "AbstractTreeViewer.java:696"
        },
        {
          "method": "org.eclipse.jface.viewers.TreeViewer.createChildren",
          "source": "TreeViewer.java:892"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer$5.run",
          "source": "AbstractTreeViewer.java:1277"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.preservingSelection",
          "source": "StructuredViewer.java:1323"
        },
        {
          "method": "org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged",
          "source": "AbstractTreeViewer.java:1266"
        },
        {
          "method": "org.eclipse.jface.viewers.ContentViewer.setInput",
          "source": "ContentViewer.java:250"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.setInput",
          "source": "StructuredViewer.java:1542"
        },
        {
          "method": "org.eclipse.ui.navigator.CommonNavigator.createPartControl",
          "source": "CommonNavigator.java:156"
        },
        {
          "method": "org.eclipse.ui.internal.ViewReference.createPartHelper",
          "source": "ViewReference.java:332"
        },
        {
          "method": "org.eclipse.ui.internal.ViewReference.createPart",
          "source": "ViewReference.java:197"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPartReference.getPart",
          "source": "WorkbenchPartReference.java:566"
        },
        {
          "method": "org.eclipse.ui.internal.PartPane.setVisible",
          "source": "PartPane.java:290"
        },
        {
          "method": "org.eclipse.ui.internal.ViewPane.setVisible",
          "source": "ViewPane.java:525"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PresentablePart.setVisible",
          "source": "PresentablePart.java:140"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select",
          "source": "PresentablePartFolder.java:268"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select",
          "source": "LeftToRightTabOrder.java:65"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart",
          "source": "TabbedStackPresentation.java:394"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.refreshPresentationSelection",
          "source": "PartStack.java:1144"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.setSelection",
          "source": "PartStack.java:1097"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.showPart",
          "source": "PartStack.java:1311"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.createControl",
          "source": "PartStack.java:601"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.createControl",
          "source": "PartStack.java:532"
        },
        {
          "method": "org.eclipse.ui.internal.PartSashContainer.createControl",
          "source": "PartSashContainer.java:562"
        },
        {
          "method": "org.eclipse.ui.internal.PerspectiveHelper.activate",
          "source": "PerspectiveHelper.java:244"
        },
        {
          "method": "org.eclipse.ui.internal.Perspective.onActivate",
          "source": "Perspective.java:815"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchPage.onActivate",
          "source": "WorkbenchPage.java:2429"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow$6.run",
          "source": "WorkbenchWindow.java:2616"
        },
        {
          "method": "org.eclipse.swt.custom.BusyIndicator.showWhile",
          "source": "BusyIndicator.java:67"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.setActivePage",
          "source": "WorkbenchWindow.java:2597"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage",
          "source": "WorkbenchWindow.java:658"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.busyOpenWorkbenchWindow",
          "source": "Workbench.java:795"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.doOpenFirstTimeWindow",
          "source": "Workbench.java:1437"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.openFirstTimeWindow",
          "source": "Workbench.java:1388"
        },
        {
          "method": "org.eclipse.ui.internal.WorkbenchConfigurer.openFirstTimeWindow",
          "source": "WorkbenchConfigurer.java:190"
        },
        {
          "method": "org.eclipse.ui.application.WorkbenchAdvisor.openWindows",
          "source": "WorkbenchAdvisor.java:708"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.init",
          "source": "Workbench.java:1085"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1847"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:419"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:149"
        },
        {
          "method": "roborally.plugin.RoboRallyRunnable.run",
          "source": "RoboRallyRunnable.java:25"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:78"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication",
          "source": "EclipseAppLauncher.java:92"
        },
        {
          "method": "org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start",
          "source": "EclipseAppLauncher.java:68"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:400"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:177"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:39"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:25"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:585"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:336"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:280"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:977"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:952"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "145233",
      "date": "2006-06-15T00:51:23+02:00",
      "product": "Platform",
      "component": "UI",
      "severity": "normal"
    }
  ],
  "groupId": "145233",
  "bugId": "145233",
  "date": "2006-06-04T14:29:52+02:00",
  "product": "Platform",
  "component": "UI",
  "severity": "normal"
}