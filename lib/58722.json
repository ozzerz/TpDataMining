{
  "comments": [
    "its not possible to extend generic interfaces:\n\n\npublic interface A\u003cT\u003e\n{\n}\n\npublic interface B\u003cT\u003e extends A\u003cT\u003e\n{\n}\n\n fails with\n\n\n\nInternal compiler error\njava.lang.ArrayIndexOutOfBoundsException: 22\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(LookupEnvironment.java:651)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:192)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:314)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:297)\n\n\tat org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:191)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:107)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:173)\n\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(Scope.java:1602)\n\n\tat org.eclipse.jdt.internal.compiler.lookup.Scope.getType(Scope.java:1395)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(ParameterizedSingleTypeReference.java:62)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ParameterizedSingleTypeReference.java:153)\n\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(TypeReference.java:93)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(ClassScope.java:882)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces(ClassScope.java:665)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy(ClassScope.java:719)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy(CompilationUnitScope.java:236)\n\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(LookupEnvironment.java:177)\n\n\tat org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:305)\n\n\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:319)\n\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:209)\n\n\tat\norg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:159)\n\n\tat\norg.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:113)\n\n\tat\norg.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:223)\n\n\tat org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:151)\n\n\tat org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:512)\n\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)\n\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:543)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:140)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:227)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:169)\n\n\tat org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:197)\n\n\tat\norg.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:611)\n\n\tat org.eclipse.core.runtime.Platform.run(Platform.java:543)\n\n\tat org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:200)\n\n\tat\norg.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:245)\n\n\tat org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:273)\n\n\tat org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:141)\n\n\tat org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:177)\n\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",
    "If i change A to \n\nimport java.util.Collection;\n\npublic interface A\u003cT\u003e extends Collection\u003cT\u003e {\n}\n\n\nI do not get an exception.\n",
    "It works fine now. You were likely using Cheetah01, weren\u0027t you ?",
    "No im using latest drop cheetah02.\n    id \u003d \"org.eclipse.jdt.core\"\n    version \u003d \"3.0.0.cheetah02\"\n\n\nbut it is actually only every second time I save a file I get the exception. \nUsing the above example:\n\nsave B -\u003e no problem\nsave B again -\u003e ArrayIndexOfBound\nsave B again-\u003e no problem\nsave B again -\u003e ArrayIndexOfBound\n............(no modfications just adding a space)\n\n\nanother problem with B is that the compiler complains about \n\"The type A is not generic; it cannot be parameterized with arguments T\"\n(while underlining A in B,  interface B\u003cT\u003e extends _A_\u003cT\u003e { ...\nthis happens no matter if I extend Collection from A or not.",
    "Tried cheetah_03 and its *still* an issue.\n\nNotice that i\u0027ve only experienced problems with interfaces.\n\nHere are some usecase that work\n------\npublic class A\u003cT\u003e { }\npublic class B\u003cT\u003e extends A\u003cT\u003e{}\n-----\n//for some there arent any problem if they are declared in the same file\npublic class F {\t\n\tpublic static class B\u003cT\u003e{}\n\tpublic interface C\u003cT\u003e{}\n\tpublic static class D\u003cT\u003e extends B\u003cT\u003e{}\n\tpublic static class E\u003cT\u003e implements C\u003cT\u003e{}\n}\n-----------\n\nHere are two that only compiles occasionally\n-----\npublic interface C\u003cT\u003e {}\npublic class E\u003cT\u003e implements C\u003cT\u003e {}\n-----\npublic interface C\u003cT\u003e {}\npublic interface D\u003cT\u003e extends C\u003cT\u003e {}\n------",
    "One more update:)\n\npublic interface A {}\npublic interface B extends A {}\n\nworks, but\npublic interface A\u003cT\u003e {}\npublic interface B extends A {}\n\ndoesn\u0027t",
    "These problems only show up when reconciling editor changes. These never occur \nwhen building. Problem comes from the fact that the source element converter \ndoesn\u0027t recreate type variables (yet).",
    "BTW, with Cheetah03, I did not get any exception. Simply unexpected compile \nerrors about a type not being generic.",
    "*** Bug 62806 has been marked as a duplicate of this bug. ***",
    "Added basic support to JavaModel to surface type parameters in type \ndeclarations; so as to get reconcile operations happy again.\n\nThis isn\u0027t the final take on this front, need to switch to using signatures \ninstead of type names in SourceTypeConverter, plus generalize the solution to \nother ISourceElementRequestor implementations; also need to support \nconstructor/method type parameters.",
    "Will still close this one defect as the released basic support covers these \nvery issues."
  ],
  "commentCreationDates": [
    "2004-04-15T21:10:12+02:00",
    "2004-04-15T21:13:15+02:00",
    "2004-04-16T00:57:13+02:00",
    "2004-04-16T10:50:19+02:00",
    "2004-04-16T20:31:30+02:00",
    "2004-04-16T20:45:47+02:00",
    "2004-04-19T12:04:40+02:00",
    "2004-04-19T12:09:33+02:00",
    "2004-05-21T21:51:59+02:00",
    "2004-05-22T14:24:13+02:00",
    "2004-05-22T14:25:04+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ArrayIndexOutOfBoundsException",
      "message": "22",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature",
          "source": "LookupEnvironment.java:651"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom",
          "source": "BinaryTypeBinding.java:192"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom",
          "source": "LookupEnvironment.java:297"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.accept",
          "source": "Compiler.java:191"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType",
          "source": "LookupEnvironment.java:107"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage",
          "source": "PackageBinding.java:173"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage",
          "source": "Scope.java:1602"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.Scope.getType",
          "source": "Scope.java:1395"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType",
          "source": "ParameterizedSingleTypeReference.java:62"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType",
          "source": "ParameterizedSingleTypeReference.java:153"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType",
          "source": "TypeReference.java:93"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:882"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperInterfaces",
          "source": "ClassScope.java:665"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:719"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:236"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:177"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.beginToCompile",
          "source": "Compiler.java:305"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.Compiler.compile",
          "source": "Compiler.java:319"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:209"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile",
          "source": "AbstractImageBuilder.java:159"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build",
          "source": "IncrementalImageBuilder.java:113"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas",
          "source": "JavaBuilder.java:223"
        },
        {
          "method": "org.eclipse.jdt.internal.core.builder.JavaBuilder.build",
          "source": "JavaBuilder.java:151"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$2.run",
          "source": "BuildManager.java:512"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:611"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:543"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:140"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:227"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:169"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager$1.run",
          "source": "BuildManager.java:197"
        },
        {
          "method": "org.eclipse.core.internal.runtime.InternalPlatform.run",
          "source": "InternalPlatform.java:611"
        },
        {
          "method": "org.eclipse.core.runtime.Platform.run",
          "source": "Platform.java:543"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuild",
          "source": "BuildManager.java:200"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.basicBuildLoop",
          "source": "BuildManager.java:245"
        },
        {
          "method": "org.eclipse.core.internal.events.BuildManager.build",
          "source": "BuildManager.java:273"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.doBuild",
          "source": "AutoBuildJob.java:141"
        },
        {
          "method": "org.eclipse.core.internal.events.AutoBuildJob.run",
          "source": "AutoBuildJob.java:177"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:62"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "58722",
      "date": "2004-04-15T21:10:12+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "58722",
  "bugId": "58722",
  "date": "2004-04-15T21:10:12+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}