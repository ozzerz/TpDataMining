{
  "comments": [
    "If the MANIFEST.MF file for a module project contains an invalid header field (e.g. remove the \":\" from after \"Class-Path\"), you will get the following logged to the console:\n\n*** ERROR ***: Tue May 29 13:16:48 EDT 2007    java.io.IOException: invalid header field\n    \tat java.util.jar.Attributes.read(Attributes.java:389)\n    \tat java.util.jar.Manifest.read(Manifest.java:167)\n    \tat java.util.jar.Manifest.\u003cinit\u003e(Manifest.java:52)\n    \tat org.eclipse.jst.j2ee.commonarchivecore.internal.helpers.ArchiveManifestImpl.\u003cinit\u003e(ArchiveManifestImpl.java:46)\n    \tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getManifestClasspath(J2EEModuleVirtualComponent.java:134)\n    \tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getManifestReferences(J2EEModuleVirtualComponent.java:244)\n    \tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences(J2EEModuleVirtualComponent.java:86)\n    \tat org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences(J2EEModuleVirtualComponent.java:79)\n    \tat org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.getDependencyReferences(DependencyGraphManager.java:194)\n    \tat org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.buildDependencyGraph(DependencyGraphManager.java:170)\n    \tat org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.constructIfNecessary(DependencyGraphManager.java:76)\n    \tat org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.getDependencyGraph(DependencyGraphManager.java:245)\n    \tat org.eclipse.wst.common.componentcore.internal.resources.VirtualComponent.getReferencingComponents(VirtualComponent.java:418)\n    \tat org.eclipse.jst.j2ee.internal.project.J2EEProjectUtilities.getReferencingEARProjects(J2EEProjectUtilities.java:646)\n    \tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob.processModules(J2EEComponentClasspathUpdater.java:260)\n    \tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob.access$1(J2EEComponentClasspathUpdater.java:252)\n    \tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob$1.run(J2EEComponentClasspathUpdater.java:284)\n    \tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)\n    \tat org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob.run(J2EEComponentClasspathUpdater.java:276)\n    \tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\n\nThis IOException is being caught and logged and a null Manifest classpath array is returned (which causes the reference computation logic to just silently ignore these manifest cp-based references).\n\nCouple of issues:\n\n-This type of issue should generate an error problem marker on the project (via a validator) so that users are notified and can correct the issue. \n\n-If a problem maker is created for this, logging can likely be skipped. If logging is performed, it should go to the .log file rather than the console (looks like the org.elipse.jem.util.logger.proxy.Logger is using the ConsoleLogRenderer in this case)",
    "Sounds like great suggestions  :)   Can you look into generating a problem marker?\n\nMight need to be post 2.0 change"
  ],
  "commentCreationDates": [
    "2007-05-29T19:32:36+02:00",
    "2007-05-30T23:30:12+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.io.IOException",
      "message": "invalid header field",
      "elements": [
        {
          "method": "java.util.jar.Attributes.read",
          "source": "Attributes.java:389"
        },
        {
          "method": "java.util.jar.Manifest.read",
          "source": "Manifest.java:167"
        },
        {
          "method": "java.util.jar.Manifest.\u003cinit\u003e",
          "source": "Manifest.java:52"
        },
        {
          "method": "org.eclipse.jst.j2ee.commonarchivecore.internal.helpers.ArchiveManifestImpl.\u003cinit\u003e",
          "source": "ArchiveManifestImpl.java:46"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getManifestClasspath",
          "source": "J2EEModuleVirtualComponent.java:134"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getManifestReferences",
          "source": "J2EEModuleVirtualComponent.java:244"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences",
          "source": "J2EEModuleVirtualComponent.java:86"
        },
        {
          "method": "org.eclipse.jst.j2ee.componentcore.J2EEModuleVirtualComponent.getReferences",
          "source": "J2EEModuleVirtualComponent.java:79"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.getDependencyReferences",
          "source": "DependencyGraphManager.java:194"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.buildDependencyGraph",
          "source": "DependencyGraphManager.java:170"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.constructIfNecessary",
          "source": "DependencyGraphManager.java:76"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.builder.DependencyGraphManager.getDependencyGraph",
          "source": "DependencyGraphManager.java:245"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.resources.VirtualComponent.getReferencingComponents",
          "source": "VirtualComponent.java:418"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.project.J2EEProjectUtilities.getReferencingEARProjects",
          "source": "J2EEProjectUtilities.java:646"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob.processModules",
          "source": "J2EEComponentClasspathUpdater.java:260"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob.access$1",
          "source": "J2EEComponentClasspathUpdater.java:252"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob$1.run",
          "source": "J2EEComponentClasspathUpdater.java:284"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java:37"
        },
        {
          "method": "org.eclipse.jst.j2ee.internal.common.classpath.J2EEComponentClasspathUpdater$ModuleUpdateJob.run",
          "source": "J2EEComponentClasspathUpdater.java:276"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:55"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "189729",
      "date": "2007-05-29T19:32:36+02:00",
      "product": "Web Tools",
      "component": "jst.j2ee",
      "severity": "normal"
    }
  ],
  "groupId": "189729",
  "bugId": "189729",
  "date": "2007-05-29T19:32:36+02:00",
  "product": "Web Tools",
  "component": "jst.j2ee",
  "severity": "normal"
}