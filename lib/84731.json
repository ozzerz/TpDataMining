{
  "comments": [
    "build I20050202 + latest SWT and UI from head\n\n- select a resource in the navigator or package explorer\n- open the Properties view\n- it shows some properties\n- move the column separator to the right\n- the window flickers like crazy, and the column resizing is reset\n\nThis is because PropertySheetViewer.addColumns hooks a resize listener, which\ntries to maintain a 40%/60% split in the columns.\nIf we simply remove this, the columns have size 0.\n\nNot sure why this wasn\u0027t a problem before (in fact, maybe it was, I haven\u0027t\nchecked yet).  But either way, this is a problem in the Properties view that\nneeds to be fixed.\n\nVeronika, do you still have that snippet for maintaining column sizes properly?\nAlso, if you\u0027d like to help out and fix this up, it would be much appreciated.",
    "The problem is that the resize listener is on the Table and the Table will \nsend a resize event as scrollbars appear/disappear.\n\nThe solution proposed a long time ago adds the resize listener to the parent \nof the table and can be found here:\n\nhttp://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.swt.snippets/src/org/eclip\nse/swt/snippets/Snippet77.java?rev\u003dHEAD\u0026content-type\u003dtext/vnd.viewcvs-markup\n\nThe reason TableLayout does not have this problem is because after the first \nresize, TableLayout no longer reszies the columns (it just does nothing).",
    "I\u0027ve released the following hack for now, but this does not handle the scroll\nbars properly.  Plus it\u0027s probably evil to force a layout from within a resize.\n Will change to follow the snippet approach.\n\n\n        tree.getParent().addControlListener(new ControlAdapter() {\n            public void controlResized(ControlEvent e) {\n                updateColumnSizes();\n            }\n\n    private void updateColumnSizes() {\n        // the parent has not yet layed out the tree; force the tree\u0027s size to\nbe updated earlier\n        tree.getParent().layout();\n        \n        int w \u003d tree.getSize().x;\n        TreeColumn[] columns \u003d tree.getColumns();\n        columns[0].setWidth(w * 40 / 100);\n        columns[1].setWidth(w - columns[0].getWidth() - 4);\n    }\n",
    "Looking at the code it\u0027s clear that you could never remove this listener, so the\nfact that it\u0027s attached to the parent  requires that the parent not live longer\nthan this tree child.  Unfortunately that\u0027s no the case.  All EMF editors will\ncreate one when opened, and dispose it when closed.  After that, any attempt to\nresize the IDE, or turn to other perspectives, will execute the following\n\"dangling\" listener code:\n\n   private void updateColumnSizes() {\n        // the parent has not yet layed out the tree; force the tree\u0027s size to\nbe updated earlier\n        tree.getParent().layout();\n\nThis renders the IDE profoundly useless, because a widget disposed exception is\nthrown during layout, resulting in trash layout.\n\n!ENTRY org.eclipse.ui 4 4 2005-02-19 10:20:43.590\n!MESSAGE Unhandled event loop exception\nUnhandled event loop exception\nReason:\n!ENTRY org.eclipse.ui 4 0 \n2005-02-19 10:20:43.590\n!MESSAGE Widget is disposed\n!STACK 0\norg.eclipse.swt.SWTException: Widget is disposed\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat org.eclipse.swt.SWTException.\u003cinit\u003e(SWTException.java:84)\n\tat org.eclipse.swt.SWT.error(SWT.java:2839)\n\tat org.eclipse.swt.SWT.error(SWT.java:2762)\n\tat org.eclipse.swt.SWT.error(SWT.java:2733)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:393)\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java)\n\tat org.eclipse.swt.widgets.Control.getParent(Control.java)\n\tat\norg.eclipse.ui.views.properties.PropertySheetViewer.updateColumnSizes(PropertySheetViewer.java)\n\tat\norg.eclipse.ui.views.properties.PropertySheetViewer.access$0(PropertySheetViewer.java:228)\n\tat\norg.eclipse.ui.views.properties.PropertySheetViewer$1.controlResized(PropertySheetViewer.java:223)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Control.WM_SIZE(Control.java)\n\tat org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java)\n\tat org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)\n\tat org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.layout.FillLayout.layout(FillLayout.java)\n\tat org.eclipse.swt.widgets.Composite.updateLayout(Composite.java)\n\tat org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)\n\tat org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.layout.FillLayout.layout(FillLayout.java)\n\tat org.eclipse.swt.widgets.Composite.updateLayout(Composite.java)\n\tat org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)\n\tat org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)\n\tat org.eclipse.swt.widgets.Widget.SetWindowPos(Widget.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.swt.widgets.Control.setBounds(Control.java)\n\tat org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:325)\n\tat\norg.eclipse.ui.internal.presentations.PresentablePart.setBounds(PresentablePart.java:118)\n\tat\norg.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layoutContent(PresentablePartFolder.java:131)\n\tat\norg.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layout(PresentablePartFolder.java:401)\n\tat\norg.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.setBounds(PresentablePartFolder.java:256)\n\tat\norg.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.setBounds(TabbedStackPresentation.java:203)\n\tat org.eclipse.ui.internal.PartStack.setBounds(PartStack.java:995)\n\tat org.eclipse.ui.internal.LayoutTree.doSetBounds(LayoutTree.java:543)\n\tat org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)\n\tat org.eclipse.ui.internal.LayoutTreeNode.doSetBounds(LayoutTreeNode.java:520)\n\tat org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)\n\tat org.eclipse.ui.internal.LayoutTreeNode.doSetBounds(LayoutTreeNode.java:520)\n\tat org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:534)\n\tat org.eclipse.ui.internal.LayoutPartSash.widgetSelected(LayoutPartSash.java:263)\n\tat org.eclipse.ui.internal.LayoutPartSash.access$1(LayoutPartSash.java:246)\n\tat org.eclipse.ui.internal.LayoutPartSash$1.widgetSelected(LayoutPartSash.java:60)\n\tat org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)\n\tat org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)\n\tat org.eclipse.swt.widgets.Sash.WM_MOUSEMOVE(Sash.java:373)\n\tat org.eclipse.swt.widgets.Control.windowProc(Control.java)\n\tat org.eclipse.swt.widgets.Display.windowProc(Display.java)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)\n\tat org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java)\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612)\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:293)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144)\n\tat org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102)\n\tat\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:333)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:150)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)\n\tat java.lang.reflect.Method.invoke(Method.java:391)\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:260)\n\tat org.eclipse.core.launcher.Main.run(Main.java:887)\n\tat org.eclipse.core.launcher.Main.main(Main.java:871)\nWidget is disposed\n\n\nNote that even if the listeners were to be disposed properly, one should still\nbe concerned that the multiple listeners will each take a turn telling the\nparent to resize yet again...\n\nThis bugzilla looks as if the change won\u0027t happen until later, but they are\ncurrently in M5, rendering M5 unusable for all users of EMF. Please consider\nfixing this for M5.",
    "Ed, I will roll back the change and have requested a rebuild for M5.\n\nCan you please describe the lifecycle that causes this in the EMF editors?\nIs it that the page is destroyed and recreated while the EMF editor is still\nactive?  Or is it simply when switching between editors when one of them is an\nEMF editor?",
    "The change above has other problems too:\n- Properties view closed\n- open PDE schema editor on a schema file\n- double-click on an element or attribute\n- the Properties view appears, showing two columns and the appropriate properties\n  (the schema editor provides its own property sheet page)\n- select a resource in the Navigator or Package Explorer\n  (these do not provide their own property sheet page, just a property source)\n- the Properties view is blank\n- the columns are there, just both of width 0 -- they can still be dragged out\n- resizing the properties view partially fixes up the columns -- the left column\ncan still be blank; clicking in the column header fixes it up.\n\n",
    "Ed, are you sure the old version works for you?\nThere were other changes in the PropertySheetViewer, namely to use Tree with\ncolumns rather than TableTree, that could cause potentially cause problems for\nEMF.  Was it OK in the I20050125-0800 or I20050201-0800 builds?\n",
    "Our editors create a property sheet page on demand like this:\n\n  public Object getAdapter(Class key)\n  {\n...\n    else if (key.equals(IPropertySheetPage.class))\n    {\n      return getPropertySheetPage();\n    }\n-----\n  public IPropertySheetPage getPropertySheetPage()\n  {\n    if (propertySheetPage \u003d\u003d null)\n    {\n      propertySheetPage \u003d\n        new PropertySheetPage()\n        {\n          public void makeContributions(IMenuManager menuManager,\nIToolBarManager toolBarManager, IStatusLineManager statusLineManager)\n          {\n            super.makeContributions(menuManager, toolBarManager, statusLineManager);\n          }\n\n          public void setActionBars(IActionBars actionBars)\n          {\n            super.setActionBars(actionBars);\n            getActionBarContributor().shareGlobalActions(this, actionBars);\n          }\n        };\n      propertySheetPage.setPropertySourceProvider(new\nAdapterFactoryContentProvider(adapterFactory));\n    }\n\n    return propertySheetPage;\n  }\n\nAnd dispose it when the editor is disposed.\n\n  public void dispose()\n  {\n...\n    if (propertySheetPage !\u003d null)\n    {\n      propertySheetPage.dispose();\n    }\n\nThanks for fixing the problem!!",
    "Ed, although you say that this afternoon\u0027s build fixes the problem, I was unable\nto actually reproduce it in the earlier builds.  The PDE schema editor, for\nexample, uses its own subclass of PropertySheetPage, and does not override\ncreatePartControl, so it\u0027s also using PropertySheetViewer.  But I can open a\nschema editor, bring up the properties for it, close the editor, then resize the\nProperties view, with no problem.  \n\nCan you provide steps to reproduce the problem?\nI just want to make sure I fully understand it, and have enough info to write a\nregression test.\n",
    "Ed sez:\n\nThe PDE functions differently because its PDEMultiPagePropertySheet creates a\ncontrol like this:\n\n\tpublic void createControl(Composite parent) {\n\t\tdisposed \u003d false;\n\t\tpagebook \u003d new PageBook(parent, SWT.NULL);\n\t\tdefaultPage.createControl(pagebook);\n\t\tif (currentPage !\u003d null)\n\t\t\tsetPageActive(currentPage);\n\t}\n\nSo in this case the parent of the properties viewer is a PageBook control that\nPDE manages, rather than directly the shared parent as in our case.\n\nMaybe your design of listening to the parent would be okay if you actually\ncreated a \"dummy\" parent to listen to rather than listening to the shared parent.",
    "Decreasing severity as the blocking breakage for M5 was fixed in M5a.\n",
    "*** Bug 87709 has been marked as a duplicate of this bug. ***",
    "The following code makes this work the way I would like it to work.  It sets the\nwidths of the columns initially, but after that takes whatever widths the user\ngives and doesn\u0027t interfere.\n\n      tree.addControlListener( new ControlAdapter()\n      {\n         public void controlResized(\n            ControlEvent e )\n         {\n            Rectangle area \u003d tree.getClientArea();\n            TreeColumn[] columns \u003d tree.getColumns();\n\n            // Add this so that the width of the column is set initially\n            // but not every time it is resized.\n            if (columns[0].getWidth() \u003d\u003d 0)\n            {\n               columns[0].setWidth( area.width * 40 / 100 );\n               columns[1].setWidth( area.width - columns[0].getWidth() - 4 );\n            }\n         }\n      } );",
    "If you only want to size teh columns once, it would be better for performance \nto remove the listener after it has done its work:\n\nControlListener listener \u003d new ControlAdapter() {\n    public void controlResized(ControlEvent e ) {\n         Rectangle area \u003d tree.getClientArea();\n         TreeColumn[] columns \u003d tree.getColumns();\n         columns[0].setWidth( area.width * 40 / 100 );\n         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );\n         tree.removeControlListener(listener);\n         listener \u003d null;\n    }\n};\ntree.addControlListener(listener);",
    "*** Bug 86536 has been marked as a duplicate of this bug. ***",
    "I\u0027ve released the following change:\n        tree.addControlListener(new ControlAdapter() {\n            public void controlResized(ControlEvent e) {\n                Rectangle area \u003d tree.getClientArea();\n                TreeColumn[] columns \u003d tree.getColumns();\n                if (area.width \u003e 0 \u0026\u0026 columns[0].getWidth() \u003d\u003d 0) {\n                    columns[0].setWidth(area.width * 40 / 100);\n                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);\n                }\n            }\n        });\n\nVeronika, the code pattern for removing a local listener from within the\nlistener does not work, since the listener var must be final, and must be\ndefinitely assigned before any reference (there\u0027s an implicit reference in the\nlocal class constructor to capture the value of listener).\n\nPhilippe, does this make sense?  \n",
    "I\u0027ve moved the listener to a field, to allow it to be removed once it\u0027s done its\njob.\n",
    "Why not rather writing it as:\n\n\t\tfinal ControlListener listener \u003d new ControlAdapter() {\n\t\t    public void controlResized(ControlEvent e ) {\n\t\t         Rectangle area \u003d tree.getClientArea();\n\t\t         TreeColumn[] columns \u003d tree.getColumns();\n\t\t         columns[0].setWidth( area.width * 40 / 100 );\n\t\t         columns[1].setWidth( area.width - columns[0].getWidth() - 4 );\n\t\t         tree.removeControlListener(this);\n\t\t    }\n\t\t};\n\t\ttree.addControlListener(listener);",
    "Cool, that works.  In fact, I don\u0027t even need the var then:\n\n        tree.addControlListener(new ControlAdapter() {\n            public void controlResized(ControlEvent e) {\n                Rectangle area \u003d tree.getClientArea();\n                TreeColumn[] columns \u003d tree.getColumns();\n                if (area.width \u003e 0 \u0026\u0026 columns[0].getWidth() \u003d\u003d 0) {\n                    columns[0].setWidth(area.width * 40 / 100);\n                    columns[1].setWidth(area.width - columns[0].getWidth() - 4);\n                    tree.removeControlListener(this);\n                }\n            }\n        });",
    "Verified in I20050331-0800.\n"
  ],
  "commentCreationDates": [
    "2005-02-08T19:59:53+01:00",
    "2005-02-08T20:35:03+01:00",
    "2005-02-12T02:22:01+01:00",
    "2005-02-19T16:28:09+01:00",
    "2005-02-19T19:02:00+01:00",
    "2005-02-19T19:08:01+01:00",
    "2005-02-19T19:15:07+01:00",
    "2005-02-19T20:25:38+01:00",
    "2005-02-20T02:35:24+01:00",
    "2005-02-21T14:33:55+01:00",
    "2005-03-11T14:27:00+01:00",
    "2005-03-11T14:27:50+01:00",
    "2005-03-11T20:32:47+01:00",
    "2005-03-11T20:53:20+01:00",
    "2005-03-21T21:54:35+01:00",
    "2005-03-22T20:54:25+01:00",
    "2005-03-22T20:58:19+01:00",
    "2005-03-22T22:40:36+01:00",
    "2005-03-23T03:14:51+01:00",
    "2005-03-31T21:19:29+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Widget is disposed",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "org.eclipse.swt.SWTException.\u003cinit\u003e",
          "source": "SWTException.java:84"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2839"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2762"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:2733"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:393"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.getParent",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.ui.views.properties.PropertySheetViewer.updateColumnSizes",
          "source": "PropertySheetViewer.java"
        },
        {
          "method": "org.eclipse.ui.views.properties.PropertySheetViewer.access$0",
          "source": "PropertySheetViewer.java:228"
        },
        {
          "method": "org.eclipse.ui.views.properties.PropertySheetViewer$1.controlResized",
          "source": "PropertySheetViewer.java:223"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.WM_SIZE",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.WM_SIZE",
          "source": "Scrollable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_SIZE",
          "source": "Composite.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.SetWindowPos",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.SetWindowPos",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.layout.FillLayout.layout",
          "source": "FillLayout.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.updateLayout",
          "source": "Composite.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_SIZE",
          "source": "Composite.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.SetWindowPos",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.SetWindowPos",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.layout.FillLayout.layout",
          "source": "FillLayout.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.updateLayout",
          "source": "Composite.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Composite.WM_SIZE",
          "source": "Composite.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProcW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DefWindowProc",
          "source": "OS.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Scrollable.callWindowProc",
          "source": "Scrollable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.SetWindowPos",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.SetWindowPos",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.setBounds",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPart.setBounds",
          "source": "LayoutPart.java:325"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.PresentablePart.setBounds",
          "source": "PresentablePart.java:118"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layoutContent",
          "source": "PresentablePartFolder.java:131"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.layout",
          "source": "PresentablePartFolder.java:401"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.PresentablePartFolder.setBounds",
          "source": "PresentablePartFolder.java:256"
        },
        {
          "method": "org.eclipse.ui.internal.presentations.newapi.TabbedStackPresentation.setBounds",
          "source": "TabbedStackPresentation.java:203"
        },
        {
          "method": "org.eclipse.ui.internal.PartStack.setBounds",
          "source": "PartStack.java:995"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutTree.doSetBounds",
          "source": "LayoutTree.java:543"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutTree.setBounds",
          "source": "LayoutTree.java:534"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutTreeNode.doSetBounds",
          "source": "LayoutTreeNode.java:520"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutTree.setBounds",
          "source": "LayoutTree.java:534"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutTreeNode.doSetBounds",
          "source": "LayoutTreeNode.java:520"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutTree.setBounds",
          "source": "LayoutTree.java:534"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPartSash.widgetSelected",
          "source": "LayoutPartSash.java:263"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPartSash.access$1",
          "source": "LayoutPartSash.java:246"
        },
        {
          "method": "org.eclipse.ui.internal.LayoutPartSash$1.widgetSelected",
          "source": "LayoutPartSash.java:60"
        },
        {
          "method": "org.eclipse.swt.widgets.TypedListener.handleEvent",
          "source": "TypedListener.java"
        },
        {
          "method": "org.eclipse.swt.widgets.EventTable.sendEvent",
          "source": "EventTable.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.sendEvent",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Sash.WM_MOUSEMOVE",
          "source": "Sash.java:373"
        },
        {
          "method": "org.eclipse.swt.widgets.Control.windowProc",
          "source": "Control.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.windowProc",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessageW",
          "source": "Native Method"
        },
        {
          "method": "org.eclipse.swt.internal.win32.OS.DispatchMessage",
          "source": "OS.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Display.readAndDispatch",
          "source": "Display.java"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runEventLoop",
          "source": "Workbench.java:1612"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.runUI",
          "source": "Workbench.java:1578"
        },
        {
          "method": "org.eclipse.ui.internal.Workbench.createAndRunWorkbench",
          "source": "Workbench.java:293"
        },
        {
          "method": "org.eclipse.ui.PlatformUI.createAndRunWorkbench",
          "source": "PlatformUI.java:144"
        },
        {
          "method": "org.eclipse.ui.internal.ide.IDEApplication.run",
          "source": "IDEApplication.java:102"
        },
        {
          "method": "org.eclipse.core.internal.runtime.PlatformActivator$1.run",
          "source": "PlatformActivator.java:228"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:333"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseStarter.run",
          "source": "EclipseStarter.java:150"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke0",
          "source": "Native Method"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:85"
        },
        {
          "method": "sun.reflect.NativeMethodAccessorImpl.invoke",
          "source": "NativeMethodAccessorImpl.java:58"
        },
        {
          "method": "sun.reflect.DelegatingMethodAccessorImpl.invoke",
          "source": "DelegatingMethodAccessorImpl.java:60"
        },
        {
          "method": "java.lang.reflect.Method.invoke",
          "source": "Method.java:391"
        },
        {
          "method": "org.eclipse.core.launcher.Main.invokeFramework",
          "source": "Main.java:268"
        },
        {
          "method": "org.eclipse.core.launcher.Main.basicRun",
          "source": "Main.java:260"
        },
        {
          "method": "org.eclipse.core.launcher.Main.run",
          "source": "Main.java:887"
        },
        {
          "method": "org.eclipse.core.launcher.Main.main",
          "source": "Main.java:871"
        }
      ],
      "number": 0,
      "commentIndex": 3,
      "bugId": "84731",
      "date": "2005-02-19T16:28:09+01:00",
      "product": "Platform",
      "component": "UI",
      "severity": "major"
    }
  ],
  "groupId": "84731",
  "bugId": "84731",
  "date": "2005-02-08T19:59:53+01:00",
  "product": "Platform",
  "component": "UI",
  "severity": "major"
}