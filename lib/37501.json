{
  "comments": [
    "Build R2.1\n\nThe following code will not verify if compiled in mode where unused locals are \noptimized out:\n\npublic class X {\t\n\tpublic static void main(String[] argv){\t\n\t\tint i;\t\n\t\tassert argv !\u003d null || true : i;\n\t\tSystem.out.println(\"SUCCESS\");\t\n\t}\n}\n\n\nSTART RUNNING---------------------------------------------------\n\njava.lang.VerifyError: (class: X, method: main signature: ([Ljava/lang/String;)\nV) Illegal local variable number\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:140)\n\tat Compile.main(Compile.java:28)\n\nDONE RUNNING----------------------------------------------------\n\n\nDISASSEMBLING--------------------------------------------------\n/* \n * Version (target 1.4) \n * - magic: CAFEBABE\n * - minor: 0\n * - major: 48\n */\n// Compiled from X.java\npublic class X extends java.lang.Object {\n  \n  final static boolean $assertionsDisabled;\n    Attribute:\n      Name: Synthetic Length: 0\n  /*  Field descriptor #6 Z */\n  \n  static java.lang.Class class$0;\n    Attribute:\n      Name: Synthetic Length: 0\n  /*  Field descriptor #9 Ljava/lang/Class; */\n  \n  /*  Method descriptor  #11 ()V */\n  static {};\n    /* Stack: 3, Locals: 0 */\n    Code attribute:\n       0  getstatic #14 \u003cField X#class$0 java.lang.Class\u003e\n       3  dup\n       4  ifnonnull 32\n       7  pop\n       8  ldc #15 \u003cString \"X\"\u003e\n      10  invokestatic #21 \u003cMethod java.lang.Class#forName(java.lang.String \narg) java.lang.Class\u003e\n      13  dup\n      14  putstatic #14 \u003cField X#class$0 java.lang.Class\u003e\n      17  goto 32\n      20  new #23 java.lang.NoClassDefFoundError\n      23  dup_x1\n      24  swap\n      25  invokevirtual #29 \u003cMethod java.lang.Throwable#getMessage() \njava.lang.String\u003e\n      28  invokespecial #33 \u003cConstructor java.lang.NoClassDefFoundError\n(java.lang.String arg)\u003e\n      31  athrow\n      32  invokevirtual #37 \u003cMethod java.lang.Class#desiredAssertionStatus() \nboolean\u003e\n      35  ifne 42\n      38  iconst_1\n      39  goto 43\n      42  iconst_0\n      43  putstatic #39 \u003cField X#$assertionsDisabled boolean\u003e\n      46  return\n\n    Exception Table:\n      [pc: 8, pc: 13] -\u003e 20 when : java.lang.ClassNotFoundException\n      \n    Line number attribute:\n      [pc: 0, line: 1]\n  \n  /*  Method descriptor  #11 ()V */\n  public X();\n    /* Stack: 1, Locals: 1 */\n    Code attribute:\n      0  aload_0\n      1  invokespecial #44 \u003cConstructor java.lang.Object()\u003e\n      4  return\n\n    Line number attribute:\n      [pc: 0, line: 1]\n  \n  /*  Method descriptor  #46 ([Ljava/lang/String;)V */\n  public static void main(String[] arg);\n    /* Stack: 3, Locals: 1 */\n    Code attribute:\n       0  getstatic #39 \u003cField X#$assertionsDisabled boolean\u003e\n       3  ifne 19\n       6  goto 19\n       9  new #48 java.lang.AssertionError\n      12  dup\n      13  iload 255\n      15  invokespecial #51 \u003cConstructor java.lang.AssertionError(int arg)\u003e\n      18  athrow\n      19  getstatic #57 \u003cField java.lang.System#out java.io.PrintStream\u003e\n      22  ldc #59 \u003cString \"SUCCESS\"\u003e\n      24  invokevirtual #64 \u003cMethod java.io.PrintStream#println\n(java.lang.String arg) void\u003e\n      27  return\n\n    Line number attribute:\n      [pc: 0, line: 4]\n      [pc: 19, line: 5]\n      [pc: 27, line: 6]\n  \n}",
    "Offending line is:\n\n13  iload 255",
    "In fact the whole block:\n       9  new #48 java.lang.AssertionError\n      12  dup\n      13  iload 255\n      15  invokespecial #51 \u003cConstructor java.lang.AssertionError(int arg)\u003e\n      18  athrow\n\nis unreachable. If the condition of the assert statement is inlined to true we\ndon\u0027t need to generate the assertion error because it cannot happen.",
    "Indeed. Fixed by optimizing out the entire chunk when condition is inlined to \ntrue.\n\n",
    "Fixed. ",
    "Fixed",
    "Verified."
  ],
  "commentCreationDates": [
    "2003-05-12T17:21:30+02:00",
    "2003-05-12T17:22:38+02:00",
    "2003-05-12T17:30:55+02:00",
    "2003-05-12T18:17:34+02:00",
    "2003-05-12T18:17:49+02:00",
    "2003-05-12T18:45:33+02:00",
    "2003-06-06T13:19:11+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.VerifyError",
      "message": "(class: X, method: main signature: ([Ljava/lang/String;) V) Illegal local variable number",
      "elements": [
        {
          "method": "java.lang.Class.forName0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Class.java:140"
        },
        {
          "method": "Compile.main",
          "source": "Compile.java:28"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "37501",
      "date": "2003-05-12T17:21:30+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "37501",
  "bugId": "37501",
  "date": "2003-05-12T17:21:30+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}