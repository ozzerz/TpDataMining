{
  "comments": [
    "RC1/IBM1.4.2\n\n* condition in for loop on line breakpoint (i \u003d\u003d 53)\n* selected thread while debugging and paused it\n* all labels appear as \"...\" and never update\n* variables appear for the stack frame, but toString() (details) do not work\n\nwill attach screen shot",
    "Created an attachment (id\u003d11360)\nscreen shot\n",
    "Variables only appear for top stack frame. Selecting other frames results \nin \"Unable to retrieve stack frame - thread not suspended\" message appearing \nin variables view.\n\nAlthough the thread appears suspended, the resume button is not enabled when \nselecting the thread or target or stack frame. Stepping actions are also \ndisabled. Pressing \"suspend\" made the labels appear as:\n\nThread [main] (Evaluating)\n\tVectorTest.testCapacity() line: 32\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\t...\n\n\nEventually, I was able to resume the thread and hit the breakpoint.",
    "I was able to get the thread into a confused state by re-doing this test, and \nsuspending/resuming the thread many times. Eventually when I tried to step, it \nwould say \"stepping\" forever, and never complete the step - I had to terminate \nthe target VM.",
    "Nothing appears in the log.",
    "Further strangeness - \n\n* condition is i \u003d\u003d 57\n* change to Java perspective\n* shutdown workspace\n* restart workspace\n* re-launch last (debug mode)\n* Error dialog appears claiming a runtime exception occurred in the condition. \nThe error dialog appears 4 to 6 times (stacked) and this is in the log:\n\ncom.sun.jdi.IncompatibleThreadStateException: Thread was not suspended\nat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\nat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\nat com.sun.jdi.IncompatibleThreadStateException.\u003cinit\u003e\n(IncompatibleThreadStateException.java:17)\nat org.eclipse.jdi.internal.ThreadReferenceImpl.frameCount\n(ThreadReferenceImpl.java:152)\nat org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrameCount\n(JDIThread.java:629)\nat org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames\n(JDIThread.java)\nat org.eclipse.jdt.internal.debug.core.model.JDIThread.computeNewStackFrames\n(JDIThread.java:528)\nat \norg.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.handleCondit\nionalBreakpointEvent(JavaLineBreakpoint.java:441)\nat \norg.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.handleBreakp\nointEvent(JavaLineBreakpoint.java:367)\nat org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleEvent\n(JavaBreakpoint.java:263)\nat org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch\n(EventDispatcher.java)\nat org.eclipse.jdt.internal.debug.core.EventDispatcher.run\n(EventDispatcher.java:221)\nat java.lang.Thread.run(Thread.java:806)\n\nTerminating and restarting the target works OK. Seems to be a problem with \nevaluating the condition on startup.",
    "*** Bug 64098 has been marked as a duplicate of this bug. ***",
    "Fixed. Added synchronization in JDIThread and JavaLineBreakpoint for synch\u0027ing \nof suspend/resume and handling of conditional breakpoint. This fixes the \nproblem of manually suspending while evaluating a condition. However, it does \nnot address the problem of an exception after starting the workspace in the \nJava perspective and launching to conditional breakpoint. I will open a new \nbug for that issue.",
    "Please verify, Kevin.",
    "verified\n",
    "Created an attachment (id\u003d12187)\nscreenshot\n\nMy TestCase for bug 64098 works fine with RC2, the bug has been fixed  I just\nobserved some gremblins showing thread state in the debug view as it shows in\nthe screen shot attached.\n\nRegards \u003d)))",
    "What is the problem in the screenshot? (I have noticed that some threads can \nbe rendered as \"suspended\" when they are really running, since when evaluating \na conditional breakpoint, the thread is actually \"quietly\" suspended. Since we \ncompute images in the background, the thread may get rendered when it is in \none of the quiet suspend states).",
    "*** Bug 34051 has been marked as a duplicate of this bug. ***",
    "Seems like the newer bug report is the duplicate, FWIW."
  ],
  "commentCreationDates": [
    "2004-06-01T16:06:31+02:00",
    "2004-06-01T16:07:40+02:00",
    "2004-06-01T16:11:12+02:00",
    "2004-06-01T16:13:23+02:00",
    "2004-06-01T16:15:04+02:00",
    "2004-06-01T16:27:37+02:00",
    "2004-06-09T17:11:46+02:00",
    "2004-06-09T22:25:42+02:00",
    "2004-06-09T22:25:55+02:00",
    "2004-06-09T23:41:24+02:00",
    "2004-06-15T22:21:40+02:00",
    "2004-06-15T23:11:38+02:00",
    "2004-07-29T22:35:47+02:00",
    "2004-07-30T01:39:40+02:00"
  ],
  "traces": [
    {
      "exceptionType": "com.sun.jdi.IncompatibleThreadStateException",
      "message": "Thread was not suspended",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "com.sun.jdi.IncompatibleThreadStateException.\u003cinit\u003e",
          "source": "IncompatibleThreadStateException.java:17"
        },
        {
          "method": "org.eclipse.jdi.internal.ThreadReferenceImpl.frameCount",
          "source": "ThreadReferenceImpl.java:152"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.getUnderlyingFrameCount",
          "source": "JDIThread.java:629"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.computeStackFrames",
          "source": "JDIThread.java"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.model.JDIThread.computeNewStackFrames",
          "source": "JDIThread.java:528"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.handleConditionalBreakpointEvent",
          "source": "JavaLineBreakpoint.java:441"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.handleBreakpointEvent",
          "source": "JavaLineBreakpoint.java:367"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.handleEvent",
          "source": "JavaBreakpoint.java:263"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch",
          "source": "EventDispatcher.java"
        },
        {
          "method": "org.eclipse.jdt.internal.debug.core.EventDispatcher.run",
          "source": "EventDispatcher.java:221"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:806"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "64951",
      "date": "2004-06-01T16:27:37+02:00",
      "product": "JDT",
      "component": "Debug",
      "severity": "normal"
    }
  ],
  "groupId": "64951",
  "bugId": "64951",
  "date": "2004-06-01T16:06:31+02:00",
  "product": "JDT",
  "component": "Debug",
  "severity": "normal"
}