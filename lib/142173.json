{
  "comments": [
    "I\u0027m using BIRT release 2.0.1 with Oracle 10g Rel 2 OC4J and I get the same error.\n\nYour comment for fix on Bug #116959 does not state clearly if Rel 3 of OC4J really is needed or just for ease of deployment. So, it seems that it is still a bug using Rel 2 of OC4J as i still get the bug using 2.0.1.\n\nA fix to this issue would be a great help.\n\nBTW: the commons-logging classes are not contained in the distribution of 2.0.1. Is this intentionally or fixed in 2.1 RC?\n\nThanks in advance!\n\n\n500 Internal Server Error\n\njava.lang.IllegalArgumentException: Partial path must start with a /\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].server.http.HttpApplication.getResourcePaths(HttpApplication.java:8012)\n   at\norg.eclipse.birt.core.framework.PlatformServletContext.hasChildren(PlatformServletContext.java:95)\n   at\norg.eclipse.birt.core.framework.PlatformServletContext.getFileList(PlatformServletContext.java:69)\n   at\norg.eclipse.birt.core.framework.server.ServerPlatform.\u003cinit\u003e(ServerPlatform.java:55)\n   at org.eclipse.birt.core.framework.Platform.initialize(Platform.java:85)\n   at org.eclipse.birt.report.engine.api.ReportEngine.\u003cinit\u003e(ReportEngine.java:79)\n   at\norg.eclipse.birt.report.viewer.utilities.EngineAccessor.setEngineContext(Unknown\nSource)\n   at org.eclipse.birt.report.viewer.servlets.ViewerServlet.doPost(Unknown Source)\n   at org.eclipse.birt.report.viewer.servlets.ViewerServlet.doGet(Unknown Source)\n   at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n   at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].server.http.ServletRequestDispatcher.invoke(ServletRequestDispatcher.java:810)\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].server.http.ServletRequestDispatcher.forwardInternal(ServletRequestDispatcher.java:322)\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].server.http.HttpRequestHandler.processRequest(HttpRequestHandler.java:790)\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].server.http.AJPRequestHandler.run(AJPRequestHandler.java:208)\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].server.http.AJPRequestHandler.run(AJPRequestHandler.java:125)\n   at com.evermind[Oracle Application Server Containers for J2EE 10g\n(10.1.2.0.0)].util.ReleasableResourcePooledExecutor$MyWorker.run(ReleasableResourcePooledExecutor.java:192)\n   at java.lang.Thread.run(Thread.java:534)",
    "Addendum:\n\nI got mixed up with the version numbers of OC4J.\nThe bug appears with version 9.0.4.\nI could verify that OC4J 10.1.3 works fine.\nQuestion: will there be a fix for 9.0.4?\n\nSorry for any inconveniance.\n\nPS: Did anybody verify the bugfix on 10.1.2?",
    "can you help?",
    "(In reply to comment #2)\n\u003e can you help?\n\nthe commons-logging classes are not contained in the distribution of\n2.0.1. Is this intentionally or fixed in 2.1 RC?\n",
    "(In reply to comment #3)\n\u003e (In reply to comment #2)\n\u003e \u003e can you help?\n\u003e \n\u003e the commons-logging classes are not contained in the distribution of\n\u003e 2.0.1. Is this intentionally or fixed in 2.1 RC?\n\u003e \n\nYou can fix this putting the commons-logging jar file into your classpath, then it works fine.\nI mention this question because there exists an empty package for the commons-logging in one of the jar\u0027s delivered with BIRT and I\u0027m was wondering if this is intentionally or just a small blunder.\n\nBut still there is no reply to actual problem of OC4J Release 9.04. Will there be one?",
    "Jianqiang, please check out OC4J Release 9.04 for Oracle.   There is another bug on blob support for this version of Oracle.",
    "Changing Severity from Critical to Enhancement since we do not officially test/support deploying on Oracle 10g app server. However, we will continue to work with you to try and resolve the issue.",
    "The accurate description is \"Deplyment to Oracle 9.0.4 ias OC4J\". From the bug description, BIRT can work with Oracle 10.1.3 which is the latest version, but BIRT can not work with Oracle 9.0.4.",
    "please try Oracle 10.1.3.",
    "OC4J 9.0.4 supports J2SE 1.3. There may be incompatibility between OC4J 9.0.4 and JDK1.4. But Birt runs on the JDK1.4.2. So Birt should work on OC4J 10.1.3.",
    "(In reply to comment #9)\n\u003e OC4J 9.0.4 supports J2SE 1.3. There may be incompatibility between OC4J 9.0.4\n\u003e and JDK1.4. But Birt runs on the JDK1.4.2. So Birt should work on OC4J 10.1.3.\n\u003e \n\nI haven\u0027t seen so far any incompatibility between OC4J 9.0.4 and JDK 1.4.2. And we are using this combination heavily as it does our biggest client in production environments too. This makes it not very likely that there is a incompatibility between both products. May be OC4J 9.0.4 has a problem with the J2EE specs and BIRT hooks just on this? This is just an idea, I\u0027m not sure.",
    "please try BIRT 2.1.1 on OC4J 9.0.4 + JDK 1.4.2",
    "I have deployed BIRT 2.1.1 on OC4J 9.0.4 + JDK 1.4.2. I get a NoClassDefFoundError exception:\njava.lang.NoClassDefFoundError: org.apache.commons.logging.LogFactory\n\tat org.apache.axis.components.logger.LogFactory.class$(LogFactory.java:45)\n\tat org.apache.axis.components.logger.LogFactory$1.run(LogFactory.java:45)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.axis.components.logger.LogFactory.getLogFactory(LogFactory.java:41)\n\tat org.apache.axis.components.logger.LogFactory.\u003cclinit\u003e(LogFactory.java:33)\n\tat org.apache.axis.transport.http.AxisServletBase.\u003cclinit\u003e(AxisServletBase.java:58)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Unknown Source)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].server.http.HttpApplication.loadServlet(HttpApplication.java:2028)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].server.http.HttpApplication.findServlet(HttpApplication.java:4523)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].server.http.HttpApplication.getRequestDispatcher(HttpApplication.java:2561)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].server.http.HttpRequestHandler.processRequest(HttpRequestHandler.java:640)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].server.http.HttpRequestHandler.run(HttpRequestHandler.java:270)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].server.http.HttpRequestHandler.run(HttpRequestHandler.java:112)\n\tat com.evermind[Oracle Application Server Containers for J2EE 10g (9.0.4.0.0)].util.ReleasableResourcePooledExecutor$MyWorker.run(ReleasableResourcePooledExecutor.java:192)\n\tat java.lang.Thread.run(Unknown Source)\n\nThe welcome page of OC4J 9.0.4 contains the incompatibilities information between Java 2 Platform, Standard Edition, v1.4.0 and v1.3.\n\nThe new JDK 1.4.0 compiler, as a result of stricter enforcement of Java Language Specification, requires all the imported classes should be within named namespaces(packages).  An attempt to import classes from unnamed namespace causes a compile-time error in a JDK 1.4 \nenvironment.  Also see http://java.sun.com/j2se/1.4/compatibility.html#incompatibilities1.4 point # 8 - second bullet. \nThis behavior of the JDK 1.4 compiler could impact applications built using JDK 1.3.1 that do not have classes within named namespaces( a not so uncommon practice especially for people writing JSPs). You will get a compile-time error. \nPlease ensure that you have all your imported classes within packages before moving to 10G as Oracle Application Server 10G (9.0.4) bundles JDK 1.4. \n\nOC4J users who do not have all their imported classes within packages and still wish to use OC4J 10G (9.0.4), please continue to use JDK 1.3.1.  The OC4J 10G supports both JDK 1.3.1.x and JDK 1.4.x.  Please refer to the documentation for the exact versions of the supported JDK. \n",
    "I got the same error, but I found out that the reason was the absence of the apache.commons.logging package in the BIRT distribution. I looked on an earlier BIRT version and found the package(s) included.\n\nTherefor my comment:\nBTW: the commons-logging classes are not contained in the distribution of\n2.0.1. Is this intentionally or fixed in 2.1 RC?\n\ninside my original bug report.\n\nAfter downloading and including the package(s) into classpath this error didn\u0027t show again but the one I described in this bug report (the supposed missing of \u0027/\u0027).\n\nBut I can\u0027t see that this is caused due to comaptibility issues between JDK 1.3 and 1.4. Are you really sure that JDK 1.4 is the reason for the described problem??\n\n\n\n(In reply to comment #12)\n\u003e I have deployed BIRT 2.1.1 on OC4J 9.0.4 + JDK 1.4.2. I get a\n\u003e NoClassDefFoundError exception:\n\u003e java.lang.NoClassDefFoundError: org.apache.commons.logging.LogFactory\n\u003e         at\n\u003e org.apache.axis.components.logger.LogFactory.class$(LogFactory.java:45)\n\u003e         at\n\u003e org.apache.axis.components.logger.LogFactory$1.run(LogFactory.java:45)\n\u003e         at java.security.AccessController.doPrivileged(Native Method)\n\u003e         at\n\u003e org.apache.axis.components.logger.LogFactory.getLogFactory(LogFactory.java:41)\n\u003e         at\n\u003e org.apache.axis.components.logger.LogFactory.\u003cclinit\u003e(LogFactory.java:33)\n\u003e         at\n\u003e org.apache.axis.transport.http.AxisServletBase.\u003cclinit\u003e(AxisServletBase.java:58)\n\u003e         at java.lang.Class.forName0(Native Method)\n\u003e         at java.lang.Class.forName(Unknown Source)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].server.http.HttpApplication.loadServlet(HttpApplication.java:2028)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].server.http.HttpApplication.findServlet(HttpApplication.java:4523)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].server.http.HttpApplication.getRequestDispatcher(HttpApplication.java:2561)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].server.http.HttpRequestHandler.processRequest(HttpRequestHandler.java:640)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].server.http.HttpRequestHandler.run(HttpRequestHandler.java:270)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].server.http.HttpRequestHandler.run(HttpRequestHandler.java:112)\n\u003e         at com.evermind[Oracle Application Server Containers for J2EE 10g\n\u003e (9.0.4.0.0)].util.ReleasableResourcePooledExecutor$MyWorker.run(ReleasableResourcePooledExecutor.java:192)\n\u003e         at java.lang.Thread.run(Unknown Source)\n\u003e \n\u003e The welcome page of OC4J 9.0.4 contains the incompatibilities information\n\u003e between Java 2 Platform, Standard Edition, v1.4.0 and v1.3.\n\u003e \n\u003e The new JDK 1.4.0 compiler, as a result of stricter enforcement of Java\n\u003e Language Specification, requires all the imported classes should be within\n\u003e named namespaces(packages).  An attempt to import classes from unnamed\n\u003e namespace causes a compile-time error in a JDK 1.4 \n\u003e environment.  Also see\n\u003e http://java.sun.com/j2se/1.4/compatibility.html#incompatibilities1.4 point # 8\n\u003e - second bullet. \n\u003e This behavior of the JDK 1.4 compiler could impact applications built using JDK\n\u003e 1.3.1 that do not have classes within named namespaces( a not so uncommon\n\u003e practice especially for people writing JSPs). You will get a compile-time\n\u003e error. \n\u003e Please ensure that you have all your imported classes within packages before\n\u003e moving to 10G as Oracle Application Server 10G (9.0.4) bundles JDK 1.4. \n\u003e \n\u003e OC4J users who do not have all their imported classes within packages and still\n\u003e wish to use OC4J 10G (9.0.4), please continue to use JDK 1.3.1.  The OC4J 10G\n\u003e supports both JDK 1.3.1.x and JDK 1.4.x.  Please refer to the documentation for\n\u003e the exact versions of the supported JDK. \n\u003e \n\n",
    "Hi,\n\nI\u0027ve checked with Build team. The org.apache.commons.logging package did once exists in BIRT delivery when BIRT is still in version 1.0. However that package is no longer used by BIRT since 2.0 so we removed it.\n\nBIRT delivery only contains packages that are necessary for BIRT\u0027s own functionality.So it will not be add to BIRT 2.1 RC.\n\nFor your case, if this package is required by your application, you should download it and put it to the library yourself.\n\nSorry for not giving you an immediate feedback!\n\nThanks.\nLin ",
    "We need some extra time to go over the problem.",
    "Hi There,\n\nAfter including the org.apache.commons.logging by you own, is that still problem with your application?\n\nThanks.\nLin",
    "Hi There,\n\nAs we\u0027ve not get your response it we assume that it is ok for you to include org.apache.commons.logging package by yourself and that solve the problem. The bug is mark as won\u0027t fix.\n\nThanks.\nLin"
  ],
  "commentCreationDates": [
    "2006-05-17T11:33:57+02:00",
    "2006-05-17T15:07:21+02:00",
    "2006-05-18T09:22:11+02:00",
    "2006-05-22T01:21:30+02:00",
    "2006-05-22T10:40:47+02:00",
    "2006-05-26T10:34:41+02:00",
    "2006-05-27T02:46:30+02:00",
    "2006-08-03T10:10:29+02:00",
    "2006-08-08T03:40:25+02:00",
    "2006-08-08T03:57:43+02:00",
    "2006-08-30T10:00:42+02:00",
    "2006-09-26T01:27:38+02:00",
    "2006-09-26T07:28:41+02:00",
    "2006-10-06T17:02:26+02:00",
    "2006-10-20T04:07:40+02:00",
    "2006-11-01T02:33:23+01:00",
    "2007-05-14T10:05:49+02:00",
    "2007-11-20T06:59:39+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "Partial path must start with a /    at com.evermind[Oracle Application Server Containers for J2EE 10g (10.1.2.0.0)].server.http.HttpApplication.getResourcePaths(HttpApplication.java:8012)",
      "elements": [
        {
          "method": "org.eclipse.birt.core.framework.PlatformServletContext.hasChildren",
          "source": "PlatformServletContext.java:95"
        },
        {
          "method": "org.eclipse.birt.core.framework.PlatformServletContext.getFileList",
          "source": "PlatformServletContext.java:69"
        },
        {
          "method": "org.eclipse.birt.core.framework.server.ServerPlatform.\u003cinit\u003e",
          "source": "ServerPlatform.java:55"
        },
        {
          "method": "org.eclipse.birt.core.framework.Platform.initialize",
          "source": "Platform.java:85"
        },
        {
          "method": "org.eclipse.birt.report.engine.api.ReportEngine.\u003cinit\u003e",
          "source": "ReportEngine.java:79"
        },
        {
          "method": "org.eclipse.birt.report.viewer.utilities.EngineAccessor.setEngineContext",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.birt.report.viewer.servlets.ViewerServlet.doPost",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.birt.report.viewer.servlets.ViewerServlet.doGet",
          "source": "Unknown Source"
        },
        {
          "method": "javax.servlet.http.HttpServlet.service",
          "source": "HttpServlet.java:740"
        },
        {
          "method": "javax.servlet.http.HttpServlet.service",
          "source": "HttpServlet.java:853"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "142173",
      "date": "2006-05-17T11:33:57+02:00",
      "product": "BIRT",
      "component": "Data",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org.apache.commons.logging.LogFactory",
      "elements": [
        {
          "method": "org.apache.axis.components.logger.LogFactory.class$",
          "source": "LogFactory.java:45"
        },
        {
          "method": "org.apache.axis.components.logger.LogFactory$1.run",
          "source": "LogFactory.java:45"
        },
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        },
        {
          "method": "org.apache.axis.components.logger.LogFactory.getLogFactory",
          "source": "LogFactory.java:41"
        },
        {
          "method": "org.apache.axis.components.logger.LogFactory.\u003cclinit\u003e",
          "source": "LogFactory.java:33"
        },
        {
          "method": "org.apache.axis.transport.http.AxisServletBase.\u003cclinit\u003e",
          "source": "AxisServletBase.java:58"
        },
        {
          "method": "java.lang.Class.forName0",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Unknown Source"
        }
      ],
      "number": 1,
      "commentIndex": 12,
      "bugId": "142173",
      "date": "2006-09-26T07:28:41+02:00",
      "product": "BIRT",
      "component": "Data",
      "severity": "enhancement"
    },
    {
      "exceptionType": "java.lang.NoClassDefFoundError",
      "message": "org.apache.commons.logging.LogFactory \u003e         at \u003e org.apache.axis.components.logger.LogFactory.class$(LogFactory.java:45) \u003e         at \u003e org.apache.axis.components.logger.LogFactory$1.run(LogFactory.java:45) \u003e",
      "elements": [
        {
          "method": "java.security.AccessController.doPrivileged",
          "source": "Native Method"
        }
      ],
      "number": 2,
      "commentIndex": 13,
      "bugId": "142173",
      "date": "2006-10-06T17:02:26+02:00",
      "product": "BIRT",
      "component": "Data",
      "severity": "enhancement"
    }
  ],
  "groupId": "142173",
  "bugId": "142173",
  "date": "2006-05-17T11:33:57+02:00",
  "product": "BIRT",
  "component": "Data",
  "severity": "enhancement"
}