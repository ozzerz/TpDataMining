{
  "comments": [
    "This enhancements request captures some of things needed from the Async Table Viewer in order to migrate the Memory View to use the table viewer.  I will add more comments as more issues are identified.\n\n1.  Need to a way to figure out if there is any pending updates\n\n* The Memory View does a series of work after the viewer is populated with data.  For example, the rendering packs all columns to resize all columns to the right size.  Also, the table rendering will try to position the table viewer to a certain top index and select a cell using the table cursor.  I would like this update to be done after the table viewer has finished updating all elements in the table.  (i.e. it has completed getting content and has finished getting labels.)  The async table viewer has a #updateComplete call to let the viewer knows that some update has finished.  But I have no way to determine if all updates has finished.\n\nSuggest to add method #hasPendingUpdates in AsynchronousViewer.\n\n2.  Model Delta needs to handle table selection.  \n\nModel Delta allows clients to specify the object to select.  However with table selection, we need to specify the object to select (the row) as well as the column to select.  There is no way to do it now.\n\n3.  Need to investigate if the table viewer should support TableCursor\n\nThe Memory View makes use of the TableCursor to allow user to navigate the table viewer.  We should also look if management of table cursor should be handled in Async Table Viewer.  (or allow us a way to handle this more easily.)",
    "The tree viwer has been migrated to use a tree model. Issues arose with the virtual tree, whereby model elements only get \"installed\" in the view when visible. This limited model proxy installation and expansion/selection to visible elements only - which breaks auto-selection when suspending on breakpoint for a thread/target which is not visible.\n\nThe tree model is now responsible for installing model proxies, and the view just renders the visible portion of the model. When an element is expanded in the tree, its children are mapped to the model, and proxies are installed. Only visible children are rendered.\n\nThe table should likely follow this design as well.",
    "Created an attachment (id\u003d35434)\npatch of proposed table viewer\n\nPatch is table viewer migrated to use a table model. It breaks stuff in the memory view. Samantha, can you please take a look at the patch to see how hard it is to migrate to the model based table.",
    "Looked at the patch.\n\nThe removal of the content manager was the biggest challenge since the virtual content table viewer relies heavily on the content manager.  It is also reponsible for caching and figuring out changes.\n\nI am guessing that the content manager is replaced by the asynchronous model.  So, my viewer now creates a customized model that deals with caching and changes.  \n\nI got the code to compile ok.  But it\u0027s not running.\n\nI am having problem with resizing all columns to the preferred size after the rendering is created.  Looks like I am running into timing problem again that I do not yet have all my labels before the columns are resized.  (Need to know when the viewer has finished updating.)\n\nScrolling is broken too.  The scrolling is broken because the table item is not mapped to the right objects after the chileren of the root element is changed.  (i.e. #getData does not return the correct object.  The model and the data in TableItem are out-of-sync.)  As a result, the viewer is unable to maintain top index and selection properly.  \n\nOther things like refreshing and properties page, editing are broken too.  But I cannot look at them until I kinda get the rendering working again.\n\n",
    "When updating changes from memory block... got the following exception.  #findItem is causing problem.\n\norg.eclipse.swt.SWTException: Invalid thread access\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat java.lang.Throwable.\u003cinit\u003e(Throwable.java)\n\tat org.eclipse.swt.SWTException.\u003cinit\u003e(SWTException.java:87)\n\tat org.eclipse.swt.SWT.error(SWT.java:3349)\n\tat org.eclipse.swt.SWT.error(SWT.java:3272)\n\tat org.eclipse.swt.SWT.error(SWT.java:3243)\n\tat org.eclipse.swt.widgets.Widget.error(Widget.java:432)\n\tat org.eclipse.swt.widgets.Widget.checkWidget(Widget.java)\n\tat org.eclipse.swt.widgets.Table.getItems(Table.java:1695)\n\tat org.eclipse.debug.internal.ui.viewers.AsynchronousTableViewer.doFindInputItem(AsynchronousTableViewer.java:150)\n\tat org.eclipse.jface.viewers.StructuredViewer.findItems(StructuredViewer.java:725)\n\tat org.eclipse.jface.viewers.StructuredViewer.findItem(StructuredViewer.java:701)\n\tat org.eclipse.debug.internal.ui.model.viewers.AsynchronousModelViewer.findItem(AsynchronousModelViewer.java:965)\n\tat org.eclipse.debug.internal.ui.model.viewers.AsynchronousModelViewer.internalRefresh(AsynchronousModelViewer.java:444)\n\tat org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1324)\n\tat org.eclipse.debug.internal.ui.views.memory.renderings.AsyncTableRenderingViewer.preservingSelection(AsyncTableRenderingViewer.java:484)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1322)\n\tat org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1281)\n\tat org.eclipse.debug.internal.ui.views.memory.renderings.AbstractAsyncTableRendering.refresh(AbstractAsyncTableRendering.java:1704)\n\tat org.eclipse.debug.internal.ui.views.memory.renderings.AsyncTableRenderingUpdatePolicy.handleMemoryBlockChanged(AsyncTableRenderingUpdatePolicy.java:130)\n\tat org.eclipse.debug.internal.ui.views.memory.renderings.AsyncTableRenderingUpdatePolicy.modelChanged(AsyncTableRenderingUpdatePolicy.java:72)\n\tat org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run(AbstractModelProxy.java:70)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java)\n\tat org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged(AbstractModelProxy.java:74)\n\tat org.eclipse.debug.internal.ui.viewers.update.MemoryBlockProxy$1.handleSuspend(MemoryBlockProxy.java:54)\n\tat org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.dispatchSuspend(EventHandlerModelProxy.java:200)\n\tat org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.handleDebugEvents(EventHandlerModelProxy.java:138)\n\tat org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1083)\n\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java)\n\tat org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1115)\n\tat org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:344)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)\n",
    "TableAddRequestMonitor and TableRemoveRequestMonitor needs to properly implement #contains(...) method.\n\nThe table rendering can be re-formatted to change the number of columns shown in the view.  When this happens, my model re-organizes its data to match the current format of the rendering.  To trigger a refresh on the rendering, the model removes all its current elements and the new elements back to the model.\n\nBecause TableAddRequestMonitor and TableRemoveRequestMonitor always returns true when #contains is called.  When the add request is scheduled, it cancels the remove request.  As a result, the table rendering cannot be formatted properly since the old elements have not been removed.\n\nI experiemented with adding the following to the monitors, and it seems to have solved the problem.  But this is specific to my case... not 100% what the proper fix is.\n\nIn TableAddRequestMonitor:\n\n\tprotected boolean contains(AsynchronousModelRequestMonitor update) {\n\t\treturn  (update instanceof TableAddRequestMonitor) \u0026\u0026 !(update instanceof TableRemoveRequestMonitor);\n\t}\n\nIn TableRemoveRequestMonitor:\n\n\tprotected boolean contains(AsynchronousModelRequestMonitor update) {\n\t\treturn  (update instanceof TableRemoveRequestMonitor);\n\t}\n\nThx...\nSam",
    "Created an attachment (id\u003d35506)\nupdated patch\n\nThis patch addresses the invalid thread access and request update \"contains\" tests. The add/remove/insert/replace requests never contain other requests.",
    "Created an attachment (id\u003d35508)\nmemory view using the patch\n\n",
    "Darin, please verify.  \nChecked in updated patch + memory view changes.\nThanks...\nSam",
    "Verified. I did some refactorings as well:\n\n* deleted \"model\" pacakge\n* moved classes back to internal.viewers package\n* renames classes to get rid of \"model\" (eg. AsynchronousTreeModelViewer \u003d\u003d AsynchronousTreeViewer)",
    "Verified."
  ],
  "commentCreationDates": [
    "2005-12-20T20:32:37+01:00",
    "2006-02-07T15:22:13+01:00",
    "2006-02-27T20:35:51+01:00",
    "2006-02-28T19:02:49+01:00",
    "2006-02-28T20:41:01+01:00",
    "2006-02-28T21:35:20+01:00",
    "2006-02-28T21:54:38+01:00",
    "2006-02-28T22:20:06+01:00",
    "2006-03-02T16:20:27+01:00",
    "2006-03-02T17:25:49+01:00",
    "2006-03-02T17:26:00+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.swt.SWTException",
      "message": "Invalid thread access",
      "elements": [
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "java.lang.Throwable.\u003cinit\u003e",
          "source": "Throwable.java"
        },
        {
          "method": "org.eclipse.swt.SWTException.\u003cinit\u003e",
          "source": "SWTException.java:87"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3349"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3272"
        },
        {
          "method": "org.eclipse.swt.SWT.error",
          "source": "SWT.java:3243"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.error",
          "source": "Widget.java:432"
        },
        {
          "method": "org.eclipse.swt.widgets.Widget.checkWidget",
          "source": "Widget.java"
        },
        {
          "method": "org.eclipse.swt.widgets.Table.getItems",
          "source": "Table.java:1695"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.AsynchronousTableViewer.doFindInputItem",
          "source": "AsynchronousTableViewer.java:150"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.findItems",
          "source": "StructuredViewer.java:725"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.findItem",
          "source": "StructuredViewer.java:701"
        },
        {
          "method": "org.eclipse.debug.internal.ui.model.viewers.AsynchronousModelViewer.findItem",
          "source": "AsynchronousModelViewer.java:965"
        },
        {
          "method": "org.eclipse.debug.internal.ui.model.viewers.AsynchronousModelViewer.internalRefresh",
          "source": "AsynchronousModelViewer.java:444"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer$7.run",
          "source": "StructuredViewer.java:1324"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.memory.renderings.AsyncTableRenderingViewer.preservingSelection",
          "source": "AsyncTableRenderingViewer.java:484"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1322"
        },
        {
          "method": "org.eclipse.jface.viewers.StructuredViewer.refresh",
          "source": "StructuredViewer.java:1281"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.memory.renderings.AbstractAsyncTableRendering.refresh",
          "source": "AbstractAsyncTableRendering.java:1704"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.memory.renderings.AsyncTableRenderingUpdatePolicy.handleMemoryBlockChanged",
          "source": "AsyncTableRenderingUpdatePolicy.java:130"
        },
        {
          "method": "org.eclipse.debug.internal.ui.views.memory.renderings.AsyncTableRenderingUpdatePolicy.modelChanged",
          "source": "AsyncTableRenderingUpdatePolicy.java:72"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy$1.run",
          "source": "AbstractModelProxy.java:70"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.provisional.AbstractModelProxy.fireModelChanged",
          "source": "AbstractModelProxy.java:74"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.MemoryBlockProxy$1.handleSuspend",
          "source": "MemoryBlockProxy.java:54"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.dispatchSuspend",
          "source": "EventHandlerModelProxy.java:200"
        },
        {
          "method": "org.eclipse.debug.internal.ui.viewers.update.EventHandlerModelProxy.handleDebugEvents",
          "source": "EventHandlerModelProxy.java:138"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventNotifier.run",
          "source": "DebugPlugin.java:1083"
        },
        {
          "method": "org.eclipse.core.runtime.SafeRunner.run",
          "source": "SafeRunner.java"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch",
          "source": "DebugPlugin.java:1115"
        },
        {
          "method": "org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run",
          "source": "DebugPlugin.java:344"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:58"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "121624",
      "date": "2006-02-28T20:41:01+01:00",
      "product": "Platform",
      "component": "Debug",
      "severity": "enhancement"
    }
  ],
  "groupId": "121624",
  "bugId": "121624",
  "date": "2005-12-20T20:32:37+01:00",
  "product": "Platform",
  "component": "Debug",
  "severity": "enhancement"
}