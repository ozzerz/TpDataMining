{
  "comments": [
    "I\u0027m getting a problem connecting to the X11 server on Linux RedHat.  This \ndoesn\u0027t happen on any other linux system i\u0027ve tried.  I\u0027m using the Apache \nBatik SVG toolkit so that I can render SVG images to be displayed in a GEF \napplication plug-in.\n\nWhen I run with the following it works:\n\u003eexport DISPLAY\u003d\u003cip\u003e:0.0\n\u003eeclipse -display :0.0 -vmargs -Xj9\n\nThere might be a second problem here with the eclipse launch executable.  \nAlthough it accepts the -display argument it still uses the env var.  I \nthought that according to X11 application standard behaviour the -display \nwould take precedence?\n\nIf I just set the DISPLAY env var and run:\n\u003eeclipse -vmargs Xj9\n\nI\u0027m getting the following stack trace (it doesn\u0027t seem to know the DISPLAY \nvariable value):\n \njava.lang.InternalError: Can\u0027t connect to X11 window server using\n \u0027:0.0\u0027 as the value of the DISPLAY\n variable.\n         at sun.awt.X11GraphicsEnvironment.initDisplay(Native Method)\n         at\n sun.awt.X11GraphicsEnvironment.\u003cclinit\u003e(X11GraphicsEnvironment.java:175)\n         at java.lang.Class.initializeImpl(Native Method)\n         at java.lang.Class.initialize(Class.java:350)\n         at java.lang.Class.forNameImpl(Native Method)\n         at java.lang.Class.forName(Class.java:116)\n         at\n java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment\n(GraphicsEnvironment.java:91)\n         at\n java.awt.image.BufferedImage.createGraphics(BufferedImage.java:1073)\n         at\n org.apache.batik.ext.awt.image.GraphicsUtil.createGraphics(Unknown\n Source)\n         at\n org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.genRect(Unknown\n Source)\n         at\n org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.copyData(Unknown\n Source)\n         at\n org.apache.batik.ext.awt.image.rendered.TileCacheRed.genRect(Unknown\n Source)\n         at\n org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.drawBlockInPlace \n(Unknown Source)\n         at org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.drawBlock\n(Unknown Source)\n at\n org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.copyToRasterByBlocks\n(Unknown Source)\n         at\n org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.copyData(Unknown \nSource)\n         at\n org.apache.batik.ext.awt.image.rendered.TranslateRed.copyData(Unknown\n Source)\n         at\n org.apache.batik.ext.awt.image.rendered.PadRed.copyData(Unknown\n Source)\n         at\n org.apache.batik.gvt.renderer.StaticRenderer.repaint(Unknown Source)\n         at\n org.apache.batik.gvt.renderer.StaticRenderer.repaint(Unknown Source)\n         at\n com.ibm.xtools.gef.internal.render.svg.ImageTranscoderEx.transcode(Unknown \nSource)\n         at\n org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(Unknown\n Source)\n         at\n com.ibm.xtools.gef.internal.render.svg.SVGImageConverter.setUpTranscoders\n(Unknown Source)\n at \ncom.ibm.xtools.gef.internal.render.svg.SVGImageConverter.renderSVGtoSWTImage\n(Unknown\n Source)\n at\n com.ibm.xtools.gef.internal.render.svg.SVGImageConverter.renderSVGtoSWTImage\n(Unknown\n Source)",
    "This looks to me like an AWT issue.  CAn you confirm that a simple AWT program \nworks in the configuration you describe?",
    "I have tried a simple plug-in that just creates an AWT BufferedImage and try \nto get the Graphics object from it.  I thought that that would give me the \nsame issue but that worked fine.",
    "While I do not think it is related to the stack trace, it is worth noting that\n\"-display FOO\" is not really standard, it was something that the Xt toolkit\nsupported.  GTK+ applications do not support -display FOO, but they do allow an\nalternate form --display\u003dFOO.  The eclipse launcher does not currently support\n-display or --display, and requires you to set the environment variable.",
    "This is an AWT bug."
  ],
  "commentCreationDates": [
    "2004-09-30T15:48:39+02:00",
    "2004-10-01T20:27:39+02:00",
    "2004-10-01T20:53:38+02:00",
    "2005-02-13T06:10:17+01:00",
    "2005-08-19T07:03:15+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.InternalError",
      "message": "Can\u0027t connect to X11 window server using  \u0027:0.0\u0027 as the value of the DISPLAY  variable.",
      "elements": [
        {
          "method": "sun.awt.X11GraphicsEnvironment.initDisplay",
          "source": "Native Method"
        },
        {
          "method": "sun.awt.X11GraphicsEnvironment.\u003cclinit\u003e",
          "source": "X11GraphicsEnvironment.java:175"
        },
        {
          "method": "java.lang.Class.initializeImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.initialize",
          "source": "Class.java:350"
        },
        {
          "method": "java.lang.Class.forNameImpl",
          "source": "Native Method"
        },
        {
          "method": "java.lang.Class.forName",
          "source": "Class.java:116"
        },
        {
          "method": "java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment",
          "source": "GraphicsEnvironment.java:91"
        },
        {
          "method": "java.awt.image.BufferedImage.createGraphics",
          "source": "BufferedImage.java:1073"
        },
        {
          "method": "org.apache.batik.ext.awt.image.GraphicsUtil.createGraphics",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.genRect",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.copyData",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.TileCacheRed.genRect",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.drawBlockInPlace",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.drawBlock",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.copyToRasterByBlocks",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.AbstractTiledRed.copyData",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.TranslateRed.copyData",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.ext.awt.image.rendered.PadRed.copyData",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.gvt.renderer.StaticRenderer.repaint",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.batik.gvt.renderer.StaticRenderer.repaint",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.xtools.gef.internal.render.svg.ImageTranscoderEx.transcode",
          "source": "Unknown  Source"
        },
        {
          "method": "org.apache.batik.transcoder.XMLAbstractTranscoder.transcode",
          "source": "Unknown  Source"
        },
        {
          "method": "com.ibm.xtools.gef.internal.render.svg.SVGImageConverter.setUpTranscoders",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.xtools.gef.internal.render.svg.SVGImageConverter.renderSVGtoSWTImage",
          "source": "Unknown  Source"
        },
        {
          "method": "com.ibm.xtools.gef.internal.render.svg.SVGImageConverter.renderSVGtoSWTImage",
          "source": "Unknown  Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "75386",
      "date": "2004-09-30T15:48:39+02:00",
      "product": "Platform",
      "component": "SWT",
      "severity": "major"
    }
  ],
  "groupId": "75386",
  "bugId": "75386",
  "date": "2004-09-30T15:48:39+02:00",
  "product": "Platform",
  "component": "SWT",
  "severity": "major"
}