{
  "comments": [
    "org.xml.sax.SAXParseException: Content is not allowed in prolog.\n        at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)\n        at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)\n        at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)\n        at org.eclipse.wst.common.internal.emf.utilities.DOMUtilities.createNewDocument(DOMUtilities.java:537)\n        at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDocument(EMF2DOMRenderer.java:154)\n        at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTree(EMF2DOMRenderer.java:125)\n        at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTreeIfNecessary(EMF2DOMRenderer.java:142)\n        at org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doSave(EMF2DOMRenderer.java:88)\n        at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.doSave(TranslatorResourceImpl.java:169)\n        at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:893)\n        at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:813)\n        at org.eclipse.wst.common.internal.emf.resource.ReferencedXMIResourceImpl.save(ReferencedXMIResourceImpl.java:276)\n        at org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.save(TranslatorResourceImpl.java:153)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.primSaveResource(EditModel.java:1300)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.saveResource(EditModel.java:1331)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.primSave(EditModel.java:1266)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel$1.run(EditModel.java:392)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1721)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.runSaveOperation(EditModel.java:482)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.save(EditModel.java:395)\n        at org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.saveIfNecessary(EditModel.java:418)\n        at org.eclipse.wst.common.componentcore.internal.StructureEdit.saveIfNecessary(StructureEdit.java:375)\n        at org.eclipse.wst.common.componentcore.internal.resources.VirtualComponent.create(VirtualComponent.java:282)\n        at org.eclipse.jst.j2ee.project.facet.UtilityFacetInstallDelegate.execute(UtilityFacetInstallDelegate.java:64)\n        at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.callDelegate(FacetedProject.java:726)\n        at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modifyInternal(FacetedProject.java:348)\n        at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.access$0(FacetedProject.java:247)\n        at org.eclipse.wst.common.project.facet.core.internal.FacetedProject$1.run(FacetedProject.java:232)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1721)\n        at org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modify(FacetedProject.java:237)\n        at org.eclipse.wst.common.componentcore.internal.operation.FacetProjectCreationOperation.execute(FacetProjectCreationOperation.java:77)\n        at org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.doExecute(ExtendableOperationImpl.java:163)\n        at org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.run(ExtendableOperationImpl.java:131)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1721)\n        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1741)\n        at org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:137)",
    "Can you provide some more details? These sorts of problems are sometimes caused by improper encoding. What encoding is being used on the ZOS platform? What JRE are you using? What settings for charset do you have in your eclpise dev. env. (You might attach a \u0027configuration file\u0027 which would have some of this info ... and that is available from the About Dialog). \n\nthanks. \n\n",
    "Added to the 1.0.2 hot list. Setting priority to p2 and target to 1.0.2 M102",
    "This is likely relately to zOS using EBCIDIC encoding (as default). \n\nI\u0027ve read \"on the web\" where its recommended that servers (such as tomcat) and java programs in general run with -Dfile.encoding\u003d\"ISO-8859-1\" for better results. \n\nHave you tried that? \n\n",
    "Thank you for your reply.\n\nI suppose the zOS machine its default encoding--big endian.  I have tried with the new -Dfile.encoding\u003d\"ISO-8859-1\" parameter to my JVM startup, but still experience the same problem.\n\nThis is the JDK I am using:\nUSER127:ZWASAXXX:/WebSphere/Base/jack\u003ejava -version\njava version \"1.4.2\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2)\nClassic VM (build 1.4.2, J2RE 1.4.2 IBM z/OS Persistent Reusable VM build cm142ifx-20060209 (SR4-1) (JIT enabled: jitc))\n\n\nRegards,\nJack",
    "Sorry, the correct JDK should be:\n\nJava version \u003d J2RE 1.5.0 IBM J9 2.3 z/OS s390-31 j9vmmz3123-20060301 (JIT enabled)\n\n\nRegards,\nJack",
    "03/16 WTP status meeting - There are concerns that this may not get fixed in the 1.0.2 timeframe. Will continue to investigate.",
    "Ok, I think I see the bug in our code. Will document and investigate further, but from knowing our bug ... I can see that using -Dfile.encoding\u003d\"UTF-8\" might work-around your immediate problem (but ... not sure of \"side effects\", so would still want to fix our code!). \n\n",
    "CC\u0027ing Chuck to better understand the use and constraints of the \"dummy document\" being created in this context. Mostly need to know if its really \"dummy\" or if it is being used elsewhere. \n\nThe main problem is that a \"dummy\" document with some minimal content is being created using Strings, byte arrays, and PrintWriters ... the end result is that all this ends up using the \"default encoding\" ... but in our dummy content we tell it we are using UTF-8! So, later, Xerces takes us at our word that its UTF-8, but ... doesn\u0027t read it right since its not. (I think not often seen, since for most \"default encodings\" it would be the same ... but, not on zOS! \n\n",
    "I set file.encoding\u003d\"UTF-8\" in my JVM startup parameter and could still see the same problem.\n\nRegards,\nJack\n",
    "(In reply to comment #9)\n\u003e I set file.encoding\u003d\"UTF-8\" in my JVM startup parameter and could still see the\n\u003e same problem.\n\u003e \n\nHm, ok, maybe more than one problem. Which version of WTP are you using? \n\n",
    "WAS 6.1 for zOS should be using WTP 1.0.2, same as what AST is currently using.\n Thank you for your help.\n\nRegards,\nJack\n",
    "Created an attachment (id\u003d36524)\na possible fixed jar to test\n\nJack, I don\u0027t have easy (or any?) access to a zOS machine ... so it\u0027d be very helpful if you could test my hypostheis in comment #7. \n\nYou can try by adding the attached plugin to the \"plugins\" directory. \n(you should not have to move/copy the old one, but you can if you want to .. just don\u0027t delete it :) \n\nYou should also re-start eclipse with -clean (at leaset once after putting the jar in the plugins directory). \n\nIf I\u0027m right, probably no need to use -Dfile.encoding. \n\nBut, as I mentioned, If the work around I mentioned didn\u0027t fix the problem, this this may not either and there may be another problem also. If this still produced a stack trace, be sure to attach it to bug -- even if it looks similar, may give another hint. \n\nThanks. \n\n\n",
    "Created an attachment (id\u003d36526)\npatch file containing improved handling of charset\n\n",
    "Chuck ... you\u0027ll need to give this one attension. My patch didn\u0027t help Jack, but I\u0027m not sure I know how to create a patch for the product (version) he\u0027s using. \n\nDo you? Any other ideas on source of the bug? \nPerhaps some of that old code for old xerces could be gotten rid of? \nBut, I\u0027m just guessing now. \n\n\n\n",
    "Jack,\n\nI don\u0027t see us being able to do anything here in the release.  How critical is this?  Without help recreating the problem, we can\u0027t move forward here.\n\n",
    "Jack, let\u0027s try one more diagnosis. If you are able to try it quickly, maybe something obvious will be apparent for 1.0.2. I\u0027m going to attach a small \"test jar\", that doesn\u0027t depend on Eclilpse at all ... just prints out some info about your system, and \"makes sure\" it can parse a DOM with your VM. \n\nTo use, you just need to execute something like following on the command line\njava -jar DOMUtility.jar \u003e out.txt\nand ... send me (or attach here) the out.txt file. It lists system properties, supported encodings, supported locales, and finally, creates and parses a small DOM document, and displays the \"text\" it thinks it has. \n\nPlease try with several of the VM\u0027s for your system (1.4.2, 1.5) to see if they behave similarly. \n\nThanks. \n\n\n",
    "Created an attachment (id\u003d37723)\nsmall test program to help diagnose osz problem\n\nAlmost forgot to attach the Jar! \n\nSo, easy to run, try \njava -jar DOMUtility.jar \u003e out.txt",
    "I\u0027ll hold ownership, for now, since seems to be related to DOM\u0027s and VM\u0027s and encoding.\n\nBut, as Chuck said, since zOS is not something we routinely work with, we\u0027ll need some help debugging.",
    "I\u0027ll set to \"remind\" state for now, indicating we are waiting for debugging info from you, Jack. Please re-open when you attach the output from the the little debug utility I provided. Thanks much. \n\n",
    "This bug is being moved to the \u0027closed\u0027 state since it has been in the \u0027remind\u0027 state for a so long it is assume it is no longer a problem or otherwise not a useful bugzilla entry. \n\nIf this semi-automatic processing is in error, please re-open, or open another bug. \n\n",
    "Reopening, in order to put into a valid closed state as remind is now deprecated, and closed, remind, does not make much sense.",
    "Resolving as won\u0027t fix, as these had previously been closed out, if this is incorrect, please provide more data and reopen.\n\nThanks,",
    "Re-closing appropriately with valid state."
  ],
  "commentCreationDates": [
    "2006-03-14T23:09:08+01:00",
    "2006-03-15T22:11:28+01:00",
    "2006-03-16T16:41:01+01:00",
    "2006-03-16T19:44:30+01:00",
    "2006-03-16T21:25:10+01:00",
    "2006-03-16T21:42:14+01:00",
    "2006-03-17T15:37:36+01:00",
    "2006-03-17T16:03:05+01:00",
    "2006-03-17T16:14:19+01:00",
    "2006-03-17T16:57:09+01:00",
    "2006-03-17T18:53:11+01:00",
    "2006-03-17T19:02:30+01:00",
    "2006-03-17T19:51:42+01:00",
    "2006-03-17T20:18:20+01:00",
    "2006-03-17T21:20:45+01:00",
    "2006-04-03T23:33:36+02:00",
    "2006-04-05T09:33:04+02:00",
    "2006-04-05T13:05:17+02:00",
    "2006-04-05T18:11:46+02:00",
    "2006-04-05T18:13:20+02:00",
    "2006-09-23T05:28:12+02:00",
    "2007-07-30T17:13:06+02:00",
    "2007-07-30T17:17:45+02:00",
    "2007-07-30T17:19:13+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.xml.sax.SAXParseException",
      "message": "Content is not allowed in prolog.",
      "elements": [
        {
          "method": "org.apache.xerces.parsers.DOMParser.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.apache.xerces.jaxp.DocumentBuilderImpl.parse",
          "source": "Unknown Source"
        },
        {
          "method": "javax.xml.parsers.DocumentBuilder.parse",
          "source": "Unknown Source"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.utilities.DOMUtilities.createNewDocument",
          "source": "DOMUtilities.java:537"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDocument",
          "source": "EMF2DOMRenderer.java:154"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTree",
          "source": "EMF2DOMRenderer.java:125"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.createDOMTreeIfNecessary",
          "source": "EMF2DOMRenderer.java:142"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.EMF2DOMRenderer.doSave",
          "source": "EMF2DOMRenderer.java:88"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.doSave",
          "source": "TranslatorResourceImpl.java:169"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.save",
          "source": "ResourceImpl.java:893"
        },
        {
          "method": "org.eclipse.emf.ecore.resource.impl.ResourceImpl.save",
          "source": "ResourceImpl.java:813"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.ReferencedXMIResourceImpl.save",
          "source": "ReferencedXMIResourceImpl.java:276"
        },
        {
          "method": "org.eclipse.wst.common.internal.emf.resource.TranslatorResourceImpl.save",
          "source": "TranslatorResourceImpl.java:153"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.primSaveResource",
          "source": "EditModel.java:1300"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.saveResource",
          "source": "EditModel.java:1331"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.primSave",
          "source": "EditModel.java:1266"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel$1.run",
          "source": "EditModel.java:392"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1721"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.runSaveOperation",
          "source": "EditModel.java:482"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.save",
          "source": "EditModel.java:395"
        },
        {
          "method": "org.eclipse.wst.common.internal.emfworkbench.integration.EditModel.saveIfNecessary",
          "source": "EditModel.java:418"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.StructureEdit.saveIfNecessary",
          "source": "StructureEdit.java:375"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.resources.VirtualComponent.create",
          "source": "VirtualComponent.java:282"
        },
        {
          "method": "org.eclipse.jst.j2ee.project.facet.UtilityFacetInstallDelegate.execute",
          "source": "UtilityFacetInstallDelegate.java:64"
        },
        {
          "method": "org.eclipse.wst.common.project.facet.core.internal.FacetedProject.callDelegate",
          "source": "FacetedProject.java:726"
        },
        {
          "method": "org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modifyInternal",
          "source": "FacetedProject.java:348"
        },
        {
          "method": "org.eclipse.wst.common.project.facet.core.internal.FacetedProject.access$0",
          "source": "FacetedProject.java:247"
        },
        {
          "method": "org.eclipse.wst.common.project.facet.core.internal.FacetedProject$1.run",
          "source": "FacetedProject.java:232"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1721"
        },
        {
          "method": "org.eclipse.wst.common.project.facet.core.internal.FacetedProject.modify",
          "source": "FacetedProject.java:237"
        },
        {
          "method": "org.eclipse.wst.common.componentcore.internal.operation.FacetProjectCreationOperation.execute",
          "source": "FacetProjectCreationOperation.java:77"
        },
        {
          "method": "org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.doExecute",
          "source": "ExtendableOperationImpl.java:163"
        },
        {
          "method": "org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.run",
          "source": "ExtendableOperationImpl.java:131"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1721"
        },
        {
          "method": "org.eclipse.core.internal.resources.Workspace.run",
          "source": "Workspace.java:1741"
        },
        {
          "method": "org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute",
          "source": "ExtendableOperationImpl.java:137"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "131845",
      "date": "2006-03-14T23:09:08+01:00",
      "product": "Web Tools",
      "component": "wst.common",
      "severity": "blocker"
    }
  ],
  "groupId": "131845",
  "bugId": "131845",
  "date": "2006-03-14T23:09:08+01:00",
  "product": "Web Tools",
  "component": "wst.common",
  "severity": "blocker"
}