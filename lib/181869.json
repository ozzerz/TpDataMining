{
  "comments": [
    "If an annotation is defined with an enum value type, or enum array value type, and an instance of the annotation is incorrectly given an annotation value instead, processing it results in an IllegalArgumentException.\n\n  enum Enum { A, B }\n  @interface Anno { Enum[] value(); }\n\n  @Anno(@Anno)\n  class X {}\n\nprocessed with:\n\n  Declaration d \u003d _env.getTypeDeclaration(\"X\");\n  Anno anno \u003d d.getAnnotation(Anno.class);\n  Enum[] enumval \u003d anno.value();\n\nproduces:\n\n\njava.lang.IllegalArgumentException: [LEnum; is not an interface\n\tat java.lang.reflect.Proxy.getProxyClass(Proxy.java:362)\n\tat java.lang.reflect.Proxy.newProxyInstance(Proxy.java:581)\n\tat org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler._getReflectionValue(AnnotationInvocationHandler.java:218)\n\tat org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.getReflectionValueWithTypeConversion(AnnotationInvocationHandler.java:117)\n\tat org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.invoke(AnnotationInvocationHandler.java:109)\n\tat $Proxy0.value(Unknown Source)\n\tat org.example.processor.internal.Processor.process(Processor.java:57)\n[...]\n\nThere is a similar situation when the value is a Class object rather than an annotation:\n\njava.lang.IllegalStateException: sourceValue is a type binding.\n\tat org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler._getReflectionValue(AnnotationInvocationHandler.java:203)\n\tat org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.getReflectionValueWithTypeConversion(AnnotationInvocationHandler.java:117)\n\tat org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.invoke(AnnotationInvocationHandler.java:109)\n\tat $Proxy0.value(Unknown Source)\n\tat org.example.processor.internal.Processor.process(Processor.java:55)\n\nNote that both situations involve incorrect source code; but we should not be throwing an exception, we should be returning null from the anno.value() call.",
    "Created an attachment (id\u003d66788)\nproposed patch\n\nProposed patch returns null from method invocation handler when actual value is annotation binding and expected type is anything other than annotation type.",
    "+1 Looks good.",
    "Fixed for RC1.  We now return null in this scenario, which is analogous to what we would do if the value were some other non-array object.  Test case added to ExceptionHandlingTests."
  ],
  "commentCreationDates": [
    "2007-04-11T02:07:22+02:00",
    "2007-05-11T01:30:02+02:00",
    "2007-05-11T01:48:32+02:00",
    "2007-05-11T01:51:34+02:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.IllegalArgumentException",
      "message": "[LEnum; is not an interface",
      "elements": [
        {
          "method": "java.lang.reflect.Proxy.getProxyClass",
          "source": "Proxy.java:362"
        },
        {
          "method": "java.lang.reflect.Proxy.newProxyInstance",
          "source": "Proxy.java:581"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler._getReflectionValue",
          "source": "AnnotationInvocationHandler.java:218"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.getReflectionValueWithTypeConversion",
          "source": "AnnotationInvocationHandler.java:117"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.invoke",
          "source": "AnnotationInvocationHandler.java:109"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "181869",
      "date": "2007-04-11T02:07:22+02:00",
      "product": "JDT",
      "component": "APT",
      "severity": "normal"
    },
    {
      "exceptionType": "java.lang.IllegalStateException",
      "message": "sourceValue is a type binding.",
      "elements": [
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler._getReflectionValue",
          "source": "AnnotationInvocationHandler.java:203"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.getReflectionValueWithTypeConversion",
          "source": "AnnotationInvocationHandler.java:117"
        },
        {
          "method": "org.eclipse.jdt.apt.core.internal.env.AnnotationInvocationHandler.invoke",
          "source": "AnnotationInvocationHandler.java:109"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "181869",
      "date": "2007-04-11T02:07:22+02:00",
      "product": "JDT",
      "component": "APT",
      "severity": "normal"
    }
  ],
  "groupId": "181869",
  "bugId": "181869",
  "date": "2007-04-11T02:07:22+02:00",
  "product": "JDT",
  "component": "APT",
  "severity": "normal"
}