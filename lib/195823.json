{
  "comments": [
    "ClassFormatException in C:/jars/tudojar.jar|com/ibm/db2os390/sqlj/custom/DB2SQLJProfile.class. Please report this issue to JDT/Core including the problematic document\n\norg.eclipse.jdt.internal.compiler.classfmt.ClassFormatException\n\tat org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.\u003cinit\u003e(ClassFileReader.java:342)\n\tat org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.\u003cinit\u003e(ClassFileReader.java:121)\n\tat org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.indexDocument(BinaryIndexer.java:622)\n\tat org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument(JavaSearchParticipant.java:74)\n\tat org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument(IndexManager.java:314)\n\tat org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execute(AddJarFileToIndex.java:197)\n\tat org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:392)\n\tat java.lang.Thread.run(Unknown Source)",
    "This message was not issued in 3.2.\nWould it be possible to get the corresponding .class file for further investigation?\nThanks.\n",
    "If you don\u0027t provide this .class file (C:/jars/tudojar.jar|com/ibm/db2os390/sqlj/custom/DB2SQLJProfile.class), there is nothing I can do.",
    "Created an attachment (id\u003d73490)\njdbc driver\n\n",
    "Created an attachment (id\u003d73491)\nlicence for jdbc driver\n\n",
    "Thanks for the data.\nHowever it looks like these files are corrupted. Even javap cannot read them.\nThe magic number (0xCAFEBABE) is not there for the entry com/ibm/db2os390/sqlj/custom/DB2SQLJProfile.class.\nSince the file is corrupted, the binary indexer is right to reject it.\nWe could silently do it instead of logging an error and log an error only in debug mode.",
    "Philippe,\n\nSince corrupted .class files seem to be more common than expected, I think we should silently ignore them and log an error only in debug mode.\nWhat do you think ?",
    "Being resilient is good. I would also vote for logging rather than raising an exception which looks more our bug.\n\nBTW - how do we handle this file when reconciling against it ? Do we ignore it as well ?",
    "Right now we simply log the error. If the user doesn\u0027t look in the error view, it won\u0027t know that the indexer failed.\nWe cannot open this .class file using the class file reader. It seems that the .class file is corrupted since the magic number (0xCAFEBABE) that starts any .class file is not there.\nSo we cannot open it successfully in the class file editor, we cannot index it, etc.\nI would say that we should only log in debug mode or simply leaving it as is and then the user knows that something is wrong with this .class file.",
    "*** Bug 205596 has been marked as a duplicate of this bug. ***",
    "Created an attachment (id\u003d80059)\nProposed fix\n\n",
    "Released for 3.4M3.\nNo regression test added since this concerns only logging for corrupted .class files.\nThe logging is preserved in debug mode, and ignore otherwise.",
    "I changed the message for \"ClassFormatException in .... This document seems to be a corrupted .class file. Please report this issue against the .class file vendor\".\nHopefully this is better than the previous message.",
    "I released a new change. The error is logged even if the debug mode is off, but it is logged as a warning instead of an error.\nThe message has been changed to:\n\"The Java indexing could not index \" + this.document.getPath() + \". This .class file doesn\u0027t follow the class file format specification. Please report this issue against the .class file vendor\"\n",
    "Verified for 3.4M3 using I20071029-0010"
  ],
  "commentCreationDates": [
    "2007-07-09T15:21:52+02:00",
    "2007-07-09T15:25:22+02:00",
    "2007-07-10T21:00:14+02:00",
    "2007-07-11T00:26:06+02:00",
    "2007-07-11T00:26:55+02:00",
    "2007-07-11T03:08:45+02:00",
    "2007-07-17T15:44:00+02:00",
    "2007-07-17T15:57:29+02:00",
    "2007-07-17T16:03:02+02:00",
    "2007-10-10T17:33:42+02:00",
    "2007-10-10T17:40:32+02:00",
    "2007-10-10T17:41:45+02:00",
    "2007-10-15T16:13:15+02:00",
    "2007-10-15T19:20:02+02:00",
    "2007-10-29T17:28:07+01:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.\u003cinit\u003e",
          "source": "ClassFileReader.java:342"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.\u003cinit\u003e",
          "source": "ClassFileReader.java:121"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer.indexDocument",
          "source": "BinaryIndexer.java:622"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.indexDocument",
          "source": "JavaSearchParticipant.java:74"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.indexing.IndexManager.indexDocument",
          "source": "IndexManager.java:314"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execute",
          "source": "AddJarFileToIndex.java:197"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:392"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "195823",
      "date": "2007-07-09T15:21:52+02:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "195823",
  "bugId": "195823",
  "date": "2007-07-09T15:21:52+02:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}