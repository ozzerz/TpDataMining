{
  "comments": [
    "\"Call Hierarchy\" show no result for \"read()\"\nif rename \"read\" to \"readxxxx\", result show up. \n[code]:\npublic class CA {\n public void read(){\n \tSystem.out.println(\"read\");\n }\n}\npublic class CB {\n\tpublic void callRead(){\n\t\tCA ca \u003d new CA();\n\t\tca.read();\n\t}\n}",
    "I cannot reproduce using 3.1 M4.\nSo, some questions to try to understand:\n1) Which build are you using?\n2) When you search references to this method instead of opening Call Hierarchy\nview, do you find any match?\n3) Does this problem happen if you try it in a brand new workspace?\n",
    "\u003e 1) Which build are you using?\n eclipse-SDK-3.1M3-win32\n\u003e 2) When you search references to this method instead of opening Call  \n\u003e Hierarchy view, do you find any match?\n yes, i found matches in class CB(see my sample code)\n\u003e 3) Does this problem happen if you try it in a brand new workspace?\n yes, the problem happended in new instance(which i unzip from eclipse-SDK-\n3.1M3-win32.zip) and new workspace.\n\ni tried in a 3.0 build, it cannot be reproduced.\nmaybe it only exists in 3.1 M3.\n\n",
    "Thanks for the answers.\nThis a duplicate of bug 73784 \u003d\u003e this issue has been fixed for 3.1 M4.\n\n\n*** This bug has been marked as a duplicate of 73784 ***",
    "hi, this time method named \"start\" has the problem!\nReproducable in 3.1 M4.\n[code]\n\npublic class CA {\n\tprivate void run() {\n\t\tCB b \u003d new CB();\n\t\tb.start();\n\t}\n}\n\npublic class CB {\n\tpublic void start() {\t\t\n\t}\n}\n[/code]\n\nsearch references to this method has matches but opening Call Hierarchy has no\nmatches.\n\n",
    "and maybe the log will be helpful:\n\n!SESSION 2005-01-19 14:42:03.582 -----------------------------------------------\neclipse.buildId\u003dI20041216-2000\njava.version\u003d1.5.0-rc\njava.vendor\u003dSun Microsystems Inc.\nBootLoader constants: OS\u003dwin32, ARCH\u003dx86, WS\u003dwin32, NL\u003dzh_CN\nCommand-line arguments:  -os win32 -ws win32 -arch x86\n\n!ENTRY org.eclipse.jdt.ui 4 10001 2005-01-19 14:50:58.850\n!MESSAGE Internal Error\n!STACK 0\njava.lang.NullPointerException\n\tat\norg.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck(TypeVariableBinding.java:72)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve(ParameterizedTypeBinding.java:574)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:53)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass(BinaryTypeBinding.java:775)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:973)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:935)\n\tat\norg.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(SingleTypeReference.java:42)\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:141)\n\tat\norg.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(TypeReference.java:104)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(ClassScope.java:1067)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass(ClassScope.java:725)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy(ClassScope.java:862)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy(CompilationUnitScope.java:243)\n\tat\norg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings(LookupEnvironment.java:195)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:826)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:890)\n\tat\norg.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1007)\n\tat\norg.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)\n\tat\norg.eclipse.jdt.internal.core.search.SearchBasicEngine.findMatches(SearchBasicEngine.java:196)\n\tat\norg.eclipse.jdt.internal.core.search.SearchBasicEngine.search(SearchBasicEngine.java:382)\n\tat org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:512)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper.findChildren(CallerMethodWrapper.java:71)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.performSearch(MethodWrapper.java:253)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.doFindChildren(MethodWrapper.java:194)\n\tat\norg.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.getCalls(MethodWrapper.java:76)\n\tat\norg.eclipse.jdt.internal.ui.callhierarchy.DeferredMethodWrapper.getCalls(DeferredMethodWrapper.java:62)\n\tat\norg.eclipse.jdt.internal.ui.callhierarchy.DeferredMethodWrapper.fetchDeferredChildren(DeferredMethodWrapper.java:80)\n\tat\norg.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:168)\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)",
    "This new problem already has been referenced in bug 83083.\n\n\n*** This bug has been marked as a duplicate of 83083 ***",
    "However, I was not able to reproduce the NPE using 3.1 M4 and Call Hierarchy\nview correctly shows one match...\nDid I miss something?\n",
    "Fr?d?ric:\ni\u0027m curious and wondered of the bug.\nif not bother you, would you explain why it is sensitive to specific word like \n\"start\", and will not happend to words even has the same length?\nthanks a lot.",
    "I\u0027m not absolutely sure as I cannot reproduce your comment 4 issue following\nyour steps...\nHowever, the \"theoritical\" explanation is that search engine works in two\npasses. First pass: it looks in search scope index files whether there are\npotential matches or not. Second pass: it compiles these file to resolve and\nlocate matches in these files.\nSearch engine finds \"start\" method in 1.5.0 library, so it compiles and resolves\nthese files... and broke on this NPE!\nWhen you change the name and search for \"startxxx\", there\u0027s no potential matches\nin 1.5.0 library, so no need to compile and avoid the issue :-)\nHope this answer your question."
  ],
  "commentCreationDates": [
    "2004-12-27T09:14:02+01:00",
    "2004-12-28T15:42:59+01:00",
    "2004-12-29T01:41:04+01:00",
    "2004-12-29T10:36:32+01:00",
    "2005-01-19T06:52:35+01:00",
    "2005-01-19T06:59:31+01:00",
    "2005-01-19T09:47:38+01:00",
    "2005-01-19T10:02:01+01:00",
    "2005-01-25T01:40:03+01:00",
    "2005-01-25T10:08:14+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.NullPointerException",
      "elements": [
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding.boundCheck",
          "source": "TypeVariableBinding.java:72"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.resolve",
          "source": "ParameterizedTypeBinding.java:574"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType",
          "source": "BinaryTypeBinding.java:53"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass",
          "source": "BinaryTypeBinding.java:775"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:973"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle",
          "source": "ClassScope.java:935"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding",
          "source": "SingleTypeReference.java:42"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType",
          "source": "TypeReference.java:141"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType",
          "source": "TypeReference.java:104"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype",
          "source": "ClassScope.java:1067"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass",
          "source": "ClassScope.java:725"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy",
          "source": "ClassScope.java:862"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy",
          "source": "CompilationUnitScope.java:243"
        },
        {
          "method": "org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.completeTypeBindings",
          "source": "LookupEnvironment.java:195"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:826"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:890"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches",
          "source": "MatchLocator.java:1007"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches",
          "source": "JavaSearchParticipant.java:94"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.SearchBasicEngine.findMatches",
          "source": "SearchBasicEngine.java:196"
        },
        {
          "method": "org.eclipse.jdt.internal.core.search.SearchBasicEngine.search",
          "source": "SearchBasicEngine.java:382"
        },
        {
          "method": "org.eclipse.jdt.core.search.SearchEngine.search",
          "source": "SearchEngine.java:512"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper.findChildren",
          "source": "CallerMethodWrapper.java:71"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.performSearch",
          "source": "MethodWrapper.java:253"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.doFindChildren",
          "source": "MethodWrapper.java:194"
        },
        {
          "method": "org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.getCalls",
          "source": "MethodWrapper.java:76"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.callhierarchy.DeferredMethodWrapper.getCalls",
          "source": "DeferredMethodWrapper.java:62"
        },
        {
          "method": "org.eclipse.jdt.internal.ui.callhierarchy.DeferredMethodWrapper.fetchDeferredChildren",
          "source": "DeferredMethodWrapper.java:80"
        },
        {
          "method": "org.eclipse.ui.progress.DeferredTreeContentManager$1.run",
          "source": "DeferredTreeContentManager.java:168"
        },
        {
          "method": "org.eclipse.core.internal.jobs.Worker.run",
          "source": "Worker.java:66"
        }
      ],
      "number": 0,
      "commentIndex": 5,
      "bugId": "81916",
      "duplicateId": "83083",
      "date": "2005-01-19T06:59:31+01:00",
      "product": "JDT",
      "component": "Core",
      "severity": "normal"
    }
  ],
  "groupId": "83083",
  "bugId": "81916",
  "duplicateId": "83083",
  "date": "2004-12-27T09:14:02+01:00",
  "product": "JDT",
  "component": "Core",
  "severity": "normal"
}