{
  "comments": [
    "This was found in hyades 3.3. I am not sure if it is still the case of TPTP4.2.\n\nThe org.eclipse.hyades.models.common.testprofile.impl.FacadeUtil dynamically contributes its own resource factory implementation for XML resource with extension name .xmi to global resource registry, as shown in the following code:\n\nFacadaUtil.getType():\n\nResource.Factory.Registry reg \u003d Resource.Factory.Registry.INSTANCE;\nMap m \u003d reg.getExtensionToFactoryMap();\nm.put(\"xmi\", new FacadeResourceFactoryImpl());  --\u003e add into global registry !\t\n\n\nBecause .xmi is a common extension used by many other components, this contribution will have side effect for the components using .xmi resource when saving and loading resource. They expect the Eclipse default XMIResourceFactoryImpl, they will get FacadeResourceFactoryImpl from registry. \n\nFor example, this happens for iSeries Remote system explorer toolkit which uses the following code to get factory:\n\nResource.Factory.Registry reg \u003d Resource.Factory.Registry.INSTANCE;        Resource.Factory resFactory \u003d reg.getFactory(fileURI);\n\nWhile it can be argued that the components should varidate the resource factory, the resource contribution of .xmi to global registry from hyades will cause unexpect behavior in the end product.",
    "Scott please check if this extension it is still required, I don\u0027t think we should use \"XMI\" file extension anyway.",
    "Exactly which model resource has received this .xmi extension. \nMarius is correct, we should never use that file extension. Our pattern is the model domain followed by xmi .trcxmi as an example.",
    "Was this discovered by code inspection, or has the behavior actually been observed?\n\nI looked at the code in question, and it was added several years ago by a contributor who is not currently on the project.  It appears to be supporting a feature that has never really been exposed by TPTP.\n\nI agree that no one should be registering a custom resource factory for the .xmi extension, and I agree that this code should be removed.  I\u0027m wondering, though, if the code is ever called today (which would reduce the severity of the problem.)\n\nFacadeUtil.getType() appears to be called only by CFGInstanceImpl.setType(), which appears to be called by -- no one.\n\nCan you please confirm if you have seen this code called, or if you just happened upon this code?",
    "When I investigated an iSeries Remote system explorer ploblem, I noticed there were exception entries in .log which involved FacadeResourceFactoryImpl and FacadeResourceImpl.\n\n1) when workbench shut down, iSeries plugin tries to save xmi resource:\n\njava.lang.ClassNotFoundException: The class \"org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl\" cannot be loaded because the system is shutting down and the plug-in \"org.eclipse.hyades.models.common\" has already been stopped.\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.shouldActivateFor(EclipseClassLoader.java:147)\n\tat org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:62)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:371)\n\tat org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:402)\n\tat org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:93)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:560)\n\tat org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceFactoryImpl.createResource(Unknown Source)\n\tat com.ibm.etools.systems.model.SystemMOFHelpers.save(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterImpl.save(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolImpl.saveToOneFile(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolImpl.save(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolManagerImpl.save(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolManagerImpl.save(Unknown Source)\n\tat com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.saveFilterPools(Unknown Source)\n\tat com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.saveFilterPools(Unknown Source)\n\tat com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.save(Unknown Source)\n\tat com.ibm.etools.systems.core.SystemPlugin.disconnectAll(Unknown Source)\n\tat com.ibm.etools.systems.core.SystemPlugin.stop(Unknown Source)\n\nNoticed the callstacks:\n\nat org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceFactoryImpl.createResource(Unknown Source)\nat com.ibm.etools.systems.model.SystemMOFHelpers.save(Unknown Source)\n\nThe classes in packages with prefix com.ibm.etools.systems are from iSeries tools.\n\n2) when iseries systemplugin starts, it tries to restore xmi resource:\n\nat org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(Unknown Source)\n\tat org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(Unknown Source)\n\tat org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl.doLoad(Unknown Source)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(Unknown Source)\n\tat org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(Unknown Source)\n\tat com.ibm.etools.systems.model.SystemMOFHelpers.restore(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolImpl.restoreFromOneFile(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolImpl.restore(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolManagerImpl.initialize(Unknown Source)\n\tat com.ibm.etools.systems.filters.impl.SystemFilterPoolManagerImpl.createSystemFilterPoolManager(Unknown Source)\n\tat com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.getFilterPoolManager(Unknown Source)\n\tat com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.restoreAllFilterPoolManagersForAllProfiles(Unknown Source)\n\tat com.ibm.etools.systems.subsystems.impl.SubSystemFactoryProxy.getSubSystemFactory(Unknown Source)\n\tat com.ibm.etools.systems.model.impl.SystemRegistryImpl.getSubSystems(Unknown Source)\n\tat com.ibm.etools.systems.model.impl.SystemRegistryImpl.getSubSystems(Unknown Source)\n\tat com.ibm.etools.systems.model.impl.SystemRegistryImpl.getConnectionChildren(Unknown Source)\n\tat com.ibm.etools.systems.core.ui.view.SystemViewConnectionAdapter.getChildren(Unknown Source)\n\tat com.ibm.etools.systems.core.ui.view.SystemViewLabelAndContentProvider.getChildren(Unknown Source)\n\nAlso noticed the call stack for FacadeResourceImpl in above trace:\n\n\tat org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl.doLoad(Unknown Source)\n   \nI searched the hyades 3.3 code and did not find many places to use FacadeResourceFactoryImpl or FacadeResourceImpl. The code in FacadeUtil.getType()looks like a reason to me for this problem but I am not sure. The bottom line is iSeries plugin somehow invoked FacadeResourceFactoryImpl and FacadeResourceImpl when saved and restored .xmi file.\n\nWhich hyades feature will use FacadeResourceFactoryImpl or FacadeResourceImpl ?\n",
    "Got a chance to debug this problem. IT looks like only happens when I enable the RAD capability Tester-\u003eFunction Test. \n\nWhen stepping into the iSeries tool\u0027s SystemMOFHelper class, the EMF extensionToFactoryMap did have an entry for .xmi with value FacadeResourceFactoryImpl.\n\nMaybe this is a side effect of Rational Functional Tester plugin or some hyades API it invoked.\n\nSent a note to Rational Functional Team to double check. ",
    "Created an attachment (id\u003d33785)\nscreen capture of .xmi entry in EMF extensionToFactoryMap\n\nAttached the screen capture of .xmi extension in EMF extensionToFactoryMap from debugger.",
    "According to the suggestion of William at Rational Functinal Tester team, removed the plugin in RAD \u003cinstall\u003e\\FunctionalTester\\eclipse\\plugins\\com.ibm.rational.test.mt.execution_6.1.1 and tried the scenario again. The problem went away.\n\nSo it is related with this plugin and the way it invokes Hyades.",
    "Note from William:\n\u003cWilliamNote\u003e\n\n  RMT relies on XMI being in the extensions map, but the execution support should not require this dependency when run outside the RCP shell that RMT runs in.  I\u0027ll create a defect to remove this setting in the execution plugin.  You have a simple work-around until an update gets pushed out.\n\n\u003c/WilliamNote\u003e",
    "\nLooks like nothing on the TPTP side to fix, thanks everyone."
  ],
  "commentCreationDates": [
    "2006-01-24T18:58:33+01:00",
    "2006-01-24T20:18:52+01:00",
    "2006-01-24T21:32:55+01:00",
    "2006-01-24T22:00:17+01:00",
    "2006-01-25T17:09:07+01:00",
    "2006-01-30T15:05:33+01:00",
    "2006-01-30T15:08:44+01:00",
    "2006-01-31T21:01:41+01:00",
    "2006-01-31T21:22:45+01:00",
    "2006-02-13T15:48:05+01:00"
  ],
  "traces": [
    {
      "exceptionType": "java.lang.ClassNotFoundException",
      "message": "The class \"org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceImpl\" cannot be loaded because the system is shutting down and the plug-in \"org.eclipse.hyades.models.common\" has already been stopped.",
      "elements": [
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.shouldActivateFor",
          "source": "EclipseClassLoader.java:147"
        },
        {
          "method": "org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass",
          "source": "EclipseClassLoader.java:62"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass",
          "source": "BundleLoader.java:371"
        },
        {
          "method": "org.eclipse.osgi.framework.internal.core.BundleLoader.findClass",
          "source": "BundleLoader.java:402"
        },
        {
          "method": "org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass",
          "source": "AbstractClassLoader.java:93"
        },
        {
          "method": "java.lang.ClassLoader.loadClass",
          "source": "ClassLoader.java:560"
        },
        {
          "method": "org.eclipse.hyades.models.common.facades.behavioral.impl.FacadeResourceFactoryImpl.createResource",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.model.SystemMOFHelpers.save",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.filters.impl.SystemFilterImpl.save",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.filters.impl.SystemFilterPoolImpl.saveToOneFile",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.filters.impl.SystemFilterPoolImpl.save",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.filters.impl.SystemFilterPoolManagerImpl.save",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.filters.impl.SystemFilterPoolManagerImpl.save",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.saveFilterPools",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.saveFilterPools",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.subsystems.impl.SubSystemFactoryImpl.save",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.core.SystemPlugin.disconnectAll",
          "source": "Unknown Source"
        },
        {
          "method": "com.ibm.etools.systems.core.SystemPlugin.stop",
          "source": "Unknown Source"
        }
      ],
      "number": 0,
      "commentIndex": 4,
      "bugId": "125051",
      "date": "2006-01-25T17:09:07+01:00",
      "product": "TPTP Profiling",
      "component": "Platform.Model",
      "severity": "normal"
    }
  ],
  "groupId": "125051",
  "bugId": "125051",
  "date": "2006-01-24T18:58:33+01:00",
  "product": "TPTP Profiling",
  "component": "Platform.Model",
  "severity": "normal"
}