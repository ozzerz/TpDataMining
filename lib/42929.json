{
  "comments": [
    "Well, using 1.2.0.40 the .log grows big on parser exceptions when it doesn\u0027t\nfind standard includes or includes it can\u0027t find.\n\n---\n!ENTRY org.eclipse.cdt.core 4 4 Sep 11, 2003 03:04:18.187\n!MESSAGE Preprocessor Exception\n!STACK 0\norg.eclipse.cdt.core.parser.ScannerException: Inclusion not found: admxrc2.h\n\tat org.eclipse.cdt.internal.core.parser.Scanner.handleInclusion(Scanner.java:321)\n\tat org.eclipse.cdt.internal.core.parser.Scanner.poundInclude(Scanner.java:2025)\n\tat org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:1012)\n\tat org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:604)\n\tat org.eclipse.cdt.internal.core.parser.Preprocessor.process(Preprocessor.java:46)\n\tat\norg.eclipse.cdt.internal.core.sourcedependency.DependencyTree.add(DependencyTree.java:133)\n\tat\norg.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.addDocumentToTree(AddFileToDependencyTree.java:81)\n\tat\norg.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.execute(AddFileToDependencyTree.java:58)\n\tat\norg.eclipse.cdt.internal.core.search.processing.JobManager.run(JobManager.java:367)\n\tat java.lang.Thread.run(Thread.java:534)\n!ENTRY org.eclipse.cdt.core 4 4 Sep 11, 2003 03:04:18.250\n!MESSAGE Preprocessor Exception\n!STACK 0\norg.eclipse.cdt.core.parser.ScannerException: Inclusion not found: iostream\n\tat org.eclipse.cdt.internal.core.parser.Scanner.handleInclusion(Scanner.java:321)\n\tat org.eclipse.cdt.internal.core.parser.Scanner.poundInclude(Scanner.java:2025)\n\tat org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:1012)\n\tat org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:604)\n\tat org.eclipse.cdt.internal.core.parser.Preprocessor.process(Preprocessor.java:46)\n\tat\norg.eclipse.cdt.internal.core.sourcedependency.DependencyTree.add(DependencyTree.java:133)\n\tat\norg.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.addDocumentToTree(AddFileToDependencyTree.java:81)\n\tat\norg.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.execute(AddFileToDependencyTree.java:58)\n\tat\norg.eclipse.cdt.internal.core.search.processing.JobManager.run(JobManager.java:367)\n\tat java.lang.Thread.run(Thread.java:534)",
    "hmm, probably was a little to fast.\n\nThe project is a C++ Standard Make Project.\nI have CTAGS off and the other two on.\n\nI\u0027m using the MinGW-toolchain under Win2k. Do I have to add the MinGW\u0027s include\npaths for C and for C++ in the Projects Settings on the last Pref.-Page? And in\nwhich notation, should I use \\ or / to separate paths?\n\nThe admxrc2.h is a C header of an additional API I use in the project.\n",
    "This bug is still valid, as on second thought it does not seem to be a good \nidea to fill the error log with parse errors while we index (since there \npotentially can be 100\u0027s of parses on a resource changed element.  \n\nEven if you get the include paths right, with what is currently there for the \ncomplete C++ parser will still yield failures, and still flood the message.  \nBut yes, you can enter them on that setting and they should get discovered by \nthe indexer.  ",
    "Well, I\u0027m not sure what dimensions it will take but maybe you could provide\nwarning problem markers in the task log with the hint to set include-paths \nwithin the project settings? \n\nBtw., with \"preconfigured\" toolchains you could provide system headers by\ndefault when the path to the toolchain is being set by the user, since they\nusually have final place in the filesystem. Like having a preference page in the\nC/C++ with a selection box for each available toolchain which changes settings\npage for binary paths (i.e. /usr/bin, C:\\MinGW\\bin ), system header paths (i.e.\n-I/usr/include, -IC:\\MinGW\\include, -IC:\\MinGW\\include\\c++), system libs (\n-L/path/to/default-libs -lc). \nThough, when users install CDT they select their toolchain, adapt their default\npaths once. That way, you could get rid of the \"Build error: Launching failed\"\nposts in the newsgroups and you have knowledge about where the system headers\nare when indexing is going.\nWhen they build their project, they set project specific stuff in the project\nsettings when using managed build.\nThat brings me to the point to ask for more documentation on how to write\ntoolchain-specific/managed-build plugins for CDT. ",
    "We\u0027ve come to a decision on how to do this involving the Search dialog and a \nnew log file.  \n\nReassigning the defect to Bogdan.  ",
    "Critical defects should not sit on the shelf too long Bogdan ... we do plan on \nGA\u0027ing in a couple of weeks ... ",
    "Created a new CDT log in .metadata/.plugins/org.cdt.core to log indexer/parser \nfailures.\n\nBG",
    "*** Bug 43490 has been marked as a duplicate of this bug. ***"
  ],
  "commentCreationDates": [
    "2003-09-11T03:58:33+02:00",
    "2003-09-11T04:24:27+02:00",
    "2003-09-11T14:30:01+02:00",
    "2003-09-11T22:43:14+02:00",
    "2003-09-12T16:04:06+02:00",
    "2003-09-22T19:59:16+02:00",
    "2003-10-01T15:46:44+02:00",
    "2003-10-18T02:18:25+02:00"
  ],
  "traces": [
    {
      "exceptionType": "org.eclipse.cdt.core.parser.ScannerException",
      "message": "Inclusion not found: admxrc2.h",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.handleInclusion",
          "source": "Scanner.java:321"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.poundInclude",
          "source": "Scanner.java:2025"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.nextToken",
          "source": "Scanner.java:1012"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.nextToken",
          "source": "Scanner.java:604"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Preprocessor.process",
          "source": "Preprocessor.java:46"
        },
        {
          "method": "org.eclipse.cdt.internal.core.sourcedependency.DependencyTree.add",
          "source": "DependencyTree.java:133"
        },
        {
          "method": "org.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.addDocumentToTree",
          "source": "AddFileToDependencyTree.java:81"
        },
        {
          "method": "org.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.execute",
          "source": "AddFileToDependencyTree.java:58"
        },
        {
          "method": "org.eclipse.cdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:367"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 0,
      "commentIndex": 0,
      "bugId": "42929",
      "date": "2003-09-11T03:58:33+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "critical"
    },
    {
      "exceptionType": "org.eclipse.cdt.core.parser.ScannerException",
      "message": "Inclusion not found: iostream",
      "elements": [
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.handleInclusion",
          "source": "Scanner.java:321"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.poundInclude",
          "source": "Scanner.java:2025"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.nextToken",
          "source": "Scanner.java:1012"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Scanner.nextToken",
          "source": "Scanner.java:604"
        },
        {
          "method": "org.eclipse.cdt.internal.core.parser.Preprocessor.process",
          "source": "Preprocessor.java:46"
        },
        {
          "method": "org.eclipse.cdt.internal.core.sourcedependency.DependencyTree.add",
          "source": "DependencyTree.java:133"
        },
        {
          "method": "org.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.addDocumentToTree",
          "source": "AddFileToDependencyTree.java:81"
        },
        {
          "method": "org.eclipse.cdt.internal.core.sourcedependency.AddFileToDependencyTree.execute",
          "source": "AddFileToDependencyTree.java:58"
        },
        {
          "method": "org.eclipse.cdt.internal.core.search.processing.JobManager.run",
          "source": "JobManager.java:367"
        },
        {
          "method": "java.lang.Thread.run",
          "source": "Thread.java:534"
        }
      ],
      "number": 1,
      "commentIndex": 0,
      "bugId": "42929",
      "date": "2003-09-11T03:58:33+02:00",
      "product": "CDT",
      "component": "CDT-parser",
      "severity": "critical"
    }
  ],
  "groupId": "42929",
  "bugId": "42929",
  "date": "2003-09-11T03:58:33+02:00",
  "product": "CDT",
  "component": "CDT-parser",
  "severity": "critical"
}